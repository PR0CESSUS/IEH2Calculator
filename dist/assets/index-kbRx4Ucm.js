var Bo=Object.defineProperty;var Lo=(e,t,s)=>t in e?Bo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var o=(e,t,s)=>(Lo(e,typeof t!="symbol"?t+"":t,s),s),Un=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var R=(e,t,s)=>(Un(e,t,"read from private field"),s?s.call(e):t.get(e)),Kt=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},es=(e,t,s,i)=>(Un(e,t,"write to private field"),i?i.call(e,s):t.set(e,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const c of document.querySelectorAll('link[rel="modulepreload"]'))i(c);new MutationObserver(c=>{for(const l of c)if(l.type==="childList")for(const M of l.addedNodes)M.tagName==="LINK"&&M.rel==="modulepreload"&&i(M)}).observe(document,{childList:!0,subtree:!0});function s(c){const l={};return c.integrity&&(l.integrity=c.integrity),c.referrerPolicy&&(l.referrerPolicy=c.referrerPolicy),c.crossOrigin==="use-credentials"?l.credentials="include":c.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function i(c){if(c.ep)return;c.ep=!0;const l=s(c);fetch(c.href,l)}})();/**
* @vue/shared v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function an(e,t){const s=new Set(e.split(","));return t?i=>s.has(i.toLowerCase()):i=>s.has(i)}const Pt={},Ni=[],Ds=()=>{},To=()=>!1,sa=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),nn=e=>e.startsWith("onUpdate:"),Qt=Object.assign,ln=(e,t)=>{const s=e.indexOf(t);s>-1&&e.splice(s,1)},xo=Object.prototype.hasOwnProperty,ct=(e,t)=>xo.call(e,t),Fe=Array.isArray,qi=e=>Br(e)==="[object Map]",Zi=e=>Br(e)==="[object Set]",Wn=e=>Br(e)==="[object Date]",Qe=e=>typeof e=="function",Jt=e=>typeof e=="string",mi=e=>typeof e=="symbol",vt=e=>e!==null&&typeof e=="object",Xl=e=>(vt(e)||Qe(e))&&Qe(e.then)&&Qe(e.catch),jl=Object.prototype.toString,Br=e=>jl.call(e),Go=e=>Br(e).slice(8,-1),Yl=e=>Br(e)==="[object Object]",un=e=>Jt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,Ur=an(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ia=e=>{const t=Object.create(null);return s=>t[s]||(t[s]=e(s))},Fo=/-(\w)/g,Gs=ia(e=>e.replace(Fo,(t,s)=>s?s.toUpperCase():"")),Io=/\B([A-Z])/g,wi=ia(e=>e.replace(Io,"-$1").toLowerCase()),ra=ia(e=>e.charAt(0).toUpperCase()+e.slice(1)),Aa=ia(e=>e?`on${ra(e)}`:""),Os=(e,t)=>!Object.is(e,t),Wr=(e,t)=>{for(let s=0;s<e.length;s++)e[s](t)},Jr=(e,t,s)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:s})},Mr=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let On;const Ql=()=>On||(On=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function on(e){if(Fe(e)){const t={};for(let s=0;s<e.length;s++){const i=e[s],c=Jt(i)?No(i):on(i);if(c)for(const l in c)t[l]=c[l]}return t}else if(Jt(e)||vt(e))return e}const Ho=/;(?![^(]*\))/g,_o=/:([^]+)/,Vo=/\/\*[^]*?\*\//g;function No(e){const t={};return e.replace(Vo,"").split(Ho).forEach(s=>{if(s){const i=s.split(_o);i.length>1&&(t[i[0].trim()]=i[1].trim())}}),t}function Ft(e){let t="";if(Jt(e))t=e;else if(Fe(e))for(let s=0;s<e.length;s++){const i=Ft(e[s]);i&&(t+=i+" ")}else if(vt(e))for(const s in e)e[s]&&(t+=s+" ");return t.trim()}const qo="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Uo=an(qo);function Zl(e){return!!e||e===""}function Wo(e,t){if(e.length!==t.length)return!1;let s=!0;for(let i=0;s&&i<e.length;i++)s=Oi(e[i],t[i]);return s}function Oi(e,t){if(e===t)return!0;let s=Wn(e),i=Wn(t);if(s||i)return s&&i?e.getTime()===t.getTime():!1;if(s=mi(e),i=mi(t),s||i)return e===t;if(s=Fe(e),i=Fe(t),s||i)return s&&i?Wo(e,t):!1;if(s=vt(e),i=vt(t),s||i){if(!s||!i)return!1;const c=Object.keys(e).length,l=Object.keys(t).length;if(c!==l)return!1;for(const M in e){const b=e.hasOwnProperty(M),k=t.hasOwnProperty(M);if(b&&!k||!b&&k||!Oi(e[M],t[M]))return!1}}return String(e)===String(t)}function cn(e,t){return e.findIndex(s=>Oi(s,t))}const V=e=>Jt(e)?e:e==null?"":Fe(e)||vt(e)&&(e.toString===jl||!Qe(e.toString))?JSON.stringify(e,Kl,2):String(e),Kl=(e,t)=>t&&t.__v_isRef?Kl(e,t.value):qi(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((s,[i,c],l)=>(s[ba(i,l)+" =>"]=c,s),{})}:Zi(t)?{[`Set(${t.size})`]:[...t.values()].map(s=>ba(s))}:mi(t)?ba(t):vt(t)&&!Fe(t)&&!Yl(t)?String(t):t,ba=(e,t="")=>{var s;return mi(e)?`Symbol(${(s=e.description)!=null?s:t})`:e};/**
* @vue/reactivity v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let gs;class eu{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=gs,!t&&gs&&(this.index=(gs.scopes||(gs.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const s=gs;try{return gs=this,t()}finally{gs=s}}}on(){gs=this}off(){gs=this.parent}stop(t){if(this._active){let s,i;for(s=0,i=this.effects.length;s<i;s++)this.effects[s].stop();for(s=0,i=this.cleanups.length;s<i;s++)this.cleanups[s]();if(this.scopes)for(s=0,i=this.scopes.length;s<i;s++)this.scopes[s].stop(!0);if(!this.detached&&this.parent&&!t){const c=this.parent.scopes.pop();c&&c!==this&&(this.parent.scopes[this.index]=c,c.index=this.index)}this.parent=void 0,this._active=!1}}}function tu(e){return new eu(e)}function Oo(e,t=gs){t&&t.active&&t.effects.push(e)}function hn(){return gs}function su(e){gs&&gs.cleanups.push(e)}let vi;class fn{constructor(t,s,i,c){this.fn=t,this.trigger=s,this.scheduler=i,this.active=!0,this.deps=[],this._dirtyLevel=2,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,Oo(this,c)}get dirty(){if(this._dirtyLevel===1){Li();for(let t=0;t<this._depsLength;t++){const s=this.deps[t];if(s.computed&&($o(s.computed),this._dirtyLevel>=2))break}this._dirtyLevel<2&&(this._dirtyLevel=0),Ti()}return this._dirtyLevel>=2}set dirty(t){this._dirtyLevel=t?2:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let t=di,s=vi;try{return di=!0,vi=this,this._runnings++,$n(this),this.fn()}finally{zn(this),this._runnings--,vi=s,di=t}}stop(){var t;this.active&&($n(this),zn(this),(t=this.onStop)==null||t.call(this),this.active=!1)}}function $o(e){return e.value}function $n(e){e._trackId++,e._depsLength=0}function zn(e){if(e.deps&&e.deps.length>e._depsLength){for(let t=e._depsLength;t<e.deps.length;t++)iu(e.deps[t],e);e.deps.length=e._depsLength}}function iu(e,t){const s=e.get(t);s!==void 0&&t._trackId!==s&&(e.delete(t),e.size===0&&e.cleanup())}let di=!0,_a=0;const ru=[];function Li(){ru.push(di),di=!1}function Ti(){const e=ru.pop();di=e===void 0?!0:e}function dn(){_a++}function pn(){for(_a--;!_a&&Va.length;)Va.shift()()}function au(e,t,s){if(t.get(e)!==e._trackId){t.set(e,e._trackId);const i=e.deps[e._depsLength];i!==t?(i&&iu(i,e),e.deps[e._depsLength++]=t):e._depsLength++}}const Va=[];function nu(e,t,s){dn();for(const i of e.keys())if(i._dirtyLevel<t&&e.get(i)===i._trackId){const c=i._dirtyLevel;i._dirtyLevel=t,c===0&&(i._shouldSchedule=!0,i.trigger())}lu(e),pn()}function lu(e){for(const t of e.keys())t.scheduler&&t._shouldSchedule&&(!t._runnings||t.allowRecurse)&&e.get(t)===t._trackId&&(t._shouldSchedule=!1,Va.push(t.scheduler))}const uu=(e,t)=>{const s=new Map;return s.cleanup=e,s.computed=t,s},Xr=new WeakMap,Bi=Symbol(""),Na=Symbol("");function hs(e,t,s){if(di&&vi){let i=Xr.get(e);i||Xr.set(e,i=new Map);let c=i.get(s);c||i.set(s,c=uu(()=>i.delete(s))),au(vi,c)}}function js(e,t,s,i,c,l){const M=Xr.get(e);if(!M)return;let b=[];if(t==="clear")b=[...M.values()];else if(s==="length"&&Fe(e)){const k=Number(i);M.forEach((P,y)=>{(y==="length"||!mi(y)&&y>=k)&&b.push(P)})}else switch(s!==void 0&&b.push(M.get(s)),t){case"add":Fe(e)?un(s)&&b.push(M.get("length")):(b.push(M.get(Bi)),qi(e)&&b.push(M.get(Na)));break;case"delete":Fe(e)||(b.push(M.get(Bi)),qi(e)&&b.push(M.get(Na)));break;case"set":qi(e)&&b.push(M.get(Bi));break}dn();for(const k of b)k&&nu(k,2);pn()}function zo(e,t){var s;return(s=Xr.get(e))==null?void 0:s.get(t)}const Jo=an("__proto__,__v_isRef,__isVue"),ou=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(mi)),Jn=Xo();function Xo(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...s){const i=ft(this);for(let l=0,M=this.length;l<M;l++)hs(i,"get",l+"");const c=i[t](...s);return c===-1||c===!1?i[t](...s.map(ft)):c}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...s){Li(),dn();const i=ft(this)[t].apply(this,s);return pn(),Ti(),i}}),e}function jo(e){const t=ft(this);return hs(t,"has",e),t.hasOwnProperty(e)}class cu{constructor(t=!1,s=!1){this._isReadonly=t,this._shallow=s}get(t,s,i){const c=this._isReadonly,l=this._shallow;if(s==="__v_isReactive")return!c;if(s==="__v_isReadonly")return c;if(s==="__v_isShallow")return l;if(s==="__v_raw")return i===(c?l?uc:pu:l?du:fu).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(i)?t:void 0;const M=Fe(t);if(!c){if(M&&ct(Jn,s))return Reflect.get(Jn,s,i);if(s==="hasOwnProperty")return jo}const b=Reflect.get(t,s,i);return(mi(s)?ou.has(s):Jo(s))||(c||hs(t,"get",s),l)?b:Wt(b)?M&&un(s)?b:b.value:vt(b)?c?Mn(b):Ki(b):b}}class hu extends cu{constructor(t=!1){super(!1,t)}set(t,s,i,c){let l=t[s];if(!this._shallow){const k=$i(l);if(!jr(i)&&!$i(i)&&(l=ft(l),i=ft(i)),!Fe(t)&&Wt(l)&&!Wt(i))return k?!1:(l.value=i,!0)}const M=Fe(t)&&un(s)?Number(s)<t.length:ct(t,s),b=Reflect.set(t,s,i,c);return t===ft(c)&&(M?Os(i,l)&&js(t,"set",s,i):js(t,"add",s,i)),b}deleteProperty(t,s){const i=ct(t,s);t[s];const c=Reflect.deleteProperty(t,s);return c&&i&&js(t,"delete",s,void 0),c}has(t,s){const i=Reflect.has(t,s);return(!mi(s)||!ou.has(s))&&hs(t,"has",s),i}ownKeys(t){return hs(t,"iterate",Fe(t)?"length":Bi),Reflect.ownKeys(t)}}class Yo extends cu{constructor(t=!1){super(!0,t)}set(t,s){return!0}deleteProperty(t,s){return!0}}const Qo=new hu,Zo=new Yo,Ko=new hu(!0),gn=e=>e,aa=e=>Reflect.getPrototypeOf(e);function xr(e,t,s=!1,i=!1){e=e.__v_raw;const c=ft(e),l=ft(t);s||(Os(t,l)&&hs(c,"get",t),hs(c,"get",l));const{has:M}=aa(c),b=i?gn:s?Sn:wr;if(M.call(c,t))return b(e.get(t));if(M.call(c,l))return b(e.get(l));e!==c&&e.get(t)}function Gr(e,t=!1){const s=this.__v_raw,i=ft(s),c=ft(e);return t||(Os(e,c)&&hs(i,"has",e),hs(i,"has",c)),e===c?s.has(e):s.has(e)||s.has(c)}function Fr(e,t=!1){return e=e.__v_raw,!t&&hs(ft(e),"iterate",Bi),Reflect.get(e,"size",e)}function Xn(e){e=ft(e);const t=ft(this);return aa(t).has.call(t,e)||(t.add(e),js(t,"add",e,e)),this}function jn(e,t){t=ft(t);const s=ft(this),{has:i,get:c}=aa(s);let l=i.call(s,e);l||(e=ft(e),l=i.call(s,e));const M=c.call(s,e);return s.set(e,t),l?Os(t,M)&&js(s,"set",e,t):js(s,"add",e,t),this}function Yn(e){const t=ft(this),{has:s,get:i}=aa(t);let c=s.call(t,e);c||(e=ft(e),c=s.call(t,e)),i&&i.call(t,e);const l=t.delete(e);return c&&js(t,"delete",e,void 0),l}function Qn(){const e=ft(this),t=e.size!==0,s=e.clear();return t&&js(e,"clear",void 0,void 0),s}function Ir(e,t){return function(i,c){const l=this,M=l.__v_raw,b=ft(M),k=t?gn:e?Sn:wr;return!e&&hs(b,"iterate",Bi),M.forEach((P,y)=>i.call(c,k(P),k(y),l))}}function Hr(e,t,s){return function(...i){const c=this.__v_raw,l=ft(c),M=qi(l),b=e==="entries"||e===Symbol.iterator&&M,k=e==="keys"&&M,P=c[e](...i),y=s?gn:t?Sn:wr;return!t&&hs(l,"iterate",k?Na:Bi),{next(){const{value:T,done:O}=P.next();return O?{value:T,done:O}:{value:b?[y(T[0]),y(T[1])]:y(T),done:O}},[Symbol.iterator](){return this}}}}function ti(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function ec(){const e={get(l){return xr(this,l)},get size(){return Fr(this)},has:Gr,add:Xn,set:jn,delete:Yn,clear:Qn,forEach:Ir(!1,!1)},t={get(l){return xr(this,l,!1,!0)},get size(){return Fr(this)},has:Gr,add:Xn,set:jn,delete:Yn,clear:Qn,forEach:Ir(!1,!0)},s={get(l){return xr(this,l,!0)},get size(){return Fr(this,!0)},has(l){return Gr.call(this,l,!0)},add:ti("add"),set:ti("set"),delete:ti("delete"),clear:ti("clear"),forEach:Ir(!0,!1)},i={get(l){return xr(this,l,!0,!0)},get size(){return Fr(this,!0)},has(l){return Gr.call(this,l,!0)},add:ti("add"),set:ti("set"),delete:ti("delete"),clear:ti("clear"),forEach:Ir(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{e[l]=Hr(l,!1,!1),s[l]=Hr(l,!0,!1),t[l]=Hr(l,!1,!0),i[l]=Hr(l,!0,!0)}),[e,s,t,i]}const[tc,sc,ic,rc]=ec();function mn(e,t){const s=t?e?rc:ic:e?sc:tc;return(i,c,l)=>c==="__v_isReactive"?!e:c==="__v_isReadonly"?e:c==="__v_raw"?i:Reflect.get(ct(s,c)&&c in i?s:i,c,l)}const ac={get:mn(!1,!1)},nc={get:mn(!1,!0)},lc={get:mn(!0,!1)},fu=new WeakMap,du=new WeakMap,pu=new WeakMap,uc=new WeakMap;function oc(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function cc(e){return e.__v_skip||!Object.isExtensible(e)?0:oc(Go(e))}function Ki(e){return $i(e)?e:wn(e,!1,Qo,ac,fu)}function gu(e){return wn(e,!1,Ko,nc,du)}function Mn(e){return wn(e,!0,Zo,lc,pu)}function wn(e,t,s,i,c){if(!vt(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const l=c.get(e);if(l)return l;const M=cc(e);if(M===0)return e;const b=new Proxy(e,M===2?i:s);return c.set(e,b),b}function pi(e){return $i(e)?pi(e.__v_raw):!!(e&&e.__v_isReactive)}function $i(e){return!!(e&&e.__v_isReadonly)}function jr(e){return!!(e&&e.__v_isShallow)}function mu(e){return pi(e)||$i(e)}function ft(e){const t=e&&e.__v_raw;return t?ft(t):e}function na(e){return Jr(e,"__v_skip",!0),e}const wr=e=>vt(e)?Ki(e):e,Sn=e=>vt(e)?Mn(e):e;class Mu{constructor(t,s,i,c){this._setter=s,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new fn(()=>t(this._value),()=>lr(this,1),()=>this.dep&&lu(this.dep)),this.effect.computed=this,this.effect.active=this._cacheable=!c,this.__v_isReadonly=i}get value(){const t=ft(this);return(!t._cacheable||t.effect.dirty)&&Os(t._value,t._value=t.effect.run())&&lr(t,2),An(t),t.effect._dirtyLevel>=1&&lr(t,1),t._value}set value(t){this._setter(t)}get _dirty(){return this.effect.dirty}set _dirty(t){this.effect.dirty=t}}function hc(e,t,s=!1){let i,c;const l=Qe(e);return l?(i=e,c=Ds):(i=e.get,c=e.set),new Mu(i,c,l||!c,s)}function An(e){di&&vi&&(e=ft(e),au(vi,e.dep||(e.dep=uu(()=>e.dep=void 0,e instanceof Mu?e:void 0))))}function lr(e,t=2,s){e=ft(e);const i=e.dep;i&&nu(i,t)}function Wt(e){return!!(e&&e.__v_isRef===!0)}function Ct(e){return Su(e,!1)}function wu(e){return Su(e,!0)}function Su(e,t){return Wt(e)?e:new fc(e,t)}class fc{constructor(t,s){this.__v_isShallow=s,this.dep=void 0,this.__v_isRef=!0,this._rawValue=s?t:ft(t),this._value=s?t:wr(t)}get value(){return An(this),this._value}set value(t){const s=this.__v_isShallow||jr(t)||$i(t);t=s?t:ft(t),Os(t,this._rawValue)&&(this._rawValue=t,this._value=s?t:wr(t),lr(this,2))}}function A(e){return Wt(e)?e.value:e}const dc={get:(e,t,s)=>A(Reflect.get(e,t,s)),set:(e,t,s,i)=>{const c=e[t];return Wt(c)&&!Wt(s)?(c.value=s,!0):Reflect.set(e,t,s,i)}};function Au(e){return pi(e)?e:new Proxy(e,dc)}class pc{constructor(t){this.dep=void 0,this.__v_isRef=!0;const{get:s,set:i}=t(()=>An(this),()=>lr(this));this._get=s,this._set=i}get value(){return this._get()}set value(t){this._set(t)}}function gc(e){return new pc(e)}function mc(e){const t=Fe(e)?new Array(e.length):{};for(const s in e)t[s]=wc(e,s);return t}class Mc{constructor(t,s,i){this._object=t,this._key=s,this._defaultValue=i,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return zo(ft(this._object),this._key)}}function wc(e,t,s){const i=e[t];return Wt(i)?i:new Mc(e,t,s)}/**
* @vue/runtime-core v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function gi(e,t,s,i){let c;try{c=i?e(...i):e()}catch(l){la(l,t,s)}return c}function xs(e,t,s,i){if(Qe(e)){const l=gi(e,t,s,i);return l&&Xl(l)&&l.catch(M=>{la(M,t,s)}),l}const c=[];for(let l=0;l<e.length;l++)c.push(xs(e[l],t,s,i));return c}function la(e,t,s,i=!0){const c=t?t.vnode:null;if(t){let l=t.parent;const M=t.proxy,b=`https://vuejs.org/error-reference/#runtime-${s}`;for(;l;){const P=l.ec;if(P){for(let y=0;y<P.length;y++)if(P[y](e,M,b)===!1)return}l=l.parent}const k=t.appContext.config.errorHandler;if(k){gi(k,null,10,[e,M,b]);return}}Sc(e,s,c,i)}function Sc(e,t,s,i=!0){console.error(e)}let Sr=!1,qa=!1;const as=[];let Ws=0;const Ui=[];let li=null,yi=0;const bu=Promise.resolve();let bn=null;function er(e){const t=bn||bu;return e?t.then(this?e.bind(this):e):t}function Ac(e){let t=Ws+1,s=as.length;for(;t<s;){const i=t+s>>>1,c=as[i],l=Ar(c);l<e||l===e&&c.pre?t=i+1:s=i}return t}function kn(e){(!as.length||!as.includes(e,Sr&&e.allowRecurse?Ws+1:Ws))&&(e.id==null?as.push(e):as.splice(Ac(e.id),0,e),ku())}function ku(){!Sr&&!qa&&(qa=!0,bn=bu.then(Du))}function bc(e){const t=as.indexOf(e);t>Ws&&as.splice(t,1)}function kc(e){Fe(e)?Ui.push(...e):(!li||!li.includes(e,e.allowRecurse?yi+1:yi))&&Ui.push(e),ku()}function Zn(e,t,s=Sr?Ws+1:0){for(;s<as.length;s++){const i=as[s];if(i&&i.pre){if(e&&i.id!==e.uid)continue;as.splice(s,1),s--,i()}}}function Eu(e){if(Ui.length){const t=[...new Set(Ui)].sort((s,i)=>Ar(s)-Ar(i));if(Ui.length=0,li){li.push(...t);return}for(li=t,yi=0;yi<li.length;yi++)li[yi]();li=null,yi=0}}const Ar=e=>e.id==null?1/0:e.id,Ec=(e,t)=>{const s=Ar(e)-Ar(t);if(s===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return s};function Du(e){qa=!1,Sr=!0,as.sort(Ec);try{for(Ws=0;Ws<as.length;Ws++){const t=as[Ws];t&&t.active!==!1&&gi(t,null,14)}}finally{Ws=0,as.length=0,Eu(),Sr=!1,bn=null,(as.length||Ui.length)&&Du()}}function Dc(e,t,...s){if(e.isUnmounted)return;const i=e.vnode.props||Pt;let c=s;const l=t.startsWith("update:"),M=l&&t.slice(7);if(M&&M in i){const y=`${M==="modelValue"?"model":M}Modifiers`,{number:T,trim:O}=i[y]||Pt;O&&(c=s.map(Y=>Jt(Y)?Y.trim():Y)),T&&(c=s.map(Mr))}let b,k=i[b=Aa(t)]||i[b=Aa(Gs(t))];!k&&l&&(k=i[b=Aa(wi(t))]),k&&xs(k,e,6,c);const P=i[b+"Once"];if(P){if(!e.emitted)e.emitted={};else if(e.emitted[b])return;e.emitted[b]=!0,xs(P,e,6,c)}}function Ru(e,t,s=!1){const i=t.emitsCache,c=i.get(e);if(c!==void 0)return c;const l=e.emits;let M={},b=!1;if(!Qe(e)){const k=P=>{const y=Ru(P,t,!0);y&&(b=!0,Qt(M,y))};!s&&t.mixins.length&&t.mixins.forEach(k),e.extends&&k(e.extends),e.mixins&&e.mixins.forEach(k)}return!l&&!b?(vt(e)&&i.set(e,null),null):(Fe(l)?l.forEach(k=>M[k]=null):Qt(M,l),vt(e)&&i.set(e,M),M)}function ua(e,t){return!e||!sa(t)?!1:(t=t.slice(2).replace(/Once$/,""),ct(e,t[0].toLowerCase()+t.slice(1))||ct(e,wi(t))||ct(e,t))}let Ut=null,oa=null;function Yr(e){const t=Ut;return Ut=e,oa=e&&e.type.__scopeId||null,t}function $s(e){oa=e}function zs(){oa=null}function ut(e,t=Ut,s){if(!t||e._n)return e;const i=(...c)=>{i._d&&ol(-1);const l=Yr(t);let M;try{M=e(...c)}finally{Yr(l),i._d&&ol(1)}return M};return i._n=!0,i._c=!0,i._d=!0,i}function ka(e){const{type:t,vnode:s,proxy:i,withProxy:c,props:l,propsOptions:[M],slots:b,attrs:k,emit:P,render:y,renderCache:T,data:O,setupState:Y,ctx:Q,inheritAttrs:ge}=e;let Se,ke;const Ve=Yr(e);try{if(s.shapeFlag&4){const rt=c||i,ot=rt;Se=Us(y.call(ot,rt,T,l,Y,O,Q)),ke=k}else{const rt=t;Se=Us(rt.length>1?rt(l,{attrs:k,slots:b,emit:P}):rt(l,null)),ke=t.props?k:Rc(k)}}catch(rt){hr.length=0,la(rt,e,1),Se=X(Mi)}let ze=Se;if(ke&&ge!==!1){const rt=Object.keys(ke),{shapeFlag:ot}=ze;rt.length&&ot&7&&(M&&rt.some(nn)&&(ke=Cc(ke,M)),ze=Ji(ze,ke))}return s.dirs&&(ze=Ji(ze),ze.dirs=ze.dirs?ze.dirs.concat(s.dirs):s.dirs),s.transition&&(ze.transition=s.transition),Se=ze,Yr(Ve),Se}const Rc=e=>{let t;for(const s in e)(s==="class"||s==="style"||sa(s))&&((t||(t={}))[s]=e[s]);return t},Cc=(e,t)=>{const s={};for(const i in e)(!nn(i)||!(i.slice(9)in t))&&(s[i]=e[i]);return s};function yc(e,t,s){const{props:i,children:c,component:l}=e,{props:M,children:b,patchFlag:k}=t,P=l.emitsOptions;if(t.dirs||t.transition)return!0;if(s&&k>=0){if(k&1024)return!0;if(k&16)return i?Kn(i,M,P):!!M;if(k&8){const y=t.dynamicProps;for(let T=0;T<y.length;T++){const O=y[T];if(M[O]!==i[O]&&!ua(P,O))return!0}}}else return(c||b)&&(!b||!b.$stable)?!0:i===M?!1:i?M?Kn(i,M,P):!0:!!M;return!1}function Kn(e,t,s){const i=Object.keys(t);if(i.length!==Object.keys(e).length)return!0;for(let c=0;c<i.length;c++){const l=i[c];if(t[l]!==e[l]&&!ua(s,l))return!0}return!1}function Pc({vnode:e,parent:t},s){for(;t;){const i=t.subTree;if(i.suspense&&i.suspense.activeBranch===e&&(i.el=e.el),i===e)(e=t.vnode).el=s,t=t.parent;else break}}const Cu="components";function el(e,t){return Bc(Cu,e,!0,t)||e}const vc=Symbol.for("v-ndc");function Bc(e,t,s=!0,i=!1){const c=Ut||Yt;if(c){const l=c.type;if(e===Cu){const b=Eh(l,!1);if(b&&(b===t||b===Gs(t)||b===ra(Gs(t))))return l}const M=tl(c[e]||l[e],t)||tl(c.appContext[e],t);return!M&&i?l:M}}function tl(e,t){return e&&(e[t]||e[Gs(t)]||e[ra(Gs(t))])}const Lc=e=>e.__isSuspense;function Tc(e,t){t&&t.pendingBranch?Fe(e)?t.effects.push(...e):t.effects.push(e):kc(e)}const xc=Symbol.for("v-scx"),Gc=()=>tt(xc);function Fc(e,t){return En(e,null,{flush:"sync"})}const _r={};function rs(e,t,s){return En(e,t,s)}function En(e,t,{immediate:s,deep:i,flush:c,once:l,onTrack:M,onTrigger:b}=Pt){if(t&&l){const Je=t;t=(...Gt)=>{Je(...Gt),ot()}}const k=Yt,P=Je=>i===!0?Je:Pi(Je,i===!1?1:void 0);let y,T=!1,O=!1;if(Wt(e)?(y=()=>e.value,T=jr(e)):pi(e)?(y=()=>P(e),T=!0):Fe(e)?(O=!0,T=e.some(Je=>pi(Je)||jr(Je)),y=()=>e.map(Je=>{if(Wt(Je))return Je.value;if(pi(Je))return P(Je);if(Qe(Je))return gi(Je,k,2)})):Qe(e)?t?y=()=>gi(e,k,2):y=()=>(Y&&Y(),xs(e,k,3,[Q])):y=Ds,t&&i){const Je=y;y=()=>Pi(Je())}let Y,Q=Je=>{Y=ze.onStop=()=>{gi(Je,k,4),Y=ze.onStop=void 0}},ge;if(pa)if(Q=Ds,t?s&&xs(t,k,3,[y(),O?[]:void 0,Q]):y(),c==="sync"){const Je=Gc();ge=Je.__watcherHandles||(Je.__watcherHandles=[])}else return Ds;let Se=O?new Array(e.length).fill(_r):_r;const ke=()=>{if(!(!ze.active||!ze.dirty))if(t){const Je=ze.run();(i||T||(O?Je.some((Gt,Ke)=>Os(Gt,Se[Ke])):Os(Je,Se)))&&(Y&&Y(),xs(t,k,3,[Je,Se===_r?void 0:O&&Se[0]===_r?[]:Se,Q]),Se=Je)}else ze.run()};ke.allowRecurse=!!t;let Ve;c==="sync"?Ve=ke:c==="post"?Ve=()=>cs(ke,k&&k.suspense):(ke.pre=!0,k&&(ke.id=k.uid),Ve=()=>kn(ke));const ze=new fn(y,Ds,Ve),rt=hn(),ot=()=>{ze.stop(),rt&&ln(rt.effects,ze)};return t?s?ke():Se=ze.run():c==="post"?cs(ze.run.bind(ze),k&&k.suspense):ze.run(),ge&&ge.push(ot),ot}function Ic(e,t,s){const i=this.proxy,c=Jt(e)?e.includes(".")?yu(i,e):()=>i[e]:e.bind(i,i);let l;Qe(t)?l=t:(l=t.handler,s=t);const M=Lr(this),b=En(c,l.bind(i),s);return M(),b}function yu(e,t){const s=t.split(".");return()=>{let i=e;for(let c=0;c<s.length&&i;c++)i=i[s[c]];return i}}function Pi(e,t,s=0,i){if(!vt(e)||e.__v_skip)return e;if(t&&t>0){if(s>=t)return e;s++}if(i=i||new Set,i.has(e))return e;if(i.add(e),Wt(e))Pi(e.value,t,s,i);else if(Fe(e))for(let c=0;c<e.length;c++)Pi(e[c],t,s,i);else if(Zi(e)||qi(e))e.forEach(c=>{Pi(c,t,s,i)});else if(Yl(e))for(const c in e)Pi(e[c],t,s,i);return e}function ve(e,t){if(Ut===null)return e;const s=ga(Ut)||Ut.proxy,i=e.dirs||(e.dirs=[]);for(let c=0;c<t.length;c++){let[l,M,b,k=Pt]=t[c];l&&(Qe(l)&&(l={mounted:l,updated:l}),l.deep&&Pi(M),i.push({dir:l,instance:s,value:M,oldValue:void 0,arg:b,modifiers:k}))}return e}function ki(e,t,s,i){const c=e.dirs,l=t&&t.dirs;for(let M=0;M<c.length;M++){const b=c[M];l&&(b.oldValue=l[M].value);let k=b.dir[i];k&&(Li(),xs(k,s,8,[e.el,b,e,t]),Ti())}}/*! #__NO_SIDE_EFFECTS__ */function st(e,t){return Qe(e)?Qt({name:e.name},t,{setup:e}):e}const ur=e=>!!e.type.__asyncLoader,Pu=e=>e.type.__isKeepAlive;function Hc(e,t){vu(e,"a",t)}function _c(e,t){vu(e,"da",t)}function vu(e,t,s=Yt){const i=e.__wdc||(e.__wdc=()=>{let c=s;for(;c;){if(c.isDeactivated)return;c=c.parent}return e()});if(ca(t,i,s),s){let c=s.parent;for(;c&&c.parent;)Pu(c.parent.vnode)&&Vc(i,t,s,c),c=c.parent}}function Vc(e,t,s,i){const c=ca(t,e,i,!0);Lu(()=>{ln(i[t],c)},s)}function ca(e,t,s=Yt,i=!1){if(s){const c=s[e]||(s[e]=[]),l=t.__weh||(t.__weh=(...M)=>{if(s.isUnmounted)return;Li();const b=Lr(s),k=xs(t,s,e,M);return b(),Ti(),k});return i?c.unshift(l):c.push(l),l}}const Qs=e=>(t,s=Yt)=>(!pa||e==="sp")&&ca(e,(...i)=>t(...i),s),Bu=Qs("bm"),ha=Qs("m"),Nc=Qs("bu"),qc=Qs("u"),Uc=Qs("bum"),Lu=Qs("um"),Wc=Qs("sp"),Oc=Qs("rtg"),$c=Qs("rtc");function zc(e,t=Yt){ca("ec",e,t)}function De(e,t,s,i){let c;const l=s&&s[i];if(Fe(e)||Jt(e)){c=new Array(e.length);for(let M=0,b=e.length;M<b;M++)c[M]=t(e[M],M,void 0,l&&l[M])}else if(typeof e=="number"){c=new Array(e);for(let M=0;M<e;M++)c[M]=t(M+1,M,void 0,l&&l[M])}else if(vt(e))if(e[Symbol.iterator])c=Array.from(e,(M,b)=>t(M,b,void 0,l&&l[b]));else{const M=Object.keys(e);c=new Array(M.length);for(let b=0,k=M.length;b<k;b++){const P=M[b];c[b]=t(e[P],P,b,l&&l[b])}}else c=[];return s&&(s[i]=c),c}function Dn(e,t){for(let s=0;s<t.length;s++){const i=t[s];if(Fe(i))for(let c=0;c<i.length;c++)e[i[c].name]=i[c].fn;else i&&(e[i.name]=i.key?(...c)=>{const l=i.fn(...c);return l&&(l.key=i.key),l}:i.fn)}return e}function zi(e,t,s={},i,c){if(Ut.isCE||Ut.parent&&ur(Ut.parent)&&Ut.parent.isCE)return t!=="default"&&(s.name=t),X("slot",s,i&&i());let l=e[t];l&&l._c&&(l._d=!1),U();const M=l&&Tu(l(s)),b=zt(re,{key:s.key||M&&M.key||`_${t}`},M||(i?i():[]),M&&e._===1?64:-2);return!c&&b.scopeId&&(b.slotScopeIds=[b.scopeId+"-s"]),l&&l._c&&(l._d=!0),b}function Tu(e){return e.some(t=>Kr(t)?!(t.type===Mi||t.type===re&&!Tu(t.children)):!0)?e:null}const Ua=e=>e?zu(e)?ga(e)||e.proxy:Ua(e.parent):null,or=Qt(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Ua(e.parent),$root:e=>Ua(e.root),$emit:e=>e.emit,$options:e=>Rn(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,kn(e.update)}),$nextTick:e=>e.n||(e.n=er.bind(e.proxy)),$watch:e=>Ic.bind(e)}),Ea=(e,t)=>e!==Pt&&!e.__isScriptSetup&&ct(e,t),Jc={get({_:e},t){const{ctx:s,setupState:i,data:c,props:l,accessCache:M,type:b,appContext:k}=e;let P;if(t[0]!=="$"){const Y=M[t];if(Y!==void 0)switch(Y){case 1:return i[t];case 2:return c[t];case 4:return s[t];case 3:return l[t]}else{if(Ea(i,t))return M[t]=1,i[t];if(c!==Pt&&ct(c,t))return M[t]=2,c[t];if((P=e.propsOptions[0])&&ct(P,t))return M[t]=3,l[t];if(s!==Pt&&ct(s,t))return M[t]=4,s[t];Wa&&(M[t]=0)}}const y=or[t];let T,O;if(y)return t==="$attrs"&&hs(e,"get",t),y(e);if((T=b.__cssModules)&&(T=T[t]))return T;if(s!==Pt&&ct(s,t))return M[t]=4,s[t];if(O=k.config.globalProperties,ct(O,t))return O[t]},set({_:e},t,s){const{data:i,setupState:c,ctx:l}=e;return Ea(c,t)?(c[t]=s,!0):i!==Pt&&ct(i,t)?(i[t]=s,!0):ct(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(l[t]=s,!0)},has({_:{data:e,setupState:t,accessCache:s,ctx:i,appContext:c,propsOptions:l}},M){let b;return!!s[M]||e!==Pt&&ct(e,M)||Ea(t,M)||(b=l[0])&&ct(b,M)||ct(i,M)||ct(or,M)||ct(c.config.globalProperties,M)},defineProperty(e,t,s){return s.get!=null?e._.accessCache[t]=0:ct(s,"value")&&this.set(e,t,s.value,null),Reflect.defineProperty(e,t,s)}};function Qr(e){return Fe(e)?e.reduce((t,s)=>(t[s]=null,t),{}):e}function xu(e,t){return!e||!t?e||t:Fe(e)&&Fe(t)?e.concat(t):Qt({},Qr(e),Qr(t))}let Wa=!0;function Xc(e){const t=Rn(e),s=e.proxy,i=e.ctx;Wa=!1,t.beforeCreate&&sl(t.beforeCreate,e,"bc");const{data:c,computed:l,methods:M,watch:b,provide:k,inject:P,created:y,beforeMount:T,mounted:O,beforeUpdate:Y,updated:Q,activated:ge,deactivated:Se,beforeDestroy:ke,beforeUnmount:Ve,destroyed:ze,unmounted:rt,render:ot,renderTracked:Je,renderTriggered:Gt,errorCaptured:Ke,serverPrefetch:Re,expose:at,inheritAttrs:Bt,components:fs,directives:ws,filters:bi}=t;if(P&&jc(P,i,null),M)for(const Et in M){const St=M[Et];Qe(St)&&(i[Et]=St.bind(s))}if(c){const Et=c.call(s,s);vt(Et)&&(e.data=Ki(Et))}if(Wa=!0,l)for(const Et in l){const St=l[Et],Js=Qe(St)?St.bind(s,s):Qe(St.get)?St.get.bind(s,s):Ds,ei=!Qe(St)&&Qe(St.set)?St.set.bind(s):Ds,Hs=Vt({get:Js,set:ei});Object.defineProperty(i,Et,{enumerable:!0,configurable:!0,get:()=>Hs.value,set:os=>Hs.value=os})}if(b)for(const Et in b)Gu(b[Et],i,s,Et);if(k){const Et=Qe(k)?k.call(s):k;Reflect.ownKeys(Et).forEach(St=>{cr(St,Et[St])})}y&&sl(y,e,"c");function Mt(Et,St){Fe(St)?St.forEach(Js=>Et(Js.bind(s))):St&&Et(St.bind(s))}if(Mt(Bu,T),Mt(ha,O),Mt(Nc,Y),Mt(qc,Q),Mt(Hc,ge),Mt(_c,Se),Mt(zc,Ke),Mt($c,Je),Mt(Oc,Gt),Mt(Uc,Ve),Mt(Lu,rt),Mt(Wc,Re),Fe(at))if(at.length){const Et=e.exposed||(e.exposed={});at.forEach(St=>{Object.defineProperty(Et,St,{get:()=>s[St],set:Js=>s[St]=Js})})}else e.exposed||(e.exposed={});ot&&e.render===Ds&&(e.render=ot),Bt!=null&&(e.inheritAttrs=Bt),fs&&(e.components=fs),ws&&(e.directives=ws)}function jc(e,t,s=Ds){Fe(e)&&(e=Oa(e));for(const i in e){const c=e[i];let l;vt(c)?"default"in c?l=tt(c.from||i,c.default,!0):l=tt(c.from||i):l=tt(c),Wt(l)?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>l.value,set:M=>l.value=M}):t[i]=l}}function sl(e,t,s){xs(Fe(e)?e.map(i=>i.bind(t.proxy)):e.bind(t.proxy),t,s)}function Gu(e,t,s,i){const c=i.includes(".")?yu(s,i):()=>s[i];if(Jt(e)){const l=t[e];Qe(l)&&rs(c,l)}else if(Qe(e))rs(c,e.bind(s));else if(vt(e))if(Fe(e))e.forEach(l=>Gu(l,t,s,i));else{const l=Qe(e.handler)?e.handler.bind(s):t[e.handler];Qe(l)&&rs(c,l,e)}}function Rn(e){const t=e.type,{mixins:s,extends:i}=t,{mixins:c,optionsCache:l,config:{optionMergeStrategies:M}}=e.appContext,b=l.get(t);let k;return b?k=b:!c.length&&!s&&!i?k=t:(k={},c.length&&c.forEach(P=>Zr(k,P,M,!0)),Zr(k,t,M)),vt(t)&&l.set(t,k),k}function Zr(e,t,s,i=!1){const{mixins:c,extends:l}=t;l&&Zr(e,l,s,!0),c&&c.forEach(M=>Zr(e,M,s,!0));for(const M in t)if(!(i&&M==="expose")){const b=Yc[M]||s&&s[M];e[M]=b?b(e[M],t[M]):t[M]}return e}const Yc={data:il,props:rl,emits:rl,methods:nr,computed:nr,beforeCreate:ns,created:ns,beforeMount:ns,mounted:ns,beforeUpdate:ns,updated:ns,beforeDestroy:ns,beforeUnmount:ns,destroyed:ns,unmounted:ns,activated:ns,deactivated:ns,errorCaptured:ns,serverPrefetch:ns,components:nr,directives:nr,watch:Zc,provide:il,inject:Qc};function il(e,t){return t?e?function(){return Qt(Qe(e)?e.call(this,this):e,Qe(t)?t.call(this,this):t)}:t:e}function Qc(e,t){return nr(Oa(e),Oa(t))}function Oa(e){if(Fe(e)){const t={};for(let s=0;s<e.length;s++)t[e[s]]=e[s];return t}return e}function ns(e,t){return e?[...new Set([].concat(e,t))]:t}function nr(e,t){return e?Qt(Object.create(null),e,t):t}function rl(e,t){return e?Fe(e)&&Fe(t)?[...new Set([...e,...t])]:Qt(Object.create(null),Qr(e),Qr(t??{})):t}function Zc(e,t){if(!e)return t;if(!t)return e;const s=Qt(Object.create(null),e);for(const i in t)s[i]=ns(e[i],t[i]);return s}function Fu(){return{app:null,config:{isNativeTag:To,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Kc=0;function eh(e,t){return function(i,c=null){Qe(i)||(i=Qt({},i)),c!=null&&!vt(c)&&(c=null);const l=Fu(),M=new WeakSet;let b=!1;const k=l.app={_uid:Kc++,_component:i,_props:c,_container:null,_context:l,_instance:null,version:Rh,get config(){return l.config},set config(P){},use(P,...y){return M.has(P)||(P&&Qe(P.install)?(M.add(P),P.install(k,...y)):Qe(P)&&(M.add(P),P(k,...y))),k},mixin(P){return l.mixins.includes(P)||l.mixins.push(P),k},component(P,y){return y?(l.components[P]=y,k):l.components[P]},directive(P,y){return y?(l.directives[P]=y,k):l.directives[P]},mount(P,y,T){if(!b){const O=X(i,c);return O.appContext=l,T===!0?T="svg":T===!1&&(T=void 0),y&&t?t(O,P):e(O,P,T),b=!0,k._container=P,P.__vue_app__=k,ga(O.component)||O.component.proxy}},unmount(){b&&(e(null,k._container),delete k._container.__vue_app__)},provide(P,y){return l.provides[P]=y,k},runWithContext(P){br=k;try{return P()}finally{br=null}}};return k}}let br=null;function cr(e,t){if(Yt){let s=Yt.provides;const i=Yt.parent&&Yt.parent.provides;i===s&&(s=Yt.provides=Object.create(i)),s[e]=t}}function tt(e,t,s=!1){const i=Yt||Ut;if(i||br){const c=i?i.parent==null?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:br._context.provides;if(c&&e in c)return c[e];if(arguments.length>1)return s&&Qe(t)?t.call(i&&i.proxy):t}}function th(){return!!(Yt||Ut||br)}function sh(e,t,s,i=!1){const c={},l={};Jr(l,da,1),e.propsDefaults=Object.create(null),Iu(e,t,c,l);for(const M in e.propsOptions[0])M in c||(c[M]=void 0);s?e.props=i?c:gu(c):e.type.props?e.props=c:e.props=l,e.attrs=l}function ih(e,t,s,i){const{props:c,attrs:l,vnode:{patchFlag:M}}=e,b=ft(c),[k]=e.propsOptions;let P=!1;if((i||M>0)&&!(M&16)){if(M&8){const y=e.vnode.dynamicProps;for(let T=0;T<y.length;T++){let O=y[T];if(ua(e.emitsOptions,O))continue;const Y=t[O];if(k)if(ct(l,O))Y!==l[O]&&(l[O]=Y,P=!0);else{const Q=Gs(O);c[Q]=$a(k,b,Q,Y,e,!1)}else Y!==l[O]&&(l[O]=Y,P=!0)}}}else{Iu(e,t,c,l)&&(P=!0);let y;for(const T in b)(!t||!ct(t,T)&&((y=wi(T))===T||!ct(t,y)))&&(k?s&&(s[T]!==void 0||s[y]!==void 0)&&(c[T]=$a(k,b,T,void 0,e,!0)):delete c[T]);if(l!==b)for(const T in l)(!t||!ct(t,T))&&(delete l[T],P=!0)}P&&js(e,"set","$attrs")}function Iu(e,t,s,i){const[c,l]=e.propsOptions;let M=!1,b;if(t)for(let k in t){if(Ur(k))continue;const P=t[k];let y;c&&ct(c,y=Gs(k))?!l||!l.includes(y)?s[y]=P:(b||(b={}))[y]=P:ua(e.emitsOptions,k)||(!(k in i)||P!==i[k])&&(i[k]=P,M=!0)}if(l){const k=ft(s),P=b||Pt;for(let y=0;y<l.length;y++){const T=l[y];s[T]=$a(c,k,T,P[T],e,!ct(P,T))}}return M}function $a(e,t,s,i,c,l){const M=e[s];if(M!=null){const b=ct(M,"default");if(b&&i===void 0){const k=M.default;if(M.type!==Function&&!M.skipFactory&&Qe(k)){const{propsDefaults:P}=c;if(s in P)i=P[s];else{const y=Lr(c);i=P[s]=k.call(null,t),y()}}else i=k}M[0]&&(l&&!b?i=!1:M[1]&&(i===""||i===wi(s))&&(i=!0))}return i}function Hu(e,t,s=!1){const i=t.propsCache,c=i.get(e);if(c)return c;const l=e.props,M={},b=[];let k=!1;if(!Qe(e)){const y=T=>{k=!0;const[O,Y]=Hu(T,t,!0);Qt(M,O),Y&&b.push(...Y)};!s&&t.mixins.length&&t.mixins.forEach(y),e.extends&&y(e.extends),e.mixins&&e.mixins.forEach(y)}if(!l&&!k)return vt(e)&&i.set(e,Ni),Ni;if(Fe(l))for(let y=0;y<l.length;y++){const T=Gs(l[y]);al(T)&&(M[T]=Pt)}else if(l)for(const y in l){const T=Gs(y);if(al(T)){const O=l[y],Y=M[T]=Fe(O)||Qe(O)?{type:O}:Qt({},O);if(Y){const Q=ul(Boolean,Y.type),ge=ul(String,Y.type);Y[0]=Q>-1,Y[1]=ge<0||Q<ge,(Q>-1||ct(Y,"default"))&&b.push(T)}}}const P=[M,b];return vt(e)&&i.set(e,P),P}function al(e){return e[0]!=="$"}function nl(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:e===null?"null":""}function ll(e,t){return nl(e)===nl(t)}function ul(e,t){return Fe(t)?t.findIndex(s=>ll(s,e)):Qe(t)&&ll(t,e)?0:-1}const _u=e=>e[0]==="_"||e==="$stable",Cn=e=>Fe(e)?e.map(Us):[Us(e)],rh=(e,t,s)=>{if(t._n)return t;const i=ut((...c)=>Cn(t(...c)),s);return i._c=!1,i},Vu=(e,t,s)=>{const i=e._ctx;for(const c in e){if(_u(c))continue;const l=e[c];if(Qe(l))t[c]=rh(c,l,i);else if(l!=null){const M=Cn(l);t[c]=()=>M}}},Nu=(e,t)=>{const s=Cn(t);e.slots.default=()=>s},ah=(e,t)=>{if(e.vnode.shapeFlag&32){const s=t._;s?(e.slots=ft(t),Jr(t,"_",s)):Vu(t,e.slots={})}else e.slots={},t&&Nu(e,t);Jr(e.slots,da,1)},nh=(e,t,s)=>{const{vnode:i,slots:c}=e;let l=!0,M=Pt;if(i.shapeFlag&32){const b=t._;b?s&&b===1?l=!1:(Qt(c,t),!s&&b===1&&delete c._):(l=!t.$stable,Vu(t,c)),M=t}else t&&(Nu(e,t),M={default:1});if(l)for(const b in c)!_u(b)&&M[b]==null&&delete c[b]};function za(e,t,s,i,c=!1){if(Fe(e)){e.forEach((O,Y)=>za(O,t&&(Fe(t)?t[Y]:t),s,i,c));return}if(ur(i)&&!c)return;const l=i.shapeFlag&4?ga(i.component)||i.component.proxy:i.el,M=c?null:l,{i:b,r:k}=e,P=t&&t.r,y=b.refs===Pt?b.refs={}:b.refs,T=b.setupState;if(P!=null&&P!==k&&(Jt(P)?(y[P]=null,ct(T,P)&&(T[P]=null)):Wt(P)&&(P.value=null)),Qe(k))gi(k,b,12,[M,y]);else{const O=Jt(k),Y=Wt(k),Q=e.f;if(O||Y){const ge=()=>{if(Q){const Se=O?ct(T,k)?T[k]:y[k]:k.value;c?Fe(Se)&&ln(Se,l):Fe(Se)?Se.includes(l)||Se.push(l):O?(y[k]=[l],ct(T,k)&&(T[k]=y[k])):(k.value=[l],e.k&&(y[e.k]=k.value))}else O?(y[k]=M,ct(T,k)&&(T[k]=M)):Y&&(k.value=M,e.k&&(y[e.k]=M))};c||Q?ge():(ge.id=-1,cs(ge,s))}}}const cs=Tc;function lh(e){return uh(e)}function uh(e,t){const s=Ql();s.__VUE__=!0;const{insert:i,remove:c,patchProp:l,createElement:M,createText:b,createComment:k,setText:P,setElementText:y,parentNode:T,nextSibling:O,setScopeId:Y=Ds,insertStaticContent:Q}=e,ge=(L,I,j,ie=null,ee=null,oe=null,we=void 0,ue=null,de=!!I.dynamicChildren)=>{if(L===I)return;L&&!ir(L,I)&&(ie=te(L),os(L,ee,oe,!0),L=null),I.patchFlag===-2&&(de=!1,I.dynamicChildren=null);const{type:ne,ref:be,shapeFlag:Ne}=I;switch(ne){case fa:Se(L,I,j,ie);break;case Mi:ke(L,I,j,ie);break;case Or:L==null&&Ve(I,j,ie,we);break;case re:fs(L,I,j,ie,ee,oe,we,ue,de);break;default:Ne&1?ot(L,I,j,ie,ee,oe,we,ue,de):Ne&6?ws(L,I,j,ie,ee,oe,we,ue,de):(Ne&64||Ne&128)&&ne.process(L,I,j,ie,ee,oe,we,ue,de,Be)}be!=null&&ee&&za(be,L&&L.ref,oe,I||L,!I)},Se=(L,I,j,ie)=>{if(L==null)i(I.el=b(I.children),j,ie);else{const ee=I.el=L.el;I.children!==L.children&&P(ee,I.children)}},ke=(L,I,j,ie)=>{L==null?i(I.el=k(I.children||""),j,ie):I.el=L.el},Ve=(L,I,j,ie)=>{[L.el,L.anchor]=Q(L.children,I,j,ie,L.el,L.anchor)},ze=({el:L,anchor:I},j,ie)=>{let ee;for(;L&&L!==I;)ee=O(L),i(L,j,ie),L=ee;i(I,j,ie)},rt=({el:L,anchor:I})=>{let j;for(;L&&L!==I;)j=O(L),c(L),L=j;c(I)},ot=(L,I,j,ie,ee,oe,we,ue,de)=>{I.type==="svg"?we="svg":I.type==="math"&&(we="mathml"),L==null?Je(I,j,ie,ee,oe,we,ue,de):Re(L,I,ee,oe,we,ue,de)},Je=(L,I,j,ie,ee,oe,we,ue)=>{let de,ne;const{props:be,shapeFlag:Ne,transition:xe,dirs:Xe}=L;if(de=L.el=M(L.type,oe,be&&be.is,be),Ne&8?y(de,L.children):Ne&16&&Ke(L.children,de,null,ie,ee,Da(L,oe),we,ue),Xe&&ki(L,null,ie,"created"),Gt(de,L,L.scopeId,we,ie),be){for(const Dt in be)Dt!=="value"&&!Ur(Dt)&&l(de,Dt,null,be[Dt],oe,L.children,ie,ee,ss);"value"in be&&l(de,"value",null,be.value,oe),(ne=be.onVnodeBeforeMount)&&Vs(ne,ie,L)}Xe&&ki(L,null,ie,"beforeMount");const it=oh(ee,xe);it&&xe.beforeEnter(de),i(de,I,j),((ne=be&&be.onVnodeMounted)||it||Xe)&&cs(()=>{ne&&Vs(ne,ie,L),it&&xe.enter(de),Xe&&ki(L,null,ie,"mounted")},ee)},Gt=(L,I,j,ie,ee)=>{if(j&&Y(L,j),ie)for(let oe=0;oe<ie.length;oe++)Y(L,ie[oe]);if(ee){let oe=ee.subTree;if(I===oe){const we=ee.vnode;Gt(L,we,we.scopeId,we.slotScopeIds,ee.parent)}}},Ke=(L,I,j,ie,ee,oe,we,ue,de=0)=>{for(let ne=de;ne<L.length;ne++){const be=L[ne]=ue?ui(L[ne]):Us(L[ne]);ge(null,be,I,j,ie,ee,oe,we,ue)}},Re=(L,I,j,ie,ee,oe,we)=>{const ue=I.el=L.el;let{patchFlag:de,dynamicChildren:ne,dirs:be}=I;de|=L.patchFlag&16;const Ne=L.props||Pt,xe=I.props||Pt;let Xe;if(j&&Ei(j,!1),(Xe=xe.onVnodeBeforeUpdate)&&Vs(Xe,j,I,L),be&&ki(I,L,j,"beforeUpdate"),j&&Ei(j,!0),ne?at(L.dynamicChildren,ne,ue,j,ie,Da(I,ee),oe):we||St(L,I,ue,null,j,ie,Da(I,ee),oe,!1),de>0){if(de&16)Bt(ue,I,Ne,xe,j,ie,ee);else if(de&2&&Ne.class!==xe.class&&l(ue,"class",null,xe.class,ee),de&4&&l(ue,"style",Ne.style,xe.style,ee),de&8){const it=I.dynamicProps;for(let Dt=0;Dt<it.length;Dt++){const Tt=it[Dt],Xt=Ne[Tt],Cs=xe[Tt];(Cs!==Xt||Tt==="value")&&l(ue,Tt,Xt,Cs,ee,L.children,j,ie,ss)}}de&1&&L.children!==I.children&&y(ue,I.children)}else!we&&ne==null&&Bt(ue,I,Ne,xe,j,ie,ee);((Xe=xe.onVnodeUpdated)||be)&&cs(()=>{Xe&&Vs(Xe,j,I,L),be&&ki(I,L,j,"updated")},ie)},at=(L,I,j,ie,ee,oe,we)=>{for(let ue=0;ue<I.length;ue++){const de=L[ue],ne=I[ue],be=de.el&&(de.type===re||!ir(de,ne)||de.shapeFlag&70)?T(de.el):j;ge(de,ne,be,null,ie,ee,oe,we,!0)}},Bt=(L,I,j,ie,ee,oe,we)=>{if(j!==ie){if(j!==Pt)for(const ue in j)!Ur(ue)&&!(ue in ie)&&l(L,ue,j[ue],null,we,I.children,ee,oe,ss);for(const ue in ie){if(Ur(ue))continue;const de=ie[ue],ne=j[ue];de!==ne&&ue!=="value"&&l(L,ue,ne,de,we,I.children,ee,oe,ss)}"value"in ie&&l(L,"value",j.value,ie.value,we)}},fs=(L,I,j,ie,ee,oe,we,ue,de)=>{const ne=I.el=L?L.el:b(""),be=I.anchor=L?L.anchor:b("");let{patchFlag:Ne,dynamicChildren:xe,slotScopeIds:Xe}=I;Xe&&(ue=ue?ue.concat(Xe):Xe),L==null?(i(ne,j,ie),i(be,j,ie),Ke(I.children||[],j,be,ee,oe,we,ue,de)):Ne>0&&Ne&64&&xe&&L.dynamicChildren?(at(L.dynamicChildren,xe,j,ee,oe,we,ue),(I.key!=null||ee&&I===ee.subTree)&&qu(L,I,!0)):St(L,I,j,be,ee,oe,we,ue,de)},ws=(L,I,j,ie,ee,oe,we,ue,de)=>{I.slotScopeIds=ue,L==null?I.shapeFlag&512?ee.ctx.activate(I,j,ie,we,de):bi(I,j,ie,ee,oe,we,de):Ss(L,I,de)},bi=(L,I,j,ie,ee,oe,we)=>{const ue=L.component=wh(L,ie,ee);if(Pu(L)&&(ue.ctx.renderer=Be),Sh(ue),ue.asyncDep){if(ee&&ee.registerDep(ue,Mt),!L.el){const de=ue.subTree=X(Mi);ke(null,de,I,j)}}else Mt(ue,L,I,j,ee,oe,we)},Ss=(L,I,j)=>{const ie=I.component=L.component;if(yc(L,I,j))if(ie.asyncDep&&!ie.asyncResolved){Et(ie,I,j);return}else ie.next=I,bc(ie.update),ie.effect.dirty=!0,ie.update();else I.el=L.el,ie.vnode=I},Mt=(L,I,j,ie,ee,oe,we)=>{const ue=()=>{if(L.isMounted){let{next:be,bu:Ne,u:xe,parent:Xe,vnode:it}=L;{const Ii=Uu(L);if(Ii){be&&(be.el=it.el,Et(L,be,we)),Ii.asyncDep.then(()=>{L.isUnmounted||ue()});return}}let Dt=be,Tt;Ei(L,!1),be?(be.el=it.el,Et(L,be,we)):be=it,Ne&&Wr(Ne),(Tt=be.props&&be.props.onVnodeBeforeUpdate)&&Vs(Tt,Xe,be,it),Ei(L,!0);const Xt=ka(L),Cs=L.subTree;L.subTree=Xt,ge(Cs,Xt,T(Cs.el),te(Cs),L,ee,oe),be.el=Xt.el,Dt===null&&Pc(L,Xt.el),xe&&cs(xe,ee),(Tt=be.props&&be.props.onVnodeUpdated)&&cs(()=>Vs(Tt,Xe,be,it),ee)}else{let be;const{el:Ne,props:xe}=I,{bm:Xe,m:it,parent:Dt}=L,Tt=ur(I);if(Ei(L,!1),Xe&&Wr(Xe),!Tt&&(be=xe&&xe.onVnodeBeforeMount)&&Vs(be,Dt,I),Ei(L,!0),Ne&&Lt){const Xt=()=>{L.subTree=ka(L),Lt(Ne,L.subTree,L,ee,null)};Tt?I.type.__asyncLoader().then(()=>!L.isUnmounted&&Xt()):Xt()}else{const Xt=L.subTree=ka(L);ge(null,Xt,j,ie,L,ee,oe),I.el=Xt.el}if(it&&cs(it,ee),!Tt&&(be=xe&&xe.onVnodeMounted)){const Xt=I;cs(()=>Vs(be,Dt,Xt),ee)}(I.shapeFlag&256||Dt&&ur(Dt.vnode)&&Dt.vnode.shapeFlag&256)&&L.a&&cs(L.a,ee),L.isMounted=!0,I=j=ie=null}},de=L.effect=new fn(ue,Ds,()=>kn(ne),L.scope),ne=L.update=()=>{de.dirty&&de.run()};ne.id=L.uid,Ei(L,!0),ne()},Et=(L,I,j)=>{I.component=L;const ie=L.vnode.props;L.vnode=I,L.next=null,ih(L,I.props,ie,j),nh(L,I.children,j),Li(),Zn(L),Ti()},St=(L,I,j,ie,ee,oe,we,ue,de=!1)=>{const ne=L&&L.children,be=L?L.shapeFlag:0,Ne=I.children,{patchFlag:xe,shapeFlag:Xe}=I;if(xe>0){if(xe&128){ei(ne,Ne,j,ie,ee,oe,we,ue,de);return}else if(xe&256){Js(ne,Ne,j,ie,ee,oe,we,ue,de);return}}Xe&8?(be&16&&ss(ne,ee,oe),Ne!==ne&&y(j,Ne)):be&16?Xe&16?ei(ne,Ne,j,ie,ee,oe,we,ue,de):ss(ne,ee,oe,!0):(be&8&&y(j,""),Xe&16&&Ke(Ne,j,ie,ee,oe,we,ue,de))},Js=(L,I,j,ie,ee,oe,we,ue,de)=>{L=L||Ni,I=I||Ni;const ne=L.length,be=I.length,Ne=Math.min(ne,be);let xe;for(xe=0;xe<Ne;xe++){const Xe=I[xe]=de?ui(I[xe]):Us(I[xe]);ge(L[xe],Xe,j,null,ee,oe,we,ue,de)}ne>be?ss(L,ee,oe,!0,!1,Ne):Ke(I,j,ie,ee,oe,we,ue,de,Ne)},ei=(L,I,j,ie,ee,oe,we,ue,de)=>{let ne=0;const be=I.length;let Ne=L.length-1,xe=be-1;for(;ne<=Ne&&ne<=xe;){const Xe=L[ne],it=I[ne]=de?ui(I[ne]):Us(I[ne]);if(ir(Xe,it))ge(Xe,it,j,null,ee,oe,we,ue,de);else break;ne++}for(;ne<=Ne&&ne<=xe;){const Xe=L[Ne],it=I[xe]=de?ui(I[xe]):Us(I[xe]);if(ir(Xe,it))ge(Xe,it,j,null,ee,oe,we,ue,de);else break;Ne--,xe--}if(ne>Ne){if(ne<=xe){const Xe=xe+1,it=Xe<be?I[Xe].el:ie;for(;ne<=xe;)ge(null,I[ne]=de?ui(I[ne]):Us(I[ne]),j,it,ee,oe,we,ue,de),ne++}}else if(ne>xe)for(;ne<=Ne;)os(L[ne],ee,oe,!0),ne++;else{const Xe=ne,it=ne,Dt=new Map;for(ne=it;ne<=xe;ne++){const ds=I[ne]=de?ui(I[ne]):Us(I[ne]);ds.key!=null&&Dt.set(ds.key,ne)}let Tt,Xt=0;const Cs=xe-it+1;let Ii=!1,Vn=0;const sr=new Array(Cs);for(ne=0;ne<Cs;ne++)sr[ne]=0;for(ne=Xe;ne<=Ne;ne++){const ds=L[ne];if(Xt>=Cs){os(ds,ee,oe,!0);continue}let _s;if(ds.key!=null)_s=Dt.get(ds.key);else for(Tt=it;Tt<=xe;Tt++)if(sr[Tt-it]===0&&ir(ds,I[Tt])){_s=Tt;break}_s===void 0?os(ds,ee,oe,!0):(sr[_s-it]=ne+1,_s>=Vn?Vn=_s:Ii=!0,ge(ds,I[_s],j,null,ee,oe,we,ue,de),Xt++)}const Nn=Ii?ch(sr):Ni;for(Tt=Nn.length-1,ne=Cs-1;ne>=0;ne--){const ds=it+ne,_s=I[ds],qn=ds+1<be?I[ds+1].el:ie;sr[ne]===0?ge(null,_s,j,qn,ee,oe,we,ue,de):Ii&&(Tt<0||ne!==Nn[Tt]?Hs(_s,j,qn,2):Tt--)}}},Hs=(L,I,j,ie,ee=null)=>{const{el:oe,type:we,transition:ue,children:de,shapeFlag:ne}=L;if(ne&6){Hs(L.component.subTree,I,j,ie);return}if(ne&128){L.suspense.move(I,j,ie);return}if(ne&64){we.move(L,I,j,Be);return}if(we===re){i(oe,I,j);for(let Ne=0;Ne<de.length;Ne++)Hs(de[Ne],I,j,ie);i(L.anchor,I,j);return}if(we===Or){ze(L,I,j);return}if(ie!==2&&ne&1&&ue)if(ie===0)ue.beforeEnter(oe),i(oe,I,j),cs(()=>ue.enter(oe),ee);else{const{leave:Ne,delayLeave:xe,afterLeave:Xe}=ue,it=()=>i(oe,I,j),Dt=()=>{Ne(oe,()=>{it(),Xe&&Xe()})};xe?xe(oe,it,Dt):Dt()}else i(oe,I,j)},os=(L,I,j,ie=!1,ee=!1)=>{const{type:oe,props:we,ref:ue,children:de,dynamicChildren:ne,shapeFlag:be,patchFlag:Ne,dirs:xe}=L;if(ue!=null&&za(ue,null,j,L,!0),be&256){I.ctx.deactivate(L);return}const Xe=be&1&&xe,it=!ur(L);let Dt;if(it&&(Dt=we&&we.onVnodeBeforeUnmount)&&Vs(Dt,I,L),be&6)Tr(L.component,j,ie);else{if(be&128){L.suspense.unmount(j,ie);return}Xe&&ki(L,null,I,"beforeUnmount"),be&64?L.type.remove(L,I,j,ee,Be,ie):ne&&(oe!==re||Ne>0&&Ne&64)?ss(ne,I,j,!1,!0):(oe===re&&Ne&384||!ee&&be&16)&&ss(de,I,j),ie&&Gi(L)}(it&&(Dt=we&&we.onVnodeUnmounted)||Xe)&&cs(()=>{Dt&&Vs(Dt,I,L),Xe&&ki(L,null,I,"unmounted")},j)},Gi=L=>{const{type:I,el:j,anchor:ie,transition:ee}=L;if(I===re){Fi(j,ie);return}if(I===Or){rt(L);return}const oe=()=>{c(j),ee&&!ee.persisted&&ee.afterLeave&&ee.afterLeave()};if(L.shapeFlag&1&&ee&&!ee.persisted){const{leave:we,delayLeave:ue}=ee,de=()=>we(j,oe);ue?ue(L.el,oe,de):de()}else oe()},Fi=(L,I)=>{let j;for(;L!==I;)j=O(L),c(L),L=j;c(I)},Tr=(L,I,j)=>{const{bum:ie,scope:ee,update:oe,subTree:we,um:ue}=L;ie&&Wr(ie),ee.stop(),oe&&(oe.active=!1,os(we,L,I,j)),ue&&cs(ue,I),cs(()=>{L.isUnmounted=!0},I),I&&I.pendingBranch&&!I.isUnmounted&&L.asyncDep&&!L.asyncResolved&&L.suspenseId===I.pendingId&&(I.deps--,I.deps===0&&I.resolve())},ss=(L,I,j,ie=!1,ee=!1,oe=0)=>{for(let we=oe;we<L.length;we++)os(L[we],I,j,ie,ee)},te=L=>L.shapeFlag&6?te(L.component.subTree):L.shapeFlag&128?L.suspense.next():O(L.anchor||L.el);let Ae=!1;const Me=(L,I,j)=>{L==null?I._vnode&&os(I._vnode,null,null,!0):ge(I._vnode||null,L,I,null,null,null,j),Ae||(Ae=!0,Zn(),Eu(),Ae=!1),I._vnode=L},Be={p:ge,um:os,m:Hs,r:Gi,mt:bi,mc:Ke,pc:St,pbc:at,n:te,o:e};let At,Lt;return t&&([At,Lt]=t(Be)),{render:Me,hydrate:At,createApp:eh(Me,At)}}function Da({type:e,props:t},s){return s==="svg"&&e==="foreignObject"||s==="mathml"&&e==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:s}function Ei({effect:e,update:t},s){e.allowRecurse=t.allowRecurse=s}function oh(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}function qu(e,t,s=!1){const i=e.children,c=t.children;if(Fe(i)&&Fe(c))for(let l=0;l<i.length;l++){const M=i[l];let b=c[l];b.shapeFlag&1&&!b.dynamicChildren&&((b.patchFlag<=0||b.patchFlag===32)&&(b=c[l]=ui(c[l]),b.el=M.el),s||qu(M,b)),b.type===fa&&(b.el=M.el)}}function ch(e){const t=e.slice(),s=[0];let i,c,l,M,b;const k=e.length;for(i=0;i<k;i++){const P=e[i];if(P!==0){if(c=s[s.length-1],e[c]<P){t[i]=c,s.push(i);continue}for(l=0,M=s.length-1;l<M;)b=l+M>>1,e[s[b]]<P?l=b+1:M=b;P<e[s[l]]&&(l>0&&(t[i]=s[l-1]),s[l]=i)}}for(l=s.length,M=s[l-1];l-- >0;)s[l]=M,M=t[M];return s}function Uu(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:Uu(t)}const hh=e=>e.__isTeleport,re=Symbol.for("v-fgt"),fa=Symbol.for("v-txt"),Mi=Symbol.for("v-cmt"),Or=Symbol.for("v-stc"),hr=[];let Ts=null;function U(e=!1){hr.push(Ts=e?null:[])}function fh(){hr.pop(),Ts=hr[hr.length-1]||null}let kr=1;function ol(e){kr+=e}function Wu(e){return e.dynamicChildren=kr>0?Ts||Ni:null,fh(),kr>0&&Ts&&Ts.push(e),e}function z(e,t,s,i,c,l){return Wu(w(e,t,s,i,c,l,!0))}function zt(e,t,s,i,c){return Wu(X(e,t,s,i,c,!0))}function Kr(e){return e?e.__v_isVNode===!0:!1}function ir(e,t){return e.type===t.type&&e.key===t.key}const da="__vInternal",Ou=({key:e})=>e??null,$r=({ref:e,ref_key:t,ref_for:s})=>(typeof e=="number"&&(e=""+e),e!=null?Jt(e)||Wt(e)||Qe(e)?{i:Ut,r:e,k:t,f:!!s}:e:null);function w(e,t=null,s=null,i=0,c=null,l=e===re?0:1,M=!1,b=!1){const k={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Ou(t),ref:t&&$r(t),scopeId:oa,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:i,dynamicProps:c,dynamicChildren:null,appContext:null,ctx:Ut};return b?(yn(k,s),l&128&&e.normalize(k)):s&&(k.shapeFlag|=Jt(s)?8:16),kr>0&&!M&&Ts&&(k.patchFlag>0||l&6)&&k.patchFlag!==32&&Ts.push(k),k}const X=dh;function dh(e,t=null,s=null,i=0,c=null,l=!1){if((!e||e===vc)&&(e=Mi),Kr(e)){const b=Ji(e,t,!0);return s&&yn(b,s),kr>0&&!l&&Ts&&(b.shapeFlag&6?Ts[Ts.indexOf(e)]=b:Ts.push(b)),b.patchFlag|=-2,b}if(Dh(e)&&(e=e.__vccOpts),t){t=ph(t);let{class:b,style:k}=t;b&&!Jt(b)&&(t.class=Ft(b)),vt(k)&&(mu(k)&&!Fe(k)&&(k=Qt({},k)),t.style=on(k))}const M=Jt(e)?1:Lc(e)?128:hh(e)?64:vt(e)?4:Qe(e)?2:0;return w(e,t,s,i,c,M,l,!0)}function ph(e){return e?mu(e)||da in e?Qt({},e):e:null}function Ji(e,t,s=!1){const{props:i,ref:c,patchFlag:l,children:M}=e,b=t?gh(i||{},t):i;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:b,key:b&&Ou(b),ref:t&&t.ref?s&&c?Fe(c)?c.concat($r(t)):[c,$r(t)]:$r(t):c,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:M,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==re?l===-1?16:l|16:l,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Ji(e.ssContent),ssFallback:e.ssFallback&&Ji(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function le(e=" ",t=0){return X(fa,null,e,t)}function $u(e,t){const s=X(Or,null,e);return s.staticCount=t,s}function ht(e="",t=!1){return t?(U(),zt(Mi,null,e)):X(Mi,null,e)}function Us(e){return e==null||typeof e=="boolean"?X(Mi):Fe(e)?X(re,null,e.slice()):typeof e=="object"?ui(e):X(fa,null,String(e))}function ui(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:Ji(e)}function yn(e,t){let s=0;const{shapeFlag:i}=e;if(t==null)t=null;else if(Fe(t))s=16;else if(typeof t=="object")if(i&65){const c=t.default;c&&(c._c&&(c._d=!1),yn(e,c()),c._c&&(c._d=!0));return}else{s=32;const c=t._;!c&&!(da in t)?t._ctx=Ut:c===3&&Ut&&(Ut.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else Qe(t)?(t={default:t,_ctx:Ut},s=32):(t=String(t),i&64?(s=16,t=[le(t)]):s=8);e.children=t,e.shapeFlag|=s}function gh(...e){const t={};for(let s=0;s<e.length;s++){const i=e[s];for(const c in i)if(c==="class")t.class!==i.class&&(t.class=Ft([t.class,i.class]));else if(c==="style")t.style=on([t.style,i.style]);else if(sa(c)){const l=t[c],M=i[c];M&&l!==M&&!(Fe(l)&&l.includes(M))&&(t[c]=l?[].concat(l,M):M)}else c!==""&&(t[c]=i[c])}return t}function Vs(e,t,s,i=null){xs(e,t,7,[s,i])}const mh=Fu();let Mh=0;function wh(e,t,s){const i=e.type,c=(t?t.appContext:e.appContext)||mh,l={uid:Mh++,vnode:e,type:i,parent:t,appContext:c,root:null,next:null,subTree:null,effect:null,update:null,scope:new eu(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(c.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Hu(i,c),emitsOptions:Ru(i,c),emit:null,emitted:null,propsDefaults:Pt,inheritAttrs:i.inheritAttrs,ctx:Pt,data:Pt,props:Pt,attrs:Pt,slots:Pt,refs:Pt,setupState:Pt,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=t?t.root:l,l.emit=Dc.bind(null,l),e.ce&&e.ce(l),l}let Yt=null;const Pn=()=>Yt||Ut;let ea,Ja;{const e=Ql(),t=(s,i)=>{let c;return(c=e[s])||(c=e[s]=[]),c.push(i),l=>{c.length>1?c.forEach(M=>M(l)):c[0](l)}};ea=t("__VUE_INSTANCE_SETTERS__",s=>Yt=s),Ja=t("__VUE_SSR_SETTERS__",s=>pa=s)}const Lr=e=>{const t=Yt;return ea(e),e.scope.on(),()=>{e.scope.off(),ea(t)}},cl=()=>{Yt&&Yt.scope.off(),ea(null)};function zu(e){return e.vnode.shapeFlag&4}let pa=!1;function Sh(e,t=!1){t&&Ja(t);const{props:s,children:i}=e.vnode,c=zu(e);sh(e,s,c,t),ah(e,i);const l=c?Ah(e,t):void 0;return t&&Ja(!1),l}function Ah(e,t){const s=e.type;e.accessCache=Object.create(null),e.proxy=na(new Proxy(e.ctx,Jc));const{setup:i}=s;if(i){const c=e.setupContext=i.length>1?kh(e):null,l=Lr(e);Li();const M=gi(i,e,0,[e.props,c]);if(Ti(),l(),Xl(M)){if(M.then(cl,cl),t)return M.then(b=>{hl(e,b,t)}).catch(b=>{la(b,e,0)});e.asyncDep=M}else hl(e,M,t)}else Ju(e,t)}function hl(e,t,s){Qe(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:vt(t)&&(e.setupState=Au(t)),Ju(e,s)}let fl;function Ju(e,t,s){const i=e.type;if(!e.render){if(!t&&fl&&!i.render){const c=i.template||Rn(e).template;if(c){const{isCustomElement:l,compilerOptions:M}=e.appContext.config,{delimiters:b,compilerOptions:k}=i,P=Qt(Qt({isCustomElement:l,delimiters:b},M),k);i.render=fl(c,P)}}e.render=i.render||Ds}{const c=Lr(e);Li();try{Xc(e)}finally{Ti(),c()}}}function bh(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,s){return hs(e,"get","$attrs"),t[s]}}))}function kh(e){const t=s=>{e.exposed=s||{}};return{get attrs(){return bh(e)},slots:e.slots,emit:e.emit,expose:t}}function ga(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Au(na(e.exposed)),{get(t,s){if(s in t)return t[s];if(s in or)return or[s](e)},has(t,s){return s in t||s in or}}))}function Eh(e,t=!0){return Qe(e)?e.displayName||e.name:e.name||t&&e.__name}function Dh(e){return Qe(e)&&"__vccOpts"in e}const Vt=(e,t)=>hc(e,t,pa);function Xu(e,t,s=Pt){const i=Pn(),c=Gs(t),l=wi(t),M=gc((k,P)=>{let y;return Fc(()=>{const T=e[t];Os(y,T)&&(y=T,P())}),{get(){return k(),s.get?s.get(y):y},set(T){const O=i.vnode.props;!(O&&(t in O||c in O||l in O)&&(`onUpdate:${t}`in O||`onUpdate:${c}`in O||`onUpdate:${l}`in O))&&Os(T,y)&&(y=T,P()),i.emit(`update:${t}`,s.set?s.set(T):T)}}}),b=t==="modelValue"?"modelModifiers":`${t}Modifiers`;return M[Symbol.iterator]=()=>{let k=0;return{next(){return k<2?{value:k++?e[b]||{}:M,done:!1}:{done:!0}}}},M}function ju(e,t,s){const i=arguments.length;return i===2?vt(t)&&!Fe(t)?Kr(t)?X(e,null,[t]):X(e,t):X(e,null,t):(i>3?s=Array.prototype.slice.call(arguments,2):i===3&&Kr(s)&&(s=[s]),X(e,t,s))}const Rh="3.4.15";/**
* @vue/runtime-dom v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Ch="http://www.w3.org/2000/svg",yh="http://www.w3.org/1998/Math/MathML",oi=typeof document<"u"?document:null,dl=oi&&oi.createElement("template"),Ph={insert:(e,t,s)=>{t.insertBefore(e,s||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,s,i)=>{const c=t==="svg"?oi.createElementNS(Ch,e):t==="mathml"?oi.createElementNS(yh,e):oi.createElement(e,s?{is:s}:void 0);return e==="select"&&i&&i.multiple!=null&&c.setAttribute("multiple",i.multiple),c},createText:e=>oi.createTextNode(e),createComment:e=>oi.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>oi.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,s,i,c,l){const M=s?s.previousSibling:t.lastChild;if(c&&(c===l||c.nextSibling))for(;t.insertBefore(c.cloneNode(!0),s),!(c===l||!(c=c.nextSibling)););else{dl.innerHTML=i==="svg"?`<svg>${e}</svg>`:i==="mathml"?`<math>${e}</math>`:e;const b=dl.content;if(i==="svg"||i==="mathml"){const k=b.firstChild;for(;k.firstChild;)b.appendChild(k.firstChild);b.removeChild(k)}t.insertBefore(b,s)}return[M?M.nextSibling:t.firstChild,s?s.previousSibling:t.lastChild]}},vh=Symbol("_vtc");function Bh(e,t,s){const i=e[vh];i&&(t=(t?[t,...i]:[...i]).join(" ")),t==null?e.removeAttribute("class"):s?e.setAttribute("class",t):e.className=t}const vn=Symbol("_vod"),Bn={beforeMount(e,{value:t},{transition:s}){e[vn]=e.style.display==="none"?"":e.style.display,s&&t?s.beforeEnter(e):rr(e,t)},mounted(e,{value:t},{transition:s}){s&&t&&s.enter(e)},updated(e,{value:t,oldValue:s},{transition:i}){!t!=!s&&(i?t?(i.beforeEnter(e),rr(e,!0),i.enter(e)):i.leave(e,()=>{rr(e,!1)}):rr(e,t))},beforeUnmount(e,{value:t}){rr(e,t)}};function rr(e,t){e.style.display=t?e[vn]:"none"}const Lh=Symbol("");function Th(e,t,s){const i=e.style,c=i.display,l=Jt(s);if(s&&!l){if(t&&!Jt(t))for(const M in t)s[M]==null&&Xa(i,M,"");for(const M in s)Xa(i,M,s[M])}else if(l){if(t!==s){const M=i[Lh];M&&(s+=";"+M),i.cssText=s}}else t&&e.removeAttribute("style");vn in e&&(i.display=c)}const pl=/\s*!important$/;function Xa(e,t,s){if(Fe(s))s.forEach(i=>Xa(e,t,i));else if(s==null&&(s=""),t.startsWith("--"))e.setProperty(t,s);else{const i=xh(e,t);pl.test(s)?e.setProperty(wi(i),s.replace(pl,""),"important"):e[i]=s}}const gl=["Webkit","Moz","ms"],Ra={};function xh(e,t){const s=Ra[t];if(s)return s;let i=Gs(t);if(i!=="filter"&&i in e)return Ra[t]=i;i=ra(i);for(let c=0;c<gl.length;c++){const l=gl[c]+i;if(l in e)return Ra[t]=l}return t}const ml="http://www.w3.org/1999/xlink";function Gh(e,t,s,i,c){if(i&&t.startsWith("xlink:"))s==null?e.removeAttributeNS(ml,t.slice(6,t.length)):e.setAttributeNS(ml,t,s);else{const l=Uo(t);s==null||l&&!Zl(s)?e.removeAttribute(t):e.setAttribute(t,l?"":s)}}function Fh(e,t,s,i,c,l,M){if(t==="innerHTML"||t==="textContent"){i&&M(i,c,l),e[t]=s??"";return}const b=e.tagName;if(t==="value"&&b!=="PROGRESS"&&!b.includes("-")){e._value=s;const P=b==="OPTION"?e.getAttribute("value"):e.value,y=s??"";P!==y&&(e.value=y),s==null&&e.removeAttribute(t);return}let k=!1;if(s===""||s==null){const P=typeof e[t];P==="boolean"?s=Zl(s):s==null&&P==="string"?(s="",k=!0):P==="number"&&(s=0,k=!0)}try{e[t]=s}catch{}k&&e.removeAttribute(t)}function hi(e,t,s,i){e.addEventListener(t,s,i)}function Ih(e,t,s,i){e.removeEventListener(t,s,i)}const Ml=Symbol("_vei");function Hh(e,t,s,i,c=null){const l=e[Ml]||(e[Ml]={}),M=l[t];if(i&&M)M.value=i;else{const[b,k]=_h(t);if(i){const P=l[t]=qh(i,c);hi(e,b,P,k)}else M&&(Ih(e,b,M,k),l[t]=void 0)}}const wl=/(?:Once|Passive|Capture)$/;function _h(e){let t;if(wl.test(e)){t={};let i;for(;i=e.match(wl);)e=e.slice(0,e.length-i[0].length),t[i[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):wi(e.slice(2)),t]}let Ca=0;const Vh=Promise.resolve(),Nh=()=>Ca||(Vh.then(()=>Ca=0),Ca=Date.now());function qh(e,t){const s=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=s.attached)return;xs(Uh(i,s.value),t,5,[i])};return s.value=e,s.attached=Nh(),s}function Uh(e,t){if(Fe(t)){const s=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{s.call(e),e._stopped=!0},t.map(i=>c=>!c._stopped&&i&&i(c))}else return t}const Sl=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,Wh=(e,t,s,i,c,l,M,b,k)=>{const P=c==="svg";t==="class"?Bh(e,i,P):t==="style"?Th(e,s,i):sa(t)?nn(t)||Hh(e,t,s,i,M):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):Oh(e,t,i,P))?Fh(e,t,i,l,M,b,k):(t==="true-value"?e._trueValue=i:t==="false-value"&&(e._falseValue=i),Gh(e,t,i,P))};function Oh(e,t,s,i){if(i)return!!(t==="innerHTML"||t==="textContent"||t in e&&Sl(t)&&Qe(s));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const c=e.tagName;if(c==="IMG"||c==="VIDEO"||c==="CANVAS"||c==="SOURCE")return!1}return Sl(t)&&Jt(s)?!1:t in e}const Xi=e=>{const t=e.props["onUpdate:modelValue"]||!1;return Fe(t)?s=>Wr(t,s):t};function $h(e){e.target.composing=!0}function Al(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const Ys=Symbol("_assign"),lt={created(e,{modifiers:{lazy:t,trim:s,number:i}},c){e[Ys]=Xi(c);const l=i||c.props&&c.props.type==="number";hi(e,t?"change":"input",M=>{if(M.target.composing)return;let b=e.value;s&&(b=b.trim()),l&&(b=Mr(b)),e[Ys](b)}),s&&hi(e,"change",()=>{e.value=e.value.trim()}),t||(hi(e,"compositionstart",$h),hi(e,"compositionend",Al),hi(e,"change",Al))},mounted(e,{value:t}){e.value=t??""},beforeUpdate(e,{value:t,modifiers:{lazy:s,trim:i,number:c}},l){if(e[Ys]=Xi(l),e.composing)return;const M=c||e.type==="number"?Mr(e.value):e.value,b=t??"";M!==b&&(document.activeElement===e&&e.type!=="range"&&(s||i&&e.value.trim()===b)||(e.value=b))}},ls={deep:!0,created(e,t,s){e[Ys]=Xi(s),hi(e,"change",()=>{const i=e._modelValue,c=Er(e),l=e.checked,M=e[Ys];if(Fe(i)){const b=cn(i,c),k=b!==-1;if(l&&!k)M(i.concat(c));else if(!l&&k){const P=[...i];P.splice(b,1),M(P)}}else if(Zi(i)){const b=new Set(i);l?b.add(c):b.delete(c),M(b)}else M(Yu(e,l))})},mounted:bl,beforeUpdate(e,t,s){e[Ys]=Xi(s),bl(e,t,s)}};function bl(e,{value:t,oldValue:s},i){e._modelValue=t,Fe(t)?e.checked=cn(t,i.props.value)>-1:Zi(t)?e.checked=t.has(i.props.value):t!==s&&(e.checked=Oi(t,Yu(e,!0)))}const ji={deep:!0,created(e,{value:t,modifiers:{number:s}},i){const c=Zi(t);hi(e,"change",()=>{const l=Array.prototype.filter.call(e.options,M=>M.selected).map(M=>s?Mr(Er(M)):Er(M));e[Ys](e.multiple?c?new Set(l):l:l[0]),e._assigning=!0,er(()=>{e._assigning=!1})}),e[Ys]=Xi(i)},mounted(e,{value:t,oldValue:s,modifiers:{number:i}}){kl(e,t,s,i)},beforeUpdate(e,t,s){e[Ys]=Xi(s)},updated(e,{value:t,oldValue:s,modifiers:{number:i}}){e._assigning||kl(e,t,s,i)}};function kl(e,t,s,i){const c=e.multiple,l=Fe(t);if(!(c&&!l&&!Zi(t))&&!(l&&Oi(t,s))){for(let M=0,b=e.options.length;M<b;M++){const k=e.options[M],P=Er(k);if(c)if(l){const y=typeof P;y==="string"||y==="number"?k.selected=t.includes(i?Mr(P):P):k.selected=cn(t,P)>-1}else k.selected=t.has(P);else if(Oi(Er(k),t)){e.selectedIndex!==M&&(e.selectedIndex=M);return}}!c&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function Er(e){return"_value"in e?e._value:e.value}function Yu(e,t){const s=t?"_trueValue":"_falseValue";return s in e?e[s]:t}const zh=["ctrl","shift","alt","meta"],Jh={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,t)=>zh.some(s=>e[`${s}Key`]&&!t.includes(s))},El=(e,t)=>{const s=e._withMods||(e._withMods={}),i=t.join(".");return s[i]||(s[i]=(c,...l)=>{for(let M=0;M<t.length;M++){const b=Jh[t[M]];if(b&&b(c,t))return}return e(c,...l)})},Xh={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},Dl=(e,t)=>{const s=e._withKeys||(e._withKeys={}),i=t.join(".");return s[i]||(s[i]=c=>{if(!("key"in c))return;const l=wi(c.key);if(t.some(M=>M===l||Xh[M]===l))return e(c)})},jh=Qt({patchProp:Wh},Ph);let Rl;function Yh(){return Rl||(Rl=lh(jh))}const Qh=(...e)=>{const t=Yh().createApp(...e),{mount:s}=t;return t.mount=i=>{const c=Kh(i);if(!c)return;const l=t._component;!Qe(l)&&!l.render&&!l.template&&(l.template=c.innerHTML),c.innerHTML="";const M=s(c,!1,Zh(c));return c instanceof Element&&(c.removeAttribute("v-cloak"),c.setAttribute("data-v-app","")),M},t};function Zh(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function Kh(e){return Jt(e)?document.querySelector(e):e}var ef=!1;/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */let Qu;const ma=e=>Qu=e,Zu=Symbol();function ja(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var fr;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(fr||(fr={}));function tf(){const e=tu(!0),t=e.run(()=>Ct({}));let s=[],i=[];const c=na({install(l){ma(c),c._a=l,l.provide(Zu,c),l.config.globalProperties.$pinia=c,i.forEach(M=>s.push(M)),i=[]},use(l){return!this._a&&!ef?i.push(l):s.push(l),this},_p:s,_a:null,_e:e,_s:new Map,state:t});return c}const Ku=()=>{};function Cl(e,t,s,i=Ku){e.push(t);const c=()=>{const l=e.indexOf(t);l>-1&&(e.splice(l,1),i())};return!s&&hn()&&su(c),c}function Hi(e,...t){e.slice().forEach(s=>{s(...t)})}const sf=e=>e();function Ya(e,t){e instanceof Map&&t instanceof Map&&t.forEach((s,i)=>e.set(i,s)),e instanceof Set&&t instanceof Set&&t.forEach(e.add,e);for(const s in t){if(!t.hasOwnProperty(s))continue;const i=t[s],c=e[s];ja(c)&&ja(i)&&e.hasOwnProperty(s)&&!Wt(i)&&!pi(i)?e[s]=Ya(c,i):e[s]=i}return e}const rf=Symbol();function af(e){return!ja(e)||!e.hasOwnProperty(rf)}const{assign:ni}=Object;function nf(e){return!!(Wt(e)&&e.effect)}function lf(e,t,s,i){const{state:c,actions:l,getters:M}=t,b=s.state.value[e];let k;function P(){b||(s.state.value[e]=c?c():{});const y=mc(s.state.value[e]);return ni(y,l,Object.keys(M||{}).reduce((T,O)=>(T[O]=na(Vt(()=>{ma(s);const Y=s._s.get(e);return M[O].call(Y,Y)})),T),{}))}return k=eo(e,P,t,s,i,!0),k}function eo(e,t,s={},i,c,l){let M;const b=ni({actions:{}},s),k={deep:!0};let P,y,T=[],O=[],Y;const Q=i.state.value[e];!l&&!Q&&(i.state.value[e]={}),Ct({});let ge;function Se(Ke){let Re;P=y=!1,typeof Ke=="function"?(Ke(i.state.value[e]),Re={type:fr.patchFunction,storeId:e,events:Y}):(Ya(i.state.value[e],Ke),Re={type:fr.patchObject,payload:Ke,storeId:e,events:Y});const at=ge=Symbol();er().then(()=>{ge===at&&(P=!0)}),y=!0,Hi(T,Re,i.state.value[e])}const ke=l?function(){const{state:Re}=s,at=Re?Re():{};this.$patch(Bt=>{ni(Bt,at)})}:Ku;function Ve(){M.stop(),T=[],O=[],i._s.delete(e)}function ze(Ke,Re){return function(){ma(i);const at=Array.from(arguments),Bt=[],fs=[];function ws(Mt){Bt.push(Mt)}function bi(Mt){fs.push(Mt)}Hi(O,{args:at,name:Ke,store:ot,after:ws,onError:bi});let Ss;try{Ss=Re.apply(this&&this.$id===e?this:ot,at)}catch(Mt){throw Hi(fs,Mt),Mt}return Ss instanceof Promise?Ss.then(Mt=>(Hi(Bt,Mt),Mt)).catch(Mt=>(Hi(fs,Mt),Promise.reject(Mt))):(Hi(Bt,Ss),Ss)}}const rt={_p:i,$id:e,$onAction:Cl.bind(null,O),$patch:Se,$reset:ke,$subscribe(Ke,Re={}){const at=Cl(T,Ke,Re.detached,()=>Bt()),Bt=M.run(()=>rs(()=>i.state.value[e],fs=>{(Re.flush==="sync"?y:P)&&Ke({storeId:e,type:fr.direct,events:Y},fs)},ni({},k,Re)));return at},$dispose:Ve},ot=Ki(rt);i._s.set(e,ot);const Gt=(i._a&&i._a.runWithContext||sf)(()=>i._e.run(()=>(M=tu()).run(t)));for(const Ke in Gt){const Re=Gt[Ke];if(Wt(Re)&&!nf(Re)||pi(Re))l||(Q&&af(Re)&&(Wt(Re)?Re.value=Q[Ke]:Ya(Re,Q[Ke])),i.state.value[e][Ke]=Re);else if(typeof Re=="function"){const at=ze(Ke,Re);Gt[Ke]=at,b.actions[Ke]=Re}}return ni(ot,Gt),ni(ft(ot),Gt),Object.defineProperty(ot,"$state",{get:()=>i.state.value[e],set:Ke=>{Se(Re=>{ni(Re,Ke)})}}),i._p.forEach(Ke=>{ni(ot,M.run(()=>Ke({store:ot,app:i._a,pinia:i,options:b})))}),Q&&l&&s.hydrate&&s.hydrate(ot.$state,Q),P=!0,y=!0,ot}function Ma(e,t,s){let i,c;const l=typeof t=="function";typeof e=="string"?(i=e,c=l?s:t):(c=e,i=e.id);function M(b,k){const P=th();return b=b||(P?tt(Zu,null):null),b&&ma(b),b=Qu,b._s.has(i)||(l?eo(i,t,c,b):lf(i,c,b)),b._s.get(i)}return M.$id=i,M}const uf="ieh2calculator",of="Calculator for Incremental Epic Hero 2",cf="0.1.21",hf="module",ff={dev:"vite",build:"npm --no-git-tag-version version patch && vue-tsc && vite build",preview:"vite preview"},df={type:"git",url:"git+https://github.com/PR0CESSUS/IEH2Calculator.git"},pf=["IEH2","Incremental","Epic","Hero","Calculator"],gf="Processus",mf="ISC",Mf={url:"https://github.com/PR0CESSUS/IEH2Calculator/issues"},wf="https://github.com/PR0CESSUS/IEH2Calculator#readme",Sf={"@vueuse/core":"^10.7.2",pinia:"^2.1.7",vue:"^3.3.11","vue-router":"^4.2.5"},Af={"@vitejs/plugin-vue":"^4.5.2","rollup-plugin-visualizer":"^5.12.0",typescript:"^5.2.2",vite:"^5.0.8","vue-tsc":"^1.8.25"},bf={name:uf,description:of,private:!0,version:cf,type:hf,scripts:ff,repository:df,keywords:pf,author:gf,license:mf,bugs:Mf,homepage:wf,dependencies:Sf,devDependencies:Af},Ot=(e,t)=>{const s=e.__vccOpts||e;for(const[i,c]of t)s[i]=c;return s},kf={},Ef=w("br",null,null,-1);function Df(e,t){return U(),z(re,null,[le(" Website is using data from save file to operate in full capacity but it is not required."),Ef,le(" It also uses browser localStorage mechanism to store data. You can use Hard Reset button to clear it. ")],64)}const Rf=Ot(kf,[["render",Df]]),Cf=w("tr",null,[w("th",null,"Name"),w("th",null,"Disassambled"),w("th",null,"Level"),w("th",null,"Passive Effect")],-1),yf=["onUpdate:modelValue"],Pf=["onUpdate:modelValue"],vf=st({__name:"Talisman",setup(e){const t=tt("game");return(s,i)=>(U(),z("table",null,[Cf,(U(!0),z(re,null,De(A(t).data.potion.talismans,c=>(U(),z("tr",null,[w("td",null,V(c.NameString())+":",1),w("td",null,[ve(w("input",{type:"text",size:"12","onUpdate:modelValue":l=>c.disassembledNum=l,name:"talisman.disassembledNum"},null,8,yf),[[lt,c.disassembledNum,void 0,{lazy:!0,number:!0}]])]),w("td",null,[ve(w("input",{type:"text",size:"5","onUpdate:modelValue":l=>c.level=l,name:"talisman.level"},null,8,Pf),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256))]))}}),$t=st({__name:"TabItem",props:{title:{}},setup(e){const t=Ct(0),s=Ct(!1),i=tt("TabsProvider");return rs(()=>i.selectedIndex,()=>{s.value=t.value===i.selectedIndex}),Bu(()=>{t.value=i.count,i.count++,s.value=t.value===i.selectedIndex}),(c,l)=>ve((U(),z("div",null,[zi(c.$slots,"default")],512)),[[Bn,s.value]])}}),Bf=["onClick"],Lf=st({__name:"TabPanel",props:{selectedIndex:{}},emits:["tabChange"],setup(e,{emit:t}){const i=Ki({selectedIndex:e.selectedIndex|0,tabs:[],count:0}),c=Ct(),l=Ct(),M=t;cr("TabsProvider",i),ha(()=>{c.value=Pn().proxy,l.value=c.value.$slots.default(),i.tabs=c.value.$slots.default().filter(k=>k.type.__name==="TabItem")});function b(k){i.selectedIndex=k,M("tabChange",k)}return(k,P)=>(U(),z(re,null,[w("ul",null,[(U(!0),z(re,null,De(i.tabs,(y,T)=>(U(),z("li",{key:T,onClick:O=>b(T),class:Ft(i.selectedIndex===T?"active":"")},V(y.props.title),11,Bf))),128))]),w("div",null,[zi(k.$slots,"default",{},void 0,!0)])],64))}}),to=Ot(Lf,[["__scopeId","data-v-1af58e1d"]]);var v=(e=>(e[e.Warrior=0]="Warrior",e[e.Wizard=1]="Wizard",e[e.Angel=2]="Angel",e[e.Thief=3]="Thief",e[e.Archer=4]="Archer",e[e.Tamer=5]="Tamer",e))(v||{});const Tf=e=>($s("data-v-93e62b1b"),e=e(),zs(),e),xf=Tf(()=>w("tr",null,[w("th",null,"Hero"),w("th",null,"Status")],-1)),Gf=st({__name:"Main",setup(e){const t=tt("data");return(s,i)=>(U(),z("table",null,[xf,(U(!0),z(re,null,De(A(t).source.isActiveBattle,(c,l)=>(U(),z("tr",null,[w("td",null,V(A(v)[l])+":",1),w("td",null,V(c?A(t).source.currentHero==l?"active":"passive":"inactive"),1)]))),256))]))}}),Ff=Ot(Gf,[["__scopeId","data-v-93e62b1b"]]);function If(e){return hn()?(su(e),!0):!1}function Ln(e){return typeof e=="function"?e():A(e)}const Hf=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const _f=Object.prototype.toString,Vf=e=>_f.call(e)==="[object Object]",Nf=()=>{};function qf(e,t){function s(...i){return new Promise((c,l)=>{Promise.resolve(e(()=>t.apply(this,i),{fn:t,thisArg:this,args:i})).then(c).catch(l)})}return s}const so=e=>e();function Uf(e=so){const t=Ct(!0);function s(){t.value=!1}function i(){t.value=!0}const c=(...l)=>{t.value&&e(...l)};return{isActive:Mn(t),pause:s,resume:i,eventFilter:c}}function Wf(e){return e||Pn()}function Of(e,t,s={}){const{eventFilter:i=so,...c}=s;return rs(e,qf(i,t),c)}function $f(e,t,s={}){const{eventFilter:i,...c}=s,{eventFilter:l,pause:M,resume:b,isActive:k}=Uf(i);return{stop:Of(e,t,{...c,eventFilter:l}),pause:M,resume:b,isActive:k}}function zf(e,t=!0,s){Wf()?ha(e,s):t?e():er(e)}function Jf(e){var t;const s=Ln(e);return(t=s==null?void 0:s.$el)!=null?t:s}const Qa=Hf?window:void 0;function yl(...e){let t,s,i,c;if(typeof e[0]=="string"||Array.isArray(e[0])?([s,i,c]=e,t=Qa):[t,s,i,c]=e,!t)return Nf;Array.isArray(s)||(s=[s]),Array.isArray(i)||(i=[i]);const l=[],M=()=>{l.forEach(y=>y()),l.length=0},b=(y,T,O,Y)=>(y.addEventListener(T,O,Y),()=>y.removeEventListener(T,O,Y)),k=rs(()=>[Jf(t),Ln(c)],([y,T])=>{if(M(),!y)return;const O=Vf(T)?{...T}:T;l.push(...s.flatMap(Y=>i.map(Q=>b(y,Y,Q,O))))},{immediate:!0,flush:"post"}),P=()=>{k(),M()};return If(P),P}const Vr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Nr="__vueuse_ssr_handlers__",Xf=jf();function jf(){return Nr in Vr||(Vr[Nr]=Vr[Nr]||{}),Vr[Nr]}function Yf(e,t){return Xf[e]||t}function Qf(e){return e==null?"any":e instanceof Set?"set":e instanceof Map?"map":e instanceof Date?"date":typeof e=="boolean"?"boolean":typeof e=="string"?"string":typeof e=="object"?"object":Number.isNaN(e)?"any":"number"}const Zf={boolean:{read:e=>e==="true",write:e=>String(e)},object:{read:e=>JSON.parse(e),write:e=>JSON.stringify(e)},number:{read:e=>Number.parseFloat(e),write:e=>String(e)},any:{read:e=>e,write:e=>String(e)},string:{read:e=>e,write:e=>String(e)},map:{read:e=>new Map(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e.entries()))},set:{read:e=>new Set(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e))},date:{read:e=>new Date(e),write:e=>e.toISOString()}},Pl="vueuse-storage";function Tn(e,t,s,i={}){var c;const{flush:l="pre",deep:M=!0,listenToStorageChanges:b=!0,writeDefaults:k=!0,mergeDefaults:P=!1,shallow:y,window:T=Qa,eventFilter:O,onError:Y=Re=>{console.error(Re)},initOnMounted:Q}=i,ge=(y?wu:Ct)(typeof t=="function"?t():t);if(!s)try{s=Yf("getDefaultStorage",()=>{var Re;return(Re=Qa)==null?void 0:Re.localStorage})()}catch(Re){Y(Re)}if(!s)return ge;const Se=Ln(t),ke=Qf(Se),Ve=(c=i.serializer)!=null?c:Zf[ke],{pause:ze,resume:rt}=$f(ge,()=>ot(ge.value),{flush:l,deep:M,eventFilter:O});return T&&b&&zf(()=>{yl(T,"storage",Ke),yl(T,Pl,Gt),Q&&Ke()}),Q||Ke(),ge;function ot(Re){try{if(Re==null)s.removeItem(e);else{const at=Ve.write(Re),Bt=s.getItem(e);Bt!==at&&(s.setItem(e,at),T&&T.dispatchEvent(new CustomEvent(Pl,{detail:{key:e,oldValue:Bt,newValue:at,storageArea:s}})))}}catch(at){Y(at)}}function Je(Re){const at=Re?Re.newValue:s.getItem(e);if(at==null)return k&&Se!=null&&s.setItem(e,Ve.write(Se)),Se;if(!Re&&P){const Bt=Ve.read(at);return typeof P=="function"?P(Bt,Se):ke==="object"&&!Array.isArray(Bt)?{...Se,...Bt}:Bt}else return typeof at!="string"?at:Ve.read(at)}function Gt(Re){Ke(Re.detail)}function Ke(Re){if(!(Re&&Re.storageArea!==s)){if(Re&&Re.key==null){ge.value=Se;return}if(!(Re&&Re.key!==e)){ze();try{(Re==null?void 0:Re.newValue)!==Ve.write(ge.value)&&(ge.value=Je(Re))}catch(at){Y(at)}finally{Re?er(rt):rt()}}}}}const ya="GlobalStore",Kf={dataTabSelected:0,heroStatsTabSelected:0,rubyShard:{ticket:0,failure:0,dungeon:0,modifier:0,floor:100},dropChance:{level:0,sdchance:1},guild:{targetLevel:0,expPerHour:0},talisman:{perWA:Array(47).fill(0)},expedition:{playtime:0}},xi=Ma(ya,{state:()=>Tn(ya,Kf,localStorage,{mergeDefaults:!0}),actions:{set(e){console.log(e)},increment(){this.count++},Save(){localStorage.setItem(ya,JSON.stringify(this))}}}),ed=w("tr",null,[w("th",null,"Name"),w("th",null,"Level"),w("th",null,"Effect")],-1),td=["onUpdate:modelValue"],sd=st({__name:"Ritual",setup(e){const t=tt("game");return(s,i)=>(U(),z("table",null,[ed,(U(!0),z(re,null,De(A(t).data.sdg.sdGemRitualCtrl.sdGemList,c=>(U(),z("tr",null,[w("td",null,V(c.NameString())+":",1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.level=l,name:"ritual.level"},null,8,td),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256))]))}}),id=w("tr",null,[w("th",null,"Name"),w("th",null,"Level"),w("th",null,"Effect")],-1),rd=["onUpdate:modelValue"],ad=st({__name:"RubyShop",setup(e){const t=tt("game");return(s,i)=>(U(),z("table",null,[id,(U(!0),z(re,null,De(A(t).data.sdg.shopCtrl.itemStatBonusList,c=>(U(),z("tr",null,[w("td",null,V(c.NameString())+":",1),w("td",null,[ve(w("input",{type:"text",size:"8","onUpdate:modelValue":l=>c.purchasedNum=l,name:"upgrade.purchasedNum"},null,8,rd),[[lt,c.purchasedNum,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256))]))}});class nd{constructor(){o(this,"list",[])}new(t,s=!1){return this.list.push(t),s?t:`data-endpoint="${t}"`}}var nt=(e=>(e[e.Normal=0]="Normal",e[e.Percent=1]="Percent",e[e.Meter=2]="Meter",e[e.TimeDhms=3]="TimeDhms",e))(nt||{});function io(e,t=!0){e=parseInt(e);let s=Math.floor(e/(3600*24)),i=Math.floor(e%(3600*24)/3600),c=Math.floor(e%3600/60),l=Math.floor(e%60);return i<10&&(i="0"+i),c<10&&(c="0"+c),l<10&&(l="0"+l),s==0&&i==0?`${c}m${l}s`:s==0?`${i}h${c}m${l}s`:t?`${s}d ${i}:${c}:${l}`:`${s}d${i}h${c}m${l}s`}function qr(e,t=2,s=null){if(e==null)switch(s){case nt.Normal:return"0%";case nt.Meter:return"0m / sec";default:return 0}e=parseFloat(e);let i=0,c=!1;return s==nt.TimeDhms?io(e):(s==nt.Meter&&(e/=100),s==nt.Percent&&(e*=100),e<0&&(e*=-1,c=!0),e<=1e4?i=e.toFixed(t):e<1e6?i=(e/1e3).toFixed(t)+"K":e<1e9?i=(e/1e6).toFixed(t)+"M":e<1e12?i=(e/1e9).toFixed(t)+"B":e<1e15?i=(e/1e12).toFixed(t)+"T":i=e.toExponential(t),s==nt.Meter?i+"m / sec":(c&&(i.slice(0,1),i="-"+i),s==nt.Percent&&(i+="%"),i.toString()))}function ld(e){if(e instanceof String&&e.includes("e+")||e>=1e15)return e;if(e=e.toString(),e=e.replace(/,/g,"."),/^\d*\.?\d+$/.test(e))return parseFloat(e);{const t=/(.*)(\D)$/gm;e=e.toLowerCase(),e=e.replace(/ /g,""),e=t.exec(e);let s=0;return e[2]=="t"?s=e[1]*1e3**4:e[2]=="b"?s=e[1]*1e3**3:e[2]=="m"?s=e[1]*1e3**2:e[2]=="k"&&(s=e[1]*1e3**1),parseFloat(s)}}const ud=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,od=/\\(\\)?/g;function ro(e){let t=[];return e.charCodeAt(0)===46&&t.push(""),e.replace(ud,function(s,i,c,l){t.push(c?l.replace(od,"$1"):i||s)}),t}function cd(e,t){const s=ro(t);for(let i=0;i<s.length;i++)if(s[i].includes("(")){const c=s[i].replace(/(\w+)\((.*?)\)/gm,"$1"),l=s[i].replace(/(\w+)\((.*?)\)/gm,"$2");e=e[c](l)}else s[i]&&(e=e[s[i]]);return e}const h={convertTo:qr,convertFrom:ld,tDigit:(e,t=2)=>qr(e,t,nt.Normal),percent:(e,t=2)=>qr(e,t,nt.Percent),meter:(e,t=2)=>qr(e,t,nt.Meter),secondsToDhms:io,getBaseLog:(e,t)=>Math.log(e)/Math.log(t),Endpoint:nd,stringToPath:ro,get:cd},hd=w("tr",null,[w("th",null,"Name"),w("th",null,"Level"),w("th",null,"Passive Effect"),w("th",null,"Exp"),w("th",null,"Total Exp")],-1),fd=["onUpdate:modelValue"],dd=w("td",null,null,-1),pd=w("td",null,null,-1),gd=w("td",null,null,-1),md=w("td",null,null,-1),Md=st({__name:"Expedition",setup(e){const t=tt("game");return(s,i)=>(U(),z("table",null,[hd,(U(!0),z(re,null,De(A(t).data.expedition.globalInfoList,c=>(U(),z("tr",null,[w("td",null,V(c.NameString())+": "+V(),1),w("td",null,[ve(w("input",{type:"text",size:"8","onUpdate:modelValue":l=>c.level=l,name:"expedition.level"},null,8,fd),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1),w("td",null,V(A(h).tDigit(c.exp,3))+" / "+V(A(h).tDigit(c.RequiredExp(c.level),3)),1),w("td",null,V(A(h).tDigit(c.TotalExp(),3)),1)]))),256)),w("tr",null,[dd,pd,gd,md,w("td",null,V(A(h).tDigit(A(t).data.expedition.TotalExp(),3)),1)])]))}}),wd=w("tr",null,[w("th",null,"Name"),w("th",null,"Level"),w("th",null,"Effect")],-1),Sd=w("tr",{class:"heading"},[w("td",null,"Automations")],-1),Ad=["onUpdate:modelValue"],bd=w("tr",{class:"heading"},[w("td",null,"Upgrade 1")],-1),kd=["onUpdate:modelValue"],Ed=w("tr",{class:"heading"},[w("td",null,"Upgrade 2")],-1),Dd=["onUpdate:modelValue"],Rd=w("tr",{class:"heading"},[w("td",null,"Upgrade 3")],-1),Cd=["onUpdate:modelValue"],yd=w("tr",{class:"heading"},[w("td",null,"Upgrade 4")],-1),Pd=["onUpdate:modelValue"],vd=st({__name:"SDUpgrade",setup(e){const t=tt("game");return(s,i)=>(U(),z("table",null,[wd,Sd,(U(!0),z(re,null,De(A(t).data.sdg.upgradeCtrl.automationList,c=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.level=l,name:"upgradeLevel"},null,8,Ad),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256)),bd,(U(!0),z(re,null,De(A(t).data.sdg.upgradeCtrl.upgrade1ist,c=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.level=l,name:"upgradeLevel"},null,8,kd),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256)),Ed,(U(!0),z(re,null,De(A(t).data.sdg.upgradeCtrl.upgrade2ist,c=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.level=l,name:"upgradeLevel"},null,8,Dd),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256)),Rd,(U(!0),z(re,null,De(A(t).data.sdg.upgradeCtrl.upgrade3ist,c=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.level=l,name:"upgradeLevel"},null,8,Cd),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256)),yd,(U(!0),z(re,null,De(A(t).data.sdg.upgradeCtrl.upgrade4ist,c=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.level=l,name:"upgradeLevel"},null,8,Pd),[[lt,c.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.EffectValueString()),1)]))),256))]))}}),Bd=w("tr",null,[w("th",null,"Name"),w("th",null,"Rank"),w("th",null,"Purchased"),w("th",null,"Level"),w("th",null,"Topaz"),w("th",null,"Passive Effect")],-1),Ld=["onUpdate:modelValue"],Td=["onUpdate:modelValue"],xd=["onUpdate:modelValue"],Gd=w("td",null,null,-1),Fd=w("td",null,null,-1),Id=w("td",null,null,-1),Hd=w("td",null,null,-1),_d=st({__name:"SDPowerup",setup(e){const t=tt("game"),s=Vt(()=>{let i=0;return t.data.sdg.upgradeCtrl.automationList.forEach(c=>{i+=c.TotalCost()}),t.data.battle.superDungeonCtrl.powerupList.forEach(c=>{i+=c.TotalRankCost()}),i});return(i,c)=>(U(),z("table",null,[Bd,(U(!0),z(re,null,De(A(t).data.battle.superDungeonCtrl.powerupList,l=>(U(),z("tr",null,[w("td",null,V(l.NameString())+":",1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":M=>l.rank=M,name:"powerup.rank"},null,8,Ld),[[lt,l.rank,void 0,{lazy:!0,number:!0}]])]),w("td",null,[ve(w("input",{type:"text",size:"10","onUpdate:modelValue":M=>l.purchasedNum=M,name:"powerup.purchasedNum"},null,8,Td),[[lt,l.purchasedNum,void 0,{lazy:!0,number:!0}]])]),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":M=>l.level=M,name:"powerup.level"},null,8,xd),[[lt,l.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(l.TotalRankCost()),1),w("td",null,V(l.EffectValueString()),1)]))),256)),w("tr",null,[Gd,Fd,Id,Hd,w("td",null,V(s.value),1)])]))}}),Vd=w("tr",null,[w("th",null,"Name"),w("th",null,"Level"),w("th",null,"Rank"),w("th",null,"Loyalty"),w("th",null,"Effect")],-1),Nd=["onUpdate:modelValue"],qd=["onUpdate:modelValue"],Ud=["onUpdate:modelValue"],Wd={class:"summary"},Od=w("td",null,"Total:",-1),$d=w("td",null,null,-1),zd=st({__name:"Bestiary",setup(e){const t=tt("game");return(s,i)=>(U(),z("table",null,[Vd,(U(!0),z(re,null,De(A(t).data.monster.globalInfoList,c=>(U(),z("tr",null,[w("td",null,V(c.MonsterName()),1),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.pet.level=l,name:"monster.pet.level"},null,8,Nd),[[lt,c.pet.level,void 0,{lazy:!0,number:!0}]])]),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.pet.rank=l,name:"monster.pet.rank"},null,8,qd),[[lt,c.pet.rank,void 0,{lazy:!0,number:!0}]])]),w("td",null,[ve(w("input",{type:"text",size:"6","onUpdate:modelValue":l=>c.pet.loyalty=l,name:"monster.pet.loyalty"},null,8,Ud),[[lt,c.pet.loyalty,void 0,{lazy:!0,number:!0}]])]),w("td",null,V(c.pet.PassiveEffectString()),1)]))),256)),w("tr",Wd,[Od,$d,w("td",null,V(A(t).data.monster.TotalPetRank()),1)])]))}}),Jd=["size"],ps=st({__name:"AppInput",props:xu({size:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(e){const t=e,[s,i]=Xu(e,"modelValue",{set(l){return i.convert?h.convertFrom(l):l},get(l){return i.convert?h.convertTo(l):l}}),c=Ct(t.size?t.size:8);return(l,M)=>ve((U(),z("input",{name:"input",type:"text",size:c.value,"onUpdate:modelValue":M[0]||(M[0]=b=>Wt(s)?s.value=b:null)},null,8,Jd)),[[lt,A(s),void 0,{lazy:!0}]])}}),Xd=w("tr",null,[w("th",null,"Hero"),w("th",null,"VIT"),w("th",null,"STR"),w("th",null,"INT"),w("th",null,"AGI"),w("th",null,"LUK")],-1),jd=w("tr",null,[w("th",null,"Hero"),w("th",null,"SD VIT"),w("th",null,"SD STR"),w("th",null,"SD INT"),w("th",null,"SD AGI"),w("th",null,"SD LUK")],-1),Yd=st({__name:"Ability",setup(e){const t=tt("game");return(s,i)=>(U(),z(re,null,[w("table",null,[Xd,(U(!0),z(re,null,De(A(t).data.stats.heroes,c=>(U(),z("tr",null,[w("td",null,V(A(v)[c.heroKind]),1),w("td",null,[X(ps,{modelValue:c.abilities[0].point.value,"onUpdate:modelValue":l=>c.abilities[0].point.value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.abilities[1].point.value,"onUpdate:modelValue":l=>c.abilities[1].point.value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.abilities[2].point.value,"onUpdate:modelValue":l=>c.abilities[2].point.value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.abilities[3].point.value,"onUpdate:modelValue":l=>c.abilities[3].point.value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.abilities[4].point.value,"onUpdate:modelValue":l=>c.abilities[4].point.value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])])]))),256))]),w("table",null,[jd,(U(!0),z(re,null,De(A(t).data.superStats.heroes,c=>(U(),z("tr",null,[w("td",null,V(A(v)[c.heroKind]),1),w("td",null,[X(ps,{modelValue:c.superAbilities[0].value,"onUpdate:modelValue":l=>c.superAbilities[0].value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.superAbilities[1].value,"onUpdate:modelValue":l=>c.superAbilities[1].value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.superAbilities[2].value,"onUpdate:modelValue":l=>c.superAbilities[2].value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.superAbilities[3].value,"onUpdate:modelValue":l=>c.superAbilities[3].value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,[X(ps,{modelValue:c.superAbilities[4].value,"onUpdate:modelValue":l=>c.superAbilities[4].value=l,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])])]))),256))])],64))}}),Qd=w("div",{style:{display:"flex"}},null,-1),Zd=w("tr",null,[w("th",null,"Global Quest"),w("th",null,"Completed")],-1),Kd=["onUpdate:modelValue"],ep=w("hr",null,null,-1),tp=w("tr",null,[w("th",null,"Title Quest"),w("th",null,"Warrior"),w("th",null,"Wizard"),w("th",null,"Angel"),w("th",null,"Thief"),w("th",null,"Archer"),w("th",null,"Tamer")],-1),sp=["onUpdate:modelValue"],ip=["onUpdate:modelValue"],rp=["onUpdate:modelValue"],ap=["onUpdate:modelValue"],np=["onUpdate:modelValue"],lp=["onUpdate:modelValue"],up=st({__name:"Quest",setup(e){const t=tt("game");return(s,i)=>(U(),z(re,null,[Qd,w("table",null,[Zd,(U(!0),z(re,null,De(A(t).data.quest.globalQuests,c=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":l=>c.isCleared=l},null,8,Kd),[[ls,c.isCleared]])])]))),256))]),ep,w("table",null,[tp,(U(!0),z(re,null,De(A(t).data.quest.titleQuestList[0],(c,l)=>(U(),z("tr",null,[w("td",null,V(c.NameString()),1),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":M=>A(t).data.quest.titleQuestList[0][l].isCleared=M},null,8,sp),[[ls,A(t).data.quest.titleQuestList[0][l].isCleared]])]),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":M=>A(t).data.quest.titleQuestList[1][l].isCleared=M},null,8,ip),[[ls,A(t).data.quest.titleQuestList[1][l].isCleared]])]),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":M=>A(t).data.quest.titleQuestList[2][l].isCleared=M},null,8,rp),[[ls,A(t).data.quest.titleQuestList[2][l].isCleared]])]),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":M=>A(t).data.quest.titleQuestList[3][l].isCleared=M},null,8,ap),[[ls,A(t).data.quest.titleQuestList[3][l].isCleared]])]),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":M=>A(t).data.quest.titleQuestList[4][l].isCleared=M},null,8,np),[[ls,A(t).data.quest.titleQuestList[4][l].isCleared]])]),w("td",null,[ve(w("input",{type:"checkbox","onUpdate:modelValue":M=>A(t).data.quest.titleQuestList[5][l].isCleared=M},null,8,lp),[[ls,A(t).data.quest.titleQuestList[5][l].isCleared]])])]))),256))])],64))}}),op=w("div",{style:{display:"flex"}},null,-1),cp=w("tr",null,[w("th",null,"Building Name"),w("th",null,"Level"),w("th",null,"Effect")],-1),hp={class:"summary"},fp={class:"green",style:{"padding-right":"5px"}},dp=w("td",null,"-Stone",-1),pp=w("td",null,"-Crystal",-1),gp=w("td",null,"-Leaf",-1),mp=st({__name:"Town",setup(e){const t=tt("game");return(s,i)=>(U(),z(re,null,[op,w("table",null,[cp,(U(!0),z(re,null,De(A(t).data.town.buildings,c=>(U(),z(re,null,[w("tr",hp,[w("td",null,V(c.NameString()),1),w("td",fp,V(c.level[c.kind])+" + "+V(c.levelBonus.Value()),1),w("td",null,V(c.EffectValueString()),1)]),w("tr",null,[dp,w("td",null,[X(ps,{modelValue:c.research[0].level,"onUpdate:modelValue":l=>c.research[0].level=l,size:4},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,V(c.research[0].EffectValueString()),1)]),w("tr",null,[pp,w("td",null,[X(ps,{modelValue:c.research[1].level,"onUpdate:modelValue":l=>c.research[1].level=l,size:4},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,V(c.research[1].EffectValueString()),1)]),w("tr",null,[gp,w("td",null,[X(ps,{modelValue:c.research[2].level,"onUpdate:modelValue":l=>c.research[2].level=l,size:4},null,8,["modelValue","onUpdate:modelValue"])]),w("td",null,V(c.research[2].EffectValueString()),1)])],64))),256))])],64))}}),Mp=st({__name:"Page",setup(e){const t=xi();return(s,i)=>(U(),zt(to,{"selected-index":A(t).dataTabSelected,onTabChange:i[0]||(i[0]=c=>{A(t).dataTabSelected=c})},{default:ut(()=>[X($t,{title:"Main"},{default:ut(()=>[X(Ff)]),_:1}),X($t,{title:"Ability"},{default:ut(()=>[X(Yd)]),_:1}),X($t,{title:"Quest"},{default:ut(()=>[X(up)]),_:1}),X($t,{title:"Town"},{default:ut(()=>[X(mp)]),_:1}),X($t,{title:"Bestiary"},{default:ut(()=>[X(zd)]),_:1}),X($t,{title:"Talisman"},{default:ut(()=>[X(vf)]),_:1}),X($t,{title:"Expedition"},{default:ut(()=>[X(Md)]),_:1}),X($t,{title:"SD Ritual"},{default:ut(()=>[X(sd)]),_:1}),X($t,{title:"Ruby Shop"},{default:ut(()=>[X(ad)]),_:1}),X($t,{title:"SD Upgrade"},{default:ut(()=>[X(vd)]),_:1}),X($t,{title:"SD Powerup"},{default:ut(()=>[X(_d)]),_:1})]),_:1},8,["selected-index"]))}});function si(e){return e>0?"green":e<0?"red":""}var a=(e=>(e[e.Nothing=0]="Nothing",e[e.HPAdder=1]="HPAdder",e[e.MPAdder=2]="MPAdder",e[e.ATKAdder=3]="ATKAdder",e[e.MATKAdder=4]="MATKAdder",e[e.DEFAdder=5]="DEFAdder",e[e.MDEFAdder=6]="MDEFAdder",e[e.SPDAdder=7]="SPDAdder",e[e.HPMultiplier=8]="HPMultiplier",e[e.MPMultiplier=9]="MPMultiplier",e[e.ATKMultiplier=10]="ATKMultiplier",e[e.MATKMultiplier=11]="MATKMultiplier",e[e.DEFMultiplier=12]="DEFMultiplier",e[e.MDEFMultiplier=13]="MDEFMultiplier",e[e.ATKPropotion=14]="ATKPropotion",e[e.MATKPropotion=15]="MATKPropotion",e[e.DEFPropotion=16]="DEFPropotion",e[e.MDEFPropotion=17]="MDEFPropotion",e[e.FireResistance=18]="FireResistance",e[e.IceResistance=19]="IceResistance",e[e.ThunderResistance=20]="ThunderResistance",e[e.LightResistance=21]="LightResistance",e[e.DarkResistance=22]="DarkResistance",e[e.PhysicalAbsorption=23]="PhysicalAbsorption",e[e.FireAbsorption=24]="FireAbsorption",e[e.IceAbsorption=25]="IceAbsorption",e[e.ThunderAbsorption=26]="ThunderAbsorption",e[e.LightAbsorption=27]="LightAbsorption",e[e.DarkAbsorption=28]="DarkAbsorption",e[e.DebuffResistance=29]="DebuffResistance",e[e.EquipmentDropChance=30]="EquipmentDropChance",e[e.SlimeDropChance=31]="SlimeDropChance",e[e.MagicSlimeDropChance=32]="MagicSlimeDropChance",e[e.SpiderDropChance=33]="SpiderDropChance",e[e.BatDropChance=34]="BatDropChance",e[e.FairyDropChance=35]="FairyDropChance",e[e.FoxDropChance=36]="FoxDropChance",e[e.DevilFishDropChance=37]="DevilFishDropChance",e[e.TreantDropChance=38]="TreantDropChance",e[e.FlameTigerDropChance=39]="FlameTigerDropChance",e[e.UnicornDropChance=40]="UnicornDropChance",e[e.ColorMaterialDropChance=41]="ColorMaterialDropChance",e[e.PhysicalCritical=42]="PhysicalCritical",e[e.MagicalCritical=43]="MagicalCritical",e[e.EXPGain=44]="EXPGain",e[e.SkillProficiency=45]="SkillProficiency",e[e.EquipmentProficiency=46]="EquipmentProficiency",e[e.MoveSpeedMultiplier=47]="MoveSpeedMultiplier",e[e.GoldGain=48]="GoldGain",e[e.StoneGain=49]="StoneGain",e[e.CrystalGain=50]="CrystalGain",e[e.LeafGain=51]="LeafGain",e[e.WarriorSkillLevel=52]="WarriorSkillLevel",e[e.WizardSkillLevel=53]="WizardSkillLevel",e[e.AngelSkillLevel=54]="AngelSkillLevel",e[e.ThiefSkillLevel=55]="ThiefSkillLevel",e[e.ArcherSkillLevel=56]="ArcherSkillLevel",e[e.TamerSkillLevel=57]="TamerSkillLevel",e[e.AllSkillLevel=58]="AllSkillLevel",e[e.SlimeKnowledge=59]="SlimeKnowledge",e[e.MagicSlimeKnowledge=60]="MagicSlimeKnowledge",e[e.SpiderKnowledge=61]="SpiderKnowledge",e[e.BatKnowledge=62]="BatKnowledge",e[e.FairyKnowledge=63]="FairyKnowledge",e[e.FoxKnowledge=64]="FoxKnowledge",e[e.DevilFishKnowledge=65]="DevilFishKnowledge",e[e.TreantKnowledge=66]="TreantKnowledge",e[e.FlameTigerKnowledge=67]="FlameTigerKnowledge",e[e.UnicornKnowledge=68]="UnicornKnowledge",e[e.PhysicalDamage=69]="PhysicalDamage",e[e.FireDamage=70]="FireDamage",e[e.IceDamage=71]="IceDamage",e[e.ThunderDamage=72]="ThunderDamage",e[e.LightDamage=73]="LightDamage",e[e.DarkDamage=74]="DarkDamage",e[e.HpRegen=75]="HpRegen",e[e.MpRegen=76]="MpRegen",e[e.TamingPoint=77]="TamingPoint",e[e.WarriorSkillRange=78]="WarriorSkillRange",e[e.WizardSkillRange=79]="WizardSkillRange",e[e.AngelSkillRange=80]="AngelSkillRange",e[e.ThiefSkillRange=81]="ThiefSkillRange",e[e.ArcherSkillRange=82]="ArcherSkillRange",e[e.TamerSkillRange=83]="TamerSkillRange",e[e.TownMatGain=84]="TownMatGain",e[e.TownMatAreaClearGain=85]="TownMatAreaClearGain",e[e.RebirthPointGain1=86]="RebirthPointGain1",e[e.RebirthPointGain2=87]="RebirthPointGain2",e[e.RebirthPointGain3=88]="RebirthPointGain3",e[e.CriticalDamage=89]="CriticalDamage",e[e.BlessingEffect=90]="BlessingEffect",e[e.MoveSpeedAdder=91]="MoveSpeedAdder",e[e.PetEXPGain=92]="PetEXPGain",e[e.LoyaltyPointGain=93]="LoyaltyPointGain",e[e.CatalystDoubleCriticalChance=94]="CatalystDoubleCriticalChance",e[e.WarriorSkillEffectRange=95]="WarriorSkillEffectRange",e[e.WizardSkillEffectRange=96]="WizardSkillEffectRange",e[e.AngelSkillEffectRange=97]="AngelSkillEffectRange",e[e.ThiefSkillEffectRange=98]="ThiefSkillEffectRange",e[e.ArcherSkillEffectRange=99]="ArcherSkillEffectRange",e[e.TamerSkillEffectRange=100]="TamerSkillEffectRange",e[e.HpRegenMultiplier=101]="HpRegenMultiplier",e[e.MpRegenMultiplier=102]="MpRegenMultiplier",e[e.ArmoredFury=103]="ArmoredFury",e[e.WardedFury=104]="WardedFury",e[e.PetPhysicalCriticalChance=105]="PetPhysicalCriticalChance",e[e.PetMagicalCriticalChance=106]="PetMagicalCriticalChance",e[e.PetCriticalDamage=107]="PetCriticalDamage",e[e.PetDebuffResistance=108]="PetDebuffResistance",e[e.StoneTownResearchPower=109]="StoneTownResearchPower",e[e.CrystalTownResearchPower=110]="CrystalTownResearchPower",e[e.LeafTownResearchPower=111]="LeafTownResearchPower",e[e.GuildEXPGain=112]="GuildEXPGain",e[e.SPDMultiplier=113]="SPDMultiplier",e[e.CriticalDamageMultiplier=114]="CriticalDamageMultiplier",e[e.SkillProficiencyMultiplier=115]="SkillProficiencyMultiplier",e[e.EquipmentProficiencyMultiplier=116]="EquipmentProficiencyMultiplier",e[e.EXPGainMultiplier=117]="EXPGainMultiplier",e[e.GoldGainMultiplier=118]="GoldGainMultiplier",e[e.PhysicalDamageMultiplier=119]="PhysicalDamageMultiplier",e[e.FireDamageMultiplier=120]="FireDamageMultiplier",e[e.IceDamageMultiplier=121]="IceDamageMultiplier",e[e.ThunderDamageMultiplier=122]="ThunderDamageMultiplier",e[e.LightDamageMultiplier=123]="LightDamageMultiplier",e[e.DarkDamageMultiplier=124]="DarkDamageMultiplier",e[e.TamingPointMultiplier=125]="TamingPointMultiplier",e[e.PetEXPGainMultiplier=126]="PetEXPGainMultiplier",e[e.LoyaltyPointGainMultiplier=127]="LoyaltyPointGainMultiplier",e[e.BlessingEffectMultiplier=128]="BlessingEffectMultiplier",e[e.PhysicalCriticalMultiplier=129]="PhysicalCriticalMultiplier",e[e.MagicalCriticalMultiplier=130]="MagicalCriticalMultiplier",e[e.ChallengeBossKnowledge=131]="ChallengeBossKnowledge",e[e.HPAfter=132]="HPAfter",e[e.MPAfter=133]="MPAfter",e[e.ATKAfter=134]="ATKAfter",e[e.MATKAfter=135]="MATKAfter",e[e.DEFAfter=136]="DEFAfter",e[e.MDEFAfter=137]="MDEFAfter",e[e.SPDAfter=138]="SPDAfter",e[e.MoveSpeedAfter=139]="MoveSpeedAfter",e[e.PhysicalCriticalAfter=140]="PhysicalCriticalAfter",e[e.MagicalCriticalAfter=141]="MagicalCriticalAfter",e[e.CriticalDamageAfter=142]="CriticalDamageAfter",e[e.DebuffResistanceAfter=143]="DebuffResistanceAfter",e[e.PhysicalDamageAfter=144]="PhysicalDamageAfter",e[e.FireDamageAfter=145]="FireDamageAfter",e[e.IceDamageAfter=146]="IceDamageAfter",e[e.ThunderDamageAfter=147]="ThunderDamageAfter",e[e.LightDamageAfter=148]="LightDamageAfter",e[e.DarkDamageAfter=149]="DarkDamageAfter",e[e.FireResistanceAfter=150]="FireResistanceAfter",e[e.IceResistanceAfter=151]="IceResistanceAfter",e[e.ThunderResistanceAfter=152]="ThunderResistanceAfter",e[e.LightResistanceAfter=153]="LightResistanceAfter",e[e.DarkResistanceAfter=154]="DarkResistanceAfter",e[e.SlimeKnowledgeAfter=155]="SlimeKnowledgeAfter",e[e.MagicSlimeKnowledgeAfter=156]="MagicSlimeKnowledgeAfter",e[e.SpiderKnowledgeAfter=157]="SpiderKnowledgeAfter",e[e.BatKnowledgeAfter=158]="BatKnowledgeAfter",e[e.FairyKnowledgeAfter=159]="FairyKnowledgeAfter",e[e.FoxKnowledgeAfter=160]="FoxKnowledgeAfter",e[e.DevilFishKnowledgeAfter=161]="DevilFishKnowledgeAfter",e[e.TreantKnowledgeAfter=162]="TreantKnowledgeAfter",e[e.FlameTigerKnowledgeAfter=163]="FlameTigerKnowledgeAfter",e[e.UnicornKnowledgeAfter=164]="UnicornKnowledgeAfter",e[e.ChallengeBossKnowledgeAfter=165]="ChallengeBossKnowledgeAfter",e[e.SDDamageMultiplier=166]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=167]="SDDamageCutMultiplier",e[e.FameGain=168]="FameGain",e[e.DungeonCoinGain=169]="DungeonCoinGain",e[e.ExtraAfterDamage=170]="ExtraAfterDamage",e))(a||{});function wp(e){switch(e){case a.Nothing:return"Enchant Slot";case a.HPAdder:return"HP Adder";case a.MPAdder:return"MP Adder";case a.ATKAdder:return"ATK Adder";case a.MATKAdder:return"MATK Adder";case a.DEFAdder:return"DEF Adder";case a.MDEFAdder:return"MDEF Adder";case a.SPDAdder:return"SPD Adder";case a.HPMultiplier:return"HP Multiplier";case a.MPMultiplier:return"MP Multiplier";case a.ATKMultiplier:return"ATK Multiplier";case a.MATKMultiplier:return"MATK Multiplier";case a.DEFMultiplier:return"DEF Multiplier";case a.MDEFMultiplier:return"MDEF Multiplier";case a.ATKPropotion:return"ATK Proportion";case a.MATKPropotion:return"MATK Proportion";case a.DEFPropotion:return"DEF Proportion";case a.MDEFPropotion:return"MDEF Proportion";case a.FireResistance:return"Fire Resistance";case a.IceResistance:return"Ice Resistance";case a.ThunderResistance:return"Thunder Resistance";case a.LightResistance:return"Light Resistance";case a.DarkResistance:return"Dark Resistance";case a.PhysicalAbsorption:return"Physical Absorption";case a.FireAbsorption:return"Fire Absorption";case a.IceAbsorption:return"Ice Absorption";case a.ThunderAbsorption:return"Thunder Absorption";case a.LightAbsorption:return"Light Absorption";case a.DarkAbsorption:return"Dark Absorption";case a.DebuffResistance:return"Debuff Resistance";case a.EquipmentDropChance:return"Equipment Drop";case a.SlimeDropChance:return"Slime Drop";case a.MagicSlimeDropChance:return"Magicslime Drop";case a.SpiderDropChance:return"Spider Drop";case a.BatDropChance:return"Bat Drop";case a.FairyDropChance:return"Fairy Drop";case a.FoxDropChance:return"Fox Drop";case a.DevilFishDropChance:return"Devilfish Drop";case a.TreantDropChance:return"Treant Drop";case a.FlameTigerDropChance:return"Flametiger Drop";case a.UnicornDropChance:return"Unicorn Drop";case a.ColorMaterialDropChance:return"Rare Material Drop";case a.PhysicalCritical:return"Physical Critical";case a.MagicalCritical:return"Magical Critical";case a.EXPGain:return"EXP Gain";case a.SkillProficiency:return"Skill Proficiency";case a.EquipmentProficiency:return"Equipment Proficiency";case a.MoveSpeedMultiplier:return"Move Speed Multiplier";case a.GoldGain:return"Gold Gain";case a.StoneGain:return"Stone Gain";case a.CrystalGain:return"Crystal Gain";case a.LeafGain:return"Leaf Gain";case a.WarriorSkillLevel:return"Warrior Skill";case a.WizardSkillLevel:return"Wizard Skill";case a.AngelSkillLevel:return"Angel Skill";case a.ThiefSkillLevel:return"Thief Skill";case a.ArcherSkillLevel:return"Archer Skill";case a.TamerSkillLevel:return"Tamer Skill";case a.AllSkillLevel:return"All Skill";case a.SlimeKnowledge:return"Slime Knowledge";case a.MagicSlimeKnowledge:return"Magicslime Knowledge";case a.SpiderKnowledge:return"Spider Knowledge";case a.BatKnowledge:return"Bat Knowledge";case a.FairyKnowledge:return"Fairy Knowledge";case a.FoxKnowledge:return"Fox Knowledge";case a.DevilFishKnowledge:return"Devilfish Knowledge";case a.TreantKnowledge:return"Treant Knowledge";case a.FlameTigerKnowledge:return"Flametiger Knowledge";case a.UnicornKnowledge:return"Unicorn Knowledge";case a.PhysicalDamage:return"Physical Damage";case a.FireDamage:return"Fire Damage";case a.IceDamage:return"Ice Damage";case a.ThunderDamage:return"Thunder Damage";case a.LightDamage:return"Light Damage";case a.DarkDamage:return"Dark Damage";case a.HpRegen:return"HP Regeneration";case a.MpRegen:return"MP Regeneration";case a.TamingPoint:return"Taming Point";case a.WarriorSkillRange:return"Warrior Skill Range";case a.WizardSkillRange:return"Wizard Skill Range";case a.AngelSkillRange:return"Angel Skill Range";case a.ThiefSkillRange:return"Thief Skill Range";case a.ArcherSkillRange:return"Archer Skill Range";case a.TamerSkillRange:return"Tamer Skill Range";case a.TownMatGain:return"Town Material Gain";case a.TownMatAreaClearGain:return"Area Town Material";case a.RebirthPointGain1:return"Tier 1 Rebirth PoGain";case a.RebirthPointGain2:return"Tier 2 Rebirth PoGain";case a.RebirthPointGain3:return"Tier 3 Rebirth PoGain";case a.CriticalDamage:return"Critical Damage";case a.BlessingEffect:return"Blessing Effect";case a.MoveSpeedAdder:return"Move Speed Adder";case a.PetEXPGain:return"Pet EXP Gain";case a.LoyaltyPointGain:return"Loyalty Point Gain";case a.CatalystDoubleCriticalChance:return"Catalyst Double Critical";case a.WarriorSkillEffectRange:return"Warrior Area of Effect";case a.WizardSkillEffectRange:return"Wizard Area of Effect";case a.AngelSkillEffectRange:return"Angel Area of Effect";case a.ThiefSkillEffectRange:return"Thief Area of Effect";case a.ArcherSkillEffectRange:return"Archer Area of Effect";case a.TamerSkillEffectRange:return"Tamer Area of Effect";case a.HpRegenMultiplier:return"HP Regen Multiplier";case a.MpRegenMultiplier:return"MP Regen Multiplier";case a.ArmoredFury:return"Armored Fury";case a.WardedFury:return"Warded Fury";case a.PetPhysicalCriticalChance:return"Pet Physical Critical Chance";case a.PetMagicalCriticalChance:return"Pet Magical Critical Chance";case a.PetCriticalDamage:return"Pet Critical Damage";case a.PetDebuffResistance:return"Pet Debuff Resistance";case a.StoneTownResearchPower:return"Stone Research Power";case a.CrystalTownResearchPower:return"Crystal Research Power";case a.LeafTownResearchPower:return"Leaf Research Power";case a.GuildEXPGain:return"Guild EXP Gain";case a.SPDMultiplier:return"SPD Multiplier";case a.CriticalDamageMultiplier:return"Critical Damage Multiplier";case a.SkillProficiencyMultiplier:return"Skill Proficiency Multiplier";case a.EquipmentProficiencyMultiplier:return"Equipment Proficiency Multiplier";case a.EXPGainMultiplier:return"EXP Gain Multiplier";case a.GoldGainMultiplier:return"Gold Gain Multiplier";case a.PhysicalDamageMultiplier:return"Physical Damage Multiplier";case a.FireDamageMultiplier:return"Fire Damage Multiplier";case a.IceDamageMultiplier:return"Ice Damage Multiplier";case a.ThunderDamageMultiplier:return"Thunder Damage Multiplier";case a.LightDamageMultiplier:return"Light Damage Multiplier";case a.DarkDamageMultiplier:return"Dark Damage Multiplier";case a.TamingPointMultiplier:return"Taming Point Multiplier";case a.PetEXPGainMultiplier:return"Pet EXP Gain Multiplier";case a.LoyaltyPointGainMultiplier:return"Loyalty Point Gain Multiplier";case a.BlessingEffectMultiplier:return"Blessing Effect Multiplier";case a.PhysicalCriticalMultiplier:return"Physical Critical Multiplier";case a.MagicalCriticalMultiplier:return"Magical Critical Multiplier";case a.ChallengeBossKnowledge:return"Challenge Boss Knowledge";case a.HPAfter:return"HP After";case a.MPAfter:return"MP After";case a.ATKAfter:return"ATK After";case a.MATKAfter:return"MATK After";case a.DEFAfter:return"DEF After";case a.MDEFAfter:return"MDEF After";case a.SPDAfter:return"SPD After";case a.MoveSpeedAfter:return"Move Speed After";case a.PhysicalCriticalAfter:return"Physical Critical After";case a.MagicalCriticalAfter:return"Magical Critical After";case a.CriticalDamageAfter:return"Critical Damage After";case a.DebuffResistanceAfter:return"Debuff Resistance After";case a.PhysicalDamageAfter:return"Physical Damage After";case a.FireDamageAfter:return"Fire Damage After";case a.IceDamageAfter:return"Ice Damage After";case a.ThunderDamageAfter:return"Thunder Damage After";case a.LightDamageAfter:return"Light Damage After";case a.DarkDamageAfter:return"Dark Damage After";case a.FireResistanceAfter:return"Fire Resistance After";case a.IceResistanceAfter:return"Ice Resistance After";case a.ThunderResistanceAfter:return"Thunder Resistance After";case a.LightResistanceAfter:return"Light Resistance After";case a.DarkResistanceAfter:return"Dark Resistance After";case a.SlimeKnowledgeAfter:return"Slime Knowledge After";case a.MagicSlimeKnowledgeAfter:return"Magicslime Knowledge After";case a.SpiderKnowledgeAfter:return"Spider Knowledge After";case a.BatKnowledgeAfter:return"Bat Knowledge After";case a.FairyKnowledgeAfter:return"Fairy Knowledge After";case a.FoxKnowledgeAfter:return"Fox Knowledge After";case a.DevilFishKnowledgeAfter:return"Devilfish Knowledge After";case a.TreantKnowledgeAfter:return"Treant Knowledge After";case a.FlameTigerKnowledgeAfter:return"Flametiger Knowledge After";case a.UnicornKnowledgeAfter:return"Unicorn Knowledge After";case a.ChallengeBossKnowledgeAfter:return"Challenge Boss Knowledge After";case a.SDDamageMultiplier:return"SD Damage Multiplier";case a.SDDamageCutMultiplier:return"SD Damage Cut Multiplier";case a.FameGain:return"Fame Gain";case a.DungeonCoinGain:return"Dungeon Coin Gain";case a.ExtraAfterDamage:return"Extra After Damage";default:return e}}var g=(e=>(e[e.Nothing=0]="Nothing",e[e.DullSword=1]="DullSword",e[e.BrittleStaff=2]="BrittleStaff",e[e.FlimsyWing=3]="FlimsyWing",e[e.WornDart=4]="WornDart",e[e.SmallBow=5]="SmallBow",e[e.WoodenRecorder=6]="WoodenRecorder",e[e.OldCloak=7]="OldCloak",e[e.BlueHat=8]="BlueHat",e[e.OrangeHat=9]="OrangeHat",e[e.TShirt=10]="TShirt",e[e.ClothGlove=11]="ClothGlove",e[e.BlueTShirt=12]="BlueTShirt",e[e.OrangeTShirt=13]="OrangeTShirt",e[e.ClothBelt=14]="ClothBelt",e[e.ClothShoes=15]="ClothShoes",e[e.IronRing=16]="IronRing",e[e.PearlEarring=17]="PearlEarring",e[e.FireBrooch=18]="FireBrooch",e[e.IceBrooch=19]="IceBrooch",e[e.ThunderBrooch=20]="ThunderBrooch",e[e.LightBrooch=21]="LightBrooch",e[e.DarkBrooch=22]="DarkBrooch",e[e.WoodenShield=23]="WoodenShield",e[e.LongSword=24]="LongSword",e[e.LongStaff=25]="LongStaff",e[e.WarmWing=26]="WarmWing",e[e.DualDagger=27]="DualDagger",e[e.ReinforcedBow=28]="ReinforcedBow",e[e.Flute=29]="Flute",e[e.FireStaff=30]="FireStaff",e[e.IceStaff=31]="IceStaff",e[e.ThunderStaff=32]="ThunderStaff",e[e.LeatherBelt=33]="LeatherBelt",e[e.LeatherShoes=34]="LeatherShoes",e[e.WarmCloak=35]="WarmCloak",e[e.LeatherArmor=36]="LeatherArmor",e[e.LeatherGlove=37]="LeatherGlove",e[e.LeatherShield=38]="LeatherShield",e[e.FireRing=39]="FireRing",e[e.IceRing=40]="IceRing",e[e.ThunderRing=41]="ThunderRing",e[e.LightRing=42]="LightRing",e[e.DarkRing=43]="DarkRing",e[e.EnhancedFireBrooch=44]="EnhancedFireBrooch",e[e.EnhancedIceBrooch=45]="EnhancedIceBrooch",e[e.EnhancedThunderBrooch=46]="EnhancedThunderBrooch",e[e.EnhancedLightBrooch=47]="EnhancedLightBrooch",e[e.EnhancedDarkBrooch=48]="EnhancedDarkBrooch",e[e.BattleSword=49]="BattleSword",e[e.BattleStaff=50]="BattleStaff",e[e.BattleWing=51]="BattleWing",e[e.BattleDagger=52]="BattleDagger",e[e.BattleBow=53]="BattleBow",e[e.BattleRecorder=54]="BattleRecorder",e[e.SlimeSword=55]="SlimeSword",e[e.SlimeGlove=56]="SlimeGlove",e[e.SlimeRing=57]="SlimeRing",e[e.SlimeBelt=58]="SlimeBelt",e[e.SlimePincenez=59]="SlimePincenez",e[e.SlimeWing=60]="SlimeWing",e[e.SlimePoncho=61]="SlimePoncho",e[e.SlimeDart=62]="SlimeDart",e[e.MagicSlimeStick=63]="MagicSlimeStick",e[e.MagicSlimeHat=64]="MagicSlimeHat",e[e.MagicSlimeBow=65]="MagicSlimeBow",e[e.MagicSlimeShoes=66]="MagicSlimeShoes",e[e.MagicSlimeRecorder=67]="MagicSlimeRecorder",e[e.MagicSlimeEarring=68]="MagicSlimeEarring",e[e.MagicSlimeBalloon=69]="MagicSlimeBalloon",e[e.MagicSlimeSkirt=70]="MagicSlimeSkirt",e[e.SpiderHat=71]="SpiderHat",e[e.SpiderSkirt=72]="SpiderSkirt",e[e.SpiderSuit=73]="SpiderSuit",e[e.SpiderDagger=74]="SpiderDagger",e[e.SpiderWing=75]="SpiderWing",e[e.SpiderCatchingNet=76]="SpiderCatchingNet",e[e.SpiderStick=77]="SpiderStick",e[e.SpiderFoldingFan=78]="SpiderFoldingFan",e[e.BatRing=79]="BatRing",e[e.BatShoes=80]="BatShoes",e[e.BatSword=81]="BatSword",e[e.BatHat=82]="BatHat",e[e.BatRecorder=83]="BatRecorder",e[e.BatBow=84]="BatBow",e[e.BatMascaradeMask=85]="BatMascaradeMask",e[e.BatCloak=86]="BatCloak",e[e.BronzeShoulder=87]="BronzeShoulder",e[e.BattleRing=88]="BattleRing",e[e.Halo=89]="Halo",e[e.IronShoulder=90]="IronShoulder",e[e.StrengthRing=91]="StrengthRing",e[e.GoldenRing=92]="GoldenRing",e[e.GoldenFireRing=93]="GoldenFireRing",e[e.GoldenIceRing=94]="GoldenIceRing",e[e.GoldenThunderRing=95]="GoldenThunderRing",e[e.GoldenLightRing=96]="GoldenLightRing",e[e.GoldenDarkRing=97]="GoldenDarkRing",e[e.IronBelt=98]="IronBelt",e[e.IronShoes=99]="IronShoes",e[e.CopperArmor=100]="CopperArmor",e[e.IronGlove=101]="IronGlove",e[e.TowerShield=102]="TowerShield",e[e.FireTowerShield=103]="FireTowerShield",e[e.IceTowerShield=104]="IceTowerShield",e[e.ThunderTowerShield=105]="ThunderTowerShield",e[e.LightTowerShield=106]="LightTowerShield",e[e.DarkTowerShield=107]="DarkTowerShield",e[e.SavageRing=108]="SavageRing",e[e.SpellboundFireBrooch=109]="SpellboundFireBrooch",e[e.SpellboundIceBrooch=110]="SpellboundIceBrooch",e[e.SpellboundThunderBrooch=111]="SpellboundThunderBrooch",e[e.SpellboundLightBrooch=112]="SpellboundLightBrooch",e[e.SpellboundDarkBrooch=113]="SpellboundDarkBrooch",e[e.CopperHelm=114]="CopperHelm",e[e.BattleHelm=115]="BattleHelm",e[e.WizardHelm=116]="WizardHelm",e[e.LargeSword=117]="LargeSword",e[e.LargeStaff=118]="LargeStaff",e[e.LargeWing=119]="LargeWing",e[e.LargeDagger=120]="LargeDagger",e[e.LargeBow=121]="LargeBow",e[e.LargeOcarina=122]="LargeOcarina",e[e.FairyClothes=123]="FairyClothes",e[e.FairyStaff=124]="FairyStaff",e[e.FairyBoots=125]="FairyBoots",e[e.FairyGlove=126]="FairyGlove",e[e.FairyBrooch=127]="FairyBrooch",e[e.FairyLamp=128]="FairyLamp",e[e.FairyWing=129]="FairyWing",e[e.FairyShuriken=130]="FairyShuriken",e[e.FoxKanzashi=131]="FoxKanzashi",e[e.FoxLoincloth=132]="FoxLoincloth",e[e.FoxMask=133]="FoxMask",e[e.FoxHamayayumi=134]="FoxHamayayumi",e[e.FoxHat=135]="FoxHat",e[e.FoxCoat=136]="FoxCoat",e[e.FoxBoot=137]="FoxBoot",e[e.FoxEma=138]="FoxEma",e[e.DevilfishSword=139]="DevilfishSword",e[e.DevilfishWing=140]="DevilfishWing",e[e.DevilfishRecorder=141]="DevilfishRecorder",e[e.DevilfishArmor=142]="DevilfishArmor",e[e.DevilfishScarf=143]="DevilfishScarf",e[e.DevilfishGill=144]="DevilfishGill",e[e.DevilfishPendant=145]="DevilfishPendant",e[e.DevilfishRing=146]="DevilfishRing",e[e.TreantAmulet=147]="TreantAmulet",e[e.TreantHagoita=148]="TreantHagoita",e[e.TreantChoppingBoard=149]="TreantChoppingBoard",e[e.TreantDagger=150]="TreantDagger",e[e.TreantHaniwa=151]="TreantHaniwa",e[e.TreantKokeshi=152]="TreantKokeshi",e[e.TreantLamp=153]="TreantLamp",e[e.TreantLunchbox=154]="TreantLunchbox",e[e.FlametigerPortableHotSpring=155]="FlametigerPortableHotSpring",e[e.FlametigerVolcanicShield=156]="FlametigerVolcanicShield",e[e.FlametigerStripedBriefs=157]="FlametigerStripedBriefs",e[e.TorchOfEverburningFlametiger=158]="TorchOfEverburningFlametiger",e[e.FlametigerCostume=159]="FlametigerCostume",e[e.RingOfFlametigersWrath=160]="RingOfFlametigersWrath",e[e.EndlessBowlOfSpicyFlametigerRamen=161]="EndlessBowlOfSpicyFlametigerRamen",e[e.ScreenOfTheSneakyFlametiger=162]="ScreenOfTheSneakyFlametiger",e[e.ModifiedSword=163]="ModifiedSword",e[e.ModifiedStaff=164]="ModifiedStaff",e[e.ModifiedWing=165]="ModifiedWing",e[e.ModifiedDart=166]="ModifiedDart",e[e.ModifiedBow=167]="ModifiedBow",e[e.ModifiedRecorder=168]="ModifiedRecorder",e[e.AncientCloak=169]="AncientCloak",e[e.AncientBelt=170]="AncientBelt",e[e.AncientShoes=171]="AncientShoes",e[e.AncientRing=172]="AncientRing",e[e.AncientEarring=173]="AncientEarring",e))(g||{});function Sp(e){switch(e){case g.Nothing:return"Nothing";case g.DullSword:return"Dull Sword";case g.BrittleStaff:return"Brittle Staff";case g.FlimsyWing:return"Flimsy Wing";case g.WornDart:return"Worn Dart";case g.SmallBow:return"Small Bow";case g.WoodenRecorder:return"Wooden Recorder";case g.OldCloak:return"Old Cloak";case g.BlueHat:return"Blue Hat";case g.OrangeHat:return"Orange Hat";case g.TShirt:return"T-shirt";case g.ClothGlove:return"Cloth Gloves";case g.BlueTShirt:return"Blue T-shirt";case g.OrangeTShirt:return"Orange T-shirt";case g.ClothBelt:return"Cloth Belt";case g.ClothShoes:return"Cloth Shoes";case g.IronRing:return"Iron Ring";case g.PearlEarring:return"Pearl Earring";case g.FireBrooch:return"Fire Brooch";case g.IceBrooch:return"Ice Brooch";case g.ThunderBrooch:return"Thunder Brooch";case g.LightBrooch:return"Light Brooch";case g.DarkBrooch:return"Dark Brooch";case g.WoodenShield:return"Wooden Shield";case g.LongSword:return"Long Sword";case g.LongStaff:return"Long Staff";case g.WarmWing:return"Warm Wing";case g.DualDagger:return"Dual Dagger";case g.ReinforcedBow:return"Reinforced Bow";case g.Flute:return"Flute";case g.FireStaff:return"Fire Staff";case g.IceStaff:return"Ice Staff";case g.ThunderStaff:return"Thunder Staff";case g.LeatherBelt:return"Leather Belt";case g.LeatherShoes:return"Leather Shoes";case g.WarmCloak:return"Warm Cloak";case g.LeatherArmor:return"Leather Armor";case g.LeatherGlove:return"Leather Gloves";case g.LeatherShield:return"Leather Shield";case g.FireRing:return"Fire Ring";case g.IceRing:return"Ice Ring";case g.ThunderRing:return"Thunder Ring";case g.LightRing:return"Light Ring";case g.DarkRing:return"Dark Ring";case g.EnhancedFireBrooch:return"Enhanced Fire Brooch";case g.EnhancedIceBrooch:return"Enhanced Ice Brooch";case g.EnhancedThunderBrooch:return"Enhanced Thunder Brooch";case g.EnhancedLightBrooch:return"Enhanced Light Brooch";case g.EnhancedDarkBrooch:return"Enhanced Dark Brooch";case g.BattleSword:return"Battle Sword";case g.BattleStaff:return"Battle Staff";case g.BattleWing:return"Battle Wing";case g.BattleDagger:return"Battle Dagger";case g.BattleBow:return"Battle Bow";case g.BattleRecorder:return"Battle Flute";case g.SlimeSword:return"Slime Sword";case g.SlimeGlove:return"Slime Gloves";case g.SlimeRing:return"Slime Ring";case g.SlimeBelt:return"Slime Belt";case g.SlimePincenez:return"Slime Pince-nez";case g.SlimeWing:return"Slime Wing";case g.SlimePoncho:return"Slime Poncho";case g.SlimeDart:return"Slime Dart";case g.MagicSlimeStick:return"Magicslime Stick";case g.MagicSlimeHat:return"Magicslime Hat";case g.MagicSlimeBow:return"Magicslime Bow";case g.MagicSlimeShoes:return"Magicslime Shoes";case g.MagicSlimeRecorder:return"Magicslime Recorder";case g.MagicSlimeEarring:return"Magicslime Earring";case g.MagicSlimeBalloon:return"Magicslime Balloon";case g.MagicSlimeSkirt:return"Magicslime Skirt";case g.SpiderHat:return"Spider Hat";case g.SpiderSkirt:return"Spider Skirt";case g.SpiderSuit:return"Spider Suit";case g.SpiderDagger:return"Spider Dagger";case g.SpiderWing:return"Spider Wing";case g.SpiderCatchingNet:return"Spider Catching Net";case g.SpiderStick:return"Spider Stick";case g.SpiderFoldingFan:return"Spider Folding Fan";case g.BatRing:return"Bat Ring";case g.BatShoes:return"Bat Shoes";case g.BatSword:return"Bat Sword";case g.BatHat:return"Bat Helm";case g.BatRecorder:return"Bat Recorder";case g.BatBow:return"Bat Bow";case g.BatMascaradeMask:return"Bat Mascarade Mask";case g.BatCloak:return"Bat Cloak";case g.BronzeShoulder:return"Bronze Spaulder";case g.BattleRing:return"Battle Ring";case g.Halo:return"Halo";case g.IronShoulder:return"Iron Spaulder";case g.StrengthRing:return"Strength Ring";case g.GoldenRing:return"Golden Ring";case g.GoldenFireRing:return"Golden Fire Ring";case g.GoldenIceRing:return"Golden Ice Ring";case g.GoldenThunderRing:return"Golden Thunder Ring";case g.GoldenLightRing:return"Golden Light Ring";case g.GoldenDarkRing:return"Golden Dark Ring";case g.IronBelt:return"Iron Belt";case g.IronShoes:return"Iron Sabatons";case g.CopperArmor:return"Copper Armor";case g.IronGlove:return"Iron Gloves";case g.TowerShield:return"Tower Shield";case g.FireTowerShield:return"Fire Tower Shield";case g.IceTowerShield:return"Ice Tower Shield";case g.ThunderTowerShield:return"Thunder Tower Shield";case g.LightTowerShield:return"Light Tower Shield";case g.DarkTowerShield:return"Dark Tower Shield";case g.SavageRing:return"Savage Ring";case g.SpellboundFireBrooch:return"Spellbound Fire Brooch";case g.SpellboundIceBrooch:return"Spellbound Ice Brooch";case g.SpellboundThunderBrooch:return"Spellbound Thunder Brooch";case g.SpellboundLightBrooch:return"Spellbound Light Brooch";case g.SpellboundDarkBrooch:return"Spellbound Dark Brooch";case g.CopperHelm:return"Leather Hood";case g.BattleHelm:return"Battle Helm";case g.WizardHelm:return"Wizard Hood";case g.LargeSword:return"Large Sword";case g.LargeStaff:return"Large Staff";case g.LargeWing:return"Large Wing";case g.LargeDagger:return"Large Dagger";case g.LargeBow:return"Large Bow";case g.LargeOcarina:return"Large Ocarina";case g.FairyClothes:return"Fairy Clothes";case g.FairyStaff:return"Fairy Staff";case g.FairyBoots:return"Fairy Boots";case g.FairyGlove:return"Fairy Gloves";case g.FairyBrooch:return"Fairy Brooch";case g.FairyLamp:return"Fairy Lamp";case g.FairyWing:return"Fairy Wing";case g.FairyShuriken:return"Fairy Shuriken";case g.FoxKanzashi:return"Fox Kanzashi";case g.FoxLoincloth:return"Fox Loincloth";case g.FoxMask:return"Fox Mask";case g.FoxHamayayumi:return"Fox Hamaya-yumi";case g.FoxHat:return"Fox Hat";case g.FoxCoat:return"Fox Coat";case g.FoxBoot:return"Fox Boots";case g.FoxEma:return"Fox Ema";case g.DevilfishSword:return"Devilfish Sword";case g.DevilfishWing:return"Devilfish Wing";case g.DevilfishRecorder:return"Devilfish Recorder";case g.DevilfishArmor:return"Devilfish Armor";case g.DevilfishScarf:return"Devilfish Scarf";case g.DevilfishGill:return"Devilfish Gill";case g.DevilfishPendant:return"Devilfish Pendant";case g.DevilfishRing:return"Devilfish Ring";case g.TreantAmulet:return"Treant Amulet";case g.TreantHagoita:return"Treant Hagoita";case g.TreantChoppingBoard:return"Treant Chopping Board";case g.TreantDagger:return"Treant Dagger";case g.TreantHaniwa:return"Treant Haniwa";case g.TreantKokeshi:return"Treant Kokeshi";case g.TreantLamp:return"Treant Lamp";case g.TreantLunchbox:return"Treant Lunchbox";case g.FlametigerPortableHotSpring:return"Flametiger Portable Hot Spring";case g.FlametigerVolcanicShield:return"Flametiger Volcanic Shield";case g.FlametigerStripedBriefs:return"Flametiger-Striped Briefs";case g.TorchOfEverburningFlametiger:return"Torch of Everburning Flametiger";case g.FlametigerCostume:return"Flametiger Costume";case g.RingOfFlametigersWrath:return"Ring of the Flametiger's Wrath";case g.EndlessBowlOfSpicyFlametigerRamen:return"Endless Bowl of Spicy Flametiger Ramen";case g.ScreenOfTheSneakyFlametiger:return"Screen of the Sneaky Flametiger";case g.ModifiedSword:return"Ancient Sword";case g.ModifiedStaff:return"Ancient Staff";case g.ModifiedWing:return"Ancient Wing";case g.ModifiedDart:return"Ancient Dart";case g.ModifiedBow:return"Ancient Bow";case g.ModifiedRecorder:return"Ancient Recorder";case g.AncientCloak:return"Ancient Cloak";case g.AncientBelt:return"Ancient Belt";case g.AncientShoes:return"Ancient Shoes";case g.AncientRing:return"Ancient Ring";case g.AncientEarring:return"Ancient Earring";default:return e}}var n=(e=>(e[e.Base=0]="Base",e[e.Ability=1]="Ability",e[e.SuperAbility=2]="SuperAbility",e[e.Title=3]="Title",e[e.Quest=4]="Quest",e[e.Skill=5]="Skill",e[e.ChanneledSkill=6]="ChanneledSkill",e[e.SkillPassive=7]="SkillPassive",e[e.Stance=8]="Stance",e[e.Upgrade=9]="Upgrade",e[e.Town=10]="Town",e[e.TownResearch=11]="TownResearch",e[e.Equipment=12]="Equipment",e[e.ArmoredFury=13]="ArmoredFury",e[e.WardedFury=14]="WardedFury",e[e.Dictionary=15]="Dictionary",e[e.Alchemy=16]="Alchemy",e[e.AlchemyExpand=17]="AlchemyExpand",e[e.Potion=18]="Potion",e[e.Pet=19]="Pet",e[e.PetRankMilestone=20]="PetRankMilestone",e[e.Guild=21]="Guild",e[e.GuildSuperAbility=22]="GuildSuperAbility",e[e.Rebirth=23]="Rebirth",e[e.Challenge=24]="Challenge",e[e.SuperDungeon=25]="SuperDungeon",e[e.DungeonItem=26]="DungeonItem",e[e.DungeonItemPermanent=27]="DungeonItemPermanent",e[e.SDUpgrade=28]="SDUpgrade",e[e.SDShop=29]="SDShop",e[e.SDModifier=30]="SDModifier",e[e.SDModifierMilestone=31]="SDModifierMilestone",e[e.SDGemRitual=32]="SDGemRitual",e[e.GradeMilestone=33]="GradeMilestone",e[e.Expedition=34]="Expedition",e[e.ExpeditionMilestone=35]="ExpeditionMilestone",e[e.MissionMilestone=36]="MissionMilestone",e[e.AreaPrestige=37]="AreaPrestige",e[e.Ascension=38]="Ascension",e[e.AreaDebuff=39]="AreaDebuff",e[e.FieldCurse=40]="FieldCurse",e[e.Blessing=41]="Blessing",e[e.Buff=42]="Buff",e[e.Debuff=43]="Debuff",e[e.Talisman=44]="Talisman",e[e.TalismanPassive=45]="TalismanPassive",e[e.Achievement=46]="Achievement",e[e.EpicStore=47]="EpicStore",e[e.DLC=48]="DLC",e))(n||{});function Ap(e){switch(e){case n.Base:return"Base";case n.Ability:return"Ability";case n.SuperAbility:return"Super Ability";case n.Title:return"Title";case n.Quest:return"Quest";case n.Skill:return"Skill";case n.ChanneledSkill:return"Channeled Skill";case n.SkillPassive:return"Skill Passive";case n.Stance:return"Stance";case n.Upgrade:return"Upgrade";case n.Town:return"Town";case n.TownResearch:return"Town Research";case n.Equipment:return"Equipment";case n.ArmoredFury:return"Armored Fury";case n.WardedFury:return"Warded Fury";case n.Dictionary:return"Dictionary";case n.Alchemy:return"Alchemy Upgrade";case n.AlchemyExpand:return"Expand Cap";case n.Potion:return"Potion";case n.Pet:return"Pet";case n.PetRankMilestone:return"Pet Rank Milestone";case n.Guild:return"Guild Ability";case n.GuildSuperAbility:return"Guild Super Ability";case n.Rebirth:return"Rebirth";case n.Challenge:return"Challenge";case n.SuperDungeon:return"Super Dungeon";case n.DungeonItem:return"SD Powerup";case n.DungeonItemPermanent:return"SD Powerup (Permanent)";case n.SDUpgrade:return"SD Upgrade";case n.SDShop:return"SD Ruby Shop";case n.SDModifier:return"SD Modifier";case n.SDModifierMilestone:return"SD Modifier Milestone";case n.SDGemRitual:return"SD Gem Ritual";case n.GradeMilestone:return"Grade Milestone";case n.Expedition:return"Expedition";case n.ExpeditionMilestone:return"Expedition Milestone";case n.MissionMilestone:return"Mission Milestone";case n.AreaPrestige:return"Area Prestige";case n.Ascension:return"World Ascension";case n.AreaDebuff:return"Field Debuff";case n.FieldCurse:return"Field Curse";case n.Blessing:return"Blessing";case n.Buff:return"Skill Buff";case n.Debuff:return"Debuff";case n.Talisman:return"Talisman";case n.TalismanPassive:return"Talisman Passive";case n.Achievement:return"Achievement";case n.EpicStore:return"Epic Store";case n.DLC:return"Steam DLC";default:return e}}var D=(e=>(e[e.FireRes=0]="FireRes",e[e.IceRes=1]="IceRes",e[e.ThunderRes=2]="ThunderRes",e[e.LightRes=3]="LightRes",e[e.DarkRes=4]="DarkRes",e[e.DebuffRes=5]="DebuffRes",e[e.PhysCritChance=6]="PhysCritChance",e[e.MagCritChance=7]="MagCritChance",e[e.CriticalDamage=8]="CriticalDamage",e[e.EquipmentDropChance=9]="EquipmentDropChance",e[e.MoveSpeed=10]="MoveSpeed",e[e.SkillProficiencyGain=11]="SkillProficiencyGain",e[e.EquipmentProficiencyGain=12]="EquipmentProficiencyGain",e[e.TamingPointGain=13]="TamingPointGain",e[e.ExpGain=14]="ExpGain",e[e.ArmoredFury=15]="ArmoredFury",e[e.WardedFury=16]="WardedFury",e[e.PetPhysCritChance=17]="PetPhysCritChance",e[e.PetMagCritChance=18]="PetMagCritChance",e[e.PetCriticalDamage=19]="PetCriticalDamage",e[e.PetDebuffResistance=20]="PetDebuffResistance",e[e.ArtifactProficiencyGain=21]="ArtifactProficiencyGain",e))(D||{}),K=(e=>(e[e.MorePowerups=0]="MorePowerups",e[e.FlexibleDodge=1]="FlexibleDodge",e[e.LeaveAndRetry=2]="LeaveAndRetry",e[e.AutoDodge=3]="AutoDodge",e[e.AutoLeaveAndRetry=4]="AutoLeaveAndRetry",e[e.SDDamageMultiplier=5]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=6]="SDDamageCutMultiplier",e[e.FameGain=7]="FameGain",e[e.SDMPGainEveryFloor=8]="SDMPGainEveryFloor",e[e.SDDungeonCoinBoostStart=9]="SDDungeonCoinBoostStart",e[e.SDPowerupBoostStart=10]="SDPowerupBoostStart",e[e.AutoProgress=11]="AutoProgress",e[e.AutoBuyPowerups=12]="AutoBuyPowerups",e[e.AutoUseRefreshTicket=13]="AutoUseRefreshTicket",e[e.SDChallengeBossDamageMultiplier=14]="SDChallengeBossDamageMultiplier",e[e.GoldCap=15]="GoldCap",e[e.SlimeCoinCap=16]="SlimeCoinCap",e[e.HPMultiplier=17]="HPMultiplier",e[e.MPMultiplier=18]="MPMultiplier",e[e.ATKMultiplier=19]="ATKMultiplier",e[e.MATKMultiplier=20]="MATKMultiplier",e[e.DEFMultiplier=21]="DEFMultiplier",e[e.MDEFMultiplier=22]="MDEFMultiplier",e[e.SPDMultiplier=23]="SPDMultiplier",e[e.PhysicalCriticalChanceMul=24]="PhysicalCriticalChanceMul",e[e.MagicalCriticalChanceMul=25]="MagicalCriticalChanceMul",e[e.CriticalDamageMul=26]="CriticalDamageMul",e[e.DebuffResistanceMul=27]="DebuffResistanceMul",e[e.PetPhysicalCriticalChanceMul=28]="PetPhysicalCriticalChanceMul",e[e.PetMagicalCriticalChanceMul=29]="PetMagicalCriticalChanceMul",e[e.PetCriticalDamageMul=30]="PetCriticalDamageMul",e[e.PetDebuffResistanceMul=31]="PetDebuffResistanceMul",e[e.ElementResistanceMultiplier=32]="ElementResistanceMultiplier",e[e.PhysicalDamageMultiplier=33]="PhysicalDamageMultiplier",e[e.MagicalDamageMultiplier=34]="MagicalDamageMultiplier",e[e.ArmoredFuryMultiplier=35]="ArmoredFuryMultiplier",e[e.WardedFuryMultiplier=36]="WardedFuryMultiplier",e[e.DamageToRegularMonstersMultiplier=37]="DamageToRegularMonstersMultiplier",e[e.DamageToChallengeBossMultiplier=38]="DamageToChallengeBossMultiplier",e[e.HeroExpGainMul=39]="HeroExpGainMul",e[e.GoldGainMul=40]="GoldGainMul",e[e.StoneGainMul=41]="StoneGainMul",e[e.CrystalGainMul=42]="CrystalGainMul",e[e.LeafGainMul=43]="LeafGainMul",e[e.SkillProficiencyGainMul=44]="SkillProficiencyGainMul",e[e.EquipmentProficiencyGainMul=45]="EquipmentProficiencyGainMul",e[e.GuildEXPGainMul=46]="GuildEXPGainMul",e[e.TownMatGainMul=47]="TownMatGainMul",e[e.TamingPointGainMul=48]="TamingPointGainMul",e[e.PetEXPGainMul=49]="PetEXPGainMul",e[e.LoyaltyPointGainMul=50]="LoyaltyPointGainMul",e[e.AlchemyPointGainMul=51]="AlchemyPointGainMul",e[e.StoneResearchPowerMul=52]="StoneResearchPowerMul",e[e.CrystalResearchPowerMul=53]="CrystalResearchPowerMul",e[e.LeafResearchPowerMul=54]="LeafResearchPowerMul",e[e.SDUpgreadeSuperQueue=55]="SDUpgreadeSuperQueue",e[e.SDArmoredFury=56]="SDArmoredFury",e[e.SDWardedFury=57]="SDWardedFury",e[e.PowerupFilterSlot=58]="PowerupFilterSlot",e[e.SDChallengeBossDamageCutMultiplier=59]="SDChallengeBossDamageCutMultiplier",e[e.BoostStartGoodRNG=60]="BoostStartGoodRNG",e))(K||{});function bp(e,t=0){let s="",i="",c="";switch(e){case K.MorePowerups:s="More Powerups",i="Increases the amount of powerups every floor",c=h.tDigit(t,0)+" powerups appear in the Safe Zone every floor";break;case K.FlexibleDodge:s="Flexible Dodge",i="Enables you to keep casting skills and moving during Dodge",c="";break;case K.LeaveAndRetry:s="Leave & Retry",i='Unlocks the "Leave & Retry" button that enables you start the current Super Dungeon as soon as you leave it',c="";break;case K.AutoDodge:s="Auto Dodge",i='Unlocks the "Auto Dodge" toggle in SD Options tab that automatically keeps holding down the Dodge button until the available dodge time is gone',c="";break;case K.AutoLeaveAndRetry:s="Auto Leave & Retry",i="Unlocks the toggle in SD Options tab that automatically clicks Leave & Retry button when you reach a certain floor with the entry cost less than a certain amount",c="";break;case K.SDDamageMultiplier:s="SD Damage Multiplier",i="Multiplies SD Damage Multiplier",c="by "+h.percent(t+1);break;case K.SDDamageCutMultiplier:s="SD Damage Cut Multiplier",i="Multiplies SD Damage Cut Multiplier",c="by "+h.percent(t+1);break;case K.FameGain:s="Fame Gain",i="Multiplies Fame Gain",c="by "+h.percent(t+1);break;case K.SDMPGainEveryFloor:s="Boost-Start of MP",i="",c="Gains "+h.percent(t)+" of Max MP when you visit every floor";break;case K.SDDungeonCoinBoostStart:s="Boost-Start of Dungeon Coin",i="",c="Starts a Super Dungeon run with "+h.tDigit(t,0)+" Dungeon Coins";break;case K.SDPowerupBoostStart:s="Boost-Start of Powerups",i="Starts a Super Dungeon run with random powerups to purchase at B1F Safe Zone",c="";break;case K.AutoProgress:s="Auto Progression",i='Unlocks the "Auto Progression" toggle in SD Options tab that automatically keeps going to the next floor up to a certain floor',c="";break;case K.AutoBuyPowerups:s="Auto Buy Powerups",i='Unlocks the "Auto Buy Powerups" toggle in SD Options tab that automatically buys powerups randomly',c="Buys random powerups "+h.percent(t)+" times every floor";break;case K.AutoUseRefreshTicket:s="Auto Use Refresh Tickets",i='Unlocks the "Auto Use Refresh Tickets" toggle in SD Options tab that automatically uses an Entry Cost Refresh Ticket when the entry cost exceeds a certain amount',c="";break;case K.SDChallengeBossDamageMultiplier:s="SD Challenge Boss Damage Multiplier",i="Multiplies SD Challenge Boss Damage Multiplier",c="by "+h.percent(t+1);break;case K.GoldCap:s="Gold Cap",i="Multiplies Gold Cap",c="by "+h.percent(t);break;case K.SlimeCoinCap:s="Slime Coin Cap",i="Multiplies Slime Coin Cap",c="by "+h.percent(t);break;case K.HPMultiplier:s="HP Multiplier",i="Multiplies HP",c="by "+h.percent(t);break;case K.MPMultiplier:s="MP Multiplier",i="Multiplies MP",c="by "+h.percent(t);break;case K.ATKMultiplier:s="ATK Multiplier",i="Multiplies ATK",c="by "+h.percent(t);break;case K.MATKMultiplier:s="MATK Multiplier",i="Multiplies MATK",c="by "+h.percent(t);break;case K.DEFMultiplier:s="DEF Multiplier",i="Multiplies DEF",c="by "+h.percent(t);break;case K.MDEFMultiplier:s="MDEF Multiplier",i="Multiplies MDEF",c="by "+h.percent(t);break;case K.SPDMultiplier:s="SPD Multiplier",i="Multiplies SPD",c="by "+h.percent(t);break;case K.PhysicalCriticalChanceMul:s=this.Stat(D.PhysCritChance)+" Multiplier",i="Multiplies "+this.Stat(D.PhysCritChance),c="by "+h.percent(t);break;case K.MagicalCriticalChanceMul:s=this.Stat(D.MagCritChance)+" Multiplier",i="Multiplies "+this.Stat(D.MagCritChance),c="by "+h.percent(t);break;case K.CriticalDamageMul:s=this.Stat(D.CriticalDamage)+" Multiplier",i="Multiplies "+this.Stat(D.CriticalDamage),c="by "+h.percent(t);break;case K.DebuffResistanceMul:s=this.Stat(D.DebuffRes)+" Multiplier",i="Multiplies "+this.Stat(D.DebuffRes),c="by "+h.percent(t);break;case K.PetPhysicalCriticalChanceMul:s=this.Stat(D.PetPhysCritChance)+" Multiplier",i="Multiplies "+this.Stat(D.PetPhysCritChance),c="by "+h.percent(t);break;case K.PetMagicalCriticalChanceMul:s=this.Stat(D.PetMagCritChance)+" Multiplier",i="Multiplies "+this.Stat(D.PetMagCritChance),c="by "+h.percent(t);break;case K.PetCriticalDamageMul:s=this.Stat(D.PetCriticalDamage)+" Multiplier",i="Multiplies "+this.Stat(D.PetCriticalDamage),c="by "+h.percent(t);break;case K.PetDebuffResistanceMul:s=this.Stat(D.PetDebuffResistance)+" Multiplier",i="Multiplies "+this.Stat(D.PetDebuffResistance),c="by "+h.percent(t);break;case K.ElementResistanceMultiplier:s="Element Resistance Multiplier",i="Multiplies All Resistance",c="by "+h.percent(t);break;case K.PhysicalDamageMultiplier:s="Physical Damage Multiplier",i="Multiplies Physical Damage",c="by "+h.percent(t);break;case K.MagicalDamageMultiplier:s="Magical Damage Multiplier",i="Multiplies Magical Damage",c="by "+h.percent(t);break;case K.ArmoredFuryMultiplier:s=this.Stat(D.ArmoredFury)+" Multiplier",i="Multiplies "+this.Stat(D.ArmoredFury),c="by "+h.percent(t);break;case K.WardedFuryMultiplier:s=this.Stat(D.WardedFury)+" Multiplier",i="Multiplies "+this.Stat(D.WardedFury),c="by "+h.percent(t);break;case K.DamageToRegularMonstersMultiplier:s="Damage to Regular Monsters",i="Multiplies Damage to Regular Monsters",c="by "+h.percent(t);break;case K.DamageToChallengeBossMultiplier:s="Damage to Challenge Boss",i="Multiplies Damage to Challenge Boss",c="by "+h.percent(t);break;case K.HeroExpGainMul:s="Hero EXP Gain",i="Multiplies Hero EXP Gain",c="by "+h.percent(t);break;case K.GoldGainMul:s="Gold Gain",i="Multiplies Gold Gain",c="by "+h.percent(t);break;case K.StoneGainMul:s="Stone Gain",i="Multiplies Stone Gain",c="by "+h.percent(t);break;case K.CrystalGainMul:s="Crystal Gain",i="Multiplies Crystal Gain",c="by "+h.percent(t);break;case K.LeafGainMul:s="Leaf Gain",i="Multiplies Leaf Gain",c="by "+h.percent(t);break;case K.SkillProficiencyGainMul:s=this.Stat(D.SkillProficiencyGain),i="Multiplies "+this.Stat(D.SkillProficiencyGain),c="by "+h.percent(t);break;case K.EquipmentProficiencyGainMul:s=this.Stat(D.EquipmentProficiencyGain),i="Multiplies "+this.Stat(D.EquipmentProficiencyGain),c="by "+h.percent(t);break;case K.GuildEXPGainMul:s="Guild EXP Gain",i="Multiplies Guild EXP Gain",c="by "+h.percent(t);break;case K.TownMatGainMul:s="Town Material Gain",i="Multiplies Town Material Gain",c="by "+h.percent(t);break;case K.TamingPointGainMul:s=this.Stat(D.TamingPointGain),i="Multiplies "+this.Stat(D.TamingPointGain),c="by "+h.percent(t);break;case K.PetEXPGainMul:s="Pet EXP Gain",i="Multiplies Pet EXP Gain",c="by "+h.percent(t);break;case K.LoyaltyPointGainMul:s="Loyalty Point Gain",i="Multiplies Loyalty Point Gain",c="by "+h.percent(t);break;case K.AlchemyPointGainMul:s="Alchemy Point Gain",i="Multiplies Alchemy Point Gain",c="by "+h.percent(t);break;case K.StoneResearchPowerMul:s="Stone Research Power",i="Multiplies Stone Research Power",c="by "+h.percent(t);break;case K.CrystalResearchPowerMul:s="Crystal Research Power",i="Multiplies Crystal Research Power",c="by "+h.percent(t);break;case K.LeafResearchPowerMul:s="Leaf Research Power",i="Multiplies Leaf Research Power",c="by "+h.percent(t);break;case K.SDUpgreadeSuperQueue:s="SD Upgrade Super Queue",i="SD Upgrade Available Super Queue",c="+ "+h.tDigit(t,0);break;case K.SDArmoredFury:s="SD Armored Fury",i="Increases SD Armored Fury",c="by "+h.percent(t);break;case K.SDWardedFury:s="SD Warded Fury",i="Increases SD Warded Fury",c="by "+h.percent(t);break;case K.PowerupFilterSlot:s="Powerup Filter Slot",i="Increase Powerup Filter Slot",c="by "+h.tDigit(t,0);break;case K.SDChallengeBossDamageCutMultiplier:s="SD Challenge Boss Damage Cut Multiplier",i="Multiplies SD Challenge Boss Damage Cut Multiplier",c="by "+h.percent(t+1);break;case K.BoostStartGoodRNG:s="Boost-Start of RNGesus's Favour",i="The Powerup [SD Damage Multiplier] will always show up at B1F Safe Zone",c="";break}return{name:s,description:i,value:c}}function kp(e){switch(e){case 27:return"Artifact Effect";case 57:return"SD Max Floor Reward Multiplier";case 58:return"Gold Cap";case 59:return"Gold Gain";case 60:return"Slime Coin Cap";case 61:return"Guild EXP Gain";case 62:return"Taming Point Gain";case 63:return"Loyalty Point Gain";case 64:return"Town Research Power";default:return e}}function Ep(e,t=0,s=0,i=0){switch(e){case 27:return h.percent(t)+' of "Equipment Effect" stats applies to Artifacts  ( + '+h.percent(s)+` / Lv )
- Current Equipment Effect for Artifacts : `+h.percent(i);case 57:return"Multiplies the SD Max Floor Reached Reward by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 58:return"Multiplies Gold Cap by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 59:return"Multiplies Gold Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 60:return"Multiplies Slime Coin Cap by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 61:return"Multiplies Guild EXP Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 62:return"Multiplies Taming Point Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 63:return"Multiplies Loyalty Point Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 64:return"Multiplies Town Research Power by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";default:return h.percent(t)}}var pt=(e=>(e[e.Sunstone=0]="Sunstone",e[e.Morganite=1]="Morganite",e[e.Tanzanite=2]="Tanzanite",e[e.Heliodor=3]="Heliodor",e[e.Peridot=4]="Peridot",e[e.Obsidian=5]="Obsidian",e[e.Amber=6]="Amber",e[e.Hackmanite=7]="Hackmanite",e[e.Turquoise=8]="Turquoise",e[e.Kunzite=9]="Kunzite",e[e.Carnelian=10]="Carnelian",e[e.BlueTourmaline=11]="BlueTourmaline",e[e.Diamond=12]="Diamond",e[e.Almandine=13]="Almandine",e[e.Emerald=14]="Emerald",e))(pt||{});function Dp(e,t=0){let s,i;switch(e){case pt.Sunstone:s="Sunstone",i="Multiplies Guild EXP Gain by "+h.percent(t+1);break;case pt.Morganite:s="Morganite",i="Expands the limit of Hero Level increment at once (default: Lv+30) by "+h.tDigit(t,0);break;case pt.Tanzanite:s="Tanzanite",i="Multiplies Stone Town Research Effect by "+h.percent(t);break;case pt.Heliodor:s="Heliodor",i="Multiplies Crystal Town Research Effect by "+h.percent(t);break;case pt.Peridot:s="Peridot",i="Multiplies Leaf Town Research Effect by "+h.percent(t);break;case pt.Obsidian:s="Obsidian",i="Increases Monster Defeated # gain per defeat by "+h.tDigit(t,0);break;case pt.Amber:s="Amber",i="Increases Dungeon Clear # and Clear Reward by "+h.tDigit(t,0);break;case pt.Hackmanite:s="Hackmanite",i="Lowers the expedition minimum time (default: 15m) by "+h.secondsToDhms(t);break;case pt.Turquoise:s="Turquoise",i="Reduce the efficiency penalty of longer expeditions - Current : [Hour]^"+h.tDigit(.85+t,3);break;case pt.Kunzite:s="Kunzite",i="Expand the cap of Forging Effect [Equipment Effect +%] by "+h.percent(t);break;case pt.Carnelian:s="Carnelian",i="Expand the cap of Forging Effect [Effect Incement / Lv +%] by "+h.percent(t);break;case pt.BlueTourmaline:s="Blue Tourmaline",i="Expand the cap of Forging Effect [Equipment Level +] by "+h.tDigit(t,0);break;case pt.Diamond:s="Diamond",i="Multiplies Talisman Passive Effect by "+h.percent(t+1);break;case pt.Almandine:s="Almandine",i="Nitro Speed + "+h.tDigit(t,1)+"x";break;case pt.Emerald:s="Emerald",i="Multiplies SD Powerups Permanent Effect by "+h.percent(t+1);break;default:s=e,i="";break}return{name:s,description:i}}var x=(e=>(e[e.Nothing=0]="Nothing",e[e.MinorHealthPotion=1]="MinorHealthPotion",e[e.MinorRegenerationPoultice=2]="MinorRegenerationPoultice",e[e.MinorResourcePoultice=3]="MinorResourcePoultice",e[e.SlickShoeSolution=4]="SlickShoeSolution",e[e.MinorManaRegenerationPoultice=5]="MinorManaRegenerationPoultice",e[e.MaterialMultiplierMist=6]="MaterialMultiplierMist",e[e.BasicElixirOfBrawn=7]="BasicElixirOfBrawn",e[e.BasicElixirOfBrains=8]="BasicElixirOfBrains",e[e.BasicElixirOfFortitude=9]="BasicElixirOfFortitude",e[e.BasicElixirOfConcentration=10]="BasicElixirOfConcentration",e[e.BasicElixirOfUnderstanding=11]="BasicElixirOfUnderstanding",e[e.ChilledHealthPotion=12]="ChilledHealthPotion",e[e.ChilledRegenerationPoultice=13]="ChilledRegenerationPoultice",e[e.FrostyDefensePotion=14]="FrostyDefensePotion",e[e.IcyAuraDraught=15]="IcyAuraDraught",e[e.SlightlyStickySalve=16]="SlightlyStickySalve",e[e.SlickerShoeSolution=17]="SlickerShoeSolution",e[e.CoolHeadOintment=18]="CoolHeadOintment",e[e.FrostySlayersOil=19]="FrostySlayersOil",e[e.BurningDefensePotion=20]="BurningDefensePotion",e[e.BlazingAuraDraught=21]="BlazingAuraDraught",e[e.FierySlayersOil=22]="FierySlayersOil",e[e.ElectricDefensePotion=23]="ElectricDefensePotion",e[e.WhirlingAuraDraught=24]="WhirlingAuraDraught",e[e.ShockingSlayersOil=25]="ShockingSlayersOil",e[e.ThrowingNet=26]="ThrowingNet",e[e.IceRope=27]="IceRope",e[e.ThunderRope=28]="ThunderRope",e[e.FireRope=29]="FireRope",e[e.LightRope=30]="LightRope",e[e.DarkRope=31]="DarkRope",e[e.GuildMembersEmblem=32]="GuildMembersEmblem",e[e.CertificateOfCompetence=33]="CertificateOfCompetence",e[e.MasonsTrowel=34]="MasonsTrowel",e[e.EnchantedAlembic=35]="EnchantedAlembic",e[e.TrackersMap=36]="TrackersMap",e[e.BerserkersStone=37]="BerserkersStone",e[e.TrappersTag=38]="TrappersTag",e[e.HitanDoll=39]="HitanDoll",e[e.RingoldDoll=40]="RingoldDoll",e[e.NuttyDoll=41]="NuttyDoll",e[e.MorkylDoll=42]="MorkylDoll",e[e.FlorzporbDoll=43]="FlorzporbDoll",e[e.ArachnettaDoll=44]="ArachnettaDoll",e[e.GuardianKorDoll=45]="GuardianKorDoll",e[e.SlimeBadge=46]="SlimeBadge",e[e.MagicslimeBadge=47]="MagicslimeBadge",e[e.SpiderBadge=48]="SpiderBadge",e[e.BatBadge=49]="BatBadge",e[e.FairyBadge=50]="FairyBadge",e[e.FoxBadge=51]="FoxBadge",e[e.DevilfishBadge=52]="DevilfishBadge",e[e.TreantBadge=53]="TreantBadge",e[e.FlametigerBadge=54]="FlametigerBadge",e[e.UnicornBadge=55]="UnicornBadge",e[e.AscendedFromIEH1=56]="AscendedFromIEH1",e[e.WarriorsBadge=57]="WarriorsBadge",e[e.WizardsBadge=58]="WizardsBadge",e[e.AngelsBadge=59]="AngelsBadge",e[e.ThiefsBadge=60]="ThiefsBadge",e[e.ArchersBadge=61]="ArchersBadge",e[e.TamersBadge=62]="TamersBadge",e[e.NostroDoll=63]="NostroDoll",e[e.LadyEmeldaDoll=64]="LadyEmeldaDoll",e[e.NariSuneDoll=65]="NariSuneDoll",e[e.OctobaddieDoll=66]="OctobaddieDoll",e[e.BananoonDoll=67]="BananoonDoll",e[e.GlorbliorbusDoll=68]="GlorbliorbusDoll",e[e.DistortionSlimeDoll=69]="DistortionSlimeDoll",e[e.AncientSlimeBadge=70]="AncientSlimeBadge",e[e.AncientMagicslimeBadge=71]="AncientMagicslimeBadge",e[e.AncientSpiderBadge=72]="AncientSpiderBadge",e[e.AncientBatBadge=73]="AncientBatBadge",e[e.AncientFairyBadge=74]="AncientFairyBadge",e[e.AncientFoxBadge=75]="AncientFoxBadge",e[e.AncientDevilfishBadge=76]="AncientDevilfishBadge",e[e.AncientTreantBadge=77]="AncientTreantBadge",e[e.AncientFlametigerBadge=78]="AncientFlametigerBadge",e[e.AncientUnicornBadge=79]="AncientUnicornBadge",e[e.AncientWarriorsBadge=80]="AncientWarriorsBadge",e[e.AncientWizardsBadge=81]="AncientWizardsBadge",e[e.AncientAngelsBadge=82]="AncientAngelsBadge",e[e.AncientThiefsBadge=83]="AncientThiefsBadge",e[e.AncientArchersBadge=84]="AncientArchersBadge",e[e.AncientTamersBadge=85]="AncientTamersBadge",e))(x||{});function Rp(e){switch(e){case x.MinorHealthPotion:return"Minor Health Potion";case x.MinorRegenerationPoultice:return"Minor Regeneration Poultice";case x.MinorResourcePoultice:return"Minor Resource Poultice";case x.SlickShoeSolution:return"Slick Shoe Solution";case x.MinorManaRegenerationPoultice:return"Minor Mana Regeneration Poultice";case x.MaterialMultiplierMist:return"Material Multiplier Mist";case x.BasicElixirOfBrawn:return"Basic Elixir of Brawn";case x.BasicElixirOfBrains:return"Basic Elixir of Brains";case x.BasicElixirOfFortitude:return"Basic Elixir of Fortitude";case x.BasicElixirOfConcentration:return"Basic Elixir of Concentration";case x.BasicElixirOfUnderstanding:return"Basic Elixir of Understanding";case x.ChilledHealthPotion:return"Chilled Health Potion";case x.ChilledRegenerationPoultice:return"Chilled Regeneration Poultice";case x.FrostyDefensePotion:return"Frosty Defense Potion";case x.IcyAuraDraught:return"Ice Aura Draught";case x.SlightlyStickySalve:return"Slightly Sticky Salve";case x.SlickerShoeSolution:return"Slicker Shoe Solution";case x.CoolHeadOintment:return"Cool Head Ointment";case x.FrostySlayersOil:return"Frosty Slayer's Oil";case x.BurningDefensePotion:return"Burning Defense Potion";case x.BlazingAuraDraught:return"Blazing Aura Draught";case x.FierySlayersOil:return"Fiery Slayer's Oil";case x.ElectricDefensePotion:return"Electric Defense Potion";case x.WhirlingAuraDraught:return"Whirling Aura Draught";case x.ShockingSlayersOil:return"Shocking Slayer's Oil";case x.ThrowingNet:return"Throwing Net";case x.IceRope:return"Ice Net";case x.ThunderRope:return"Thunder Net";case x.FireRope:return"Fire Net";case x.LightRope:return"Light Net";case x.DarkRope:return"Dark Net";case x.GuildMembersEmblem:return"Guild Member's Emblem";case x.CertificateOfCompetence:return"Certificate of Competence";case x.MasonsTrowel:return"Mason's Trowel";case x.EnchantedAlembic:return"Enchanted Alembic";case x.TrackersMap:return"Tracker's Map";case x.BerserkersStone:return"Berserker's Stone";case x.TrappersTag:return"Trapper's Tag";case x.FlorzporbDoll:return"Florzporb Doll";case x.ArachnettaDoll:return"Arachnetta Doll";case x.GuardianKorDoll:return"Guardian Kor Doll";case x.SlimeBadge:return"Slime Badge";case x.MagicslimeBadge:return"Magicslime Badge";case x.SpiderBadge:return"Spider Badge";case x.BatBadge:return"Bat Badge";case x.FairyBadge:return"Fairy Badge";case x.FoxBadge:return"Fox Badge";case x.DevilfishBadge:return"Devilfish Badge";case x.TreantBadge:return"Treant Badge";case x.FlametigerBadge:return"Flametiger Badge";case x.UnicornBadge:return"Unicorn Badge";case x.AscendedFromIEH1:return"Proof of Ascension from IEH1";case x.WarriorsBadge:return"Warrior's Badge";case x.WizardsBadge:return"Wizard's Badge";case x.AngelsBadge:return"Angel's Badge";case x.ThiefsBadge:return"Thief's Badge";case x.ArchersBadge:return"Archer's Badge";case x.TamersBadge:return"Tamer's Badge";case x.NostroDoll:return"Nostro Doll";case x.LadyEmeldaDoll:return"Lady Emelda Doll";case x.NariSuneDoll:return"Nari Sune Doll";case x.OctobaddieDoll:return"Octobaddie Doll";case x.BananoonDoll:return"Bananoon Doll";case x.GlorbliorbusDoll:return"Glorbliorbus Doll";case x.DistortionSlimeDoll:return"Gankyū Doll";case x.AncientSlimeBadge:return"Ancient Slime Badge";case x.AncientMagicslimeBadge:return"Ancient Magicslime Badge";case x.AncientSpiderBadge:return"Ancient Spider Badge";case x.AncientBatBadge:return"Ancient Bat Badge";case x.AncientFairyBadge:return"Ancient Fairy Badge";case x.AncientFoxBadge:return"Ancient Fox Badge";case x.AncientDevilfishBadge:return"Ancient Devilfish Badge";case x.AncientTreantBadge:return"Ancient Treant Badge";case x.AncientFlametigerBadge:return"Ancient Flametiger Badge";case x.AncientUnicornBadge:return"Ancient Unicorn Badge";case x.AncientWarriorsBadge:return"Ancient Warrior's Badge";case x.AncientWizardsBadge:return"Ancient Wizard's Badge";case x.AncientAngelsBadge:return"Ancient Angel's Badge";case x.AncientThiefsBadge:return"Ancient Thief's Badge";case x.AncientArchersBadge:return"Ancient Archer's Badge";case x.AncientTamersBadge:return"Ancient Tamer's Badge";default:return x[e]}}var Ye=(e=>(e[e.Brick=0]="Brick",e[e.Log=1]="Log",e[e.Shard=2]="Shard",e[e.PetRank=3]="PetRank",e[e.Equipment=4]="Equipment",e[e.PetExp=5]="PetExp",e[e.WalkDistance=6]="WalkDistance",e))(Ye||{});function Cp(e,t=""){let s="",i="",c="",l="";switch(e.kind){case Ye.Brick:s="Manufacturing Bricks",c=`Town Brick Buildings' level effect + ${h.percent(e.EffectValue())} ( + ${h.percent(e.passiveEffectValueIncrementPerLevel)} / Lv )`;break;case Ye.Log:s="Logging Trees",c="Town Log Buildings' level effect + "+h.percent(e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case Ye.Shard:s="Gathering Shards",c="Town Shard Buildings' level effect + "+h.percent(e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case Ye.PetRank:s="Capturing Monsters",c="Multiply Taming Point Gain by "+h.percent(1+e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",l=t+"'s Taming Point";break;case Ye.Equipment:s="Training Equipment",c="Multiply Equipment Proficiency Gain by "+h.percent(1+e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case Ye.PetExp:s="Field Training",c="Multiply Pet EXP Gain from any expeditions by "+h.percent(1+e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",l=t+"'s Pet EXP";break;case Ye.WalkDistance:s="Marathon Race",c="Walked Distance Gain from expeditions + "+h.percent(e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",l=t+" Walked Distance";break}return{name:s,effect:i,passive:c,reward:l}}function yp(e,t=""){switch(e){case 0:return"The Slime Hideout";case 1:return"The Spider Underground Apartment";case 2:return"The Darkest Forest";case 3:return"The Burning Garden";case 4:return"The Kor Lecture Hall";default:return t}}var Le=(e=>(e[e.ReduceRequiredHeroLevel=0]="ReduceRequiredHeroLevel",e[e.ReduceRequiredAbility=1]="ReduceRequiredAbility",e[e.IncreaseProficiencyGain=2]="IncreaseProficiencyGain",e[e.IncreaseEffect=3]="IncreaseEffect",e[e.PurifyCurseEffect=4]="PurifyCurseEffect",e[e.IncreaseEffectIncrement=5]="IncreaseEffectIncrement",e[e.EqLevel=6]="EqLevel",e))(Le||{});function Pp(e,t,s,i){switch(e){case Le.ReduceRequiredHeroLevel:return i?"Required Hero Grade of this equipment - "+h.tDigit(t):"Required Hero Level of this equipment - "+h.tDigit(t)+" (Max: "+h.tDigit(s)+")";case Le.ReduceRequiredAbility:return i?"Required Super Ability Point of this equipment - "+h.tDigit(t):"Required Ability Point of this equipment - "+h.tDigit(t)+" (Max: "+h.tDigit(s)+")";case Le.IncreaseProficiencyGain:return"Proficiency Gain of this equipment + "+h.percent(t)+" (Max: "+h.percent(s)+")";case Le.IncreaseEffect:return"This equipment's effect + "+h.percent(t)+" (Max: "+h.percent(s)+")";case Le.PurifyCurseEffect:return"Decrease this equipment's current negative effects by "+h.percent(t)+" (Max: "+h.percent(s)+")";case Le.IncreaseEffectIncrement:return"This equipment's effect increment per level + "+h.percent(t)+" (Max: "+h.percent(s)+")";case Le.EqLevel:return"This equipment's level + "+h.tDigit(t)+" (Max: "+h.tDigit(s)+")";default:return Le[e]}}function vp(e,t=!1){switch(e){case Le.ReduceRequiredHeroLevel:return t?"Hero Grade":"Hero Level";case Le.ReduceRequiredAbility:return t?"Required Super Ability":"Required Ability";case Le.IncreaseProficiencyGain:return"Proficiency Gain ";case Le.IncreaseEffect:return"Equipment Effect";case Le.PurifyCurseEffect:return"Purify of Cursed Effect";case Le.IncreaseEffectIncrement:return"Effect Increment / Lv";case Le.EqLevel:return"Equipment Level";default:return e}}var qe=(e=>(e[e.MonsterFluid=0]="MonsterFluid",e[e.FlameShard=1]="FlameShard",e[e.FrostShard=2]="FrostShard",e[e.LightningShard=3]="LightningShard",e[e.NatureShard=4]="NatureShard",e[e.PoisonShard=5]="PoisonShard",e[e.BlackPearl=6]="BlackPearl",e[e.OilOfSlime=7]="OilOfSlime",e[e.EnchantedCloth=8]="EnchantedCloth",e[e.SpiderSilk=9]="SpiderSilk",e[e.BatWing=10]="BatWing",e[e.FairyDust=11]="FairyDust",e[e.FoxTail=12]="FoxTail",e[e.FishScales=13]="FishScales",e[e.CarvedBranch=14]="CarvedBranch",e[e.ThickFur=15]="ThickFur",e[e.UnicornHorn=16]="UnicornHorn",e[e.SlimeBall=17]="SlimeBall",e[e.ManaSeed=18]="ManaSeed",e[e.UnmeltingIce=19]="UnmeltingIce",e[e.EternalFlame=20]="EternalFlame",e[e.AncientBattery=21]="AncientBattery",e[e.Ectoplasm=22]="Ectoplasm",e[e.Stardust=23]="Stardust",e[e.VoidEgg=24]="VoidEgg",e[e.EnchantedShard=25]="EnchantedShard",e))(qe||{});function Bp(e){switch(e){case qe.MonsterFluid:return"Monster Fluid";case qe.FlameShard:return"Flame Shard";case qe.FrostShard:return"Frost Shard";case qe.LightningShard:return"Lightning Shard";case qe.NatureShard:return"Nature Shard";case qe.PoisonShard:return"Poison Shard";case qe.BlackPearl:return"Black Pearl";case qe.OilOfSlime:return"Oil of Slime";case qe.EnchantedCloth:return"Magical Cloth";case qe.SpiderSilk:return"Spider Silk";case qe.BatWing:return"Bat Wing";case qe.FairyDust:return"Fairy Dust";case qe.FoxTail:return"Fox Tail";case qe.FishScales:return"Fish Scales";case qe.CarvedBranch:return"Carved Branch";case qe.ThickFur:return"Thick Fur";case qe.UnicornHorn:return"Unicorn Horn";case qe.SlimeBall:return"Slime Ball";case qe.ManaSeed:return"Mana Seed";case qe.UnmeltingIce:return"Unmelting Ice";case qe.EternalFlame:return"Eternal Flame";case qe.AncientBattery:return"Ancient Battery";case qe.Ectoplasm:return"Ectoplasm";case qe.Stardust:return"Stardust";case qe.VoidEgg:return"Void Egg";case qe.EnchantedShard:return"Enchanted Shard";default:return e}}function Lp(e,t,s=!1,i=0,c=!1){let l;switch(e){case a.Nothing:if(c)return"";l=s?"Enchant Slot + "+h.tDigit(t):"[Enchant Available]";break;case a.HPAdder:if(c)return h.tDigit(t,1);if(l="HP + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MPAdder:if(c)return h.tDigit(t,1);if(l="MP + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.ATKAdder:if(c)return h.tDigit(t,1);if(l="ATK + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MATKAdder:if(c)return h.tDigit(t,1);if(l="MATK + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.DEFAdder:if(c)return h.tDigit(t,1);if(l="DEF + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MDEFAdder:if(c)return h.tDigit(t,1);if(l="MDEF + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.SPDAdder:if(c)return h.tDigit(t,1);if(t<0){if(l="SPD <span class='red'>"+h.tDigit(t,1)+"</span>",i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break}if(l="SPD + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.HPMultiplier:if(c)return h.percent(t);if(l="HP + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MPMultiplier:if(c)return h.percent(t);if(t<0){if(l="MP <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break}if(l="MP + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ATKMultiplier:if(c)return h.percent(t);if(t<0){if(l="ATK <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break}if(l="ATK + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MATKMultiplier:if(c)return h.percent(t);if(t<0){if(l="MATK <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break}if(l="MATK + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DEFMultiplier:if(c)return h.percent(t);if(t<0){if(l="DEF <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break}if(l="DEF + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MDEFMultiplier:if(c)return h.percent(t);if(t<0){if(l="MDEF <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break}if(l="MDEF + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ATKPropotion:if(c)return h.percent(t);if(l="ATK + "+h.percent(t)+" of Hero Level",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MATKPropotion:if(c)return h.percent(t);if(l="MATK + "+h.percent(t)+" of Hero Level",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DEFPropotion:if(c)return h.percent(t);if(l="DEF + "+h.percent(t)+" of Hero Level",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MDEFPropotion:if(c)return h.percent(t);if(l="MDEF + "+h.percent(t)+" of Hero Level",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FireResistance:if(c)return h.percent(t);if(l="Fire Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.IceResistance:if(c)return h.percent(t);if(l="Ice Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ThunderResistance:if(c)return h.percent(t);if(l="Thunder Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LightResistance:if(c)return h.percent(t);if(l="Light Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DarkResistance:if(c)return h.percent(t);if(l="Dark Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.PhysicalAbsorption:if(c)return h.percent(t);if(l="Physical Absorption + "+h.percent(t)+" of received damage",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FireAbsorption:if(c)return h.percent(t);if(l="Fire Absorption + "+h.percent(t)+" of received damage",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.IceAbsorption:if(c)return h.percent(t);if(l="Ice Absorption + "+h.percent(t)+" of received damage",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ThunderAbsorption:if(c)return h.percent(t);if(l="Thunder Absorption + "+h.percent(t)+" of received damage",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LightAbsorption:if(c)return h.percent(t);if(l="Light Absorption + "+h.percent(t)+" of received damage",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DarkAbsorption:if(c)return h.percent(t);if(l="Dark Absorption + "+h.percent(t)+" of received damage",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DebuffResistance:if(c)return h.percent(t);if(l=t>=0?"Debuff Resistance + "+h.percent(t):"Debuff Resistance <span class='red'> "+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.EquipmentDropChance:if(c)return h.percent(t,4);if(l="Equipment Drop Chance + "+h.percent(t,4),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.SlimeDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.OilOfSlime)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.MagicSlimeDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.EnchantedCloth)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.SpiderDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.SpiderSilk)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.BatDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.BatWing)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.FairyDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.FairyDust)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.FoxDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.FoxTail)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.DevilFishDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.FishScales)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.TreantDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.CarvedBranch)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.FlameTigerDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.ThickFur)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.UnicornDropChance:if(c)return h.percent(t,3);if(l=Pe.Material(qe.UnicornHorn)+" Drop Chance (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.ColorMaterialDropChance:if(c)return h.percent(t,4);if(l="Rare Material Drop Chance (Global) + "+h.percent(t,4),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.PhysicalCritical:if(c)return h.percent(t);if(l="Physical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MagicalCritical:if(c)return h.percent(t);if(l="Magical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.EXPGain:if(c)return h.percent(t);if(l=t>=0?"EXP Gain + "+h.percent(t):"EXP Gain <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.SkillProficiency:if(c)return h.percent(t);if(l=t>=0?"Skill Proficiency Gain + "+h.percent(t):"Skill Proficiency Gain <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.EquipmentProficiency:if(c)return h.percent(t);if(l=t>=0?"Equipment Proficiency Gain + "+h.percent(t):"Equipment Proficiency Gain <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MoveSpeedMultiplier:if(c)return h.percent(t);if(t<0){if(l="Move Speed <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break}if(l="Move Speed + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.GoldGain:if(c)return h.percent(t);if(l=t>=0?"Gold Gain (Global) + "+h.percent(t):"Gold Gain (Global) <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.StoneGain:if(c)return h.percent(t);if(l="Stone Gain (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.CrystalGain:if(c)return h.percent(t);if(l="Crystal Gain (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LeafGain:if(c)return h.percent(t);if(l="Leaf Gain (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.WarriorSkillLevel:if(c)return h.tDigit(t,1);if(l="Warrior Skill Level (Global) + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.WizardSkillLevel:if(c)return h.tDigit(t,1);if(l="Wizard Skill Level (Global) + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.AngelSkillLevel:if(c)return h.tDigit(t,1);if(l="Angel Skill Level (Global) + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.ThiefSkillLevel:if(c)return h.tDigit(t,1);if(l="Thief Skill Level (Global) + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.ArcherSkillLevel:if(c)return h.tDigit(t,1);if(l="Archer Skill Level (Global) + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.TamerSkillLevel:if(c)return h.tDigit(t,1);if(l="Tamer Skill Level (Global) + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.AllSkillLevel:if(c)return h.tDigit(t,1);if(l=t>=0?"All Skill Level (Global) + "+h.tDigit(t,1):"All Skill Level (Global) <span class='red'>"+h.tDigit(t,1)+"</span>",i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.SlimeKnowledge:if(c)return h.percent(t);if(l="Damage to Slime + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MagicSlimeKnowledge:if(c)return h.percent(t);if(l="Damage to Magicslime + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.SpiderKnowledge:if(c)return h.percent(t);if(l="Damage to Spider + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.BatKnowledge:if(c)return h.percent(t);if(l="Damage to Bat + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FairyKnowledge:if(c)return h.percent(t);if(l="Damage to Fairy + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FoxKnowledge:if(c)return h.percent(t);if(l="Damage to Fox + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DevilFishKnowledge:if(c)return h.percent(t);if(l="Damage to Devilfish + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.TreantKnowledge:if(c)return h.percent(t);if(l="Damage to Treant + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FlameTigerKnowledge:if(c)return h.percent(t);if(l="Damage to Flametiger + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.UnicornKnowledge:if(c)return h.percent(t);if(l="Damage to Unicorn + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.PhysicalDamage:if(c)return h.percent(t);if(l="Physical Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FireDamage:if(c)return h.percent(t);if(l="Fire Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.IceDamage:if(c)return h.percent(t);if(l="Ice Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ThunderDamage:if(c)return h.percent(t);if(l="Thunder Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LightDamage:if(c)return h.percent(t);if(l="Light Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DarkDamage:if(c)return h.percent(t);if(l="Dark Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.HpRegen:if(c)return h.tDigit(t,2);if(l="HP Regeneration + "+h.tDigit(t,2)+" / sec",i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MpRegen:if(c)return h.tDigit(t,2);if(l="MP Regeneration + "+h.tDigit(t,2)+" / sec",i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.TamingPoint:if(c)return h.percent(t);if(l=t>=0?"Taming Point Gain + "+h.percent(t):"Taming Point Gain <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.WarriorSkillRange:if(c)return h.percent(t,3);if(l="Warrior's Class Skills Range (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.WizardSkillRange:if(c)return h.percent(t,3);if(l="Wizard's Class Skills Range (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.AngelSkillRange:if(c)return h.percent(t,3);if(l="Angel's Class Skills Range (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.ThiefSkillRange:if(c)return h.percent(t,3);if(l="Thief's Class Skills Range (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.ArcherSkillRange:if(c)return h.percent(t,3);if(l="Archer's Class Skills Range (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.TamerSkillRange:if(c)return h.percent(t,3);if(l="Tamer's Class Skills Range (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.TownMatGain:if(c)return h.percent(t);if(l="Town Material Gain + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.TownMatAreaClearGain:if(c)return h.tDigit(t,1);if(l="Town Material Gain from Area Clear + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.RebirthPointGain1:if(c)return h.percent(t);if(l="Tier 1 Rebirth Point Gain + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.RebirthPointGain2:if(c)return h.percent(t);if(l="Tier 2 Rebirth Point Gain + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.RebirthPointGain3:if(c)return h.percent(t);if(l="Tier 3 Rebirth Point Gain + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.CriticalDamage:if(c)return h.percent(t);if(l="Critical Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.BlessingEffect:if(c)return h.percent(t);if(l="Blessing Effect + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MoveSpeedAdder:if(c)return h.meter(t);if(l=t>=0?"Move Speed + "+h.meter(t):"Move Speed <span class='red'>"+h.meter(t)+"</span>",i>0){l=l+" ( + "+h.meter(i)+" / Lv )";break}break;case a.PetEXPGain:if(c)return h.percent(t);if(l="Pet EXP Gain + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LoyaltyPointGain:if(c)return h.percent(t);if(l=t>=0?"Loyalty Point Gain + "+h.percent(t):"Loyalty Point Gain <span class='red'>"+h.percent(t)+"</span>",i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.CatalystDoubleCriticalChance:if(c)return h.percent(t);if(l="Catalyst Double Critical Chance (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.WarriorSkillEffectRange:if(c)return h.percent(t,3);if(l="Warrior's Class Skills Area of Effect (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.WizardSkillEffectRange:if(c)return h.percent(t,3);if(l="Wizard's Class Skills Area of Effect (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.AngelSkillEffectRange:if(c)return h.percent(t,3);if(l="Angel's Class Skills Area of Effect (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.ThiefSkillEffectRange:if(c)return h.percent(t,3);if(l="Thief's Class Skills Area of Effect (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.ArcherSkillEffectRange:if(c)return h.percent(t,3);if(l="Archer's Class Skills Area of Effect (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.TamerSkillEffectRange:if(c)return h.percent(t,3);if(l="Tamer's Class Skills Area of Effect (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.HpRegenMultiplier:if(c)return h.percent(t,3);if(l="HP Regeneration / sec + "+h.percent(t,3)+" of Max HP",i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.MpRegenMultiplier:if(c)return h.percent(t,3);if(l="MP Regeneration / sec + "+h.percent(t,3)+" of Max MP",i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.ArmoredFury:if(c)return h.percent(t,3);if(l="Armored Fury + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.WardedFury:if(c)return h.percent(t,3);if(l="Warded Fury + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.PetPhysicalCriticalChance:if(c)return h.percent(t);if(l="Pet Physical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.PetMagicalCriticalChance:if(c)return h.percent(t);if(l="Pet Magical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.PetCriticalDamage:if(c)return h.percent(t);if(l="Pet Critical Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.PetDebuffResistance:if(c)return h.percent(t);if(l="Pet Debuff Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.StoneTownResearchPower:if(c)return h.percent(t);if(l="Stone Research Power (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.CrystalTownResearchPower:if(c)return h.percent(t);if(l="Crystal Research Power (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LeafTownResearchPower:if(c)return h.percent(t);if(l="Leaf Research Power (Global) + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.GuildEXPGain:if(c)return h.percent(t,3);if(l="Guild EXP Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.SPDMultiplier:if(c)return h.percent(t,3);if(l="SPD + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.CriticalDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Critical Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.SkillProficiencyMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Skill Proficiency Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.EquipmentProficiencyMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Equipment Proficiency Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.EXPGainMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative EXP Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.GoldGainMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Gold Gain (Global) + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.PhysicalDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Physical Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.FireDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Fire Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.IceDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Ice Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.ThunderDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Thunder Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.LightDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Light Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.DarkDamageMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Dark Damage + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.TamingPointMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Taming Point Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.PetEXPGainMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Pet EXP Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.LoyaltyPointGainMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Loyalty Point Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.BlessingEffectMultiplier:if(c)return h.percent(t,3);if(l="Multiplicative Blessing Effect + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.PhysicalCriticalMultiplier:if(c)return h.percent(t);if(l="Multiplicative Physical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MagicalCriticalMultiplier:if(c)return h.percent(t);if(l="Multiplicative Magical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ChallengeBossKnowledge:if(c)return h.percent(t);if(l="Damage to Challenge Boss + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.HPAfter:if(c)return h.tDigit(t,1);if(l="After HP + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MPAfter:if(c)return h.tDigit(t,1);if(l="After MP + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.ATKAfter:if(c)return h.tDigit(t,1);if(l="After ATK + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MATKAfter:if(c)return h.tDigit(t,1);if(l="After MATK + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.DEFAfter:if(c)return h.tDigit(t,1);if(l="After DEF + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MDEFAfter:if(c)return h.tDigit(t,1);if(l="After MDEF + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.SPDAfter:if(c)return h.tDigit(t,1);if(l="After SPD + "+h.tDigit(t,1),i>0){l=l+" ( + "+h.tDigit(i,2)+" / Lv )";break}break;case a.MoveSpeedAfter:if(c)return h.meter(t);if(l="After Move Speed + "+h.meter(t)+" / sec",i>0){l=l+" ( + "+h.meter(i)+" / Lv )";break}break;case a.PhysicalCriticalAfter:if(c)return h.percent(t);if(l="After Physical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MagicalCriticalAfter:if(c)return h.percent(t);if(l="After Magical Critical Chance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.CriticalDamageAfter:if(c)return h.percent(t);if(l="After Critical Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DebuffResistanceAfter:if(c)return h.percent(t);if(l="After Debuff Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.PhysicalDamageAfter:if(c)return h.percent(t);if(l="After Physical Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FireDamageAfter:if(c)return h.percent(t);if(l="After Fire Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.IceDamageAfter:if(c)return h.percent(t);if(l="After Ice Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ThunderDamageAfter:if(c)return h.percent(t);if(l="After Thunder Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LightDamageAfter:if(c)return h.percent(t);if(l="After Light Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DarkDamageAfter:if(c)return h.percent(t);if(l="After Dark Damage + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FireResistanceAfter:if(c)return h.percent(t);if(l="After Fire Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.IceResistanceAfter:if(c)return h.percent(t);if(l="After Ice Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ThunderResistanceAfter:if(c)return h.percent(t);if(l="After Thunder Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.LightResistanceAfter:if(c)return h.percent(t);if(l="After Light Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DarkResistanceAfter:if(c)return h.percent(t);if(l="After Dark Resistance + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.SlimeKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Slime + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.MagicSlimeKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Magicslime + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.SpiderKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Spider + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.BatKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Bat + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FairyKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Fairy + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FoxKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Fox + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.DevilFishKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Devilfish + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.TreantKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Treant + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FlameTigerKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Flametiger + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.UnicornKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Unicorn + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.ChallengeBossKnowledgeAfter:if(c)return h.percent(t);if(l="After Damage to Challenge Boss + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.SDDamageMultiplier:if(c)return h.percent(t);if(l="SD Damage Multiplier + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.SDDamageCutMultiplier:if(c)return h.percent(t);if(l="SD Damage Cut Multiplier + "+h.percent(t),i>0){l=l+" ( + "+h.percent(i)+" / Lv )";break}break;case a.FameGain:if(c)return h.percent(t);if(l="Fame Gain + "+h.percent(t,3),i>0){l=l+" ( + "+h.percent(i,3)+" / Lv )";break}break;case a.DungeonCoinGain:if(c)return h.percent(t);if(l="Dungeon Coin Gain + "+h.percent(t,4),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;case a.ExtraAfterDamage:if(c)return h.percent(t);if(l="Extra After Damage + "+h.percent(t,4),i>0){l=l+" ( + "+h.percent(i,4)+" / Lv )";break}break;default:if(c)return h.tDigit(t);l=e+" + "+h.tDigit(t);break}return l}function Tp(e,t,s=!1){switch(e){case x.MinorHealthPotion:return"Restores HP + "+h.tDigit(t);case x.MinorRegenerationPoultice:return"HP Regenerate + "+h.tDigit(t,2)+" / sec";case x.MinorResourcePoultice:return"Resource Gain (Global) + "+h.percent(t);case x.SlickShoeSolution:return"Move Speed + "+h.percent(t);case x.MinorManaRegenerationPoultice:return"MP Regenerate + "+h.tDigit(t,2)+" / sec";case x.MaterialMultiplierMist:return"Increases dropped amount of materials by "+h.tDigit(t);case x.BasicElixirOfBrawn:return"Physical Damage + "+h.percent(t);case x.BasicElixirOfBrains:return"Magical Damage + "+h.percent(t);case x.BasicElixirOfFortitude:return"HP + "+h.tDigit(t);case x.BasicElixirOfConcentration:return"MP + "+h.tDigit(t);case x.BasicElixirOfUnderstanding:return"Skill Proficiency Gain + "+h.percent(t);case x.ChilledHealthPotion:return"Restores HP + "+h.tDigit(t);case x.ChilledRegenerationPoultice:return"HP Regenerate + "+h.tDigit(t,2)+" / sec";case x.FrostyDefensePotion:return"Ice Resistance + "+h.percent(t);case x.IcyAuraDraught:return"Generates an aura of cold around hero that has "+h.percent(t)+" chance every second to give monsters SPD Down debuff";case x.SlightlyStickySalve:return"Gold Gain (Global) + "+h.percent(t);case x.SlickerShoeSolution:return"Move Speed + "+h.percent(t);case x.CoolHeadOintment:return"EXP Gain + "+h.percent(t);case x.FrostySlayersOil:return"Changes skills' damage type to Ice and adds extra "+h.percent(t)+" ice damage";case x.BurningDefensePotion:return"Fire Resistance + "+h.percent(t);case x.BlazingAuraDraught:return"Generates an aura of fire around hero that has "+h.percent(t)+" chance every second to knockback monsters";case x.FierySlayersOil:return"Changes skills' damage type to Fire and adds extra "+h.percent(t)+" fire damage";case x.ElectricDefensePotion:return"Thunder Resistance + "+h.percent(t);case x.WhirlingAuraDraught:return"Generates an aura of thunder around hero that has "+h.percent(t)+" chance every second to give monsters Electric debuff";case x.ShockingSlayersOil:return"Changes skills' damage type to Thunder and adds extra "+h.percent(t)+" thunder damage";case x.ThrowingNet:return"Right-click to capture Normal Type monsters";case x.IceRope:return"Right-click to capture Blue Type monsters";case x.ThunderRope:return"Right-click to capture Yellow Type monsters";case x.FireRope:return"Right-click to capture Red Type monsters";case x.LightRope:return"Right-click to capture Green Type monsters";case x.DarkRope:return"Right-click to capture Purple Type monsters";case x.GuildMembersEmblem:return s?"Reduces Guild EXP requirement to level by "+h.percent(t):"Multiplies Guild EXP Gain by "+h.percent(1+t);case x.CertificateOfCompetence:return s?"Multiplies Skill Proficiency Gain by "+h.percent(1+t):"Reduces Skill's Cast Time by "+h.percent(t);case x.MasonsTrowel:return s?"Increases Town Building's level effect by "+h.percent(t):"Increases Town Material Gain by "+h.percent(t);case x.EnchantedAlembic:return s?"Mysterious Water Gain + "+h.tDigit(t)+" / sec":"Potion Effect (Global) + "+h.percent(t);case x.TrackersMap:return s?"Epic Swarm Chance + "+h.percent(t)+" instead of Large Swarm":"Increases Area Clear # and Clear Reward by "+h.tDigit(t,1);case x.BerserkersStone:return s?"Equipment Effect + "+h.percent(t):"Multiplicative Damage to Challenge Boss by "+h.percent(t);case x.TrappersTag:return s?"Multiplies Taming Point Gain by "+h.percent(1+t):"Triple Capture Chance + "+h.percent(t);case x.FlorzporbDoll:return s?"Multiplies Gold Gain by "+h.percent(1+t):"Gives additional Slime Ball attack to Base Attack Skill with "+h.percent(t)+" damage";case x.ArachnettaDoll:return s?"Gold Cap + "+h.percent(t):"Gives Poison debuff to Base Attack Skill with "+h.percent(Math.min(1,t))+" chance";case x.GuardianKorDoll:return s?"Multiplies Equipment Proficiency Gain by "+h.percent(1+t):"If damage taken "+h.percent(Math.min(.25,t))+" or less of HP, nullifies it (Max:25%)";case x.SlimeBadge:return s?"HP + "+h.tDigit(t,1):"HP + "+h.percent(t);case x.MagicslimeBadge:return s?"MDEF + "+h.tDigit(t,1):"MDEF + "+h.percent(t);case x.SpiderBadge:return s?"DEF + "+h.tDigit(t,1):"DEF + "+h.percent(t);case x.BatBadge:return s?"ATK + "+h.tDigit(t,1):"ATK + "+h.percent(t);case x.FairyBadge:return s?"MATK + "+h.tDigit(t,1):"MATK + "+h.percent(t);case x.FoxBadge:return s?"MP + "+h.tDigit(t,1):"MP + "+h.percent(t);case x.DevilfishBadge:return s?"Stone Gain + "+h.percent(t):"Move Speed + "+h.percent(t);case x.TreantBadge:return s?"Crystal Gain + "+h.percent(t):"EXP Gain + "+h.percent(t);case x.FlametigerBadge:return s?"Leaf Gain + "+h.percent(t):"Equipment Proficiency Gain + "+h.percent(t);case x.UnicornBadge:return s?"SPD + "+h.tDigit(t,1):"SPD + "+h.percent(t);case x.AscendedFromIEH1:return s?"Nothing":"Multiplies EXP Gain by "+h.percent(1+t);case x.WarriorsBadge:return s?"Reduces Warrior's Skill Rank Cost by "+h.percent(t):"Multiplies Physical Critical Chance by "+h.percent(1+t);case x.WizardsBadge:return s?"Reduces Wizard's Skill Rank Cost by "+h.percent(t):"Multiplies Magical Critical Chance by "+h.percent(1+t);case x.AngelsBadge:return s?"Reduces Angel's Skill Rank Cost by "+h.percent(t):"Multiplies Skill Proficiency Gain by "+h.percent(1+t);case x.ThiefsBadge:return s?"Reduces Thief's Skill Rank Cost by "+h.percent(t):"Multiplies Equipment Drop Chance by "+h.percent(1+t);case x.ArchersBadge:return s?"Reduces Archer's Skill Rank Cost by "+h.percent(t):"Multiplies Critical Damage by "+h.percent(1+t);case x.TamersBadge:return s?"Reduces Tamer's Skill Rank Cost by "+h.percent(t):"Multiplies Pet EXP Gain by "+h.percent(1+t);case x.NostroDoll:return s?"Physical Absorption + "+h.percent(t):"Increase MP Regeneration / sec by "+h.percent(t)+" of Max MP";case x.LadyEmeldaDoll:return s?"Magical Absorption + "+h.percent(t):"Damage-Type Skill's damage + "+h.percent(t)+" along with its MP Consumption increasing + "+h.percent(4*t);case x.NariSuneDoll:return s?"Large Swarm Chance + "+h.percent(t)+" instead of Regular Swarm":"Skill's Range + "+h.percent(t);case x.OctobaddieDoll:return s?"Slime Coin Gain + "+h.percent(t):"Skill's Area of Effect + "+h.percent(t);case x.AncientSlimeBadge:return s?"After Damage to Slime + "+h.percent(t):"Multiplicative Damage to Slime + "+h.percent(t);case x.AncientMagicslimeBadge:return s?"After Damage to Magicslime + "+h.percent(t):"Multiplicative Damage to Magicslime + "+h.percent(t);case x.AncientSpiderBadge:return s?"After Damage to Spider + "+h.percent(t):"Multiplicative Damage to Spider + "+h.percent(t);case x.AncientBatBadge:return s?"After Damage to Bat + "+h.percent(t):"Multiplicative Damage to Bat + "+h.percent(t);case x.AncientFairyBadge:return s?"After Damage to Fairy + "+h.percent(t):"Multiplicative Damage to Fairy + "+h.percent(t);case x.AncientFoxBadge:return s?"After Damage to Fox + "+h.percent(t):"Multiplicative Damage to Fox + "+h.percent(t);case x.AncientDevilfishBadge:return s?"After Damage to Devilfish + "+h.percent(t):"Multiplicative Damage to Devilfish + "+h.percent(t);case x.AncientTreantBadge:return s?"After Damage to Treant + "+h.percent(t):"Multiplicative Damage to Treant + "+h.percent(t);case x.AncientFlametigerBadge:return s?"After Damage to Flametiger + "+h.percent(t):"Multiplicative Damage to Flametiger + "+h.percent(t);case x.AncientUnicornBadge:return s?"After Damage to Unicorn + "+h.percent(t):"Multiplicative Damage to Unicorn + "+h.percent(t);case x.AncientWarriorsBadge:return s?"SD Damage Multiplier + "+h.percent(t):"Multiplies Physical Damage by "+h.percent(1+t);case x.AncientWizardsBadge:return s?"SD Challenge Boss Damage Multiplier "+h.percent(t):"Multiplies Magical Damage by "+h.percent(1+t);case x.AncientAngelsBadge:return s?"SD Damage Cut Multiplier + "+h.percent(t):"Multiplies Equipment Proficiency Gain by "+h.percent(1+t);case x.AncientThiefsBadge:return s?"SD Armored Fury + "+h.percent(t):"Multiplies Armored Fury by "+h.percent(1+t);case x.AncientArchersBadge:return s?"SD Warded Fury + "+h.percent(t):"Multiplies Warded Fury by "+h.percent(1+t);case x.AncientTamersBadge:return s?"Dungeon Coin Gain + "+h.percent(t):"Multiplies Taming Point Gain by "+h.percent(1+t);default:return"Nothing"}}var Te=(e=>(e[e.Nothing=0]="Nothing",e[e.Health=1]="Health",e[e.HealthRegen=2]="HealthRegen",e[e.ResourceGain=3]="ResourceGain",e[e.Move=4]="Move",e[e.Mana=5]="Mana",e[e.ManaRegen=6]="ManaRegen",e[e.MaterialGain=7]="MaterialGain",e[e.PhysicalDamage=8]="PhysicalDamage",e[e.MagicalDamage=9]="MagicalDamage",e[e.MaxHP=10]="MaxHP",e[e.MaxMP=11]="MaxMP",e[e.SkillProfGain=12]="SkillProfGain",e[e.ElementResistance=13]="ElementResistance",e[e.Aura=14]="Aura",e[e.GoldGain=15]="GoldGain",e[e.ExpGain=16]="ExpGain",e[e.SlayerOil=17]="SlayerOil",e[e.Trap=18]="Trap",e[e.Talisman=19]="Talisman",e))(Te||{});function xp(e){switch(e){case Te.Health:return"Health";case Te.HealthRegen:return"Health Regen";case Te.ResourceGain:return"Resource";case Te.Move:return"Move";case Te.Mana:return"Mana";case Te.ManaRegen:return"Mana Regen";case Te.MaterialGain:return"Material";case Te.PhysicalDamage:return"Physical Damage";case Te.MagicalDamage:return"Magical Damage";case Te.MaxHP:return"Max HP";case Te.MaxMP:return"Max MP";case Te.SkillProfGain:return"Skill Proficiency";case Te.ElementResistance:return"Element Resistance";case Te.Aura:return"Aura";case Te.GoldGain:return"Gold";case Te.ExpGain:return"EXP";case Te.SlayerOil:return"Slayer Oil";case Te.Trap:return"Trap";case Te.Talisman:return"Talisman";default:return"Nothing"}}var ys=(e=>(e[e.WingAttack=0]="WingAttack",e[e.WingShoot=1]="WingShoot",e[e.Heal=2]="Heal",e[e.GodBless=3]="GodBless",e[e.MuscleInflation=4]="MuscleInflation",e[e.MagicImpact=5]="MagicImpact",e[e.ProtectWall=6]="ProtectWall",e[e.Haste=7]="Haste",e[e.WingStorm=8]="WingStorm",e[e.HolyArch=9]="HolyArch",e))(ys||{});function Gp(e){switch(e){case ys.WingAttack:return"Wing Attack";case ys.WingShoot:return"Wing Shoot";case ys.Heal:return"Heal";case ys.GodBless:return"God Bless";case ys.MuscleInflation:return"Muscle Inflation";case ys.MagicImpact:return"Magic Impact";case ys.ProtectWall:return"Protect Wall";case ys.Haste:return"Haste";case ys.WingStorm:return"Wing Storm";case ys.HolyArch:return"Holy Arch";default:return e}}var Ps=(e=>(e[e.ArrowAttak=0]="ArrowAttak",e[e.PiercingArrow=1]="PiercingArrow",e[e.BurstArrow=2]="BurstArrow",e[e.Multishot=3]="Multishot",e[e.ShockArrow=4]="ShockArrow",e[e.FrozenArrow=5]="FrozenArrow",e[e.ExplodingArrow=6]="ExplodingArrow",e[e.ShiningArrow=7]="ShiningArrow",e[e.GravityArrow=8]="GravityArrow",e[e.Kiting=9]="Kiting",e))(Ps||{});function Fp(e){switch(e){case Ps.ArrowAttak:return"Arrow Attack";case Ps.PiercingArrow:return"Piercing Arrow";case Ps.BurstArrow:return"Burst Arrow";case Ps.Multishot:return"Multishot";case Ps.ShockArrow:return"Shock Arrow";case Ps.FrozenArrow:return"Frozen Arrow";case Ps.ExplodingArrow:return"Exploding Arrow";case Ps.ShiningArrow:return"Shining Arrow";case Ps.GravityArrow:return"Gravity Arrow";case Ps.Kiting:return"Kiting";default:return e}}var vs=(e=>(e[e.SonnetAttack=0]="SonnetAttack",e[e.AttackingOrder=1]="AttackingOrder",e[e.RushOrder=2]="RushOrder",e[e.DefensiveOrder=3]="DefensiveOrder",e[e.SoothingBallad=4]="SoothingBallad",e[e.OdeOfFriendship=5]="OdeOfFriendship",e[e.AnthemOfEnthusiasm=6]="AnthemOfEnthusiasm",e[e.FeedChilli=7]="FeedChilli",e[e.BreedingKnowledge=8]="BreedingKnowledge",e[e.TuneOfTotalTaming=9]="TuneOfTotalTaming",e))(vs||{});function Ip(e){switch(e){case vs.SonnetAttack:return"Sonnet Attack";case vs.AttackingOrder:return"Attacking Order";case vs.RushOrder:return"Rush Order";case vs.DefensiveOrder:return"Defensive Order";case vs.SoothingBallad:return"Soothing Ballad";case vs.OdeOfFriendship:return"Ode of Friendship";case vs.AnthemOfEnthusiasm:return"Anthem of Enthusiasm";case vs.FeedChilli:return"Feed Chilli";case vs.BreedingKnowledge:return"Breeding Knowledge";case vs.TuneOfTotalTaming:return"Tune of Total Taming";default:return e}}var Bs=(e=>(e[e.DaggerAttack=0]="DaggerAttack",e[e.Stab=1]="Stab",e[e.KnifeToss=2]="KnifeToss",e[e.LuckyBlow=3]="LuckyBlow",e[e.SpreadToss=4]="SpreadToss",e[e.ShadowStrike=5]="ShadowStrike",e[e.SneakyStrike=6]="SneakyStrike",e[e.Pilfer=7]="Pilfer",e[e.DarkWield=8]="DarkWield",e[e.Assassination=9]="Assassination",e))(Bs||{});function Hp(e){switch(e){case Bs.DaggerAttack:return"Dagger Attack";case Bs.Stab:return"Stab";case Bs.KnifeToss:return"Knife Toss";case Bs.LuckyBlow:return"Lucky Blow";case Bs.SpreadToss:return"Spread Toss";case Bs.ShadowStrike:return"Shadow Strike";case Bs.SneakyStrike:return"Sneaky Strike";case Bs.Pilfer:return"Pilfer";case Bs.DarkWield:return"Dark Wield";case Bs.Assassination:return"Assassination";default:return e}}var bs=(e=>(e[e.SwordAttack=0]="SwordAttack",e[e.Slash=1]="Slash",e[e.DoubleSlash=2]="DoubleSlash",e[e.SonicSlash=3]="SonicSlash",e[e.SwingDown=4]="SwingDown",e[e.SwingAround=5]="SwingAround",e[e.ChargeSwing=6]="ChargeSwing",e[e.FanSwing=7]="FanSwing",e[e.ShieldAttack=8]="ShieldAttack",e[e.KnockingShot=9]="KnockingShot",e))(bs||{});function _p(e){switch(e){case bs.SwordAttack:return"Sword Attack";case bs.Slash:return"Slash";case bs.DoubleSlash:return"Double Slash";case bs.SonicSlash:return"Sonic Slash";case bs.SwingDown:return"Swing Down";case bs.SwingAround:return"Swing Around";case bs.ChargeSwing:return"Charge Swing";case bs.FanSwing:return"Fan Swing";case bs.ShieldAttack:return"Shield Charge";case bs.KnockingShot:return"Knocking Shot";default:return e}}var Ls=(e=>(e[e.StaffAttack=0]="StaffAttack",e[e.FireBolt=1]="FireBolt",e[e.FireStorm=2]="FireStorm",e[e.MeteorStrike=3]="MeteorStrike",e[e.IceBolt=4]="IceBolt",e[e.ChillingTouch=5]="ChillingTouch",e[e.Blizzard=6]="Blizzard",e[e.ThunderBolt=7]="ThunderBolt",e[e.DoubleThunderBolt=8]="DoubleThunderBolt",e[e.LightningThunder=9]="LightningThunder",e))(Ls||{});function Vp(e){switch(e){case Ls.StaffAttack:return"Staff Attack";case Ls.FireBolt:return"Fire Bolt";case Ls.FireStorm:return"Fire Storm";case Ls.MeteorStrike:return"Meteor Strike";case Ls.IceBolt:return"Ice Bolt";case Ls.ChillingTouch:return"Chilling Touch";case Ls.Blizzard:return"Blizzard";case Ls.ThunderBolt:return"Thunder Bolt";case Ls.DoubleThunderBolt:return"Double Thunder Bolt";case Ls.LightningThunder:return"Lightning Thunder";default:return e}}function Np(e,t){switch(e){case v.Warrior:return _p(t);case v.Wizard:return Vp(t);case v.Angel:return Gp(t);case v.Thief:return Hp(t);case v.Archer:return Fp(t);case v.Tamer:return Ip(t);default:return""}}var me=(e=>(e[e.Heal=0]="Heal",e[e.TimeLimit=1]="TimeLimit",e[e.DamageMultiplier=2]="DamageMultiplier",e[e.DamageCutMultiplier=3]="DamageCutMultiplier",e[e.RestoreDodgeTimesec=4]="RestoreDodgeTimesec",e[e.DodgeHeal=5]="DodgeHeal",e[e.DungeonCoinGain=6]="DungeonCoinGain",e[e.FameGain=7]="FameGain",e[e.SkillCastSpeed=8]="SkillCastSpeed",e[e.PhysicalCriticalChance=9]="PhysicalCriticalChance",e[e.MagicalCriticalChance=10]="MagicalCriticalChance",e[e.CriticalDamage=11]="CriticalDamage",e[e.MoveSpeed=12]="MoveSpeed",e[e.PhysicalDamage=13]="PhysicalDamage",e[e.MagicalDamage=14]="MagicalDamage",e[e.PhysicalAbsorption=15]="PhysicalAbsorption",e[e.MagicalAbsorption=16]="MagicalAbsorption",e[e.SkillHitCount=17]="SkillHitCount",e[e.ExtraAfterDamage=18]="ExtraAfterDamage",e[e.EquipmentDropChance=19]="EquipmentDropChance",e[e.ChallengeBossDamageMultiplier=20]="ChallengeBossDamageMultiplier",e))(me||{});function qp(e,t=0,s=0){let i="",c="",l="";switch(e){case me.Heal:i="Heal",c=`Restores ${t} of Max every: HP floor ( + ${s} / Rank )`,l=`HP After + ${h.tDigit(t)}`;break;case me.TimeLimit:i="Time Expansion",c=`SD Time Limit + ${t} ( + ${s} / Rank )`,l=`Initial SD Time Limit + ${h.secondsToDhms(t)}`;break;case me.DamageMultiplier:i="SD Damage Multiplier",c=`SD Damage Multiplier + ${t} ( + ${s} / Rank )`,l=`Multiplicative SD Damage Multiplier + ${h.percent(t)}`;break;case me.DamageCutMultiplier:i="SD Damage Cut Multiplier",c=`SD Damage Cut Multiplier + ${t} ( + ${s} / Rank )`,l=`Multiplicative SD Damage Cut Multiplier + ${h.percent(t)}`;break;case me.RestoreDodgeTimesec:i="Dodge Time",c=`Restores ${t} sec available dodge every floor ( + ${s} / Rank )`,l=`Initial available dodge + ${h.tDigit(t,0)} sec`;break;case me.DodgeHeal:i="Dodge Heal",c=`Restores ${t} of Max every: HP time dodge is successful ( + ${s} / Rank )`,l=`MP After + ${h.tDigit(t)}`;break;case me.DungeonCoinGain:i="Dungeon Coin Gain",c=`Extra Dungeon per: Coin defeat + ${t} ( + ${s} / Rank )`,l=`Dungeon Coin Gain + ${h.percent(t)}`;break;case me.FameGain:i="Fame Gain",c=`Fame Gain + ${t} ( + ${s} / Rank )`,l=`Fame Gain + ${h.percent(t)}`;break;case me.SkillCastSpeed:i="Skill Cast Speed",c=`Skill Cast Speed + ${t} ( + ${s} / Rank )`,l=`SPD After + ${h.tDigit(t)}`;break;case me.PhysicalCriticalChance:i="Physical Critical Chance",c=`Physical Critical Chance After + ${t} ( + ${s} / Rank )`,l=`Physical Critical Chance After + ${h.percent(t)}`;break;case me.MagicalCriticalChance:i="Magical Critical Chance",c=`Magical Critical Chance After + ${t} ( + ${s} / Rank )`,l=`Magical Critical Chance After + ${h.percent(t)}`;break;case me.CriticalDamage:i="Critical Damage",c=`Critical Damage After + ${t} ( + ${s} / Rank )`,l=`Multiplicative Critical Damage + ${h.percent(t)}`;break;case me.MoveSpeed:i="Move Speed",c=`Move Speed After + ${t} / sec ( + ${s} / Rank )`,l=`Move Speed After + ${t} / sec`;break;case me.PhysicalDamage:i="Physical Damage",c=`Physical Damage After + ${t} ( + ${s} / Rank )`,l=`ATK After + ${h.tDigit(t)}`;break;case me.MagicalDamage:i="Magical Damage",c=`Magical Damage After + ${t} ( + ${s} / Rank )`,l=`MATK After + ${h.tDigit(t)}`;break;case me.PhysicalAbsorption:i="Physical Absorption",c=`Physical Absorption After + ${t} ( + ${s} / Rank )`,l=`DEF After + ${h.tDigit(t)}`;break;case me.MagicalAbsorption:i="Magical Absorption",c=`Magical Absorption After + ${t} ( + ${s} / Rank )`,l=`MDEF After + ${h.tDigit(t)}`;break;case me.SkillHitCount:i="Skill Hit Count",c=`Skill Hit Count + ${t} ( + ${s} / Rank )`,l=`Skill Level After + ${h.tDigit(t)}`;break;case me.ExtraAfterDamage:i="Extra After Damage",c=`Extra After Damage + ${t} ( + ${s} / Rank )`,l=`Extra After Damage + ${h.percent(t)}`;break;case me.EquipmentDropChance:i="Equipment Drop Chance",c=`Equipment Drop Chance After + ${t} ( + ${s} / Rank )`,l=`Artifact Proficiency Gain + ${h.percent(t)}`;break;case me.ChallengeBossDamageMultiplier:i="SD Challenge Boss Damage Multiplier",c=`SD Challenge Boss Damage Multiplier + ${t} ( + ${s} / Rank )`,l=`Multiplicative SD Challenge Boss Damage Multiplier + ${h.percent(t)}`;break}return{name:i,active:c,passive:l}}var $e=(e=>(e[e.MudBrick=0]="MudBrick",e[e.LimestoneBrick=1]="LimestoneBrick",e[e.MarbleBrick=2]="MarbleBrick",e[e.GraniteBrick=3]="GraniteBrick",e[e.BasaltBrick=4]="BasaltBrick",e[e.PineLog=5]="PineLog",e[e.MapleLog=6]="MapleLog",e[e.AshLog=7]="AshLog",e[e.MahoganyLog=8]="MahoganyLog",e[e.RosewoodLog=9]="RosewoodLog",e[e.JasperShard=10]="JasperShard",e[e.OpalShard=11]="OpalShard",e[e.OnyxShard=12]="OnyxShard",e[e.JadeShard=13]="JadeShard",e[e.SapphireShard=14]="SapphireShard",e))($e||{});function Up(e){switch(e){case $e.MudBrick:return"Mud Brick";case $e.LimestoneBrick:return"Limestone Brick";case $e.MarbleBrick:return"Marble Brick";case $e.GraniteBrick:return"Granite Brick";case $e.BasaltBrick:return"Basalt Brick";case $e.PineLog:return"Pine Log";case $e.MapleLog:return"Maple Log";case $e.AshLog:return"Ash Log";case $e.MahoganyLog:return"Mahogany Log";case $e.RosewoodLog:return"Rosewood Log";case $e.JasperShard:return"Jasper Shard";case $e.OpalShard:return"Opal Shard";case $e.OnyxShard:return"Onyx Shard";case $e.JadeShard:return"Jade Shard";case $e.SapphireShard:return"Sapphire Shard";default:return e}}var Z=(e=>(e[e.Slime=0]="Slime",e[e.MagicSlime=1]="MagicSlime",e[e.Spider=2]="Spider",e[e.Bat=3]="Bat",e[e.Fairy=4]="Fairy",e[e.Fox=5]="Fox",e[e.DevilFish=6]="DevilFish",e[e.Treant=7]="Treant",e[e.FlameTiger=8]="FlameTiger",e[e.Unicorn=9]="Unicorn",e[e.Mimic=10]="Mimic",e[e.ChallengeBoss=11]="ChallengeBoss",e))(Z||{});function Wp(e){switch(e){case Z.Slime:return"Slime";case Z.MagicSlime:return"Magicslime";case Z.Spider:return"Spider";case Z.Bat:return"Bat";case Z.Fairy:return"Fairy";case Z.Fox:return"Fox";case Z.DevilFish:return"Devilfish";case Z.Treant:return"Treant";case Z.FlameTiger:return"Flametiger";case Z.Unicorn:return"Unicorn";case Z.Mimic:return"Mimic";case Z.ChallengeBoss:return"Challenge Boss";default:return e}}var _=(e=>(e[e.Nothing=0]="Nothing",e[e.ResourceGain=1]="ResourceGain",e[e.PotionEffect=2]="PotionEffect",e[e.TamingPointGain=3]="TamingPointGain",e[e.GoldCap=4]="GoldCap",e[e.GoldGain=5]="GoldGain",e[e.ExpGain=6]="ExpGain",e[e.DoubleMaterialChance=7]="DoubleMaterialChance",e[e.GoldGainOnDisassemblePotion=8]="GoldGainOnDisassemblePotion",e[e.DisassembleTownMatGain=9]="DisassembleTownMatGain",e[e.TownMatGainFromDungeonReward=10]="TownMatGainFromDungeonReward",e[e.OilOfSlimeDropChance=11]="OilOfSlimeDropChance",e[e.EnchantedClothDropChance=12]="EnchantedClothDropChance",e[e.SpiderSilkDropChance=13]="SpiderSilkDropChance",e[e.BatWingDropChance=14]="BatWingDropChance",e[e.FairyDustDropChance=15]="FairyDustDropChance",e[e.FoxTailDropChance=16]="FoxTailDropChance",e[e.FishScalesDropChance=17]="FishScalesDropChance",e[e.CarvedBranchDropChance=18]="CarvedBranchDropChance",e[e.ThickFurDropChance=19]="ThickFurDropChance",e[e.UnicornHornDropChance=20]="UnicornHornDropChance",e[e.EquipProfGain=21]="EquipProfGain",e[e.MysteriousWaterGain=22]="MysteriousWaterGain",e[e.ChestPortalOrbChance=23]="ChestPortalOrbChance",e[e.SkillProfGain=24]="SkillProfGain",e[e.TownMatGain=25]="TownMatGain",e[e.ResearchPowerStone=26]="ResearchPowerStone",e[e.ResearchPowerCrystal=27]="ResearchPowerCrystal",e[e.ResearchPowerLeaf=28]="ResearchPowerLeaf",e[e.CatalystCriticalChance=29]="CatalystCriticalChance",e[e.MysteriousWaterCap=30]="MysteriousWaterCap",e[e.BlessingEffect=31]="BlessingEffect",e[e.LoyaltyPointGain=32]="LoyaltyPointGain",e[e.PetExpGain=33]="PetExpGain",e[e.ExpeditionExpGain=34]="ExpeditionExpGain",e[e.EssenceConversionRate=35]="EssenceConversionRate",e[e.SlimeCoinEfficiency=36]="SlimeCoinEfficiency",e[e.SlimeCoinCap=37]="SlimeCoinCap",e[e.EquipmentEffect=38]="EquipmentEffect",e[e.AlchemyPointGain=39]="AlchemyPointGain",e))(_||{});function Op(e){switch(e.passiveEffectKind){case _.Nothing:return"Stay tuned for future updates!";case _.ResourceGain:return"Resource Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.PotionEffect:return"Potion Effect + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case _.TamingPointGain:return"Taming Point Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.GoldCap:return"Multiply Gold Cap by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case _.GoldGain:return"Gold Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case _.ExpGain:return"EXP Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.DoubleMaterialChance:return"Lucky Material Chance for Doubled Material Gain : "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.GoldGainOnDisassemblePotion:return"Gold Gain on Disassembling Potions + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.DisassembleTownMatGain:return"Town Material Gain on Disassembling Equipment + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.TownMatGainFromDungeonReward:return"Town Material Gain from Dungeon Reward + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.OilOfSlimeDropChance:return this.Material(qe.OilOfSlime)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.EnchantedClothDropChance:return this.Material(qe.EnchantedCloth)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.SpiderSilkDropChance:return this.Material(qe.SpiderSilk)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.BatWingDropChance:return this.Material(qe.BatWing)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.FairyDustDropChance:return this.Material(qe.FairyDust)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.FoxTailDropChance:return this.Material(qe.FoxTail)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.FishScalesDropChance:return this.Material(qe.FishScales)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.CarvedBranchDropChance:return this.Material(qe.CarvedBranch)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.ThickFurDropChance:return this.Material(qe.ThickFur)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.UnicornHornDropChance:return this.Material(qe.UnicornHorn)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.EquipProfGain:return"Equipment Proficiency Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.MysteriousWaterGain:return"Mysterious Water Gain + "+h.tDigit(e.effectValue,3)+" / sec ( + "+h.tDigit(e.effectIncrementValue,3)+" / Rank )";case _.ChestPortalOrbChance:return"Finding Portal Orb from Chest Chance : "+h.percent(e.effectValue,4)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case _.SkillProfGain:return"Skill Proficiency Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.TownMatGain:return"Multiply Town Material Gain by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.ResearchPowerStone:return"Stone Research Power + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case _.ResearchPowerCrystal:return"Crystal Research Power + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case _.ResearchPowerLeaf:return"Leaf Research Power + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case _.CatalystCriticalChance:return"Multiplies Critical Chance of Catalyst by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.MysteriousWaterCap:return"Max Mysterious Water Cap + "+h.tDigit(e.effectValue)+" ( + "+h.tDigit(e.effectIncrementValue,2)+" / Rank )";case _.BlessingEffect:return"Blessing Effect + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.LoyaltyPointGain:return"Loyalty Point Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.PetExpGain:return"Pet EXP Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.ExpeditionExpGain:return"Expedition EXP Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.EssenceConversionRate:return"Essence Conversion Rate + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.SlimeCoinEfficiency:return"Multiplies Slime Coin Gain by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.SlimeCoinCap:return"Multiplies Slime Coin Cap by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.EquipmentEffect:return"Multiplies Equipment Effect by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case _.AlchemyPointGain:return"Alchemy Point Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";default:return""}}function $p(e){switch(e){case D.FireRes:return"Fire Resistance";case D.IceRes:return"Ice Resistance";case D.ThunderRes:return"Thunder Resistance";case D.LightRes:return"Light Resistance";case D.DarkRes:return"Dark Resistance";case D.DebuffRes:return"Debuff Resistance";case D.PhysCritChance:return"Physical Critical Chance";case D.MagCritChance:return"Magical Critical Chance";case D.CriticalDamage:return"Critical Damage";case D.EquipmentDropChance:return"Equipment Drop Chance";case D.MoveSpeed:return"Move Speed";case D.SkillProficiencyGain:return"Skill Proficiency Gain";case D.EquipmentProficiencyGain:return"Equipment Proficiency Gain";case D.TamingPointGain:return"Taming Point Gain";case D.ExpGain:return"EXP Gain";case D.ArmoredFury:return"Armored Fury";case D.WardedFury:return"Warded Fury";case D.PetPhysCritChance:return"Pet Base Physical Critical Chance";case D.PetMagCritChance:return"Pet Base Magical Critical Chance";case D.PetCriticalDamage:return"Pet Base Critical Damage";case D.PetDebuffResistance:return"Pet Debuff Resistance";case D.ArtifactProficiencyGain:return"Artifact Proficiency Gain"}}var Ee=(e=>(e[e.Global=0]="Global",e[e.Daily=1]="Daily",e[e.Title=2]="Title",e[e.General=3]="General",e))(Ee||{}),$=(e=>(e[e.AbilityVIT=0]="AbilityVIT",e[e.ClearGeneralQuest=1]="ClearGeneralQuest",e[e.ClearTitleQuest=2]="ClearTitleQuest",e[e.UpgradeResource=3]="UpgradeResource",e[e.Equip=4]="Equip",e[e.Alchemy=5]="Alchemy",e[e.Guild=6]="Guild",e[e.Town=7]="Town",e[e.Research=8]="Research",e[e.Rebirth=9]="Rebirth",e[e.Challenge=10]="Challenge",e[e.Expedition=11]="Expedition",e[e.WorldAscension=12]="WorldAscension",e[e.AreaPrestige=13]="AreaPrestige",e[e.Upgrade1=14]="Upgrade1",e[e.Upgrade2=15]="Upgrade2",e[e.Upgrade3=16]="Upgrade3",e[e.Upgrade4=17]="Upgrade4",e[e.Upgrade5=18]="Upgrade5",e[e.Upgrade6=19]="Upgrade6",e[e.Upgrade7=20]="Upgrade7",e[e.Upgrade8=21]="Upgrade8",e[e.Nitro1=22]="Nitro1",e[e.Nitro2=23]="Nitro2",e[e.Nitro3=24]="Nitro3",e[e.Nitro4=25]="Nitro4",e[e.Nitro5=26]="Nitro5",e[e.Nitro6=27]="Nitro6",e[e.Nitro7=28]="Nitro7",e[e.Nitro8=29]="Nitro8",e[e.Capture1=30]="Capture1",e[e.Capture2=31]="Capture2",e[e.Capture3=32]="Capture3",e[e.Capture4=33]="Capture4",e[e.Capture5=34]="Capture5",e[e.Alchemy1=35]="Alchemy1",e[e.Alchemy2=36]="Alchemy2",e[e.Alchemy3=37]="Alchemy3",e[e.Alchemy4=38]="Alchemy4",e[e.Alchemy5=39]="Alchemy5",e[e.Alchemy6=40]="Alchemy6",e[e.Alchemy7=41]="Alchemy7",e[e.Alchemy8=42]="Alchemy8",e[e.Upgrade9=43]="Upgrade9",e[e.Upgrade10=44]="Upgrade10",e[e.Upgrade11=45]="Upgrade11",e[e.Upgrade12=46]="Upgrade12",e[e.Upgrade13=47]="Upgrade13",e[e.Nitro9=48]="Nitro9",e[e.Nitro10=49]="Nitro10",e[e.Nitro11=50]="Nitro11",e[e.Nitro12=51]="Nitro12",e[e.Nitro13=52]="Nitro13",e[e.Nitro14=53]="Nitro14",e[e.Nitro15=54]="Nitro15",e[e.Capture6=55]="Capture6",e[e.Capture7=56]="Capture7",e[e.Capture8=57]="Capture8",e[e.Capture9=58]="Capture9",e[e.Capture10=59]="Capture10",e[e.Capture11=60]="Capture11",e[e.Capture12=61]="Capture12",e[e.Upgrade14=62]="Upgrade14",e[e.Upgrade15=63]="Upgrade15",e[e.Upgrade16=64]="Upgrade16",e[e.Upgrade17=65]="Upgrade17",e[e.Upgrade18=66]="Upgrade18",e[e.Capture13=67]="Capture13",e[e.Capture14=68]="Capture14",e[e.Capture15=69]="Capture15",e[e.Capture16=70]="Capture16",e[e.SD1=71]="SD1",e[e.SD2=72]="SD2",e[e.SD3=73]="SD3",e[e.SD4=74]="SD4",e[e.SD5=75]="SD5",e[e.SD6=76]="SD6",e[e.SD7=77]="SD7",e[e.SD8=78]="SD8",e))($||{}),E=(e=>(e[e.SkillMaster1=0]="SkillMaster1",e[e.SkillMaster2=1]="SkillMaster2",e[e.SkillMaster3=2]="SkillMaster3",e[e.SkillMaster4=3]="SkillMaster4",e[e.MonsterDistinguisher1=4]="MonsterDistinguisher1",e[e.MonsterDistinguisher2=5]="MonsterDistinguisher2",e[e.MonsterDistinguisher3=6]="MonsterDistinguisher3",e[e.MonsterDistinguisher4=7]="MonsterDistinguisher4",e[e.MonsterDistinguisher5=8]="MonsterDistinguisher5",e[e.MonsterDistinguisher6=9]="MonsterDistinguisher6",e[e.EquipmentSlotWeapon1=10]="EquipmentSlotWeapon1",e[e.EquipmentSlotWeapon2=11]="EquipmentSlotWeapon2",e[e.EquipmentSlotWeapon3=12]="EquipmentSlotWeapon3",e[e.EquipmentSlotWeapon4=13]="EquipmentSlotWeapon4",e[e.EquipmentSlotWeapon5=14]="EquipmentSlotWeapon5",e[e.EquipmentSlotWeapon6=15]="EquipmentSlotWeapon6",e[e.EquipmentSlotArmor1=16]="EquipmentSlotArmor1",e[e.EquipmentSlotArmor2=17]="EquipmentSlotArmor2",e[e.EquipmentSlotArmor3=18]="EquipmentSlotArmor3",e[e.EquipmentSlotArmor4=19]="EquipmentSlotArmor4",e[e.EquipmentSlotArmor5=20]="EquipmentSlotArmor5",e[e.EquipmentSlotArmor6=21]="EquipmentSlotArmor6",e[e.EquipmentSlotJewelry1=22]="EquipmentSlotJewelry1",e[e.EquipmentSlotJewelry2=23]="EquipmentSlotJewelry2",e[e.EquipmentSlotJewelry3=24]="EquipmentSlotJewelry3",e[e.EquipmentSlotJewelry4=25]="EquipmentSlotJewelry4",e[e.EquipmentSlotJewelry5=26]="EquipmentSlotJewelry5",e[e.EquipmentSlotJewelry6=27]="EquipmentSlotJewelry6",e[e.PotionSlot1=28]="PotionSlot1",e[e.PotionSlot2=29]="PotionSlot2",e[e.PotionSlot3=30]="PotionSlot3",e[e.PhysicalAttack1=31]="PhysicalAttack1",e[e.PhysicalAttack2=32]="PhysicalAttack2",e[e.PhysicalAttack3=33]="PhysicalAttack3",e[e.PhysicalAttack4=34]="PhysicalAttack4",e[e.FireAttack1=35]="FireAttack1",e[e.FireAttack2=36]="FireAttack2",e[e.FireAttack3=37]="FireAttack3",e[e.FireAttack4=38]="FireAttack4",e[e.IceAttack1=39]="IceAttack1",e[e.IceAttack2=40]="IceAttack2",e[e.IceAttack3=41]="IceAttack3",e[e.IceAttack4=42]="IceAttack4",e[e.ThunderAttack1=43]="ThunderAttack1",e[e.ThunderAttack2=44]="ThunderAttack2",e[e.ThunderAttack3=45]="ThunderAttack3",e[e.ThunderAttack4=46]="ThunderAttack4",e[e.LightAttack1=47]="LightAttack1",e[e.LightAttack2=48]="LightAttack2",e[e.LightAttack3=49]="LightAttack3",e[e.LightAttack4=50]="LightAttack4",e[e.DarkAttack1=51]="DarkAttack1",e[e.DarkAttack2=52]="DarkAttack2",e[e.DarkAttack3=53]="DarkAttack3",e[e.DarkAttack4=54]="DarkAttack4",e[e.Porter1=55]="Porter1",e[e.Porter2=56]="Porter2",e[e.Porter3=57]="Porter3",e[e.Porter4=58]="Porter4",e[e.Porter5=59]="Porter5",e[e.Porter6=60]="Porter6",e[e.Alchemist1=61]="Alchemist1",e[e.Alchemist2=62]="Alchemist2",e[e.Alchemist3=63]="Alchemist3",e[e.Alchemist4=64]="Alchemist4",e[e.Alchemist5=65]="Alchemist5",e[e.EquipmentProf1=66]="EquipmentProf1",e[e.EquipmentProf2=67]="EquipmentProf2",e[e.EquipmentProf3=68]="EquipmentProf3",e[e.EquipmentProf4=69]="EquipmentProf4",e[e.EquipmentProf5=70]="EquipmentProf5",e[e.MetalHunter1=71]="MetalHunter1",e[e.MetalHunter2=72]="MetalHunter2",e[e.MetalHunter3=73]="MetalHunter3",e[e.MetalHunter4=74]="MetalHunter4",e[e.FireResistance1=75]="FireResistance1",e[e.FireResistance2=76]="FireResistance2",e[e.FireResistance3=77]="FireResistance3",e[e.FireResistance4=78]="FireResistance4",e[e.FireResistance5=79]="FireResistance5",e[e.IceResistance1=80]="IceResistance1",e[e.IceResistance2=81]="IceResistance2",e[e.IceResistance3=82]="IceResistance3",e[e.IceResistance4=83]="IceResistance4",e[e.IceResistance5=84]="IceResistance5",e[e.ThunderResistance1=85]="ThunderResistance1",e[e.ThunderResistance2=86]="ThunderResistance2",e[e.ThunderResistance3=87]="ThunderResistance3",e[e.ThunderResistance4=88]="ThunderResistance4",e[e.ThunderResistance5=89]="ThunderResistance5",e[e.LightResistance1=90]="LightResistance1",e[e.LightResistance2=91]="LightResistance2",e[e.LightResistance3=92]="LightResistance3",e[e.LightResistance4=93]="LightResistance4",e[e.LightResistance5=94]="LightResistance5",e[e.DarkResistance1=95]="DarkResistance1",e[e.DarkResistance2=96]="DarkResistance2",e[e.DarkResistance3=97]="DarkResistance3",e[e.DarkResistance4=98]="DarkResistance4",e[e.DarkResistance5=99]="DarkResistance5",e[e.Survival1=100]="Survival1",e[e.Survival2=101]="Survival2",e[e.Survival3=102]="Survival3",e[e.Survival4=103]="Survival4",e[e.Cooperation1=104]="Cooperation1",e[e.Cooperation2=105]="Cooperation2",e[e.Cooperation3=106]="Cooperation3",e[e.Quester1=107]="Quester1",e[e.Quester2=108]="Quester2",e[e.Quester3=109]="Quester3",e[e.Quester4=110]="Quester4",e[e.Quester5=111]="Quester5",e[e.Quester6=112]="Quester6",e[e.Quester7=113]="Quester7",e[e.Quester8=114]="Quester8",e[e.Quester9=115]="Quester9",e[e.Quester10=116]="Quester10",e[e.MonsterDistinguisher7=117]="MonsterDistinguisher7",e[e.MonsterDistinguisher8=118]="MonsterDistinguisher8",e[e.MetalHunter5=119]="MetalHunter5",e[e.MetalHunter6=120]="MetalHunter6",e[e.MetalHunter7=121]="MetalHunter7",e[e.MetalHunter8=122]="MetalHunter8",e[e.MetalHunter9=123]="MetalHunter9",e[e.ExplorerOfSD1=124]="ExplorerOfSD1",e[e.ExplorerOfSD2=125]="ExplorerOfSD2",e[e.ExplorerOfSD3=126]="ExplorerOfSD3",e[e.ExplorerOfSD4=127]="ExplorerOfSD4",e[e.ExplorerOfSD5=128]="ExplorerOfSD5",e[e.ExplorerOfSD6=129]="ExplorerOfSD6",e[e.ExplorerOfSD7=130]="ExplorerOfSD7",e[e.ExplorerOfSD8=131]="ExplorerOfSD8",e[e.ExplorerOfSD9=132]="ExplorerOfSD9",e[e.ExplorerOfSD10=133]="ExplorerOfSD10",e[e.ExplorerOfSD11=134]="ExplorerOfSD11",e[e.ExplorerOfSD12=135]="ExplorerOfSD12",e[e.ExplorerOfSD13=136]="ExplorerOfSD13",e[e.ExplorerOfSD14=137]="ExplorerOfSD14",e[e.ExplorerOfSD15=138]="ExplorerOfSD15",e))(E||{}),G=(e=>(e[e.SkillMaster=0]="SkillMaster",e[e.MonsterDistinguisher=1]="MonsterDistinguisher",e[e.EquipmentSlotWeapon=2]="EquipmentSlotWeapon",e[e.EquipmentSlotArmor=3]="EquipmentSlotArmor",e[e.EquipmentSlotJewelry=4]="EquipmentSlotJewelry",e[e.PotionSlot=5]="PotionSlot",e[e.EquipmentProficiency=6]="EquipmentProficiency",e[e.PhysicalDamage=7]="PhysicalDamage",e[e.FireDamage=8]="FireDamage",e[e.IceDamage=9]="IceDamage",e[e.ThunderDamage=10]="ThunderDamage",e[e.LightDamage=11]="LightDamage",e[e.DarkDamage=12]="DarkDamage",e[e.Alchemist=13]="Alchemist",e[e.MetalHunter=14]="MetalHunter",e[e.Survival=15]="Survival",e[e.FireResistance=16]="FireResistance",e[e.IceResistance=17]="IceResistance",e[e.ThunderResistance=18]="ThunderResistance",e[e.LightResistance=19]="LightResistance",e[e.DarkResistance=20]="DarkResistance",e[e.Cooperation=21]="Cooperation",e[e.DebuffResistance=22]="DebuffResistance",e[e.MoveSpeed=23]="MoveSpeed",e[e.BreakingTheLimit=24]="BreakingTheLimit",e[e.Quester=25]="Quester",e[e.ExplorerOfSD=26]="ExplorerOfSD",e))(G||{});function zp(e){const t=e.kind,s=e.kindGlobal,i=e.kindTitle;switch(t){case Ee.Global:switch(s){case $.AbilityVIT:return"Tutorial 1 : Basic Training";case $.ClearGeneralQuest:return"Tutorial 2 : General Quest";case $.ClearTitleQuest:return"Tutorial 3 : Title Quest";case $.UpgradeResource:return"Tutorial 4 : Upgrade";case $.Equip:return"Tutorial 5 : Equipment";case $.Alchemy:return"Tutorial 6 : Alchemy";case $.Guild:return"Tutorial 7 : Guild";case $.Town:return"Tutorial 8 : Town";case $.Research:return"Tutorial 9 : Town Research";case $.Rebirth:return"Tutorial 10 : Rebirth";case $.Challenge:return"Tutorial 11 : Challenge";case $.Expedition:return"Tutorial 12 : Expedition";case $.WorldAscension:return"Tutorial 13 : World Ascension";case $.AreaPrestige:return"Tutorial 14 : Area Prestige";case $.Upgrade1:return"To Further Stage 1";case $.Upgrade2:return"To Further Stage 2";case $.Upgrade3:return"To Further Stage 3";case $.Upgrade4:return"To Further Stage 4";case $.Upgrade5:return"To Further Stage 5";case $.Upgrade6:return"To Further Stage 6";case $.Upgrade7:return"To Further Stage 7";case $.Upgrade8:return"To Further Stage 8";case $.Nitro1:return"How to be a Nitro Booster Geek 1";case $.Nitro2:return"How to be a Nitro Booster Geek 2";case $.Nitro3:return"How to be a Nitro Booster Geek 3";case $.Nitro4:return"How to be a Nitro Booster Geek 4";case $.Nitro5:return"How to be a Nitro Booster Geek 5";case $.Nitro6:return"How to be a Nitro Booster Geek 6";case $.Nitro7:return"How to be a Nitro Booster Geek 7";case $.Nitro8:return"How to be a Nitro Booster Geek 8";case $.Capture1:return"Capturing Monsters 1";case $.Capture2:return"Capturing Monsters 2";case $.Capture3:return"Capturing Monsters 3";case $.Capture4:return"Capturing Monsters 4";case $.Capture5:return"Capturing Monsters 5";case $.Alchemy1:return"The Road of Alchemy 1";case $.Alchemy2:return"The Road of Alchemy 2";case $.Alchemy3:return"The Road of Alchemy 3";case $.Alchemy4:return"The Road of Alchemy 4";case $.Alchemy5:return"The Road of Alchemy 5";case $.Alchemy6:return"The Road of Alchemy 6";case $.Alchemy7:return"The Road of Alchemy 7";case $.Alchemy8:return"The Road of Alchemy 8";case $.Upgrade9:return"To Further Stage 9";case $.Upgrade10:return"To Further Stage 10";case $.Upgrade11:return"To Further Stage 11";case $.Upgrade12:return"To Further Stage 12";case $.Upgrade13:return"To Further Stage 13";case $.Nitro9:return"How to be a Nitro Booster Geek 9";case $.Nitro10:return"How to be a Nitro Booster Geek 10";case $.Nitro11:return"How to be a Nitro Booster Geek 11";case $.Nitro12:return"How to be a Nitro Booster Geek 12";case $.Nitro13:return"How to be a Nitro Booster Geek 13";case $.Nitro14:return"How to be a Nitro Booster Geek 14";case $.Nitro15:return"How to be a Nitro Booster Geek 15";case $.Capture6:return"Capturing Monsters 6";case $.Capture7:return"Capturing Monsters 7";case $.Capture8:return"Capturing Monsters 8";case $.Capture9:return"Capturing Monsters 9";case $.Capture10:return"Capturing Monsters 10";case $.Capture11:return"Capturing Monsters 11";case $.Capture12:return"Capturing Monsters 12";case $.Upgrade14:return"To Further Stage 14";case $.Upgrade15:return"To Further Stage 15";case $.Upgrade16:return"To Further Stage 16";case $.Upgrade17:return"To Further Stage 17";case $.Upgrade18:return"To Further Stage 18";case $.Capture13:return"Capturing Monsters 13";case $.Capture14:return"Capturing Monsters 14";case $.Capture15:return"Capturing Monsters 15";case $.Capture16:return"Capturing Monsters 16";case $.SD1:return"Super Dungeon 1";case $.SD2:return"Super Dungeon 2";case $.SD3:return"Super Dungeon 3";case $.SD4:return"Super Dungeon 4";case $.SD5:return"Super Dungeon 5";case $.SD6:return"Super Dungeon 6";case $.SD7:return"Super Dungeon 7";case $.SD8:return"Super Dungeon 8"}break;case Ee.Daily:break;case Ee.Title:switch(i){case E.SkillMaster1:return this.Title(G.SkillMaster)+" 1";case E.SkillMaster2:return this.Title(G.SkillMaster)+" 2";case E.SkillMaster3:return this.Title(G.SkillMaster)+" 3";case E.SkillMaster4:return this.Title(G.SkillMaster)+" 4";case E.MonsterDistinguisher1:return this.Title(G.MonsterDistinguisher)+" 1";case E.MonsterDistinguisher2:return this.Title(G.MonsterDistinguisher)+" 2";case E.MonsterDistinguisher3:return this.Title(G.MonsterDistinguisher)+" 3";case E.MonsterDistinguisher4:return this.Title(G.MonsterDistinguisher)+" 4";case E.MonsterDistinguisher5:return this.Title(G.MonsterDistinguisher)+" 5";case E.MonsterDistinguisher6:return this.Title(G.MonsterDistinguisher)+" 6";case E.EquipmentSlotWeapon1:return this.Title(G.EquipmentSlotWeapon)+" 1";case E.EquipmentSlotWeapon2:return this.Title(G.EquipmentSlotWeapon)+" 2";case E.EquipmentSlotWeapon3:return this.Title(G.EquipmentSlotWeapon)+" 3";case E.EquipmentSlotWeapon4:return this.Title(G.EquipmentSlotWeapon)+" 4";case E.EquipmentSlotWeapon5:return this.Title(G.EquipmentSlotWeapon)+" 5";case E.EquipmentSlotWeapon6:return this.Title(G.EquipmentSlotWeapon)+" 6";case E.EquipmentSlotArmor1:return this.Title(G.EquipmentSlotArmor)+" 1";case E.EquipmentSlotArmor2:return this.Title(G.EquipmentSlotArmor)+" 2";case E.EquipmentSlotArmor3:return this.Title(G.EquipmentSlotArmor)+" 3";case E.EquipmentSlotArmor4:return this.Title(G.EquipmentSlotArmor)+" 4";case E.EquipmentSlotArmor5:return this.Title(G.EquipmentSlotArmor)+" 5";case E.EquipmentSlotArmor6:return this.Title(G.EquipmentSlotArmor)+" 6";case E.EquipmentSlotJewelry1:return this.Title(G.EquipmentSlotJewelry)+" 1";case E.EquipmentSlotJewelry2:return this.Title(G.EquipmentSlotJewelry)+" 2";case E.EquipmentSlotJewelry3:return this.Title(G.EquipmentSlotJewelry)+" 3";case E.EquipmentSlotJewelry4:return this.Title(G.EquipmentSlotJewelry)+" 4";case E.EquipmentSlotJewelry5:return this.Title(G.EquipmentSlotJewelry)+" 5";case E.EquipmentSlotJewelry6:return this.Title(G.EquipmentSlotJewelry)+" 6";case E.PotionSlot1:return this.Title(G.PotionSlot)+" 1";case E.PotionSlot2:return this.Title(G.PotionSlot)+" 2";case E.PotionSlot3:return this.Title(G.PotionSlot)+" 3";case E.PhysicalAttack1:return this.Title(G.PhysicalDamage)+" 1";case E.PhysicalAttack2:return this.Title(G.PhysicalDamage)+" 2";case E.PhysicalAttack3:return this.Title(G.PhysicalDamage)+" 3";case E.PhysicalAttack4:return this.Title(G.PhysicalDamage)+" 4";case E.FireAttack1:return this.Title(G.FireDamage)+" 1";case E.FireAttack2:return this.Title(G.FireDamage)+" 2";case E.FireAttack3:return this.Title(G.FireDamage)+" 3";case E.FireAttack4:return this.Title(G.FireDamage)+" 4";case E.IceAttack1:return this.Title(G.IceDamage)+" 1";case E.IceAttack2:return this.Title(G.IceDamage)+" 2";case E.IceAttack3:return this.Title(G.IceDamage)+" 3";case E.IceAttack4:return this.Title(G.IceDamage)+" 4";case E.ThunderAttack1:return this.Title(G.ThunderDamage)+" 1";case E.ThunderAttack2:return this.Title(G.ThunderDamage)+" 2";case E.ThunderAttack3:return this.Title(G.ThunderDamage)+" 3";case E.ThunderAttack4:return this.Title(G.ThunderDamage)+" 4";case E.LightAttack1:return this.Title(G.LightDamage)+" 1";case E.LightAttack2:return this.Title(G.LightDamage)+" 2";case E.LightAttack3:return this.Title(G.LightDamage)+" 3";case E.LightAttack4:return this.Title(G.LightDamage)+" 4";case E.DarkAttack1:return this.Title(G.DarkDamage)+" 1";case E.DarkAttack2:return this.Title(G.DarkDamage)+" 2";case E.DarkAttack3:return this.Title(G.DarkDamage)+" 3";case E.DarkAttack4:return this.Title(G.DarkDamage)+" 4";case E.Porter1:return"The Great Race 1";case E.Porter2:return"The Great Race 2";case E.Porter3:return"The Great Race 3";case E.Porter4:return"The Great Race 4";case E.Porter5:return"The Great Race 5";case E.Porter6:return"The Great Race 6";case E.Alchemist1:return this.Title(G.Alchemist)+" 1";case E.Alchemist2:return this.Title(G.Alchemist)+" 2";case E.Alchemist3:return this.Title(G.Alchemist)+" 3";case E.Alchemist4:return this.Title(G.Alchemist)+" 4";case E.Alchemist5:return this.Title(G.Alchemist)+" 5";case E.EquipmentProf1:return this.Title(G.EquipmentProficiency)+" 1";case E.EquipmentProf2:return this.Title(G.EquipmentProficiency)+" 2";case E.EquipmentProf3:return this.Title(G.EquipmentProficiency)+" 3";case E.EquipmentProf4:return this.Title(G.EquipmentProficiency)+" 4";case E.EquipmentProf5:return this.Title(G.EquipmentProficiency)+" 5";case E.MetalHunter1:return this.Title(G.MetalHunter)+" 1";case E.MetalHunter2:return this.Title(G.MetalHunter)+" 2";case E.MetalHunter3:return this.Title(G.MetalHunter)+" 3";case E.MetalHunter4:return this.Title(G.MetalHunter)+" 4";case E.FireResistance1:return this.Title(G.FireResistance)+" 1";case E.FireResistance2:return this.Title(G.FireResistance)+" 2";case E.FireResistance3:return this.Title(G.FireResistance)+" 3";case E.FireResistance4:return this.Title(G.FireResistance)+" 4";case E.FireResistance5:return this.Title(G.FireResistance)+" 5";case E.IceResistance1:return this.Title(G.IceResistance)+" 1";case E.IceResistance2:return this.Title(G.IceResistance)+" 2";case E.IceResistance3:return this.Title(G.IceResistance)+" 3";case E.IceResistance4:return this.Title(G.IceResistance)+" 4";case E.IceResistance5:return this.Title(G.IceResistance)+" 5";case E.ThunderResistance1:return this.Title(G.ThunderResistance)+" 1";case E.ThunderResistance2:return this.Title(G.ThunderResistance)+" 2";case E.ThunderResistance3:return this.Title(G.ThunderResistance)+" 3";case E.ThunderResistance4:return this.Title(G.ThunderResistance)+" 4";case E.ThunderResistance5:return this.Title(G.ThunderResistance)+" 5";case E.LightResistance1:return this.Title(G.LightResistance)+" 1";case E.LightResistance2:return this.Title(G.LightResistance)+" 2";case E.LightResistance3:return this.Title(G.LightResistance)+" 3";case E.LightResistance4:return this.Title(G.LightResistance)+" 4";case E.LightResistance5:return this.Title(G.LightResistance)+" 5";case E.DarkResistance1:return this.Title(G.DarkResistance)+" 1";case E.DarkResistance2:return this.Title(G.DarkResistance)+" 2";case E.DarkResistance3:return this.Title(G.DarkResistance)+" 3";case E.DarkResistance4:return this.Title(G.DarkResistance)+" 4";case E.DarkResistance5:return this.Title(G.DarkResistance)+" 5";case E.Survival1:return this.Title(G.Survival)+" 1";case E.Survival2:return this.Title(G.Survival)+" 2";case E.Survival3:return this.Title(G.Survival)+" 3";case E.Survival4:return this.Title(G.Survival)+" 4";case E.Cooperation1:return this.Title(G.Cooperation)+" 1";case E.Cooperation2:return this.Title(G.Cooperation)+" 2";case E.Cooperation3:return this.Title(G.Cooperation)+" 3";case E.Quester1:return this.Title(G.Quester)+" 1";case E.Quester2:return this.Title(G.Quester)+" 2";case E.Quester3:return this.Title(G.Quester)+" 3";case E.Quester4:return this.Title(G.Quester)+" 4";case E.Quester5:return this.Title(G.Quester)+" 5";case E.Quester6:return this.Title(G.Quester)+" 6";case E.Quester7:return this.Title(G.Quester)+" 7";case E.Quester8:return this.Title(G.Quester)+" 8";case E.Quester9:return this.Title(G.Quester)+" 9";case E.Quester10:return this.Title(G.Quester)+" 10";case E.MonsterDistinguisher7:return this.Title(G.MonsterDistinguisher)+" 7";case E.MonsterDistinguisher8:return this.Title(G.MonsterDistinguisher)+" 8";case E.MetalHunter5:return this.Title(G.MetalHunter)+" 5";case E.MetalHunter6:return this.Title(G.MetalHunter)+" 6";case E.MetalHunter7:return this.Title(G.MetalHunter)+" 7";case E.MetalHunter8:return this.Title(G.MetalHunter)+" 8";case E.MetalHunter9:return this.Title(G.MetalHunter)+" 9";case E.ExplorerOfSD1:return this.Title(G.ExplorerOfSD)+" 1";case E.ExplorerOfSD2:return this.Title(G.ExplorerOfSD)+" 2";case E.ExplorerOfSD3:return this.Title(G.ExplorerOfSD)+" 3";case E.ExplorerOfSD4:return this.Title(G.ExplorerOfSD)+" 4";case E.ExplorerOfSD5:return this.Title(G.ExplorerOfSD)+" 5";case E.ExplorerOfSD6:return this.Title(G.ExplorerOfSD)+" 6";case E.ExplorerOfSD7:return this.Title(G.ExplorerOfSD)+" 7";case E.ExplorerOfSD8:return this.Title(G.ExplorerOfSD)+" 8";case E.ExplorerOfSD9:return this.Title(G.ExplorerOfSD)+" 9";case E.ExplorerOfSD10:return this.Title(G.ExplorerOfSD)+" 10";case E.ExplorerOfSD11:return this.Title(G.ExplorerOfSD)+" 11";case E.ExplorerOfSD12:return this.Title(G.ExplorerOfSD)+" 12";case E.ExplorerOfSD13:return this.Title(G.ExplorerOfSD)+" 13";case E.ExplorerOfSD14:return this.Title(G.ExplorerOfSD)+" 14";case E.ExplorerOfSD15:return this.Title(G.ExplorerOfSD)+" 15"}break;case Ee.General:break}return"not found"}function Jp(e){switch(e){case G.SkillMaster:return"Class Master";case G.MonsterDistinguisher:return"Monster Study";case G.EquipmentSlotWeapon:return"Apprentice of Weapon";case G.EquipmentSlotArmor:return"Apprentice of Armor";case G.EquipmentSlotJewelry:return"Apprentice of Jewelry";case G.PotionSlot:return"Apprentice of Potion";case G.EquipmentProficiency:return"Equipment Master";case G.PhysicalDamage:return"Master of Physical Attacks";case G.FireDamage:return"Master of Fire Attacks";case G.IceDamage:return"Master of Ice Attacks";case G.ThunderDamage:return"Master of Thunder Attacks";case G.LightDamage:return"Master of Light Attacks";case G.DarkDamage:return"Master of Dark Attacks";case G.Alchemist:return"Alchemist";case G.MetalHunter:return"Metal Hunter";case G.Survival:return"Survival";case G.FireResistance:return"Fire Soul";case G.IceResistance:return"Ice Soul";case G.ThunderResistance:return"Thunder Soul";case G.LightResistance:return"Light Soul";case G.DarkResistance:return"Dark Soul";case G.Cooperation:return"Proof of Rebirth";case G.DebuffResistance:return"Holy Guard";case G.MoveSpeed:return"Racer";case G.BreakingTheLimit:return"Breaking The Limit";case G.Quester:return"Quester";case G.ExplorerOfSD:return"Explorer of Super Dungeon";default:return"Not Implemented"}}var fe=(e=>(e[e.StatueOfHeroes=0]="StatueOfHeroes",e[e.Cartographer=1]="Cartographer",e[e.AlchemistsHut=2]="AlchemistsHut",e[e.Blacksmith=3]="Blacksmith",e[e.Temple=4]="Temple",e[e.Trapper=5]="Trapper",e[e.SlimeBank=6]="SlimeBank",e[e.MysticArena=7]="MysticArena",e[e.ArcaneResearcher=8]="ArcaneResearcher",e[e.Tavern=9]="Tavern",e[e.Dojo=10]="Dojo",e[e.AdventuringParty=11]="AdventuringParty",e))(fe||{});function Xp(e){switch(e){case fe.StatueOfHeroes:return"Statue of Heroes";case fe.AlchemistsHut:return"Alchemist's Hut";case fe.Cartographer:return"Cartographer";case fe.AdventuringParty:return"Adventuring Party";case fe.Blacksmith:return"Blacksmith";case fe.Temple:return"Temple";case fe.SlimeBank:return"Slime Bank";case fe.MysticArena:return"Mystic Arena";case fe.ArcaneResearcher:return"Arcane Researcher";case fe.Tavern:return"Tavern";case fe.Dojo:return"Dojo";case fe.Trapper:return"Trapper";default:return"Not Implemented"}}function jp(e,t){switch(e){case fe.StatueOfHeroes:return`EXP Gain ${h.percent(t)}`;case fe.AlchemistsHut:return`Shop Material's Max Stock # ${h.tDigit(t,0)}`;case fe.Cartographer:return`Gold Gain ${h.percent(t)}`;case fe.AdventuringParty:return`Multiply Expedition Speed by ${h.percent(t)}`;case fe.Blacksmith:return`Multiply Equipment's Effect by ${h.percent(t)}`;case fe.Temple:return`Rebirth Point Gain ${h.percent(t)}`;case fe.SlimeBank:return`Slime Coin Gain ${h.percent(t)}`;case fe.MysticArena:return`Damage to Challenge Boss ${h.percent(t)}`;case fe.ArcaneResearcher:return`Multiply Research Power by ${h.percent(t)}`;case fe.Tavern:return"-";case fe.Dojo:return"-";case fe.Trapper:return`Capturable Monster Max Lv : ${h.tDigit(t,0)}`;default:return"Not Implemented"}}const Pe={EquipmentEffectName:wp,EquipmentName:Sp,StatsBreakdown:Ap,SDUpgradeString:bp,SDShopNameString:kp,SDGemString:Dp,PotionName:Rp,ExpeditionGlobalInformationString:Cp,SDName:yp,ForgeEffectString:Pp,ForgeNameString:vp,Material:Bp,EquipmentEffect:Lp,PotionEffect:Tp,PotionTypeString:xp,SkillName:Np,SDPowerupString:qp,SDShopEffectValueString:Ep,TownMaterialNameString:Up,MonsterSpeciesName:Wp,MonsterPetPassiveEffectString:Op,Stat:$p,Quest:zp,Title:Jp,BuildingString:Xp,BuildingEffectString:jp},Yp=st({__name:"Tooltip",setup(e){const t=Ct(!1),s=Ct(),i=c=>{if(s.value.textContent=="")return;const l=s.value.getBoundingClientRect(),M=window.innerHeight-20-c.clientY;s.value.style.left=`${c.clientX+20}px`,l.height>M?s.value.style.top=`${c.clientY-(l.height-M)}px`:s.value.style.top=`${c.clientY}px`};return(c,l)=>(U(),z("div",null,[w("div",{class:"trigger",onMouseenter:l[0]||(l[0]=M=>t.value=!0),onMousemove:l[1]||(l[1]=M=>i(M)),onMouseleave:l[2]||(l[2]=M=>t.value=!1)},[zi(c.$slots,"default",{},void 0,!0)],32),ve(w("div",{class:"tooltip",ref_key:"content",ref:s},[zi(c.$slots,"content",{},void 0,!0)],512),[[Bn,t.value&&s.value.textContent!=""]])]))}}),xn=Ot(Yp,[["__scopeId","data-v-e718c7c9"]]);function zr(e,t){const s={};for(const[i,c]of Object.entries(e))s[i]=c;for(const[i,c]of Object.entries(t))s[i]!=null?s[i]-=c:s[i]=-c;return s}function Vi(e,t,s=!0){if((t===0||t==null)&&s)return"(NEW)";if((e===0||e==null)&&s)return"(MISSING)";if(!(e==0||t==0||t==null||e==null)){if(t>e)return t/e-1<1e-6?void 0:`(-${h.percent(t/e-1,3)})`;if(t<e)return e/t-1<1e-6?void 0:`(+${h.percent(e/t-1,2)})`}}function Pa(e,t){const s=zr(e,t),i={};for(const[c,l]of Object.entries(s))c=="Base"?i[c]="":i[c]=Vi(e[c],t[c],!0);return i}const Zs=e=>($s("data-v-7a7fd870"),e=e(),zs(),e),Qp={style:{width:"400px"}},Zp={class:"name"},Kp=Zs(()=>w("p",{class:"group"},"Additive:",-1)),e0=Zs(()=>w("br",null,null,-1)),t0=Zs(()=>w("p",{class:"group"},"Multiplicative:",-1)),s0=Zs(()=>w("br",null,null,-1)),i0={key:0,name:"superdungeon"},r0={class:"right"},a0=Zs(()=>w("br",null,null,-1)),n0=Zs(()=>w("p",{style:{color:"yellow","text-decoration":"underline","font-size":"14px","text-decoration-color":"#fff"}},"Super Dungeon:",-1)),l0={class:"right"},u0=Zs(()=>w("br",null,null,-1)),o0={key:1},c0=Zs(()=>w("p",{class:"group"},"After:",-1)),h0=Zs(()=>w("br",null,null,-1)),f0={style:{"font-size":"14px"}},d0=st({__name:"MultiplierInformation",props:{name:{},multiplier:{},valueSuffix:{},inline:{type:Boolean},precision:{}},setup(e){const t=tt("game"),s=Ct(!1),i=e;function c(M){const b={main:h.get(t.data,M),snap:h.get(t.snap,M)};return b.main.Calculate(),b.snap.Calculate(),{raw:b,main:b.main.Snapshot(),snap:b.snap.Snapshot(),diff:{value:b.main.value-b.snap.value,additive:b.main.additive-b.snap.additive,additiveKind:zr(b.main.additiveKind,b.snap.additiveKind),multiplicativeKind:zr(b.main.multiplicativeKind,b.snap.multiplicativeKind),multiplicative:b.main.multiplicative-b.snap.multiplicative,after:b.main.after-b.snap.after,afterKind:zr(b.main.afterKind,b.snap.afterKind)},compare:{value:Vi(b.main.value,b.snap.value,!1),after:Vi(b.main.after,b.snap.after,!1),additive:Vi(b.main.additive,b.snap.additive,!1),additiveKind:Pa(b.main.additiveKind,b.snap.additiveKind),multiplicativeKind:Pa(b.main.multiplicativeKind,b.snap.multiplicativeKind),multiplicative:Vi(b.main.multiplicative,b.snap.multiplicative),afterKind:Pa(b.main.afterKind,b.snap.afterKind)}}}const l=Ct(c(i.multiplier));return(M,b)=>(U(),zt(xn,null,Dn({default:ut(()=>[w("p",{onMouseoverOnce:b[0]||(b[0]=k=>s.value=!0),onClick:b[1]||(b[1]=k=>console.log(l.value)),class:Ft({underline:!i.inline})},[w("span",{class:Ft(["nameWrap",{yellow:l.value.main.isLog}])},V(M.name),3),w("span",{class:Ft([[A(si)(l.value.diff.value)],"right"])},V(l.value.compare.value)+" "+V(A(h).convertTo(l.value.main.Value(),i.precision,l.value.main.numberType))+" "+V(i.valueSuffix),3)],34)]),_:2},[s.value?{name:"content",fn:ut(()=>[w("div",Qp,[w("p",Zp,V(M.name),1),Kp,(U(!0),z(re,null,De(Object.entries(l.value.diff.additiveKind),([k,P])=>(U(),z("p",null,[l.value.main.additiveKind[k]>0||k=="Base"||l.value.snap.additiveKind[k]>0?(U(),z(re,{key:0},[le(" -"+V(A(Pe).StatsBreakdown(A(n)[k]))+" ",1),w("span",{class:Ft(["right",A(si)(P)])},V(l.value.compare.additiveKind[k])+" "+V(k!="Base"?"+":"")+" "+V(A(h).convertTo(l.value.main.additiveKind[k],i.precision,l.value.main.numberType)),3)],64)):ht("",!0)]))),256)),w("p",null,[le(" Additive Total:"),w("span",{class:Ft(["right",A(si)(l.value.diff.additive)])},V(l.value.compare.additive)+" "+V(A(h).convertTo(l.value.main.additive,i.precision,l.value.main.numberType)),3)]),e0,t0,(U(!0),z(re,null,De(Object.entries(l.value.diff.multiplicativeKind),([k,P])=>(U(),z("p",null,[l.value.main.multiplicativeKind[k]>1||k=="Base"?(U(),z(re,{key:0},[le(" -"+V(A(Pe).StatsBreakdown(A(n)[k]))+" ",1),w("span",{class:Ft(["right",A(si)(P)])},V(l.value.compare.multiplicativeKind[k])+" "+V(k!="Base"?"*":"")+" "+V(A(h).convertTo(l.value.main.multiplicativeKind[k],i.precision,A(nt).Percent)),3)],64)):ht("",!0)]))),256)),w("p",null,[le(" Multiplicative Total: "),w("span",{class:Ft(["right",A(si)(l.value.diff.multiplicative)])},V(l.value.compare.multiplicative)+" "+V(A(h).convertTo(l.value.main.multiplicative,i.precision,A(nt).Percent)),3)]),s0,l.value.main.isLog?(U(),z("div",i0,[w("p",null,[le(" Temporary Total: "),w("span",r0,V(A(h).convertTo(l.value.main.temp,i.precision,l.value.main.numberType)),1)]),a0,n0,w("p",null,[le(" Base + Log10([Temporary Total])"),w("span",l0,V(A(h).convertTo(l.value.main.log,i.precision,l.value.main.numberType)),1)]),u0])):ht("",!0),l.value.main.after!=0?(U(),z("div",o0,[c0,(U(!0),z(re,null,De(Object.entries(l.value.diff.afterKind),([k,P])=>(U(),z("div",null,[l.value.main.afterKind[k]>1?(U(),z(re,{key:0},[le(" -"+V(A(Pe).StatsBreakdown(A(n)[k]))+" ",1),w("span",{class:Ft(["right",A(si)(P)])},V(l.value.compare.afterKind[k])+" + "+V(A(h).convertTo(l.value.main.afterKind[k]|0,i.precision,l.value.main.numberType)),3)],64)):ht("",!0)]))),256)),w("p",null,[le(" After Total: "),w("span",{class:Ft(["right",A(si)(l.value.diff.after)])},V(l.value.compare.after)+" "+V(A(h).convertTo(l.value.main.after,i.precision,l.value.main.numberType)),3)]),h0])):ht("",!0),w("p",f0,[le(" Total:"),w("span",{name:"value-total",class:Ft(["right",A(si)(l.value.diff.value)])},V(l.value.compare.value)+" "+V(A(h).convertTo(l.value.main.Value(),i.precision,l.value.main.numberType))+" "+V(i.valueSuffix),3)])])]),key:"0"}:void 0]),1024))}}),he=Ot(d0,[["__scopeId","data-v-7a7fd870"]]),Is=e=>($s("data-v-e9a40b82"),e=e(),zs(),e),p0={style:{display:"flex"}},g0=Is(()=>w("br",null,null,-1)),m0=["value"],M0=Is(()=>w("br",null,null,-1)),w0=Is(()=>w("br",null,null,-1)),S0={style:{"margin-left":"10px","border-left":"1px solid #fff","padding-left":"10px"}},A0=Is(()=>w("br",null,null,-1)),b0=Is(()=>w("br",null,null,-1)),k0=Is(()=>w("br",null,null,-1)),E0=Is(()=>w("hr",null,null,-1)),D0=Is(()=>w("br",null,null,-1)),R0={key:0,class:"expedition"},C0={class:"green"},y0={class:"orange"},P0={style:{"text-align":"right"}},v0=["onUpdate:modelValue"],B0={value:"0"},L0={value:"1"},T0={value:"2"},x0={value:"3"},G0={value:"4"},F0={value:"5"},I0={value:"6"},H0=Is(()=>w("br",null,null,-1)),_0=Is(()=>w("br",null,null,-1)),V0={class:"green"},N0=["onClick"],q0={style:{width:"50px",display:"inline-block","text-align":"center"}},U0=["onClick"],W0=Is(()=>w("br",null,null,-1)),O0=st({__name:"Expedition",setup(e){const t=tt("game"),s=xi(),i=t.data.expedition.expeditions.reduce((k,P)=>k+P.GetExpeditionExp(),0);function c(k){let P=0;for(let y=1;y<10;++y)if(k>=y*86400)P+=86400/y;else{P+=(k-86400*(y-1))/y;break}return P}const l=c(t.data.nitro.nitroCap.Value()),M=l*i,b=Vt(()=>i*s.expedition.playtime*3600*t.data.source.nitroSpeed);return(k,P)=>(U(),z(re,null,[w("div",p0,[w("div",null,[X(he,{name:"Max Nitro",multiplier:"nitro.nitroCap",inline:!0},null,8,["multiplier"]),X(he,{name:"Expedition Slots",multiplier:"expedition.unlockedExpeditionSlotNum",inline:!0},null,8,["multiplier"]),X(he,{name:"Efficiency penalty",multiplier:"expedition.rewardModifierPerHour",inline:!0},null,8,["multiplier"]),le(" Expedition Minimum time: "+V(A(h).secondsToDhms(A(t).data.expedition.lowerLimitTime.Value())),1),g0,le(" Nitro Speed: "),w("input",{size:"5",value:A(h).tDigit(A(t).data.source.nitroSpeed,1),onChange:P[0]||(P[0]=y=>A(t).data.source.nitroSpeed=parseFloat(y.target.value))},null,40,m0),M0,le(" Playtime in day (hours): "),ve(w("input",{type:"text",size:"4","onUpdate:modelValue":P[1]||(P[1]=y=>A(s).expedition.playtime=y)},null,512),[[lt,A(s).expedition.playtime,void 0,{lazy:!0,number:!0}]]),w0]),w("div",S0,[le(" EXP per second: "+V(A(h).tDigit(A(i))),1),A0,le(" EXP per playtime: "+V(A(h).tDigit(b.value)),1),b0,le(" EXP per Nitro Sink: "+V(A(h).tDigit(M))+" ( "+V(A(h).secondsToDhms(A(l),!1))+")",1),k0,E0,le(" Total EXP per day: "+V(A(h).tDigit(b.value+M*5)),1),D0])]),(U(!0),z(re,null,De(A(t).data.expedition.expeditions,(y,T)=>(U(),z(re,null,[T<A(t).data.expedition.unlockedExpeditionSlotNum.Value()?(U(),z("div",R0,[w("div",null,[le(" Team "+V(T+1)+" < ",1),w("span",C0,"Lv "+V(y.TotalLevel()),1),le(" > "),w("span",y0,"Rank "+V(y.TotalRank()),1)]),w("div",P0,[ve(w("select",{"onUpdate:modelValue":O=>y.kind=O},[w("option",B0,"Manufacturing Bricks Lv "+V(A(t).data.expedition.globalInfoList[0].level),1),w("option",L0,"Logging Trees Lv "+V(A(t).data.expedition.globalInfoList[1].level),1),w("option",T0,"Gathering Shards Lv "+V(A(t).data.expedition.globalInfoList[2].level),1),w("option",x0,"Capturing Monsters Lv "+V(A(t).data.expedition.globalInfoList[3].level),1),w("option",G0,"Training Equipment Lv "+V(A(t).data.expedition.globalInfoList[4].level),1),w("option",F0,"Field Training Lv "+V(A(t).data.expedition.globalInfoList[5].level),1),w("option",I0,"Marathon Race Lv "+V(A(t).data.expedition.globalInfoList[6].level),1)],8,v0),[[ji,y.kind,void 0,{number:!0}]])]),w("div",null,[le(V(y.globalInfo.RewardString(y,y.pets[0].pet,y.timeHour))+" ",1),H0,le(" "+V(y.globalInfo.RewardString(y,y.pets[1].pet,y.timeHour))+" ",1),_0,le(" "+V(y.globalInfo.RewardString(y,y.pets[2].pet,y.timeHour)),1)]),w("div",null,[w("span",V0,"Speed "+V(A(h).tDigit(y.TimeSpeed())),1),le("     "),w("button",{class:"button-left",onClick:O=>y.timeId--}," ",8,N0),w("span",q0,V(y.timeHour>=8760?y.timeHour/8760:y.timeHour)+" "+V(y.timeHour>=8760?"y":"h"),1),w("button",{class:"button-right",onClick:O=>y.timeId++}," ",8,U0),le(" Time to finish: "+V(A(h).secondsToDhms(y.RequiredTimesec())),1),W0,le(" Most effective: "+V(y.MostEffective()),1)])])):ht("",!0)],64))),256))],64))}}),$0=Ot(O0,[["__scopeId","data-v-e9a40b82"]]),z0=["selected","value"],J0=w("td",null,"Failure Rate %",-1),X0=w("td",null,"Tickets",-1),j0=w("td",null,"Reset Value",-1),Y0=w("td",null,"Portal Orb Cost",-1),Q0=w("td",null,"Runs",-1),Z0=w("td",null,"Ruby Shard per Dungeon",-1),K0=w("td",null,"Total Ruby Shards",-1),eg=w("td",null,"Ruby Converter",-1),tg=w("td",null,"Total Ruby",-1),sg=w("hr",null,null,-1),ig=st({__name:"RubyShard",setup(e){const t=tt("game"),s=xi().rubyShard;function i(){let k=0;for(;t.data.source.SDAutoLeaveAndRetryTargetEntryCost>Math.pow(2,k);)k++;return k}function c(){let k=i(),P=0;for(let y=0;y<k;y++)P+=Math.pow(2,y)*5;return P}function l(){let k=0;for(let P=1;P<Math.floor(s.floor/10)+1;P++){let T=(P*10/10+s.modifier)*(1+s.dungeon);k+=T}return k}function M(){const k=i()*5*s.ticket*l();return k-k*s.failure/100}const b=t.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.Value();return(k,P)=>(U(),z(re,null,[le(" Dungeon: "),ve(w("select",{"onUpdate:modelValue":P[0]||(P[0]=y=>A(s).dungeon=y)},[(U(),z(re,null,De(5,(y,T)=>w("option",{selected:A(s).dungeon==T,value:T},V(A(Pe).SDName(T)),9,z0)),64))],512),[[ji,A(s).dungeon,void 0,{number:!0}]]),le(" Modifier: "),ve(w("input",{type:"text",size:"8","onUpdate:modelValue":P[1]||(P[1]=y=>A(s).modifier=y)},null,512),[[lt,A(s).modifier,void 0,{number:!0}]]),le(" Floors Cleared: "),ve(w("input",{type:"text",size:"8","onUpdate:modelValue":P[2]||(P[2]=y=>A(s).floor=y)},null,512),[[lt,A(s).floor,void 0,{number:!0}]]),w("table",null,[w("tr",null,[J0,w("td",null,[ve(w("input",{type:"text",size:"8","onUpdate:modelValue":P[3]||(P[3]=y=>A(s).failure=y)},null,512),[[lt,A(s).failure,void 0,{number:!0}]]),le(" (Total Ruby Shards = Total Ruby Shards - Total Ruby Shards * failure rate)")])]),w("tr",null,[X0,w("td",null,[ve(w("input",{type:"text",size:"8","onUpdate:modelValue":P[4]||(P[4]=y=>A(s).ticket=y)},null,512),[[lt,A(s).ticket,void 0,{number:!0}]])])]),w("tr",null,[j0,w("td",null,[ve(w("input",{type:"text",size:"8","onUpdate:modelValue":P[5]||(P[5]=y=>A(t).data.source.SDAutoLeaveAndRetryTargetEntryCost=y)},null,512),[[lt,A(t).data.source.SDAutoLeaveAndRetryTargetEntryCost,void 0,{number:!0}]])])]),w("tr",null,[Y0,w("td",null,V(A(h).convertTo(c()*A(s).ticket)),1)]),w("tr",null,[Q0,w("td",null,V(i()*5*A(s).ticket),1)]),w("tr",null,[Z0,w("td",null,V(l()),1)]),w("tr",null,[K0,w("td",null,V(A(h).convertTo(M(),3)),1)]),w("tr",null,[eg,w("td",null,V(A(h).convertTo(A(b))),1)]),w("tr",null,[tg,w("td",null,V(Math.floor(M()/A(b))),1)])]),sg],64))}});var ao=(e=>(e[e.SlimeVillage=0]="SlimeVillage",e[e.MagicSlimeCity=1]="MagicSlimeCity",e[e.SpiderMaze=2]="SpiderMaze",e[e.BatCave=3]="BatCave",e[e.FairyGarden=4]="FairyGarden",e[e.FoxShrine=5]="FoxShrine",e[e.DevilFishLake=6]="DevilFishLake",e[e.TreantDarkForest=7]="TreantDarkForest",e[e.FlameTigerVolcano=8]="FlameTigerVolcano",e[e.UnicornIsland=9]="UnicornIsland",e))(ao||{}),se=(e=>(e[e.Stone=0]="Stone",e[e.Crystal=1]="Crystal",e[e.Leaf=2]="Leaf",e))(se||{}),gt=(e=>(e[e.GoldGain=0]="GoldGain",e[e.StoneGain=1]="StoneGain",e[e.CrystalGain=2]="CrystalGain",e[e.LeafGain=3]="LeafGain",e))(gt||{}),m=(e=>(e[e.HP=0]="HP",e[e.MP=1]="MP",e[e.ATK=2]="ATK",e[e.MATK=3]="MATK",e[e.DEF=4]="DEF",e[e.MDEF=5]="MDEF",e[e.SPD=6]="SPD",e))(m||{}),qt=(e=>(e[e.Florzporb=0]="Florzporb",e[e.Arachnetta=1]="Arachnetta",e[e.GuardianKor=2]="GuardianKor",e[e.Nostro=3]="Nostro",e[e.LadyEmelda=4]="LadyEmelda",e[e.NariSune=5]="NariSune",e[e.Octobaddie=6]="Octobaddie",e[e.Bananoon=7]="Bananoon",e[e.Glorbliorbus=8]="Glorbliorbus",e[e.DistortionSlime=9]="DistortionSlime",e))(qt||{}),_t=(e=>(e[e.Normal=0]="Normal",e[e.Blue=1]="Blue",e[e.Yellow=2]="Yellow",e[e.Red=3]="Red",e[e.Green=4]="Green",e[e.Purple=5]="Purple",e[e.Boss=6]="Boss",e[e.Metal=7]="Metal",e))(_t||{}),no=(e=>(e[e.None=0]="None",e[e.GetResource=1]="GetResource",e[e.GetMaterial=2]="GetMaterial",e[e.GetEquipment=3]="GetEquipment",e[e.DisassembleEquipment=4]="DisassembleEquipment",e[e.DisassemblePotion=5]="DisassemblePotion",e[e.UpgradeQueue=6]="UpgradeQueue",e[e.ExpandMysteriousWaterCap=7]="ExpandMysteriousWaterCap",e[e.AlchemyQueue=8]="AlchemyQueue",e[e.EquipPotion=9]="EquipPotion",e[e.Capture=10]="Capture",e[e.RebirthTier1=11]="RebirthTier1",e[e.RebirthTier2=12]="RebirthTier2",e[e.RebirthTier3=13]="RebirthTier3",e[e.RebirthTier4=14]="RebirthTier4",e[e.RebirthTier5=15]="RebirthTier5",e[e.RebirthTier6=16]="RebirthTier6",e[e.BuyShopMaterialSlime=17]="BuyShopMaterialSlime",e[e.BuyShopMaterialMagicSlime=18]="BuyShopMaterialMagicSlime",e[e.BuyShopMaterialSpider=19]="BuyShopMaterialSpider",e[e.BuyShopMaterialBat=20]="BuyShopMaterialBat",e[e.BuyShopMaterialFairy=21]="BuyShopMaterialFairy",e[e.BuyShopMaterialFox=22]="BuyShopMaterialFox",e[e.BuyShopMaterialDevilfish=23]="BuyShopMaterialDevilfish",e[e.BuyShopMaterialTreant=24]="BuyShopMaterialTreant",e[e.BuyShopMaterialFlametiger=25]="BuyShopMaterialFlametiger",e[e.BuyShopMaterialUnicorn=26]="BuyShopMaterialUnicorn",e[e.BuyShopTrapNormal=27]="BuyShopTrapNormal",e[e.BuyShopTrapIce=28]="BuyShopTrapIce",e[e.BuyShopTrapThunder=29]="BuyShopTrapThunder",e[e.BuyShopTrapFire=30]="BuyShopTrapFire",e[e.BuyShopTrapLight=31]="BuyShopTrapLight",e[e.BuyShopTrapDark=32]="BuyShopTrapDark",e[e.RetryDungeon=33]="RetryDungeon",e[e.OpenChest=34]="OpenChest",e[e.SkillRankUp=35]="SkillRankUp",e[e.SmartSlimeCoins=36]="SmartSlimeCoins",e[e.TownLevelUp=37]="TownLevelUp",e[e.RebirthUpgradeEXP=38]="RebirthUpgradeEXP",e[e.EquipNonMaxedEQ=39]="EquipNonMaxedEQ",e[e.AutoCraftDisassembleEQ=40]="AutoCraftDisassembleEQ",e[e.DisassembleTalismanCommon=41]="DisassembleTalismanCommon",e[e.BuyBlessing=42]="BuyBlessing",e[e.AutoExpedition=43]="AutoExpedition",e[e.AutoEquipTrap=44]="AutoEquipTrap",e[e.AutoUseProfScroll=45]="AutoUseProfScroll",e[e.AutoSwitchTownResearch=46]="AutoSwitchTownResearch",e[e.ClearLowerDifAreaMission=47]="ClearLowerDifAreaMission",e[e.AutoAlchemiseForNito=48]="AutoAlchemiseForNito",e[e.AutoBuyGuildAbility=49]="AutoBuyGuildAbility",e))(no||{}),C=(e=>(e[e.Vitality=0]="Vitality",e[e.Strength=1]="Strength",e[e.Intelligence=2]="Intelligence",e[e.Agility=3]="Agility",e[e.Luck=4]="Luck",e))(C||{}),B=(e=>(e[e.Physical=0]="Physical",e[e.Fire=1]="Fire",e[e.Ice=2]="Ice",e[e.Thunder=3]="Thunder",e[e.Light=4]="Light",e[e.Dark=5]="Dark",e))(B||{}),It=(e=>(e[e.StoneGain=0]="StoneGain",e[e.CrystalGain=1]="CrystalGain",e[e.LeafGain=2]="LeafGain",e[e.GuildExpGain=3]="GuildExpGain",e[e.EquipmentInventory=4]="EquipmentInventory",e[e.EnchantInventory=5]="EnchantInventory",e[e.PotionInventory=6]="PotionInventory",e[e.MysteriousWater=7]="MysteriousWater",e[e.SkillProficiency=8]="SkillProficiency",e[e.GlobalSkillSlot=9]="GlobalSkillSlot",e[e.GoldCap=10]="GoldCap",e[e.GoldGain=11]="GoldGain",e[e.Trapping=12]="Trapping",e[e.UpgradeCost=13]="UpgradeCost",e[e.PhysicalAbsorption=14]="PhysicalAbsorption",e[e.MagicalAbsoption=15]="MagicalAbsoption",e[e.ExpGain=16]="ExpGain",e[e.EquipmentProficiency=17]="EquipmentProficiency",e[e.MaterialDrop=18]="MaterialDrop",e[e.NitroCap=19]="NitroCap",e))(It||{}),pe=(e=>(e[e.Nothing=0]="Nothing",e[e.Slime=1]="Slime",e[e.Magicslime=2]="Magicslime",e[e.Spider=3]="Spider",e[e.Bat=4]="Bat",e[e.Fairy=5]="Fairy",e[e.Fox=6]="Fox",e[e.Devilfish=7]="Devilfish",e[e.Treant=8]="Treant",e[e.Flametiger=9]="Flametiger",e[e.Unicorn=10]="Unicorn",e))(pe||{}),F=(e=>(e[e.Weapon=0]="Weapon",e[e.Armor=1]="Armor",e[e.Jewelry=2]="Jewelry",e))(F||{}),W=(e=>(e[e.ExpGain=0]="ExpGain",e[e.EQRequirement=1]="EQRequirement",e[e.QuestAcceptableNum=2]="QuestAcceptableNum",e[e.BasicAtk=3]="BasicAtk",e[e.BasicMAtk=4]="BasicMAtk",e[e.BasicHp=5]="BasicHp",e[e.BasicDef=6]="BasicDef",e[e.BasicMDef=7]="BasicMDef",e[e.BasicMp=8]="BasicMp",e[e.StoneGain=9]="StoneGain",e[e.CrystalGain=10]="CrystalGain",e[e.LeafGain=11]="LeafGain",e[e.StoneGoldCap=12]="StoneGoldCap",e[e.CrystalGoldCap=13]="CrystalGoldCap",e[e.LeafGoldCap=14]="LeafGoldCap",e[e.SkillProfGain=15]="SkillProfGain",e[e.SkillRankCostReduction=16]="SkillRankCostReduction",e[e.ClassSkillSlot=17]="ClassSkillSlot",e[e.ShareSkillPassive=18]="ShareSkillPassive",e[e.T1ExpGainBoost=19]="T1ExpGainBoost",e[e.T1RebirthPointGainBoost=20]="T1RebirthPointGainBoost",e[e.T1BasicAtkBoost=21]="T1BasicAtkBoost",e[e.T1BasicMAtkBoost=22]="T1BasicMAtkBoost",e[e.T1BasicHpBoost=23]="T1BasicHpBoost",e[e.T1BasicDefBoost=24]="T1BasicDefBoost",e[e.T1BasicMDefBoost=25]="T1BasicMDefBoost",e[e.T1BasicMpBoost=26]="T1BasicMpBoost",e[e.T1StoneGainBoost=27]="T1StoneGainBoost",e[e.T1CrystalGainBoost=28]="T1CrystalGainBoost",e[e.T1LeafGainBoost=29]="T1LeafGainBoost",e[e.T1StoneGoldCapBoost=30]="T1StoneGoldCapBoost",e[e.T1CrystalGoldCapBoost=31]="T1CrystalGoldCapBoost",e[e.T1LeafGoldCapBoost=32]="T1LeafGoldCapBoost",e[e.EQProfGain=33]="EQProfGain",e[e.EQLevelCap=34]="EQLevelCap",e[e.EQWeaponSlot=35]="EQWeaponSlot",e[e.EQArmorSlot=36]="EQArmorSlot",e[e.EQJewelrySlot=37]="EQJewelrySlot",e[e.T2ExpGainBoost=38]="T2ExpGainBoost",e[e.T2SkillProfGainBoost=39]="T2SkillProfGainBoost",e[e.T2RebirthPointGainBoost=40]="T2RebirthPointGainBoost",e[e.T2BasicAtkBoost=41]="T2BasicAtkBoost",e[e.T2BasicMAtkBoost=42]="T2BasicMAtkBoost",e[e.T2BasicHpBoost=43]="T2BasicHpBoost",e[e.T2BasicDefBoost=44]="T2BasicDefBoost",e[e.T2BasicMDefBoost=45]="T2BasicMDefBoost",e[e.T2BasicMpBoost=46]="T2BasicMpBoost",e[e.T2StoneGainBoost=47]="T2StoneGainBoost",e[e.T2CrystalGainBoost=48]="T2CrystalGainBoost",e[e.T2LeafGainBoost=49]="T2LeafGainBoost",e[e.T2StoneGoldCapBoost=50]="T2StoneGoldCapBoost",e[e.T2CrystalGoldCapBoost=51]="T2CrystalGoldCapBoost",e[e.T2LeafGoldCapBoost=52]="T2LeafGoldCapBoost",e))(W||{}),dt=(e=>(e[e.EquipmentProficiencyGainWarrior=0]="EquipmentProficiencyGainWarrior",e[e.EquipmentProficiencyGainWizard=1]="EquipmentProficiencyGainWizard",e[e.EquipmentProficiencyGainAngel=2]="EquipmentProficiencyGainAngel",e[e.EquipmentProficiencyGainThief=3]="EquipmentProficiencyGainThief",e[e.EquipmentProficiencyGainArcher=4]="EquipmentProficiencyGainArcher",e[e.EquipmentProficiencyGainTamer=5]="EquipmentProficiencyGainTamer",e[e.EquipmentDropChance=6]="EquipmentDropChance",e[e.EnchantedEffectChance1=7]="EnchantedEffectChance1",e[e.EnchantedEffectChance2=8]="EnchantedEffectChance2",e[e.EnchantedEffectChance3=9]="EnchantedEffectChance3",e))(dt||{}),Ze=(e=>(e[e.Nothing=0]="Nothing",e[e.AtkDown=1]="AtkDown",e[e.MatkDown=2]="MatkDown",e[e.DefDown=3]="DefDown",e[e.MdefDown=4]="MdefDown",e[e.SpdDown=5]="SpdDown",e[e.Stop=6]="Stop",e[e.Electric=7]="Electric",e[e.Poison=8]="Poison",e[e.Death=9]="Death",e[e.Knockback=10]="Knockback",e[e.FireResDown=11]="FireResDown",e[e.IceResDown=12]="IceResDown",e[e.ThunderResDown=13]="ThunderResDown",e[e.LightResDown=14]="LightResDown",e[e.DarkResDown=15]="DarkResDown",e[e.Gravity=16]="Gravity",e[e.MaxMPDown=17]="MaxMPDown",e[e.MPAspiration=18]="MPAspiration",e))(Ze||{}),J=(e=>(e[e.RaidFlorzporb100=0]="RaidFlorzporb100",e[e.SoloFlorzporb100=1]="SoloFlorzporb100",e[e.RaidArachnetta150=2]="RaidArachnetta150",e[e.SoloArachnetta150=3]="SoloArachnetta150",e[e.RaidGuardianKor200=4]="RaidGuardianKor200",e[e.SoloGuardianKor200=5]="SoloGuardianKor200",e[e.HCArena1=6]="HCArena1",e[e.HCFlorzporb100=7]="HCFlorzporb100",e[e.HCArachnetta150=8]="HCArachnetta150",e[e.HCGuardianKor200=9]="HCGuardianKor200",e[e.HCArena2=10]="HCArena2",e[e.RaidNostro250=11]="RaidNostro250",e[e.SoloNostro250=12]="SoloNostro250",e[e.HCNostro250=13]="HCNostro250",e[e.RaidLadyEmelda300=14]="RaidLadyEmelda300",e[e.SoloLadyEmelda300=15]="SoloLadyEmelda300",e[e.HCLadyEmelda300=16]="HCLadyEmelda300",e[e.RaidNariSune350=17]="RaidNariSune350",e[e.SoloNariSune350=18]="SoloNariSune350",e[e.HCNariSune350=19]="HCNariSune350",e[e.RaidOctobaddie400=20]="RaidOctobaddie400",e[e.SoloOctobaddie400=21]="SoloOctobaddie400",e[e.HCOctobaddie400=22]="HCOctobaddie400",e[e.RaidBananoon450=23]="RaidBananoon450",e[e.SoloBananoon450=24]="SoloBananoon450",e[e.HCBananoon450=25]="HCBananoon450",e[e.RaidGlorbliorbus500=26]="RaidGlorbliorbus500",e[e.SoloGlorbliorbus500=27]="SoloGlorbliorbus500",e[e.HCGlorbliorbus500=28]="HCGlorbliorbus500",e[e.RaidDistortionSlime550=29]="RaidDistortionSlime550",e[e.SoloDistortionSlime550=30]="SoloDistortionSlime550",e[e.HCDistortionSlime550=31]="HCDistortionSlime550",e[e.RaidFlorzporb200=32]="RaidFlorzporb200",e[e.SoloFlorzporb200=33]="SoloFlorzporb200",e[e.HCFlorzporb200=34]="HCFlorzporb200",e[e.RaidFlorzporb300=35]="RaidFlorzporb300",e[e.SoloFlorzporb300=36]="SoloFlorzporb300",e[e.HCFlorzporb300=37]="HCFlorzporb300",e[e.RaidArachnetta250=38]="RaidArachnetta250",e[e.SoloArachnetta250=39]="SoloArachnetta250",e[e.HCArachnetta250=40]="HCArachnetta250",e[e.RaidArachnetta350=41]="RaidArachnetta350",e[e.SoloArachnetta350=42]="SoloArachnetta350",e[e.HCArachnetta350=43]="HCArachnetta350",e[e.RaidGuardianKor300=44]="RaidGuardianKor300",e[e.SoloGuardianKor300=45]="SoloGuardianKor300",e[e.HCGuardianKor300=46]="HCGuardianKor300",e[e.RaidGuardianKor400=47]="RaidGuardianKor400",e[e.SoloGuardianKor400=48]="SoloGuardianKor400",e[e.HCGuardianKor400=49]="HCGuardianKor400",e[e.RaidNostro350=50]="RaidNostro350",e[e.SoloNostro350=51]="SoloNostro350",e[e.HCNostro350=52]="HCNostro350",e[e.RaidNostro450=53]="RaidNostro450",e[e.SoloNostro450=54]="SoloNostro450",e[e.HCNostro450=55]="HCNostro450",e[e.HCArena3=56]="HCArena3",e[e.HCArena4=57]="HCArena4",e[e.HCArena5=58]="HCArena5",e[e.HCArena6=59]="HCArena6",e[e.HCArena7=60]="HCArena7",e[e.HCArena8=61]="HCArena8",e[e.HCArena9=62]="HCArena9",e[e.HCArena10=63]="HCArena10",e[e.RaidFlorzporb400=64]="RaidFlorzporb400",e[e.SoloFlorzporb400=65]="SoloFlorzporb400",e[e.HCFlorzporb400=66]="HCFlorzporb400",e[e.RaidArachnetta450=67]="RaidArachnetta450",e[e.SoloArachnetta450=68]="SoloArachnetta450",e[e.HCArachnetta450=69]="HCArachnetta450",e[e.RaidGuardianKor500=70]="RaidGuardianKor500",e[e.SoloGuardianKor500=71]="SoloGuardianKor500",e[e.HCGuardianKor500=72]="HCGuardianKor500",e[e.RaidNostro550=73]="RaidNostro550",e[e.SoloNostro550=74]="SoloNostro550",e[e.HCNostro550=75]="HCNostro550",e[e.RaidLadyEmelda400=76]="RaidLadyEmelda400",e[e.SoloLadyEmelda400=77]="SoloLadyEmelda400",e[e.HCLadyEmelda400=78]="HCLadyEmelda400",e[e.RaidLadyEmelda500=79]="RaidLadyEmelda500",e[e.SoloLadyEmelda500=80]="SoloLadyEmelda500",e[e.HCLadyEmelda500=81]="HCLadyEmelda500",e[e.RaidLadyEmelda600=82]="RaidLadyEmelda600",e[e.SoloLadyEmelda600=83]="SoloLadyEmelda600",e[e.HCLadyEmelda600=84]="HCLadyEmelda600",e[e.RaidNariSune450=85]="RaidNariSune450",e[e.SoloNariSune450=86]="SoloNariSune450",e[e.HCNariSune450=87]="HCNariSune450",e[e.RaidNariSune550=88]="RaidNariSune550",e[e.SoloNariSune550=89]="SoloNariSune550",e[e.HCNariSune550=90]="HCNariSune550",e[e.RaidNariSune650=91]="RaidNariSune650",e[e.SoloNariSune650=92]="SoloNariSune650",e[e.HCNariSune650=93]="HCNariSune650",e[e.SDSlime=94]="SDSlime",e[e.RaidOctobaddie500=95]="RaidOctobaddie500",e[e.SoloOctobaddie500=96]="SoloOctobaddie500",e[e.HCOctobaddie500=97]="HCOctobaddie500",e[e.RaidOctobaddie600=98]="RaidOctobaddie600",e[e.SoloOctobaddie600=99]="SoloOctobaddie600",e[e.HCOctobaddie600=100]="HCOctobaddie600",e[e.RaidOctobaddie700=101]="RaidOctobaddie700",e[e.SoloOctobaddie700=102]="SoloOctobaddie700",e[e.HCOctobaddie700=103]="HCOctobaddie700",e[e.SDSpider=104]="SDSpider",e[e.SDBatTreant=105]="SDBatTreant",e[e.SDFairyFlametiger=106]="SDFairyFlametiger",e[e.SDSlimeMslime=107]="SDSlimeMslime",e))(J||{});const N={HeroKind:Object.entries(v).length/2,AreaKind:Object.entries(ao).length/2,ResourceKind:Object.entries(se).length/2,GlobalStats:Object.entries(gt).length/2,Stats:Object.entries(D).length/2,BasicStatsKind:Object.entries(m).length/2,ChallengeMonsterKind:Object.entries(qt).length/2,MonsterSpecies:Object.entries(Z).length/2,MonsterColor:Object.entries(_t).length/2,Element:Object.entries(B).length/2,PetActiveEffectKind:Object.entries(no).length/2,GuildAbilityKind:Object.entries(It).length/2,AbilityKind:Object.entries(C).length/2,EquipmentSetKind:Object.entries(pe).length/2,EquipmentKind:Object.entries(g).length/2,EquipmentPart:Object.entries(F).length/2,SuperDungeonPowerupKind:Object.entries(me).length/2,PotionKind:Object.entries(x).length/2,MultiplierKind:Object.entries(n).length/2,TitleKind:Object.entries(G).length/2,SkillKindWarrior:Object.entries(bs).length/2,EquipmentEffectKind:Object.entries(a).length/2,RebirthUpgradeKind:Object.entries(W).length/2,EquipmentForgeEffectKind:Object.entries(Le).length/2,DictionaryUpgradeKind:Object.entries(dt).length/2,Debuff:Object.entries(Ze).length/2,ChallengeKind:Object.entries(J).length/2,QuestKindTitle:Object.entries(E).length/2};var q=(e=>(e[e.Common=0]="Common",e[e.Uncommon=1]="Uncommon",e[e.Rare=2]="Rare",e[e.SuperRare=3]="SuperRare",e[e.Epic=4]="Epic",e))(q||{});const jt={maxOptionEffectNum:7,maxForgeEffectNum:7,maxLevelForEachHero:10,areaUniqueDropChanceBase:1e-5,Rarity(e){switch(e){case g.Nothing:return q.Common;case g.DullSword:return q.Common;case g.BrittleStaff:return q.Common;case g.FlimsyWing:return q.Common;case g.WornDart:return q.Common;case g.SmallBow:return q.Common;case g.WoodenRecorder:return q.Common;case g.OldCloak:return q.Common;case g.BlueHat:return q.Common;case g.OrangeHat:return q.Common;case g.TShirt:return q.Common;case g.ClothGlove:return q.Common;case g.BlueTShirt:return q.Common;case g.OrangeTShirt:return q.Common;case g.ClothBelt:return q.Common;case g.ClothShoes:return q.Common;case g.IronRing:return q.Common;case g.PearlEarring:return q.Common;case g.FireBrooch:return q.Common;case g.IceBrooch:return q.Common;case g.ThunderBrooch:return q.Common;case g.LightBrooch:return q.Common;case g.DarkBrooch:return q.Common;case g.WoodenShield:return q.Common;case g.LongSword:return q.Uncommon;case g.LongStaff:return q.Uncommon;case g.WarmWing:return q.Uncommon;case g.DualDagger:return q.Uncommon;case g.ReinforcedBow:return q.Uncommon;case g.Flute:return q.Uncommon;case g.FireStaff:return q.Uncommon;case g.IceStaff:return q.Uncommon;case g.ThunderStaff:return q.Uncommon;case g.LeatherBelt:return q.Uncommon;case g.LeatherShoes:return q.Uncommon;case g.WarmCloak:return q.Uncommon;case g.LeatherArmor:return q.Uncommon;case g.LeatherGlove:return q.Uncommon;case g.LeatherShield:return q.Uncommon;case g.FireRing:return q.Common;case g.IceRing:return q.Common;case g.ThunderRing:return q.Common;case g.LightRing:return q.Common;case g.DarkRing:return q.Common;case g.EnhancedFireBrooch:return q.Uncommon;case g.EnhancedIceBrooch:return q.Uncommon;case g.EnhancedThunderBrooch:return q.Uncommon;case g.EnhancedLightBrooch:return q.Uncommon;case g.EnhancedDarkBrooch:return q.Uncommon;case g.BattleSword:return q.Uncommon;case g.BattleStaff:return q.Uncommon;case g.BattleWing:return q.Uncommon;case g.BattleDagger:return q.Uncommon;case g.BattleBow:return q.Uncommon;case g.BattleRecorder:return q.Uncommon;case g.SlimeSword:return q.Rare;case g.SlimeGlove:return q.Rare;case g.SlimeRing:return q.Rare;case g.SlimeBelt:return q.Rare;case g.SlimePincenez:return q.Rare;case g.SlimeWing:return q.Rare;case g.SlimePoncho:return q.Rare;case g.SlimeDart:return q.Rare;case g.MagicSlimeStick:return q.Rare;case g.MagicSlimeHat:return q.Rare;case g.MagicSlimeBow:return q.Rare;case g.MagicSlimeShoes:return q.Rare;case g.MagicSlimeRecorder:return q.Rare;case g.MagicSlimeEarring:return q.Rare;case g.MagicSlimeBalloon:return q.Rare;case g.MagicSlimeSkirt:return q.Rare;case g.SpiderHat:return q.Rare;case g.SpiderSkirt:return q.Rare;case g.SpiderSuit:return q.Rare;case g.SpiderDagger:return q.Rare;case g.SpiderWing:return q.Rare;case g.SpiderCatchingNet:return q.Rare;case g.SpiderStick:return q.Rare;case g.SpiderFoldingFan:return q.Rare;case g.BatRing:return q.Rare;case g.BatShoes:return q.Rare;case g.BatSword:return q.Rare;case g.BatHat:return q.Rare;case g.BatRecorder:return q.Rare;case g.BatBow:return q.Rare;case g.BatMascaradeMask:return q.Rare;case g.BatCloak:return q.Rare;case g.BronzeShoulder:return q.Common;case g.BattleRing:return q.Common;case g.Halo:return q.Common;case g.IronShoulder:return q.Uncommon;case g.StrengthRing:return q.Uncommon;case g.GoldenRing:return q.Uncommon;case g.GoldenFireRing:return q.Uncommon;case g.GoldenIceRing:return q.Uncommon;case g.GoldenThunderRing:return q.Uncommon;case g.GoldenLightRing:return q.Uncommon;case g.GoldenDarkRing:return q.Uncommon;case g.IronBelt:return q.Uncommon;case g.IronShoes:return q.Uncommon;case g.CopperArmor:return q.Uncommon;case g.IronGlove:return q.Uncommon;case g.TowerShield:return q.Uncommon;case g.FireTowerShield:return q.Uncommon;case g.IceTowerShield:return q.Uncommon;case g.ThunderTowerShield:return q.Uncommon;case g.LightTowerShield:return q.Uncommon;case g.DarkTowerShield:return q.Uncommon;case g.SavageRing:return q.Uncommon;case g.SpellboundFireBrooch:return q.Uncommon;case g.SpellboundIceBrooch:return q.Uncommon;case g.SpellboundThunderBrooch:return q.Uncommon;case g.SpellboundLightBrooch:return q.Uncommon;case g.SpellboundDarkBrooch:return q.Uncommon;case g.CopperHelm:return q.Uncommon;case g.BattleHelm:return q.Uncommon;case g.WizardHelm:return q.Uncommon;case g.LargeSword:return q.Uncommon;case g.LargeStaff:return q.Uncommon;case g.LargeWing:return q.Uncommon;case g.LargeDagger:return q.Uncommon;case g.LargeBow:return q.Uncommon;case g.LargeOcarina:return q.Uncommon;case g.FairyClothes:return q.SuperRare;case g.FairyStaff:return q.SuperRare;case g.FairyBoots:return q.SuperRare;case g.FairyGlove:return q.SuperRare;case g.FairyBrooch:return q.SuperRare;case g.FairyLamp:return q.SuperRare;case g.FairyWing:return q.SuperRare;case g.FairyShuriken:return q.SuperRare;case g.FoxKanzashi:return q.SuperRare;case g.FoxLoincloth:return q.SuperRare;case g.FoxMask:return q.SuperRare;case g.FoxHamayayumi:return q.SuperRare;case g.FoxHat:return q.SuperRare;case g.FoxCoat:return q.SuperRare;case g.FoxBoot:return q.SuperRare;case g.FoxEma:return q.SuperRare;case g.DevilfishSword:return q.SuperRare;case g.DevilfishWing:return q.SuperRare;case g.DevilfishRecorder:return q.SuperRare;case g.DevilfishArmor:return q.SuperRare;case g.DevilfishScarf:return q.SuperRare;case g.DevilfishGill:return q.SuperRare;case g.DevilfishPendant:return q.SuperRare;case g.DevilfishRing:return q.SuperRare;case g.TreantAmulet:return q.SuperRare;case g.TreantHagoita:return q.SuperRare;case g.TreantChoppingBoard:return q.SuperRare;case g.TreantDagger:return q.SuperRare;case g.TreantHaniwa:return q.SuperRare;case g.TreantKokeshi:return q.SuperRare;case g.TreantLamp:return q.SuperRare;case g.TreantLunchbox:return q.SuperRare;case g.FlametigerPortableHotSpring:return q.Epic;case g.FlametigerVolcanicShield:return q.Epic;case g.FlametigerStripedBriefs:return q.Epic;case g.TorchOfEverburningFlametiger:return q.Epic;case g.FlametigerCostume:return q.Epic;case g.RingOfFlametigersWrath:return q.Epic;case g.EndlessBowlOfSpicyFlametigerRamen:return q.Epic;case g.ScreenOfTheSneakyFlametiger:return q.Epic;case g.ModifiedSword:return q.Rare;case g.ModifiedStaff:return q.Rare;case g.ModifiedWing:return q.Rare;case g.ModifiedDart:return q.Rare;case g.ModifiedBow:return q.Rare;case g.ModifiedRecorder:return q.Rare;case g.AncientCloak:return q.Rare;case g.AncientBelt:return q.Rare;case g.AncientShoes:return q.Rare;case g.AncientRing:return q.Rare;case g.AncientEarring:return q.Rare;default:return q.Common}},Part(e){switch(e){case g.Nothing:return F.Weapon;case g.DullSword:return F.Weapon;case g.BrittleStaff:return F.Weapon;case g.FlimsyWing:return F.Weapon;case g.WornDart:return F.Weapon;case g.SmallBow:return F.Weapon;case g.WoodenRecorder:return F.Weapon;case g.OldCloak:return F.Armor;case g.BlueHat:return F.Armor;case g.OrangeHat:return F.Armor;case g.TShirt:return F.Armor;case g.ClothGlove:return F.Armor;case g.BlueTShirt:return F.Armor;case g.OrangeTShirt:return F.Armor;case g.ClothBelt:return F.Armor;case g.ClothShoes:return F.Armor;case g.IronRing:return F.Jewelry;case g.PearlEarring:return F.Jewelry;case g.FireBrooch:return F.Jewelry;case g.IceBrooch:return F.Jewelry;case g.ThunderBrooch:return F.Jewelry;case g.LightBrooch:return F.Jewelry;case g.DarkBrooch:return F.Jewelry;case g.WoodenShield:return F.Armor;case g.LongSword:return F.Weapon;case g.LongStaff:return F.Weapon;case g.WarmWing:return F.Weapon;case g.DualDagger:return F.Weapon;case g.ReinforcedBow:return F.Weapon;case g.Flute:return F.Weapon;case g.FireStaff:return F.Weapon;case g.IceStaff:return F.Weapon;case g.ThunderStaff:return F.Weapon;case g.LeatherBelt:return F.Armor;case g.LeatherShoes:return F.Armor;case g.WarmCloak:return F.Armor;case g.LeatherArmor:return F.Armor;case g.LeatherGlove:return F.Armor;case g.LeatherShield:return F.Armor;case g.FireRing:return F.Jewelry;case g.IceRing:return F.Jewelry;case g.ThunderRing:return F.Jewelry;case g.LightRing:return F.Jewelry;case g.DarkRing:return F.Jewelry;case g.EnhancedFireBrooch:return F.Jewelry;case g.EnhancedIceBrooch:return F.Jewelry;case g.EnhancedThunderBrooch:return F.Jewelry;case g.EnhancedLightBrooch:return F.Jewelry;case g.EnhancedDarkBrooch:return F.Jewelry;case g.BattleSword:return F.Weapon;case g.BattleStaff:return F.Weapon;case g.BattleWing:return F.Weapon;case g.BattleDagger:return F.Weapon;case g.BattleBow:return F.Weapon;case g.BattleRecorder:return F.Weapon;case g.SlimeSword:return F.Weapon;case g.SlimeGlove:return F.Armor;case g.SlimeRing:return F.Jewelry;case g.SlimeBelt:return F.Armor;case g.SlimePincenez:return F.Jewelry;case g.SlimeWing:return F.Weapon;case g.SlimePoncho:return F.Armor;case g.SlimeDart:return F.Weapon;case g.MagicSlimeStick:return F.Weapon;case g.MagicSlimeHat:return F.Armor;case g.MagicSlimeBow:return F.Weapon;case g.MagicSlimeShoes:return F.Armor;case g.MagicSlimeRecorder:return F.Weapon;case g.MagicSlimeEarring:return F.Jewelry;case g.MagicSlimeBalloon:return F.Jewelry;case g.MagicSlimeSkirt:return F.Armor;case g.SpiderHat:return F.Armor;case g.SpiderSkirt:return F.Armor;case g.SpiderSuit:return F.Armor;case g.SpiderDagger:return F.Weapon;case g.SpiderWing:return F.Weapon;case g.SpiderCatchingNet:return F.Weapon;case g.SpiderStick:return F.Weapon;case g.SpiderFoldingFan:return F.Jewelry;case g.BatRing:return F.Jewelry;case g.BatShoes:return F.Armor;case g.BatSword:return F.Weapon;case g.BatHat:return F.Armor;case g.BatRecorder:return F.Weapon;case g.BatBow:return F.Weapon;case g.BatMascaradeMask:return F.Jewelry;case g.BatCloak:return F.Armor;case g.BronzeShoulder:return F.Armor;case g.BattleRing:return F.Jewelry;case g.Halo:return F.Jewelry;case g.IronShoulder:return F.Armor;case g.StrengthRing:return F.Jewelry;case g.GoldenRing:return F.Jewelry;case g.GoldenFireRing:return F.Jewelry;case g.GoldenIceRing:return F.Jewelry;case g.GoldenThunderRing:return F.Jewelry;case g.GoldenLightRing:return F.Jewelry;case g.GoldenDarkRing:return F.Jewelry;case g.IronBelt:return F.Armor;case g.IronShoes:return F.Armor;case g.CopperArmor:return F.Armor;case g.IronGlove:return F.Armor;case g.TowerShield:return F.Armor;case g.FireTowerShield:return F.Armor;case g.IceTowerShield:return F.Armor;case g.ThunderTowerShield:return F.Armor;case g.LightTowerShield:return F.Armor;case g.DarkTowerShield:return F.Armor;case g.SavageRing:return F.Jewelry;case g.SpellboundFireBrooch:return F.Jewelry;case g.SpellboundIceBrooch:return F.Jewelry;case g.SpellboundThunderBrooch:return F.Jewelry;case g.SpellboundLightBrooch:return F.Jewelry;case g.SpellboundDarkBrooch:return F.Jewelry;case g.CopperHelm:return F.Armor;case g.BattleHelm:return F.Armor;case g.WizardHelm:return F.Armor;case g.LargeSword:return F.Weapon;case g.LargeStaff:return F.Weapon;case g.LargeWing:return F.Weapon;case g.LargeDagger:return F.Weapon;case g.LargeBow:return F.Weapon;case g.LargeOcarina:return F.Weapon;case g.FairyClothes:return F.Armor;case g.FairyStaff:return F.Weapon;case g.FairyBoots:return F.Armor;case g.FairyGlove:return F.Armor;case g.FairyBrooch:return F.Jewelry;case g.FairyLamp:return F.Jewelry;case g.FairyWing:return F.Weapon;case g.FairyShuriken:return F.Weapon;case g.FoxKanzashi:return F.Jewelry;case g.FoxLoincloth:return F.Armor;case g.FoxMask:return F.Jewelry;case g.FoxHamayayumi:return F.Weapon;case g.FoxHat:return F.Armor;case g.FoxCoat:return F.Armor;case g.FoxBoot:return F.Armor;case g.FoxEma:return F.Jewelry;case g.DevilfishSword:return F.Weapon;case g.DevilfishWing:return F.Weapon;case g.DevilfishRecorder:return F.Weapon;case g.DevilfishArmor:return F.Armor;case g.DevilfishScarf:return F.Armor;case g.DevilfishGill:return F.Jewelry;case g.DevilfishPendant:return F.Jewelry;case g.DevilfishRing:return F.Jewelry;case g.TreantAmulet:return F.Jewelry;case g.TreantHagoita:return F.Weapon;case g.TreantChoppingBoard:return F.Armor;case g.TreantDagger:return F.Weapon;case g.TreantHaniwa:return F.Armor;case g.TreantKokeshi:return F.Jewelry;case g.TreantLamp:return F.Jewelry;case g.TreantLunchbox:return F.Jewelry;case g.FlametigerPortableHotSpring:return F.Jewelry;case g.FlametigerVolcanicShield:return F.Weapon;case g.FlametigerStripedBriefs:return F.Armor;case g.TorchOfEverburningFlametiger:return F.Weapon;case g.FlametigerCostume:return F.Armor;case g.RingOfFlametigersWrath:return F.Weapon;case g.EndlessBowlOfSpicyFlametigerRamen:return F.Jewelry;case g.ScreenOfTheSneakyFlametiger:return F.Jewelry;case g.ModifiedSword:return F.Weapon;case g.ModifiedStaff:return F.Weapon;case g.ModifiedWing:return F.Weapon;case g.ModifiedDart:return F.Weapon;case g.ModifiedBow:return F.Weapon;case g.ModifiedRecorder:return F.Weapon;case g.AncientCloak:return F.Armor;case g.AncientBelt:return F.Armor;case g.AncientShoes:return F.Armor;case g.AncientRing:return F.Jewelry;case g.AncientEarring:return F.Jewelry;default:return F.Weapon}},RarityFactor(e){switch(e){case a.Nothing:return 1;case a.HPAdder:return 1;case a.MPAdder:return 1;case a.ATKAdder:return 1;case a.MATKAdder:return 1;case a.DEFAdder:return 1;case a.MDEFAdder:return 1;case a.SPDAdder:return 5;case a.HPMultiplier:return 5;case a.MPMultiplier:return 5;case a.ATKMultiplier:return 5;case a.MATKMultiplier:return 5;case a.DEFMultiplier:return 5;case a.MDEFMultiplier:return 5;case a.ATKPropotion:return 3;case a.MATKPropotion:return 3;case a.DEFPropotion:return 3;case a.MDEFPropotion:return 3;case a.FireResistance:return 2;case a.IceResistance:return 2;case a.ThunderResistance:return 2;case a.LightResistance:return 2;case a.DarkResistance:return 2;case a.PhysicalAbsorption:return 4;case a.FireAbsorption:return 4;case a.IceAbsorption:return 4;case a.ThunderAbsorption:return 4;case a.LightAbsorption:return 4;case a.DarkAbsorption:return 4;case a.DebuffResistance:return 3;case a.EquipmentDropChance:return 10;case a.SlimeDropChance:return 10;case a.MagicSlimeDropChance:return 20;case a.SpiderDropChance:return 30;case a.BatDropChance:return 40;case a.FairyDropChance:return 50;case a.FoxDropChance:return 60;case a.DevilFishDropChance:return 70;case a.TreantDropChance:return 80;case a.FlameTigerDropChance:return 90;case a.UnicornDropChance:return 100;case a.ColorMaterialDropChance:return 10;case a.PhysicalCritical:return 2;case a.MagicalCritical:return 2;case a.EXPGain:return 10;case a.SkillProficiency:return 10;case a.EquipmentProficiency:return 10;case a.MoveSpeedMultiplier:return 10;case a.GoldGain:return 5;case a.StoneGain:return 2;case a.CrystalGain:return 2;case a.LeafGain:return 2;case a.WarriorSkillLevel:return 4;case a.WizardSkillLevel:return 4;case a.AngelSkillLevel:return 4;case a.ThiefSkillLevel:return 4;case a.ArcherSkillLevel:return 4;case a.TamerSkillLevel:return 4;case a.AllSkillLevel:return 5;case a.SlimeKnowledge:return 10;case a.MagicSlimeKnowledge:return 20;case a.SpiderKnowledge:return 30;case a.BatKnowledge:return 40;case a.FairyKnowledge:return 50;case a.FoxKnowledge:return 60;case a.DevilFishKnowledge:return 70;case a.TreantKnowledge:return 80;case a.FlameTigerKnowledge:return 90;case a.UnicornKnowledge:return 100;case a.PhysicalDamage:return 5;case a.FireDamage:return 5;case a.IceDamage:return 5;case a.ThunderDamage:return 5;case a.LightDamage:return 5;case a.DarkDamage:return 5;case a.HpRegen:return 10;case a.MpRegen:return 10;case a.TamingPoint:return 10;case a.WarriorSkillRange:return 200;case a.WizardSkillRange:return 200;case a.AngelSkillRange:return 200;case a.ThiefSkillRange:return 200;case a.ArcherSkillRange:return 200;case a.TamerSkillRange:return 200;case a.TownMatGain:return 100;case a.TownMatAreaClearGain:return 100;case a.RebirthPointGain1:return 100;case a.RebirthPointGain2:return 100;case a.RebirthPointGain3:return 100;case a.CriticalDamage:return 10;case a.BlessingEffect:return 100;case a.MoveSpeedAdder:return 3;case a.PetEXPGain:return 10;case a.LoyaltyPointGain:return 10;case a.CatalystDoubleCriticalChance:return 100;case a.WarriorSkillEffectRange:return 400;case a.WizardSkillEffectRange:return 400;case a.AngelSkillEffectRange:return 400;case a.ThiefSkillEffectRange:return 400;case a.ArcherSkillEffectRange:return 400;case a.TamerSkillEffectRange:return 400;case a.HpRegenMultiplier:return 200;case a.MpRegenMultiplier:return 250;case a.ArmoredFury:return 500;case a.WardedFury:return 500;case a.PetPhysicalCriticalChance:return 60;case a.PetMagicalCriticalChance:return 60;case a.PetCriticalDamage:return 80;case a.PetDebuffResistance:return 100;case a.StoneTownResearchPower:return 400;case a.CrystalTownResearchPower:return 400;case a.LeafTownResearchPower:return 400;case a.GuildEXPGain:return 800;case a.SPDMultiplier:return 400;case a.CriticalDamageMultiplier:return 250;case a.SkillProficiencyMultiplier:return 200;case a.EquipmentProficiencyMultiplier:return 300;case a.EXPGainMultiplier:return 200;case a.GoldGainMultiplier:return 200;case a.PhysicalDamageMultiplier:return 200;case a.FireDamageMultiplier:return 200;case a.IceDamageMultiplier:return 200;case a.ThunderDamageMultiplier:return 200;case a.LightDamageMultiplier:return 200;case a.DarkDamageMultiplier:return 200;case a.TamingPointMultiplier:return 200;case a.PetEXPGainMultiplier:return 200;case a.LoyaltyPointGainMultiplier:return 300;case a.BlessingEffectMultiplier:return 400;case a.PhysicalCriticalMultiplier:return 60;case a.MagicalCriticalMultiplier:return 60;case a.ChallengeBossKnowledge:return 1e3;case a.HPAfter:return 10;case a.MPAfter:return 10;case a.ATKAfter:return 10;case a.MATKAfter:return 10;case a.DEFAfter:return 10;case a.MDEFAfter:return 10;case a.SPDAfter:return 10;case a.MoveSpeedAfter:return 50;case a.PhysicalCriticalAfter:return 40;case a.MagicalCriticalAfter:return 40;case a.CriticalDamageAfter:return 50;case a.DebuffResistanceAfter:return 30;case a.PhysicalDamageAfter:return 60;case a.FireDamageAfter:return 60;case a.IceDamageAfter:return 60;case a.ThunderDamageAfter:return 60;case a.LightDamageAfter:return 60;case a.DarkDamageAfter:return 60;case a.FireResistanceAfter:return 20;case a.IceResistanceAfter:return 20;case a.ThunderResistanceAfter:return 20;case a.LightResistanceAfter:return 20;case a.DarkResistanceAfter:return 20;case a.SlimeKnowledgeAfter:return 20;case a.MagicSlimeKnowledgeAfter:return 40;case a.SpiderKnowledgeAfter:return 60;case a.BatKnowledgeAfter:return 80;case a.FairyKnowledgeAfter:return 100;case a.FoxKnowledgeAfter:return 120;case a.DevilFishKnowledgeAfter:return 140;case a.TreantKnowledgeAfter:return 160;case a.FlameTigerKnowledgeAfter:return 180;case a.UnicornKnowledgeAfter:return 200;case a.ChallengeBossKnowledgeAfter:return 250;case a.SDDamageMultiplier:return 100;case a.SDDamageCutMultiplier:return 100;case a.FameGain:return 800;case a.DungeonCoinGain:return 1e3;case a.ExtraAfterDamage:return 1e3;default:return 1e3}},MaxLevel(e){switch(e){case a.HPAdder:return 10;case a.MPAdder:return 10;case a.ATKAdder:return 10;case a.MATKAdder:return 10;case a.DEFAdder:return 10;case a.MDEFAdder:return 10;case a.SPDAdder:return 10;case a.HPMultiplier:return 5;case a.MPMultiplier:return 5;case a.ATKMultiplier:return 5;case a.MATKMultiplier:return 5;case a.DEFMultiplier:return 5;case a.MDEFMultiplier:return 5;case a.ATKPropotion:return 5;case a.MATKPropotion:return 5;case a.DEFPropotion:return 5;case a.MDEFPropotion:return 5;case a.FireResistance:return 10;case a.IceResistance:return 10;case a.ThunderResistance:return 10;case a.LightResistance:return 10;case a.DarkResistance:return 10;case a.PhysicalAbsorption:return 2;case a.FireAbsorption:return 2;case a.IceAbsorption:return 2;case a.ThunderAbsorption:return 2;case a.LightAbsorption:return 2;case a.DarkAbsorption:return 2;case a.DebuffResistance:return 5;case a.EquipmentDropChance:return 10;case a.SlimeDropChance:return 10;case a.MagicSlimeDropChance:return 10;case a.SpiderDropChance:return 10;case a.BatDropChance:return 10;case a.FairyDropChance:return 10;case a.FoxDropChance:return 10;case a.DevilFishDropChance:return 10;case a.TreantDropChance:return 10;case a.FlameTigerDropChance:return 10;case a.UnicornDropChance:return 10;case a.ColorMaterialDropChance:return 10;case a.PhysicalCritical:return 2;case a.MagicalCritical:return 2;case a.EXPGain:return 10;case a.SkillProficiency:return 10;case a.EquipmentProficiency:return 10;case a.MoveSpeedMultiplier:return 10;case a.GoldGain:return 5;case a.StoneGain:return 10;case a.CrystalGain:return 10;case a.LeafGain:return 10;case a.WarriorSkillLevel:return 10;case a.WizardSkillLevel:return 10;case a.AngelSkillLevel:return 10;case a.ThiefSkillLevel:return 10;case a.ArcherSkillLevel:return 10;case a.TamerSkillLevel:return 10;case a.AllSkillLevel:return 10;case a.SlimeKnowledge:return 10;case a.MagicSlimeKnowledge:return 10;case a.SpiderKnowledge:return 10;case a.BatKnowledge:return 10;case a.FairyKnowledge:return 10;case a.FoxKnowledge:return 10;case a.DevilFishKnowledge:return 10;case a.TreantKnowledge:return 10;case a.FlameTigerKnowledge:return 10;case a.UnicornKnowledge:return 10;case a.PhysicalDamage:return 10;case a.FireDamage:return 10;case a.IceDamage:return 10;case a.ThunderDamage:return 10;case a.LightDamage:return 10;case a.DarkDamage:return 10;case a.HpRegen:return 5;case a.MpRegen:return 5;case a.TamingPoint:return 10;case a.WarriorSkillRange:return 2;case a.WizardSkillRange:return 2;case a.AngelSkillRange:return 2;case a.ThiefSkillRange:return 2;case a.ArcherSkillRange:return 2;case a.TamerSkillRange:return 2;case a.TownMatGain:return 10;case a.TownMatAreaClearGain:return 10;case a.RebirthPointGain1:return 10;case a.RebirthPointGain2:return 10;case a.RebirthPointGain3:return 10;case a.CriticalDamage:return 2;case a.BlessingEffect:return 10;case a.MoveSpeedAdder:return 10;case a.PetEXPGain:return 10;case a.LoyaltyPointGain:return 10;case a.CatalystDoubleCriticalChance:return 10;case a.WarriorSkillEffectRange:return 2;case a.WizardSkillEffectRange:return 2;case a.AngelSkillEffectRange:return 2;case a.ThiefSkillEffectRange:return 2;case a.ArcherSkillEffectRange:return 2;case a.TamerSkillEffectRange:return 2;case a.HpRegenMultiplier:return 5;case a.MpRegenMultiplier:return 5;case a.ArmoredFury:return 10;case a.WardedFury:return 10;case a.PetPhysicalCriticalChance:return 2;case a.PetMagicalCriticalChance:return 2;case a.PetCriticalDamage:return 2;case a.PetDebuffResistance:return 5;case a.StoneTownResearchPower:return 10;case a.CrystalTownResearchPower:return 10;case a.LeafTownResearchPower:return 10;case a.GuildEXPGain:return 10;case a.SPDMultiplier:return 5;case a.CriticalDamageMultiplier:return 5;case a.SkillProficiencyMultiplier:return 5;case a.EquipmentProficiencyMultiplier:return 5;case a.EXPGainMultiplier:return 5;case a.GoldGainMultiplier:return 5;case a.PhysicalDamageMultiplier:return 5;case a.FireDamageMultiplier:return 5;case a.IceDamageMultiplier:return 5;case a.ThunderDamageMultiplier:return 5;case a.LightDamageMultiplier:return 5;case a.DarkDamageMultiplier:return 5;case a.TamingPointMultiplier:return 5;case a.PetEXPGainMultiplier:return 5;case a.LoyaltyPointGainMultiplier:return 5;case a.BlessingEffectMultiplier:return 5;case a.PhysicalCriticalMultiplier:return 2;case a.MagicalCriticalMultiplier:return 2;case a.ChallengeBossKnowledge:return 10;case a.HPAfter:return 10;case a.MPAfter:return 10;case a.ATKAfter:return 10;case a.MATKAfter:return 10;case a.DEFAfter:return 10;case a.MDEFAfter:return 10;case a.SPDAfter:return 10;case a.MoveSpeedAfter:return 10;case a.PhysicalCriticalAfter:return 10;case a.MagicalCriticalAfter:return 10;case a.CriticalDamageAfter:return 10;case a.DebuffResistanceAfter:return 10;case a.PhysicalDamageAfter:return 10;case a.FireDamageAfter:return 10;case a.IceDamageAfter:return 10;case a.ThunderDamageAfter:return 10;case a.LightDamageAfter:return 10;case a.DarkDamageAfter:return 10;case a.FireResistanceAfter:return 10;case a.IceResistanceAfter:return 10;case a.ThunderResistanceAfter:return 10;case a.LightResistanceAfter:return 10;case a.DarkResistanceAfter:return 10;case a.SlimeKnowledgeAfter:return 10;case a.MagicSlimeKnowledgeAfter:return 10;case a.SpiderKnowledgeAfter:return 10;case a.BatKnowledgeAfter:return 10;case a.FairyKnowledgeAfter:return 10;case a.FoxKnowledgeAfter:return 10;case a.DevilFishKnowledgeAfter:return 10;case a.TreantKnowledgeAfter:return 10;case a.FlameTigerKnowledgeAfter:return 10;case a.UnicornKnowledgeAfter:return 10;case a.ChallengeBossKnowledgeAfter:return 10;case a.SDDamageMultiplier:return 10;case a.SDDamageCutMultiplier:return 10;case a.FameGain:return 10;case a.DungeonCoinGain:return 10;case a.ExtraAfterDamage:return 10;default:return 2}},EffectCalculation(e,t){switch(e){case a.HPAdder:return 10*Math.pow(t,2);case a.MPAdder:return 5*Math.pow(t,2);case a.ATKAdder:return Math.pow(t,2);case a.MATKAdder:return Math.pow(t,2);case a.DEFAdder:return Math.pow(t,2);case a.MDEFAdder:return Math.pow(t,2);case a.SPDAdder:return Math.pow(t,2);case a.HPMultiplier:return .5*t*(t+1)/100;case a.MPMultiplier:return .5*t*(t+1)/100;case a.ATKMultiplier:return .5*t*(t+1)/100;case a.MATKMultiplier:return .5*t*(t+1)/100;case a.DEFMultiplier:return .5*t*(t+1)/100;case a.MDEFMultiplier:return .5*t*(t+1)/100;case a.ATKPropotion:return 10*t/100;case a.MATKPropotion:return 10*t/100;case a.DEFPropotion:return 10*t/100;case a.MDEFPropotion:return 10*t/100;case a.FireResistance:return 2*t/100;case a.IceResistance:return 2*t/100;case a.ThunderResistance:return 2*t/100;case a.LightResistance:return 2*t/100;case a.DarkResistance:return 2*t/100;case a.PhysicalAbsorption:return Math.pow(t,2)/100;case a.FireAbsorption:return Math.pow(t,2)/100;case a.IceAbsorption:return Math.pow(t,2)/100;case a.ThunderAbsorption:return Math.pow(t,2)/100;case a.LightAbsorption:return Math.pow(t,2)/100;case a.DarkAbsorption:return Math.pow(t,2)/100;case a.DebuffResistance:return 5*t/100;case a.EquipmentDropChance:return 1e-4*t*(t+1)/100;case a.SlimeDropChance:return .01*t*(t+1)/100;case a.MagicSlimeDropChance:return .01*t*(t+1)/100;case a.SpiderDropChance:return .01*t*(t+1)/100;case a.BatDropChance:return .01*t*(t+1)/100;case a.FairyDropChance:return .01*t*(t+1)/100;case a.FoxDropChance:return .01*t*(t+1)/100;case a.DevilFishDropChance:return .01*t*(t+1)/100;case a.TreantDropChance:return .01*t*(t+1)/100;case a.FlameTigerDropChance:return .01*t*(t+1)/100;case a.UnicornDropChance:return .01*t*(t+1)/100;case a.ColorMaterialDropChance:return 1e-4*t*(t+1)/100;case a.PhysicalCritical:return 3*t/100;case a.MagicalCritical:return 3*t/100;case a.EXPGain:return 1*t*(t+1)/100;case a.SkillProficiency:return .5*t*(t+1)/100;case a.EquipmentProficiency:return .25*t*(t+1)/100;case a.MoveSpeedMultiplier:return .1*t*(t+1)/100;case a.GoldGain:return t*(t+1)/100;case a.StoneGain:return 5*Math.pow(t,2)/100;case a.CrystalGain:return 5*Math.pow(t,2)/100;case a.LeafGain:return 5*Math.pow(t,2)/100;case a.WarriorSkillLevel:return 2*t;case a.WizardSkillLevel:return 2*t;case a.AngelSkillLevel:return 2*t;case a.ThiefSkillLevel:return 2*t;case a.ArcherSkillLevel:return 2*t;case a.TamerSkillLevel:return 2*t;case a.AllSkillLevel:return t;case a.SlimeKnowledge:return .5*t*(t+1)/100;case a.MagicSlimeKnowledge:return .5*t*(t+1)/100;case a.SpiderKnowledge:return .5*t*(t+1)/100;case a.BatKnowledge:return .5*t*(t+1)/100;case a.FairyKnowledge:return .5*t*(t+1)/100;case a.FoxKnowledge:return .5*t*(t+1)/100;case a.DevilFishKnowledge:return .5*t*(t+1)/100;case a.TreantKnowledge:return .5*t*(t+1)/100;case a.FlameTigerKnowledge:return .5*t*(t+1)/100;case a.UnicornKnowledge:return .5*t*(t+1)/100;case a.PhysicalDamage:return .5*t*(t+1)/100;case a.FireDamage:return .5*t*(t+1)/100;case a.IceDamage:return .5*t*(t+1)/100;case a.ThunderDamage:return .5*t*(t+1)/100;case a.LightDamage:return .5*t*(t+1)/100;case a.DarkDamage:return .5*t*(t+1)/100;case a.HpRegen:return 10*t;case a.MpRegen:return 10*t*(t+1);case a.TamingPoint:return .05*t;case a.WarriorSkillRange:return .002*t;case a.WizardSkillRange:return .002*t;case a.AngelSkillRange:return .002*t;case a.ThiefSkillRange:return .002*t;case a.ArcherSkillRange:return .002*t;case a.TamerSkillRange:return .002*t;case a.TownMatGain:return .01*t;case a.TownMatAreaClearGain:return t;case a.RebirthPointGain1:return .01*t;case a.RebirthPointGain2:return .01*t;case a.RebirthPointGain3:return .01*t;case a.CriticalDamage:return 5*t*(t+1)/100;case a.BlessingEffect:return .01*t;case a.MoveSpeedAdder:return t*(t+1)/2;case a.PetEXPGain:return .05*t;case a.LoyaltyPointGain:return .05*t;case a.CatalystDoubleCriticalChance:return .005*t;case a.WarriorSkillEffectRange:return .002*t;case a.WizardSkillEffectRange:return .002*t;case a.AngelSkillEffectRange:return .002*t;case a.ThiefSkillEffectRange:return .002*t;case a.ArcherSkillEffectRange:return .002*t;case a.TamerSkillEffectRange:return .002*t;case a.HpRegenMultiplier:return .005*t*(t+1)*.01;case a.MpRegenMultiplier:return .005*t*(t+1)*.01;case a.ArmoredFury:return .1*t*.01;case a.WardedFury:return .1*t*.01;case a.PetPhysicalCriticalChance:return 3*t*.01;case a.PetMagicalCriticalChance:return 3*t*.01;case a.PetCriticalDamage:return 5*t*(t+1)*.01;case a.PetDebuffResistance:return 5*t*.01;case a.StoneTownResearchPower:return .025*t*(t+1)*.01;case a.CrystalTownResearchPower:return .025*t*(t+1)*.01;case a.LeafTownResearchPower:return .025*t*(t+1)*.01;case a.GuildEXPGain:return .002*t*(t+1)*.01;case a.SPDMultiplier:return .5*t*(t+1)/100;case a.CriticalDamageMultiplier:return .5*t*(t+1)/100;case a.SkillProficiencyMultiplier:return .5*t*(t+1)/100;case a.EquipmentProficiencyMultiplier:return .25*t*(t+1)/100;case a.EXPGainMultiplier:return .25*t*(t+1)/100;case a.GoldGainMultiplier:return .25*t*(t+1)/100;case a.PhysicalDamageMultiplier:return .25*t*(t+1)/100;case a.FireDamageMultiplier:return .25*t*(t+1)/100;case a.IceDamageMultiplier:return .25*t*(t+1)/100;case a.ThunderDamageMultiplier:return .25*t*(t+1)/100;case a.LightDamageMultiplier:return .25*t*(t+1)/100;case a.DarkDamageMultiplier:return .25*t*(t+1)/100;case a.TamingPointMultiplier:return .5*t*(t+1)/100;case a.PetEXPGainMultiplier:return .5*t*(t+1)/100;case a.LoyaltyPointGainMultiplier:return .5*t*(t+1)/100;case a.BlessingEffectMultiplier:return .05*t*(t+1)/100;case a.PhysicalCriticalMultiplier:return 2*t/100;case a.MagicalCriticalMultiplier:return 2*t/100;case a.ChallengeBossKnowledge:return .2*t*(t+1)/100;case a.HPAfter:return 12.5*t*(t+1);case a.MPAfter:return 10*t*(t+1);case a.ATKAfter:return 5*t*(t+1);case a.MATKAfter:return 5*t*(t+1);case a.DEFAfter:return 5*t*(t+1);case a.MDEFAfter:return 5*t*(t+1);case a.SPDAfter:return 5*t*(t+1);case a.MoveSpeedAfter:return .5*t*(t+1);case a.PhysicalCriticalAfter:return .1*t*.01;case a.MagicalCriticalAfter:return .1*t*.01;case a.CriticalDamageAfter:return t*(t+1)*.01;case a.DebuffResistanceAfter:return .1*t*.01;case a.PhysicalDamageAfter:return 10*t*(t+1)*.01;case a.FireDamageAfter:return 10*t*(t+1)*.01;case a.IceDamageAfter:return 10*t*(t+1)*.01;case a.ThunderDamageAfter:return 10*t*(t+1)*.01;case a.LightDamageAfter:return 10*t*(t+1)*.01;case a.DarkDamageAfter:return 10*t*(t+1)*.01;case a.FireResistanceAfter:return .1*t*.01;case a.IceResistanceAfter:return .1*t*.01;case a.ThunderResistanceAfter:return .1*t*.01;case a.LightResistanceAfter:return .1*t*.01;case a.DarkResistanceAfter:return .1*t*.01;case a.SlimeKnowledgeAfter:return 10*t*(t+1)*.01;case a.MagicSlimeKnowledgeAfter:return 10*t*(t+1)*.01;case a.SpiderKnowledgeAfter:return 10*t*(t+1)*.01;case a.BatKnowledgeAfter:return 10*t*(t+1)*.01;case a.FairyKnowledgeAfter:return 10*t*(t+1)*.01;case a.FoxKnowledgeAfter:return 10*t*(t+1)*.01;case a.DevilFishKnowledgeAfter:return 10*t*(t+1)*.01;case a.TreantKnowledgeAfter:return 10*t*(t+1)*.01;case a.FlameTigerKnowledgeAfter:return 10*t*(t+1)*.01;case a.UnicornKnowledgeAfter:return 10*t*(t+1)*.01;case a.ChallengeBossKnowledgeAfter:return 10*t*(t+1)*.01;case a.SDDamageMultiplier:return 2.5*t*(t+1)*.01;case a.SDDamageCutMultiplier:return 2.5*t*(t+1)*.01;case a.FameGain:return .1*t*(t+1)*.01;case a.DungeonCoinGain:return .01*t*(t+1)*.01;case a.ExtraAfterDamage:return .01*t*(t+1)*.01;default:return 0}},RequiredLevelIncrement(e,t){return e==a.Nothing?0:Math.floor(25/this.MaxLevel(e))*t*this.RarityFactor(e)},IsAfter(e){switch(e){case a.HPAfter:return!0;case a.MPAfter:return!0;case a.ATKAfter:return!0;case a.MATKAfter:return!0;case a.DEFAfter:return!0;case a.MDEFAfter:return!0;case a.SPDAfter:return!0;case a.MoveSpeedAfter:return!0;case a.PhysicalCriticalAfter:return!0;case a.MagicalCriticalAfter:return!0;case a.CriticalDamageAfter:return!0;case a.DebuffResistanceAfter:return!0;case a.PhysicalDamageAfter:return!0;case a.FireDamageAfter:return!0;case a.IceDamageAfter:return!0;case a.ThunderDamageAfter:return!0;case a.LightDamageAfter:return!0;case a.DarkDamageAfter:return!0;case a.FireResistanceAfter:return!0;case a.IceResistanceAfter:return!0;case a.ThunderResistanceAfter:return!0;case a.LightResistanceAfter:return!0;case a.DarkResistanceAfter:return!0;case a.SlimeKnowledgeAfter:return!0;case a.MagicSlimeKnowledgeAfter:return!0;case a.SpiderKnowledgeAfter:return!0;case a.BatKnowledgeAfter:return!0;case a.FairyKnowledgeAfter:return!0;case a.FoxKnowledgeAfter:return!0;case a.DevilFishKnowledgeAfter:return!0;case a.TreantKnowledgeAfter:return!0;case a.FlameTigerKnowledgeAfter:return!0;case a.UnicornKnowledgeAfter:return!0;case a.ChallengeBossKnowledgeAfter:return!0;case a.SDDamageMultiplier:return!0;case a.SDDamageCutMultiplier:return!0;case a.FameGain:return!0;case a.DungeonCoinGain:return!0;case a.ExtraAfterDamage:return!0;default:return!1}},MaxEffectValue(e){switch(e){case Le.IncreaseProficiencyGain:return 100;case Le.IncreaseEffect:return 10;case Le.PurifyCurseEffect:return 1;case Le.IncreaseEffectIncrement:return 1;case Le.EqLevel:return 100;default:return 1e9}}},rg=st({__name:"DropChance",setup(e){const t=xi().dropChance;function s(){const i=t.level,c=t.sdchance;let l=[],M=[];for(let k=0;k<N.EquipmentEffectKind;k++){let P=k,y=0;i>=jt.RequiredLevelIncrement(P,1)&&(y=jt.IsAfter(P)?c/jt.RarityFactor(P):10/jt.RarityFactor(P)),M.push(y)}let b=0;for(let k=0;k<M.length;k++)b+=M[k];for(let k=0;k<M.length;k++)M[k]*=1/b,l.push({kind:a[k],chance:M[k]});return l}return(i,c)=>(U(),z(re,null,[le(" Mob Level: "),ve(w("input",{"onUpdate:modelValue":c[0]||(c[0]=l=>A(t).level=l)},null,512),[[lt,A(t).level,void 0,{number:!0}]]),le(" SD Enchant Chance: "),ve(w("input",{"onUpdate:modelValue":c[1]||(c[1]=l=>A(t).sdchance=l)},null,512),[[lt,A(t).sdchance,void 0,{number:!0}]]),le(" (value from 1 - 2) "),w("table",null,[(U(!0),z(re,null,De(s(),l=>(U(),z("tr",null,[w("td",null,V(l.kind),1),w("td",null,V(A(h).percent(l.chance,5)),1)]))),256))])],64))}}),ag=Ot(rg,[["__scopeId","data-v-24b3329f"]]),ng=w("td",null,"Nitro Speed",-1),lg=["value"],ug=w("td",null,"Current Level",-1),og=w("td",null,"Target Level",-1),cg=w("td",null,"Guild EXP per hour",-1),hg=["value"],fg=w("td",null,"Guild Member's Emblem Disasambled",-1),dg=w("td",null,"Approximate Time Needed",-1),pg=st({__name:"Guild",setup(e){const t=tt("game"),s=xi().guild;function i(){let l=s.targetLevel-t.data.source.guildLevel;if(l>0&&s.expPerHour>0){let M=0,b=0,k=1-t.data.potion.talismans[0].passiveEffectValue;for(let y=0;y<l;y++){let T=t.data.source.guildLevel+y,O=Math.floor((500*(T+1)+50*Math.pow(T,2)+500*Math.pow(T/5,3)+2e3*Math.pow(T/10,6)+25e3*Math.pow(T/20,9)+3e5*Math.pow(T/30,12))*Math.pow(10,Math.max(0,T-300)/25))*k;M+=O}let P=s.expPerHour/3600*t.data.source.nitroSpeed;return b=M/P,h.secondsToDhms(b)}else return 0}function c(l){s.expPerHour=h.convertFrom(l.target.value)}return(l,M)=>(U(),z("table",null,[w("tr",null,[ng,w("td",null,[w("input",{type:"text",size:"12",value:A(h).tDigit(A(t).data.source.nitroSpeed,1),onChange:M[0]||(M[0]=b=>A(t).data.source.nitroSpeed=parseFloat(b.target.value))},null,40,lg)])]),w("tr",null,[ug,w("td",null,[ve(w("input",{type:"text",size:"12","onUpdate:modelValue":M[1]||(M[1]=b=>A(t).data.source.guildLevel=b)},null,512),[[lt,A(t).data.source.guildLevel,void 0,{number:!0}]])])]),w("tr",null,[og,w("td",null,[ve(w("input",{type:"text",size:"12","onUpdate:modelValue":M[2]||(M[2]=b=>A(s).targetLevel=b)},null,512),[[lt,A(s).targetLevel,void 0,{number:!0}]])])]),w("tr",null,[cg,w("td",null,[w("input",{type:"text",size:"12",value:A(h).convertTo(A(s).expPerHour),onChange:M[3]||(M[3]=b=>c(b))},null,40,hg)])]),w("tr",null,[fg,w("td",null,[ve(w("input",{type:"text",size:"12","onUpdate:modelValue":M[4]||(M[4]=b=>A(t).data.potion.talismans[0].disassembledNum=b)},null,512),[[lt,A(t).data.potion.talismans[0].disassembledNum,void 0,{number:!0}]]),le("Reduce Guild EXP requirement to level by "+V(A(h).percent(A(t).data.potion.talismans[0].passiveEffectValue)),1)])]),w("tr",null,[dg,w("td",null,V(i()),1)])]))}}),gg=w("tr",null,[w("th",null,"Talisman"),w("th",null,"Level"),w("th",null,"Cost"),w("th",null,"Fragments"),w("th",null,"Per WA"),w("th",null,"frag / cost")],-1),mg=["onUpdate:modelValue"],Mg=["onUpdate:modelValue"],wg=w("hr",null,null,-1),Sg={class:"green"},Ag={class:"green"},bg=st({__name:"Talisman",setup(e){const t=tt("game"),s=xi().talisman;function i(b){return b.level==50?0:b.Cost(b.level+1)}function c(){let b="",k=0;for(let P=0;P<t.data.potion.talismans.length;P++){const y=t.data.potion.talismans[P],T=y.talismanDisassembleFragmentNumPerLevel*y.level*s.perWA[P],O=y.level==50?0:y.Cost(y.level+1),Y=O?T/O:0;k<Y&&(k=Y,b=Pe.PotionName(y.kind))}return b}function l(){let b=0;for(let k=0;k<t.data.potion.talismans.length;k++){const P=t.data.potion.talismans[k],y=P.talismanDisassembleFragmentNumPerLevel*P.level*s.perWA[k];b+=y}return h.tDigit(b)}function M(b,k){const P=b.talismanDisassembleFragmentNumPerLevel*b.level*s.perWA[k]|0,y=b.level==50?0:b.Cost(b.level+1),T=y?P/y:0;return h.tDigit(T,5)}return M(t.data.potion.talismans[5],5),(b,k)=>(U(),z(re,null,[w("table",null,[gg,(U(!0),z(re,null,De(A(t).data.potion.talismans,(P,y)=>(U(),z("tr",null,[w("td",null,V(A(Pe).PotionName(P.kind)),1),w("td",null,[ve(w("input",{"onUpdate:modelValue":T=>P.level=T,size:"4"},null,8,mg),[[lt,P.level,void 0,{number:!0}]])]),w("td",{style:{"padding-right":"10px"},class:Ft(P.level==50?"orange":"")},V(P.level==50?"MAX":A(h).tDigit(i(P))),3),w("td",null,V(P.talismanDisassembleFragmentNumPerLevel*P.level*A(s).perWA[y]),1),w("td",null,[ve(w("input",{"onUpdate:modelValue":T=>A(s).perWA[y]=T,size:"4"},null,8,Mg),[[lt,A(s).perWA[y]]])]),w("td",null,V(M(P,y)),1)]))),256))]),wg,w("p",null,[le(" Most efficient talisman to level up: "),w("span",Sg,V(c()),1)]),w("p",null,[le(" Total talisman fragments per WA: "),w("span",Ag,V(l()),1)])],64))}});var yt=(e=>(e[e.Nothing=0]="Nothing",e[e.Equipment=1]="Equipment",e[e.OptionEffect=2]="OptionEffect",e[e.ForgeEffects=3]="ForgeEffects",e[e.EquipmentLoadout=4]="EquipmentLoadout",e))(yt||{});const lo=Ma("clipboard",()=>{const e=Ct(),t=Ct(yt.Nothing);return{data:e,type:t}}),ms=e=>($s("data-v-229ba62b"),e=e(),zs(),e),kg=["tabindex","src"],Eg={class:"head"},Dg=["src"],Rg={key:0,class:"purple"},Cg={class:"green"},yg=ms(()=>w("h5",null,"Information",-1)),Pg={key:0},vg={class:"green"},Bg={class:"green"},Lg=ms(()=>w("br",null,null,-1)),Tg=ms(()=>w("h5",null,"Effect",-1)),xg=["innerHTML"],Gg={key:0,class:"gray"},Fg=ms(()=>w("br",null,null,-1)),Ig=ms(()=>w("h5",null,"Forged Effect",-1)),Hg={class:"orange"},_g={class:"orange"},Vg=ms(()=>w("br",null,null,-1)),Ng=ms(()=>w("h5",null,"Proficiency",-1)),qg={class:"green"},Ug={class:"green"},Wg={class:"wrapper"},Og={class:"head"},$g=["src"],zg={key:0,value:"0"},Jg=["selected","value"],Xg=ms(()=>w("h5",null,"Information",-1)),jg={key:0},Yg={class:"green"},Qg={class:"green"},Zg=ms(()=>w("br",null,null,-1)),Kg=ms(()=>w("h5",null,"Effect",-1)),em=["innerHTML"],tm=ms(()=>w("br",null,null,-1)),sm={style:{display:"flex"}},im=["onUpdate:modelValue"],rm=["value"],am=["onUpdate:modelValue"],nm=["value","selected"],lm=["onUpdate:modelValue","min","max","value"],um=ms(()=>w("br",null,null,-1)),om={class:"orange"},cm=["onUpdate:modelValue"],hm=ms(()=>w("br",null,null,-1)),fm=st({__name:"EquipmentInfo",props:{id:{}},setup(e){const t=e,s=Ct(!1),i=Ct(),c=tt("game"),l=lo(),M=c.data.inventory.equipmentSlots[t.id],b=Ct(),k=Vt(()=>{let O=4;return M.forgeEffects.forEach((Y,Q)=>{Y.IsForged()&&O--}),O});function P(){const O="img/equip";if(M.slotId<500)return`${O}/${g[M.kind]}.png`;if(M.kind==0)switch(M.slotPart){case F.Weapon:return`${O}/EquipSlotWeapon.png`;case F.Armor:return`${O}/EquipSlotArmor.png`;case F.Jewelry:return`${O}/EquipSlotJewelry.png`}else return`${O}/${g[M.kind]}.png`}function y(O){switch(l.type=O,O){case yt.Equipment:l.data=M.Copy(yt.Equipment);break;case yt.OptionEffect:l.data=M.Copy(yt.OptionEffect);break;case yt.ForgeEffects:l.data=M.Copy(yt.ForgeEffects);break}}function T(){switch(l.type){case yt.Equipment:M.Paste(yt.Equipment,l.data);break;case yt.OptionEffect:M.Paste(yt.OptionEffect,l.data);break;case yt.ForgeEffects:M.Paste(yt.ForgeEffects,l.data);break}}return(O,Y)=>(U(),z("div",null,[X(xn,{style:{width:"700px"}},Dn({default:ut(()=>[w("img",{tabindex:t.id,ref_key:"img",ref:i,class:Ft(["icon48",A(M).isDisabled()&&A(M).slotId>500?"disabled":""]),src:P(),onClick:Y[0]||(Y[0]=Q=>A(M).isDisabled()?null:b.value.showModal()),onMouseoverOnce:Y[1]||(Y[1]=Q=>s.value=!0),onMouseover:Y[2]||(Y[2]=Q=>i.value.focus()),onKeydown:[Y[3]||(Y[3]=Dl(El(Q=>y(A(yt).Equipment),["ctrl"]),["c"])),Y[4]||(Y[4]=Dl(El(Q=>T(),["ctrl"]),["v"]))]},null,42,kg)]),_:2},[A(M).kind!=0&&s.value?{name:"content",fn:ut(()=>[w("div",Eg,[w("img",{class:"icon96",src:P()},null,8,Dg),A(M).globalInfo.isArtifact?(U(),z("span",Rg,"[Artifact]")):ht("",!0),le(" "+V(A(Pe).EquipmentName(A(M).kind))+" < ",1),w("span",Cg,"Lv "+V(A(M).level),1),le(" > "),(U(!0),z(re,null,De(A(M).optionEffects,(Q,ge)=>(U(),z("span",{class:Ft(Q.isAfter?"purple":"yellow")},[ge<A(M).totalOptionNum.Value()?(U(),z(re,{key:0},[le(" [ "+V(A(Pe).EquipmentEffectName(Q.kind))+" "+V(Q.kind!=0?Q.level:"")+" ] ",1)],64)):ht("",!0)],2))),256))]),yg,w("p",null,"-Type : "+V(A(F)[A(M).globalInfo.part]),1),w("p",null,"-Rarity : "+V(A(q)[A(M).globalInfo.rarity]),1),A(M).setKind?(U(),z("p",Pg,[le(" -Unique : "+V(A(pe)[A(M).globalInfo.setKind])+" Set ",1),w("span",vg,"[Effect Bonus "+V(A(h).percent(A(M).EffectMultiplierFromSetItem(A(M).heroKind)-1))+"]",1),le(" Equipping "),w("span",Bg,V(A(c).data.inventory.SetItemEquippedNum(A(M).setKind,A(M).heroKind)),1),le(" / 8 ")])):ht("",!0),Lg,Tg,(U(!0),z(re,null,De(A(M).globalInfo.effects,(Q,ge)=>(U(),z("p",{innerHTML:A(Pe).EquipmentEffect(Q.kind,A(M).EffectValue(A(M).OriginalEffectValue(ge),A(M).heroKind),!1,A(M).EffectValue(A(M).OriginalEffectIncrementPerLevel(ge),A(M).heroKind),!1)},null,8,xg))),256)),(U(!0),z(re,null,De(A(M).optionEffects,(Q,ge)=>(U(),z("p",null,[ge<A(M).totalOptionNum.value?(U(),z(re,{key:0},[le(V(A(Pe).EquipmentEffect(Q.kind,A(M).EffectValue(Q.effectValue,A(M).heroKind)))+" ",1),Q.kind!=0?(U(),z("span",Gg,"("+V(A(Pe).EquipmentEffect(Q.kind,A(M).EffectValue(Q.MinEffectValue(),A(M).heroKind),!1,0,!0))+" ~ "+V(A(Pe).EquipmentEffect(Q.kind,A(M).EffectValue(Q.MaxEffectValue(),A(M).heroKind),!1,0,!0))+")",1)):ht("",!0)],64)):ht("",!0)]))),256)),Fg,Ig,(U(!0),z(re,null,De(A(M).forgeEffects,Q=>(U(),z("p",Hg,[Q.effectValue>0?(U(),z(re,{key:0},[le(" - "+V(Q.EffectString()),1)],64)):ht("",!0)]))),256)),(U(!0),z(re,null,De(k.value,Q=>(U(),z("p",_g,"- [Forging Available]"))),256)),Vg,Ng,(U(!0),z(re,null,De(A(M).globalInfo.levelMaxEffects,(Q,ge)=>(U(),z("p",null,[le(" -"+V(A(v)[ge])+" < ",1),w("span",qg,"Lv "+V(A(M).globalInfo.levels[ge].value),1),le(" >: "),w("span",Ug,"["+V(A(Pe).EquipmentEffectName(Q.kind))+" + "+V(Q.kind==0?A(M).globalInfo.rarity==A(q).Epic?3:A(M).globalInfo.rarity==A(q).Rare||A(M).globalInfo.rarity==A(q).SuperRare?2:1:A(h).convertTo(A(M).EffectValue(Q.EffectValue(0),A(M).heroKind),2,Q.valueKind))+"]",1)]))),256))]),key:"0"}:void 0]),1024),s.value?(U(),z("dialog",{key:0,ref_key:"dialog",ref:b,onMousedown:Y[8]||(Y[8]=Q=>{Q.target.nodeName==b.value.nodeName&&b.value.close()})},[w("div",Wg,[w("div",Og,[w("img",{class:"icon96",src:P()},null,8,$g),w("select",{name:"kind",onChange:Y[5]||(Y[5]=Q=>A(M).kind=parseInt(Q.target.value))},[A(M).slotPart!=A(F).Weapon?(U(),z("option",zg,"Nothing")):ht("",!0),(U(!0),z(re,null,De(A(c).data.equipment.globalInformations.filter(Q=>Q.part==A(M).slotPart),Q=>(U(),z("option",{selected:Q.kind==A(M).kind,value:Q.kind},V(A(Pe).EquipmentName(Q.kind)),9,Jg))),256))],32)]),Xg,w("p",null,"-Type : "+V(A(F)[A(M).globalInfo.part]),1),w("p",null,"-Rarity : "+V(A(q)[A(M).globalInfo.rarity]),1),A(M).setKind?(U(),z("p",jg,[le(" -Unique : "+V(A(pe)[A(M).globalInfo.setKind])+" Set ",1),w("span",Yg,"[Effect Bonus "+V(A(h).percent(A(M).EffectMultiplierFromSetItem(A(M).heroKind)-1))+"]",1),le(" Equipping "),w("span",Qg,V(A(c).data.inventory.SetItemEquippedNum(A(M).setKind,A(M).heroKind)),1),le(" / 8 ")])):ht("",!0),Zg,Kg,(U(!0),z(re,null,De(A(M).globalInfo.effects,(Q,ge)=>(U(),z("p",{innerHTML:A(Pe).EquipmentEffect(Q.kind,A(M).EffectValue(A(M).OriginalEffectValue(ge),A(M).heroKind),!1,A(M).EffectValue(A(M).OriginalEffectIncrementPerLevel(ge),A(M).heroKind),!1)},null,8,em))),256)),tm,(U(!0),z(re,null,De(A(M).optionEffects,(Q,ge)=>(U(),z("p",sm,[ge<A(M).totalOptionNum.Value()?(U(),z(re,{key:0},[ve(w("select",{"onUpdate:modelValue":Se=>Q.kind=Se,name:"optionKind"},[(U(!0),z(re,null,De(A(N).EquipmentEffectKind,(Se,ke)=>(U(),z("option",{value:ke},V(A(Pe).EquipmentEffectName(ke)),9,rm))),256))],8,im),[[ji,Q.kind]]),Q.kind?(U(),z(re,{key:0},[le("  Lv  "),ve(w("select",{"onUpdate:modelValue":Se=>Q.level=Se,name:"optionLevel"},[(U(!0),z(re,null,De(Q.MaxLevel(),Se=>(U(),z("option",{value:Se,selected:Q.level==Se},V(Se),9,nm))),256))],8,am),[[ji,Q.level]]),ve(w("input",{"onUpdate:modelValue":Se=>Q.effectValue=Se,type:"range",step:"0.00000001",min:Q.MinEffectValue(),max:Q.MaxEffectValue(),value:Q.effectValue,name:"optionValue"},null,8,lm),[[lt,Q.effectValue,void 0,{lazy:!0}]]),le(" "+V(A(Pe).EquipmentEffect(Q.kind,A(M).EffectValue(Q.effectValue,A(M).heroKind),!1,0,!0)),1)],64)):ht("",!0)],64)):ht("",!0)]))),256)),um,(U(!0),z(re,null,De(A(M).forgeEffects,Q=>(U(),z("p",om,[ve(w("input",{type:"text","onUpdate:modelValue":ge=>Q.effectValue=ge,name:"forgeValue",size:"8"},null,8,cm),[[lt,Q.effectValue,void 0,{number:!0,lazy:!0}]]),le("- "+V(Q.EffectString()),1)]))),256)),hm,w("button",{onClick:Y[6]||(Y[6]=Q=>y(A(yt).OptionEffect)),class:"btn btn-gray"},"Copy All Enchantments"),w("button",{onClick:Y[7]||(Y[7]=Q=>y(A(yt).ForgeEffects)),class:"btn btn-gray"},"Copy All Anvil Effects")])],544)):ht("",!0)]))}}),va=Ot(fm,[["__scopeId","data-v-229ba62b"]]),wa=e=>($s("data-v-155b9ee4"),e=e(),zs(),e),dm=["tabindex","src"],pm={class:"head"},gm=["src"],mm={key:0},Mm={class:"green"},wm=wa(()=>w("br",null,null,-1)),Sm=wa(()=>w("br",null,null,-1)),Am={style:{"font-size":"12px"}},bm={style:{"font-size":"12px"}},km=wa(()=>w("h5",null,"Equipped Effect",-1)),Em={class:"wrapper"},Dm={class:"head"},Rm=["src"],Cm=["value"],ym={style:{"font-size":"12px"}},Pm=wa(()=>w("h5",null,"Equipped Effect",-1)),vm=st({__name:"PotionInfo",props:{id:{}},setup(e){const t=e,s=Ct(!1),i=Ct(),l=tt("game").data.inventory.potionSlots[t.id],M=Ct();function b(){const k="img/equip";return l.kind==0?`${k}/EquipSlotPotion.png`:`${k}/${x[l.kind]}.png`}return(k,P)=>(U(),z("div",null,[X(xn,{style:{width:"700px"}},Dn({default:ut(()=>[w("img",{tabindex:t.id,ref_key:"img",ref:i,class:Ft(["icon48",A(l).isDisabled()?"disabled":""]),src:b(),onClick:P[0]||(P[0]=y=>A(l).isDisabled()?null:M.value.showModal()),onMouseoverOnce:P[1]||(P[1]=y=>s.value=!0),onMouseover:P[2]||(P[2]=y=>i.value.focus())},null,42,dm)]),_:2},[A(l).kind!=0&&s.value?{name:"content",fn:ut(()=>[w("div",pm,[w("img",{class:"icon96",src:b()},null,8,gm),le(" "+V(A(Pe).PotionName(A(l).kind))+" ",1),A(l).type!=A(Te).Trap?(U(),z("span",mm,[le("< "),w("span",Mm,"Lv "+V(A(l).level),1),le(" >")])):ht("",!0),wm,Sm,w("p",Am,"-Type : "+V(A(Pe).PotionTypeString(A(l).type)),1),w("p",bm,"-Stack #: "+V(A(l).stack)+" / 30",1)]),km,w("p",null,V(A(Pe).PotionEffect(A(l).kind,A(l).effectValue,!1)),1)]),key:"0"}:void 0]),1024),s.value?(U(),z("dialog",{key:0,ref_key:"dialog",ref:M,onMousedown:P[5]||(P[5]=y=>{y.target.nodeName==M.value.nodeName&&M.value.close()})},[w("div",Em,[w("div",Dm,[w("img",{class:"icon96",src:b()},null,8,Rm),ve(w("select",{"onUpdate:modelValue":P[3]||(P[3]=y=>A(l).kind=y),name:"kind"},[(U(!0),z(re,null,De(A(N).PotionKind,(y,T)=>(U(),z("option",{value:T},V(A(Pe).PotionName(T)),9,Cm))),256))],512),[[ji,A(l).kind,void 0,{lazy:!0,number:!0}]]),w("p",ym,"-Type : "+V(A(Pe).PotionTypeString(A(l).type)),1),w("p",null,[le("-Stack #: "),ve(w("input",{"onUpdate:modelValue":P[4]||(P[4]=y=>A(l).stack=y),size:"6",name:"stack"},null,512),[[lt,A(l).stack,void 0,{lazy:!0,number:!0}]]),le(" / 30")])]),Pm,w("p",null,V(A(Pe).PotionEffect(A(l).kind,A(l).effectValue,!1)),1)])],544)):ht("",!0)]))}}),Bm=Ot(vm,[["__scopeId","data-v-155b9ee4"]]),Lm={class:"wrapper"},Tm=st({__name:"AppDialog",setup(e){const t=Ct();function s(i){i.target.nodeName==t.value.nodeName&&t.value.close()}return(i,c)=>(U(),z(re,null,[w("span",{onClick:c[0]||(c[0]=l=>t.value.showModal())},[zi(i.$slots,"trigger",{},()=>[le("Dialog Open")],!0)]),w("dialog",{ref_key:"dialog",ref:t,onMousedown:s},[w("div",Lm,[zi(i.$slots,"content",{},()=>[le("Dialog Content")],!0)])],544)],64))}}),vl=Ot(Tm,[["__scopeId","data-v-c02ec022"]]),Gn=e=>($s("data-v-0f624bf8"),e=e(),zs(),e),xm={class:"container"},Gm=Gn(()=>w("h1",{style:{"text-align":"center"}},"Equipment Breakdown",-1)),Fm=Gn(()=>w("h3",null,"Equipment List",-1)),Im=Gn(()=>w("h3",null,"Enchantements List",-1)),Hm=st({__name:"EquipmentBreakdown",setup(e){const t=tt("game"),s=Vt(()=>520+t.data.source.currentHero*720+t.data.source.equipmentLoadoutIds[t.data.source.currentHero]*72);function i(){let l={};for(let M=s.value;M<s.value+72;M++){if(t.data.inventory.equipmentSlots[M].kind==0||t.data.inventory.equipmentSlots[M].isDisabled())continue;let b=Pe.EquipmentName(t.data.inventory.equipmentSlots[M].kind);l[b]=l[b]?l[b]+1:1}return l}function c(){let l={};for(let M=s.value;M<s.value+72;M++){const b=t.data.inventory.equipmentSlots[M];if(!(b.kind==0||b.isDisabled()))for(let k=0;k<b.optionEffects.length;k++){if(b.optionEffects[k].kind==0)continue;const P=Pe.EquipmentEffectName(b.optionEffects[k].kind);l[P]=l[P]?l[P]+1:1}}return l}return(l,M)=>(U(),z("div",xm,[Gm,w("div",null,[Fm,(U(!0),z(re,null,De(i(),(b,k)=>(U(),z("p",null,V(k)+" x"+V(b),1))),256))]),w("div",null,[Im,(U(!0),z(re,null,De(c(),(b,k)=>(U(),z("p",null,V(k)+" x"+V(b),1))),256))])]))}}),_m=Ot(Hm,[["__scopeId","data-v-0f624bf8"]]);var Es=(e=>(e[e.HeroKind=0]="HeroKind",e[e.EquipmentKind=1]="EquipmentKind",e[e.Weapon=2]="Weapon",e[e.Armor=3]="Armor",e[e.Jewelry=4]="Jewelry",e[e.PotionKind=5]="PotionKind",e[e.SuperDungeon=6]="SuperDungeon",e[e.EquipmentEffectKind=7]="EquipmentEffectKind",e[e.EquipmentForgeEffectKind=8]="EquipmentForgeEffectKind",e[e.Number=9]="Number",e[e.MonsterSpecies=10]="MonsterSpecies",e[e.MonsterColor=11]="MonsterColor",e[e.ChallengeMonsterKind=12]="ChallengeMonsterKind",e))(Es||{});const Vm=["value"],Nm={key:1,style:{display:"inline-block"}},qm={style:{display:"flex"}},Um=["src","title","onClick"],Wm=st({__name:"AppSelect",props:xu({type:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(e){const t=e,s=tt("game"),i=Xu(e,"modelValue");function c(l){let M=[];switch(l){case Es.EquipmentEffectKind:for(let b=0;b<N.EquipmentEffectKind;b++)M.push(Pe.EquipmentEffectName(b));break;case Es.MonsterSpecies:for(let b=0;b<N.MonsterSpecies;b++)M.push(Pe.MonsterSpeciesName(b));break;case Es.MonsterColor:for(let b=0;b<N.MonsterColor;b++)M.push(_t[b]);break;case Es.ChallengeMonsterKind:return["Florzporb","Arachnetta","Guardian Kor","Nostro","Lady Emelda","Nari Sune","Octobaddie","Bananoon","Glorbliorbus","Distortion Slime"]}return M}return(l,M)=>(U(),z(re,null,[t.type!=A(Es).HeroKind?ve((U(),z("select",{key:0,"onUpdate:modelValue":M[0]||(M[0]=b=>i.value=b),name:"select"},[(U(!0),z(re,null,De(c(t.type),(b,k)=>(U(),z("option",{value:k},V(b),9,Vm))),256))],512)),[[ji,i.value]]):ht("",!0),t.type==A(Es).HeroKind?(U(),z("div",Nm,[w("div",qm,[(U(),z(re,null,De(6,(b,k)=>w("img",{src:`img/hero/${A(v)[k]}.png`,class:Ft({inactive:k!=A(s).data.source.currentHero}),title:A(v)[k],onClick:P=>A(s).data.source.currentHero=k},null,10,Um)),64))])])):ht("",!0)],64))}}),dr=Ot(Wm,[["__scopeId","data-v-a1bba979"]]),Om=["onClick"],$m={class:"container"},zm=st({__name:"EnchantFinder",setup(e){const t=tt("game"),s=Ct(0),i=Ct(1),c=Vt(()=>{let b=[];if(s.value==0)return b;for(let k=0;k<4840;k++){const P=t.data.inventory.equipmentSlots[k];for(let y=0;y<P.optionEffects.length;y++)if(P.optionEffects[y].kind==s.value){b.push(P);break}}return b}),l=Vt(()=>c.value.map(b=>b.slotId));function M(b){const k=(b-1)*52,P=k+52;for(let y=0;y<l.value.length;y++){const T=l.value[y];if(T>=k&&T<P)return"green"}}return(b,k)=>(U(),z(re,null,[le(" Search Enchant: "),X(dr,{type:A(Es).EquipmentEffectKind,modelValue:s.value,"onUpdate:modelValue":k[0]||(k[0]=P=>s.value=P)},null,8,["type","modelValue"]),w("div",null,[(U(),z(re,null,De(9,P=>w("button",{onClick:y=>i.value=P,class:Ft(i.value==P?"yellow":M(P))},V(P),11,Om)),64))]),w("div",$m,[(U(),z(re,null,De(52,P=>w("div",{class:Ft(l.value.includes(52*(i.value-1)+P-1)?"found":"")},V(52*(i.value-1)+P-1),3)),64))]),(U(!0),z(re,null,De(c.value,(P,y)=>(U(),z("p",null,V(y+1)+". "+V(P.SlotString()),1))),256))],64))}}),Jm=Ot(zm,[["__scopeId","data-v-ca45f371"]]),uo=e=>($s("data-v-8fffb912"),e=e(),zs(),e),Xm={style:{display:"flex",height:"24px"}},jm=["onClick"],Ym=uo(()=>w("button",{class:"blue small",title:"Equipment Breakdown"},"☰",-1)),Qm=uo(()=>w("button",{class:"blue small",title:"Search"},"🔎︎",-1)),Zm={style:{display:"flex",margin:"3px 0","align-items":"center"}},Km={class:"part"},eM={class:"block"},tM={class:"part"},sM={class:"block"},iM={class:"part"},rM={class:"block"},aM={class:"part"},nM={class:"block-potion"},lM=st({__name:"EquipmentLoadout",setup(e){const t=tt("game"),s=Vt(()=>520+t.data.source.currentHero*720+t.data.source.equipmentLoadoutIds[t.data.source.currentHero]*72);return(i,c)=>(U(),z("div",null,[w("div",Xm,[(U(),z(re,null,De(7,(l,M)=>w("button",{class:Ft(["blue small",{yellow:M==A(t).data.source.equipmentLoadoutIds[A(t).data.source.currentHero]}]),onClick:b=>A(t).data.source.equipmentLoadoutIds[A(t).data.source.currentHero]=M}," Loadout "+V(l),11,jm)),64)),X(vl,null,{trigger:ut(()=>[Ym]),content:ut(()=>[X(_m)]),_:1}),X(vl,null,{trigger:ut(()=>[Qm]),content:ut(()=>[X(Jm)]),_:1})]),w("div",Zm,[X(dr,{type:A(Es).HeroKind},null,8,["type"]),le("  "+V(A(v)[A(t).data.source.currentHero])+" "+V(A(t).data.source.isSuperDungeon?`Grade: ${A(t).data.source.heroGrade[A(t).data.source.currentHero]}`:`Level: ${A(t).data.source.heroLevel[A(t).data.source.currentHero]}`),1)]),w("div",null,[w("div",Km,[w("div",eM,[(U(),z(re,null,De(24,(l,M)=>X(va,{id:s.value+M,class:"equipment",key:s.value+M},null,8,["id"])),64))])]),w("div",tM,[w("div",sM,[(U(),z(re,null,De(24,(l,M)=>X(va,{id:s.value+M+24,class:"equipment",key:s.value+M},null,8,["id"])),64))])]),w("div",iM,[w("div",rM,[(U(),z(re,null,De(24,(l,M)=>X(va,{id:s.value+M+48,class:"equipment",key:s.value+M},null,8,["id"])),64))])]),w("div",aM,[w("div",nM,[(U(),z(re,null,De(6,(l,M)=>X(Bm,{id:260+M+A(t).data.source.currentHero*6,class:"equipment"},null,8,["id"])),64))])])])]))}}),uM=Ot(lM,[["__scopeId","data-v-8fffb912"]]),Si=e=>($s("data-v-cd6b42dd"),e=e(),zs(),e),oM={class:"panel"},cM=Si(()=>w("h3",null,"Main Stats",-1)),hM={class:"block"},fM={class:"block"},dM=Si(()=>w("h3",null,"Attack Stats",-1)),pM={class:"block"},gM=Si(()=>w("h3",null,"Defense Stats",-1)),mM={class:"block"},MM={class:"block"},wM=Si(()=>w("h3",null,"Gain Stats",-1)),SM={class:"block"},AM={class:"block"},bM=Si(()=>w("h3",null,"Skills",-1)),kM={class:"block"},EM={class:"block"},DM=Si(()=>w("h3",null,"Bestiary Stats",-1)),RM={class:"block"},CM=Si(()=>w("h3",null,"Region Stats",-1)),yM={class:"block"},PM=Si(()=>w("h3",null,"SD Stats",-1)),vM={class:"block"},BM={class:"block"},LM=st({__name:"HeroStats",setup(e){const t=tt("game"),s=xi();return ha(()=>{t.data.Update()}),(i,c)=>(U(),z("div",oM,[X(to,{"selected-index":A(s).heroStatsTabSelected,onTabChange:c[0]||(c[0]=l=>{A(s).heroStatsTabSelected=l})},{default:ut(()=>[X($t,{title:"Main"},{default:ut(()=>[A(s).heroStatsTabSelected==0?(U(),z(re,{key:0},[cM,w("div",hM,[(U(!0),z(re,null,De(A(t).data.stats.currentHero.basicStats,(l,M)=>(U(),zt(he,{name:A(m)[M],multiplier:`stats.currentHero.basicStats[${M}]`},null,8,["name","multiplier"]))),256)),X(he,{name:"Move Speed",multiplier:"stats.currentHero.stats[10]"},null,8,["multiplier"]),X(he,{name:"Equipment Drop Chance",multiplier:"stats.currentHero.stats[9]"},null,8,["multiplier"]),X(he,{name:"Equipment 1st Enchantment Slot Chance",multiplier:"stats.currentHero.optionEffectChance[0]"},null,8,["multiplier"]),X(he,{name:"Equipment 2nd Enchantment Slot Chance",multiplier:"stats.currentHero.optionEffectChance[1]"},null,8,["multiplier"]),X(he,{name:"Equipment 3rd Enchantment Slot Chance",multiplier:"stats.currentHero.optionEffectChance[2]"},null,8,["multiplier"]),X(he,{name:"Equipment Effect",multiplier:"equipment.effectMultiplier"},null,8,["multiplier"]),X(he,{name:"Potion Effect",multiplier:"potion.effectMultiplier"},null,8,["multiplier"])]),w("div",fM,[X(he,{name:"HP Regeneration",multiplier:"stats.currentHero.hpRegenerate","value-suffix":"/ sec"},null,8,["multiplier"]),X(he,{name:"MP Regeneration",multiplier:"stats.currentHero.mpRegenerate","value-suffix":"/ sec"},null,8,["multiplier"]),X(he,{name:"Blessing Effect",multiplier:`blessingInfo.effectMultipliers[${A(t).data.source.currentHero}]`},null,8,["multiplier"]),X(he,{name:"SD Damage Multiplier",multiplier:"battle.superDungeonCtrl.damageMultiplier"},null,8,["multiplier"]),X(he,{name:"SD Damage Cut Multiplier",multiplier:"battle.superDungeonCtrl.damageCutMultiplier"},null,8,["multiplier"]),X(he,{name:"SD Challange Boss Damage Multiplier",multiplier:"battle.superDungeonCtrl.sdChallengeBossDamageMultiplier"},null,8,["multiplier"]),X(he,{name:"SD Challange Boss Damage Cut Multiplier",multiplier:"battle.superDungeonCtrl.sdChallengeBossDamageCutMultiplier"},null,8,["multiplier"]),X(he,{name:"SD Armored Fury",multiplier:"battle.superDungeonCtrl.armoredFury"},null,8,["multiplier"]),X(he,{name:"SD Warded Fury",multiplier:"battle.superDungeonCtrl.wardedFury"},null,8,["multiplier"])])],64)):ht("",!0)]),_:1}),X($t,{title:"Attack"},{default:ut(()=>[A(s).heroStatsTabSelected==1?(U(),z(re,{key:0},[dM,w("div",pM,[(U(!0),z(re,null,De(A(t).data.stats.currentHero.elementDamages,(l,M)=>(U(),zt(he,{multiplier:`stats.currentHero.elementDamages[${M}]`,name:A(B)[M]+" Damage"},null,8,["multiplier","name"]))),256)),X(he,{multiplier:"stats.currentHero.stats[15]",name:"Armored Fury"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[16]",name:"Warded Fury"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[6]",name:"Physical Critical Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[7]",name:"Magical Critical Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[8]",name:"Critical Damage"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.extraAfterDamage",name:"Extra After Damage"},null,8,["multiplier"])])],64)):ht("",!0)]),_:1}),X($t,{title:"Defense"},{default:ut(()=>[A(s).heroStatsTabSelected==2?(U(),z(re,{key:0},[gM,w("div",mM,[(U(),z(re,null,De(5,l=>X(he,{multiplier:`stats.currentHero.stats[${l-1}]`,name:A(B)[l]+" Resistance"},null,8,["multiplier","name"])),64)),X(he,{multiplier:"stats.currentHero.stats[5]",name:"Debuff Resistance"},null,8,["multiplier"]),(U(!0),z(re,null,De(A(t).data.stats.currentHero.elementAbsoptions,(l,M)=>(U(),zt(he,{multiplier:`stats.currentHero.elementAbsoptions[${M}]`,name:A(B)[M]+" Absorption"},null,8,["multiplier","name"]))),256))])],64)):ht("",!0),w("div",MM,[(U(!0),z(re,null,De(A(t).data.stats.currentHero.elementInvalids,(l,M)=>(U(),zt(he,{multiplier:`stats.currentHero.elementInvalids[${M}]`,name:A(B)[M]+" Nullify Chance"},null,8,["multiplier","name"]))),256))])]),_:1}),X($t,{title:"Gains"},{default:ut(()=>[A(s).heroStatsTabSelected==3?(U(),z(re,{key:0},[wM,w("div",SM,[X(he,{multiplier:"stats.currentHero.stats[14]",name:"EXP Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.globalStats[0]",name:"Gold Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.globalStats[1]",name:"Stone Gain","value-suffix":"/ kill"},null,8,["multiplier"]),X(he,{multiplier:"stats.globalStats[2]",name:"Crystal Gain","value-suffix":"/ kill"},null,8,["multiplier"]),X(he,{multiplier:"stats.globalStats[3]",name:"Leaf Gain","value-suffix":"/ kill"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[11]",name:"Skill Proficiency Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[12]",name:"Equipment Proficiency Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.guildExpGain",name:"Guild EXP Gain"},null,8,["multiplier"]),X(he,{multiplier:"area.townMaterialDungeonRewardMultiplier",name:"Town Material Gain"},null,8,["multiplier"]),X(he,{multiplier:"alchemy.alchemyPointGainMultiplier",name:"Alchemy Point Gain"},null,8,["multiplier"]),X(he,{multiplier:"alchemy.catalyst.essenceProductionMultiplier",name:"Essence Convertion Rate"},null,8,["multiplier"]),X(he,{multiplier:"superStats.currentHero.fameGain",name:"Fame Gain"},null,8,["multiplier"]),X(he,{multiplier:"sdg.dungeonCoinGain",name:"Dungeon Coin Gain"},null,8,["multiplier"])]),w("div",AM,[X(he,{multiplier:"stats.currentHero.stats[21]",name:"Artifact Proficiency Gain"},null,8,["multiplier"]),X(he,{multiplier:"town.researchPower[0]",name:"Stone Reasearch Power","value-suffix":"/ sec"},null,8,["multiplier"]),X(he,{multiplier:"town.researchPower[1]",name:"Crystal Reasearch Power","value-suffix":"/ sec"},null,8,["multiplier"]),X(he,{multiplier:"town.researchPower[2]",name:"Leaf Reasearch Power","value-suffix":"/ sec"},null,8,["multiplier"]),X(he,{multiplier:"rebirth.currentHero[0].rebirthPointGainFactor",name:"Tier 1 Rebirth Point Gain"},null,8,["multiplier"]),X(he,{multiplier:"rebirth.currentHero[1].rebirthPointGainFactor",name:"Tier 2 Rebirth Point Gain"},null,8,["multiplier"]),X(he,{multiplier:"rebirth.currentHero[2].rebirthPointGainFactor",name:"Tier 3 Rebirth Point Gain"},null,8,["multiplier"]),X(he,{multiplier:"expedition.expGainMultiplier",name:"Expedition EXP Gain"},null,8,["multiplier"]),X(he,{multiplier:"expedition.speedMultiplier",name:"Expedition Speed"},null,8,["multiplier"]),X(he,{multiplier:"expedition.rewardMultiplier",name:"Expedition Reward Amount"},null,8,["multiplier"]),X(he,{multiplier:"expedition.passiveEffectMultiplier",name:"Expedition Passive Effect"},null,8,["multiplier"]),X(he,{multiplier:"expedition.petExpGainMultiplier",name:"Expedition Pet EXP Gain"},null,8,["multiplier"])])],64)):ht("",!0)]),_:1}),X($t,{title:"Skills"},{default:ut(()=>[A(s).heroStatsTabSelected==4?(U(),z(re,{key:0},[bM,w("div",kM,[(U(!0),z(re,null,De(A(t).data.skill.skillLevelBonus,(l,M)=>(U(),zt(he,{multiplier:`skill.skillLevelBonus[${M}]`,name:A(v)[M]+" Skill Level Bonus"},null,8,["multiplier","name"]))),256)),(U(!0),z(re,null,De(A(t).data.skill.skillRangeMultiplier,(l,M)=>(U(),zt(he,{multiplier:`skill.skillRangeMultiplier[${M}]`,name:A(v)[M]+"'s Class Skills Range"},null,8,["multiplier","name"]))),256))]),w("div",EM,[(U(!0),z(re,null,De(A(t).data.skill.skillEffectRangeMultiplier,(l,M)=>(U(),zt(he,{multiplier:`skill.skillEffectRangeMultiplier[${M}]`,name:A(v)[M]+"'s Class Skills Area of Effect"},null,8,["multiplier","name"]))),256))])],64)):ht("",!0)]),_:1}),X($t,{title:"Bestiary"},{default:ut(()=>[A(s).heroStatsTabSelected==5?(U(),z(re,{key:0},[DM,w("div",RM,[X(he,{multiplier:`monster.doubleCaptureChance[${A(t).data.source.currentHero}]`,name:"Double Capture Chance"},null,8,["multiplier"]),X(he,{multiplier:`monster.captureTripleChance[${A(t).data.source.currentHero}]`,name:"Triple Capture  Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.petExpGainPerDefeat",name:"Pet EXP Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[13]",name:"Taming Point Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.loyaltyPoingGain",name:"Loyalty Point Gain"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[17]",name:"Pet Base Physical Critial Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[18]",name:"Pet Base Magical Critial Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[19]",name:"Pet Base Critial Damage"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[20]",name:"Pet Debuff Resistance"},null,8,["multiplier"]),X(he,{multiplier:"monster.petPassiveEffectMultiplier",name:"Pet Passive Effect"},null,8,["multiplier"])])],64)):ht("",!0)]),_:1}),X($t,{title:"Regions"},{default:ut(()=>[A(s).heroStatsTabSelected==6?(U(),z(re,{key:0},[CM,w("div",yM,[(U(!0),z(re,null,De(A(t).data.stats.currentHero.monsterDamages,(l,M)=>(U(),zt(he,{multiplier:`stats.currentHero.monsterDamages[${M}]`,name:"Damage to "+A(Z)[M]},null,8,["multiplier","name"]))),256))])],64)):ht("",!0)]),_:1}),X($t,{title:"SD"},{default:ut(()=>[A(s).heroStatsTabSelected==7?(U(),z(re,{key:0},[PM,w("div",vM,[(U(!0),z(re,null,De(A(t).data.stats.currentHero.basicStats,(l,M)=>(U(),zt(he,{name:A(m)[M],multiplier:`stats.currentHero.basicStats[${M}]`},null,8,["name","multiplier"]))),256)),X(he,{name:"SD Damage Multiplier",multiplier:"battle.superDungeonCtrl.damageMultiplier"},null,8,["multiplier"]),X(he,{name:"SD Challange Boss Damage Multiplier",multiplier:"battle.superDungeonCtrl.sdChallengeBossDamageMultiplier"},null,8,["multiplier"]),X(he,{name:"SD Armored Fury",multiplier:"battle.superDungeonCtrl.armoredFury"},null,8,["multiplier"]),X(he,{name:"SD Warded Fury",multiplier:"battle.superDungeonCtrl.wardedFury"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.extraAfterDamage",name:"Extra After Damage"},null,8,["multiplier"])]),w("div",BM,[(U(!0),z(re,null,De(A(t).data.stats.currentHero.elementDamages,(l,M)=>(U(),zt(he,{multiplier:`stats.currentHero.elementDamages[${M}]`,name:A(B)[M]+" Damage"},null,8,["multiplier","name"]))),256)),X(he,{multiplier:"stats.currentHero.stats[6]",name:"Physical Critical Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[7]",name:"Magical Critical Chance"},null,8,["multiplier"]),X(he,{multiplier:"stats.currentHero.stats[8]",name:"Critical Damage"},null,8,["multiplier"]),X(he,{name:"Damage to Challange Boss",multiplier:"stats.currentHero.monsterDamages[11]"},null,8,["multiplier"])])],64)):ht("",!0)]),_:1})]),_:1},8,["selected-index"])]))}}),TM=Ot(LM,[["__scopeId","data-v-cd6b42dd"]]),xM=st({__name:"AppDifference",props:{data:{},snap:{}},setup(e){const t=e,s=Vt(()=>t.data-t.snap);return(i,c)=>s.value!=0?(U(),z("span",{key:0,class:Ft({green:s.value>0,red:s.value<0})},V(A(Vi)(i.data,i.snap,!1)),3)):ht("",!0)}}),GM={style:{"margin-left":"10px"}},FM={class:"green"},IM={class:"orange"},HM=w("hr",null,null,-1),_M=w("h4",null,"Skill Damage Breakdown",-1),VM={style:{"font-size":"12px","border-collapse":"collapse"}},NM=w("td",null,"Base:",-1),qM=w("td",null,"Emelda",-1),UM=w("td",null,"Monster Resistance",-1),WM=w("td",null,"Critical Damage",-1),OM=w("td",null,"Damage Modifier",-1),$M=w("td",null,"Damage Modifier vs Boss",-1),zM={style:{"border-bottom":"1px solid #fff"}},JM=w("td",null,"Single Hit Damage",-1),XM=w("td",null,"Hit Count",-1),jM={key:1},YM=w("td",null,"Slayer Oil Bonus",-1),QM=w("td",null,"Extra After Bonus",-1),ZM={style:{"border-bottom":"1px solid #fff"}},KM=w("td",null,"Total Damage",-1),ew=w("td",null,"Cast Time",-1),tw=w("td",null,"DPS",-1),sw=st({__name:"SkillInformation",setup(e){const t=tt("game"),s=t.data.battle.Enemy(),i=s.AttackedInfo(),l=t.snap.battle.Enemy().AttackedInfo();return(M,b)=>(U(),z("div",GM,[w("p",null,[le(" Skill: "+V(A(Pe).SkillName(A(t).data.source.currentHero,0))+" ",1),w("span",FM,"Lv "+V(A(h).tDigit(A(i).skill.level,0))+" + "+V(A(h).tDigit(A(i).skill.levelBonus,0)),1),w("span",IM," < Rank "+V(A(i).skill.rank)+" >",1)]),w("p",null,"- "+V(A(B)[A(i).skill.element])+" Damage: "+V(A(h).tDigit(A(i).skill.DamageOrigin(A(i).hero,!0)))+" * "+V(A(h).tDigit(A(i).skill.HitCount(),0)),1),w("p",null,"- Cast Time: "+V(A(h).tDigit(A(i).skill.CalculateInterval(A(i).hero),3))+" sec",1),HM,_M,w("table",VM,[w("tr",null,[NM,w("td",null,V(A(t).data.source.isSuperDungeon?A(h).tDigit(Math.log10(Math.max(1,A(i).skill.Damage()))):A(h).tDigit(A(i).skill.Damage())),1)]),w("tr",null,[w("td",null,V(A(i).skill.element==A(B).Physical?"ATK":"MATK")+":",1),w("td",null,V(A(t).data.source.isSuperDungeon?"+":"*")+" "+V(A(h).tDigit(A(i).skill.element==A(B).Physical?A(i).hero.atk:A(i).hero.matk)),1)]),w("tr",null,[qM,w("td",null,"* "+V(A(h).percent(A(t).data.skill.ladyEmeldaEffectMultiplier[A(t).data.source.currentHero].Value())),1)]),w("tr",null,[UM,w("td",null,"* "+V(A(h).percent(A(s).DamageCutRate(A(i).damage,A(i).element),4))+" vs "+V(A(B)[A(i).element]),1)]),w("tr",null,[w("td",null,"Knowledge "+V(A(Z)[A(s).species]),1),w("td",null,"* "+V(A(h).percent(A(s).damageFactor)),1)]),w("tr",null,[w("td",null,"Element "+V(A(B)[A(i).element]),1),w("td",null,"* "+V(A(h).percent(A(s).DamageFactorElement(A(i).element))),1)]),w("tr",null,[WM,w("td",null,"* "+V(A(h).percent(A(i).hero.critDamage)),1)]),A(t).data.source.isSuperDungeon?(U(),z(re,{key:0},[w("tr",null,[OM,w("td",null,"* "+V(A(h).percent(A(t).data.battle.superDungeonCtrl.damageMultiplier.Value())),1)]),w("tr",null,[$M,w("td",null,"* "+V(A(h).percent(A(t).data.battle.superDungeonCtrl.sdChallengeBossDamageMultiplier.Value())),1)])],64)):ht("",!0),w("tr",zM,[JM,w("td",null,"= "+V(A(h).tDigit(A(i).DamagePerHit)),1)]),w("tr",null,[XM,w("td",null,"* "+V(A(h).tDigit(A(i).realHitCount,0)),1)]),A(i).slayerOilDamage>0?(U(),z("tr",jM,[YM,w("td",null,"* "+V(A(h).percent(A(i).SlayerOilValue))+" ("+V(A(h).tDigit(A(i).slayerOilDamage))+")",1)])):ht("",!0),w("tr",null,[QM,w("td",null,"* "+V(A(h).percent(A(i).hero.extraAfterDamage))+" ("+V(A(h).tDigit(A(i).extraAfterDamage))+")",1)]),w("tr",ZM,[KM,w("td",null,"= "+V(A(h).tDigit(A(i).totalDamage)),1)]),w("tr",null,[ew,w("td",null,"/ "+V(A(h).tDigit(A(i).castTime,3)),1)]),w("tr",null,[tw,w("td",null,[le("= "+V(A(h).tDigit(A(i).dps))+" ",1),X(xM,{data:A(i).dps,snap:A(l).dps},null,8,["data","snap"])])])])]))}}),iw={style:{width:"250px","margin-left":"10px"}},rw=w("h3",null,"Enemy",-1),aw={style:{display:"flex"}},nw=w("br",null,null,-1),lw=w("br",null,null,-1),uw=w("br",null,null,-1),ow=w("br",null,null,-1),cw=w("br",null,null,-1),hw=w("br",null,null,-1),fw=w("br",null,null,-1),dw=w("br",null,null,-1),pw=w("br",null,null,-1),gw=st({__name:"MonsterStats",setup(e){const t=tt("game"),s=Vt(()=>t.data.battle.Enemy());return(i,c)=>(U(),z("div",iw,[rw,w("div",aw,[X(dr,{type:A(Es).MonsterSpecies,modelValue:A(t).data.source.enemySpecies,"onUpdate:modelValue":c[0]||(c[0]=l=>A(t).data.source.enemySpecies=l),modelModifiers:{number:!0}},null,8,["type","modelValue"]),A(t).data.source.enemySpecies!=A(Z).Mimic?(U(),z(re,{key:0},[A(t).data.source.enemySpecies!=A(Z).ChallengeBoss?(U(),zt(dr,{key:0,type:A(Es).MonsterColor,modelValue:A(t).data.source.enemyColor,"onUpdate:modelValue":c[1]||(c[1]=l=>A(t).data.source.enemyColor=l),modelModifiers:{number:!0}},null,8,["type","modelValue"])):(U(),zt(dr,{key:1,type:A(Es).ChallengeMonsterKind,modelValue:A(t).data.source.enemyChallenge,"onUpdate:modelValue":c[2]||(c[2]=l=>A(t).data.source.enemyChallenge=l),modelModifiers:{number:!0}},null,8,["type","modelValue"]))],64)):ht("",!0)]),le(" Level: "),ve(w("input",{"onUpdate:modelValue":c[3]||(c[3]=l=>A(t).data.source.enemyLevel=l),size:"6",name:"monsterLevel"},null,512),[[lt,A(t).data.source.enemyLevel,void 0,{lazy:!0,number:!0}]]),nw,le(" HP: "+V(A(h).tDigit(s.value.hp)),1),lw,le(" DEF: "+V(A(h).tDigit(s.value.def)),1),uw,le(" MDEF: "+V(A(h).tDigit(s.value.mdef)),1),ow,le(" Fire Resistance: "+V(A(h).percent(s.value.fire)),1),cw,le(" Ice Resistance: "+V(A(h).percent(s.value.ice)),1),hw,le(" Thunder Resistance: "+V(A(h).percent(s.value.thunder)),1),fw,le(" Light Resistance: "+V(A(h).percent(s.value.light)),1),dw,le(" Dark Resistance: "+V(A(h).percent(s.value.dark)),1),pw]))}}),mw=e=>($s("data-v-dc27113e"),e=e(),zs(),e),Mw={class:"grid"},ww=mw(()=>w("hr",null,null,-1)),Sw=st({__name:"Equipment",setup(e){const t=tt("game");return(s,i)=>(U(),z("div",Mw,[w("div",null,[X(uM),(U(),zt(TM,{key:A(t).data.requireUpdate.value?"xxx":"yyy"}))]),w("div",null,[X(gw),ww,(U(),zt(sw,{key:A(t).data.requireUpdate.value?"aaa":"bbb"}))])]))}}),Aw=Ot(Sw,[["__scopeId","data-v-dc27113e"]]),bw={},kw=w("h3",null,"FAQ",-1),Ew=$u(`<ol><li><p>How to adjust Ruby Converter ratio without importing Save File?</p></li><div style="padding-top:10px;padding-bottom:10px;"> Type into browser javascript console (TotalModifier is number)<br><textarea cols="120" rows="2" spellcheck="false" style="resize:none;overflow:hidden;">\r
globalThis.Game.data.source.maxModifierCleareds[0] = TotalModifier</textarea></div><li>How to use equipment calculator?</li><div style="padding-top:10px;padding-bottom:10px;"><ul><li>Create Stat Snapshot</li><li>Click on item and modify it, new values should be shown in Stats Panel (it compares current values to Snapshot)</li><li>You can use Copy button to copy values to internal clipboard and use CTRL+V while hovering on another item to paste them</li><li>You can copy entire item by using CTRL+C and CTRL+V</li></ul></div></ol>`,1);function Dw(e,t){return U(),z(re,null,[kw,le(" Most function require using Import Save File otherwise it would require manually adding hundreds of values "),Ew],64)}const Rw=Ot(bw,[["render",Dw]]),Cw={},yw=$u("<h2 data-v-ec5fda53>0.1.21</h2><ul data-v-ec5fda53><li data-v-ec5fda53>Added Town tab to Data page</li></ul><h2 data-v-ec5fda53>0.1.20</h2><ul data-v-ec5fda53><li data-v-ec5fda53>Added Ability tab to Data page</li><li data-v-ec5fda53>Added Quest tab to Data page</li></ul><h2 data-v-ec5fda53>0.1.18</h2><ul data-v-ec5fda53><li data-v-ec5fda53>Some changes to skill breakdown layout plus added percentage comparison from snapshot</li><li data-v-ec5fda53>Extended Data-&gt;SD Upgrade to all Super Dungeon upgrades</li></ul><h2 data-v-ec5fda53>0.1.16</h2><ul data-v-ec5fda53><li data-v-ec5fda53>Image path fix</li></ul><h2 data-v-ec5fda53>0.1.15</h2><ul data-v-ec5fda53><li data-v-ec5fda53>Moved Enchanter Finder page to Equipment page under magnifying glass button</li><li data-v-ec5fda53>Changed Heroes select html element to hero eye images</li><li data-v-ec5fda53>Changed Equipment Breakdown style</li></ul>",10);function Pw(e,t){return yw}const vw=Ot(Cw,[["render",Pw],["__scopeId","data-v-ec5fda53"]]),oo=[{path:"/",name:"Home",component:Rf},{path:"/data",name:"Data",component:Mp},{path:"/equipment",name:"Equipment",component:Aw},{path:"/guild",name:"Guild",component:pg},{path:"/talisman",name:"Talisman",component:bg},{path:"/expedition",name:"Expedition",component:$0},{path:"/ruby-shard",name:"Ruby Shard",component:ig},{path:"/drop-chance",name:"Drop Chance",component:ag},{path:"/help",name:"Help",component:Rw},{path:"/changelog",name:"Changelog",component:vw}],Bw=st({__name:"Clipboard",setup(e){const t=lo();return(s,i)=>ve((U(),z("div",null,"Clipboard "+V(A(yt)[A(t).type]),513)),[[Bn,A(t).type!=A(yt).Nothing]])}}),Lw=Ot(Bw,[["__scopeId","data-v-cbf326c7"]]);class co{constructor(){o(this,"isSuperDungeon",!1);o(this,"isBlessing",!1);o(this,"superDungeonPowerupLevels",Array(21).fill(0));o(this,"superDungeonPowerupIsActive",!1);o(this,"enemyLevel",1);o(this,"enemyColor",0);o(this,"enemySpecies",0);o(this,"enemyChallenge",0);o(this,"ascendTime");o(this,"currentAreaKind",Array(6).fill(0));o(this,"currentAreaId",Array(6).fill(0));o(this,"isActiveBattle",Array(6).fill(!1));o(this,"blessingDurationLefts");o(this,"monsterDefeatedNumsSlime",Array(60).fill(0));o(this,"monsterDefeatedNumsMagicSlime",Array(60).fill(0));o(this,"monsterDefeatedNumsSpider",Array(60).fill(0));o(this,"monsterDefeatedNumsBat",Array(60).fill(0));o(this,"monsterDefeatedNumsFairy",Array(60).fill(0));o(this,"monsterDefeatedNumsFox",Array(60).fill(0));o(this,"monsterDefeatedNumsDevilFish",Array(60).fill(0));o(this,"monsterDefeatedNumsTreant",Array(60).fill(0));o(this,"monsterDefeatedNumsFlameTiger",Array(60).fill(0));o(this,"monsterDefeatedNumsUnicorn",Array(60).fill(0));o(this,"monsterDefeatedNumsMimic",Array(60).fill(0));o(this,"monsterDefeatedNumsChallenge",Array(100).fill(0));o(this,"monsterCapturedNumsSlime",Array(60).fill(0));o(this,"monsterCapturedNumsMagicSlime",Array(60).fill(0));o(this,"monsterCapturedNumsSpider",Array(60).fill(0));o(this,"monsterCapturedNumsBat",Array(60).fill(0));o(this,"monsterCapturedNumsFairy",Array(60).fill(0));o(this,"monsterCapturedNumsFox",Array(60).fill(0));o(this,"monsterCapturedNumsDevilFish",Array(60).fill(0));o(this,"monsterCapturedNumsTreant",Array(60).fill(0));o(this,"monsterCapturedNumsFlameTiger",Array(60).fill(0));o(this,"monsterCapturedNumsUnicorn",Array(60).fill(0));o(this,"monsterCapturedNumsMimic",Array(60).fill(0));o(this,"monsterCapturedNumsChallenge",Array(100).fill(0));o(this,"monsterMutantDefeatedNumsSlime",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsMagicSlime",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsSpider",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsBat",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsFairy",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsFox",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsDevilFish",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsTreant",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsFlameTiger",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsUnicorn",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsMimic",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsChallenge",Array(100).fill(0));o(this,"monsterMutantCapturedNumsSlime",Array(60).fill(0));o(this,"monsterMutantCapturedNumsMagicSlime",Array(60).fill(0));o(this,"monsterMutantCapturedNumsSpider",Array(60).fill(0));o(this,"monsterMutantCapturedNumsBat",Array(60).fill(0));o(this,"monsterMutantCapturedNumsFairy",Array(60).fill(0));o(this,"monsterMutantCapturedNumsFox",Array(60).fill(0));o(this,"monsterMutantCapturedNumsDevilFish",Array(60).fill(0));o(this,"monsterMutantCapturedNumsTreant",Array(60).fill(0));o(this,"monsterMutantCapturedNumsFlameTiger",Array(60).fill(0));o(this,"monsterMutantCapturedNumsUnicorn",Array(60).fill(0));o(this,"monsterMutantCapturedNumsMimic",Array(60).fill(0));o(this,"monsterMutantCapturedNumsChallenge",Array(100).fill(0));o(this,"summonSpecies");o(this,"summonColor");o(this,"isSetSummonPet");o(this,"materials");o(this,"movedDistance");o(this,"movedDistancePet");o(this,"heroLevel",Array(6).fill(0));o(this,"heroExp");o(this,"abilityPoints",Array(6).fill(0));o(this,"abilityPointsVitality",Array(6).fill(0));o(this,"abilityPointsStrength",Array(6).fill(0));o(this,"abilityPointsIntelligence",Array(6).fill(0));o(this,"abilityPointsAgility",Array(6).fill(0));o(this,"abilityPointsLuck",Array(6).fill(0));o(this,"combatRangeId");o(this,"superAbilityPoint",Array(6).fill(0));o(this,"heroFame",Array(6).fill(0));o(this,"heroGrade",Array(6).fill(0));o(this,"superAbilityPointsVitality",Array(6).fill(0));o(this,"superAbilityPointsStrength",Array(6).fill(0));o(this,"superAbilityPointsIntelligence",Array(6).fill(0));o(this,"superAbilityPointsAgility",Array(6).fill(0));o(this,"superAbilityPointsLuck",Array(6).fill(0));o(this,"currentAreaLevelsSlime",Array(20).fill(0));o(this,"currentAreaLevelsMagicSlime",Array(20).fill(0));o(this,"currentAreaLevelsSpider",Array(20).fill(0));o(this,"currentAreaLevelsBat",Array(20).fill(0));o(this,"currentAreaLevelsFairy",Array(20).fill(0));o(this,"currentAreaLevelsFox",Array(20).fill(0));o(this,"currentAreaLevelsDevilFish",Array(20).fill(0));o(this,"currentAreaLevelsTreant",Array(20).fill(0));o(this,"currentAreaLevelsFlameTiger",Array(20).fill(0));o(this,"currentAreaLevelsUnicorn",Array(20).fill(0));o(this,"areaIsReceivedFirstRewardSlime");o(this,"areaIsReceivedFirstRewardMagicSlime");o(this,"areaIsReceivedFirstRewardSpider");o(this,"areaIsReceivedFirstRewardBat");o(this,"areaIsReceivedFirstRewardFairy");o(this,"areaIsReceivedFirstRewardFox");o(this,"areaIsReceivedFirstRewardDevilFish");o(this,"areaIsReceivedFirstRewardTreant");o(this,"areaIsReceivedFirstRewardFlameTiger");o(this,"areaIsReceivedFirstRewardUnicorn");o(this,"areaCompleteNumsSlime");o(this,"areaCompleteNumsMagicSlime");o(this,"areaCompleteNumsSpider");o(this,"areaCompleteNumsBat");o(this,"areaCompleteNumsFairy");o(this,"areaCompleteNumsFox");o(this,"areaCompleteNumsDevilFish");o(this,"areaCompleteNumsTreant");o(this,"areaCompleteNumsFlameTiger");o(this,"areaCompleteNumsUnicorn");o(this,"areaBestTimesSlime");o(this,"areaBestTimesMagicSlime");o(this,"areaBestTimesSpider");o(this,"areaBestTimesBat");o(this,"areaBestTimesFairy");o(this,"areaBestTimesFox");o(this,"areaBestTimesDevilFish");o(this,"areaBestTimesTreant");o(this,"areaBestTimesFlameTiger");o(this,"areaBestTimesUnicorn");o(this,"areaBestGoldsSlime");o(this,"areaBestGoldsMagicSlime");o(this,"areaBestGoldsSpider");o(this,"areaBestGoldsBat");o(this,"areaBestGoldsFairy");o(this,"areaBestGoldsFox");o(this,"areaBestGoldsDevilFish");o(this,"areaBestGoldsTreant");o(this,"areaBestGoldsFlameTiger");o(this,"areaBestGoldsUnicorn");o(this,"areaBestExpsSlime");o(this,"areaBestExpsMagicSlime");o(this,"areaBestExpsSpider");o(this,"areaBestExpsBat");o(this,"areaBestExpsFairy");o(this,"areaBestExpsFox");o(this,"areaBestExpsDevilFish");o(this,"areaBestExpsTreant");o(this,"areaBestExpsFlameTiger");o(this,"areaBestExpsUnicorn");o(this,"areaPrestigePointsSlime");o(this,"areaPrestigePointsMagicSlime");o(this,"areaPrestigePointsSpider");o(this,"areaPrestigePointsBat");o(this,"areaPrestigePointsFairy");o(this,"areaPrestigePointsFox");o(this,"areaPrestigePointsDevilFish");o(this,"areaPrestigePointsTreant");o(this,"areaPrestigePointsFlameTiger");o(this,"areaPrestigePointsUnicorn");o(this,"areaPrestigeUpgradeLevelsSlime");o(this,"areaPrestigeUpgradeLevelsMagicSlime");o(this,"areaPrestigeUpgradeLevelsSpider");o(this,"areaPrestigeUpgradeLevelsBat");o(this,"areaPrestigeUpgradeLevelsFairy");o(this,"areaPrestigeUpgradeLevelsFox");o(this,"areaPrestigeUpgradeLevelsDevilFish");o(this,"areaPrestigeUpgradeLevelsTreant");o(this,"areaPrestigeUpgradeLevelsFlameTiger");o(this,"areaPrestigeUpgradeLevelsUnicorn");o(this,"areaPrestigeResetNumsSlime");o(this,"areaPrestigeResetNumsMagicSlime");o(this,"areaPrestigeResetNumsSpider");o(this,"areaPrestigeResetNumsBat");o(this,"areaPrestigeResetNumsFairy");o(this,"areaPrestigeResetNumsFox");o(this,"areaPrestigeResetNumsDevilFish");o(this,"areaPrestigeResetNumsTreant");o(this,"areaPrestigeResetNumsFlameTiger");o(this,"areaPrestigeResetNumsUnicorn");o(this,"isClearedMission",Array(1e4).fill(!1));o(this,"isClearedChallenge",Array(1080).fill(!1));o(this,"isReceivedRewardsChallenge",Array(1080).fill(!1));o(this,"accomplishedFirstTimesChallenge");o(this,"accomplishedTimesChallenge");o(this,"accomplishedBestTimesChallenge");o(this,"superDungeonMaxFloorsReached",Array(100).fill(0));o(this,"dungeonCoin",0);o(this,"topaz",0);o(this,"ruby",0);o(this,"pieceOfRuby",0);o(this,"motherStone",0);o(this,"entryCostRefreshTicket",0);o(this,"superDungeonPowerupIsUnlocked",Array(21).fill(!1));o(this,"superDungeonPowerupPurchasedNums",Array(21).fill(0));o(this,"superDungeonPowerupRanks",Array(21).fill(0));o(this,"superDungeonShopPurchasedNums",Array(200).fill(0));o(this,"superDungeonUpgradeLevels",Array(61).fill(0));o(this,"superDungeonUpgradeIsSuperQueued",Array(61).fill(!1));o(this,"equipmentKinds",Array(6e3).fill(0));o(this,"equipmentOptionNums");o(this,"equipmentIsLocked");o(this,"dictionaryUpgradePoint");o(this,"dictionaryUpgradeLevels",Array(10).fill(0));o(this,"enchantKinds");o(this,"enchantEffectKinds");o(this,"enchantEffectLevels");o(this,"enchantForgeEffectKinds");o(this,"enchantEffectValues");o(this,"enchantIsLocked");o(this,"equipment1stForgeValues",Array(5300).fill(0));o(this,"equipment2ndForgeValues",Array(5300).fill(0));o(this,"equipment3rdForgeValues",Array(5300).fill(0));o(this,"equipment4thForgeValues",Array(5300).fill(0));o(this,"equipment5thForgeValues",Array(5300).fill(0));o(this,"equipment6thForgeValues",Array(5300).fill(0));o(this,"equipment7thForgeValues",Array(5300).fill(0));o(this,"equipmentLevelsWarrior",Array(174).fill(0));o(this,"equipmentLevelsWizard",Array(174).fill(0));o(this,"equipmentLevelsAngel",Array(174).fill(0));o(this,"equipmentLevelsThief",Array(174).fill(0));o(this,"equipmentLevelsArcher",Array(174).fill(0));o(this,"equipmentLevelsTamer",Array(174).fill(0));o(this,"equipmentProficiencyWarrior");o(this,"equipmentProficiencyWizard");o(this,"equipmentProficiencyAngel");o(this,"equipmentProficiencyThief");o(this,"equipmentProficiencyArcher");o(this,"equipmentProficiencyTamer");o(this,"equipmentIsMaxedWarrior",Array(174).fill(!1));o(this,"equipmentIsMaxedWizard",Array(174).fill(!1));o(this,"equipmentIsMaxedAngel",Array(174).fill(!1));o(this,"equipmentIsMaxedThief",Array(174).fill(!1));o(this,"equipmentIsMaxedArcher",Array(174).fill(!1));o(this,"equipmentIsMaxedTamer",Array(174).fill(!1));o(this,"equipmentIsAutoDisassemble");o(this,"equipmentIsAutoProficiency");o(this,"disassembledEquipmentNums");o(this,"townMatGainFromdisassemble");o(this,"equipment1stOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment2ndOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment3rdOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment4thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment5thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment6thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment7thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment1stOptionLevels",Array(6e3).fill(0));o(this,"equipment2ndOptionLevels",Array(6e3).fill(0));o(this,"equipment3rdOptionLevels",Array(6e3).fill(0));o(this,"equipment4thOptionLevels",Array(6e3).fill(0));o(this,"equipment5thOptionLevels",Array(6e3).fill(0));o(this,"equipment6thOptionLevels",Array(6e3).fill(0));o(this,"equipment7thOptionLevels",Array(6e3).fill(0));o(this,"equipment1stOptionEffectValues",Array(6e3).fill(0));o(this,"equipment2ndOptionEffectValues",Array(6e3).fill(0));o(this,"equipment3rdOptionEffectValues",Array(6e3).fill(0));o(this,"equipment4thOptionEffectValues",Array(6e3).fill(0));o(this,"equipment5thOptionEffectValues",Array(6e3).fill(0));o(this,"equipment6thOptionEffectValues",Array(6e3).fill(0));o(this,"equipment7thOptionEffectValues",Array(6e3).fill(0));o(this,"equipmentId",Array(6e3).fill(0));o(this,"enchantId");o(this,"potionId",Array(296).fill(0));o(this,"potionKinds",Array(296).fill(0));o(this,"potionStackNums",Array(296).fill(0));o(this,"potionIsLocked");o(this,"potionLevels",Array(86).fill(0));o(this,"potionProductedNums");o(this,"potionDisassembledNums",Array(86).fill(0));o(this,"guildLevel",0);o(this,"guildExp",0);o(this,"guildAbilityPoint");o(this,"guildAbilityLevels",Array(20).fill(0));o(this,"accomplishedFirstTimesGuildLevel");o(this,"accomplishedTimesGuildLevel");o(this,"accomplishedBestTimesGuildLevel");o(this,"guildGrade",0);o(this,"guildFame",0);o(this,"guildSuperAbilityPoint",0);o(this,"guildSuperAbilityLevels",Array(13).fill(0));o(this,"alchemyPoint");o(this,"mysteriousWater",0);o(this,"mysteriousWaterProgress");o(this,"mysteriousWaterExpandedCapNum",0);o(this,"alchemyUpgradeLevels",Array(10).fill(0));o(this,"catalystLevels",Array(8).fill(0));o(this,"isEquippedCatarysts",Array(8).fill(!1));o(this,"essenceWaterPerSecs",Array(16).fill(0));o(this,"essenceProgresses");o(this,"craftEnchantScrollLevels");o(this,"essences");o(this,"totalGeneralQuestClearedNum");o(this,"totalGeneralQuestClearedNums");o(this,"generalQuestClearNumsPerClass");o(this,"isClearedQuestGeneralOnce");o(this,"isPersistentUnlockedQuestGeneral");o(this,"isClearedQuestsGlobal",Array(79).fill(!1));o(this,"isClearedQuestsTitleWarrior",Array(139).fill(!1));o(this,"isClearedQuestsTitleWizard",Array(139).fill(!1));o(this,"isClearedQuestsTitleAngel",Array(139).fill(!1));o(this,"isClearedQuestsTitleThief",Array(139).fill(!1));o(this,"isClearedQuestsTitleArcher",Array(139).fill(!1));o(this,"isClearedQuestsTitleTamer",Array(139).fill(!1));o(this,"isClearedQuestsGeneralWarrior");o(this,"isClearedQuestsGeneralWizard");o(this,"isClearedQuestsGeneralAngel");o(this,"isClearedQuestsGeneralThief");o(this,"isClearedQuestsGeneralArcher");o(this,"isClearedQuestsGeneralTamer");o(this,"isAcceptedQuestsGlobal");o(this,"isAcceptedQuestsTitleWarrior");o(this,"isAcceptedQuestsTitleWizard");o(this,"isAcceptedQuestsTitleAngel");o(this,"isAcceptedQuestsTitleThief");o(this,"isAcceptedQuestsTitleArcher");o(this,"isAcceptedQuestsTitleTamer");o(this,"isAcceptedQuestsGeneralWarrior");o(this,"isAcceptedQuestsGeneralWizard");o(this,"isAcceptedQuestsGeneralAngel");o(this,"isAcceptedQuestsGeneralThief");o(this,"isAcceptedQuestsGeneralArcher");o(this,"isAcceptedQuestsGeneralTamer");o(this,"initDefeatedNumQuestsGlobal");o(this,"initDefeatedNumQuestsTitleWarrior");o(this,"initDefeatedNumQuestsTitleWizard");o(this,"initDefeatedNumQuestsTitleAngel");o(this,"initDefeatedNumQuestsTitleThief");o(this,"initDefeatedNumQuestsTitleArcher");o(this,"initDefeatedNumQuestsTitleTamer");o(this,"initDefeatedNumQuestsGeneralWarrior");o(this,"initDefeatedNumQuestsGeneralWizard");o(this,"initDefeatedNumQuestsGeneralAngel");o(this,"initDefeatedNumQuestsGeneralThief");o(this,"initDefeatedNumQuestsGeneralArcher");o(this,"initDefeatedNumQuestsGeneralTamer");o(this,"initCompletedAreaNumQuestsTitleWarrior");o(this,"initCompletedAreaNumQuestsTitleWizard");o(this,"initCompletedAreaNumQuestsTitleAngel");o(this,"initCompletedAreaNumQuestsTitleThief");o(this,"initCompletedAreaNumQuestsTitleArcher");o(this,"initCompletedAreaNumQuestsTitleTamer");o(this,"initCompletedAreaNumQuestsGeneralWarrior");o(this,"initCompletedAreaNumQuestsGeneralWizard");o(this,"initCompletedAreaNumQuestsGeneralAngel");o(this,"initCompletedAreaNumQuestsGeneralThief");o(this,"initCompletedAreaNumQuestsGeneralArcher");o(this,"initCompletedAreaNumQuestsGeneralTamer");o(this,"initMovedDistanceQuestTitle");o(this,"initPhysicalSkillTriggeredNumQuestTitle");o(this,"initFireSkillTriggeredNumQuestTitle");o(this,"initIceSkillTriggeredNumQuestTitle");o(this,"initThunderSkillTriggeredNumQuestTitle");o(this,"initLightSkillTriggeredNumQuestTitle");o(this,"initDarkSkillTriggeredNumQuestTitle");o(this,"survivalNumQuestTitle");o(this,"sdMobDefeatedNums",Array(6).fill(0));o(this,"rebirthMaxHeroLevels");o(this,"rebirthNumsWarrior");o(this,"rebirthNumsWizard");o(this,"rebirthNumsAngel");o(this,"rebirthNumsThief");o(this,"rebirthNumsArcher");o(this,"rebirthNumsTamer");o(this,"rebirthPlayTimesWarrior");o(this,"rebirthPlayTimesWizard");o(this,"rebirthPlayTimesAngel");o(this,"rebirthPlayTimesThief");o(this,"rebirthPlayTimesArcher");o(this,"rebirthPlayTimesTamer");o(this,"rebirthMaxHeroLevelsWarrior");o(this,"rebirthMaxHeroLevelsWizard");o(this,"rebirthMaxHeroLevelsAngel");o(this,"rebirthMaxHeroLevelsThief");o(this,"rebirthMaxHeroLevelsArcher");o(this,"rebirthMaxHeroLevelsTamer");o(this,"rebirthPointsWarrior");o(this,"rebirthPointsWizard");o(this,"rebirthPointsAngel");o(this,"rebirthPointsThief");o(this,"rebirthPointsArcher");o(this,"rebirthPointsTamer");o(this,"rebirthUpgradeLevelsWarrior",Array(53).fill(0));o(this,"rebirthUpgradeLevelsWizard",Array(53).fill(0));o(this,"rebirthUpgradeLevelsAngel",Array(53).fill(0));o(this,"rebirthUpgradeLevelsThief",Array(53).fill(0));o(this,"rebirthUpgradeLevelsArcher",Array(53).fill(0));o(this,"rebirthUpgradeLevelsTamer",Array(53).fill(0));o(this,"purchasedNumMaterials");o(this,"purchasedNumTraps");o(this,"purchasedNumBlessing");o(this,"purchasedNumTownMaterials");o(this,"shopRestockTimecount");o(this,"isAutoBuyBlessings");o(this,"warriorSkillLevel",Array(10).fill(0));o(this,"wizardSkillLevel",Array(10).fill(0));o(this,"angelSkillLevel",Array(10).fill(0));o(this,"thiefSkillLevel",Array(10).fill(0));o(this,"archerSkillLevel",Array(10).fill(0));o(this,"tamerSkillLevel",Array(10).fill(0));o(this,"warriorMaxReachedSkillLevel",Array(10).fill(0));o(this,"wizardMaxReachedSkillLevel",Array(10).fill(0));o(this,"angelMaxReachedSkillLevel",Array(10).fill(0));o(this,"thiefMaxReachedSkillLevel",Array(10).fill(0));o(this,"archerMaxReachedSkillLevel",Array(10).fill(0));o(this,"tamerMaxReachedSkillLevel",Array(10).fill(0));o(this,"warriorSkillRank",Array(10).fill(0));o(this,"wizardSkillRank",Array(10).fill(0));o(this,"angelSkillRank",Array(10).fill(0));o(this,"thiefSkillRank",Array(10).fill(0));o(this,"archerSkillRank",Array(10).fill(0));o(this,"tamerSkillRank",Array(10).fill(0));o(this,"warriorSkillProficiency");o(this,"wizardSkillProficiency");o(this,"angelSkillProficiency");o(this,"thiefSkillProficiency");o(this,"archerSkillProficiency");o(this,"tamerSkillProficiency");o(this,"currentStanceId",Array(6).fill(0));o(this,"isEquippedWarriorSkillForWarrior");o(this,"isEquippedWizardSkillForWarrior");o(this,"isEquippedAngelSkillForWarrior");o(this,"isEquippedThiefSkillForWarrior");o(this,"isEquippedArcherSkillForWarrior");o(this,"isEquippedTamerSkillForWarrior");o(this,"isEquippedWarriorSkillForWizard");o(this,"isEquippedWizardSkillForWizard");o(this,"isEquippedAngelSkillForWizard");o(this,"isEquippedThiefSkillForWizard");o(this,"isEquippedArcherSkillForWizard");o(this,"isEquippedTamerSkillForWizard");o(this,"isEquippedWarriorSkillForAngel");o(this,"isEquippedWizardSkillForAngel");o(this,"isEquippedAngelSkillForAngel");o(this,"isEquippedThiefSkillForAngel");o(this,"isEquippedArcherSkillForAngel");o(this,"isEquippedTamerSkillForAngel");o(this,"isEquippedWarriorSkillForThief");o(this,"isEquippedWizardSkillForThief");o(this,"isEquippedAngelSkillForThief");o(this,"isEquippedThiefSkillForThief");o(this,"isEquippedArcherSkillForThief");o(this,"isEquippedTamerSkillForThief");o(this,"isEquippedWarriorSkillForArcher");o(this,"isEquippedWizardSkillForArcher");o(this,"isEquippedAngelSkillForArcher");o(this,"isEquippedThiefSkillForArcher");o(this,"isEquippedArcherSkillForArcher");o(this,"isEquippedTamerSkillForArcher");o(this,"isEquippedWarriorSkillForTamer");o(this,"isEquippedWizardSkillForTamer");o(this,"isEquippedAngelSkillForTamer");o(this,"isEquippedThiefSkillForTamer");o(this,"isEquippedArcherSkillForTamer");o(this,"isEquippedTamerSkillForTamer");o(this,"buildingLevels",Array(12).fill(0));o(this,"buildingRanks");o(this,"buildingResearchLevelsStone",Array(12).fill(0));o(this,"buildingResearchLevelsCrystal",Array(12).fill(0));o(this,"buildingResearchLevelsLeaf",Array(12).fill(0));o(this,"buildingResearchExpsStone");o(this,"buildingResearchExpsCrystal");o(this,"buildingResearchExpsLeaf");o(this,"IsBuildingResearchStone");o(this,"IsBuildingResearchCrystal");o(this,"IsBuildingResearchLeaf");o(this,"accomplishedFirstTimesBuilding");o(this,"accomplishedTimesBuilding");o(this,"accomplishedBestTimesBuilding");o(this,"townMaterials");o(this,"upgradeLevelsResource",Array(20).fill(0));o(this,"upgradeLevelsBasicStats",Array(7).fill(0));o(this,"upgradeLevelsGoldGain",0);o(this,"upgradeLevelsExpGain",0);o(this,"upgradeLevelsEquipmentInventory",0);o(this,"upgradeLevelsGoldCap",Array(3).fill(0));o(this,"upgradeLevelsSlimebank",Array(22).fill(0));o(this,"gold");o(this,"slimeCoin");o(this,"resources");o(this,"playtimes");o(this,"playtimesRealTime");o(this,"multibuyId");o(this,"version");o(this,"allTime");o(this,"allTimeRealtime");o(this,"allTimeWorldAscension");o(this,"lastDailyTime");o(this,"wasd");o(this,"isGotAchievements");o(this,"isGotAchievementRewards");o(this,"achievementPlaytimes");o(this,"monsterMilk");o(this,"monsterPetRanks",Array(130).fill(0));o(this,"monsterPetLevels",Array(130).fill(0));o(this,"monsterPetExps");o(this,"monsterPetLoyalty",Array(130).fill(0));o(this,"monsterPetLoyaltyExp");o(this,"monsterPetTamingPoints");o(this,"monsterPetIsActives");o(this,"openedChestNum");o(this,"totalMovedDistance");o(this,"totalMovedDistancePet");o(this,"maxHeroLevelReached");o(this,"physicalTriggeredNum");o(this,"fireTriggeredNum");o(this,"iceTriggeredNum");o(this,"thunderTriggeredNum");o(this,"lightTriggeredNum");o(this,"darkTriggeredNum");o(this,"persistentSkillSlotNum");o(this,"persistentGlobalSkillSlotNum");o(this,"maxHeroGradeReached",Array(6).fill(0));o(this,"areaIsUnlockedOnceSlime");o(this,"areaIsUnlockedOnceMagicslime");o(this,"areaIsUnlockedOnceSpider");o(this,"areaIsUnlockedOnceBat");o(this,"areaIsUnlockedOnceFairy");o(this,"areaIsUnlockedOnceFox");o(this,"areaIsUnlockedOnceDevilfish");o(this,"areaIsUnlockedOnceTreant");o(this,"areaIsUnlockedOnceFlametiger");o(this,"areaIsUnlockedOnceUnicorn");o(this,"portalOrbNum");o(this,"currentSDRun",0);o(this,"currentSDRunFailed",0);o(this,"totalSDRun",0);o(this,"totalSDRunFailed",0);o(this,"swarmClearedNum");o(this,"swarmBestScores");o(this,"ascensionNum");o(this,"ascensionPlayTime");o(this,"ascensionPoints");o(this,"bestAscensionPlayTime");o(this,"accomplishedFirstTimeAscension");o(this,"accomplishedTimeAscension");o(this,"accomplishedBestTimeAscension");o(this,"ascensionMilestoneLevelReached",Array(8).fill(0));o(this,"isGotRewardWAAccomplishments");o(this,"worldAscensionUpgradeLevels",Array(10).fill(0));o(this,"sdGemLevels",Array(15).fill(0));o(this,"sdGemExps",Array(15).fill(0));o(this,"sdGemMotherStoneAssigned",Array(15).fill(0));o(this,"modifierLoadoutId",Array(200).fill(0));o(this,"isActiveSdModifiers",Array(4e3).fill(!1));o(this,"maxModifierCleareds",Array(200).fill(0));o(this,"sdModifierValues",Array(4e3).fill(0));o(this,"totalDungeonCoinGained",0);o(this,"totalPermanentDungeonCoinGained",0);o(this,"totalTopazGained",0);o(this,"totalRubyGained",0);o(this,"totalPieceOfRubyGained",0);o(this,"totalMotherStoneGained",0);o(this,"totalEntryCostRefreshTicketGained",0);o(this,"totalEntryCostRefreshTicketUsed",0);o(this,"totalDodgeNum",0);o(this,"regularChestRNG");o(this,"regularChestRNGUsedIdNum");o(this,"isReceivedRegularChestToday",!1);o(this,"epicCoin");o(this,"epicCoinConsumed");o(this,"epicStorePurchasedNum",Array(75).fill(0));o(this,"inAppPurchasedNum",Array(10).fill(0));o(this,"inAppPurchasedNum_ver01020101",Array(10).fill(0));o(this,"totalEquipmentGained");o(this,"pieceOfRubyGainFromDisassemble",0);o(this,"equipmentIsGotOnce");o(this,"equipmentLoadoutIds",Array(6).fill(0));o(this,"potionQueues");o(this,"potionIsSuperQueues");o(this,"isDisassembleTalismans");o(this,"isStartedExpedition");o(this,"expeditionProgress");o(this,"expeditionTimeId",Array(20).fill(0));o(this,"expeditionMovedDistance");o(this,"expeditionPetSpecies",Array(100).fill(0));o(this,"expeditionPetColors",Array(100).fill(0));o(this,"expeditionPetIsSet",Array(100).fill(!1));o(this,"expeditionKinds",Array(100).fill(0));o(this,"expeditionLevels",Array(7).fill(0));o(this,"expeditionExps",Array(7).fill(0));o(this,"expeditionCompletedNums");o(this,"expeditionTimes");o(this,"maxGuildLevel",0);o(this,"maxGuildGrade",0);o(this,"autoTargetGuildAbilityLevels",Array(20).fill(0));o(this,"talismanFragement");o(this,"totalAlchemyPointGained");o(this,"isOnAMWA");o(this,"amwaIsEquippedCatalysts");o(this,"amwaSavedEssenceWaterPerSecs");o(this,"dailyQuestRarities");o(this,"dailyQuestMonsterSpecies");o(this,"dailyQuestAreaKind");o(this,"dailyQuestAreaId");o(this,"isClearedQuestsDaily");o(this,"isAcceptedQuestsDaily");o(this,"initDefeatedNumQuestsDaily");o(this,"initCompletedAreaNumQuestsDaily");o(this,"maxReachedGeneralQuestClearedNums");o(this,"isFavoriteQuestWarrior");o(this,"isFavoriteQuestWizard");o(this,"isFavoriteQuestAngel");o(this,"isFavoriteQuestThief");o(this,"isFavoriteQuestArcher");o(this,"isFavoriteQuestTamer");o(this,"questingAreaKinds");o(this,"questingAreaIds");o(this,"questingAreaIsDungeon");o(this,"isGotFirstEQ");o(this,"totalRebirthNums",Array(100).fill(0));o(this,"bestRebirthPlaytimes");o(this,"isAutoRebirthOns");o(this,"autoRebirthLevels");o(this,"autoRebirthPoints");o(this,"autoRebirthTiers");o(this,"favoriteAreaKinds");o(this,"favoriteAreaIds");o(this,"isBestExpSecAreas");o(this,"isLazyQuestingMode");o(this,"isAutoAbilityPointPresets");o(this,"autoAbilityPointPresetsVIT");o(this,"autoAbilityPointPresetsSTR");o(this,"autoAbilityPointPresetsINT");o(this,"autoAbilityPointPresetsAGI");o(this,"autoAbilityPointPresetsLUK");o(this,"autoAbilityPointMaxVIT");o(this,"autoAbilityPointMaxSTR");o(this,"autoAbilityPointMaxINT");o(this,"autoAbilityPointMaxAGI");o(this,"autoAbilityPointMaxLUK");o(this,"accomplishedFirstTimesRebirth");o(this,"accomplishedTimesRebirth");o(this,"accomplishedBestTimesRebirth");o(this,"warriorSkillTriggeredNum");o(this,"wizardSkillTriggeredNum");o(this,"angelSkillTriggeredNum");o(this,"thiefSkillTriggeredNum");o(this,"archerSkillTriggeredNum");o(this,"tamerSkillTriggeredNum");o(this,"skillLoadoutIds",Array(6).fill(0));o(this,"maxBuildingLevelsReached",Array(12).fill(0));o(this,"maxBuildingRanksReached",Array(12).fill(0));o(this,"upgradeQueuesResource");o(this,"upgradeQueuesBasicStats");o(this,"upgradeQueuesGoldGain");o(this,"upgradeQueueExpGain");o(this,"upgradeQueuesEquipmentInventory");o(this,"upgradeQueuesGoldCap");o(this,"upgradeQueuesSlimebank");o(this,"upgradeIsSuperQueuesResource");o(this,"upgradeIsSuperQueuesBasicStats");o(this,"upgradeIsSuperQueuesGoldGain");o(this,"upgradeIsSuperQueueExpGain");o(this,"upgradeIsSuperQueueEquipmentInventory");o(this,"upgradeIsSuperQueuesGoldCap");o(this,"upgradeIsSuperQueuesSlimebank");o(this,"nitro");o(this,"nitroConsumed");o(this,"nitroSpeed",0);o(this,"totalGold");o(this,"totalStone");o(this,"totalCrystal");o(this,"totalLeaf");o(this,"totalSlimeCoin");o(this,"isDlcStarterPack");o(this,"isDlcNitroPack");o(this,"isDlcGlobalSkillSlotPack");o(this,"isDlcInventorySlotPack");o(this,"currentHero",0);o(this,"isAlphaSave",!1);o(this,"multibuyNums");o(this,"isShowQuickAccess");o(this,"autoAreaProgressionTargetClearNums");o(this,"isReceivedBonusCodes");o(this,"isEnchantFilter");o(this,"enchantFilterLevel");o(this,"isSlotNumEnchantFilter");o(this,"slotNumEnchantFilter");o(this,"checkedIEH1Achievement");o(this,"receivedIEH1Achievement");o(this,"isReceivedIEH1DLCIEH2SupportPack",!1);o(this,"isScrollFilter");o(this,"isPowerupFilter",Array(160).fill(!1));o(this,"powerupFilterPurchaseLimit",Array(160).fill(0));o(this,"powerupFilterLoadoutId",Array(6).fill(0));o(this,"SDAutoLeaveAndRetryTargetFloor",0);o(this,"SDAutoLeaveAndRetryTargetEntryCost",0);o(this,"SDAutoProgressionTargetFloor",0);o(this,"SDAutoUseRefreshTicketTargetEntryCost",0);o(this,"SDAutoBuyPurchaseNum",0);o(this,"currentTutorialArrow");o(this,"equipmentOptionNums1");o(this,"equipmentOptionNums2");o(this,"equipmentOptionNums3");o(this,"equipmentOptionNums4");o(this,"equipmentOptionNums5");o(this,"equipmentOptionNums6");o(this,"equipmentIsLocked1");o(this,"equipmentIsLocked2");o(this,"equipmentIsLocked3");o(this,"equipmentIsLocked4");o(this,"equipmentIsLocked5");o(this,"equipmentIsLocked6")}}const Bl="SaveFileData",Tw=new co,Za=Ma(Bl,{state:()=>Tn(Bl,Tw,localStorage,{mergeDefaults:!0})});var Rt=(e=>(e[e.MobLv=0]="MobLv",e[e.ReducePowerup=1]="ReducePowerup",e[e.ReduceSkillSlot=2]="ReduceSkillSlot",e[e.MobFullCast=3]="MobFullCast",e[e.DodgeDrainSpeed2x=4]="DodgeDrainSpeed2x",e[e.DodgeDrainPerDodge=5]="DodgeDrainPerDodge",e[e.DisableMove=6]="DisableMove",e[e.DungeonCoinFixed1=7]="DungeonCoinFixed1",e[e.RemoveSDPowerupPassives=8]="RemoveSDPowerupPassives",e[e.RemoveEquipmentEffectBonuses=9]="RemoveEquipmentEffectBonuses",e[e.DisablePowerupFilter=10]="DisablePowerupFilter",e[e.StartWith5PercentOfMaxHP=11]="StartWith5PercentOfMaxHP",e[e.DrainHPPerSec=12]="DrainHPPerSec",e[e.SwapATKWithDEF=13]="SwapATKWithDEF",e[e.SDDamage=14]="SDDamage",e[e.SDChallengeBossDamage=15]="SDChallengeBossDamage",e[e.RemoveSDUpgrade1=16]="RemoveSDUpgrade1",e[e.ReducePowerupEffect=17]="ReducePowerupEffect",e[e.MonsterExplode=18]="MonsterExplode",e[e.MPRegen=19]="MPRegen",e[e.FameGain=20]="FameGain",e[e.ArtifactChance=21]="ArtifactChance",e[e.SDEnchantChance=22]="SDEnchantChance",e))(Rt||{});const Ms=e=>($s("data-v-25b97f0b"),e=e(),zs(),e),xw={class:"wrapper"},Gw={class:"header"},Fw={id:"title"},Iw={id:"settings"},Hw=Ms(()=>w("label",{for:"saveFileImport",class:"importLabel"},"Import Save File",-1)),_w={class:"sidebar",id:"menu"},Vw={id:"content"},Nw={id:"footer",class:"footer"},qw={id:"version"},Uw=Ms(()=>w("a",{href:"https://github.com/pr0cessus/IEH2Calculator"},"Github Repository Page",-1)),Ww=Ms(()=>w("a",{href:"https://discordapp.com/users/.processus/"},"DM me on Discord",-1)),Ow={style:{padding:"10px"}},$w=Ms(()=>w("br",null,null,-1)),zw=Ms(()=>w("br",null,null,-1)),Jw=Ms(()=>w("br",null,null,-1)),Xw=Ms(()=>w("hr",null,null,-1)),jw=Ms(()=>w("h4",null,"SD Modifiers",-1)),Yw=Ms(()=>w("br",null,null,-1)),Qw=Ms(()=>w("br",null,null,-1)),Zw=Ms(()=>w("br",null,null,-1)),Kw=Ms(()=>w("br",null,null,-1)),e1=Ms(()=>w("br",null,null,-1)),t1=st({__name:"App",setup(e){const t=tt("game"),s=tt("router"),i=Ct();function c(b){if(!b.target.files)return;const k=document.createElement("script");k.src="./SaveFileDencrypt.js",k.onload=function(){console.log("script loaded");const P=new FileReader;P.readAsText(b.target.files[0]),P.onloadend=()=>{const y=new globalThis.SaveFileDencrypt(P.result).data;localStorage.setItem("SaveFileData",JSON.stringify({...Za().$state,...y})),window.alert("Save File loaded! Reloading page"),location.reload()}},document.head.appendChild(k)}function l(){window.confirm("Clear data?")&&(localStorage.clear(),window.alert("Data cleared, Reload page if you wish to start over"))}function M(){localStorage.setItem("SaveFileSnapshot",JSON.stringify(Za().$state)),location.reload()}return(b,k)=>{const P=el("router-link"),y=el("router-view");return U(),z(re,null,[w("div",xw,[w("div",Gw,[w("h1",Fw,[X(P,{to:"/"},{default:ut(()=>[le("IEH2Calculator")]),_:1}),le(V(A(s).currentRoute.value.path),1)]),w("div",Iw,[w("button",{style:{"font-size":"12px"},onClick:k[0]||(k[0]=T=>i.value.showModal())},"☰"),w("button",{onClick:k[1]||(k[1]=T=>M())},"Create Snapshot"),Hw,w("input",{type:"file",id:"saveFileImport",accept:".txt",onChange:c},null,32),w("button",{id:"data-restart",type:"reset",onClick:k[2]||(k[2]=T=>l())},"Hard Reset")])]),w("nav",_w,[(U(!0),z(re,null,De(A(oo).filter(T=>T.path!="/"),T=>(U(),zt(P,{to:T.path},{default:ut(()=>[le(V(T.name),1)]),_:2},1032,["to"]))),256))]),w("div",Vw,[X(y)]),w("div",Nw,[le(" Version: "),w("span",qw,V(A(bf).version),1),le(" | Game Version (1.2.1.8) | "),Uw,le(" | Encounter any bug? "),Ww])]),w("dialog",{ref_key:"dialog",ref:i,onMousedown:k[12]||(k[12]=T=>{T.target.nodeName==i.value.nodeName&&i.value.close()}),style:{"background-color":"#3a3a3a",color:"#fff"}},[w("div",Ow,[ve(w("input",{type:"checkbox","onUpdate:modelValue":k[3]||(k[3]=T=>A(t).data.source.isSuperDungeon=T),class:"checkbox",name:"isSuperDungeon"},null,512),[[ls,A(t).data.source.isSuperDungeon]]),le(" Super Dungeon"),$w,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[4]||(k[4]=T=>A(t).data.source.superDungeonPowerupIsActive=T),class:"checkbox",name:"superDungeonPowerupIsActive"},null,512),[[ls,A(t).data.source.superDungeonPowerupIsActive]]),le(" Active Powerup"),zw,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[5]||(k[5]=T=>A(t).data.source.isBlessing=T),class:"checkbox",name:"isBlessing"},null,512),[[ls,A(t).data.source.isBlessing]]),le(" Blessings"),Jw,Xw,jw,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[6]||(k[6]=T=>A(t).data.source.isActiveSdModifiers[950+A(Rt).SwapATKWithDEF]=T),class:"checkbox",name:"SwapATKWithDEF"},null,512),[[ls,A(t).data.source.isActiveSdModifiers[950+A(Rt).SwapATKWithDEF]]]),le(" Swap ATK/MATK with DEF/MDEF"),Yw,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[7]||(k[7]=T=>A(t).data.source.isActiveSdModifiers[950+A(Rt).RemoveSDUpgrade1]=T),class:"checkbox",name:"RemoveSDUpgrade1"},null,512),[[ls,A(t).data.source.isActiveSdModifiers[950+A(Rt).RemoveSDUpgrade1]]]),le(" Remove the effect of SD Damage-type and Fury upgrades in SD Upgrade I"),Qw,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[8]||(k[8]=T=>A(t).data.source.isActiveSdModifiers[950+A(Rt).ReducePowerupEffect]=T),class:"checkbox",name:"ReducePowerupEffect"},null,512),[[ls,A(t).data.source.isActiveSdModifiers[950+A(Rt).ReducePowerupEffect]]]),le(" Reduce the effect of powerups by "+V(A(t).data.source.sdModifierValues[950+A(Rt).ReducePowerupEffect]==0?"50.00%":A(t).data.source.sdModifierValues[950+A(Rt).ReducePowerupEffect]==1?"90.00%":"99.00%")+" ",1),Zw,le("            "),ve(w("input",{type:"range",min:"0",max:"2","onUpdate:modelValue":k[9]||(k[9]=T=>A(t).data.source.sdModifierValues[950+A(Rt).ReducePowerupEffect]=T),name:"ReducePowerupEffectValue"},null,512),[[lt,A(t).data.source.sdModifierValues[950+A(Rt).ReducePowerupEffect],void 0,{lazy:!0,number:!0}]]),Kw,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[10]||(k[10]=T=>A(t).data.source.isActiveSdModifiers[950+A(Rt).RemoveSDPowerupPassives]=T),class:"checkbox",name:"RemoveSDPowerupPassives"},null,512),[[ls,A(t).data.source.isActiveSdModifiers[950+A(Rt).RemoveSDPowerupPassives]]]),le(" Remove the permanent effects of SD Powerups "),e1,ve(w("input",{type:"checkbox","onUpdate:modelValue":k[11]||(k[11]=T=>A(t).data.source.isActiveSdModifiers[950+A(Rt).RemoveEquipmentEffectBonuses]=T),class:"checkbox",name:"RemoveEquipmentEffectBonuses"},null,512),[[ls,A(t).data.source.isActiveSdModifiers[950+A(Rt).RemoveEquipmentEffectBonuses]]]),le(" Remove Equipment Effect Bonus ")])],544),X(Lw)],64)}}}),s1=Ot(t1,[["__scopeId","data-v-25b97f0b"]]);class i1{constructor(t,s){o(this,"isProxy",new WeakMap);o(this,"data");o(this,"snap");o(this,"compare");this.snap=s,this.data=t,this.compare=new Proxy(this.data,this.Proxy()),this.Synchronization()}Proxy(){const t=(c,l,M=!1)=>{if((l==0||l==null)&&M)return"(NEW)";if((c==0||c==null)&&M)return"(MISSING)";if(l>c)return l/c-1<1e-4?void 0:`(-${h.percent(l/c-1,2)})`;if(l<c)return c/l-1<1e-4?void 0:`(+${h.percent(c/l-1,2)})`};let s=this.snap;const i={isProxy:new WeakMap,$snap:new WeakMap,get(c,l,M){if(this.$snap.has(c)&&(s=this.$snap.get(c)),typeof c[l]=="object"&&c[l]!==null){if(this.isProxy.has(c[l]))return this.isProxy.get(c[l]);{const b=new Proxy(Reflect.get(c,l,M),i);return this.isProxy.set(c[l],b),this.$snap.set(c[l],s[l]),b}}else{if(typeof c[l]=="function")return console.log("target is function",Reflect.apply(c[l],c,[])),()=>Reflect.apply(c[l],c,[]);if(Array.isArray(c))return Reflect.get(c,l,M);const b=c[l],k=s[l],P=b-k;return{value:b,snap:k,diff:{raw:P,digit:P>0?`Difference: +${P}`:`Difference: ${P}`,percent:t(b,k)},class:P>0?"green":P<0?"red":""}}}};return i}Synchronization(){rs(this.data.source,(t,s)=>{console.log("watch data.source"),this.data.requireUpdate.value=!0}),rs(()=>this.data.source.isSuperDungeon,(t,s)=>{this.snap.source.isSuperDungeon=t,this.snap.SuperDungeonToggle(),this.data.SuperDungeonToggle()}),rs(()=>this.data.source.currentHero,(t,s)=>{this.snap.source.currentHero=t}),rs(this.data.source.equipmentLoadoutIds,(t,s)=>{this.snap.source.equipmentLoadoutIds=t,this.data.inventory.Update(),this.snap.inventory.Update()}),rs(()=>this.data.source.enemyColor,(t,s)=>this.snap.source.enemyColor=t),rs(()=>this.data.source.enemySpecies,(t,s)=>this.snap.source.enemySpecies=t),rs(()=>this.data.source.enemyLevel,(t,s)=>this.snap.source.enemyLevel=t),rs(()=>this.data.source.enemyChallenge,(t,s)=>this.snap.source.enemyChallenge=t)}Worker(){}}var r=(e=>(e[e.Add=0]="Add",e[e.Mul=1]="Mul",e[e.After=2]="After",e))(r||{});class H{constructor(t=new u(n.Base,r.Add,()=>0),s=()=>1e300,i=()=>0){o(this,"modifiers",[]);o(this,"additiveKind");o(this,"multiplicativeKind");o(this,"afterKind");o(this,"additive",0);o(this,"after",0);o(this,"temp",0);o(this,"value",0);o(this,"log",0);o(this,"isLog",!1);o(this,"numberType",nt.Percent);o(this,"multiplicative",1);o(this,"maxValue");o(this,"minValue");o(this,"debug",!1);this.maxValue=s,this.minValue=i,this.RegisterMultiplier(t),this.RegisterMultiplier(new u(n.Base,r.Mul,()=>0))}Debug(t,s){this.modifiers.forEach(i=>{i.kind==t&&i.type==s&&console.log("modifier",i)})}Snapshot(){return this.Calculate(),{additive:this.additive,multiplicative:this.multiplicative,after:this.after,multiplicativeKind:this.multiplicativeKind,additiveKind:this.additiveKind,afterKind:this.afterKind,value:this.value,temp:this.temp,log:this.log,numberType:this.numberType,isLog:this.isLog,ValueString:()=>this.ValueString(),Value:()=>this.Value()}}Value(){return this.Calculate(),this.value}ValueString(){switch(this.numberType){case nt.Normal:return h.tDigit(this.Value(),2);case nt.Percent:return h.percent(this.Value(),2);case nt.Meter:return h.meter(this.Value(),2);default:return this.Value()}}TotalValue(){return this.BeforeTotalValue(this.isLog)+this.After()}RegisterMultiplier(t){return this.modifiers.push(t),()=>this.UnregisterMultplier(t)}UnregisterMultplier(t){for(let s=0;s<this.modifiers.length;s++)this.modifiers[s]==t&&this.modifiers.splice(s,1)}After(){return this.after}Calculate(){this.additiveKind={},this.multiplicativeKind={},this.afterKind={};for(let t=0;t<this.modifiers.length;t++){const s=this.modifiers[t];if(s.trigger()!=!1)switch(s.type){case r.Add:this.additiveKind[n[s.kind]]?this.additiveKind[n[s.kind]]+=s.value():this.additiveKind[n[s.kind]]=s.value();break;case r.Mul:this.multiplicativeKind[n[s.kind]]?this.multiplicativeKind[n[s.kind]]+=s.value():this.multiplicativeKind[n[s.kind]]=1+s.value();break;case r.After:this.afterKind[n[s.kind]]?this.afterKind[n[s.kind]]+=s.value():this.afterKind[n[s.kind]]=s.value();break}}this.additive=Object.values(this.additiveKind).reduce((t,s)=>t+s,0),this.multiplicative=Object.values(this.multiplicativeKind).reduce((t,s)=>t*s),this.after=Object.values(this.afterKind).reduce((t,s)=>t+s,0),this.temp=this.BeforeTotalValue(!1),this.log=this.BeforeTotalValue(!0),this.value=Math.max(this.minValue(),Math.min(this.maxValue(),this.TotalValue()))}BeforeTotalValue(t){if(t){let s=this.additive*this.multiplicative;switch(this.numberType){case nt.Normal:return s<1?s:this.modifiers[0].Value+Math.log10(s);case nt.Percent:return this.modifiers[0].Value>=1?s<1?s:this.modifiers[0].Value+Math.log10(s):s<.01?s:this.modifiers[0].Value+Math.log10(s*100)/100;case nt.Meter:return s<100?s:this.modifiers[0].Value+Math.log10(s/100)*100}}return this.additive*this.multiplicative}}class u{constructor(t,s,i,c=()=>!0){o(this,"kind");o(this,"type");o(this,"value");o(this,"trigger");this.kind=t,this.type=s,this.value=i,this.trigger=c}get Value(){return this.value()}get info(){return`kind: ${n[this.kind]}, type: ${r[this.type]}, trigger: ${this.trigger()}, value: ${this.Value}`}}const r1={maxLevel:50,upgradeMaxLevel:999,catalystMaxLevel:50};class a1{constructor(){o(this,"criticalChanceMultiplier");o(this,"catalystLevelCap");o(this,"catalystCostReduction");o(this,"catalystDoubleCriticalChance");o(this,"catalysts",[]);o(this,"essenceProductions",[]);o(this,"essenceProductionMultiplier");o(this,"essenceProductionDiminishing");o(this,"availableNum");this.catalystLevelCap=new H(new u(n.Base,r.Add,()=>r1.catalystMaxLevel)),this.catalystCostReduction=new H(new u(n.Base,r.Add,()=>0),()=>.5,()=>0),this.catalystDoubleCriticalChance=new H(new u(n.Base,r.Add,()=>0),()=>1,()=>0),this.availableNum=new H(new u(n.Base,r.Add,()=>1)),this.essenceProductionDiminishing=new H(new u(n.Base,r.Add,()=>0),()=>2,()=>1.1),this.essenceProductionDiminishing.RegisterMultiplier(new u(n.Base,r.Add,()=>2)),this.essenceProductionMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.criticalChanceMultiplier=new H(new u(n.Base,r.Add,()=>1))}}class n1{constructor(){o(this,"catalyst",new a1);o(this,"mysteriousWaterProductionPerSec");o(this,"mysteriousWaterCap");o(this,"maxMysteriousWaterExpandedCapNum");o(this,"mysteriousWaterExpandedCapNum",0);o(this,"doubleAlchemyPointChance");o(this,"alchemyPointGainMultiplier");o(this,"alchemyUpgrades",[]);o(this,"maxPurificationLevel");o(this,"maxWaterPreservationLevel");o(this,"preventUseEssenceToCraft");o(this,"nitroGainOnCraft");this.maxMysteriousWaterExpandedCapNum=new H(new u(n.Base,r.Add,()=>50)),this.mysteriousWaterCap=new H(new u(n.Base,r.Add,()=>this.mysteriousWaterExpandedCapNum)),this.mysteriousWaterProductionPerSec=new H(new u(n.Base,r.Add,()=>.1)),this.doubleAlchemyPointChance=new H,this.alchemyPointGainMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.preventUseEssenceToCraft=new H,this.nitroGainOnCraft=new H,this.maxPurificationLevel=new H(new u(n.Base,r.Add,()=>50)),this.maxWaterPreservationLevel=new H(new u(n.Base,r.Add,()=>5))}Start(){}}var Rr;class l1{constructor(t){Kt(this,Rr,void 0);o(this,"expBonuses",Array(N.AreaKind));o(this,"moveSpeedBonuses",Array(N.AreaKind));o(this,"areaDebuffReduction");o(this,"largeSwarmChanceInsteadOfRegular");o(this,"epicSwarmChanceInsteadOfLarge");o(this,"swarmScoreMultiplier");o(this,"maxAreaPrestigeLevel");o(this,"maxAreaExpLevel");o(this,"maxAreaMoveSpeedLevel");o(this,"townMaterialGainBonus");o(this,"townMaterialDungeonRewardMultiplier");o(this,"townMaterialGainPerDifficultyMultiplier");o(this,"townMaterialGainBonusClass",Array(N.HeroKind));o(this,"chestPortalOrbChance");o(this,"clearCountBonusClass",Array(N.HeroKind));o(this,"dungeonClearCountBonusClass",Array(N.HeroKind));o(this,"memoTotalClearedMissionNum");es(this,Rr,t),this.chestPortalOrbChance=new H,this.townMaterialGainBonus=new H,this.townMaterialGainPerDifficultyMultiplier=new H,this.maxAreaExpLevel=new H(new u(n.Base,r.Add,()=>100)),this.maxAreaPrestigeLevel=new H(new u(n.Base,r.Add,()=>9)),this.swarmScoreMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.maxAreaMoveSpeedLevel=new H(new u(n.Base,r.Add,()=>100)),this.townMaterialDungeonRewardMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.epicSwarmChanceInsteadOfLarge=new H(new u(n.Base,r.Add,()=>0),()=>1,()=>0),this.largeSwarmChanceInsteadOfRegular=new H(new u(n.Base,r.Add,()=>0),()=>1,()=>0),this.areaDebuffReduction=new H(new u(n.Base,r.Add,()=>0),()=>.9,()=>0);for(let s=0;s<this.expBonuses.length;s++)this.expBonuses[s]=new H,this.moveSpeedBonuses[s]=new H;for(let s=0;s<this.townMaterialGainBonusClass.length;s++)this.townMaterialGainBonusClass[s]=new H;for(let s=0;s<this.clearCountBonusClass.length;s++)this.clearCountBonusClass[s]=new H(new u(n.Base,r.Add,()=>1)),this.dungeonClearCountBonusClass[s]=new H(new u(n.Base,r.Add,()=>1))}SetEffectClearCount(t){for(let s=0;s<this.clearCountBonusClass.length;s++)this.clearCountBonusClass[s].RegisterMultiplier(t)}SetEffectDungeonClearCount(t){for(let s=0;s<this.dungeonClearCountBonusClass.length;s++)this.dungeonClearCountBonusClass[s].RegisterMultiplier(t)}TotalClearedMissionNum(){if(this.memoTotalClearedMissionNum)return this.memoTotalClearedMissionNum;const t=R(this,Rr).source.isClearedMission.filter(Boolean).length;return this.memoTotalClearedMissionNum=t,t}}Rr=new WeakMap;class Nt{constructor(t){o(this,"ctrl");o(this,"heroKind");this.ctrl=t,this.heroKind=t.heroKind}get level(){return this.ctrl.data.source.superDungeonPowerupLevels[this.kind]}set level(t){this.ctrl.data.source.superDungeonPowerupLevels[this.kind]=t}get sdgCtrl(){return this.ctrl.data.sdg}get isUnlocked(){return this.ctrl.data.source.superDungeonPowerupIsUnlocked[this.kind]}get kind(){return me.Heal}get purchasedNum(){return this.ctrl.data.source.superDungeonPowerupPurchasedNums[this.kind]}set purchasedNum(t){this.ctrl.data.source.superDungeonPowerupPurchasedNums[this.kind]=t}get rank(){return this.ctrl.data.source.superDungeonPowerupRanks[this.kind]}set rank(t){this.ctrl.data.source.superDungeonPowerupRanks[this.kind]=Math.min(100,t)}Start(){this.SetEffect()}isActive(){return this.ctrl.data.source.superDungeonPowerupIsActive}SetEffect(){}SetGlobalEffect(){}get baseInitEffectValue(){return 0}get initEffectValue(){return this.baseInitEffectValue*this.sdgCtrl.powerupEffectMultiplier[this.kind].Value()}get baseIncrementEffectValuePerRank(){return 0}get incrementEffectValuePerRank(){return this.baseIncrementEffectValuePerRank*this.sdgCtrl.powerupEffectMultiplier[this.kind].Value()}EffectValue(){const t=this.initEffectValue+this.rank*this.incrementEffectValuePerRank;if(this.sdgCtrl.data.source.isSuperDungeon&&this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.ReducePowerupEffect]){const s=this.sdgCtrl.data.source.sdModifierValues[950+Rt.ReducePowerupEffect],i=s==0?.5:s==1?.9:.99;return t*Math.max(0,1-i)}return t}get basePermEffect(){return 0}get permEffect(){return this.basePermEffect*this.sdgCtrl.powerupPermEffectMultiplier.Value()}get basePermEffectMaxValue(){return 1e300}get permEffectMaxValue(){return this.basePermEffectMaxValue*this.sdgCtrl.powerupPermEffectMultiplier.Value()}PermanentEffectValue(){return this.sdgCtrl.data.source.isSuperDungeon&&this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDPowerupPassives]?0:Math.min(this.permEffectMaxValue,Math.pow(this.purchasedNum,2/3)*this.permEffect)}RankCost(t){return 0}NameString(){return Pe.SDPowerupString(this.kind,this.PermanentEffectValue()).name}TotalRankCost(){let t=0;for(let s=0;s<this.rank;s++)this.rank&&(t+=this.RankCost(s));return t}EffectValueString(){return Pe.SDPowerupString(this.kind,this.PermanentEffectValue()).passive}}class u1 extends Nt{get kind(){return me.ChallengeBossDamageMultiplier}constructor(t){super(t)}Cost(t){return 50+50*t+50*(Math.pow(10,t/10)-1)}RankCost(t){return 4+4*t}get unlockDungeonCoinCost(){return 75e3}SetEffect(){return this.ctrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<N.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .01}}class o1 extends Nt{get kind(){return me.CriticalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 500}Cost(t){return 10+10*t+10*(Math.pow(5,t/10)-1)}SetEffect(){this.ctrl.data.stats.HeroStats(this.heroKind,D.CriticalDamage).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(D.CriticalDamage,new u(n.DungeonItemPermanent,r.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .5}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .01}}class c1 extends Nt{get kind(){return me.DamageCutMultiplier}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/10)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.damageCutMultiplier.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<N.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .05}get baseIncrementEffectValuePerRank(){return .025}get basePermEffect(){return .01}}class h1 extends Nt{get kind(){return me.DamageMultiplier}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/10)-1)}RankCost(t){return 1+t}SetEffect(){this.ctrl.damageMultiplier.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<N.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .5}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .01}}class f1 extends Nt{get kind(){return me.DodgeHeal}constructor(t){super(t)}Cost(t){return 25*Math.pow(2,t)}RankCost(t){return 2+2*t}get unlockDungeonCoinCost(){return 100}SetEffect(){return this.ctrl.dodgeHealPercent.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.MP,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 2}}class d1 extends Nt{get kind(){return me.DungeonCoinGain}constructor(t){super(t)}Cost(t){return 50*Math.pow(2,t)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 5e3}SetEffect(){return this.sdgCtrl.dungeonCoinBonus.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.sdgCtrl.dungeonCoinGain.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .001}}class p1 extends Nt{get kind(){return me.EquipmentDropChance}constructor(t){super(t)}RankCost(t){return 5+5*t}get unlockDungeonCoinCost(){return 1e5}Cost(t){return 200+200*t+200*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,D.EquipmentDropChance).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(D.ArtifactProficiencyGain,new u(n.DungeonItemPermanent,r.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .001}get baseIncrementEffectValuePerRank(){return 1e-4}get basePermEffect(){return .005}}class g1 extends Nt{get kind(){return me.ExtraAfterDamage}constructor(t){super(t)}RankCost(t){return 5+5*t}get unlockDungeonCoinCost(){return 1e5}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.Hero(this.heroKind).extraAfterDamage.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<N.HeroKind;t++)this.ctrl.data.stats.Hero(t).extraAfterDamage.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .25}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .001}}class m1 extends Nt{get kind(){return me.FameGain}constructor(t){super(t)}Cost(t){return 100*Math.pow(10,t/5)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 1e4}SetEffect(){return this.ctrl.data.superStats.Hero(this.heroKind).fameGain.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<N.HeroKind;t++)this.ctrl.data.superStats.Hero(t).fameGain.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .05}get baseIncrementEffectValuePerRank(){return .005}get basePermEffect(){return .001}}class M1 extends Nt{get kind(){return me.Heal}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(2,t)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.healPercentEveryFloor.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.HP,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 5}}class w1 extends Nt{get kind(){return me.MagicalAbsorption}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){this.ctrl.data.stats.ElementAbsorption(this.heroKind,B.Fire).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,B.Ice).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,B.Thunder).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,B.Light).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,B.Dark).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.MDEF,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 1}}class S1 extends Nt{get kind(){return me.MagicalCriticalChance}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 200}Cost(t){return 25+25*t+10*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,D.MagCritChance).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(D.MagCritChance,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .02}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 5e-4}}class A1 extends Nt{get kind(){return me.MagicalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){this.ctrl.data.stats.ElementDamage(this.heroKind,B.Fire).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,B.Ice).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,B.Thunder).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,B.Light).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,B.Dark).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.MATK,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .5}get basePermEffect(){return 1}}class b1 extends Nt{get kind(){return me.MoveSpeed}constructor(t){super(t)}RankCost(t){return 1+t}Cost(t){return 25+25*t+25*(Math.pow(10,t/5)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,D.MoveSpeed).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(D.MoveSpeed,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 50}get baseIncrementEffectValuePerRank(){return 10}get basePermEffect(){return .1}get basePermEffectMaxValue(){return 1e3}}class k1 extends Nt{get kind(){return me.PhysicalAbsorption}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.ElementAbsorption(this.heroKind,B.Physical).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.DEF,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 1}}class E1 extends Nt{get kind(){return me.PhysicalCriticalChance}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 200}Cost(t){return 25+25*t+10*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,D.PhysCritChance).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(D.PhysCritChance,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .02}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 5e-4}}class D1 extends Nt{get kind(){return me.PhysicalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.ElementDamage(this.heroKind,B.Physical).RegisterMultiplier(new u(n.DungeonItem,r.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.ATK,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .5}get basePermEffect(){return 1}}class R1 extends Nt{get kind(){return me.RestoreDodgeTimesec}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/5)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.dodgeTimeRestoreSecEveryFloor.RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.sdgCtrl.dodgeTimesec.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .1}get basePermEffectMaxValue(){return 20}}class C1 extends Nt{get kind(){return me.SkillCastSpeed}constructor(t){super(t)}RankCost(t){return 2+2*t}get unlockDungeonCoinCost(){return 500}Cost(t){return 25*Math.pow(2,t)}SetEffect(){return this.ctrl.data.skill.skillCastSpeedModifier[this.heroKind].RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.SPD,new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .1}get baseIncrementEffectValuePerRank(){return .01}get basePermEffect(){return 1}}class y1 extends Nt{get kind(){return me.SkillHitCount}constructor(t){super(t)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 5e4}Cost(t){return 50*Math.pow(2,t)}SetEffect(){this.ctrl.data.skill.extraSkillHitCount[this.heroKind].RegisterMultiplier(new u(n.DungeonItem,r.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<this.ctrl.data.skill.skillLevelBonus.length;t++)this.ctrl.data.skill.skillLevelBonus[t].RegisterMultiplier(new u(n.DungeonItemPermanent,r.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .5}}class P1 extends Nt{get kind(){return me.TimeLimit}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/5)-1)}RankCost(t){return 1+t}SetGlobalEffect(){this.sdgCtrl.additionalTimeLimit.RegisterMultiplier(new u(n.DungeonItemPermanent,r.Add,()=>this.PermanentEffectValue))}get baseInitEffectValue(){return 10}get baseIncrementEffectValuePerRank(){return 2}get basePermEffect(){return .5}}class v1{constructor(t){o(this,"data");o(this,"battleCtrl");o(this,"initialDungeonCoin");o(this,"powerupList",[]);o(this,"skillSlotNum");o(this,"eqWeaponSlotNum");o(this,"eqArmorSlotNum");o(this,"eqJewelrySlotNum");o(this,"utilitySlotNum");o(this,"damageMultiplier");o(this,"damageCutMultiplier");o(this,"sdChallengeBossDamageMultiplier");o(this,"sdChallengeBossDamageCutMultiplier");o(this,"armoredFury");o(this,"wardedFury");o(this,"healPercentEveryFloor");o(this,"mpChargePercentEveryFloor");o(this,"dodgeTimesecLeft");o(this,"dodgeHealPercent");o(this,"dodgeTimeRestoreSecEveryFloor");this.battleCtrl=t,this.data=t.data,this.initialDungeonCoin=new H,this.skillSlotNum=new H(new u(n.Base,r.Add,()=>1)),this.eqWeaponSlotNum=new H(new u(n.Base,r.Add,()=>0)),this.eqArmorSlotNum=new H(new u(n.Base,r.Add,()=>0)),this.eqJewelrySlotNum=new H(new u(n.Base,r.Add,()=>0)),this.utilitySlotNum=new H(new u(n.Base,r.Add,()=>0)),this.damageMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.damageCutMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.sdChallengeBossDamageMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.sdChallengeBossDamageCutMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.armoredFury=new H,this.wardedFury=new H,this.healPercentEveryFloor=new H(new u(n.Base,r.Add,()=>0),()=>1,()=>0),this.mpChargePercentEveryFloor=new H(new u(n.Base,r.Add,()=>0),()=>1,()=>0),this.dodgeHealPercent=new H(new u(n.Base,r.Add,()=>0),()=>1,null),this.dodgeTimeRestoreSecEveryFloor=new H,this.SetPowerups()}get heroKind(){return this.battleCtrl.heroKind}get sdgCtrl(){return this.battleCtrl.data.sdg}Start(){this.damageMultiplier.RegisterMultiplier(new u(n.ArmoredFury,r.Mul,()=>this.armoredFury.Value()*Math.log2(Math.max(1,this.battleCtrl.data.stats.BasicStats(this.heroKind,m.DEF).After())))),this.damageMultiplier.RegisterMultiplier(new u(n.WardedFury,r.Mul,()=>this.wardedFury.Value()*Math.log2(Math.max(1,this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MDEF).After()))));for(let t=0;t<this.powerupList.length;t++)this.powerupList[t].Start()}SetPowerups(){this.powerupList.push(new M1(this)),this.powerupList.push(new P1(this)),this.powerupList.push(new h1(this)),this.powerupList.push(new c1(this)),this.powerupList.push(new R1(this)),this.powerupList.push(new f1(this)),this.powerupList.push(new d1(this)),this.powerupList.push(new m1(this)),this.powerupList.push(new C1(this)),this.powerupList.push(new E1(this)),this.powerupList.push(new S1(this)),this.powerupList.push(new o1(this)),this.powerupList.push(new b1(this)),this.powerupList.push(new D1(this)),this.powerupList.push(new A1(this)),this.powerupList.push(new k1(this)),this.powerupList.push(new w1(this)),this.powerupList.push(new y1(this)),this.powerupList.push(new g1(this)),this.powerupList.push(new p1(this)),this.powerupList.push(new u1(this))}Powerup(t){for(let s=0;s<this.powerupList.length;s++)if(this.powerupList[s].kind==t)return this.powerupList[s];return null}}class ho{constructor(t,s){o(this,"data");o(this,"heroKind");o(this,"tempValue");o(this,"isSlayerOil");o(this,"calculatedDamage");o(this,"elementAbsorptionValue");o(this,"tempTotalDamagePerHitCount");o(this,"tempTotalDamage");o(this,"tempExtraAfterDamage");o(this,"totalDamage");o(this,"electricDamage",0);o(this,"slayerOilDamage",0);o(this,"poisonDamagePerSec");o(this,"isPilfered");o(this,"battleCtrl");o(this,"fieldDebuffElement");o(this,"fieldDebuffPhyCrit");o(this,"fieldDebuffMagCrit");o(this,"fieldCurseMoveSpeedMul");o(this,"fieldDebuffDebuffRes");o(this,"isHero",!1);this.data=t,this.heroKind=s.heroKind,this.battleCtrl=s,this.fieldDebuffElement=Array(5).fill(0),this.fieldDebuffPhyCrit=0,this.fieldDebuffMagCrit=0,this.fieldCurseMoveSpeedMul=0,this.fieldDebuffDebuffRes=0}get level(){return this.data.source.enemyLevel}get species(){return this.data.source.enemySpecies}get color(){return this.species==Z.Mimic?_t.Normal:this.data.source.enemyColor}DebuffFactor(t){return 1}DamageFactorElement(t){switch(t){case B.Physical:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[B.Physical].Value();case B.Fire:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[B.Fire].Value();case B.Ice:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[B.Ice].Value();case B.Thunder:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[B.Thunder].Value();case B.Light:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[B.Light].Value();case B.Dark:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[B.Dark].Value();default:return 1}}get atk(){return 0}get matk(){return 0}get isPet(){return!1}get def(){return 0}get mdef(){return 0}get spd(){return 0}get fire(){return 0}get ice(){return 0}get thunder(){return 0}get light(){return 0}get dark(){return 0}get extraAfterDamage(){return 0}get critDamage(){return 0}get damageFactor(){return 1}DamageCutRate(t,s){let i=1,c=0;switch(s){case B.Physical:c=this.def/(t+this.def);break;case B.Fire:i*=1-Math.min(.9,this.fire),c=this.mdef/(t+this.mdef);break;case B.Ice:i*=1-Math.min(.9,this.ice),c=this.mdef/(t+this.mdef);break;case B.Thunder:i*=1-Math.min(.9,this.thunder),c=this.mdef/(t+this.mdef);break;case B.Light:i*=1-Math.min(.9,this.light),c=this.mdef/(t+this.mdef);break;case B.Dark:i*=1-Math.min(.9,this.dark),c=this.mdef/(t+this.mdef);break}return i*(1-Math.min(.9999,this.DamageCutModifier(c)))}DamageModifier(t){return this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageMultiplier.Value():t}DamageCutModifier(t){return this.isHero&&this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageCutMultiplier.Value():t}CalculateDamage(t,s,i,c){return this.tempValue=t,this.tempValue*=this.DamageCutRate(t,i),this.tempValue<0?0:(this.tempValue*=this.damageFactor,this.tempValue*=this.DamageFactorElement(i),this.tempValue=Math.max(1,this.tempValue),c&&(this.tempValue*=s),this.tempValue)}Attacked(t,s,i,c,l){return this.isSlayerOil=!this.isHero&&this.battleCtrl.CurrentSlayerElement()!=0,this.isSlayerOil&&(l=this.battleCtrl.CurrentSlayerElement()),this.calculatedDamage=this.CalculateDamage(s,t.critDamage,l,c),this.tempTotalDamagePerHitCount=this.DamageModifier(this.calculatedDamage),this.tempTotalDamage=this.tempTotalDamagePerHitCount*i,this.slayerOilDamage=this.isSlayerOil?this.tempTotalDamage*this.battleCtrl.data.stats.ElementSlayerDamage(this.battleCtrl.heroKind,l).Value():0,this.totalDamage=this.tempTotalDamage+this.electricDamage+this.slayerOilDamage,this.tempExtraAfterDamage=this.totalDamage*t.extraAfterDamage,this.totalDamage+=this.tempExtraAfterDamage,this.totalDamage}AttackedInfo(){const t=this.data.battle.hero,s=this.data.skill.Skill(0,this.data.source.currentHero),i=s.DamageOrigin(t,!1),c=!0,l=this.data.source.currentHero==v.Angel?s.HitCount()/5:s.HitCount();let M=s.element;const b=!this.isHero&&this.battleCtrl.CurrentSlayerElement()!=0;b&&(M=this.battleCtrl.CurrentSlayerElement());let k={DamagePerHit:this.DamageModifier(this.CalculateDamage(i,t.critDamage,M,c)),tempTotalDamage:0,slayerOilDamage:0,electricDamage:0,totalBeforeExtraAfter:0,extraAfterDamagePerHit:0,extraAfterDamage:0,totalDamage:0,skill:s,hero:t,damage:i,element:M,SlayerOilValue:this.data.stats.ElementSlayerDamage(this.battleCtrl.heroKind,M).Value(),castTime:s.CalculateInterval(t),dps:0,realHitCount:l};return k.tempTotalDamage=k.DamagePerHit*l,k.slayerOilDamage=b?k.tempTotalDamage*k.SlayerOilValue:0,k.totalBeforeExtraAfter=k.tempTotalDamage+k.electricDamage+k.slayerOilDamage,k.extraAfterDamagePerHit=k.DamagePerHit*t.extraAfterDamage,k.extraAfterDamage=k.totalBeforeExtraAfter*t.extraAfterDamage,k.totalDamage=k.tempTotalDamage+k.electricDamage+k.slayerOilDamage+k.extraAfterDamage,k.dps=k.totalDamage/k.castTime,k}}class fo extends ho{constructor(s,i){super(s,i);o(this,"difficulty",0)}get isPet(){return!1}get globalInformation(){return this.battleCtrl.data.monster.GlobalInformation(this.species,this.color)}get attackElement(){return this.globalInformation.AttackElement()}get hp(){return this.globalInformation.Hp(this.level,this.difficulty)}get mp(){return this.globalInformation.Mp(this.level,this.difficulty)}get atk(){return this.DebuffFactor(Ze.AtkDown)*this.globalInformation.Atk(this.level,this.difficulty)}get matk(){return this.DebuffFactor(Ze.MatkDown)*this.globalInformation.MAtk(this.level,this.difficulty)}get def(){return this.DebuffFactor(Ze.DefDown)*this.globalInformation.Def(this.level,this.difficulty)}get mdef(){return this.DebuffFactor(Ze.MdefDown)*this.globalInformation.MDef(this.level,this.difficulty)}get spd(){return this.DebuffFactor(Ze.SpdDown)*this.DebuffFactor(Ze.Stop)*this.globalInformation.Spd()}get fire(){return this.globalInformation.Fire()}get ice(){return this.globalInformation.Ice()}get thunder(){return this.globalInformation.Thunder()}get light(){return this.globalInformation.Light()}get dark(){return this.globalInformation.Dark()}get phyCrit(){return this.globalInformation.PhyCrit(this.level)}get magCrit(){return this.globalInformation.MagCrit(this.level)}get critDamage(){return this.globalInformation.CriticalDamage()}get debuffResistance(){return this.globalInformation.DebuffResistance()}get damageFactor(){return this.battleCtrl.data.stats.MonsterDamage(this.battleCtrl.heroKind,this.species).isLog=this.battleCtrl.data.source.isSuperDungeon,this.battleCtrl.data.stats.MonsterDamage(this.battleCtrl.heroKind,this.species).Value()}DamageFactorElement(s){return this.battleCtrl.data.stats.ElementDamage(this.battleCtrl.heroKind,s).isLog=this.battleCtrl.data.source.isSuperDungeon,this.battleCtrl.data.stats.ElementDamage(this.battleCtrl.heroKind,s).Value()}get exp(){return this.globalInformation.Exp(this.level,this.difficulty)}get resource(){return 1}CalculatedExp(s){let i=this.exp,c=this.level-s,l=c>=-60?c>=-40?c>=-20?c>20?c>40?c>60?c>80?c>100?c>150?c>200?c>300?i*.01:i*.1:i*.25:i*.5:i*.75:i*1:i*1.15:i*1.3:i*1.5:i*1.3:i*1.15:i*1;return this.color==_t.Metal&&(l*=1+this.battleCtrl.data.quest.TitleEffectValue(this.battleCtrl.heroKind,G.MetalHunter).sub),l}get gainFactor(){return this.battleCtrl.data.guild.Member(this.battleCtrl.heroKind).gainRate}Damage(){return this.globalInformation.Damage(this.level,this.difficulty)}}class B1 extends fo{constructor(t,s){super(t,s)}get species(){return Z.ChallengeBoss}get globalInformation(){return this.battleCtrl.data.monster.GlobalInformationChallengeBoss(this.challengeMonsterKind)}get challengeMonsterKind(){return this.battleCtrl.data.source.enemyChallenge}get hp(){let t=this.globalInformation.Hp(this.level,this.difficulty),s=this.level;switch(this.challengeMonsterKind){case qt.Florzporb:return t*Math.max(1,Math.pow(5,Math.max(0,s-300)/100))*Math.max(1,Math.pow(5,Math.max(0,s-400)/100));case qt.GuardianKor:return t*Math.max(1,Math.pow(10,Math.max(0,s-400)/100))*Math.max(1,Math.pow(5,Math.max(0,s-500)/100));case qt.Arachnetta:return t*Math.max(1,Math.pow(5,Math.max(0,s-350)/100))*Math.max(1,Math.pow(5,Math.max(0,s-450)/100));case qt.Nostro:return t*Math.max(1,Math.pow(10,Math.max(0,s-450)/100))*Math.max(1,Math.pow(5,Math.max(0,s-550)/100));case qt.LadyEmelda:return t*Math.pow(2,Math.max(1,s-300)/100)*Math.max(1,Math.pow(25,Math.max(0,s-600)/100));case qt.NariSune:return t*Math.max(1,Math.pow(5,Math.max(0,s-350)/100))*Math.max(1,Math.pow(10,Math.max(0,s-650)/100));case qt.Octobaddie:return t*Math.max(1,Math.pow(1e6,Math.max(0,s-400)/100))*Math.max(1,Math.pow(10,Math.max(0,s-700)/100));default:return t}}DamageModifier(t){return this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageMultiplier.Value()*this.battleCtrl.superDungeonCtrl.sdChallengeBossDamageMultiplier.Value():t}}class L1 extends ho{constructor(s,i,c){super(s,c);o(this,"isAutoMove",!0);o(this,"initUIAction");o(this,"tempSkillId");o(this,"tempSkill");o(this,"isHero",!0);this.battleCtrl=c,this.heroKind=i}get level(){return this.battleCtrl.data.source.heroLevel[this.heroKind]}StatsModifier(s){return this.battleCtrl.isSuperDungeon?Math.log10(Math.max(1,s)):s}Start(){}get hp(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.HP).Value()}get mp(){return Math.max(0,this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MP).Value()-this.battleCtrl.data.stats.heroes[this.heroKind].channeledMp.Value())}get atk(){return this.battleCtrl.data.source.isSuperDungeon&&this.battleCtrl.data.source.isActiveSdModifiers[950+Rt.SwapATKWithDEF]?this.battleCtrl.data.stats.BasicStats(this.heroKind,m.DEF).Value():this.battleCtrl.data.stats.BasicStats(this.heroKind,m.ATK).Value()}get matk(){return this.battleCtrl.data.source.isSuperDungeon&&this.battleCtrl.data.source.isActiveSdModifiers[950+Rt.SwapATKWithDEF]?this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MDEF).Value():this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MATK).Value()}get def(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.DEF).Value()}get mdef(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MDEF).Value()}get spd(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.SPD).Value()}get fire(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,B.Fire).Value()+this.fieldDebuffElement[1]*this.battleCtrl.areaBattle.areaDebuffFactor}get ice(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,B.Ice).Value()+this.fieldDebuffElement[2]*this.battleCtrl.areaBattle.areaDebuffFactor}get thunder(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,B.Thunder).Value()+this.fieldDebuffElement[3]*this.battleCtrl.areaBattle.areaDebuffFactor}get light(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,B.Light).Value()+this.fieldDebuffElement[4]*this.battleCtrl.areaBattle.areaDebuffFactor}get dark(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,B.Dark).Value()+this.fieldDebuffElement[5]*this.battleCtrl.areaBattle.areaDebuffFactor}get phyCrit(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,D.PhysCritChance).Value()+this.fieldDebuffPhyCrit*this.battleCtrl.areaBattle.areaDebuffFactor}get magCrit(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,D.MagCritChance).Value()+this.fieldDebuffMagCrit*this.battleCtrl.areaBattle.areaDebuffFactor}get critDamage(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,D.CriticalDamage).Value()}get moveSpeed(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,D.MoveSpeed).Value()*this.fieldCurseMoveSpeedMul}get extraAfterDamage(){return this.battleCtrl.data.stats.Hero(this.heroKind).extraAfterDamage.Value()}get debuffResistance(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,D.DebuffRes).Value()+this.fieldDebuffDebuffRes*this.battleCtrl.areaBattle.areaDebuffFactor}get physicalAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,B.Physical).Value()}get fireAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,B.Fire).Value()}get iceAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,B.Ice).Value()}get thunderAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,B.Thunder).Value()}get lightAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,B.Light).Value()}get darkAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,B.Dark).Value()}get physicalInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,B.Physical).Value()}get fireInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,B.Fire).Value()}get iceInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,B.Ice).Value()}get thunderInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,B.Thunder).Value()}get lightInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,B.Light).Value()}get darkInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,B.Dark).Value()}get guardianKorInvalidChanceDamageHpPercent(){return Math.min(.25,this.battleCtrl.data.stats.heroes[this.heroKind].guardianKorInvalidDamageHpPercent.Value())}}class T1{constructor(t,s){o(this,"data");o(this,"heroKind");o(this,"hero");o(this,"monster");o(this,"challengeMonster");o(this,"areaBattle",{areaDebuffFactor:1});o(this,"superDungeonCtrl");o(this,"isSuperDungeon",!0);this.data=t,this.heroKind=s,this.superDungeonCtrl=new v1(this),this.monster=new fo(t,this),this.challengeMonster=new B1(t,this),this.hero=new L1(t,this.heroKind,this)}Start(){this.superDungeonCtrl.Start()}CurrentSlayerElement(){for(let t=0;t<N.Element;++t){let s=t;if(this.data.stats.ElementSlayerDamage(this.heroKind,s).Value()>0)return s}return B.Physical}Enemy(){return this.data.source.enemySpecies==Z.ChallengeBoss?this.challengeMonster:this.monster}}var is=(e=>(e[e.Hp=0]="Hp",e[e.Atk=1]="Atk",e[e.MAtk=2]="MAtk",e[e.MoveSpeed=3]="MoveSpeed",e[e.SkillProficiency=4]="SkillProficiency",e[e.EquipProficiency=5]="EquipProficiency",e[e.GoldGain=6]="GoldGain",e[e.ExpGain=7]="ExpGain",e))(is||{});class x1{constructor(t,s,i){o(this,"data");o(this,"heroKind");o(this,"kind");this.data=t,this.heroKind=s,this.kind=i}get effectValue(){switch(this.kind){case is.Atk:case is.Hp:case is.MAtk:case is.ExpGain:case is.EquipProficiency:case is.SkillProficiency:return .5*this.data.blessingInfo.effectMultipliers[this.heroKind].Value();case is.MoveSpeed:return Math.min(1,.25*this.data.blessingInfo.effectMultipliers[this.heroKind].Value())}}Start(){this.SetEffect()}SetEffect(){switch(this.kind){case is.Atk:this.data.stats.BasicStats(this.heroKind,m.ATK).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.EquipProficiency:this.data.stats.HeroStats(this.heroKind,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.ExpGain:this.data.stats.HeroStats(this.heroKind,D.ExpGain).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.EquipProficiency:this.data.stats.GoldGain().RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.Hp:this.data.stats.BasicStats(this.heroKind,m.HP).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.MAtk:this.data.stats.BasicStats(this.heroKind,m.MATK).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.MoveSpeed:this.data.stats.HeroStats(this.heroKind,D.MoveSpeed).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case is.SkillProficiency:this.data.stats.HeroStats(this.heroKind,D.SkillProficiencyGain).RegisterMultiplier(new u(n.Blessing,r.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break}}}class G1{constructor(t){o(this,"data");o(this,"effectMultipliers",Array(N.HeroKind));o(this,"duration");o(this,"heroes",Array(N.HeroKind));this.data=t,this.duration=new H(new u(n.Base,r.Add,()=>180));for(let s=0;s<this.effectMultipliers.length;s++)this.effectMultipliers[s]=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.heroes.length;s++){this.heroes[s]=[];for(let i=0;i<8;i++)this.heroes[s].push(new x1(this.data,s,i))}}SetEffectMultiplier(t){for(let s=0;s<this.effectMultipliers.length;s++)this.effectMultipliers[s].RegisterMultiplier(t)}Start(){for(let t=0;t<this.heroes.length;t++)for(let s=0;s<8;s++)this.heroes[t][s].Start()}}var po=(e=>(e[e.RaidBossBattle=0]="RaidBossBattle",e[e.SingleBossBattle=1]="SingleBossBattle",e[e.HandicappedBattle=2]="HandicappedBattle",e[e.SuperDungeon=3]="SuperDungeon",e))(po||{}),ae;class et{constructor(t,s){Kt(this,ae,void 0);o(this,"handicapKindList",[]);o(this,"type",po.RaidBossBattle);o(this,"superDungeonId");o(this,"kind");es(this,ae,t),this.kind=s}get statRewardMultiplier(){return R(this,ae).challenge.sdStatRewardMultiplier.Value()}Start(){this.SetReward()}IsCleared(t){return R(this,ae).source.isClearedChallenge[t+10*this.kind]}IsClearedOnce(){for(let t=0;t<N.HeroKind;t++)if(this.IsCleared(t))return!0;return!1}GetMaxModifierCleared(t){return R(this,ae).source.maxModifierCleareds[t+10*this.superDungeonId]}BaseRewardValueIncrementPerFloor(t){switch(this.superDungeonId){case 0:switch(t){case v.Warrior:return 1;case v.Wizard:return 1;case v.Angel:return 1;case v.Thief:return .2;case v.Archer:return .05;case v.Tamer:return .05;default:return 0}case 1:switch(t){case v.Warrior:return .025;case v.Wizard:return .025;case v.Angel:return .025;case v.Thief:return .025;case v.Archer:return .025;case v.Tamer:return .025;default:return 0}case 2:switch(t){case v.Warrior:return .01;case v.Wizard:return .01;case v.Angel:return .01;case v.Thief:return .01;case v.Archer:return .01;case v.Tamer:return .01;default:return 0}case 3:switch(t){case v.Warrior:return .01;case v.Wizard:return .01;case v.Angel:return .01;case v.Thief:return .01;case v.Archer:return .01;case v.Tamer:return .01;default:return 0}case 4:switch(t){case v.Warrior:return .005;case v.Wizard:return .005;case v.Angel:return 1/400;case v.Thief:return 1/400;case v.Archer:return 1/400;case v.Tamer:return 1/400;default:return 0}default:return 0}}RewardValueIncrementPerFloor(t){return this.BaseRewardValueIncrementPerFloor(t)*this.statRewardMultiplier}SuperDungeonMaxFloorReached(t){return R(this,ae).source.superDungeonMaxFloorsReached[t+10*this.superDungeonId]}FloorRewardValue(t){return this.RewardValueIncrementPerFloor(t)*this.SuperDungeonMaxFloorReached(t)*(1+.1*this.GetMaxModifierCleared(t))}IsClearedCompleted(){for(let t=0;t<N.HeroKind;t++)if(!this.IsCleared(t))return!1;return!0}get isReceivedRewardOnce(){return R(this,ae).source.isReceivedRewardsChallenge[this.kind*10]}set isReceivedRewardOnce(t){R(this,ae).source.isReceivedRewardsChallenge[this.kind*10]=t}get isReceivedRewardWarrior(){return R(this,ae).source.isReceivedRewardsChallenge[1+this.kind*10]}set isReceivedRewardWarrior(t){R(this,ae).source.isReceivedRewardsChallenge[1+this.kind*10]=t}get isReceivedRewardWizard(){return R(this,ae).source.isReceivedRewardsChallenge[2+this.kind*10]}set isReceivedRewardWizard(t){R(this,ae).source.isReceivedRewardsChallenge[2+this.kind*10]=t}get isReceivedRewardAngel(){return R(this,ae).source.isReceivedRewardsChallenge[3+this.kind*10]}set isReceivedRewardAngel(t){R(this,ae).source.isReceivedRewardsChallenge[3+this.kind*10]=t}get isReceivedRewardThief(){return R(this,ae).source.isReceivedRewardsChallenge[4+this.kind*10]}set isReceivedRewardThief(t){R(this,ae).source.isReceivedRewardsChallenge[4+this.kind*10]=t}get isReceivedRewardArcher(){return R(this,ae).source.isReceivedRewardsChallenge[5+this.kind*10]}set isReceivedRewardArcher(t){R(this,ae).source.isReceivedRewardsChallenge[5+this.kind*10]=t}get isReceivedRewardTamer(){return R(this,ae).source.isReceivedRewardsChallenge[6+this.kind*10]}set isReceivedRewardTamer(t){R(this,ae).source.isReceivedRewardsChallenge[6+this.kind*10]=t}get isReceivedRewardComplete(){return R(this,ae).source.isReceivedRewardsChallenge[7+this.kind*10]}set isReceivedRewardComplete(t){R(this,ae).source.isReceivedRewardsChallenge[7+this.kind*10]=t}IsReceivedRewardClass(t){switch(t){case v.Warrior:return this.isReceivedRewardWarrior;case v.Wizard:return this.isReceivedRewardWizard;case v.Angel:return this.isReceivedRewardAngel;case v.Thief:return this.isReceivedRewardThief;case v.Archer:return this.isReceivedRewardArcher;case v.Tamer:return this.isReceivedRewardTamer;default:return!1}}get rewardMultiplier(){return R(this,ae).challenge.permanentRewardMultiplier.Value()}SetReward(){switch(this.kind){case J.RaidFlorzporb100:break;case J.SoloFlorzporb100:this.SetRewardEquipmentSlot(F.Weapon);break;case J.RaidArachnetta150:break;case J.SoloArachnetta150:break;case J.RaidGuardianKor200:break;case J.SoloGuardianKor200:this.SetRewardEquipmentSlot(F.Jewelry);break;case J.HCArena1:break;case J.HCFlorzporb100:this.SetRewardBasicStats(.1);break;case J.HCArachnetta150:this.SetRewardBasicStats(.2);break;case J.HCGuardianKor200:this.SetRewardBasicStats(.3);break;case J.HCArena2:break;case J.RaidNostro250:break;case J.SoloNostro250:this.SetRewardEquipmentSlot(F.Armor);break;case J.HCNostro250:this.SetRewardBasicStats(.4);break;case J.RaidLadyEmelda300:break;case J.SoloLadyEmelda300:this.SetRewardEquipmentSlot(F.Weapon);break;case J.HCLadyEmelda300:this.SetRewardBasicStats(.5);break;case J.RaidNariSune350:break;case J.SoloNariSune350:this.SetRewardEquipmentSlot(F.Jewelry);break;case J.HCNariSune350:this.SetRewardBasicStats(.6);break;case J.RaidOctobaddie400:break;case J.SoloOctobaddie400:this.SetRewardEquipmentSlot(F.Armor);break;case J.HCOctobaddie400:this.SetRewardOcto([.1,.1,.1,1,1,1]);break;case J.RaidBananoon450:break;case J.SoloBananoon450:break;case J.HCBananoon450:break;case J.RaidGlorbliorbus500:break;case J.SoloGlorbliorbus500:break;case J.HCGlorbliorbus500:break;case J.RaidDistortionSlime550:break;case J.SoloDistortionSlime550:break;case J.HCDistortionSlime550:break;case J.RaidFlorzporb200:break;case J.SoloFlorzporb200:break;case J.HCFlorzporb200:this.SetRewardBasicStats(.2);break;case J.RaidFlorzporb300:break;case J.SoloFlorzporb300:break;case J.HCFlorzporb300:this.SetRewardBasicStats(.3);break;case J.RaidArachnetta250:break;case J.SoloArachnetta250:break;case J.HCArachnetta250:this.SetRewardBasicStats(.3);break;case J.RaidArachnetta350:break;case J.SoloArachnetta350:break;case J.HCArachnetta350:this.SetRewardBasicStats(.4);break;case J.RaidGuardianKor300:break;case J.SoloGuardianKor300:break;case J.HCGuardianKor300:this.SetRewardBasicStats(.4);break;case J.RaidGuardianKor400:break;case J.SoloGuardianKor400:break;case J.HCGuardianKor400:this.SetRewardBasicStats(.5);break;case J.RaidNostro350:break;case J.SoloNostro350:break;case J.HCNostro350:this.SetRewardBasicStats(.5);break;case J.RaidNostro450:break;case J.SoloNostro450:break;case J.HCNostro450:this.SetRewardBasicStats(.6);break;case J.HCArena3:break;case J.HCArena4:break;case J.HCArena5:break;case J.HCArena6:break;case J.HCArena7:break;case J.HCArena8:break;case J.HCArena9:break;case J.HCArena10:break;case J.RaidFlorzporb400:break;case J.SoloFlorzporb400:break;case J.HCFlorzporb400:this.SetRewardBasicStats(.4);break;case J.RaidArachnetta450:break;case J.SoloArachnetta450:break;case J.HCArachnetta450:this.SetRewardBasicStats(.5);break;case J.RaidGuardianKor500:break;case J.SoloGuardianKor500:break;case J.HCGuardianKor500:this.SetRewardBasicStats(.6);break;case J.RaidNostro550:break;case J.SoloNostro550:break;case J.HCNostro550:this.SetRewardBasicStats(.7);break;case J.RaidLadyEmelda400:break;case J.SoloLadyEmelda400:break;case J.HCLadyEmelda400:this.SetRewardBasicStats(.6);break;case J.RaidLadyEmelda500:break;case J.SoloLadyEmelda500:break;case J.HCLadyEmelda500:this.SetRewardBasicStats(.7);break;case J.RaidLadyEmelda600:break;case J.SoloLadyEmelda600:break;case J.HCLadyEmelda600:this.SetRewardBasicStats(.8);break;case J.RaidNariSune450:break;case J.SoloNariSune450:break;case J.HCNariSune450:this.SetRewardBasicStats(.7);break;case J.RaidNariSune550:break;case J.SoloNariSune550:break;case J.HCNariSune550:this.SetRewardBasicStats(.8);break;case J.RaidNariSune650:break;case J.SoloNariSune650:break;case J.HCNariSune650:this.SetRewardBasicStats(.9);break;case J.SDSlime:this.superDungeonId=0,R(this,ae).stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Warrior))),R(this,ae).stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Wizard))),R(this,ae).stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Angel))),R(this,ae).resource.goldCap.RegisterMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Thief))),R(this,ae).stats.GoldGain().RegisterMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Archer))),R(this,ae).resource.slimeCoinCap.RegisterMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Tamer)));break;case J.RaidOctobaddie500:break;case J.SoloOctobaddie500:break;case J.HCOctobaddie500:this.SetRewardOcto([.2,.2,.2,5,5,5]);break;case J.RaidOctobaddie600:break;case J.SoloOctobaddie600:break;case J.HCOctobaddie600:this.SetRewardOcto([.4,.4,.4,25,25,25]);break;case J.RaidOctobaddie700:break;case J.SoloOctobaddie700:break;case J.HCOctobaddie700:this.SetRewardOcto([.8,.8,.8,125,125,125]);break;case J.SDSpider:this.superDungeonId=1,R(this,ae).stats.SetEffectBasicStats(m.HP,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Warrior))),R(this,ae).stats.SetEffectBasicStats(m.MP,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Wizard))),R(this,ae).stats.SetEffectBasicStats(m.ATK,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Angel))),R(this,ae).stats.SetEffectBasicStats(m.MATK,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Thief))),R(this,ae).stats.SetEffectBasicStats(m.DEF,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Archer))),R(this,ae).stats.SetEffectBasicStats(m.MDEF,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Tamer)));break;case J.SDBatTreant:this.superDungeonId=2,R(this,ae).stats.SetEffectElementDamage(B.Physical,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Warrior))),R(this,ae).stats.SetEffectStats(D.PhysCritChance,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Wizard))),R(this,ae).stats.SetEffectStats(D.ArmoredFury,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Angel))),R(this,ae).stats.SetEffectStats(D.CriticalDamage,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Thief))),R(this,ae).stats.SetEffectStats(D.PetCriticalDamage,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Archer))),R(this,ae).stats.SetEffectStats(D.PetPhysCritChance,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Tamer)));break;case J.SDFairyFlametiger:this.superDungeonId=3,R(this,ae).stats.SetEffectMagicalDamage(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Warrior))),R(this,ae).stats.SetEffectStats(D.MagCritChance,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Wizard))),R(this,ae).stats.SetEffectStats(D.WardedFury,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Angel))),R(this,ae).stats.SetEffectStats(D.DebuffRes,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Thief))),R(this,ae).stats.SetEffectElementResistance(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Archer))),R(this,ae).stats.SetEffectStats(D.PetMagCritChance,new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Tamer)));break;case J.SDSlimeMslime:this.superDungeonId=4,R(this,ae).sdg.SetEffectSDDamageMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Warrior))),R(this,ae).sdg.SetEffectSDChallengeBossDamageMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Wizard))),R(this,ae).sdg.SetEffectSDDamageCutMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Angel))),R(this,ae).sdg.SetEffectSDChallengeBossDamageCutMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Thief))),R(this,ae).sdg.SetEffectSDArmoredFuryMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Archer))),R(this,ae).sdg.SetEffectSDWardedFuryMultiplier(new u(n.SuperDungeon,r.Mul,()=>this.FloorRewardValue(v.Tamer)));break}}SetRewardEquipmentSlot(t){switch(t){case F.Weapon:R(this,ae).inventory.equipWeaponUnlockedNum[0].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardWarrior)),R(this,ae).inventory.equipWeaponUnlockedNum[1].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardWizard)),R(this,ae).inventory.equipWeaponUnlockedNum[2].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardAngel)),R(this,ae).inventory.equipWeaponUnlockedNum[3].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardThief)),R(this,ae).inventory.equipWeaponUnlockedNum[4].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardArcher)),R(this,ae).inventory.equipWeaponUnlockedNum[5].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardTamer));break;case F.Armor:R(this,ae).inventory.equipArmorUnlockedNum[0].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardWarrior)),R(this,ae).inventory.equipArmorUnlockedNum[1].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardWizard)),R(this,ae).inventory.equipArmorUnlockedNum[2].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardAngel)),R(this,ae).inventory.equipArmorUnlockedNum[3].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardThief)),R(this,ae).inventory.equipArmorUnlockedNum[4].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardArcher)),R(this,ae).inventory.equipArmorUnlockedNum[5].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardTamer));break;case F.Jewelry:R(this,ae).inventory.equipJewelryUnlockedNum[0].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardWarrior)),R(this,ae).inventory.equipJewelryUnlockedNum[1].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardWizard)),R(this,ae).inventory.equipJewelryUnlockedNum[2].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardAngel)),R(this,ae).inventory.equipJewelryUnlockedNum[3].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardThief)),R(this,ae).inventory.equipJewelryUnlockedNum[4].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardArcher)),R(this,ae).inventory.equipJewelryUnlockedNum[5].RegisterMultiplier(new u(n.Challenge,r.Add,()=>1,()=>this.isReceivedRewardTamer));break}}SetRewardBasicStats(t){R(this,ae).stats.SetEffectBasicStats(m.HP,new u(n.Challenge,r.Mul,()=>t*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),R(this,ae).stats.SetEffectBasicStats(m.MP,new u(n.Challenge,r.Mul,()=>t*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),R(this,ae).stats.SetEffectBasicStats(m.ATK,new u(n.Challenge,r.Mul,()=>t*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),R(this,ae).stats.SetEffectBasicStats(m.MATK,new u(n.Challenge,r.Mul,()=>t*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),R(this,ae).stats.SetEffectBasicStats(m.DEF,new u(n.Challenge,r.Mul,()=>t*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),R(this,ae).stats.SetEffectBasicStats(m.MDEF,new u(n.Challenge,r.Mul,()=>t*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}SetRewardOcto(t){R(this,ae).stats.SetEffectStats(D.ArmoredFury,new u(n.Challenge,r.Mul,()=>t[0]*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),R(this,ae).stats.SetEffectStats(D.WardedFury,new u(n.Challenge,r.Mul,()=>t[1]*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),R(this,ae).resource.goldCap.RegisterMultiplier(new u(n.Challenge,r.Mul,()=>t[2]*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),R(this,ae).stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.Challenge,r.Mul,()=>t[3]*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),R(this,ae).stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.Challenge,r.Mul,()=>t[4]*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),R(this,ae).stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.Challenge,r.Mul,()=>t[5]*R(this,ae).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}ae=new WeakMap;var je;class F1{constructor(t){Kt(this,je,void 0);o(this,"raidbossList",[]);o(this,"solobossList",[]);o(this,"handicapList",[]);o(this,"superdungeonList",[]);o(this,"challengeList",[]);o(this,"permanentRewardMultiplier");o(this,"sdStatRewardMultiplier");es(this,je,t),this.permanentRewardMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.sdStatRewardMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.solobossList.push(new et(R(this,je),J.SoloFlorzporb100)),this.solobossList.push(new et(R(this,je),J.SoloGuardianKor200)),this.solobossList.push(new et(R(this,je),J.SoloLadyEmelda300)),this.solobossList.push(new et(R(this,je),J.SoloLadyEmelda400)),this.solobossList.push(new et(R(this,je),J.SoloNariSune350)),this.solobossList.push(new et(R(this,je),J.SoloNostro250)),this.solobossList.push(new et(R(this,je),J.SoloOctobaddie400)),this.handicapList.push(new et(R(this,je),J.HCFlorzporb100)),this.handicapList.push(new et(R(this,je),J.HCFlorzporb200)),this.handicapList.push(new et(R(this,je),J.HCFlorzporb300)),this.handicapList.push(new et(R(this,je),J.HCFlorzporb400)),this.handicapList.push(new et(R(this,je),J.HCArachnetta150)),this.handicapList.push(new et(R(this,je),J.HCArachnetta250)),this.handicapList.push(new et(R(this,je),J.HCArachnetta350)),this.handicapList.push(new et(R(this,je),J.HCArachnetta450)),this.handicapList.push(new et(R(this,je),J.HCGuardianKor200)),this.handicapList.push(new et(R(this,je),J.HCGuardianKor300)),this.handicapList.push(new et(R(this,je),J.HCGuardianKor400)),this.handicapList.push(new et(R(this,je),J.HCGuardianKor500)),this.handicapList.push(new et(R(this,je),J.HCLadyEmelda300)),this.handicapList.push(new et(R(this,je),J.HCLadyEmelda400)),this.handicapList.push(new et(R(this,je),J.HCLadyEmelda500)),this.handicapList.push(new et(R(this,je),J.HCLadyEmelda600)),this.handicapList.push(new et(R(this,je),J.HCNostro250)),this.handicapList.push(new et(R(this,je),J.HCNostro350)),this.handicapList.push(new et(R(this,je),J.HCNostro450)),this.handicapList.push(new et(R(this,je),J.HCNostro550)),this.handicapList.push(new et(R(this,je),J.HCNariSune350)),this.handicapList.push(new et(R(this,je),J.HCNariSune450)),this.handicapList.push(new et(R(this,je),J.HCNariSune550)),this.handicapList.push(new et(R(this,je),J.HCNariSune650)),this.handicapList.push(new et(R(this,je),J.HCOctobaddie400)),this.handicapList.push(new et(R(this,je),J.HCOctobaddie500)),this.handicapList.push(new et(R(this,je),J.HCOctobaddie600)),this.handicapList.push(new et(R(this,je),J.HCOctobaddie700)),this.superdungeonList.push(new et(R(this,je),J.SDSlime)),this.superdungeonList.push(new et(R(this,je),J.SDSpider)),this.superdungeonList.push(new et(R(this,je),J.SDBatTreant)),this.superdungeonList.push(new et(R(this,je),J.SDFairyFlametiger)),this.superdungeonList.push(new et(R(this,je),J.SDSlimeMslime))}Start(){this.handicapList.forEach(t=>{t.Start()}),this.superdungeonList.forEach(t=>{t.Start()}),this.solobossList.forEach(t=>{t.Start()})}}je=new WeakMap;class I1{constructor(){o(this,"costReduction");this.costReduction=new H(new u(n.Base,r.Add,()=>1),()=>.9,()=>0)}}var Ci=(e=>(e[e.Nothing=0]="Nothing",e[e.NitroMaxCharger=1]="NitroMaxCharger",e[e.AbilityReset=2]="AbilityReset",e[e.GuildAbilityReset=3]="GuildAbilityReset",e[e.DictionaryUpgradeReset=4]="DictionaryUpgradeReset",e[e.AdvancedAutoDisassemblingEquipment=5]="AdvancedAutoDisassemblingEquipment",e[e.AdvancedAutoDisassemblePotion=6]="AdvancedAutoDisassemblePotion",e[e.SuperQueue=7]="SuperQueue",e[e.SuperQueueForAlchemy=8]="SuperQueueForAlchemy",e[e.ClassSkillSlot1=9]="ClassSkillSlot1",e[e.GlobalSkillSlot1=10]="GlobalSkillSlot1",e[e.EquipmentInventorySlot10=11]="EquipmentInventorySlot10",e[e.EquipmentWeaponSlot1=12]="EquipmentWeaponSlot1",e[e.EquipmentArmorSlot1=13]="EquipmentArmorSlot1",e[e.EquipmentJewelrySlot1=14]="EquipmentJewelrySlot1",e[e.SkillTenacity=15]="SkillTenacity",e[e.EquipmentTenacity=16]="EquipmentTenacity",e[e.AdvancedAutoRebirthTiming=17]="AdvancedAutoRebirthTiming",e[e.AdvancedAutoRebirthFavoriteArea=18]="AdvancedAutoRebirthFavoriteArea",e[e.AdvancedAutoRebirthTravelingBestExpArea=19]="AdvancedAutoRebirthTravelingBestExpArea",e[e.AdvancedAutoAbilityPointAdder=20]="AdvancedAutoAbilityPointAdder",e[e.UpgradeQueue5=21]="UpgradeQueue5",e[e.AlchemyQueue10=22]="AlchemyQueue10",e[e.AutoDisassembleEquipmentSlot5=23]="AutoDisassembleEquipmentSlot5",e[e.Tier1RebirthUpgradeReset=24]="Tier1RebirthUpgradeReset",e[e.Tier2RebirthUpgradeReset=25]="Tier2RebirthUpgradeReset",e[e.Tier3RebirthUpgradeReset=26]="Tier3RebirthUpgradeReset",e[e.RebirthTier4UpgradeReset=27]="RebirthTier4UpgradeReset",e[e.RebirthTier5UpgradeReset=28]="RebirthTier5UpgradeReset",e[e.RebirthTier6UpgradeReset=29]="RebirthTier6UpgradeReset",e[e.ActivePetSlot5=30]="ActivePetSlot5",e[e.AdditionalEpicCoinDailyQuest=31]="AdditionalEpicCoinDailyQuest",e[e.ImprovingMinimumDailyQuestRarity=32]="ImprovingMinimumDailyQuestRarity",e[e.EquipUtilitySlot1=33]="EquipUtilitySlot1",e[e.UtilityInventorySlot5=34]="UtilityInventorySlot5",e[e.Tier1WorldAscensionUpgradeReset=35]="Tier1WorldAscensionUpgradeReset",e[e.FavoriteQuest=36]="FavoriteQuest",e[e.Multitrapper=37]="Multitrapper",e[e.UtilityKeeper=38]="UtilityKeeper",e[e.Convene=39]="Convene",e[e.SwarmChaser=40]="SwarmChaser",e[e.EasyAccessEquipment=41]="EasyAccessEquipment",e[e.AdvancedAutoDisassembleCraftedEquipment=42]="AdvancedAutoDisassembleCraftedEquipment",e[e.AdvancedAutoBuyTraps=43]="AdvancedAutoBuyTraps",e[e.AreaDungeonPrestigeReset=44]="AreaDungeonPrestigeReset",e[e.ExpeditionTeamSlot1=45]="ExpeditionTeamSlot1",e[e.BribesForIEH1=46]="BribesForIEH1",e[e.EquipmentLoadouts=47]="EquipmentLoadouts",e[e.RegularDailyChest=48]="RegularDailyChest",e[e.SmartUseOfProficiencyScrolls=49]="SmartUseOfProficiencyScrolls",e[e.EasyAccessSkill=50]="EasyAccessSkill",e[e.Pause=51]="Pause",e[e.PurpleFoxMastery=52]="PurpleFoxMastery",e[e.EquipmentEnchantFilter=53]="EquipmentEnchantFilter",e[e.EasyAccessQuest=54]="EasyAccessQuest",e[e.SkillLoadouts=55]="SkillLoadouts",e[e.AdvancedAutoProficiencyScroll=56]="AdvancedAutoProficiencyScroll",e[e.OneClickChallenges=57]="OneClickChallenges",e[e.ScrollFilter=58]="ScrollFilter",e[e.PersistentSkillSet=59]="PersistentSkillSet",e[e.AutoAreaProgression=60]="AutoAreaProgression",e[e.NitroCapExpansion=61]="NitroCapExpansion",e[e.AdvancedAutoRebirthLazyQuestingMode=62]="AdvancedAutoRebirthLazyQuestingMode",e[e.Nitro_OfflineBonus=63]="Nitro_OfflineBonus",e[e.AutoMysteriousWaterAdder=64]="AutoMysteriousWaterAdder",e[e.SmartUseOfAnvils=65]="SmartUseOfAnvils",e[e.EasyAccessChallenge=66]="EasyAccessChallenge",e))(Ci||{}),Ka=(e=>(e[e.EpicCoin500=0]="EpicCoin500",e[e.EpicCoin1050=1]="EpicCoin1050",e[e.EpicCoin2650=2]="EpicCoin2650",e[e.EpicCoin5500=3]="EpicCoin5500",e[e.EpicCoin12000=4]="EpicCoin12000",e[e.EpicCoin18500=5]="EpicCoin18500",e[e.EpicCoin31000=6]="EpicCoin31000",e[e.EpicCoin70000=7]="EpicCoin70000",e[e.UpdateBundle1=8]="UpdateBundle1",e[e.UpdateBundle2=9]="UpdateBundle2",e))(Ka||{});class H1{constructor(t){o(this,"data");this.data=t}Start(){for(let t=0;t<N.HeroKind;t++)this.data.inventory.equipWeaponUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,r.Add,()=>this.data.source.epicStorePurchasedNum[Ci.EquipmentWeaponSlot1])),this.data.inventory.equipArmorUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,r.Add,()=>this.data.source.epicStorePurchasedNum[Ci.EquipmentArmorSlot1])),this.data.inventory.equipJewelryUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,r.Add,()=>this.data.source.epicStorePurchasedNum[Ci.EquipmentJewelrySlot1])),this.data.inventory.equipPotionUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,r.Add,()=>this.data.source.epicStorePurchasedNum[Ci.EquipUtilitySlot1]));this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.EpicStore,r.Add,()=>this.data.source.epicStorePurchasedNum[Ci.ExpeditionTeamSlot1])),this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.EpicStore,r.Add,()=>this.data.source.inAppPurchasedNum[Ka.UpdateBundle2])),this.data.nitro.nitroCap.RegisterMultiplier(new u(n.EpicStore,r.Mul,()=>.1*this.data.source.epicStorePurchasedNum[Ci.NitroCapExpansion])),this.data.nitro.nitroCap.RegisterMultiplier(new u(n.EpicStore,r.Mul,()=>.5,()=>this.data.source.inAppPurchasedNum[Ka.UpdateBundle1]))}}const _1={UpgradeCost(e,t){switch(e){case dt.EquipmentProficiencyGainWarrior:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EquipmentProficiencyGainWizard:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EquipmentProficiencyGainAngel:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EquipmentProficiencyGainThief:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EquipmentProficiencyGainArcher:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EquipmentProficiencyGainTamer:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EquipmentDropChance:return(5+5*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EnchantedEffectChance1:return(10+10*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EnchantedEffectChance2:return(20+20*t)*Math.pow(2,Math.max(0,t-20)/10);case dt.EnchantedEffectChance3:return(30+30*t)*Math.pow(2,Math.max(0,t-20)/10);default:return 1}},EffectValue(e,t){switch(e){case dt.EquipmentProficiencyGainWarrior:return .05*t;case dt.EquipmentProficiencyGainWizard:return .05*t;case dt.EquipmentProficiencyGainAngel:return .05*t;case dt.EquipmentProficiencyGainThief:return .05*t;case dt.EquipmentProficiencyGainArcher:return .05*t;case dt.EquipmentProficiencyGainTamer:return .05*t;case dt.EquipmentDropChance:return .025*t/100;case dt.EnchantedEffectChance1:return .25*t/100;case dt.EnchantedEffectChance2:return .05*t/100;case dt.EnchantedEffectChance3:return .005*t/100;default:return 0}}};class V1{constructor(t,s){o(this,"data");o(this,"equipmentCtrl");o(this,"kind");this.data=t.data,this.equipmentCtrl=t,this.kind=s}get level(){return this.data.source.dictionaryUpgradeLevels[this.kind]}Start(){this.SetEffect()}get effectValue(){return _1.EffectValue(this.kind,this.level)*this.equipmentCtrl.dictionaryUpgradeEffectMultiplier.Value()}SetEffect(){switch(this.kind){case dt.EquipmentProficiencyGainWarrior:this.data.stats.HeroStats(v.Warrior,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EquipmentProficiencyGainWizard:this.data.stats.HeroStats(v.Wizard,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EquipmentProficiencyGainAngel:this.data.stats.HeroStats(v.Angel,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EquipmentProficiencyGainThief:this.data.stats.HeroStats(v.Thief,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EquipmentProficiencyGainArcher:this.data.stats.HeroStats(v.Archer,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EquipmentProficiencyGainTamer:this.data.stats.HeroStats(v.Tamer,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EquipmentDropChance:this.data.stats.SetEffectStats(D.EquipmentDropChance,new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EnchantedEffectChance1:for(let t=0;t<N.HeroKind;++t)this.data.stats.OptionEffectChance(t,0).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EnchantedEffectChance2:for(let t=0;t<N.HeroKind;++t)this.data.stats.OptionEffectChance(t,1).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break;case dt.EnchantedEffectChance3:for(let t=0;t<N.HeroKind;++t)this.data.stats.OptionEffectChance(t,2).RegisterMultiplier(new u(n.Dictionary,r.Add,()=>this.effectValue));break}}}class f{constructor(t,s,i,c=!1){o(this,"isMaxEffect");o(this,"kind");o(this,"initValue");o(this,"baseValue");this.kind=t,this.initValue=s,this.baseValue=i,this.isMaxEffect=c}EffectValue(t,s=1){return this.kind==a.Nothing?Math.floor(this.initValue()):this.isMaxEffect?this.initValue()*Math.max(1,t/10):this.initValue()+s*this.baseValue()*t}get valueKind(){switch(this.kind){case a.ATKAdder:case a.ATKAfter:case a.AllSkillLevel:case a.HPAfter:case a.HPAdder:case a.DEFAdder:case a.DEFAfter:case a.MATKAdder:case a.MATKAfter:case a.MDEFAdder:case a.MDEFAfter:case a.MPAdder:case a.MPAfter:return nt.Normal;case a.MoveSpeedAdder:case a.MoveSpeedAfter:return nt.Meter;default:return nt.Percent}}}class N1{constructor(t,s,i){o(this,"data");o(this,"kind");o(this,"heroKind");o(this,"maxValue");this.data=t,this.kind=s,this.heroKind=i,this.maxValue=()=>this.data.equipment.maxLevels[i].Value()}GetMastery(){this.isMaxed=!0,this.value<10}get isMaxed(){switch(this.heroKind){case v.Warrior:return this.data.source.equipmentIsMaxedWarrior[this.kind];case v.Wizard:return this.data.source.equipmentIsMaxedWizard[this.kind];case v.Angel:return this.data.source.equipmentIsMaxedAngel[this.kind];case v.Thief:return this.data.source.equipmentIsMaxedThief[this.kind];case v.Archer:return this.data.source.equipmentIsMaxedArcher[this.kind];case v.Tamer:return this.data.source.equipmentIsMaxedTamer[this.kind];default:return!1}}set isMaxed(t){switch(this.heroKind){case v.Warrior:this.data.source.equipmentIsMaxedWarrior[this.kind]=t;break;case v.Wizard:this.data.source.equipmentIsMaxedWizard[this.kind]=t;break;case v.Angel:this.data.source.equipmentIsMaxedAngel[this.kind]=t;break;case v.Thief:this.data.source.equipmentIsMaxedThief[this.kind]=t;break;case v.Archer:this.data.source.equipmentIsMaxedArcher[this.kind]=t;break;case v.Tamer:this.data.source.equipmentIsMaxedTamer[this.kind]=t;break}}get value(){switch(this.heroKind){case v.Warrior:return this.data.source.equipmentLevelsWarrior[this.kind];case v.Wizard:return this.data.source.equipmentLevelsWizard[this.kind];case v.Angel:return this.data.source.equipmentLevelsAngel[this.kind];case v.Thief:return this.data.source.equipmentLevelsThief[this.kind];case v.Archer:return this.data.source.equipmentLevelsArcher[this.kind];case v.Tamer:return this.data.source.equipmentLevelsTamer[this.kind];default:return 0}}set value(t){switch(this.heroKind){case v.Warrior:this.data.source.equipmentLevelsWarrior[this.kind]=t;break;case v.Wizard:this.data.source.equipmentLevelsWizard[this.kind]=t;break;case v.Angel:this.data.source.equipmentLevelsAngel[this.kind]=t;break;case v.Thief:this.data.source.equipmentLevelsThief[this.kind]=t;break;case v.Archer:this.data.source.equipmentLevelsArcher[this.kind]=t;break;case v.Tamer:this.data.source.equipmentLevelsTamer[this.kind]=t;break}}}class S{constructor(t,s=0,i=!1){o(this,"kind");o(this,"requiredValue");o(this,"isLevel");o(this,"isSuperAbility");arguments.length==1?this.EquipmentRequiredAbility(arguments[0],i):arguments.length==2&&arguments[1]==!0?this.EquipmentRequiredAbility(arguments[0],arguments[1]):(this.kind=t,this.requiredValue=s,this.isSuperAbility=i)}EquipmentRequiredAbility(t,s=!1){this.isLevel=!0,this.requiredValue=t,this.isSuperAbility=s}}class q1{constructor(t,s){o(this,"data");o(this,"kind");o(this,"levels",Array(N.HeroKind));o(this,"effects",[]);o(this,"requiredAbilities",[]);o(this,"levelMaxEffects",Array(N.HeroKind));o(this,"setKind",pe.Nothing);o(this,"isArtifact");this.data=t,this.kind=s,this.SetEffectAndRequiredAbility(),this.SetLevelMaxEffect();for(let i=0;i<this.levels.length;i++)this.levels[i]=new N1(this.data,s,i)}get rarity(){return jt.Rarity(this.kind)}get part(){return jt.Part(this.kind)}SetEffectAndRequiredAbility(){switch(this.kind){case g.Nothing:this.requiredAbilities.push(new S(1));break;case g.DullSword:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.ATKAdder,()=>4,()=>1)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Strength,3));break;case g.BrittleStaff:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.MATKAdder,()=>4,()=>1)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Intelligence,3));break;case g.FlimsyWing:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.ATKAdder,()=>2,()=>.5)),this.effects.push(new f(a.MATKAdder,()=>2,()=>.5)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Strength,2)),this.requiredAbilities.push(new S(C.Intelligence,2));break;case g.WornDart:this.effects.push(new f(a.MPAdder,()=>2.5,()=>.5)),this.effects.push(new f(a.ATKAdder,()=>4,()=>1)),this.effects.push(new f(a.StoneGain,()=>.1,()=>.025)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Strength,3));break;case g.SmallBow:this.effects.push(new f(a.MPAdder,()=>2.5,()=>.5)),this.effects.push(new f(a.MATKAdder,()=>4,()=>1)),this.effects.push(new f(a.CrystalGain,()=>.1,()=>.025)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Intelligence,3));break;case g.WoodenRecorder:this.effects.push(new f(a.MPAdder,()=>2.5,()=>.5)),this.effects.push(new f(a.ATKAdder,()=>2,()=>.5)),this.effects.push(new f(a.MATKAdder,()=>2,()=>.5)),this.effects.push(new f(a.LeafGain,()=>.1,()=>.025)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Strength,2)),this.requiredAbilities.push(new S(C.Intelligence,2));break;case g.OldCloak:this.effects.push(new f(a.HPAdder,()=>10,()=>10)),this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.requiredAbilities.push(new S(1)),this.requiredAbilities.push(new S(C.Vitality,3));break;case g.BlueHat:this.effects.push(new f(a.DEFAdder,()=>1,()=>1)),this.requiredAbilities.push(new S(5)),this.requiredAbilities.push(new S(C.Vitality,3)),this.requiredAbilities.push(new S(C.Strength,2));break;case g.OrangeHat:this.effects.push(new f(a.MDEFAdder,()=>1,()=>1)),this.requiredAbilities.push(new S(5)),this.requiredAbilities.push(new S(C.Vitality,3)),this.requiredAbilities.push(new S(C.Intelligence,2));break;case g.TShirt:this.effects.push(new f(a.HPAdder,()=>20,()=>5)),this.effects.push(new f(a.DEFAdder,()=>.5,()=>.5)),this.requiredAbilities.push(new S(5)),this.requiredAbilities.push(new S(C.Vitality,5));break;case g.ClothGlove:this.effects.push(new f(a.DEFAdder,()=>2.5,()=>.5)),this.effects.push(new f(a.PhysicalCritical,()=>.005,()=>25e-5)),this.requiredAbilities.push(new S(10)),this.requiredAbilities.push(new S(C.Luck,5));break;case g.BlueTShirt:this.effects.push(new f(a.MPAdder,()=>30,()=>3)),this.requiredAbilities.push(new S(15)),this.requiredAbilities.push(new S(C.Vitality,5));break;case g.OrangeTShirt:this.effects.push(new f(a.HPAdder,()=>20,()=>20)),this.requiredAbilities.push(new S(15)),this.requiredAbilities.push(new S(C.Agility,5));break;case g.ClothBelt:this.effects.push(new f(a.DEFMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new S(5)),this.requiredAbilities.push(new S(C.Vitality,3));break;case g.ClothShoes:this.effects.push(new f(a.MoveSpeedAdder,()=>5,()=>.25)),this.requiredAbilities.push(new S(5)),this.requiredAbilities.push(new S(C.Agility,5));break;case g.IronRing:this.effects.push(new f(a.HPAdder,()=>20,()=>2)),this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.HPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new S(10)),this.requiredAbilities.push(new S(C.Vitality,5));break;case g.PearlEarring:this.effects.push(new f(a.MPAdder,()=>20,()=>4)),this.effects.push(new f(a.MPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new S(10)),this.requiredAbilities.push(new S(C.Agility,5));break;case g.FireBrooch:this.effects.push(new f(a.FireDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(20)),this.requiredAbilities.push(new S(C.Vitality,5)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.IceBrooch:this.effects.push(new f(a.IceDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(20)),this.requiredAbilities.push(new S(C.Vitality,5)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.ThunderBrooch:this.effects.push(new f(a.ThunderDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(20)),this.requiredAbilities.push(new S(C.Vitality,5)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.LightBrooch:this.effects.push(new f(a.LightDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(20)),this.requiredAbilities.push(new S(C.Vitality,5)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.DarkBrooch:this.effects.push(new f(a.DarkDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(20)),this.requiredAbilities.push(new S(C.Vitality,5)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.WoodenShield:this.effects.push(new f(a.DEFAdder,()=>20,()=>1)),this.requiredAbilities.push(new S(15)),this.requiredAbilities.push(new S(C.Vitality,10)),this.requiredAbilities.push(new S(C.Strength,5));break;case g.LongSword:this.effects.push(new f(a.MPAdder,()=>10,()=>2)),this.effects.push(new f(a.ATKAdder,()=>10,()=>1)),this.effects.push(new f(a.WarriorSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new S(30)),this.requiredAbilities.push(new S(C.Strength,20));break;case g.LongStaff:this.effects.push(new f(a.MPAdder,()=>10,()=>2)),this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.WizardSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new S(30)),this.requiredAbilities.push(new S(C.Intelligence,20));break;case g.WarmWing:this.effects.push(new f(a.MPAdder,()=>10,()=>2)),this.effects.push(new f(a.ATKAdder,()=>5,()=>.5)),this.effects.push(new f(a.MATKAdder,()=>5,()=>.5)),this.effects.push(new f(a.AngelSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new S(30)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.DualDagger:this.effects.push(new f(a.MPAdder,()=>10,()=>2)),this.effects.push(new f(a.ATKAdder,()=>8,()=>.8)),this.effects.push(new f(a.MATKAdder,()=>2,()=>.2)),this.effects.push(new f(a.ThiefSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new S(30)),this.requiredAbilities.push(new S(C.Strength,20));break;case g.ReinforcedBow:this.effects.push(new f(a.MPAdder,()=>10,()=>2)),this.effects.push(new f(a.ATKAdder,()=>2,()=>.2)),this.effects.push(new f(a.MATKAdder,()=>8,()=>.8)),this.effects.push(new f(a.ArcherSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new S(30)),this.requiredAbilities.push(new S(C.Intelligence,20));break;case g.Flute:this.effects.push(new f(a.MPAdder,()=>10,()=>2)),this.effects.push(new f(a.ATKAdder,()=>5,()=>.5)),this.effects.push(new f(a.MATKAdder,()=>5,()=>.5)),this.effects.push(new f(a.TamerSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new S(30)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.FireStaff:this.effects.push(new f(a.MPAdder,()=>20,()=>2)),this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.FireDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Intelligence,15)),this.requiredAbilities.push(new S(C.Agility,10));break;case g.IceStaff:this.effects.push(new f(a.MPAdder,()=>20,()=>2)),this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.IceDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Intelligence,15)),this.requiredAbilities.push(new S(C.Agility,10));break;case g.ThunderStaff:this.effects.push(new f(a.MPAdder,()=>20,()=>2)),this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.ThunderDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Intelligence,15)),this.requiredAbilities.push(new S(C.Agility,10));break;case g.LeatherBelt:this.effects.push(new f(a.DEFAdder,()=>10,()=>1)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Vitality,10)),this.requiredAbilities.push(new S(C.Strength,5)),this.requiredAbilities.push(new S(C.Intelligence,5));break;case g.LeatherShoes:this.effects.push(new f(a.SPDAdder,()=>10,()=>.5)),this.effects.push(new f(a.MoveSpeedAdder,()=>10,()=>.5)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Agility,20));break;case g.WarmCloak:this.effects.push(new f(a.HPAdder,()=>100,()=>25)),this.effects.push(new f(a.MPAdder,()=>25,()=>5)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Vitality,10)),this.requiredAbilities.push(new S(C.Agility,10));break;case g.LeatherArmor:this.effects.push(new f(a.DEFAdder,()=>20,()=>2)),this.effects.push(new f(a.MDEFAdder,()=>20,()=>2)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Vitality,15)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.LeatherGlove:this.effects.push(new f(a.MDEFAdder,()=>5,()=>.5)),this.effects.push(new f(a.MagicalCritical,()=>.005,()=>5e-4)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Intelligence,5)),this.requiredAbilities.push(new S(C.Luck,15));break;case g.LeatherShield:this.effects.push(new f(a.DEFAdder,()=>20,()=>1)),this.effects.push(new f(a.PhysicalAbsorption,()=>.01,()=>5e-4)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Vitality,10)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Luck,10));break;case g.FireRing:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.FireResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Intelligence,15));break;case g.IceRing:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.IceResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Intelligence,15));break;case g.ThunderRing:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.ThunderResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Intelligence,15));break;case g.LightRing:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.LightResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Intelligence,15));break;case g.DarkRing:this.effects.push(new f(a.MPAdder,()=>5,()=>1)),this.effects.push(new f(a.DarkResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Intelligence,15));break;case g.EnhancedFireBrooch:this.effects.push(new f(a.FireDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new S(60)),this.requiredAbilities.push(new S(C.Intelligence,50));break;case g.EnhancedIceBrooch:this.effects.push(new f(a.IceDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new S(60)),this.requiredAbilities.push(new S(C.Intelligence,50));break;case g.EnhancedThunderBrooch:this.effects.push(new f(a.ThunderDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new S(60)),this.requiredAbilities.push(new S(C.Intelligence,50));break;case g.EnhancedLightBrooch:this.effects.push(new f(a.LightDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new S(60)),this.requiredAbilities.push(new S(C.Intelligence,50));break;case g.EnhancedDarkBrooch:this.effects.push(new f(a.DarkDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new S(60)),this.requiredAbilities.push(new S(C.Intelligence,50));break;case g.BattleSword:this.effects.push(new f(a.ATKAdder,()=>20,()=>1)),this.effects.push(new f(a.ATKMultiplier,()=>.01,()=>5e-4)),this.effects.push(new f(a.ATKPropotion,()=>.1,()=>.005)),this.requiredAbilities.push(new S(80)),this.requiredAbilities.push(new S(C.Strength,60));break;case g.BattleStaff:this.effects.push(new f(a.MATKAdder,()=>20,()=>1)),this.effects.push(new f(a.MATKMultiplier,()=>.01,()=>5e-4)),this.effects.push(new f(a.MATKPropotion,()=>.1,()=>.005)),this.requiredAbilities.push(new S(80)),this.requiredAbilities.push(new S(C.Intelligence,60));break;case g.BattleWing:this.effects.push(new f(a.ATKAdder,()=>10,()=>.5)),this.effects.push(new f(a.ATKMultiplier,()=>.005,()=>25e-5)),this.effects.push(new f(a.ATKPropotion,()=>.05,()=>1/400)),this.effects.push(new f(a.MATKAdder,()=>10,()=>.5)),this.effects.push(new f(a.MATKMultiplier,()=>.005,()=>25e-5)),this.effects.push(new f(a.MATKPropotion,()=>.05,()=>1/400)),this.requiredAbilities.push(new S(80)),this.requiredAbilities.push(new S(C.Strength,30)),this.requiredAbilities.push(new S(C.Intelligence,30));break;case g.BattleDagger:this.effects.push(new f(a.ATKAdder,()=>15,()=>1.5)),this.effects.push(new f(a.MATKAdder,()=>5,()=>.5)),this.effects.push(new f(a.PhysicalCritical,()=>.05,()=>5e-4)),this.requiredAbilities.push(new S(80)),this.requiredAbilities.push(new S(C.Strength,40)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.BattleBow:this.effects.push(new f(a.ATKAdder,()=>5,()=>.5)),this.effects.push(new f(a.MATKAdder,()=>15,()=>1.5)),this.effects.push(new f(a.MagicalCritical,()=>.05,()=>5e-4)),this.requiredAbilities.push(new S(80)),this.requiredAbilities.push(new S(C.Intelligence,40)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.BattleRecorder:this.effects.push(new f(a.ATKAdder,()=>10,()=>1)),this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.PhysicalCritical,()=>.025,()=>25e-5)),this.effects.push(new f(a.MagicalCritical,()=>.025,()=>25e-5)),this.requiredAbilities.push(new S(80)),this.requiredAbilities.push(new S(C.Strength,20)),this.requiredAbilities.push(new S(C.Intelligence,20)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.SlimeSword:this.setKind=pe.Slime,this.effects.push(new f(a.ATKAdder,()=>15,()=>2)),this.effects.push(new f(a.ATKMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Strength,20));break;case g.SlimeGlove:this.setKind=pe.Slime,this.effects.push(new f(a.SPDAdder,()=>20,()=>1)),this.effects.push(new f(a.SkillProficiency,()=>.05,()=>1/400)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Agility,10)),this.requiredAbilities.push(new S(C.Luck,10));break;case g.SlimeRing:this.setKind=pe.Slime,this.effects.push(new f(a.StoneGain,()=>.5,()=>.1)),this.effects.push(new f(a.CrystalGain,()=>.5,()=>.1)),this.effects.push(new f(a.LeafGain,()=>.5,()=>.1)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.SlimeBelt:this.setKind=pe.Slime,this.effects.push(new f(a.DEFAdder,()=>5,()=>1)),this.effects.push(new f(a.DebuffResistance,()=>.1,()=>.001)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Vitality,10)),this.requiredAbilities.push(new S(C.Luck,10));break;case g.SlimePincenez:this.setKind=pe.Slime,this.effects.push(new f(a.EXPGain,()=>.05,()=>1/400)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.SlimeWing:this.setKind=pe.Slime,this.effects.push(new f(a.ATKMultiplier,()=>.005,()=>5e-4)),this.effects.push(new f(a.MATKMultiplier,()=>.005,()=>5e-4)),this.effects.push(new f(a.LightDamage,()=>.2,()=>.02)),this.effects.push(new f(a.AngelSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Intelligence,10));break;case g.SlimePoncho:this.setKind=pe.Slime,this.effects.push(new f(a.HPAdder,()=>100,()=>20)),this.effects.push(new f(a.HPMultiplier,()=>.05,()=>.001)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Vitality,20));break;case g.SlimeDart:this.setKind=pe.Slime,this.effects.push(new f(a.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new f(a.DarkDamage,()=>.2,()=>.005)),this.effects.push(new f(a.StoneGain,()=>1,()=>.2)),this.effects.push(new f(a.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Luck,10));break;case g.MagicSlimeStick:this.setKind=pe.Magicslime,this.effects.push(new f(a.MATKAdder,()=>15,()=>2)),this.effects.push(new f(a.MATKMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Intelligence,20));break;case g.MagicSlimeHat:this.setKind=pe.Magicslime,this.effects.push(new f(a.MDEFAdder,()=>10,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Vitality,20)),this.requiredAbilities.push(new S(C.Intelligence,20));break;case g.MagicSlimeBow:this.setKind=pe.Magicslime,this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.FireDamage,()=>.1,()=>.01)),this.effects.push(new f(a.IceDamage,()=>.1,()=>.01)),this.effects.push(new f(a.ThunderDamage,()=>.1,()=>.01)),this.effects.push(new f(a.CrystalGain,()=>1,()=>.2)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.MagicSlimeShoes:this.setKind=pe.Magicslime,this.effects.push(new f(a.FireResistance,()=>.1,()=>1/400)),this.effects.push(new f(a.IceResistance,()=>.1,()=>1/400)),this.effects.push(new f(a.ThunderResistance,()=>.1,()=>1/400)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Vitality,15)),this.requiredAbilities.push(new S(C.Intelligence,20)),this.requiredAbilities.push(new S(C.Agility,5));break;case g.MagicSlimeRecorder:this.setKind=pe.Magicslime,this.effects.push(new f(a.LeafGain,()=>1,()=>.2)),this.effects.push(new f(a.TamerSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Strength,10)),this.requiredAbilities.push(new S(C.Intelligence,10)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.MagicSlimeEarring:this.setKind=pe.Magicslime,this.effects.push(new f(a.GoldGain,()=>.1,()=>.005)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.MagicSlimeBalloon:this.setKind=pe.Magicslime,this.effects.push(new f(a.ColorMaterialDropChance,()=>15e-5,()=>1e-6)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.MagicSlimeSkirt:this.setKind=pe.Magicslime,this.effects.push(new f(a.MPAdder,()=>200,()=>20)),this.effects.push(new f(a.MPMultiplier,()=>.05,()=>1/400)),this.effects.push(new f(a.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(50)),this.requiredAbilities.push(new S(C.Vitality,20)),this.requiredAbilities.push(new S(C.Agility,20));break;case g.SpiderHat:this.setKind=pe.Spider,this.effects.push(new f(a.HPAdder,()=>500,()=>20)),this.effects.push(new f(a.DEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(a.DEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,40)),this.requiredAbilities.push(new S(C.Strength,40));break;case g.SpiderSkirt:this.setKind=pe.Spider,this.effects.push(new f(a.DarkResistance,()=>.1,()=>1/400)),this.effects.push(new f(a.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,30)),this.requiredAbilities.push(new S(C.Intelligence,40)),this.requiredAbilities.push(new S(C.Agility,10));break;case g.SpiderSuit:this.setKind=pe.Spider,this.effects.push(new f(a.HPAdder,()=>500,()=>20)),this.effects.push(new f(a.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(a.MDEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,40)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.SpiderDagger:this.setKind=pe.Spider,this.effects.push(new f(a.MATKAdder,()=>30,()=>3)),this.effects.push(new f(a.DarkDamage,()=>.2,()=>.01)),this.effects.push(new f(a.ThiefSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Intelligence,80));break;case g.SpiderWing:this.setKind=pe.Spider,this.effects.push(new f(a.PhysicalCritical,()=>.025,()=>1/400)),this.effects.push(new f(a.MagicalCritical,()=>.025,()=>1/400)),this.effects.push(new f(a.PhysicalDamage,()=>.2,()=>.01)),this.effects.push(new f(a.LightDamage,()=>.2,()=>.01)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Strength,30)),this.requiredAbilities.push(new S(C.Intelligence,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.SpiderCatchingNet:this.setKind=pe.Spider,this.effects.push(new f(a.TamingPoint,()=>.5,()=>.01)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Strength,40)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.SpiderStick:this.setKind=pe.Spider,this.effects.push(new f(a.TamingPoint,()=>.25,()=>.005)),this.effects.push(new f(a.ColorMaterialDropChance,()=>1e-4,()=>1e-6)),this.effects.push(new f(a.WizardSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Intelligence,40)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.SpiderFoldingFan:this.setKind=pe.Spider,this.effects.push(new f(a.SkillProficiency,()=>.05,()=>1/400)),this.effects.push(new f(a.GoldGain,()=>.1,()=>.01)),this.effects.push(new f(a.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Agility,40)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.BatRing:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.DebuffResistance,()=>.1,()=>.001)),this.effects.push(new f(a.StoneGain,()=>1,()=>.2)),this.effects.push(new f(a.CrystalGain,()=>1,()=>.2)),this.effects.push(new f(a.LeafGain,()=>1,()=>.2)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Agility,60)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.BatShoes:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.MoveSpeedAdder,()=>20,()=>1)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Agility,100));break;case g.BatSword:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.ATKAdder,()=>50,()=>5)),this.effects.push(new f(a.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.WarriorSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Strength,40)),this.requiredAbilities.push(new S(C.Agility,60));break;case g.BatHat:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.FireAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.IceAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.ThunderAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.LightAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,40)),this.requiredAbilities.push(new S(C.Agility,60));break;case g.BatRecorder:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.TamerSkillLevel,()=>10,()=>.25)),this.effects.push(new f(a.TamingPoint,()=>.1,()=>.01)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Agility,100));break;case g.BatBow:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.ATKPropotion,()=>.2,()=>.02)),this.effects.push(new f(a.ArcherSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Agility,100));break;case g.BatMascaradeMask:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.EXPGain,()=>.2,()=>.01)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Agility,60)),this.requiredAbilities.push(new S(C.Luck,40));break;case g.BatCloak:this.setKind=pe.Bat,this.effects.push(new f(a.SPDAdder,()=>20,()=>2)),this.effects.push(new f(a.PhysicalAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.MPAdder,()=>200,()=>20)),this.effects.push(new f(a.MPMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,20)),this.requiredAbilities.push(new S(C.Intelligence,20)),this.requiredAbilities.push(new S(C.Agility,60));break;case g.BronzeShoulder:this.effects.push(new f(a.MDEFAdder,()=>20,()=>1)),this.requiredAbilities.push(new S(15)),this.requiredAbilities.push(new S(C.Vitality,10)),this.requiredAbilities.push(new S(C.Intelligence,5));break;case g.BattleRing:this.effects.push(new f(a.PhysicalDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(20)),this.requiredAbilities.push(new S(C.Vitality,5)),this.requiredAbilities.push(new S(C.Strength,10));break;case g.Halo:this.effects.push(new f(a.HpRegen,()=>5,()=>.25)),this.requiredAbilities.push(new S(25)),this.requiredAbilities.push(new S(C.Vitality,20)),this.requiredAbilities.push(new S(C.Luck,5));break;case g.IronShoulder:this.effects.push(new f(a.MPAdder,()=>25,()=>5)),this.effects.push(new f(a.MDEFAdder,()=>25,()=>1)),this.requiredAbilities.push(new S(35)),this.requiredAbilities.push(new S(C.Vitality,15)),this.requiredAbilities.push(new S(C.Intelligence,15));break;case g.StrengthRing:this.effects.push(new f(a.PhysicalDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new S(60)),this.requiredAbilities.push(new S(C.Strength,50));break;case g.GoldenRing:this.effects.push(new f(a.HPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(a.MPMultiplier,()=>.02,()=>.002)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,20)),this.requiredAbilities.push(new S(C.Intelligence,20));break;case g.GoldenFireRing:this.effects.push(new f(a.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(a.FireResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.GoldenIceRing:this.effects.push(new f(a.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(a.IceResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.GoldenThunderRing:this.effects.push(new f(a.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(a.ThunderResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.GoldenLightRing:this.effects.push(new f(a.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(a.LightResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.GoldenDarkRing:this.effects.push(new f(a.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(a.DarkResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new S(100)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,40));break;case g.IronBelt:this.effects.push(new f(a.DEFAdder,()=>20,()=>2)),this.effects.push(new f(a.DEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.DEFPropotion,()=>.1,()=>.01)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,50));break;case g.IronShoes:this.effects.push(new f(a.SPDAdder,()=>20,()=>1)),this.effects.push(new f(a.MoveSpeedAdder,()=>20,()=>.5)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Agility,100));break;case g.CopperArmor:this.effects.push(new f(a.DEFAdder,()=>40,()=>4)),this.effects.push(new f(a.MDEFAdder,()=>40,()=>4)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,60)),this.requiredAbilities.push(new S(C.Strength,20)),this.requiredAbilities.push(new S(C.Intelligence,20));break;case g.IronGlove:this.effects.push(new f(a.MDEFAdder,()=>20,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.MDEFPropotion,()=>.1,()=>.01)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,50));break;case g.TowerShield:this.effects.push(new f(a.DEFAdder,()=>40,()=>2)),this.effects.push(new f(a.DEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.PhysicalAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.FireTowerShield:this.effects.push(new f(a.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.FireAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.IceTowerShield:this.effects.push(new f(a.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.IceAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.ThunderTowerShield:this.effects.push(new f(a.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.ThunderAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.LightTowerShield:this.effects.push(new f(a.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.LightAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.DarkTowerShield:this.effects.push(new f(a.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(a.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.DarkAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new S(120)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,30)),this.requiredAbilities.push(new S(C.Luck,20));break;case g.SavageRing:this.effects.push(new f(a.PhysicalDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Strength,150));break;case g.SpellboundFireBrooch:this.effects.push(new f(a.FireDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Intelligence,150));break;case g.SpellboundIceBrooch:this.effects.push(new f(a.IceDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Intelligence,150));break;case g.SpellboundThunderBrooch:this.effects.push(new f(a.ThunderDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Intelligence,150));break;case g.SpellboundLightBrooch:this.effects.push(new f(a.LightDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Intelligence,150));break;case g.SpellboundDarkBrooch:this.effects.push(new f(a.DarkDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Intelligence,150));break;case g.CopperHelm:this.effects.push(new f(a.HPAdder,()=>250,()=>10)),this.effects.push(new f(a.HPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new S(70)),this.requiredAbilities.push(new S(C.Vitality,50));break;case g.BattleHelm:this.effects.push(new f(a.ATKAdder,()=>10,()=>1)),this.effects.push(new f(a.PhysicalDamage,()=>.025,()=>1/400)),this.requiredAbilities.push(new S(70)),this.requiredAbilities.push(new S(C.Vitality,20)),this.requiredAbilities.push(new S(C.Strength,30));break;case g.WizardHelm:this.effects.push(new f(a.MATKAdder,()=>10,()=>1)),this.effects.push(new f(a.FireDamage,()=>.025,()=>1/400)),this.effects.push(new f(a.IceDamage,()=>.025,()=>1/400)),this.effects.push(new f(a.ThunderDamage,()=>.025,()=>1/400)),this.effects.push(new f(a.LightDamage,()=>.025,()=>1/400)),this.effects.push(new f(a.DarkDamage,()=>.025,()=>1/400)),this.requiredAbilities.push(new S(70)),this.requiredAbilities.push(new S(C.Vitality,20)),this.requiredAbilities.push(new S(C.Intelligence,30));break;case g.LargeSword:this.effects.push(new f(a.ATKAdder,()=>30,()=>3)),this.effects.push(new f(a.ATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(a.WarriorSkillLevel,()=>5,()=>.1)),this.effects.push(new f(a.StoneGain,()=>1,()=>.2)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,100)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.LargeStaff:this.effects.push(new f(a.MATKAdder,()=>30,()=>3)),this.effects.push(new f(a.MATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(a.WizardSkillLevel,()=>5,()=>.1)),this.effects.push(new f(a.CrystalGain,()=>1,()=>.2)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,100)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.LargeWing:this.effects.push(new f(a.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new f(a.LightDamage,()=>.2,()=>.005)),this.effects.push(new f(a.AngelSkillLevel,()=>5,()=>.1)),this.effects.push(new f(a.LeafGain,()=>1,()=>.2)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,50)),this.requiredAbilities.push(new S(C.Intelligence,50)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.LargeDagger:this.effects.push(new f(a.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new f(a.DarkDamage,()=>.2,()=>.005)),this.effects.push(new f(a.ThiefSkillLevel,()=>5,()=>.1)),this.effects.push(new f(a.StoneGain,()=>1,()=>.2)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,50)),this.requiredAbilities.push(new S(C.Intelligence,50)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.LargeBow:this.effects.push(new f(a.FireDamage,()=>.2,()=>.005)),this.effects.push(new f(a.IceDamage,()=>.2,()=>.005)),this.effects.push(new f(a.ThunderDamage,()=>.2,()=>.005)),this.effects.push(new f(a.ArcherSkillLevel,()=>5,()=>.1)),this.effects.push(new f(a.CrystalGain,()=>1,()=>.2)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Intelligence,100)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.LargeOcarina:this.effects.push(new f(a.TamingPoint,()=>.1,()=>.005)),this.effects.push(new f(a.TamerSkillLevel,()=>5,()=>.1)),this.effects.push(new f(a.LeafGain,()=>1,()=>.2)),this.requiredAbilities.push(new S(150)),this.requiredAbilities.push(new S(C.Vitality,50)),this.requiredAbilities.push(new S(C.Strength,50)),this.requiredAbilities.push(new S(C.Intelligence,50)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.FairyClothes:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.TownMatGain,()=>.05,()=>1/400)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Intelligence,50)),this.requiredAbilities.push(new S(C.Luck,200));break;case g.FairyStaff:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.CrystalGain,()=>2,()=>.2)),this.effects.push(new f(a.MATKMultiplier,()=>.1,()=>.01)),this.effects.push(new f(a.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Intelligence,150)),this.requiredAbilities.push(new S(C.Luck,100));break;case g.FairyBoots:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.MoveSpeedAdder,()=>20,()=>1)),this.effects.push(new f(a.LightResistance,()=>.1,()=>1/400)),this.effects.push(new f(a.LightAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Vitality,100)),this.requiredAbilities.push(new S(C.Intelligence,50)),this.requiredAbilities.push(new S(C.Agility,100));break;case g.FairyGlove:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.SkillProficiency,()=>.15,()=>.005)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Intelligence,150)),this.requiredAbilities.push(new S(C.Luck,100));break;case g.FairyBrooch:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.EXPGain,()=>.3,()=>.015)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Luck,250));break;case g.FairyLamp:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.TownMatAreaClearGain,()=>2,()=>.1)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Intelligence,50)),this.requiredAbilities.push(new S(C.Luck,200));break;case g.FairyWing:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.LeafGain,()=>2,()=>.2)),this.effects.push(new f(a.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.ATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(a.MATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.MATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Strength,100)),this.requiredAbilities.push(new S(C.Intelligence,100)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.FairyShuriken:this.setKind=pe.Fairy,this.effects.push(new f(a.MPAdder,()=>100,()=>10)),this.effects.push(new f(a.StoneGain,()=>2,()=>.2)),this.effects.push(new f(a.ATKMultiplier,()=>.1,()=>.01)),this.effects.push(new f(a.ATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(a.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(200)),this.requiredAbilities.push(new S(C.Strength,150)),this.requiredAbilities.push(new S(C.Luck,100));break;case g.FoxKanzashi:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.BlessingEffect,()=>.1,()=>1/400)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Vitality,200)),this.requiredAbilities.push(new S(C.Luck,200));break;case g.FoxLoincloth:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.EXPGain,()=>.5,()=>.025)),this.effects.push(new f(a.DEFMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(a.MDEFMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Agility,200)),this.requiredAbilities.push(new S(C.Luck,200));break;case g.FoxMask:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.MPMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.MpRegen,()=>100,()=>10)),this.effects.push(new f(a.PhysicalAbsorption,()=>.02,()=>1e-4)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Vitality,200)),this.requiredAbilities.push(new S(C.Intelligence,150)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.FoxHamayayumi:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.CriticalDamage,()=>.2,()=>.005)),this.effects.push(new f(a.ArcherSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.DebuffResistance,()=>.05,()=>5e-4)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Strength,150)),this.requiredAbilities.push(new S(C.Intelligence,150)),this.requiredAbilities.push(new S(C.Agility,50)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.FoxHat:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.HPAdder,()=>500,()=>20)),this.effects.push(new f(a.HPMultiplier,()=>.05,()=>.001)),this.effects.push(new f(a.HpRegen,()=>10,()=>1)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Vitality,350)),this.requiredAbilities.push(new S(C.Luck,50));break;case g.FoxCoat:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.IceResistance,()=>.15,()=>1/400)),this.effects.push(new f(a.ThunderResistance,()=>.15,()=>1/400)),this.effects.push(new f(a.LightResistance,()=>.15,()=>1/400)),this.effects.push(new f(a.ThunderAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Vitality,200)),this.requiredAbilities.push(new S(C.Intelligence,100)),this.requiredAbilities.push(new S(C.Luck,100));break;case g.FoxBoot:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(a.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(a.ThunderDamage,()=>.25,()=>.005)),this.effects.push(new f(a.LightDamage,()=>.25,()=>.005)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Vitality,200)),this.requiredAbilities.push(new S(C.Intelligence,200));break;case g.FoxEma:this.setKind=pe.Fox,this.effects.push(new f(a.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(a.BlessingEffect,()=>.05,()=>1/400)),this.effects.push(new f(a.EquipmentDropChance,()=>15e-5,()=>1e-6)),this.effects.push(new f(a.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(250)),this.requiredAbilities.push(new S(C.Luck,400));break;case g.DevilfishSword:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.ATKMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(a.MATKMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(a.PhysicalCritical,()=>.25,()=>.005)),this.effects.push(new f(a.MagicalCritical,()=>.25,()=>.005)),this.effects.push(new f(a.CriticalDamage,()=>.1,()=>.005)),this.effects.push(new f(a.WarriorSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Strength,200)),this.requiredAbilities.push(new S(C.Intelligence,200)),this.requiredAbilities.push(new S(C.Luck,200));break;case g.DevilfishWing:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.HPMultiplier,()=>.025,()=>.001)),this.effects.push(new f(a.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.MATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(a.FireResistance,()=>.15,()=>1/400)),this.effects.push(new f(a.AngelSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Vitality,200)),this.requiredAbilities.push(new S(C.Strength,200)),this.requiredAbilities.push(new S(C.Intelligence,200));break;case g.DevilfishRecorder:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(a.IceDamage,()=>.25,()=>.005)),this.effects.push(new f(a.DarkDamage,()=>.25,()=>.005)),this.effects.push(new f(a.MPMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(a.TamerSkillLevel,()=>5,()=>.2)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Vitality,200)),this.requiredAbilities.push(new S(C.Intelligence,400));break;case g.DevilfishArmor:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.DEFAdder,()=>50,()=>5)),this.effects.push(new f(a.MDEFAdder,()=>50,()=>5)),this.effects.push(new f(a.HPMultiplier,()=>.025,()=>.001)),this.effects.push(new f(a.FireResistance,()=>.15,()=>1/400)),this.effects.push(new f(a.DarkResistance,()=>.15,()=>1/400)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Vitality,600));break;case g.DevilfishScarf:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.DEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(a.DEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(a.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(a.MDEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(a.IceDamage,()=>.05,()=>1/400)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Vitality,300)),this.requiredAbilities.push(new S(C.Strength,150)),this.requiredAbilities.push(new S(C.Intelligence,150));break;case g.DevilfishGill:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.IceDamage,()=>.05,()=>1/400)),this.effects.push(new f(a.FireAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.IceAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Vitality,350)),this.requiredAbilities.push(new S(C.Intelligence,250));break;case g.DevilfishPendant:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.GoldGain,()=>.2,()=>.02)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Luck,600));break;case g.DevilfishRing:this.setKind=pe.Devilfish,this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.DebuffResistance,()=>.15,()=>.0015)),this.effects.push(new f(a.StoneGain,()=>3,()=>.5)),this.effects.push(new f(a.CrystalGain,()=>3,()=>.5)),this.effects.push(new f(a.LeafGain,()=>3,()=>.5)),this.effects.push(new f(a.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(300)),this.requiredAbilities.push(new S(C.Vitality,400)),this.requiredAbilities.push(new S(C.Luck,200));break;case g.TreantAmulet:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.StoneGain,()=>100,()=>1)),this.effects.push(new f(a.CrystalGain,()=>100,()=>1)),this.effects.push(new f(a.LeafGain,()=>100,()=>1)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,500)),this.requiredAbilities.push(new S(C.Luck,1e3));break;case g.TreantHagoita:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.TamingPoint,()=>.25,()=>.025)),this.effects.push(new f(a.PetEXPGain,()=>.25,()=>.025)),this.effects.push(new f(a.LoyaltyPointGain,()=>.25,()=>.025)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,500)),this.requiredAbilities.push(new S(C.Strength,500)),this.requiredAbilities.push(new S(C.Intelligence,500));break;case g.TreantChoppingBoard:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.HPAdder,()=>200,()=>20)),this.effects.push(new f(a.DEFAdder,()=>100,()=>10)),this.effects.push(new f(a.MDEFAdder,()=>100,()=>10)),this.effects.push(new f(a.DEFMultiplier,()=>.1,()=>.01)),this.effects.push(new f(a.MDEFMultiplier,()=>.1,()=>.01)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,1e3)),this.requiredAbilities.push(new S(C.Strength,250)),this.requiredAbilities.push(new S(C.Intelligence,250));break;case g.TreantDagger:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.PhysicalDamage,()=>1,()=>.01)),this.effects.push(new f(a.FireDamage,()=>1,()=>.01)),this.effects.push(new f(a.IceDamage,()=>1,()=>.01)),this.effects.push(new f(a.ThunderDamage,()=>1,()=>.01)),this.effects.push(new f(a.LightDamage,()=>1,()=>.01)),this.effects.push(new f(a.DarkDamage,()=>1,()=>.01)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Strength,750)),this.requiredAbilities.push(new S(C.Intelligence,750));break;case g.TreantHaniwa:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.HPAdder,()=>1e3,()=>50)),this.effects.push(new f(a.HPMultiplier,()=>.1,()=>.005)),this.effects.push(new f(a.HpRegen,()=>250,()=>25)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,1500));break;case g.TreantKokeshi:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.ColorMaterialDropChance,()=>1e-4,()=>1e-6)),this.effects.push(new f(a.CriticalDamage,()=>1,()=>.01)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,500)),this.requiredAbilities.push(new S(C.Luck,1e3));break;case g.TreantLamp:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.GoldGain,()=>.5,()=>.025)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,500)),this.requiredAbilities.push(new S(C.Strength,250)),this.requiredAbilities.push(new S(C.Intelligence,250)),this.requiredAbilities.push(new S(C.Luck,500));break;case g.TreantLunchbox:this.setKind=pe.Treant,this.effects.push(new f(a.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(a.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(a.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(a.CatalystDoubleCriticalChance,()=>.025,()=>5e-4)),this.effects.push(new f(a.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(350)),this.requiredAbilities.push(new S(C.Vitality,500)),this.requiredAbilities.push(new S(C.Luck,1e3));break;case g.FlametigerPortableHotSpring:this.setKind=pe.Flametiger,this.effects.push(new f(a.SkillProficiency,()=>-2,()=>.005)),this.effects.push(new f(a.HPAdder,()=>5e3,()=>500)),this.effects.push(new f(a.MPAdder,()=>2e3,()=>200)),this.effects.push(new f(a.HPMultiplier,()=>.5,()=>.01)),this.effects.push(new f(a.MPMultiplier,()=>.5,()=>.01)),this.effects.push(new f(a.HpRegenMultiplier,()=>.001,()=>5e-5)),this.effects.push(new f(a.MpRegenMultiplier,()=>.001,()=>5e-5)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Vitality,5e5));break;case g.FlametigerVolcanicShield:this.setKind=pe.Flametiger,this.effects.push(new f(a.EXPGain,()=>-2,()=>.005)),this.effects.push(new f(a.PhysicalDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.ArmoredFury,()=>.025,()=>.001)),this.effects.push(new f(a.DEFAdder,()=>200,()=>20)),this.effects.push(new f(a.DEFMultiplier,()=>.2,()=>.02)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Vitality,25e4)),this.requiredAbilities.push(new S(C.Strength,25e4));break;case g.FlametigerStripedBriefs:this.setKind=pe.Flametiger,this.effects.push(new f(a.DebuffResistance,()=>-4,()=>.01)),this.effects.push(new f(a.PhysicalCriticalMultiplier,()=>.025,()=>5e-4)),this.effects.push(new f(a.MagicalCriticalMultiplier,()=>.025,()=>5e-4)),this.effects.push(new f(a.EXPGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(a.GoldGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Luck,5e5));break;case g.TorchOfEverburningFlametiger:this.setKind=pe.Flametiger,this.effects.push(new f(a.GoldGain,()=>-2,()=>.005)),this.effects.push(new f(a.WarriorSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(a.WizardSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(a.AngelSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(a.ThiefSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(a.ArcherSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(a.TamerSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Strength,1e5)),this.requiredAbilities.push(new S(C.Intelligence,1e5)),this.requiredAbilities.push(new S(C.Agility,3e5));break;case g.FlametigerCostume:this.setKind=pe.Flametiger,this.effects.push(new f(a.EquipmentProficiency,()=>-2,()=>.005)),this.effects.push(new f(a.PetPhysicalCriticalChance,()=>.1,()=>.005)),this.effects.push(new f(a.PetMagicalCriticalChance,()=>.1,()=>.005)),this.effects.push(new f(a.PetCriticalDamage,()=>.3,()=>.005)),this.effects.push(new f(a.TamingPointMultiplier,()=>.1,()=>.005)),this.effects.push(new f(a.PetEXPGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(a.LoyaltyPointGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Vitality,1e5)),this.requiredAbilities.push(new S(C.Agility,2e5)),this.requiredAbilities.push(new S(C.Luck,2e5));break;case g.RingOfFlametigersWrath:this.setKind=pe.Flametiger,this.effects.push(new f(a.EXPGain,()=>-2,()=>.005)),this.effects.push(new f(a.FireDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.IceDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.ThunderDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.LightDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.DarkDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(a.WardedFury,()=>.025,()=>.001)),this.effects.push(new f(a.MDEFAdder,()=>200,()=>20)),this.effects.push(new f(a.MDEFMultiplier,()=>.2,()=>.02)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Vitality,25e4)),this.requiredAbilities.push(new S(C.Intelligence,25e4));break;case g.EndlessBowlOfSpicyFlametigerRamen:this.setKind=pe.Flametiger,this.effects.push(new f(a.TamingPoint,()=>-10,()=>.025)),this.effects.push(new f(a.LoyaltyPointGain,()=>-10,()=>.025)),this.effects.push(new f(a.StoneTownResearchPower,()=>.025,()=>.001)),this.effects.push(new f(a.CrystalTownResearchPower,()=>.025,()=>.001)),this.effects.push(new f(a.LeafTownResearchPower,()=>.025,()=>.001)),this.effects.push(new f(a.BlessingEffectMultiplier,()=>.01,()=>25e-5)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Vitality,1e5)),this.requiredAbilities.push(new S(C.Agility,4e5));break;case g.ScreenOfTheSneakyFlametiger:this.setKind=pe.Flametiger,this.effects.push(new f(a.AllSkillLevel,()=>-1e3,()=>2.5)),this.effects.push(new f(a.GoldGainMultiplier,()=>.05,()=>1/400)),this.effects.push(new f(a.GuildEXPGain,()=>.005,()=>25e-5)),this.effects.push(new f(a.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(a.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new S(700)),this.requiredAbilities.push(new S(C.Agility,25e4)),this.requiredAbilities.push(new S(C.Luck,25e4));break;case g.ModifiedSword:this.isArtifact=!0,this.effects.push(new f(a.MPAfter,()=>25,()=>5)),this.effects.push(new f(a.ATKAfter,()=>50,()=>10)),this.requiredAbilities.push(new S(10,!0)),this.requiredAbilities.push(new S(C.Strength,5,!0));break;case g.ModifiedStaff:this.isArtifact=!0,this.effects.push(new f(a.HPAfter,()=>50,()=>10)),this.effects.push(new f(a.MATKAfter,()=>50,()=>10)),this.requiredAbilities.push(new S(10,!0)),this.requiredAbilities.push(new S(C.Intelligence,5,!0));break;case g.ModifiedWing:this.isArtifact=!0,this.effects.push(new f(a.HPAfter,()=>50,()=>10)),this.effects.push(new f(a.MPAfter,()=>25,()=>5)),this.effects.push(new f(a.SDDamageCutMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new S(10,!0)),this.requiredAbilities.push(new S(C.Vitality,5,!0));break;case g.ModifiedDart:this.isArtifact=!0,this.effects.push(new f(a.MPAfter,()=>10,()=>2)),this.effects.push(new f(a.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new S(10,!0)),this.requiredAbilities.push(new S(C.Agility,3,!0)),this.requiredAbilities.push(new S(C.Luck,2,!0));break;case g.ModifiedBow:this.isArtifact=!0,this.effects.push(new f(a.HPAfter,()=>25,()=>5)),this.effects.push(new f(a.DEFAfter,()=>25,()=>5)),this.effects.push(new f(a.MDEFAfter,()=>25,()=>5)),this.effects.push(new f(a.SDDamageMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new S(10,!0)),this.requiredAbilities.push(new S(C.Vitality,1,!0)),this.requiredAbilities.push(new S(C.Strength,2,!0)),this.requiredAbilities.push(new S(C.Intelligence,2,!0));break;case g.ModifiedRecorder:this.isArtifact=!0,this.effects.push(new f(a.HPAfter,()=>50,()=>10)),this.effects.push(new f(a.MPAfter,()=>25,()=>5)),this.effects.push(new f(a.FameGain,()=>.05,()=>.01)),this.requiredAbilities.push(new S(10,!0)),this.requiredAbilities.push(new S(C.Luck,5,!0));break;case g.AncientCloak:this.isArtifact=!0,this.effects.push(new f(a.HPAfter,()=>200,()=>40)),this.effects.push(new f(a.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new S(20,!0)),this.requiredAbilities.push(new S(C.Vitality,10,!0)),this.requiredAbilities.push(new S(C.Agility,5,!0)),this.requiredAbilities.push(new S(C.Luck,5,!0));break;case g.AncientBelt:this.isArtifact=!0,this.effects.push(new f(a.DEFAfter,()=>50,()=>10)),this.effects.push(new f(a.MDEFAfter,()=>50,()=>10)),this.effects.push(new f(a.SDDamageCutMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new S(20,!0)),this.requiredAbilities.push(new S(C.Vitality,20,!0));break;case g.AncientShoes:this.isArtifact=!0,this.effects.push(new f(a.SPDAfter,()=>25,()=>5)),this.effects.push(new f(a.MoveSpeedAfter,()=>20,()=>4)),this.effects.push(new f(a.FameGain,()=>.02,()=>.004)),this.requiredAbilities.push(new S(30,!0)),this.requiredAbilities.push(new S(C.Agility,20,!0)),this.requiredAbilities.push(new S(C.Luck,10,!0));break;case g.AncientRing:this.isArtifact=!0,this.effects.push(new f(a.ATKAfter,()=>10,()=>2.5)),this.effects.push(new f(a.MATKAfter,()=>10,()=>2.5)),this.effects.push(new f(a.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new S(40,!0)),this.requiredAbilities.push(new S(C.Strength,10,!0)),this.requiredAbilities.push(new S(C.Intelligence,10,!0)),this.requiredAbilities.push(new S(C.Agility,10,!0)),this.requiredAbilities.push(new S(C.Luck,10,!0));break;case g.AncientEarring:this.isArtifact=!0,this.effects.push(new f(a.SDDamageMultiplier,()=>.1,()=>.05)),this.effects.push(new f(a.FameGain,()=>.05,()=>.01)),this.requiredAbilities.push(new S(40,!0)),this.requiredAbilities.push(new S(C.Agility,10,!0)),this.requiredAbilities.push(new S(C.Luck,30,!0));break}}SetLevelMaxEffect(){if(this.isArtifact)switch(this.rarity){case q.Rare:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.ATKAfter,()=>50,()=>0,!0),this.levelMaxEffects[1]=new f(a.MATKAfter,()=>50,()=>0,!0),this.levelMaxEffects[2]=new f(a.MPAfter,()=>50,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.PhysicalCriticalAfter,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new f(a.MagicalCriticalAfter,()=>.01,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.DEFAfter,()=>50,()=>0,!0),this.levelMaxEffects[1]=new f(a.MDEFAfter,()=>50,()=>0,!0),this.levelMaxEffects[2]=new f(a.HPAfter,()=>200,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAfter,()=>50,()=>0,!0),this.levelMaxEffects[5]=new f(a.MoveSpeedAfter,()=>50,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.FireResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.IceResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.ThunderResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.LightResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new f(a.DarkResistanceAfter,()=>.05,()=>0,!0);return;default:return}case q.SuperRare:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.ATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(a.MATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(a.CriticalDamage,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPoint,()=>.5,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.DEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(a.MDEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new f(a.GoldGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(a.EquipmentProficiency,()=>.1,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.EXPGain,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(a.SkillProficiency,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(a.RebirthPointGain2,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.TownMatGain,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new f(a.PetEXPGain,()=>.25,()=>0,!0);return;default:return}case q.Epic:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.StoneTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.CrystalTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.LeafTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDMultiplier,()=>.3,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPointMultiplier,()=>.25,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.ArmoredFury,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.WardedFury,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.GoldGainMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(a.GuildEXPGain,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new f(a.PetEXPGainMultiplier,()=>.25,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.EXPGainMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(a.SkillProficiencyMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(a.RebirthPointGain3,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(a.EquipmentProficiencyMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[5]=new f(a.LoyaltyPointGainMultiplier,()=>.25,()=>0,!0);return;default:return}}else switch(this.rarity){case q.Common:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.ATKAdder,()=>15,()=>0,!0),this.levelMaxEffects[1]=new f(a.MATKAdder,()=>15,()=>0,!0),this.levelMaxEffects[2]=new f(a.AllSkillLevel,()=>1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>20,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPoint,()=>.05,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.HPAdder,()=>100,()=>0,!0),this.levelMaxEffects[1]=new f(a.MPAdder,()=>50,()=>0,!0),this.levelMaxEffects[2]=new f(a.HpRegen,()=>5,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(a.MpRegen,()=>20,()=>0,!0),this.levelMaxEffects[5]=new f(a.LoyaltyPointGain,()=>.05,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.StoneGain,()=>1,()=>0,!0),this.levelMaxEffects[1]=new f(a.CrystalGain,()=>1,()=>0,!0),this.levelMaxEffects[2]=new f(a.LeafGain,()=>1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(a.TownMatAreaClearGain,()=>1,()=>0,!0),this.levelMaxEffects[5]=new f(a.PetEXPGain,()=>.05,()=>0,!0);return;default:return}case q.Uncommon:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.ATKMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.MATKMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.SkillProficiency,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>50,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPoint,()=>.1,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.DEFAdder,()=>25,()=>0,!0),this.levelMaxEffects[1]=new f(a.MDEFAdder,()=>25,()=>0,!0),this.levelMaxEffects[2]=new f(a.GoldGain,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>50,()=>0,!0),this.levelMaxEffects[5]=new f(a.EquipmentProficiency,()=>.025,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.HPMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.MPMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.EXPGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(a.TownMatGain,()=>.025,()=>0,!0),this.levelMaxEffects[5]=new f(a.PetEXPGain,()=>.1,()=>0,!0);return;default:return}case q.Rare:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.ATKPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(a.MATKPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new f(a.SkillProficiency,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>100,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPoint,()=>.25,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.DEFMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[1]=new f(a.MDEFMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(a.HpRegen,()=>10,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>100,()=>0,!0),this.levelMaxEffects[5]=new f(a.EquipmentProficiency,()=>.05,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.HPMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[1]=new f(a.MPMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(a.RebirthPointGain1,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.TownMatAreaClearGain,()=>2,()=>0,!0),this.levelMaxEffects[5]=new f(a.LoyaltyPointGain,()=>.2,()=>0,!0);return;default:return}case q.SuperRare:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.ATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(a.MATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(a.CriticalDamage,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPoint,()=>.5,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.DEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(a.MDEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new f(a.GoldGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(a.EquipmentProficiency,()=>.1,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.EXPGain,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(a.SkillProficiency,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(a.RebirthPointGain2,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(a.TownMatGain,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new f(a.PetEXPGain,()=>.25,()=>0,!0);return;default:return}case q.Epic:switch(this.part){case F.Weapon:this.levelMaxEffects[0]=new f(a.StoneTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.CrystalTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.LeafTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(a.SPDMultiplier,()=>.3,()=>0,!0),this.levelMaxEffects[5]=new f(a.TamingPointMultiplier,()=>.25,()=>0,!0);return;case F.Armor:this.levelMaxEffects[0]=new f(a.ArmoredFury,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(a.WardedFury,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(a.GoldGainMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(a.GuildEXPGain,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new f(a.PetEXPGainMultiplier,()=>.25,()=>0,!0);return;case F.Jewelry:this.levelMaxEffects[0]=new f(a.EXPGainMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(a.SkillProficiencyMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(a.RebirthPointGain3,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(a.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(a.EquipmentProficiencyMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[5]=new f(a.LoyaltyPointGainMultiplier,()=>.25,()=>0,!0);return;default:return}}}DisassembleMaterialNum(){return this.isArtifact?1+this.TotalLevel():Math.max(1,Math.floor((this.TotalLevel()+this.requiredAbilities[0].requiredValue/2)/4))}CraftCostMaterialNum(){let t=this.DisassembleMaterialNum()*500*(1-this.data.craft.costReduction.Value())*(1+this.rarity*2);return this.rarity>=q.Epic&&(t*=1e6),t<this.DisassembleMaterialNum()*this.data.equipment.disassembleMultiplier.Value()*4&&(t=this.DisassembleMaterialNum()*this.data.equipment.disassembleMultiplier.Value()*4),t}TotalLevel(){let t=0;for(let s=0;s<this.levels.length;s++)t+=this.levels[s].value;return t}RequiredProficiency(t,s){let i=Math.pow(3,this.rarity)*(1+1.5*this.rarity)*300*(s*(1+this.rarity)+1);return this.rarity>=q.Epic&&(i*=1e4*Math.pow(10,s/10)),s<=10?i:i*Math.pow(2,s-10)}ForgeSlotNum(){return this.TotalLevel()<60?0:this.TotalLevel()<80?1:this.TotalLevel()<100?2:this.TotalLevel()<120?3:this.TotalLevel()<140?4:this.TotalLevel()<160?5:6}MasteryNum(){let t=0;for(let s=0;s<this.levels.length;s++)this.levels[s].isMaxed&&t++;return t}}class U1{constructor(t){o(this,"data");o(this,"globalInformations",Array(N.EquipmentKind));o(this,"setItemArray",Array(N.EquipmentSetKind));o(this,"dictionaryUpgradeEffectMultiplier");o(this,"equipments",[]);o(this,"activeEquipments",Array(N.HeroKind));o(this,"dictionaryUpgradeMaxLevel");o(this,"dictionaryPointLeft");o(this,"dictionaryUpgrades",Array(N.DictionaryUpgradeKind));o(this,"artifactChance");o(this,"sdEnchantChance");o(this,"loadoutUnlockedNum");o(this,"effectMultiplier");o(this,"effectMultiplierModifierForArtifact");o(this,"forgeEffectCapAdderEQEffect");o(this,"forgeEffectCapAdderEffectIncrement");o(this,"forgeEffectCapAdderEQLevel");o(this,"maxLevels",Array(N.HeroKind));o(this,"disassembleMultiplier");o(this,"autoDisassembleAvailableNum");o(this,"dictionaryEquipmentArray");this.data=t;for(let s=0;s<this.globalInformations.length;s++)this.globalInformations[s]=new q1(this.data,s);this.autoDisassembleAvailableNum=new H,this.forgeEffectCapAdderEQLevel=new H,this.forgeEffectCapAdderEffectIncrement=new H,this.forgeEffectCapAdderEQEffect=new H,this.loadoutUnlockedNum=new H,this.dictionaryUpgradeEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.dictionaryUpgradeMaxLevel=new H(new u(n.Base,r.Add,()=>50)),this.effectMultiplierModifierForArtifact=new H,this.effectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.disassembleMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.artifactChance=new H(new u(n.Base,r.Add,()=>.01)),this.sdEnchantChance=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.maxLevels.length;s++)this.maxLevels[s]=new H(new u(n.Base,r.Add,()=>jt.maxLevelForEachHero));for(let s=0;s<N.EquipmentSetKind;s++)this.setItemArray[s]=this.SetItemList(s);for(let s=0;s<this.dictionaryUpgrades.length;++s)this.dictionaryUpgrades[s]=new V1(this,s)}SetItemList(t){let s=[];for(let i=0;i<this.globalInformations.length;i++)this.globalInformations[i].setKind==t&&s.push(this.globalInformations[i].kind);return s}Start(){for(let t=0;t<this.dictionaryUpgrades.length;t++)this.dictionaryUpgrades[t].Start()}EffectMultiplier(){return this.data.source.isSuperDungeon&&this.data.source.isActiveSdModifiers[950+Rt.RemoveEquipmentEffectBonuses]?1:this.effectMultiplier.Value()}ArtifactEffectMultiplier(){return 1+(this.EffectMultiplier()-1)*this.effectMultiplierModifierForArtifact.Value()}}const bt={colorDropChanceBase:.001,dropChanceBase:.01,ColorFactor(e){switch(e){case _t.Normal:return 1;case _t.Blue:return 1.25;case _t.Yellow:return 1.25;case _t.Red:return 1.5;case _t.Green:return 2.5;case _t.Purple:return 3;case _t.Boss:return 10;case _t.Metal:return 500;default:return 1}},SpeciesFactor(e){switch(e){case Z.Slime:return 1;case Z.MagicSlime:return 1.15;case Z.Spider:return .8;case Z.Bat:return 1.35;case Z.Fairy:return 1.5;case Z.Fox:return 1.75;case Z.DevilFish:return 2.35;case Z.Treant:return 3;case Z.FlameTiger:return 5;case Z.Unicorn:return 7;case Z.Mimic:return 10;case Z.ChallengeBoss:return 5;default:return 1}},PetPassiveEffectMaxValue(e){switch(e){case _.DoubleMaterialChance:return 1;case _.DisassembleTownMatGain:return 10;case _.ChestPortalOrbChance:return .005;default:return 1e300}},PetPassiveEffectValue(e,t){switch(e){case _.ResourceGain:return .1*t;case _.PotionEffect:return .005*t;case _.TamingPointGain:return .05*t;case _.GoldCap:return .025*t;case _.GoldGain:return .025*t;case _.ExpGain:return .1*t;case _.DoubleMaterialChance:return 5e-4*t;case _.GoldGainOnDisassemblePotion:return .05*t;case _.DisassembleTownMatGain:return .01*t;case _.TownMatGainFromDungeonReward:return .01*t;case _.OilOfSlimeDropChance:return .001*t;case _.EnchantedClothDropChance:return .001*t;case _.SpiderSilkDropChance:return .001*t;case _.BatWingDropChance:return .001*t;case _.FairyDustDropChance:return .001*t;case _.FoxTailDropChance:return .001*t;case _.FishScalesDropChance:return .001*t;case _.CarvedBranchDropChance:return .001*t;case _.ThickFurDropChance:return .001*t;case _.UnicornHornDropChance:return .001*t;case _.EquipProfGain:return .01*t;case _.MysteriousWaterGain:return .01*t;case _.ChestPortalOrbChance:return 1e-6*t;case _.SkillProfGain:return .01*t;case _.TownMatGain:return .01*t;case _.ResearchPowerStone:return .025*t;case _.ResearchPowerCrystal:return .025*t;case _.ResearchPowerLeaf:return .025*t;case _.CatalystCriticalChance:return .01*t;case _.MysteriousWaterCap:return 2*t;case _.BlessingEffect:return .02*t;case _.LoyaltyPointGain:return .025*t;case _.PetExpGain:return .05*t;case _.ExpeditionExpGain:return .005*t;case _.EssenceConversionRate:return .005*t;case _.SlimeCoinEfficiency:return .005*t;case _.SlimeCoinCap:return .025*t;case _.EquipmentEffect:return .001*t;case _.AlchemyPointGain:return .01*t;default:return 0}},petPassiveEffectKinds:[[_.ResourceGain,_.DoubleMaterialChance,_.OilOfSlimeDropChance,_.EquipProfGain,_.TownMatGain,_.GoldGain,_.Nothing,_.Nothing,_.Nothing],[_.PotionEffect,_.GoldGainOnDisassemblePotion,_.EnchantedClothDropChance,_.MysteriousWaterGain,_.ResearchPowerStone,_.ResearchPowerLeaf,_.Nothing,_.Nothing,_.Nothing],[_.TamingPointGain,_.TamingPointGain,_.SpiderSilkDropChance,_.TamingPointGain,_.TamingPointGain,_.TamingPointGain,_.Nothing,_.Nothing,_.Nothing],[_.GoldCap,_.DisassembleTownMatGain,_.BatWingDropChance,_.DisassembleTownMatGain,_.ResearchPowerCrystal,_.ResearchPowerCrystal,_.Nothing,_.Nothing,_.Nothing],[_.ExpGain,_.TownMatGainFromDungeonReward,_.FairyDustDropChance,_.ChestPortalOrbChance,_.TamingPointGain,_.TamingPointGain,_.Nothing,_.Nothing,_.Nothing],[_.GoldGain,_.DisassembleTownMatGain,_.FoxTailDropChance,_.SkillProfGain,_.ResearchPowerLeaf,_.ResearchPowerStone,_.Nothing,_.Nothing,_.Nothing],[_.CatalystCriticalChance,_.MysteriousWaterCap,_.FishScalesDropChance,_.PotionEffect,_.BlessingEffect,_.LoyaltyPointGain,_.Nothing,_.Nothing,_.Nothing],[_.ResourceGain,_.PetExpGain,_.CarvedBranchDropChance,_.SkillProfGain,_.LoyaltyPointGain,_.ExpeditionExpGain,_.Nothing,_.Nothing,_.Nothing],[_.EssenceConversionRate,_.SlimeCoinEfficiency,_.ThickFurDropChance,_.SlimeCoinCap,_.EquipmentEffect,_.AlchemyPointGain,_.Nothing,_.Nothing,_.Nothing],[_.Nothing,_.Nothing,_.UnicornHornDropChance,_.Nothing,_.Nothing,_.Nothing,_.Nothing,_.Nothing,_.Nothing],[_.DisassembleTownMatGain,_.SpiderSilkDropChance]],monsterAttackElements:[[B.Physical,B.Physical,B.Physical,B.Physical,B.Physical,B.Physical,B.Physical,B.Physical],[B.Ice,B.Ice,B.Thunder,B.Fire,B.Light,B.Dark,B.Fire,B.Physical],[B.Physical,B.Ice,B.Physical,B.Fire,B.Physical,B.Dark,B.Physical,B.Physical],[B.Fire,B.Ice,B.Thunder,B.Fire,B.Light,B.Dark,B.Dark,B.Physical],[B.Thunder,B.Physical,B.Thunder,B.Physical,B.Light,B.Physical,B.Thunder,B.Physical],[B.Physical,B.Ice,B.Physical,B.Fire,B.Physical,B.Dark,B.Physical,B.Physical],[B.Fire,B.Ice,B.Thunder,B.Fire,B.Light,B.Dark,B.Physical,B.Physical],[B.Physical,B.Ice,B.Physical,B.Fire,B.Physical,B.Dark,B.Physical,B.Physical],[B.Physical,B.Ice,B.Physical,B.Fire,B.Physical,B.Dark,B.Physical,B.Physical],[B.Physical],[B.Physical,B.Dark,B.Physical,B.Physical,B.Fire,B.Thunder,B.Physical,B.Physical,B.Physical,B.Physical]],monsterStats:[[[10,0,.5,0,0,0,5,-.5,-.5,-.5,-.5,-.5],[20,0,.75,0,0,0,5,-.5,-.5,-.5,-.5,-.5],[10,0,.5,0,0,0,7.5,-.5,-.5,-.5,-.5,-.5],[20,0,1.25,0,0,0,2.5,-.5,-.5,-.5,-.5,-.5],[30,0,.75,0,5,1,10,-.5,-.5,-.5,-.5,-.5],[50,0,2.5,0,5,1,2.5,-.5,-.5,-.5,-.5,-.5],[200,0,2.5,0,20,5,5,-.2,-.2,-.2,-.2,-.2],[1,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,.5,0,0,5,-.5,-.5,-.5,-.5,-.5],[20,0,0,.75,0,0,5,0,.5,-.5,0,0],[10,0,0,.5,0,0,7.5,-.5,0,.5,0,0],[20,0,0,1.25,0,0,2.5,.5,-.5,0,0,0],[30,0,0,.75,1,5,10,0,0,0,.5,-.5],[50,0,0,2.5,1,5,2.5,0,0,0,-.5,.5],[200,0,0,2.5,5,20,5,0,0,0,0,0],[2,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,1,0,2.5,.5,5,-.2,0,0,-.5,.5],[15,0,0,1,.5,2.5,5,-.2,.6,-.4,-.5,.5],[10,0,.75,0,2.5,.5,7.5,-.6,0,.6,-.5,.5],[15,0,0,1.5,.5,2.5,2.5,.4,-.4,0,-.5,.5],[20,0,1,0,5,1,10,-.2,0,0,-.5,.5],[30,0,0,3,1,5,2.5,-.2,0,0,-1,.9],[150,0,3.75,0,20,20,5,.5,.5,.5,-.5,.5],[3,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,.5,0,2.5,.5,20,-.2,-.2,-.2,-.5,0],[15,0,.5,0,2.5,.5,20,-.2,.5,-.2,-.5,0],[10,0,.4,0,2.5,.5,30,-.2,-.2,.5,-.5,0],[15,0,1,0,2.5,.5,10,.5,-.2,-.2,-.5,0],[20,0,.6,0,5,1,40,-.2,-.2,-.2,-.2,0],[30,0,1.5,0,5,1,10,-.2,-.2,-.2,-.5,.5],[150,0,2,0,20,5,40,0,0,0,-.5,0],[4,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,0,.5,.5,2.5,20,0,0,0,.5,-.5],[15,0,0,.5,.5,2.5,20,0,.5,-.2,.5,-.5],[10,0,0,.4,.5,2.5,30,-.2,0,.5,.5,-.5],[15,0,0,1,.5,2.5,10,.5,-.2,0,.5,-.5],[20,0,0,.6,1,5,40,0,0,0,.9,-.5],[30,0,0,1.5,1,5,10,0,0,0,.5,-.2],[150,0,0,2,5,20,40,.2,.2,.2,.9,-.2],[5,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,1,1,1,5,-.2,.1,.8,.5,-.25],[20,0,1.5,0,1,1,5,-.2,.1,.25,.5,-.25],[10,0,0,1,1,1,7.5,-.2,.1,.8,.5,-.25],[20,0,2.5,0,1,1,2.5,-.2,.1,.5,.5,-.25],[30,0,0,1.5,2,2,10,-.2,.1,.5,.9,-.25],[50,0,5,0,2,2,2.5,-.2,.1,.5,.5,-.25],[200,0,0,5,5,5,5,0,.5,.9,.9,-.1],[6,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[25,0,.5,0,10,10,2.5,.5,.2,-.5,-.25,.8],[50,0,0,.75,10,10,2.5,.5,.5,-.5,-.25,.8],[25,0,.5,0,10,10,3.5,.5,.2,-.5,-.25,.8],[50,0,0,1.25,10,10,1.5,.5,.2,-.5,-.25,.8],[75,0,.75,0,25,25,3.5,.5,.2,-.5,-.25,.8],[125,0,0,2.5,25,25,1.5,.5,.2,-.5,-.25,.9],[500,0,2.5,0,50,50,2.5,.9,.5,-.2,0,.9],[7,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[50,0,.75,0,40,40,2,-.25,.2,.2,-.25,.8],[100,0,1,0,40,40,2,-.25,.2,.2,-.25,.8],[50,0,.75,0,40,40,3,-.25,.2,.2,-.25,.8],[100,0,1.5,0,40,40,1.25,-.25,.2,.2,-.25,.8],[150,0,1,0,100,100,3,-.25,.2,.2,-.25,.8],[250,0,3,0,100,100,1.25,-.25,.2,.2,-.25,.9],[1e3,0,3,0,100,100,2.5,0,.5,.5,0,.9],[8,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,1,0,.5,10,.5,.5,.5,.5,.5],[20,0,0,1.5,0,.5,10,.5,.9,.5,.5,.5],[10,0,0,1,0,.5,15,.5,.5,.9,.5,.5],[20,0,0,2.5,0,.5,5,.9,.5,.5,.5,.5],[30,0,0,1.5,0,1,20,.5,.5,.5,.9,.5],[50,0,0,5,0,1,5,.5,.5,.5,.5,.9],[200,0,5,0,1,2.5,10,.9,.9,.9,.9,.9],[9,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,.5,2.5,0,0,5,-.2,0,0,-.5,.5],[15,0,0,1,0,2.5,5,-.6,.6,0,-.5,.5],[10,0,.75,0,2.5,0,7.5,-.2,0,0,-.5,.5],[15,0,0,1.5,0,2.5,2.5,.4,-.6,0,-.5,.5],[20,0,1,0,5,0,10,-.2,0,0,-.5,.5],[30,0,0,3,0,5,2.5,-.2,0,0,-1,.9],[150,0,3.75,0,20,20,5,0,0,0,0,0],[.3,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[200,0,1,0,10,10,5,0,0,0,0,0]],[[1e3,0,3.5,0,10,10,2.5,0,0,0,0,0],[850,0,0,7.5,100,10,2.5,.5,.5,.5,-.5,.5],[2e3,0,7.5,7.5,200,200,2,0,0,0,0,0],[1e3,0,3.5,0,50,10,10/3,0,0,0,-.2,.5],[1200,0,0,3.5,50,100,4,.6,.6,.6,.9,.1],[2e3,0,10,10,100,100,2.5,.5,.6,.9,.9,.3],[1e5,0,10,0,200,200,2.5,.9,.9,.9,.9,.9],[2e3,0,5,5,200,200,2,0,0,0,0,0],[2e3,0,5,5,200,200,2,0,0,0,0,0],[2e3,0,5,5,200,200,2,0,0,0,0,0]]],townMatBricks:[$e.MudBrick,$e.MudBrick,$e.LimestoneBrick,$e.LimestoneBrick,$e.MarbleBrick,$e.MarbleBrick,$e.GraniteBrick,$e.GraniteBrick,$e.BasaltBrick,$e.BasaltBrick],townMatLogs:[$e.PineLog,$e.PineLog,$e.MapleLog,$e.MapleLog,$e.AshLog,$e.AshLog,$e.MahoganyLog,$e.MahoganyLog,$e.RosewoodLog,$e.RosewoodLog],townMatShards:[$e.JasperShard,$e.JasperShard,$e.OpalShard,$e.OpalShard,$e.OnyxShard,$e.OnyxShard,$e.JadeShard,$e.JadeShard,$e.SapphireShard,$e.SapphireShard]};class Di{constructor(t,s){o(this,"data");o(this,"kind");this.data=t,this.kind=s}Start(){this.SetEffect()}get level(){return this.data.source.expeditionLevels[this.kind]}set level(t){this.data.source.expeditionLevels[this.kind]=parseInt(t)}get exp(){return this.data.source.expeditionExps[this.kind]}RequiredExp(t){let s=86400*(1+t+.25*Math.pow(Math.max(0,t-3),2));return t>=200&&(s*=Math.pow(2,(t-200)/50)),t>=300&&(s*=Math.pow(2,(t-300)/50)),t>=400&&(s*=Math.pow(2,(t-400)/50)),t>=500&&(s*=Math.pow(2,(t-500)/50)),s}TotalExp(){let t=0;for(let s=0;s<this.level;s++)t+=this.RequiredExp(s);return t+this.exp}GetExp(t){return t*this.ExpGainPerSecPerPet()}ExpGainPerSecPerPet(){return 1*this.data.expedition.expGainMultiplier.Value()}PetExpGainPerSec(){return 5*(1+.5*this.level)*this.data.expedition.petExpGainMultiplier.Value()*this.data.stats.MaxPetEXPGainAmongHeroes()}SpeedModifierByExpeditionLevel(){return Math.pow(1.1,Math.floor(this.level/10))}SetEffect(){switch(this.kind){case Ye.Brick:this.data.town.townLevelEffectMultipliers[0].RegisterMultiplier(new u(n.Expedition,r.Add,()=>this.EffectValue()));break;case Ye.Equipment:this.data.stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.Expedition,r.Mul,()=>this.EffectValue()));break;case Ye.Log:this.data.town.townLevelEffectMultipliers[1].RegisterMultiplier(new u(n.Expedition,r.Add,()=>this.EffectValue()));break;case Ye.PetExp:this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new u(n.Expedition,r.Mul,()=>this.EffectValue()));break;case Ye.PetRank:this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.Expedition,r.Mul,()=>this.EffectValue()));break;case Ye.Shard:this.data.town.townLevelEffectMultipliers[2].RegisterMultiplier(new u(n.Expedition,r.Add,()=>this.EffectValue()));break;case Ye.WalkDistance:this.data.expedition.walkedDistanceGainMultiplier.RegisterMultiplier(new u(n.Expedition,r.Add,()=>this.EffectValue()));break}}get passiveEffectValueIncrementPerLevel(){switch(this.kind){case Ye.Brick:return .01*this.data.expedition.passiveEffectMultiplier.Value();case Ye.Equipment:return .02*this.data.expedition.passiveEffectMultiplier.Value();case Ye.Log:return .01*this.data.expedition.passiveEffectMultiplier.Value();case Ye.PetExp:return .2*this.data.expedition.passiveEffectMultiplier.Value()*this.data.expedition.fieldTrainingPassiveEffectMultiplier.Value();case Ye.PetRank:return .05*this.data.expedition.passiveEffectMultiplier.Value();case Ye.Shard:return .01*this.data.expedition.passiveEffectMultiplier.Value();case Ye.WalkDistance:return .05*this.data.expedition.passiveEffectMultiplier.Value();default:return 0}}EffectValue(){return this.passiveEffectValueIncrementPerLevel*this.level}RewardAmount(t,s,i){switch(this.kind){case Ye.Brick:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*s.rank)*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case Ye.Equipment:return 1200*(1+.1*this.level)*(1+.05*s.rank)*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case Ye.Log:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*s.rank)*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case Ye.PetExp:return 18e3*Math.pow(1.2,this.level)*(1+.1*t.TotalRank())*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*this.data.stats.MaxPetEXPGainAmongHeroes()*this.data.expedition.petExpGainMultiplier.Value()*t.expeditionCtrl.rewardMultiplier.Value();case Ye.PetRank:return 4*s.MaxTPGAmongHeroes()*Math.pow(1.1,this.level)*(1+.1*s.rank)*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*this.data.expedition.rewardMultiplier.Value();case Ye.Shard:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*s.rank)*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case Ye.WalkDistance:return 1800*s.globalInfo.MoveSpeed(0,0,!1,v.Warrior)*Math.pow(1.2,this.level)*(1+.1*t.TotalRank())*Math.max(.55478474,Math.pow(i,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();default:return 0}}NameString(){return Pe.ExpeditionGlobalInformationString(this).name}EffectValueString(){return Pe.ExpeditionGlobalInformationString(this).passive}RewardString(t,s,i){switch(this.kind){case Ye.Brick:return`${h.tDigit(this.RewardAmount(t,s,i))} ${Pe.TownMaterialNameString(bt.townMatBricks[s.species])}`;case Ye.Log:return`${h.tDigit(this.RewardAmount(t,s,i))} ${Pe.TownMaterialNameString(bt.townMatLogs[s.species])}`;case Ye.Shard:return`${h.tDigit(this.RewardAmount(t,s,i))} ${Pe.TownMaterialNameString(bt.townMatShards[s.species])}`;case Ye.Equipment:return`Proficiency Scroll [${h.secondsToDhms(this.RewardAmount(t,s,i),!1)}]`;case Ye.PetExp:return`${h.tDigit(this.RewardAmount(t,s,i))}  Pet EXP`;case Ye.PetRank:return`${h.tDigit(this.RewardAmount(t,s,i))} ${_t[s.color]} ${Z[s.species]}'s  Taming Point`;case Ye.WalkDistance:return`${h.tDigit(this.RewardAmount(t,s,i))}  meters Walked Distance`;default:return"not implemented"}}}class W1{constructor(t,s){o(this,"expedition");o(this,"slotId");this.expedition=t,this.slotId=s}get id(){return this.expedition.id}get species(){return this.expedition.expeditionCtrl.data.source.expeditionPetSpecies[this.slotId+5*this.id]}get color(){return this.expedition.expeditionCtrl.data.source.expeditionPetColors[this.slotId+5*this.id]}get isSet(){return this.expedition.expeditionCtrl.data.source.expeditionPetIsSet[this.slotId+5*this.id]}get pet(){return this.expedition.expeditionCtrl.data.monster.GlobalInformation(this.species,this.color).pet}}var Cr,Wi;class O1{constructor(t,s){o(this,"expeditionCtrl");o(this,"timeHours",[.5,1,2,4,8,16,24,48,72,120,240,480,960,1920,3840]);o(this,"id");o(this,"pets",Array(3));o(this,"tempDistance");Kt(this,Cr,void 0);Kt(this,Wi,void 0);this.expeditionCtrl=t,this.id=s;for(let i=0;i<this.pets.length;i++)this.pets[i]=new W1(this,i)}get kind(){return this.expeditionCtrl.data.source.expeditionKinds[this.id]}set kind(t){this.expeditionCtrl.data.source.expeditionKinds[this.id]=t}get timeId(){return this.expeditionCtrl.data.source.expeditionTimeId[this.id]}set timeId(t){this.expeditionCtrl.data.source.expeditionTimeId[this.id]=t>=this.timeHours.length?0:t<0?this.timeHours.length-1:t}get globalInfo(){return this.expeditionCtrl.GlobalInfo(this.kind)}Start(){}PetNum(){let t=0;for(let s=0;s<this.pets.length;s++)this.pets[s].isSet&&t++;return t}TotalRank(){let t=0;for(let s=0;s<this.pets.length;s++)this.pets[s].isSet&&(t+=this.pets[s].pet.rank);return t}TotalLevel(){let t=0;for(let s=0;s<this.pets.length;s++)this.pets[s].isSet&&(t+=this.pets[s].pet.level);return t}TimeSpeed(){return(1+this.TotalLevel()*.001)*this.TimeSpeedModifier()}TimeSpeedModifier(){return this.expeditionCtrl.speedMultiplier.Value()*this.globalInfo.SpeedModifierByExpeditionLevel()}MostEffective(){let t=0,s=0;if(R(this,Cr)==this.TimeSpeed()&&R(this,Wi)!=null)return R(this,Wi);for(let c=0;c<this.timeHours.length;c++){let l=0,M=0;l+=this.globalInfo.RewardAmount(this,this.pets[0].pet,this.timeHours[c]),l+=this.globalInfo.RewardAmount(this,this.pets[1].pet,this.timeHours[c]),l+=this.globalInfo.RewardAmount(this,this.pets[2].pet,this.timeHours[c]);let b=this.timeHours[c]*3600;this.TimeSpeed()>0&&(b*=1/this.TimeSpeed()),b=Math.max(this.minTime,b),M=l/b,M>s&&(s=M,t=c)}const i=this.timeHours[t]>=8760?`${this.timeHours[t]/8760}y`:`${this.timeHours[t]}h`;return es(this,Cr,this.TimeSpeed()),es(this,Wi,i),i}get timeHour(){return this.timeHours[this.timeId]}set timeHour(t){this.timeId=t}get minTime(){return this.expeditionCtrl.lowerLimitTime.Value()}RequiredTimesec(){let t=this.timeHours[this.timeId]*3600;return this.TimeSpeed()>0&&(t*=1/this.TimeSpeed()),Math.max(this.minTime,t)}GetExpeditionExp(){return this.globalInfo.GetExp(this.PetNum())}}Cr=new WeakMap,Wi=new WeakMap;class $1{constructor(t){o(this,"data");o(this,"globalInfoList",[]);o(this,"expeditions",Array(20));o(this,"expGainMultiplier");o(this,"petExpGainMultiplier");o(this,"speedMultiplier");o(this,"rewardMultiplier");o(this,"passiveEffectMultiplier");o(this,"walkedDistanceGainMultiplier");o(this,"unlockedExpeditionSlotNum");o(this,"fieldTrainingPassiveEffectMultiplier");o(this,"lowerLimitTime");o(this,"rewardModifierPerHour");this.data=t,this.lowerLimitTime=new H(new u(n.Base,r.Add,()=>900),()=>900,()=>300),this.rewardModifierPerHour=new H(new u(n.Base,r.Add,()=>.85),()=>.95,()=>.85),this.petExpGainMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.expGainMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.rewardMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.passiveEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.walkedDistanceGainMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.unlockedExpeditionSlotNum=new H(new u(n.Base,r.Add,()=>1)),this.unlockedExpeditionSlotNum.numberType=nt.Normal,this.fieldTrainingPassiveEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.speedMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.globalInfoList.push(new Di(this.data,Ye.Brick)),this.globalInfoList.push(new Di(this.data,Ye.Log)),this.globalInfoList.push(new Di(this.data,Ye.Shard)),this.globalInfoList.push(new Di(this.data,Ye.PetRank)),this.globalInfoList.push(new Di(this.data,Ye.Equipment)),this.globalInfoList.push(new Di(this.data,Ye.PetExp)),this.globalInfoList.push(new Di(this.data,Ye.WalkDistance));for(let s=0;s<this.expeditions.length;s++)this.expeditions[s]=new O1(this,s)}TotalLevel(){return this.data.source.expeditionLevels.reduce((t,s)=>t+s,0)}Start(){this.SetMilestone(),this.globalInfoList.forEach(t=>{t.SetEffect()})}TotalExp(){let t=0;for(let s=0;s<this.globalInfoList.length;s++)t+=this.globalInfoList[s].TotalExp();return t}SetMilestone(){const t=this.TotalLevel();t>=5&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=15&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=30&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=125&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=175&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=200&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=225&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=250&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=275&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9)),t>=300&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.1)),t>=325&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=350&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=375&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>90)),t>=400&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=425&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>.25)),t>=450&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=475&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>900)),t>=500&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.2)),t>=525&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>.5)),t>=550&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.5)),t>=575&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e3)),t>=600&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.5)),t>=625&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>.75)),t>=650&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=675&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e4)),t>=700&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.3)),t>=725&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=750&&this.data.monster.petRankCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>50)),t>=775&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e5)),t>=800&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>100)),t>=825&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>2)),t>=850&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=875&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e6)),t>=900&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.75)),t>=925&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>3.5)),t>=950&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.75)),t>=975&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e7)),t>=1e3&&this.data.resource.goldCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>9)),t>=1050&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=1100&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>5)),t>=1150&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.4)),t>=1200&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e8)),t>=1250&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=1300&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>7.5)),t>=1350&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1)),t>=1400&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1)),t>=1450&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=1500&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.5)),t>=1550&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e9)),t>=1600&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>12)),t>=1650&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1.25)),t>=1700&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1.25)),t>=1750&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=1800&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.6)),t>=1850&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e10)),t>=1900&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>20)),t>=1950&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1.5)),t>=2e3&&this.data.resource.goldCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>90)),t>=2100&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1.5)),t>=2200&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=2300&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.7)),t>=2400&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e11)),t>=2500&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>1)),t>=2600&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>40)),t>=2700&&this.data.monster.petRankCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>50)),t>=2800&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1.75)),t>=2900&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>1.75)),t>=3e3&&this.data.resource.goldCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>900)),t>=3100&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>100)),t>=3200&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.25)),t>=3300&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Mul,()=>.8)),t>=3400&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,r.Add,()=>9e12))}GlobalInfo(t){return this.globalInfoList[t]}}var go=(e=>(e[e.SuperMining=0]="SuperMining",e[e.SuperSynthesizing=1]="SuperSynthesizing",e[e.SuperGathering=2]="SuperGathering",e[e.SuperTraining=3]="SuperTraining",e[e.SuperTrapping=4]="SuperTrapping",e[e.SuperBanking=5]="SuperBanking",e[e.SuperFinancing=6]="SuperFinancing",e[e.Finding=7]="Finding",e[e.Racing=8]="Racing",e[e.Socializing=9]="Socializing",e[e.Ritualizing=10]="Ritualizing",e[e.Artificing=11]="Artificing",e[e.Haggling=12]="Haggling",e))(go||{});const Ba={maxGuildLevel:300,maxGuildLevelCap:500,FameGainPerHeroGrade:e=>e>=153?1010+10*(e-153):5+Math.floor(5*Math.pow(2,e/20)),ExpGainPerHeroLevel:e=>200+e*5,RequiredExp:e=>Math.floor((500*(e+1)+50*Math.pow(e,2)+500*Math.pow(e/5,3)+2e3*Math.pow(e/10,6)+25e3*Math.pow(e/20,9)+3e5*Math.pow(e/30,12))*Math.pow(10,Math.max(0,e-300)/25)),MemberUnlockLevel:e=>{switch(e){case v.Warrior:return 0;case v.Wizard:return 5;case v.Angel:return 10;case v.Thief:return 30;case v.Archer:return 45;case v.Tamer:return 60;default:return 100}},AbilityEffectValue:(e,t)=>{switch(e){case It.StoneGain:return Math.pow(2,t)-1;case It.CrystalGain:return Math.pow(2,t)-1;case It.LeafGain:return Math.pow(2,t)-1;case It.GuildExpGain:return t*.1;case It.EquipmentInventory:return 3*t;case It.EnchantInventory:return t;case It.PotionInventory:return 2*t;case It.MysteriousWater:return .1*t;case It.SkillProficiency:return .1*t;case It.GlobalSkillSlot:return t;case It.GoldCap:return .1*t;case It.GoldGain:return .1*t;case It.Trapping:return .1*t;case It.UpgradeCost:return .05*t;case It.PhysicalAbsorption:return .01*t;case It.MagicalAbsoption:return .01*t;case It.ExpGain:return .1*t;case It.EquipmentProficiency:return .2*t;case It.MaterialDrop:return t;case It.NitroCap:return 1e3*t;default:return 0}}};class z1{constructor(t){o(this,"data");o(this,"guildLevelCap");o(this,"timecountSec");o(this,"activableNum");o(this,"level");o(this,"exp");o(this,"expRequirementReduction");o(this,"members");o(this,"abilityPointLeft");o(this,"abilities");o(this,"superAbilityList",[]);o(this,"grade");o(this,"fame");o(this,"superAbilityPointLeft");this.data=t,this.expRequirementReduction=new H(new u(n.Base,r.Add,()=>0),()=>.99,()=>0),this.guildLevelCap=new H(new u(n.Base,r.Add,()=>Ba.maxGuildLevel)),this.activableNum=new H(new u(n.Base,r.Add,()=>3))}Start(){this.data.nitro.nitroCap.RegisterMultiplier(new u(n.GuildSuperAbility,r.Mul,()=>.05*this.data.source.guildSuperAbilityLevels[go.Racing]))}Member(t){return this.members[t]}Ability(t){this.abilities[t]}Level(){return this.level}MaxLevelReached(){return globalThis.data}RequiredExp(t=0){return t==0?this.RequiredExp(this.Level()):Ba.RequiredExp(t)*(1-this.expRequirementReduction.Value())}RequiredFame(t=0){return t==0?this.RequiredFame(this.grade):Ba.RequiredExp(t)}}const La={equipMaxDropNum:30,resourceMaxDropNum:30,materialMaxDropNum:30,chestMaxDropNum:10,equipPartSlotId:24,equipmentInventorySlotNum:520,equipmentLoadoutSlotNumPerHero:720,equipInventorySlotId:4840,equipSlotsPerHero:72,allEquipmentSlotId:5272,enchantSlotId:130,potionSlotId:260,equipPotionSlotId:6,allPotionSlotId:296};class Ri{constructor(t,s){o(this,"equipment");o(this,"kind");this.equipment=t,this.kind=s}get effectValue(){switch(this.kind){case Le.ReduceRequiredHeroLevel:return this.equipment.data.source.equipment1stForgeValues[this.equipment.id];case Le.ReduceRequiredAbility:return this.equipment.data.source.equipment2ndForgeValues[this.equipment.id];case Le.IncreaseProficiencyGain:return this.equipment.data.source.equipment3rdForgeValues[this.equipment.id];case Le.IncreaseEffect:return this.equipment.data.source.equipment4thForgeValues[this.equipment.id];case Le.PurifyCurseEffect:return this.equipment.data.source.equipment5thForgeValues[this.equipment.id];case Le.IncreaseEffectIncrement:return this.equipment.data.source.equipment6thForgeValues[this.equipment.id];case Le.EqLevel:return this.equipment.data.source.equipment7thForgeValues[this.equipment.id];default:return 0}}SetEffectValue(t){switch(this.kind){case Le.ReduceRequiredHeroLevel:this.equipment.data.source.equipment1stForgeValues[this.equipment.id]=t;break;case Le.ReduceRequiredAbility:this.equipment.data.source.equipment2ndForgeValues[this.equipment.id]=t;break;case Le.IncreaseProficiencyGain:this.equipment.data.source.equipment3rdForgeValues[this.equipment.id]=t;break;case Le.IncreaseEffect:this.equipment.data.source.equipment4thForgeValues[this.equipment.id]=t;break;case Le.PurifyCurseEffect:this.equipment.data.source.equipment5thForgeValues[this.equipment.id]=t;break;case Le.IncreaseEffectIncrement:this.equipment.data.source.equipment6thForgeValues[this.equipment.id]=t;break;case Le.EqLevel:this.equipment.data.source.equipment7thForgeValues[this.equipment.id]=t;break}}set effectValue(t){this.equipment.ForgedSlotNum()>=4&&t>0&&this.effectValue==0||this.SetEffectValue(t)}IsForged(){return this.effectValue>0}EffectValue(){return Math.min(this.effectValue,this.equipment.ForgeEffectMaxValue(this.kind,this.equipment.globalInfo.isArtifact))}stringKind(){switch(this.kind){case Le.EqLevel:case Le.ReduceRequiredHeroLevel:case Le.ReduceRequiredAbility:return"normal";case Le.IncreaseEffect:case Le.IncreaseEffectIncrement:case Le.IncreaseProficiencyGain:case Le.PurifyCurseEffect:return"percent";default:return"normal"}}EffectString(){return Pe.ForgeEffectString(this.kind,this.effectValue,this.equipment.ForgeEffectMaxValue(this.kind,this.equipment.globalInfo.isArtifact),this.equipment.globalInfo.isArtifact)}Copy(){return{kind:this.kind,effectValue:this.effectValue}}Paste(t){this.kind=t.kind,this.effectValue=t.effectValue}}class J1{constructor(t,s,i){o(this,"equipment");o(this,"createId");o(this,"optionKindDictionary",[]);o(this,"optionKindAfterDictionary",[]);o(this,"optionLotteryDictionary",[]);o(this,"optionLotteryAfterDictionary",[]);o(this,"optionLottery");o(this,"optionId");this.equipment=t,this.createId=s,this.optionId=i}CanEnchant(){return this.kind==a.Nothing}get kind(){switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionEffectKinds[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionEffectKinds[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionEffectKinds[this.createId];case 3:return this.equipment.data.source.equipment4thOptionEffectKinds[this.createId];case 4:return this.equipment.data.source.equipment5thOptionEffectKinds[this.createId];case 5:return this.equipment.data.source.equipment6thOptionEffectKinds[this.createId];case 6:return this.equipment.data.source.equipment7thOptionEffectKinds[this.createId];default:return 0}}SetKind(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionEffectKinds[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionEffectKinds[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionEffectKinds[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionEffectKinds[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionEffectKinds[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionEffectKinds[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionEffectKinds[this.createId]=t;break}}set kind(t){this.equipment.IsEffectRegisteredClear(),this.SetKind(t),this.equipment.Start(),this.level=this.MaxLevel()}get effectValue(){if(this.optionId>=this.equipment.totalOptionNum.Value())return 0;switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionEffectValues[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionEffectValues[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionEffectValues[this.createId];case 3:return this.equipment.data.source.equipment4thOptionEffectValues[this.createId];case 4:return this.equipment.data.source.equipment5thOptionEffectValues[this.createId];case 5:return this.equipment.data.source.equipment6thOptionEffectValues[this.createId];case 6:return this.equipment.data.source.equipment7thOptionEffectValues[this.createId];default:return 0}}SetEffectValue(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionEffectValues[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionEffectValues[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionEffectValues[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionEffectValues[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionEffectValues[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionEffectValues[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionEffectValues[this.createId]=t;break}}set effectValue(t){t=Math.min(t,jt.EffectCalculation(this.kind,this.level+1)),this.SetEffectValue(t)}get level(){switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionLevels[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionLevels[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionLevels[this.createId];case 3:return this.equipment.data.source.equipment4thOptionLevels[this.createId];case 4:return this.equipment.data.source.equipment5thOptionLevels[this.createId];case 5:return this.equipment.data.source.equipment6thOptionLevels[this.createId];case 6:return this.equipment.data.source.equipment7thOptionLevels[this.createId];default:return 0}}SetLevel(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionLevels[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionLevels[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionLevels[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionLevels[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionLevels[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionLevels[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionLevels[this.createId]=t;break}}set level(t){t=Math.min(t,jt.MaxLevel(this.kind)),this.SetLevel(t),this.effectValue=this.MaxEffectValue()}get isAfter(){return jt.IsAfter(this.kind)}MaxLevel(){return jt.MaxLevel(this.kind)}MaxEffectValue(){return jt.EffectCalculation(this.kind,this.level+1)}MinEffectValue(){return jt.EffectCalculation(this.kind,this.level)}RequiredLevelIncrement(){return jt.RequiredLevelIncrement(this.kind,this.level)}get valueKind(){switch(this.kind){case a.ATKAdder:case a.ATKAfter:case a.AllSkillLevel:case a.HPAfter:case a.HPAdder:case a.DEFAdder:case a.DEFAfter:case a.MATKAdder:case a.MATKAfter:case a.MDEFAdder:case a.MDEFAfter:case a.MPAdder:case a.MPAfter:return"normal";default:return"percent"}}Copy(){return{kind:this.kind,effectValue:this.effectValue,level:this.level}}Paste(t){this.kind=t.kind,this.level=t.level,this.effectValue=t.effectValue,this.equipment.Start()}}function X1(e,t,s,i,c=null){switch(this.activateCondition=()=>c==null||c(),s){case a.HPAdder:return e.stats.BasicStats(t,m.HP).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MPAdder:return e.stats.BasicStats(t,m.MP).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ATKAdder:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MATKAdder:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.DEFAdder:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MDEFAdder:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.SPDAdder:return e.stats.BasicStats(t,m.SPD).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.HPMultiplier:return e.stats.BasicStats(t,m.HP).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.MPMultiplier:return e.stats.BasicStats(t,m.MP).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.ATKMultiplier:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.MATKMultiplier:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.DEFMultiplier:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.MDEFMultiplier:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.ATKPropotion:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new u(n.Equipment,r.Add,()=>e.stats.Level(t)*this.EffectValue(i(),t),this.activateCondition));case a.MATKPropotion:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new u(n.Equipment,r.Add,()=>e.stats.Level(t)*this.EffectValue(i(),t),this.activateCondition));case a.DEFPropotion:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new u(n.Equipment,r.Add,()=>e.stats.Level(t)*this.EffectValue(i(),t),this.activateCondition));case a.MDEFPropotion:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new u(n.Equipment,r.Add,()=>e.stats.Level(t)*this.EffectValue(i(),t),this.activateCondition));case a.FireResistance:return e.stats.ElementResistance(t,B.Fire).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.IceResistance:return e.stats.ElementResistance(t,B.Ice).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThunderResistance:return e.stats.ElementResistance(t,B.Thunder).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.LightResistance:return e.stats.ElementResistance(t,B.Light).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.DarkResistance:return e.stats.ElementResistance(t,B.Dark).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalAbsorption:return e.stats.ElementAbsorption(t,B.Physical).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.FireAbsorption:return e.stats.ElementAbsorption(t,B.Fire).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.IceAbsorption:return e.stats.ElementAbsorption(t,B.Ice).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThunderAbsorption:return e.stats.ElementAbsorption(t,B.Thunder).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.LightAbsorption:return e.stats.ElementAbsorption(t,B.Light).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.DarkAbsorption:return e.stats.ElementAbsorption(t,B.Dark).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.DebuffResistance:return e.stats.HeroStats(t,D.DebuffRes).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.EquipmentDropChance:return e.stats.HeroStats(t,D.EquipmentDropChance).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.SlimeDropChance:return e.monster.speciesMaterialDropChance[0].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MagicSlimeDropChance:return e.monster.speciesMaterialDropChance[1].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.SpiderDropChance:return e.monster.speciesMaterialDropChance[2].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.BatDropChance:return e.monster.speciesMaterialDropChance[3].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.FairyDropChance:return e.monster.speciesMaterialDropChance[4].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.FoxDropChance:return e.monster.speciesMaterialDropChance[5].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.DevilFishDropChance:return e.monster.speciesMaterialDropChance[6].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TreantDropChance:return e.monster.speciesMaterialDropChance[7].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.FlameTigerDropChance:return e.monster.speciesMaterialDropChance[8].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.UnicornDropChance:return e.monster.speciesMaterialDropChance[9].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ColorMaterialDropChance:return e.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalCritical:return e.stats.HeroStats(t,D.PhysCritChance).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MagicalCritical:return e.stats.HeroStats(t,D.MagCritChance).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.EXPGain:return e.stats.HeroStats(t,D.ExpGain).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.SkillProficiency:return e.stats.HeroStats(t,D.SkillProficiencyGain).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.EquipmentProficiency:return e.stats.HeroStats(t,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MoveSpeedMultiplier:return e.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.GoldGain:return e.stats.GoldGain().RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.StoneGain:return e.stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.CrystalGain:return e.stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.LeafGain:return e.stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.WarriorSkillLevel:return e.skill.skillLevelBonus[0].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.WizardSkillLevel:return e.skill.skillLevelBonus[1].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.AngelSkillLevel:return e.skill.skillLevelBonus[2].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThiefSkillLevel:return e.skill.skillLevelBonus[3].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ArcherSkillLevel:return e.skill.skillLevelBonus[4].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TamerSkillLevel:return e.skill.skillLevelBonus[5].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.AllSkillLevel:return[e.skill.skillLevelBonus[0].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition)),e.skill.skillLevelBonus[1].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition)),e.skill.skillLevelBonus[2].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition)),e.skill.skillLevelBonus[3].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition)),e.skill.skillLevelBonus[4].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition)),e.skill.skillLevelBonus[5].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition))];case a.SlimeKnowledge:return e.stats.MonsterDamage(t,Z.Slime).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.MagicSlimeKnowledge:return e.stats.MonsterDamage(t,Z.MagicSlime).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.SpiderKnowledge:return e.stats.MonsterDamage(t,Z.Spider).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.BatKnowledge:return e.stats.MonsterDamage(t,Z.Bat).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.FairyKnowledge:return e.stats.MonsterDamage(t,Z.Fairy).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.FoxKnowledge:return e.stats.MonsterDamage(t,Z.Fox).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.DevilFishKnowledge:return e.stats.MonsterDamage(t,Z.DevilFish).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.TreantKnowledge:return e.stats.MonsterDamage(t,Z.Treant).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.FlameTigerKnowledge:return e.stats.MonsterDamage(t,Z.FlameTiger).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.UnicornKnowledge:return e.stats.MonsterDamage(t,Z.Unicorn).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalDamage:return e.stats.ElementDamage(t,B.Physical).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.FireDamage:return e.stats.ElementDamage(t,B.Fire).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.IceDamage:return e.stats.ElementDamage(t,B.Ice).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThunderDamage:return e.stats.ElementDamage(t,B.Thunder).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.LightDamage:return e.stats.ElementDamage(t,B.Light).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.DarkDamage:return e.stats.ElementDamage(t,B.Dark).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.HpRegen:return e.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MpRegen:return e.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TamingPoint:return e.stats.HeroStats(t,D.TamingPointGain).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.WarriorSkillRange:return e.skill.skillRangeMultiplier[0].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.WizardSkillRange:return e.skill.skillRangeMultiplier[1].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.AngelSkillRange:return e.skill.skillRangeMultiplier[2].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThiefSkillRange:return e.skill.skillRangeMultiplier[3].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ArcherSkillRange:return e.skill.skillRangeMultiplier[4].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TamerSkillRange:return e.skill.skillRangeMultiplier[5].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TownMatGain:return e.town.townMaterialGainMultiplier[t].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TownMatAreaClearGain:return e.area.townMaterialGainBonusClass[t].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.RebirthPointGain1:return e.rebirth.Rebirth(t,0).rebirthPointGainFactor.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.RebirthPointGain2:return e.rebirth.Rebirth(t,1).rebirthPointGainFactor.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.RebirthPointGain3:return e.rebirth.Rebirth(t,2).rebirthPointGainFactor.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.CriticalDamage:return e.stats.HeroStats(t,D.CriticalDamage).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.BlessingEffect:return e.blessingInfo.effectMultipliers[t].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.MoveSpeedAdder:return e.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.PetEXPGain:return e.stats.Hero(t).petExpGainPerDefeat.RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.LoyaltyPointGain:return e.stats.Hero(t).loyaltyPoingGain.RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.CatalystDoubleCriticalChance:return e.alchemy.catalyst.catalystDoubleCriticalChance.RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.WarriorSkillEffectRange:return e.skill.skillEffectRangeMultiplier[0].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.WizardSkillEffectRange:return e.skill.skillEffectRangeMultiplier[1].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.AngelSkillEffectRange:return e.skill.skillEffectRangeMultiplier[2].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThiefSkillEffectRange:return e.skill.skillEffectRangeMultiplier[3].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.ArcherSkillEffectRange:return e.skill.skillEffectRangeMultiplier[4].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.TamerSkillEffectRange:return e.skill.skillEffectRangeMultiplier[5].RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.HpRegenMultiplier:return e.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i()*e.stats.BasicStats(t,m.HP).Value(),t),this.activateCondition));case a.MpRegenMultiplier:return e.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i()*e.stats.BasicStats(t,m.MP).Value(),t),this.activateCondition));case a.ArmoredFury:return e.stats.HeroStats(t,D.ArmoredFury).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.WardedFury:return e.stats.HeroStats(t,D.WardedFury).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.PetPhysicalCriticalChance:return e.stats.HeroStats(t,D.PetPhysCritChance).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.PetMagicalCriticalChance:return e.stats.HeroStats(t,D.PetMagCritChance).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.PetCriticalDamage:return e.stats.HeroStats(t,D.PetCriticalDamage).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.PetDebuffResistance:return e.stats.HeroStats(t,D.PetDebuffResistance).RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.StoneTownResearchPower:return e.town.researchPower[0].RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.CrystalTownResearchPower:return e.town.researchPower[1].RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.LeafTownResearchPower:return e.town.researchPower[2].RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.GuildEXPGain:return e.stats.heroes[t].guildExpGain.RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.EffectValue(i(),t),this.activateCondition));case a.SPDMultiplier:return e.stats.BasicStats(t,m.SPD).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.CriticalDamageMultiplier:return e.stats.HeroStats(t,D.CriticalDamage).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.SkillProficiencyMultiplier:return e.stats.HeroStats(t,D.SkillProficiencyGain).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.EquipmentProficiencyMultiplier:return e.stats.HeroStats(t,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.EXPGainMultiplier:return e.stats.HeroStats(t,D.ExpGain).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.GoldGainMultiplier:return e.stats.GoldGain().RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalDamageMultiplier:return e.stats.ElementDamage(t,B.Physical).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.FireDamageMultiplier:return e.stats.ElementDamage(t,B.Fire).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.IceDamageMultiplier:return e.stats.ElementDamage(t,B.Ice).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThunderDamageMultiplier:return e.stats.ElementDamage(t,B.Thunder).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.LightDamageMultiplier:return e.stats.ElementDamage(t,B.Light).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.DarkDamageMultiplier:return e.stats.ElementDamage(t,B.Dark).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.TamingPointMultiplier:return e.stats.HeroStats(t,D.TamingPointGain).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.PetEXPGainMultiplier:return e.stats.Hero(t).petExpGainPerDefeat.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.LoyaltyPointGainMultiplier:return e.stats.Hero(t).loyaltyPoingGain.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.BlessingEffectMultiplier:return e.blessingInfo.effectMultipliers[t].RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalCriticalMultiplier:return e.stats.HeroStats(t,D.PhysCritChance).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.MagicalCriticalMultiplier:return e.stats.HeroStats(t,D.MagCritChance).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.ChallengeBossKnowledge:return e.stats.MonsterDamage(t,Z.ChallengeBoss).RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.HPAfter:return e.stats.BasicStats(t,m.HP).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.MPAfter:return e.stats.BasicStats(t,m.MP).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.ATKAfter:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.MATKAfter:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.DEFAfter:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.MDEFAfter:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.SPDAfter:return e.stats.BasicStats(t,m.SPD).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.MoveSpeedAfter:return e.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalCriticalAfter:return e.stats.HeroStats(t,D.PhysCritChance).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.MagicalCriticalAfter:return e.stats.HeroStats(t,D.MagCritChance).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.CriticalDamageAfter:return e.stats.HeroStats(t,D.CriticalDamage).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.DebuffResistanceAfter:return e.stats.HeroStats(t,D.DebuffRes).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.PhysicalDamageAfter:return e.stats.ElementDamage(t,B.Physical).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.FireDamageAfter:return e.stats.ElementDamage(t,B.Fire).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.IceDamageAfter:return e.stats.ElementDamage(t,B.Ice).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThunderDamageAfter:return e.stats.ElementDamage(t,B.Thunder).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.LightDamageAfter:return e.stats.ElementDamage(t,B.Light).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.DarkDamageAfter:return e.stats.ElementDamage(t,B.Dark).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.FireResistanceAfter:return e.stats.ElementResistance(t,B.Fire).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.IceResistanceAfter:return e.stats.ElementResistance(t,B.Ice).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.ThunderResistanceAfter:return e.stats.ElementResistance(t,B.Thunder).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.LightResistanceAfter:return e.stats.ElementResistance(t,B.Light).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.DarkResistanceAfter:return e.stats.ElementResistance(t,B.Dark).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.SlimeKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Slime).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.MagicSlimeKnowledgeAfter:return e.stats.MonsterDamage(t,Z.MagicSlime).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.SpiderKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Spider).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.BatKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Bat).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.FairyKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Fairy).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.FoxKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Fox).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.DevilFishKnowledgeAfter:return e.stats.MonsterDamage(t,Z.DevilFish).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.TreantKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Treant).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.FlameTigerKnowledgeAfter:return e.stats.MonsterDamage(t,Z.FlameTiger).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.UnicornKnowledgeAfter:return e.stats.MonsterDamage(t,Z.Unicorn).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.ChallengeBossKnowledgeAfter:return e.stats.MonsterDamage(t,Z.ChallengeBoss).RegisterMultiplier(new u(n.Equipment,r.After,()=>this.EffectValue(i(),t),this.activateCondition));case a.SDDamageMultiplier:return e.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.SDDamageCutMultiplier:return e.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.FameGain:return e.superStats.Hero(t).fameGain.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.DungeonCoinGain:return e.sdg.dungeonCoinGain.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition));case a.ExtraAfterDamage:return e.stats.Hero(t).extraAfterDamage.RegisterMultiplier(new u(n.Equipment,r.Mul,()=>this.EffectValue(i(),t),this.activateCondition))}}class j1{constructor(t,s){o(this,"data");o(this,"isEffectRegistered",[]);o(this,"isMasteryEffectRegistered");o(this,"isOptionEffectRegistered",Array(N.HeroKind));o(this,"isReachedMax");o(this,"id");o(this,"slotId");o(this,"totalOptionNum");o(this,"optionEffects",Array(jt.maxOptionEffectNum));o(this,"forgeEffects",Array(jt.maxForgeEffectNum));o(this,"requiredLevel");o(this,"requiredGrade");o(this,"requiredLevelWithoutForge");o(this,"requiredGradeWithoutForge");o(this,"requiredAbilityPoint");o(this,"info");o(this,"activateCondition");o(this,"optionNum",4);o(this,"SetEffect",X1);this.data=t,this.id=this.data.source.equipmentId[s],this.slotId=s;for(let i=0;i<this.optionEffects.length;i++)this.optionEffects[i]=new J1(this,this.id,i);this.totalOptionNum=new H(new u(n.Base,r.Add,()=>this.optionNum)),this.totalOptionNum.RegisterMultiplier(new u(n.Equipment,r.Add,()=>this.globalInfo.levelMaxEffects[3].EffectValue(0),()=>this.globalInfo.levels[3].isMaxed)),this.forgeEffects[0]=new Ri(this,Le.ReduceRequiredHeroLevel),this.forgeEffects[1]=new Ri(this,Le.ReduceRequiredAbility),this.forgeEffects[2]=new Ri(this,Le.IncreaseProficiencyGain),this.forgeEffects[3]=new Ri(this,Le.IncreaseEffect),this.forgeEffects[4]=new Ri(this,Le.PurifyCurseEffect),this.forgeEffects[5]=new Ri(this,Le.IncreaseEffectIncrement),this.forgeEffects[6]=new Ri(this,Le.EqLevel)}get globalInfo(){return this.data.equipment.globalInformations[this.kind]}get level(){return this.globalInfo.TotalLevel()}get kind(){return this.data.source.equipmentKinds[this.id]}get setKind(){return this.globalInfo.setKind}set kind(t){(jt.Part(t)==this.slotPart||t==g.Nothing)&&(this.data.source.equipmentKinds[this.id]=t),this.Start()}get heroKind(){const t=this.slotId;if(t>=520&&t<1240)return v.Warrior;if(t>=1240&&t<1960)return v.Wizard;if(t>=1960&&t<2680)return v.Angel;if(t>=2680&&t<3400)return v.Thief;if(t>=3400&&t<4120)return v.Archer;if(t>=4120&&t<4840)return v.Tamer}get loadout(){return Math.floor((this.slotId-(520+this.heroKind*720))/72)}get loadoutSlot(){return this.slotId-(520+this.heroKind*720+this.loadout*72)}get slotPart(){return this.loadoutSlot<24?F.Weapon:this.loadoutSlot>=24&&this.loadoutSlot<48?F.Armor:F.Jewelry}Start(){this.CalculateRequiredLevel(),this.SetAgainAllEffect()}IsSkillLevelEnchant(t){return t==a.WarriorSkillLevel||t==a.WizardSkillLevel||t==a.AngelSkillLevel||t==a.ThiefSkillLevel||t==a.ArcherSkillLevel||t==a.TamerSkillLevel||t==a.AllSkillLevel}Forge(t,s,i){this.CanForge(t,i)}CanForge(t,s){return!s&&this.globalInfo.isArtifact||s&&!this.globalInfo.isArtifact?!1:this.forgeEffects[t].IsForged()?this.ForgeEffectMaxValueLeft(t,s)>0:this.AvailableForgeSlotNum()>0}ForgeEffectMaxValueLeft(t,s){return this.ForgeEffectMaxValue(t,s)-this.forgeEffects[t].effectValue}ForgeEffectValueLeft(t,s,i){return this.CanForge(t,i)?Math.max(0,s-this.ForgeEffectMaxValueLeft(t,i)):0}ForgeEffectMaxValue(t,s){let i=jt.MaxEffectValue(t);switch(t){case Le.ReduceRequiredHeroLevel:i=s?this.RequiredLevel(!0,!0):this.RequiredLevel(!0,!1);break;case Le.ReduceRequiredAbility:i=0;for(let c=1;c<this.globalInfo.requiredAbilities.length;c++)s?this.globalInfo.requiredAbilities[c].isSuperAbility&&(i=Math.max(i,this.globalInfo.requiredAbilities[c].requiredValue)):this.globalInfo.requiredAbilities[c].isSuperAbility||(i=Math.max(i,this.globalInfo.requiredAbilities[c].requiredValue));break;case Le.IncreaseEffect:i+=this.data.equipment.forgeEffectCapAdderEQEffect.Value();break;case Le.IncreaseEffectIncrement:i+=this.data.equipment.forgeEffectCapAdderEffectIncrement.Value();break;case Le.EqLevel:i+=this.data.equipment.forgeEffectCapAdderEQLevel.Value();break}return i}ForgedSlotNum(){let t=0;for(let s=0;s<this.forgeEffects.length;s++)this.forgeEffects[s].IsForged()&&t++;return t}AvailableForgeSlotNum(){return this.globalInfo.ForgeSlotNum()-this.ForgedSlotNum()}IsEffectRegisteredClear(){this.isEffectRegistered.forEach(t=>{t()}),this.isEffectRegistered=[]}SetAgainAllEffect(){this.IsEffectRegisteredClear(),this.IsEquipped()&&(this.SetEffectBase(this.heroKind),this.SetMasteryEffect(this.heroKind))}IsEquipped(){if(this.slotId<520||this.slotId>=4840||this.loadout!=this.data.source.equipmentLoadoutIds[this.heroKind]||!this.data.source.isActiveBattle[this.heroKind]||this.kind==0)return!1;if(this.loadoutSlot<24)return this.data.inventory.equipWeaponUnlockedNum[this.heroKind].Value()>this.loadoutSlot;if(this.loadoutSlot>=24&&this.loadoutSlot<48)return this.data.inventory.equipArmorUnlockedNum[this.heroKind].Value()>this.loadoutSlot-24;if(this.loadoutSlot>=48)return this.data.inventory.equipJewelryUnlockedNum[this.heroKind].Value()>this.loadoutSlot-48}isDisabled(){if(this.slotId<520||this.slotId>=4840)return!0;if(this.data.source.isSuperDungeon&&this.heroKind==this.data.source.currentHero)switch(this.slotPart){case F.Weapon:return this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.Value()<=this.loadoutSlot;case F.Armor:return this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.Value()<=this.loadoutSlot-24;case F.Jewelry:return this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.Value()<=this.loadoutSlot-48;default:return!0}else switch(this.slotPart){case F.Weapon:return this.data.inventory.equipWeaponUnlockedNum[this.heroKind].Value()<=this.loadoutSlot;case F.Armor:return this.data.inventory.equipArmorUnlockedNum[this.heroKind].Value()<=this.loadoutSlot-24;case F.Jewelry:return this.data.inventory.equipJewelryUnlockedNum[this.heroKind].Value()<=this.loadoutSlot-48;default:return!0}}SetMasteryEffect(t){if(this.kind!=g.Nothing)for(let s=0;s<this.globalInfo.levelMaxEffects.length;s++){if(this.globalInfo.levelMaxEffects[s].kind==0)continue;const i=this.SetEffect(this.data,t,this.globalInfo.levelMaxEffects[s].kind,()=>this.globalInfo.levelMaxEffects[s].EffectValue(0),()=>this.globalInfo.levels[s].isMaxed);Array.isArray(i)?this.isEffectRegistered.push(...i):this.isEffectRegistered.push(i)}}SetEffectBase(t){if(this.kind!=g.Nothing){for(let s=0;s<this.globalInfo.effects.length;s++){const i=this.SetEffect(this.data,t,this.globalInfo.effects[s].kind,()=>this.OriginalEffectValue(s),()=>!this.isDisabled());Array.isArray(i)?this.isEffectRegistered.push(...i):this.isEffectRegistered.push(i)}for(let s=0;s<this.optionEffects.length;s++)if(this.optionEffects[s].kind!=0){const i=this.SetEffect(this.data,t,this.optionEffects[s].kind,()=>this.optionEffects[s].effectValue,()=>!this.isDisabled());Array.isArray(i)?this.isEffectRegistered.push(...i):this.isEffectRegistered.push(i)}}}OriginalEffectValue(t){return this.globalInfo.effects[t].EffectValue(this.Level(),1+this.forgeEffects[5].EffectValue())}OriginalEffectIncrementPerLevel(t){return this.globalInfo.effects[t].baseValue()*(1+this.forgeEffects[5].EffectValue())}Level(){return this.globalInfo.TotalLevel()+this.forgeEffects[6].EffectValue()}HasEnchantedEffect(){if(this.optionNum>0)return!0;if(this.totalOptionNum.Value()<1)return!1;for(let t=0;t<this.optionEffects.length;t++)if(this.optionEffects[t].kind!=a.Nothing)return!0;return!1}RequiredLevel(t,s){return s?t?this.requiredGradeWithoutForge:this.requiredGrade:t?this.requiredLevelWithoutForge:this.requiredLevel}get isSetItem(){return this.globalInfo.setKind!=0&&this.globalInfo.setKind!=null}EffectMultiplierFromSetItem(t){if(!this.isSetItem||this.isSetItem==null)return 1;switch(this.data.inventory.SetItemEquippedNum(this.globalInfo.setKind,t)){case 2:return 1.05;case 3:return 1.1;case 4:return 1.15;case 5:return 1.2;case 6:return 1.25;case 7:return 1.35;case 8:return 1.5;default:return 1}}EffectValue(t,s){let i=t*this.EffectMultiplierFromSetItem(s)*(1+this.forgeEffects[3].EffectValue());return this.globalInfo.isArtifact?this.data.equipment.effectMultiplierModifierForArtifact.Value()>0&&(i*=this.data.equipment.ArtifactEffectMultiplier()):i*=this.data.equipment.EffectMultiplier(),i<0&&(i*=Math.max(0,1-this.forgeEffects[4].EffectValue())),i}CalculateRequiredLevel(){let t=0;this.globalInfo.isArtifact&&(t=this.globalInfo.requiredAbilities[0].requiredValue);for(let i=0;i<this.optionEffects.length;i++)this.optionEffects[i].isAfter&&(t+=this.optionEffects[i].RequiredLevelIncrement());this.requiredGradeWithoutForge=Math.max(0,t),this.globalInfo.isArtifact&&(t-=this.forgeEffects[0].EffectValue()),this.requiredGrade=Math.max(0,t);let s=0;this.globalInfo.isArtifact||(s=this.globalInfo.requiredAbilities[0].requiredValue);for(let i=0;i<this.optionEffects.length;i++)this.optionEffects[i].isAfter||(s+=this.optionEffects[i].RequiredLevelIncrement());this.requiredLevelWithoutForge=Math.max(0,s),this.globalInfo.isArtifact||(s-=this.forgeEffects[0].EffectValue()),this.requiredLevel=Math.max(0,s)}Copy(t){switch(t){case yt.OptionEffect:return this.optionEffects.map(s=>s.Copy());case yt.ForgeEffects:return this.forgeEffects.map(s=>s.Copy());case yt.Equipment:return{kind:this.kind,optionEffects:this.optionEffects.map(s=>s.Copy()),forgeEffects:this.forgeEffects.map(s=>s.Copy())};default:return null}}Paste(t,s){switch(t){case yt.Equipment:this.optionEffects.map((i,c)=>i.Paste(s.optionEffects[c])),this.kind=s.kind,this.forgeEffects.map((i,c)=>i.Paste(s.forgeEffects[c])),this.data.inventory.UpdateSetItemEquippedNumHero(this.heroKind);break;case yt.OptionEffect:this.optionEffects.map((i,c)=>i.Paste(s[c]));break;case yt.ForgeEffects:this.forgeEffects.map((i,c)=>i.Paste(s[c]));break}}SlotString(){if(this.slotId<520)return`Inventory tab ${Math.floor(this.slotId/52)+1} position ${this.slotId}`;const t=this.slotPart==F.Weapon?this.loadoutSlot:this.slotPart==F.Armor?this.loadoutSlot-24:this.loadoutSlot-48;return`${v[this.heroKind]} Loadout ${this.loadout+1} - ${F[this.slotPart]} position ${t+1}`}}class Y1{constructor(t,s){o(this,"data");o(this,"slotId");o(this,"effectRegister",[]);this.data=t,this.slotId=s}get id(){return this.data.source.potionId[this.slotId]}get kind(){return this.data.source.potionKinds[this.id]}set kind(t){this.data.source.potionKinds[this.id]=t,this.Start()}get slot(){return this.slotId<260?0:(this.slotId-260-this.heroKind*6)%6}get stack(){return this.data.source.potionStackNums[this.id]}set stack(t){this.data.source.potionStackNums[this.id]=Math.min(30,t)}get level(){return this.data.potion.GlobalInfo(this.kind).level}get type(){return this.data.potion.GlobalInfo(this.kind).type}get heroKind(){if(this.slotId>=260&&this.slotId<266)return v.Warrior;if(this.slotId>=266&&this.slotId<272)return v.Wizard;if(this.slotId>=272&&this.slotId<278)return v.Angel;if(this.slotId>=278&&this.slotId<284)return v.Thief;if(this.slotId>=284&&this.slotId<290)return v.Archer;if(this.slotId>=290&&this.slotId<296)return v.Tamer}get effectValue(){return this.data.potion.GlobalInfo(this.kind).type==Te.Talisman?this.data.potion.GlobalInfo(this.kind).effectValue*this.stack:this.data.potion.GlobalInfo(this.kind).effectValue}UnregisterEffects(){this.effectRegister.forEach(t=>{t()}),this.effectRegister=[]}Start(){if(this.UnregisterEffects(),!(this.slotId<260||this.kind==0)&&this.data.potion.GlobalInfo(this.kind).SetEffect!=null&&!this.isDisabled()){const t=this.data.potion.GlobalInfo(this.kind).SetEffect(this.heroKind,()=>this.stack);Array.isArray(t)?this.effectRegister.push(...t):this.effectRegister.push(t)}}isDisabled(){return this.slotId<260||!this.data.source.isActiveBattle[this.heroKind]?!0:this.data.source.isSuperDungeon&&this.heroKind==this.data.source.currentHero?this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.Value()<=this.slot:this.data.inventory.equipPotionUnlockedNum[this.heroKind].Value()<=this.slot}}var Ht;class Q1{constructor(t){Kt(this,Ht,void 0);o(this,"setItemEquippedNums",Array(N.EquipmentSetKind));o(this,"equipmentSlots",Array(La.allEquipmentSlotId));o(this,"potionSlots",Array(La.allPotionSlotId));o(this,"equipInventoryUnlockedNum");o(this,"equipWeaponUnlockedNum",Array(N.HeroKind));o(this,"equipArmorUnlockedNum",Array(N.HeroKind));o(this,"equipJewelryUnlockedNum",Array(N.HeroKind));o(this,"enchantUnlockedNum");o(this,"potionUnlockedNum");o(this,"equipPotionUnlockedNum",Array(N.HeroKind));es(this,Ht,t);for(let s=0;s<N.EquipmentSetKind;s++)this.setItemEquippedNums[s]=new Array(N.HeroKind).fill(0);this.SetUnlockedNum()}SetUnlockedNum(){this.equipInventoryUnlockedNum=new H(new u(n.Base,r.Add,()=>26)),this.equipInventoryUnlockedNum.maxValue=()=>La.equipmentInventorySlotNum,this.enchantUnlockedNum=new H(new u(n.Base,r.Add,()=>6)),this.potionUnlockedNum=new H(new u(n.Base,r.Add,()=>6));for(let t=0;t<N.HeroKind;t++)this.equipWeaponUnlockedNum[t]=new H(new u(n.Base,r.Add,()=>1)),this.equipArmorUnlockedNum[t]=new H(new u(n.Base,r.Add,()=>1)),this.equipJewelryUnlockedNum[t]=new H(new u(n.Base,r.Add,()=>1)),this.equipPotionUnlockedNum[t]=new H(new u(n.Base,r.Add,()=>1))}Start(){for(let t=0;t<this.equipmentSlots.length;t++)this.equipmentSlots[t]=new j1(R(this,Ht),t),this.equipmentSlots[t].Start();for(let t=0;t<this.potionSlots.length;t++)this.potionSlots[t]=new Y1(R(this,Ht),t),this.potionSlots[t].Start();for(let t=0;t<N.HeroKind;t++)this.UpdateSetItemEquippedNumHero(t)}Update(){this.equipmentSlots.forEach((t,s)=>{t.IsEquipped()?t.Start():t.IsEffectRegisteredClear()});for(let t=260;t<this.potionSlots.length;t++)this.potionSlots[t].Start();for(let t=0;t<N.HeroKind;t++)this.UpdateSetItemEquippedNumHero(t)}getHeroBySlotId(t){if(t>=520&&t<1240)return v.Warrior;if(t>=1240&&t<1960)return v.Wizard;if(t>=1960&&t<2680)return v.Angel;if(t>=2680&&t<3400)return v.Thief;if(t>=3400&&t<4120)return v.Archer;if(t>=4120&&t<4840)return v.Tamer}getPartBySlotId(t){const s=this.getHeroBySlotId(t),i=t-this.getOffset(s);return i<24?F.Weapon:i>=24&&i<48?F.Armor:F.Jewelry}getSetPart(t=v.Warrior,s=F.Weapon){let i=this.getOffset(t)+this.getPartOffset(s);return this.equipmentSlots.slice(i,i+24)}getPotionOffset(t){switch(t){case v.Warrior:return 260;case v.Wizard:return 266;case v.Angel:return 272;case v.Thief:return 278;case v.Archer:return 284;case v.Tamer:return 290;default:return 260}}getPotion(t){const s=this.getPotionOffset(t);return this.potionSlots.slice(s,s+6)}getLoadout(t){return{Weapon:this.getSetPart(t,F.Weapon),Armor:this.getSetPart(t,F.Armor),Jewelry:this.getSetPart(t,F.Jewelry),Utility:this.getPotion(t)}}getPartOffset(t){switch(t){case F.Weapon:return 0;case F.Armor:return 24;case F.Jewelry:return 48;default:return 0}}SetItemEquippedNum(t,s){return this.setItemEquippedNums[t][s]}UpdateSetItemEquippedNum(t,s){let i=0,c=this.getOffset(s),l=c+72;for(let M=0;M<R(this,Ht).equipment.setItemArray[t].length;M++){const b=R(this,Ht).equipment.setItemArray[t][M];for(let k=c;k<l;k++)if(this.equipmentSlots[k].globalInfo.kind==b&&this.equipmentSlots[k].IsEquipped()&&!this.equipmentSlots[k].isDisabled()){i++;break}}this.setItemEquippedNums[t][s]=i}UpdateSetItemEquippedNumHero(t){for(let s=0;s<N.EquipmentSetKind;s++)this.UpdateSetItemEquippedNum(s,t)}getOffset(t){switch(t){case v.Warrior:return 520+R(this,Ht).source.equipmentLoadoutIds[t]*72;case v.Wizard:return 1240+R(this,Ht).source.equipmentLoadoutIds[t]*72;case v.Angel:return 1960+R(this,Ht).source.equipmentLoadoutIds[t]*72;case v.Thief:return 2680+R(this,Ht).source.equipmentLoadoutIds[t]*72;case v.Archer:return 3400+R(this,Ht).source.equipmentLoadoutIds[t]*72;case v.Tamer:return 4120+R(this,Ht).source.equipmentLoadoutIds[t]*72;default:return 0}}CopyCurrentLoadout(){let t=[];const s=520+R(this,Ht).source.equipmentLoadoutIds[R(this,Ht).source.currentHero]*72+R(this,Ht).source.currentHero*720;for(let i=s;i<s+72;i++)t.push(R(this,Ht).inventory.equipmentSlots[i].Copy(yt.Equipment));return t}PasteLoadout(t){let s=0;const i=520+R(this,Ht).source.equipmentLoadoutIds[R(this,Ht).source.currentHero]*72+R(this,Ht).source.currentHero*720;for(let c=i;c<i+72;c++){const l=this.equipmentSlots[c];R(this,Ht).source.equipmentKinds[l.id]=t[s].kind,l.optionEffects.forEach((M,b)=>{M.SetKind(t[s].optionEffects[b].kind),M.SetEffectValue(t[s].optionEffects[b].effectValue),M.SetLevel(t[s].optionEffects[b].level)}),l.forgeEffects.forEach((M,b)=>{M.SetEffectValue(t[s].forgeEffects[b].effectValue)}),s++}this.Update()}}Ht=new WeakMap;class Z1{constructor(t){o(this,"data");this.data=t}Start(){this.clearNum>5&&this.data.stats.SetEffectStats(D.ExpGain,new u(n.MissionMilestone,r.Add,()=>.2)),this.clearNum>10&&this.data.stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.MissionMilestone,r.Add,()=>.1)),this.clearNum>15&&this.data.town.SetEffectTownMatGain(new u(n.MissionMilestone,r.Add,()=>.5)),this.clearNum>20&&this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>10)),this.clearNum>25&&this.data.stats.SetEffectStats(D.ExpGain,new u(n.MissionMilestone,r.Add,()=>.3)),this.clearNum>30&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.5)),this.clearNum>35&&this.data.stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.MissionMilestone,r.Add,()=>.2)),this.clearNum>40&&this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.5)),this.clearNum>45&&this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>10)),this.clearNum>50&&this.data.town.SetEffectTownMatGain(new u(n.MissionMilestone,r.Add,()=>.5)),this.clearNum>60&&this.data.stats.SetEffectResourceGain(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>70&&this.data.stats.GoldGain().RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.5)),this.clearNum>80&&this.data.stats.SetEffectStats(D.ExpGain,new u(n.MissionMilestone,r.Add,()=>.5)),this.clearNum>90&&this.data.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.5)),this.clearNum>120&&this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>140&&this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>160&&this.data.expedition.rewardMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.25)),this.clearNum>180&&this.data.stats.SetEffectResourceGain(new u(n.MissionMilestone,r.Mul,()=>10)),this.clearNum>275&&this.data.stats.SetEffectStats(D.SkillProficiencyGain,new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>300&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>325&&this.data.stats.GoldGain().RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>350&&this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.25)),this.clearNum>400&&this.data.blessingInfo.SetEffectMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>475&&this.data.stats.SetEffectResourceGain(new u(n.MissionMilestone,r.Mul,()=>500)),this.clearNum>550&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,r.Add,()=>10)),this.clearNum>650&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>5)),this.clearNum>750&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>100)),this.clearNum>900&&this.data.monster.petRankCap.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>50)),this.clearNum>1300&&this.data.stats.GoldGain().RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>2.5)),this.clearNum>1350&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,r.Add,()=>10)),this.clearNum>1450&&this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>.25)),this.clearNum>1550&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>7.5)),this.clearNum>1600&&this.data.alchemy.catalyst.essenceProductionDiminishing.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>-.3)),this.clearNum>1650&&this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>1700&&this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Mul,()=>1)),this.clearNum>1800&&this.data.resource.slimeCoinInterest.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>.025)),this.clearNum>1900&&this.data.area.swarmScoreMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>.2)),this.clearNum>2100&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>100)),this.clearNum>2300&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,r.Add,()=>10)),this.clearNum>2600&&this.data.alchemy.catalyst.essenceProductionDiminishing.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>-.2)),this.clearNum>2700&&this.data.resource.slimeCoinInterest.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>.05)),this.clearNum>2900&&this.data.area.swarmScoreMultiplier.RegisterMultiplier(new u(n.MissionMilestone,r.Add,()=>.3))}get clearNum(){return this.data.area.TotalClearedMissionNum()}}var _e;class K1{constructor(t,s,i,c){Kt(this,_e,void 0);o(this,"globalInfo");o(this,"species");o(this,"color");o(this,"challengeMonsterKind",0);o(this,"unlockActiveEffectImprovement");o(this,"saveId");this.globalInfo=s,es(this,_e,t),this.species=i,this.color=c,this.species==Z.ChallengeBoss&&(this.challengeMonsterKind=c),this.saveId=this.color+10*this.species+this.challengeMonsterKind}get level(){return R(this,_e).source.monsterPetLevels[this.saveId]}set level(t){R(this,_e).source.monsterPetLevels[this.saveId]=t}get rank(){return R(this,_e).source.monsterPetRanks[this.saveId]}set rank(t){R(this,_e).source.monsterPetRanks[this.saveId]=t}get loyalty(){return R(this,_e).source.monsterPetLoyalty[this.saveId]}set loyalty(t){R(this,_e).source.monsterPetLoyalty[this.saveId]=t}MonsterPet(t,s){this.globalInfo=t,this.species=Z.ChallengeBoss,this.challengeMonsterKind=s}Start(){this.SetEffect()}IsUnlocked(){return this.rank>0}Level(){return this.level}MaxLevel(){return this.rank*10}MaxRank(){return R(this,_e).monster.petRankCap.Value()}get activeEffectKind(){return 0}get passiveEffectKind(){return this.species==Z.ChallengeBoss||this.species==Z.Mimic?0:bt.petPassiveEffectKinds[this.species][this.color]}SetEffect(){switch(this.passiveEffectKind){case _.ResourceGain:R(this,_e).stats.SetEffectResourceGain(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.PotionEffect:R(this,_e).potion.effectMultiplier.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.TamingPointGain:R(this,_e).stats.SetEffectStats(D.TamingPointGain,new u(n.Pet,r.Add,()=>this.effectValue));break;case _.GoldCap:R(this,_e).resource.goldCap.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.GoldGain:R(this,_e).stats.GoldGain().RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.ExpGain:R(this,_e).stats.SetEffectStats(D.ExpGain,new u(n.Pet,r.Add,()=>this.effectValue));break;case _.DoubleMaterialChance:break;case _.GoldGainOnDisassemblePotion:R(this,_e).potion.disassembleGoldGainMultiplier.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.DisassembleTownMatGain:R(this,_e).equipment.disassembleMultiplier.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.TownMatGainFromDungeonReward:R(this,_e).area.townMaterialDungeonRewardMultiplier.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.OilOfSlimeDropChance:R(this,_e).monster.speciesMaterialDropChance[0].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.EnchantedClothDropChance:R(this,_e).monster.speciesMaterialDropChance[1].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.SpiderSilkDropChance:R(this,_e).monster.speciesMaterialDropChance[2].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.BatWingDropChance:R(this,_e).monster.speciesMaterialDropChance[3].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.FairyDustDropChance:R(this,_e).monster.speciesMaterialDropChance[4].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.FoxTailDropChance:R(this,_e).monster.speciesMaterialDropChance[5].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.FishScalesDropChance:R(this,_e).monster.speciesMaterialDropChance[6].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.CarvedBranchDropChance:R(this,_e).monster.speciesMaterialDropChance[7].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.ThickFurDropChance:R(this,_e).monster.speciesMaterialDropChance[8].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.UnicornHornDropChance:R(this,_e).monster.speciesMaterialDropChance[9].RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.EquipProfGain:R(this,_e).stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.Pet,r.Add,()=>this.effectValue));break;case _.MysteriousWaterGain:R(this,_e).alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.ChestPortalOrbChance:R(this,_e).area.chestPortalOrbChance.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.SkillProfGain:R(this,_e).stats.SetEffectStats(D.SkillProficiencyGain,new u(n.Pet,r.Add,()=>this.effectValue));break;case _.TownMatGain:R(this,_e).town.SetEffectTownMatGain(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.ResearchPowerStone:R(this,_e).town.researchPower[0].RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.ResearchPowerCrystal:R(this,_e).town.researchPower[1].RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.ResearchPowerLeaf:R(this,_e).town.researchPower[2].RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.CatalystCriticalChance:R(this,_e).alchemy.catalyst.criticalChanceMultiplier.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.MysteriousWaterCap:R(this,_e).alchemy.maxMysteriousWaterExpandedCapNum.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.BlessingEffect:R(this,_e).blessingInfo.SetEffectMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.LoyaltyPointGain:for(let t=0;t<N.HeroKind;t++)R(this,_e).stats.heroes[t].loyaltyPoingGain.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.PetExpGain:for(let t=0;t<N.HeroKind;t++)R(this,_e).stats.heroes[t].petExpGainPerDefeat.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.ExpeditionExpGain:R(this,_e).expedition.expGainMultiplier.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.EssenceConversionRate:R(this,_e).alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new u(n.Pet,r.Add,()=>this.effectValue));break;case _.SlimeCoinEfficiency:R(this,_e).resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.SlimeCoinCap:R(this,_e).resource.slimeCoinCap.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.EquipmentEffect:R(this,_e).equipment.effectMultiplier.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break;case _.AlchemyPointGain:R(this,_e).alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.Pet,r.Mul,()=>this.effectValue));break}}get effectValue(){return Math.min(this.maxEffectValue,bt.PetPassiveEffectValue(this.passiveEffectKind,this.rank)*(1+this.loyalty/100)*R(this,_e).monster.petPassiveEffectMultiplier.Value())}get effectIncrementValue(){return(bt.PetPassiveEffectValue(this.passiveEffectKind,this.rank+1)-bt.PetPassiveEffectValue(this.passiveEffectKind,this.rank))*(1+this.loyalty/100)*R(this,_e).monster.petPassiveEffectMultiplier.Value()}get maxEffectValue(){return bt.PetPassiveEffectMaxValue(this.passiveEffectKind)}MaxTPGAmongHeroes(){return this.BaseTamingPointGainPerCapture()*R(this,_e).stats.MaxTPGAmongHeroes()}BaseTamingPointGainPerCapture(){return this.TPGByLevel()+this.TPGByDefeat()+this.TPGByCapture()}TPGByLevel(){return 1+.02*this.level}TPGByDefeat(){return Math.log2(1+this.globalInfo.DefeatedNum()/1e4)}TPGByCapture(){return Math.log2(1+this.globalInfo.CapturedNum()/1e4)}PassiveEffectString(){return Pe.MonsterPetPassiveEffectString(this)}}_e=new WeakMap;var He;class Ta{constructor(t,s,i){Kt(this,He,void 0);o(this,"pet");o(this,"isLogStats",Array(N.HeroKind));o(this,"species");o(this,"color");o(this,"challengeMonsterKind");es(this,He,t),this.species=s,this.color=i,s==Z.ChallengeBoss&&(this.challengeMonsterKind=i),this.pet=new K1(R(this,He),this,s,i)}Start(){this.pet.Start()}AttackElement(){return bt.monsterAttackElements[this.species][this.colorId]}Hp(t,s){if(this.color==_t.Metal)return bt.monsterStats[this.species][this.colorId][0]*t;let i=bt.monsterStats[this.species][this.colorId][0],c,l=i*(1+(t-1)/2+1*Math.pow(t/5,2)+2.5*Math.pow(t/10,3)+5*Math.pow(t/20,4)+25*Math.pow(t/40,5)+100*Math.pow(t/80,8)+1e3*Math.pow(t/120,10)+5e4*Math.pow(t/200,15)+25e4*Math.pow(t/300,20));return t<100&&(l*=.5+.5*t/100),t>=400&&(l*=Math.pow(3,(t-400)/100),t>=500&&(l*=Math.pow(5,(t-500)/100)),t>=600&&(l*=Math.pow(10,(t-600)/100)),this.species==Z.ChallengeBoss&&(l*=Math.pow(5,(t-400)/100))),c=l*Math.pow(10,s/10),c}Mp(t,s){return 10}MAtk(t,s){if(this.color==_t.Metal)return bt.monsterStats[this.species][this.colorId][3]*t;let c=bt.monsterStats[this.species][this.colorId][3]*(1+t*.75+20*Math.pow(t/100,3)+100*Math.pow(t/250,5));return t>=400&&(c*=Math.pow(3,(t-400)/100)),t>=500&&(c*=Math.pow(5,(t-500)/100)),t>=1e3&&(c*=Math.pow(10,(t-1e3)/100)),c*Math.pow(2,s/10)}Atk(t,s){if(this.color==_t.Metal)return bt.monsterStats[this.species][this.colorId][2]*t;let i=bt.monsterStats[this.species][this.colorId][2],c;return c=i*(1+t*.75+20*Math.pow(t/100,3)+100*Math.pow(t/250,5)),t>=400&&(c*=Math.pow(3,(t-400)/100)),t>=500&&(c*=Math.pow(5,(t-500)/100)),t>=1e3&&(c*=Math.pow(10,(t-1e3)/100)),c*Math.pow(2,s/10)}Def(t,s){if(this.color==_t.Metal)return bt.monsterStats[this.species][this.colorId][4];let c=bt.monsterStats[this.species][this.colorId][4]*(t+10*Math.pow(t/100,3)+50*Math.pow(t/250,5));return t>=400&&(c*=Math.pow(2,(t-400)/100)),t>=1e3&&(c*=Math.pow(10,(t-1e3)/100)),c*Math.pow(2,s/10)}MDef(t,s){if(this.color==_t.Metal)return bt.monsterStats[this.species][this.colorId][5];let c=bt.monsterStats[this.species][this.colorId][5]*(t+10*Math.pow(t/100,3)+50*Math.pow(t/250,5));return t>=400&&(c*=Math.pow(2,(t-400)/100)),t>=1e3&&(c*=Math.pow(10,(t-1e3)/100)),c*Math.pow(2,s/10)}Spd(){return bt.monsterStats[this.species][this.colorId][6]}Fire(){return bt.monsterStats[this.species][this.colorId][7]}Ice(){return bt.monsterStats[this.species][this.colorId][8]}Thunder(){return bt.monsterStats[this.species][this.colorId][9]}Light(){return bt.monsterStats[this.species][this.colorId][10]}Dark(){return bt.monsterStats[this.species][this.colorId][11]}PhyCrit(t){return .01*Math.log2(1+t)}MagCrit(t){return .01*Math.log2(1+t)}CriticalDamage(){return 2}DebuffResistance(){if(this.species==Z.ChallengeBoss)switch(this.challengeMonsterKind){case qt.Florzporb:return 0;case qt.Arachnetta:return .05;case qt.GuardianKor:return .1;case qt.Nostro:return .2;case qt.LadyEmelda:return .5;case qt.NariSune:return .9;case qt.Octobaddie:return .9999;case qt.Bananoon:return .99999;case qt.Glorbliorbus:return 1;case qt.DistortionSlime:return 1}return 0}Exp(t,s){let i=(25+3*(2*t+2*Math.pow(t/10,2)+5*Math.pow(t/50,3)+10*Math.pow(t/100,4)))*Math.pow(2,s/10)*bt.ColorFactor(this.color)*bt.SpeciesFactor(this.species);return t>=400&&(i*=Math.pow(2,(t-400)/100)),t>=500&&(i*=Math.pow(2,(t-500)/100)),t>=600&&(i*=Math.pow(2,(t-600)/100)),t>=700&&(i*=Math.pow(2,(t-700)/100)),t>=800&&(i*=Math.pow(2,(t-800)/100)),t>=900&&(i*=Math.pow(2,(t-900)/100)),i}Damage(t,s){return this.AttackElement()==B.Physical?this.Atk(t,s):this.MAtk(t,s)}get colorId(){return this.species==Z.ChallengeBoss?this.challengeMonsterKind:this.color}MoveSpeed(t=0,s=0,i=!1,c=v.Warrior){return 1}DefeatedNumHero(t=!1,s){let i=this.color+10*s,c=s+10*this.challengeMonsterKind;switch(this.species){case Z.Slime:return t?R(this,He).source.monsterMutantDefeatedNumsSlime[i]:R(this,He).source.monsterDefeatedNumsSlime[i];case Z.MagicSlime:return t?R(this,He).source.monsterMutantDefeatedNumsMagicSlime[i]:R(this,He).source.monsterDefeatedNumsMagicSlime[i];case Z.Spider:return t?R(this,He).source.monsterMutantDefeatedNumsSpider[i]:R(this,He).source.monsterDefeatedNumsSpider[i];case Z.Bat:return t?R(this,He).source.monsterMutantDefeatedNumsBat[i]:R(this,He).source.monsterDefeatedNumsBat[i];case Z.Fairy:return t?R(this,He).source.monsterMutantDefeatedNumsFairy[i]:R(this,He).source.monsterDefeatedNumsFairy[i];case Z.Fox:return t?R(this,He).source.monsterMutantDefeatedNumsFox[i]:R(this,He).source.monsterDefeatedNumsFox[i];case Z.DevilFish:return t?R(this,He).source.monsterMutantDefeatedNumsDevilFish[i]:R(this,He).source.monsterDefeatedNumsDevilFish[i];case Z.Treant:return t?R(this,He).source.monsterMutantDefeatedNumsTreant[i]:R(this,He).source.monsterDefeatedNumsTreant[i];case Z.FlameTiger:return t?R(this,He).source.monsterMutantDefeatedNumsFlameTiger[i]:R(this,He).source.monsterDefeatedNumsFlameTiger[i];case Z.Unicorn:return t?R(this,He).source.monsterMutantDefeatedNumsUnicorn[i]:R(this,He).source.monsterDefeatedNumsUnicorn[i];case Z.Mimic:return t?R(this,He).source.monsterMutantDefeatedNumsMimic[i]:R(this,He).source.monsterDefeatedNumsMimic[i];case Z.ChallengeBoss:return t?R(this,He).source.monsterMutantDefeatedNumsChallenge[c]:R(this,He).source.monsterDefeatedNumsChallenge[c];default:return 0}}DefeatedNum(t=!1){let s=0;for(let i=0;i<N.HeroKind;++i)t?s+=this.DefeatedNumHero(!0,i):s+=this.DefeatedNumHero(!1,i);return s}CapturedNum(t=!1){let s=0;for(let i=0;i<N.HeroKind;++i)t?s+=this.CapturedNumHero(!0,i):s+=this.CapturedNumHero(!1,i);return s}CapturedNumHero(t=!1,s){let i=this.color+10*s,c=s+10*this.challengeMonsterKind;switch(this.species){case Z.Slime:return t?R(this,He).source.monsterMutantCapturedNumsSlime[i]:R(this,He).source.monsterCapturedNumsSlime[i];case Z.MagicSlime:return t?R(this,He).source.monsterMutantCapturedNumsMagicSlime[i]:R(this,He).source.monsterCapturedNumsMagicSlime[i];case Z.Spider:return t?R(this,He).source.monsterMutantCapturedNumsSpider[i]:R(this,He).source.monsterCapturedNumsSpider[i];case Z.Bat:return t?R(this,He).source.monsterMutantCapturedNumsBat[i]:R(this,He).source.monsterCapturedNumsBat[i];case Z.Fairy:return t?R(this,He).source.monsterMutantCapturedNumsFairy[i]:R(this,He).source.monsterCapturedNumsFairy[i];case Z.Fox:return t?R(this,He).source.monsterMutantCapturedNumsFox[i]:R(this,He).source.monsterCapturedNumsFox[i];case Z.DevilFish:return t?R(this,He).source.monsterMutantCapturedNumsDevilFish[i]:R(this,He).source.monsterCapturedNumsDevilFish[i];case Z.Treant:return t?R(this,He).source.monsterMutantCapturedNumsTreant[i]:R(this,He).source.monsterCapturedNumsTreant[i];case Z.FlameTiger:return t?R(this,He).source.monsterMutantCapturedNumsFlameTiger[i]:R(this,He).source.monsterCapturedNumsFlameTiger[i];case Z.Unicorn:return t?R(this,He).source.monsterMutantCapturedNumsUnicorn[i]:R(this,He).source.monsterCapturedNumsUnicorn[i];case Z.Mimic:return t?R(this,He).source.monsterMutantCapturedNumsMimic[i]:R(this,He).source.monsterCapturedNumsMimic[i];case Z.ChallengeBoss:return t?R(this,He).source.monsterMutantCapturedNumsChallenge[c]:R(this,He).source.monsterCapturedNumsChallenge[c];default:return 0}}MonsterName(){return this.species==Z.ChallengeBoss?qt[this.challengeMonsterKind]:`${Pe.MonsterSpeciesName(this.species)} ${_t[this.color]}`}}He=new WeakMap;class eS{constructor(t){o(this,"data");o(this,"petActiveCap");o(this,"loyaltyCap");o(this,"petRankCap");o(this,"globalInformations",Array(N.MonsterSpecies));o(this,"monsterDefeatNumMultiplier");o(this,"globalInfoList",[]);o(this,"speciesMaterialDropChance",Array(N.MonsterSpecies));o(this,"colorMaterialDropChance");o(this,"trapNotConsumedChance",new H);o(this,"monsterCapturableLevel",Array(N.HeroKind));o(this,"doubleCaptureChance",Array(N.HeroKind));o(this,"captureTripleChance",Array(N.HeroKind));o(this,"petStatsMultiplier");o(this,"petPassiveEffectMultiplier");o(this,"isPetActive",Array(N.PetActiveEffectKind));o(this,"tempIsPetActive",Array(N.PetActiveEffectKind));o(this,"petRankMilestoneList",[]);o(this,"isLog",Array(N.HeroKind));o(this,"memoTotalPetRank");this.data=t,this.petRankCap=new H(new u(n.Base,r.Add,()=>50)),this.loyaltyCap=new H(new u(n.Base,r.Add,()=>100)),this.petActiveCap=new H(new u(n.Base,r.Add,()=>5)),this.monsterDefeatNumMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.petStatsMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.petPassiveEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.colorMaterialDropChance=new H(new u(n.Base,r.Add,()=>bt.colorDropChanceBase));for(let s=0;s<10;s++){this.globalInformations[s]=Array(N.MonsterColor);for(let i=0;i<this.globalInformations[s].length;i++)this.globalInformations[s][i]=new Ta(this.data,s,i),this.globalInfoList.push(this.globalInformations[s][i])}this.globalInformations[10]=[],this.globalInformations[10][0]=new Ta(this.data,Z.Mimic,_t.Normal),this.globalInfoList.push(this.globalInformations[10][0]),this.globalInformations[11]=Array(N.ChallengeMonsterKind);for(let s=0;s<this.globalInformations[11].length;s++)this.globalInformations[11][s]=new Ta(this.data,Z.ChallengeBoss,s),this.globalInfoList.push(this.globalInformations[11][s]);for(let s=0;s<this.speciesMaterialDropChance.length;s++)this.speciesMaterialDropChance[s]=new H(new u(n.Base,r.Add,()=>bt.dropChanceBase));for(let s=0;s<this.captureTripleChance.length;s++)this.doubleCaptureChance[s]=new H,this.captureTripleChance[s]=new H}Start(){this.globalInfoList.forEach(t=>{t.Start()}),this.SetPetRankMilestone()}TotalPetRank(){if(this.memoTotalPetRank)return this.memoTotalPetRank;let t=0;for(let s=0;s<N.MonsterSpecies;s++)t+=this.TotalPetRankSpecies(s);return this.memoTotalPetRank=t,t}SetEffectSpeciesMaterialDropChance(t){for(let s=0;s<this.speciesMaterialDropChance.length;s++)this.speciesMaterialDropChance[s].RegisterMultiplier(t)}SetEffectDoubleCaptureChance(t){for(let s=0;s<this.doubleCaptureChance.length;s++)this.doubleCaptureChance[s].RegisterMultiplier(t)}SetEffectTripleCaptureChance(t){for(let s=0;s<this.captureTripleChance.length;s++)this.captureTripleChance[s].RegisterMultiplier(t)}TotalPetRankSpecies(t){let s=0;for(let i=0;i<this.globalInformations[t].length;i++)s+=this.globalInformations[t][i].pet.rank;return s}Monster(t,s){return this.GlobalInformation(t,s)}GlobalInformation(t,s){return this.globalInformations[t][s]}GlobalInformationChallengeBoss(t){return this.globalInformations[11][t]}isUnlocked(t){return()=>this.TotalPetRank()>t}SetPetRankMilestone(){this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(10))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(20))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(30))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>.15,this.isUnlocked(40))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(50))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(60))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(70))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>.25,this.isUnlocked(80))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(90))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(100))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(140))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(160))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(200))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>.25,this.isUnlocked(240))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>.75,this.isUnlocked(260))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.15,this.isUnlocked(300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(320))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(340))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(360))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(400))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(440))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(480))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.2,this.isUnlocked(500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>1,this.isUnlocked(520))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.15,this.isUnlocked(540))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(560))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(580))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>.75,this.isUnlocked(700))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.2,this.isUnlocked(740))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(800))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(825))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(900))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>1,this.isUnlocked(950))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(975))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.25,this.isUnlocked(1e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>1.25,this.isUnlocked(1025))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.2,this.isUnlocked(1050))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(1075))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(1100))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(1200))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>1.25,this.isUnlocked(1250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.25,this.isUnlocked(1300))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(1350))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(1400))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(1450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.3,this.isUnlocked(1500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(1550))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(1600))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(1700))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(1750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.3,this.isUnlocked(1800))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(1850))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(1900))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>.1,this.isUnlocked(1950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.35,this.isUnlocked(2e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>1.75,this.isUnlocked(2050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1,this.isUnlocked(2100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>1.75,this.isUnlocked(2250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.35,this.isUnlocked(2300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.15,this.isUnlocked(2350))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.2,this.isUnlocked(2450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.4,this.isUnlocked(2500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>2,this.isUnlocked(2550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1,this.isUnlocked(2600))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.15,this.isUnlocked(2650))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>2,this.isUnlocked(2750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.4,this.isUnlocked(2800))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(2850))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.45,this.isUnlocked(3e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>2.25,this.isUnlocked(3050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1,this.isUnlocked(3100))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.15,this.isUnlocked(3150))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(3200))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>2.25,this.isUnlocked(3250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.45,this.isUnlocked(3300))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.2,this.isUnlocked(3400))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.5,this.isUnlocked(3500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>2.5,this.isUnlocked(3550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1,this.isUnlocked(3600))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.15,this.isUnlocked(3650))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>2.5,this.isUnlocked(3750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.5,this.isUnlocked(3800))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(3850))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.55,this.isUnlocked(4e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>2.75,this.isUnlocked(4050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(4100))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.2,this.isUnlocked(4150))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>2.75,this.isUnlocked(4250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.65,this.isUnlocked(4300))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.2,this.isUnlocked(4400))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(4450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.6,this.isUnlocked(4500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>3,this.isUnlocked(4550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(4600))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.2,this.isUnlocked(4650))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>3,this.isUnlocked(4750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>.9,this.isUnlocked(4800))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.1,this.isUnlocked(4850))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(4900))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>.7,this.isUnlocked(5e3))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(5100))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>5,this.isUnlocked(5150))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>3.5,this.isUnlocked(5250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(5300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.2,this.isUnlocked(5350))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(5400))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(5450))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>10,this.isUnlocked(5550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>1.5,this.isUnlocked(5600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>4,this.isUnlocked(5750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>5,this.isUnlocked(5800))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>2,this.isUnlocked(6e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>20,this.isUnlocked(6050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>2,this.isUnlocked(6100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>4.5,this.isUnlocked(6250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>15,this.isUnlocked(6300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.25,this.isUnlocked(6350))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.15,this.isUnlocked(6400))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(6450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>3,this.isUnlocked(6500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>30,this.isUnlocked(6550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>2,this.isUnlocked(6600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>5.5,this.isUnlocked(6750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>30,this.isUnlocked(6800))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,r.Mul,()=>.4,this.isUnlocked(6950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>5,this.isUnlocked(7e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>50,this.isUnlocked(7050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>2,this.isUnlocked(7100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>7,this.isUnlocked(7250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>50,this.isUnlocked(7300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.3,this.isUnlocked(7350))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(7450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>10,this.isUnlocked(7500))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>100,this.isUnlocked(7550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>3,this.isUnlocked(7600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,r.Mul,()=>9,this.isUnlocked(7750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,r.Mul,()=>100,this.isUnlocked(7800))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.2,this.isUnlocked(8e3))),this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.PetRankMilestone,r.Mul,()=>300,this.isUnlocked(8050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Mul,()=>10,this.isUnlocked(8100))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>15,this.isUnlocked(8200))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,r.Add,()=>.35,this.isUnlocked(8350))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,r.Add,()=>1,this.isUnlocked(8450)))}}class tS{constructor(){o(this,"nitroCap");o(this,"maxNitroSpeed");this.nitroCap=new H(new u(n.Base,r.Add,()=>5e3)),this.maxNitroSpeed=new H(new u(n.Base,r.Add,()=>2)),this.nitroCap.numberType=nt.Normal}}var Ge=(e=>(e[e.Common=0]="Common",e[e.Uncommon=1]="Uncommon",e[e.Rare=2]="Rare",e[e.SuperRare=3]="SuperRare",e[e.Epic=4]="Epic",e))(Ge||{});class mt{constructor(t){o(this,"data");o(this,"kind",0);o(this,"type");this.data=t,this.SetInfo()}get talismanRarity(){return Ge.Common}get level(){return this.data.source.potionLevels[this.kind]}set level(t){this.data.source.potionLevels[this.kind]=Math.min(this.type==Te.Talisman?50:100,t)}EffectValue(t){return 0}IsActiveEffect(t,s){return!(!this.data.source.isActiveBattle[t]||s()==0||this.kind==0)}get effectValue(){return this.EffectValue(this.level)*this.data.potion.effectMultiplier.Value()}PassiveEffectValue(t){return this.EffectValue(t)*.01}ModifiedPassiveEffectValue(t){return this.PassiveEffectValue(t)*this.data.potion.talismanPassiveEffectMultiplier.Value()}get passiveEffectMaxValue(){return 0}get passiveEffectValue(){return this.passiveEffectMaxValue<=0?this.ModifiedPassiveEffectValue(this.disassembledNum):Math.min(this.passiveEffectMaxValue,this.ModifiedPassiveEffectValue(this.disassembledNum))}get cooltime(){return 0}SetInfo(){}get disassembledNum(){return this.data.source.potionDisassembledNums[this.kind]}set disassembledNum(t){this.data.source.potionDisassembledNums[this.kind]=t}get talismanDisassembleFragmentNumPerLevel(){return Math.pow(5,this.talismanRarity)}NameString(){return Pe.PotionName(this.kind)}EffectValueString(){return Pe.PotionEffect(this.kind,this.passiveEffectValue,!0)}}class Ue extends mt{constructor(){super(...arguments);o(this,"type",Te.Talisman)}get talismanKind(){return x.AncientAngelsBadge}get effectValue(){return this.EffectValue(this.level)}SetInfo(){this.kind=this.talismanKind,this.SetPassiveEffect()}SetPassiveEffect(){}Cost(s){switch(this.talismanRarity){case Ge.Common:return 9*s+Math.pow(s,2);case Ge.Uncommon:return 99*s+Math.pow(s,3);case Ge.Rare:return 999*s+Math.pow(s,4);case Ge.SuperRare:return 9999*s+Math.pow(s,5);case Ge.Epic:return 99999*s+Math.pow(s,10);default:return 1e13}}}class sS extends Ue{get talismanKind(){return x.AncientAngelsBadge}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class iS extends Ue{get talismanKind(){return x.AncientArchersBadge}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.battles[t].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.WardedFury).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class rS extends Ue{get talismanKind(){return x.AncientBatBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Bat).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Bat).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class aS extends Ue{get talismanKind(){return x.AncientDevilfishBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.DevilFish).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.DevilFish).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class nS extends Ue{get talismanKind(){return x.AncientFairyBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Fairy).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Fairy).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class lS extends Ue{get talismanKind(){return x.AncientFlametigerBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.FlameTiger).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.FlameTiger).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class uS extends Ue{get talismanKind(){return x.AncientFoxBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Fox).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Fox).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class oS extends Ue{get talismanKind(){return x.AncientMagicslimeBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.MagicSlime).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.MagicSlime).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class cS extends Ue{get talismanKind(){return x.AncientSlimeBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Slime).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Slime).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class hS extends Ue{get talismanKind(){return x.AncientSpiderBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Spider).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Spider).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class fS extends Ue{get talismanKind(){return x.AncientTamersBadge}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 10}EffectValue(t){return .05*t}PassiveEffectValue(t){return .001*t}SetPassiveEffect(){this.data.sdg.dungeonCoinGain.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.TamingPointGain).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class dS extends Ue{get talismanKind(){return x.AncientThiefsBadge}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.battles[t].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.ArmoredFury).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class pS extends Ue{get talismanKind(){return x.AncientTreantBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Treant).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Treant).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class gS extends Ue{get talismanKind(){return x.AncientUnicornBadge}get talismanRarity(){return Ge.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.Unicorn).RegisterMultiplier(new u(n.Talisman,r.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.Unicorn).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class mS extends Ue{get talismanKind(){return x.AncientWarriorsBadge}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.ElementDamage(t,B.Physical).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class MS extends Ue{get talismanKind(){return x.AncientWizardsBadge}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){this.data.stats.ElementDamage(t,B.Fire).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Ice).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Thunder).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Light).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Dark).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class wS extends Ue{get talismanKind(){return x.AngelsBadge}get talismanRarity(){return Ge.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[2].RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.SkillProficiencyGain).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class SS extends Ue{get talismanKind(){return x.ArachnettaDoll}get talismanRarity(){return Ge.Rare}EffectValue(t){return .01*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.resource.goldCap.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.baseAttackPoisonChance[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class AS extends Ue{get talismanKind(){return x.ArchersBadge}get talismanRarity(){return Ge.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[4].RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.CriticalDamage).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class bS extends Ue{get talismanKind(){return x.AscendedFromIEH1}get talismanRarity(){return Ge.Epic}EffectValue(t){return .1*t}SetEffect(t,s){return this.data.stats.HeroStats(t,D.ExpGain).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class kS extends mt{SetInfo(){this.kind=x.BasicElixirOfBrains,this.type=Te.MagicalDamage}SetEffect(t,s){return[this.data.stats.ElementDamage(t,B.Fire).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Ice).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Thunder).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Light).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,B.Dark).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))]}EffectValue(t){return .2+.02*t}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class ES extends mt{SetInfo(){this.kind=x.BasicElixirOfBrawn,this.type=Te.PhysicalDamage}SetEffect(t,s){return this.data.stats.ElementDamage(t,B.Physical).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+.02*t}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class DS extends mt{SetInfo(){this.kind=x.BasicElixirOfConcentration,this.type=Te.MaxMP}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MP).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 20+10*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class RS extends mt{SetInfo(){this.kind=x.BasicElixirOfFortitude,this.type=Te.MaxHP}SetEffect(t,s){return this.data.stats.BasicStats(t,m.HP).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 50+25*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class CS extends mt{SetInfo(){this.kind=x.BasicElixirOfUnderstanding,this.type=Te.SkillProfGain}SetEffect(t,s){return this.data.stats.HeroStats(t,D.SkillProficiencyGain).RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+.005*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class yS extends Ue{get talismanKind(){return x.BatBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.ATK,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.ATK).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class PS extends Ue{get talismanKind(){return x.BerserkersStone}get talismanRarity(){return Ge.SuperRare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .2*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,.001*t)}SetPassiveEffect(){this.data.equipment.effectMultiplier.RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,Z.ChallengeBoss).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class vS extends mt{SetInfo(){this.kind=x.BlazingAuraDraught,this.type=Te.Aura}SetEffect(t,s){return this.data.stats.DebuffChance(t,Ze.Knockback).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class BS extends mt{SetInfo(){this.kind=x.BurningDefensePotion,this.type=Te.ElementResistance}SetEffect(t,s){return this.data.stats.ElementResistance(t,B.Fire).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class LS extends Ue{get talismanKind(){return x.CertificateOfCompetence}get talismanRarity(){return Ge.SuperRare}EffectValue(t){return .005*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.SetEffectStats(D.SkillProficiencyGain,new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.skillCooltimeReduction[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class TS extends mt{SetInfo(){this.kind=x.ChilledHealthPotion,this.type=Te.Health}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.5+.05*t)*this.data.potion.GlobalInfo(x.MinorHealthPotion).effectValue}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class xS extends mt{SetInfo(){this.kind=x.ChilledRegenerationPoultice,this.type=Te.HealthRegen}SetEffect(t,s){return this.data.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.5+.05*t)*this.data.potion.GlobalInfo(x.MinorRegenerationPoultice).effectValue}AlchemyPointGain(t){return 6*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class GS extends mt{SetInfo(){this.kind=x.CoolHeadOintment,this.type=Te.ExpGain}SetEffect(t,s){return this.data.stats.HeroStats(t,D.ExpGain).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.02}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class FS extends mt{SetInfo(){this.kind=x.DarkRope,this.type=Te.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class IS extends Ue{get talismanKind(){return x.DevilfishBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return 5e-4*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class HS extends mt{SetInfo(){this.kind=x.ElectricDefensePotion,this.type=Te.ElementResistance}SetEffect(t,s){return this.data.stats.ElementResistance(t,B.Thunder).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class _S extends Ue{constructor(){super(...arguments);o(this,"passiveEffectNumberType",nt.Normal)}get talismanKind(){return x.EnchantedAlembic}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 5}EffectValue(s){return .001*s}PassiveEffectValue(s){return Math.min(this.passiveEffectMaxValue,.001*s)}SetPassiveEffect(){this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(s,i){return this.data.potion.effectMultiplier.RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(s,i)))}}class VS extends Ue{get talismanKind(){return x.FairyBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.MATK,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MATK).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class NS extends mt{SetInfo(){this.kind=x.FierySlayersOil,this.type=Te.SlayerOil}SetEffect(t,s){return this.data.stats.ElementSlayerDamage(t,B.Fire).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class qS extends mt{SetInfo(){this.kind=x.FireRope,this.type=Te.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class US extends Ue{get talismanKind(){return x.FlametigerBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class WS extends Ue{get talismanKind(){return x.FlorzporbDoll}get talismanRarity(){return Ge.Rare}EffectValue(t){return .1*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.GoldGain().RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.baseAttackSlimeBall[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class OS extends Ue{get talismanKind(){return x.FoxBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.MP,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MP).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class $S extends mt{SetInfo(){this.kind=x.FrostyDefensePotion,this.type=Te.ElementResistance}SetEffect(t,s){return this.data.stats.ElementResistance(t,B.Ice).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class zS extends mt{SetInfo(){this.kind=x.FrostySlayersOil,this.type=Te.SlayerOil}SetEffect(t,s){return this.data.stats.ElementSlayerDamage(t,B.Ice).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class JS extends Ue{get talismanKind(){return x.GuardianKorDoll}get talismanRarity(){return Ge.Rare}EffectValue(t){return .001*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.heroes[t].guardianKorInvalidDamageHpPercent.RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class XS extends Ue{get talismanKind(){return x.GuildMembersEmblem}get talismanRarity(){return Ge.SuperRare}get passiveEffectMaxValue(){return .99}EffectValue(t){return .05*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.guild.expRequirementReduction.RegisterMultiplier(new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.heroes[t].guildExpGain.RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class jS extends mt{SetInfo(){this.kind=x.IceRope,this.type=Te.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class YS extends mt{SetInfo(){this.kind=x.IcyAuraDraught,this.type=Te.Aura}SetEffect(t,s){return this.data.stats.DebuffChance(t,Ze.SpdDown).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class QS extends Ue{get talismanKind(){return x.LadyEmeldaDoll}get talismanRarity(){return Ge.Rare}EffectValue(t){return .025*t}PassiveEffectValue(t){return 1e-4*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.ElementAbsorption(t,B.Fire).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,B.Ice).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,B.Thunder).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,B.Light).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,B.Dark).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.ladyEmeldaEffectMultiplier[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class ZS extends mt{SetInfo(){this.kind=x.LightRope,this.type=Te.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class KS extends Ue{get talismanKind(){return x.MagicslimeBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.MDEF,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class eA extends Ue{get talismanKind(){return x.MasonsTrowel}get talismanRarity(){return Ge.SuperRare}get passiveEffectMaxValue(){return 2}EffectValue(t){return .1*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,.001*t)}SetPassiveEffect(){this.data.town.townLevelEffectMultiplier.RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.town.townMaterialGainMultiplier[t].RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class tA extends mt{SetInfo(){this.kind=x.MaterialMultiplierMist,this.type=Te.MaterialGain}SetEffect(t,s){return this.data.stats.MaterialLootGain(t).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 1+.1*t}get effectValue(){return Math.floor(this.EffectValue(this.level)*this.data.potion.effectMultiplier.Value())}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class sA extends mt{SetInfo(){this.kind=x.MinorHealthPotion,this.type=Te.Health}EffectValue(t){return 15+5*t}AlchemyPointGain(t){return 1*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class iA extends mt{SetInfo(){this.kind=x.MinorManaRegenerationPoultice,this.type=Te.ManaRegen}SetEffect(t,s){return this.data.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 5+t}AlchemyPointGain(t){return 3*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class rA extends mt{SetInfo(){this.kind=x.MinorRegenerationPoultice,this.type=Te.HealthRegen}SetEffect(t,s){return this.data.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 1+.2*t}AlchemyPointGain(t){return 2*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class aA extends mt{SetInfo(){this.kind=x.MinorResourcePoultice,this.type=Te.ResourceGain}SetEffect(t,s){return[this.data.stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))]}EffectValue(t){return .25+.05*t}AlchemyPointGain(t){return 1*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class nA extends Ue{get talismanKind(){return x.NariSuneDoll}get talismanRarity(){return Ge.Rare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .005*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,5e-4*t)}SetPassiveEffect(){this.data.area.largeSwarmChanceInsteadOfRegular.RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.skillRangeMultiplier[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class lA extends Ue{get talismanKind(){return x.NostroDoll}get talismanRarity(){return Ge.Rare}EffectValue(t){return .01*t}PassiveEffectValue(t){return 1e-4*t}SetPassiveEffect(){for(let t=0;t<N.HeroKind;t++)this.data.stats.ElementAbsorption(t,B.Physical).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s()*this.data.stats.BasicStats(t,m.MP).Value(),()=>this.IsActiveEffect(t,s)))}}class uA extends Ue{get talismanKind(){return x.OctobaddieDoll}get talismanRarity(){return Ge.Rare}EffectValue(t){return 1/400*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.skillEffectRangeMultiplier[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class oA extends mt{SetInfo(){this.kind=x.ShockingSlayersOil,this.type=Te.SlayerOil}SetEffect(t,s){return this.data.stats.ElementSlayerDamage(t,B.Thunder).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class cA extends mt{SetInfo(){this.kind=x.SlickerShoeSolution,this.type=Te.Move}SetEffect(t,s){return this.data.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.25+.005*t)*this.data.potion.GlobalInfo(x.SlickShoeSolution).effectValue}AlchemyPointGain(t){return 8*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class hA extends mt{SetInfo(){this.kind=x.SlickShoeSolution,this.type=Te.Move}SetEffect(t,s){return this.data.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+.001*t}AlchemyPointGain(t){return 3*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class fA extends mt{SetInfo(){this.kind=x.SlightlyStickySalve,this.type=Te.GoldGain}SetEffect(t,s){return this.data.stats.GoldGain().RegisterMultiplier(new u(n.Potion,r.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class dA extends Ue{get talismanKind(){return x.SlimeBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return 1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.HP,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.HP).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class pA extends Ue{get talismanKind(){return x.SpiderBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.DEF,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.DEF).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class gA extends Ue{get talismanKind(){return x.TamersBadge}get talismanRarity(){return Ge.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .05*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[5].RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.ExpGain).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class mA extends Ue{get talismanKind(){return x.ThiefsBadge}get talismanRarity(){return Ge.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .001*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[3].RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.EquipmentDropChance).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class MA extends mt{SetInfo(){this.kind=x.ThrowingNet,this.type=Te.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class wA extends mt{SetInfo(){this.kind=x.ThunderRope,this.type=Te.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class SA extends Ue{get talismanKind(){return x.TrackersMap}get talismanRarity(){return Ge.SuperRare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .5*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.area.epicSwarmChanceInsteadOfLarge.RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.area.clearCountBonusClass[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class AA extends Ue{get talismanKind(){return x.TrappersTag}get talismanRarity(){return Ge.SuperRare}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.monster.captureTripleChance[t].RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class bA extends Ue{get talismanKind(){return x.TreantBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.ExpGain).RegisterMultiplier(new u(n.Talisman,r.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class kA extends Ue{get talismanKind(){return x.UnicornBadge}get talismanRarity(){return Ge.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.SPD,new u(n.TalismanPassive,r.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.SPD).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class EA extends Ue{get talismanKind(){return x.WarriorsBadge}get talismanRarity(){return Ge.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[0].RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.PhysCritChance).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class DA extends mt{SetInfo(){this.kind=x.WhirlingAuraDraught,this.type=Te.Aura}SetEffect(t,s){return this.data.stats.DebuffChance(t,Ze.Electric).RegisterMultiplier(new u(n.Potion,r.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class RA extends Ue{get talismanKind(){return x.WizardsBadge}get talismanRarity(){return Ge.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[1].RegisterMultiplier(new u(n.TalismanPassive,r.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,D.MagCritChance).RegisterMultiplier(new u(n.Talisman,r.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}var ce;class CA{constructor(t){Kt(this,ce,void 0);o(this,"potions");o(this,"traps");o(this,"talismans");o(this,"globalInformations");o(this,"maxStackNum");o(this,"preventConsumeChance");o(this,"effectMultiplier");o(this,"talismanPassiveEffectMultiplier");o(this,"trapEffectMultiplier");o(this,"trapCooltimeReduction",Array(6));o(this,"disassembleGoldGainMultiplier");o(this,"potionMaxLevel");o(this,"availableQueue");es(this,ce,t),this.maxStackNum=new H(new u(n.Base,r.Add,()=>10)),this.preventConsumeChance=new H(new u(n.Base,r.Add,()=>0)),this.effectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.talismanPassiveEffectMultiplier=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.trapCooltimeReduction.length;s++)this.trapCooltimeReduction[s]=new H(new u(n.Base,r.Add,()=>0),()=>10,()=>1),this.trapCooltimeReduction[s].RegisterMultiplier(new u(n.Base,r.Add,()=>10));this.trapEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.disassembleGoldGainMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.potionMaxLevel=new H(new u(n.Base,r.Add,()=>100)),this.availableQueue=new H}GlobalInfo(t){for(let s=0;s<this.globalInformations.length;s++)if(this.globalInformations[s].kind==t)return this.globalInformations[s];return this.globalInformations[0]}TalismanGlobalInfo(t){for(let s=0;s<this.talismans.length;s++)if(this.talismans[s].kind==t)return this.talismans[s]}Start(){this.potions=[new sA(R(this,ce)),new rA(R(this,ce)),new aA(R(this,ce)),new hA(R(this,ce)),new iA(R(this,ce)),new tA(R(this,ce)),new ES(R(this,ce)),new kS(R(this,ce)),new RS(R(this,ce)),new DS(R(this,ce)),new CS(R(this,ce)),new TS(R(this,ce)),new xS(R(this,ce)),new $S(R(this,ce)),new YS(R(this,ce)),new fA(R(this,ce)),new cA(R(this,ce)),new GS(R(this,ce)),new zS(R(this,ce)),new BS(R(this,ce)),new vS(R(this,ce)),new NS(R(this,ce)),new HS(R(this,ce)),new DA(R(this,ce)),new oA(R(this,ce))],this.traps=[new MA(R(this,ce)),new jS(R(this,ce)),new wA(R(this,ce)),new qS(R(this,ce)),new ZS(R(this,ce)),new FS(R(this,ce))],this.talismans=[new XS(R(this,ce)),new LS(R(this,ce)),new eA(R(this,ce)),new _S(R(this,ce)),new SA(R(this,ce)),new PS(R(this,ce)),new AA(R(this,ce)),new WS(R(this,ce)),new SS(R(this,ce)),new JS(R(this,ce)),new dA(R(this,ce)),new KS(R(this,ce)),new pA(R(this,ce)),new yS(R(this,ce)),new VS(R(this,ce)),new OS(R(this,ce)),new IS(R(this,ce)),new bA(R(this,ce)),new US(R(this,ce)),new kA(R(this,ce)),new bS(R(this,ce)),new EA(R(this,ce)),new RA(R(this,ce)),new wS(R(this,ce)),new mA(R(this,ce)),new AS(R(this,ce)),new gA(R(this,ce)),new lA(R(this,ce)),new QS(R(this,ce)),new nA(R(this,ce)),new uA(R(this,ce)),new mS(R(this,ce)),new MS(R(this,ce)),new sS(R(this,ce)),new dS(R(this,ce)),new iS(R(this,ce)),new fS(R(this,ce)),new cS(R(this,ce)),new oS(R(this,ce)),new hS(R(this,ce)),new rS(R(this,ce)),new nS(R(this,ce)),new uS(R(this,ce)),new aS(R(this,ce)),new pS(R(this,ce)),new lS(R(this,ce)),new gS(R(this,ce))],this.globalInformations=[...this.potions,...this.traps,...this.talismans]}}ce=new WeakMap;const ts={baseStats:[[20,5,2,.5,0,0,0,.01,0,2,.001,200],[10,10,.5,2,0,0,0,0,.01,2,.001,150],[15,7.5,1.5,1.5,0,0,0,.005,.005,2,.001,250],[10,5,1,1,0,0,0,.05,.05,2,.0015,250],[10,10,1.5,1.5,0,0,0,.005,.005,2,.001,200],[20,10,1,1,0,0,0,.005,.005,2,.001,150]],cooperationEfficiency:[0,.2,.4,.55,.7,.8,.9],stats:[[20,5,1,.25,.5,.5,1,1e-4,0,0,1e-5,1],[10,10,.25,1,.15,.15,.5,0,1e-4,0,1e-5,.75],[15,7.5,.5,.5,.35,.35,1.5,5e-5,5e-5,0,1e-5,1.25],[10,5,.35,.35,.05,.05,2.5,2e-4,2e-4,0,1e-5,1.25],[10,10,.5,.5,.35,.35,1,1e-4,1e-4,0,1e-5,1],[20,10,.25,.25,.25,.25,1.5,5e-5,5e-5,0,1e-5,.75]],TitleEffectValue(e,t){function s(i,c){return{main:i,sub:c}}switch(e){case G.SkillMaster:return s(t,t*.1);case G.MonsterDistinguisher:return s(Math.min(1,t)*10*Math.pow(2,t),10*t);case G.EquipmentSlotWeapon:return s(t,0);case G.EquipmentSlotArmor:return s(t,0);case G.EquipmentSlotJewelry:return s(t,0);case G.PotionSlot:return s(t,0);case G.EquipmentProficiency:return s(t*.2,0);case G.PhysicalDamage:return s(t*.025,0);case G.FireDamage:return s(t*.025,0);case G.IceDamage:return s(t*.025,0);case G.ThunderDamage:return s(t*.025,0);case G.LightDamage:return s(t*.025,0);case G.DarkDamage:return s(t*.025,0);case G.Alchemist:return s(t*.025,0);case G.MetalHunter:return s(t,.25*t);case G.Survival:return s(.1*Math.min(1,t)+.1*t,0);case G.FireResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case G.IceResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case G.ThunderResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case G.LightResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case G.DarkResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case G.Cooperation:return s(Math.min(ts.cooperationEfficiency[Math.min(t,6)],1),0);case G.DebuffResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case G.MoveSpeed:return s(t*.05,0);case G.BreakingTheLimit:return s(t,0);case G.Quester:return s(t,0);case G.ExplorerOfSD:return s(Math.min(1,t)*.1*Math.pow(2,t-1),.1*t);default:return s(0,0)}}};class We{constructor(t,s){o(this,"data");o(this,"questCtrl");o(this,"kind");o(this,"type");o(this,"heroKind");o(this,"kindGlobal");o(this,"kindTitle");o(this,"kindGeneral");o(this,"kindDaily");o(this,"globalQuestType");o(this,"rewardExpMultiplier");o(this,"rebirthPointGainMultiplier");o(this,"rewardTitleKind");o(this,"rewardTitleLevel");switch(this.data=t,this.kind=s.kind,this.questCtrl=t.quest,s.kind){case Ee.Global:this.globalQuestType=s.globalQuestType,this.kindGlobal=s.kindGlobal;break;case Ee.Title:this.kindTitle=s.kindTitle,this.heroKind=s.heroKind,this.rewardTitleKind=this.getTitleKind(),this.rewardTitleLevel=this.getTitleLevel();break}}getTitleKind(){switch(this.kindTitle){case E.EquipmentSlotWeapon1:case E.EquipmentSlotWeapon2:case E.EquipmentSlotWeapon3:case E.EquipmentSlotWeapon4:case E.EquipmentSlotWeapon5:case E.EquipmentSlotWeapon6:return G.EquipmentSlotWeapon;case E.EquipmentSlotArmor1:case E.EquipmentSlotArmor2:case E.EquipmentSlotArmor3:case E.EquipmentSlotArmor4:case E.EquipmentSlotArmor5:case E.EquipmentSlotArmor6:return G.EquipmentSlotArmor;case E.EquipmentSlotJewelry1:case E.EquipmentSlotJewelry2:case E.EquipmentSlotJewelry3:case E.EquipmentSlotJewelry4:case E.EquipmentSlotJewelry5:case E.EquipmentSlotJewelry6:return G.EquipmentSlotJewelry;case E.Alchemist1:case E.Alchemist2:case E.Alchemist3:case E.Alchemist4:case E.Alchemist5:return G.Alchemist;case E.DarkAttack1:case E.DarkAttack2:case E.DarkAttack3:case E.DarkAttack4:return G.DarkDamage;case E.LightAttack1:case E.LightAttack2:case E.LightAttack3:case E.LightAttack4:return G.LightDamage;case E.EquipmentProf1:case E.EquipmentProf2:case E.EquipmentProf3:case E.EquipmentProf4:case E.EquipmentProf5:return G.EquipmentProficiency;case E.DarkResistance1:case E.DarkResistance2:case E.DarkResistance3:case E.DarkResistance4:case E.DarkResistance5:return G.DarkResistance;case E.FireResistance1:case E.FireResistance2:case E.FireResistance3:case E.FireResistance4:case E.FireResistance5:return G.FireResistance;case E.ThunderResistance1:case E.ThunderResistance2:case E.ThunderResistance3:case E.ThunderResistance4:case E.ThunderResistance5:return G.ThunderResistance;case E.IceResistance1:case E.IceResistance2:case E.IceResistance3:case E.IceResistance4:case E.IceResistance5:return G.IceResistance;case E.LightResistance1:case E.LightResistance2:case E.LightResistance3:case E.LightResistance4:case E.LightResistance5:return G.LightResistance;case E.FireAttack1:case E.FireAttack2:case E.FireAttack3:case E.FireAttack4:return G.FireDamage;case E.IceAttack1:case E.IceAttack2:case E.IceAttack3:case E.IceAttack4:return G.IceDamage;case E.SkillMaster1:case E.SkillMaster2:case E.SkillMaster3:case E.SkillMaster4:return G.SkillMaster;case E.ThunderAttack1:case E.ThunderAttack2:case E.ThunderAttack3:case E.ThunderAttack4:return G.ThunderDamage;case E.PhysicalAttack1:case E.PhysicalAttack2:case E.PhysicalAttack3:case E.PhysicalAttack4:return G.PhysicalDamage;case E.PotionSlot1:case E.PotionSlot2:case E.PotionSlot3:return G.PotionSlot;case E.Cooperation1:case E.Cooperation2:case E.Cooperation3:return G.Cooperation;case E.Survival1:case E.Survival2:case E.Survival3:case E.Survival4:return G.Survival;case E.ExplorerOfSD1:case E.ExplorerOfSD2:case E.ExplorerOfSD3:case E.ExplorerOfSD4:case E.ExplorerOfSD5:case E.ExplorerOfSD6:case E.ExplorerOfSD7:case E.ExplorerOfSD8:case E.ExplorerOfSD9:case E.ExplorerOfSD10:case E.ExplorerOfSD11:case E.ExplorerOfSD12:case E.ExplorerOfSD13:case E.ExplorerOfSD14:case E.ExplorerOfSD15:return G.ExplorerOfSD;case E.MetalHunter1:case E.MetalHunter2:case E.MetalHunter3:case E.MetalHunter4:case E.MetalHunter5:case E.MetalHunter6:case E.MetalHunter7:case E.MetalHunter8:case E.MetalHunter9:return G.MetalHunter;case E.Porter1:case E.Porter2:case E.Porter3:case E.Porter4:case E.Porter5:case E.Porter6:return G.MoveSpeed;case E.Quester1:case E.Quester2:case E.Quester3:case E.Quester4:case E.Quester5:case E.Quester6:case E.Quester7:case E.Quester8:case E.Quester9:case E.Quester10:return G.Quester;case E.MonsterDistinguisher1:case E.MonsterDistinguisher2:case E.MonsterDistinguisher3:case E.MonsterDistinguisher4:case E.MonsterDistinguisher5:case E.MonsterDistinguisher6:case E.MonsterDistinguisher7:case E.MonsterDistinguisher8:return G.MonsterDistinguisher;default:return 0}}getTitleLevel(){switch(this.kindTitle){case E.EquipmentSlotWeapon1:case E.EquipmentSlotArmor1:case E.EquipmentSlotJewelry1:case E.Alchemist1:case E.ExplorerOfSD1:case E.EquipmentProf1:case E.DarkAttack1:case E.FireAttack1:case E.IceAttack1:case E.ThunderAttack1:case E.LightAttack1:case E.LightResistance1:case E.DarkResistance1:case E.FireResistance1:case E.ThunderResistance1:case E.IceResistance1:case E.PhysicalAttack1:case E.PotionSlot1:case E.SkillMaster1:case E.Survival1:case E.Cooperation1:case E.MetalHunter1:case E.Porter1:case E.Quester1:case E.MonsterDistinguisher1:return 1;case E.EquipmentSlotWeapon2:case E.EquipmentSlotArmor2:case E.EquipmentSlotJewelry2:case E.Alchemist2:case E.ExplorerOfSD2:case E.EquipmentProf2:case E.DarkAttack2:case E.FireAttack2:case E.IceAttack2:case E.ThunderAttack2:case E.LightAttack2:case E.LightResistance2:case E.DarkResistance2:case E.FireResistance2:case E.ThunderResistance2:case E.IceResistance2:case E.PhysicalAttack2:case E.PotionSlot2:case E.SkillMaster2:case E.Survival2:case E.Cooperation2:case E.MetalHunter2:case E.Porter2:case E.Quester2:case E.MonsterDistinguisher2:return 2;case E.EquipmentSlotWeapon3:case E.EquipmentSlotArmor3:case E.EquipmentSlotJewelry3:case E.Alchemist3:case E.ExplorerOfSD3:case E.EquipmentProf3:case E.DarkAttack3:case E.FireAttack3:case E.IceAttack3:case E.ThunderAttack3:case E.LightAttack3:case E.LightResistance3:case E.DarkResistance3:case E.FireResistance3:case E.ThunderResistance3:case E.IceResistance3:case E.PhysicalAttack3:case E.PotionSlot3:case E.SkillMaster3:case E.Survival3:case E.Cooperation3:case E.MetalHunter3:case E.Porter3:case E.Quester3:case E.MonsterDistinguisher3:return 3;case E.EquipmentSlotWeapon4:case E.EquipmentSlotArmor4:case E.EquipmentSlotJewelry4:case E.Alchemist4:case E.ExplorerOfSD4:case E.EquipmentProf4:case E.DarkAttack4:case E.FireAttack4:case E.IceAttack4:case E.ThunderAttack4:case E.LightAttack4:case E.LightResistance4:case E.DarkResistance4:case E.FireResistance4:case E.ThunderResistance4:case E.IceResistance4:case E.PhysicalAttack4:case E.SkillMaster4:case E.Survival4:case E.MetalHunter4:case E.Porter4:case E.Quester4:case E.MonsterDistinguisher4:return 4;case E.EquipmentSlotWeapon5:case E.EquipmentSlotArmor5:case E.EquipmentSlotJewelry5:case E.Alchemist5:case E.ExplorerOfSD5:case E.EquipmentProf5:case E.ThunderResistance5:case E.LightResistance5:case E.DarkResistance5:case E.FireResistance5:case E.IceResistance5:case E.MetalHunter5:case E.Porter5:case E.Quester5:case E.MonsterDistinguisher5:return 5;case E.EquipmentSlotWeapon6:case E.EquipmentSlotArmor6:case E.EquipmentSlotJewelry6:case E.ExplorerOfSD6:case E.MetalHunter6:case E.Porter6:case E.Quester6:case E.MonsterDistinguisher6:return 6;case E.ExplorerOfSD7:case E.MetalHunter7:case E.Quester7:case E.MonsterDistinguisher7:return 7;case E.ExplorerOfSD8:case E.MetalHunter8:case E.Quester8:case E.MonsterDistinguisher8:return 8;case E.ExplorerOfSD9:case E.MetalHunter9:case E.Quester9:return 9;case E.ExplorerOfSD10:case E.Quester10:return 10;case E.ExplorerOfSD11:return 11;case E.ExplorerOfSD12:return 12;case E.ExplorerOfSD13:return 13;case E.ExplorerOfSD14:return 14;case E.ExplorerOfSD15:return 15;default:return 0}}Start(){this.StartQuest(),this.SetRewardEffect()}SetRewardEffect(){switch(this.kindGlobal){case $.Nitro2:this.SetRewardNitro(1e3);break;case $.Nitro3:this.SetRewardNitro(2e3);break;case $.Nitro4:this.SetRewardNitro(3e3);break;case $.Nitro5:this.SetRewardNitro(4e3);break;case $.Nitro6:this.SetRewardNitro(5e3);break;case $.Nitro7:this.SetRewardNitro(6e3);break;case $.Nitro8:this.SetRewardNitro(7e3);break;case $.Capture1:this.SetRewardCapture(.1);break;case $.Capture2:this.SetRewardCapture(.2);break;case $.Capture3:this.SetRewardCapture(.3);break;case $.Capture4:this.SetRewardCapture(.4);break;case $.Capture5:this.SetRewardCapture(.5);break;case $.Alchemy1:this.SetReward(this.data.alchemy.catalyst.criticalChanceMultiplier,r.Mul,.25);break;case $.Alchemy2:this.SetReward(this.data.alchemy.maxMysteriousWaterExpandedCapNum,r.Add,100);break;case $.Alchemy3:this.SetReward(this.data.potion.potionMaxLevel,r.Add,25);break;case $.Alchemy4:this.SetReward(this.data.alchemy.catalyst.catalystLevelCap,r.Add,25);break;case $.Alchemy5:this.SetReward(this.data.alchemy.catalyst.catalystCostReduction,r.Add,.25);break;case $.Alchemy6:this.SetReward(this.data.alchemy.catalyst.criticalChanceMultiplier,r.Mul,.25),this.SetReward(this.data.alchemy.maxMysteriousWaterExpandedCapNum,r.Add,250);break;case $.Alchemy7:this.SetReward(this.data.potion.potionMaxLevel,r.Add,25),this.SetReward(this.data.alchemy.catalyst.catalystLevelCap,r.Add,25);break;case $.Alchemy8:this.SetReward(this.data.alchemy.alchemyPointGainMultiplier,r.Add,1),this.SetReward(this.data.alchemy.catalyst.catalystCostReduction,r.Add,.25);break;case $.Upgrade9:break;case $.Upgrade10:break;case $.Upgrade11:break;case $.Upgrade12:break;case $.Upgrade13:break;case $.Nitro9:this.SetRewardNitro(8e3);break;case $.Nitro10:this.SetRewardNitro(9e3);break;case $.Nitro11:this.SetRewardNitro(1e4);break;case $.Nitro12:this.SetRewardNitro(2e4);break;case $.Nitro13:this.SetRewardNitro(3e4);break;case $.Nitro14:this.SetRewardNitro(4e4);break;case $.Nitro15:this.SetRewardNitro(5e4);break;case $.Capture6:this.SetRewardCapture(.75);break;case $.Capture7:this.SetRewardCapture(1);break;case $.Capture8:this.SetRewardCapture(2);break;case $.Capture9:this.SetRewardCapture(3);break;case $.Capture10:this.SetRewardCapture(5);break;case $.Capture11:this.SetRewardCapture(10);break;case $.Capture12:this.SetRewardCapture(50);break;case $.Capture13:this.SetRewardCapture(100);break;case $.Capture14:this.SetRewardCapture(150);break;case $.Capture15:this.SetRewardCapture(250);break;case $.Capture16:this.SetRewardCapture(500);break;case $.SD2:for(let t=0;t<N.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,r.Mul,.1);break;case $.SD3:for(let t=0;t<N.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,r.Mul,.2);break;case $.SD5:for(let t=0;t<N.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,r.Mul,.3);break;case $.SD6:for(let t=0;t<N.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,r.Mul,.4);break;case $.SD8:for(let t=0;t<N.HeroKind;t++)this.SetReward(this.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier,r.Mul,.5);break;case $.Expedition:this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.Quest,r.Add,()=>1,()=>this.isCleared));break}}StartQuest(){}IsUnlocked(){return!0}get totalClearedNumGeneral(){return this.kind!=Ee.General?0:this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]}set totalClearedNumGeneral(t){this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]=t}get totalClearedNumGeneralThisAscension(){return this.kind!=Ee.General?0:this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]}set totalClearedNumGeneralThisAscension(t){this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]=t}get maxReachedClearedNumGeneral(){return this.kind!=Ee.General?0:this.data.source.maxReachedGeneralQuestClearedNums[this.kindGeneral]}set maxReachedClearedNumGeneral(t){this.data.source.maxReachedGeneralQuestClearedNums[this.kindGeneral]=t}get isPersistentUnlocked(){return this.kind==Ee.General&&this.data.source.isPersistentUnlockedQuestGeneral[this.kindGeneral]}set isPersistentUnlocked(t){this.data.source.isPersistentUnlockedQuestGeneral[this.kindGeneral]=t}get isClearedOnce(){return this.kind!=Ee.General||this.data.source.isClearedQuestGeneralOnce[this.kindGeneral]}set isClearedOnce(t){this.data.source.isClearedQuestGeneralOnce[this.kindGeneral]=t}get isCleared(){switch(this.kind){case Ee.Global:return this.data.source.isClearedQuestsGlobal[this.kindGlobal];case Ee.Title:switch(this.heroKind){case v.Warrior:return this.data.source.isClearedQuestsTitleWarrior[this.kindTitle];case v.Wizard:return this.data.source.isClearedQuestsTitleWizard[this.kindTitle];case v.Angel:return this.data.source.isClearedQuestsTitleAngel[this.kindTitle];case v.Thief:return this.data.source.isClearedQuestsTitleThief[this.kindTitle];case v.Archer:return this.data.source.isClearedQuestsTitleArcher[this.kindTitle];case v.Tamer:return this.data.source.isClearedQuestsTitleTamer[this.kindTitle]}default:return!1}}set isCleared(t){switch(this.kind){case Ee.Global:this.data.source.isClearedQuestsGlobal[this.kindGlobal]=t;break;case Ee.Title:switch(this.heroKind){case v.Warrior:this.data.source.isClearedQuestsTitleWarrior[this.kindTitle]=t;break;case v.Wizard:this.data.source.isClearedQuestsTitleWizard[this.kindTitle]=t;break;case v.Angel:this.data.source.isClearedQuestsTitleAngel[this.kindTitle]=t;break;case v.Thief:this.data.source.isClearedQuestsTitleThief[this.kindTitle]=t;break;case v.Archer:this.data.source.isClearedQuestsTitleArcher[this.kindTitle]=t;break;case v.Tamer:this.data.source.isClearedQuestsTitleTamer[this.kindTitle]=t;break}}}NameString(){return Pe.Quest(this)}SetRewardCapture(t){this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.Quest,r.Mul,()=>t,()=>this.isCleared))}SetRewardNitro(t){this.data.nitro.nitroCap.RegisterMultiplier(new u(n.Quest,r.Add,()=>t,()=>this.isCleared))}SetReward(t,s,i){t.RegisterMultiplier(new u(n.Quest,s,()=>i,()=>this.isCleared))}}var Oe=(e=>(e[e.Tutorial=0]="Tutorial",e[e.Upgrade=1]="Upgrade",e[e.Nitro=2]="Nitro",e[e.Capture=3]="Capture",e[e.Alchemy=4]="Alchemy",e))(Oe||{});class yA{constructor(t){o(this,"data");o(this,"globalQuestList",[]);o(this,"globalQuestListTutorial",[]);o(this,"globalQuestListUpgrade",[]);o(this,"globalQuestListNitro",[]);o(this,"globalQuestListCapture",[]);o(this,"globalQuestListAlchemy",[]);o(this,"dailyQuestList",[]);o(this,"titleQuestList",Array(N.HeroKind));o(this,"generalQuestList",Array(N.HeroKind));o(this,"globalQuests",[]);o(this,"dailyQuests");o(this,"titleQuests",Array(N.HeroKind).fill([]));o(this,"generalQuests");o(this,"portalOrbBonusFromDailyQuest");o(this,"sdRefreshTicketFromDailyQuest");o(this,"acceptableNum",Array(N.HeroKind));o(this,"quest");o(this,"generalQuestClearGain",Array(N.HeroKind));this.data=t;for(let s=0;s<this.acceptableNum.length;s++)this.acceptableNum[s]=new H(new u(n.Base,r.Add,()=>3));this.portalOrbBonusFromDailyQuest=new H,this.sdRefreshTicketFromDailyQuest=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.generalQuestClearGain.length;s++)this.generalQuestClearGain[s]=new H(new u(n.Base,r.Add,()=>1));this.globalQuestListTutorial.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Tutorial,kindGlobal:$.Expedition})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro1})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro2})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro3})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro4})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro5})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro6})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro7})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro8})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro9})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro10})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro11})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro12})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro13})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro14})),this.globalQuestListNitro.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Nitro,kindGlobal:$.Nitro15})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture1})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture2})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture3})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture4})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture5})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture6})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture7})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture8})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture9})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture10})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture11})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture12})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture13})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture14})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture15})),this.globalQuestListCapture.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Capture,kindGlobal:$.Capture16})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy1})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy2})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy3})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy4})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy5})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy6})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy7})),this.globalQuestListAlchemy.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Alchemy,kindGlobal:$.Alchemy8})),this.globalQuestList.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Tutorial,kindGlobal:$.SD2})),this.globalQuestList.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Tutorial,kindGlobal:$.SD3})),this.globalQuestList.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Tutorial,kindGlobal:$.SD5})),this.globalQuestList.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Tutorial,kindGlobal:$.SD6})),this.globalQuestList.push(new We(this.data,{kind:Ee.Global,globalQuestType:Oe.Tutorial,kindGlobal:$.SD8})),this.globalQuests=[...this.globalQuestListNitro,...this.globalQuestListCapture,...this.globalQuestListAlchemy,...this.globalQuestList,...this.globalQuestListTutorial];for(let s=0;s<this.titleQuestList.length;s++){this.titleQuestList[s]=[];for(let i=0;i<N.QuestKindTitle;i++){const c=E[i];this.titleQuestList[s].push(new We(this.data,{kind:Ee.Title,kindTitle:E[c],heroKind:s}))}this.titleQuests=[...this.titleQuestList]}}Start(){this.SetTitleEffectAll();for(let t=0;t<this.globalQuests.length;t++)this.globalQuests[t].Start();for(let t=0;t<N.HeroKind;t++)for(let s=0;s<this.titleQuests[t].length;s++)this.titleQuests[t][s].Start()}TitleLevel(t,s){let i=0;for(let c=0;c<this.titleQuests[t].length;c++)this.titleQuests[t][c].rewardTitleKind==s&&this.titleQuests[t][c].isCleared&&this.titleQuests[t][c].rewardTitleLevel>i&&(i=this.titleQuests[t][c].rewardTitleLevel);return i}TitleEffectValue(t,s){return ts.TitleEffectValue(s,this.TitleLevel(t,s))}SetTitleEffectAll(){for(let t=0;t<N.TitleKind;t++)this.SetTitleEffect(t)}SetTitleEffect(t){switch(t){case G.SkillMaster:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.SkillSlotNum(s).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.HeroStats(s,D.SkillProficiencyGain).RegisterMultiplier(c)}break;case G.MonsterDistinguisher:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.MonsterDistinguishMaxLevel(s).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.MonsterCaptureMaxLevelIncrement(s).RegisterMultiplier(c)}break;case G.EquipmentSlotWeapon:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipWeaponUnlockedNum[s].RegisterMultiplier(i)}break;case G.EquipmentSlotArmor:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipArmorUnlockedNum[s].RegisterMultiplier(i)}break;case G.EquipmentSlotJewelry:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipJewelryUnlockedNum[s].RegisterMultiplier(i)}break;case G.PotionSlot:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipPotionUnlockedNum[s].RegisterMultiplier(i)}break;case G.EquipmentProficiency:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.EquipmentProficiencyGain).RegisterMultiplier(i)}break;case G.PhysicalDamage:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,B.Physical).RegisterMultiplier(i)}break;case G.FireDamage:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,B.Fire).RegisterMultiplier(i)}break;case G.IceDamage:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,B.Ice).RegisterMultiplier(i)}break;case G.ThunderDamage:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,B.Thunder).RegisterMultiplier(i)}break;case G.LightDamage:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,B.Light).RegisterMultiplier(i)}break;case G.DarkDamage:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,B.Dark).RegisterMultiplier(i)}break;case G.Alchemist:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(i)}break;case G.Survival:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>.5,()=>!1);this.data.stats.HeroStats(s,D.PhysCritChance).RegisterMultiplier(i),this.data.stats.HeroStats(s,D.MagCritChance).RegisterMultiplier(i)}break;case G.FireResistance:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.FireRes).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,B.Fire).RegisterMultiplier(c)}break;case G.IceResistance:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.IceRes).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,B.Ice).RegisterMultiplier(c)}break;case G.ThunderResistance:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.ThunderRes).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,B.Thunder).RegisterMultiplier(c)}break;case G.LightResistance:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.LightRes).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,B.Light).RegisterMultiplier(c)}break;case G.DarkResistance:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.DarkRes).RegisterMultiplier(i);const c=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,B.Dark).RegisterMultiplier(c)}break;case G.Cooperation:break;case G.DebuffResistance:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.DebuffRes).RegisterMultiplier(i)}break;case G.MoveSpeed:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,D.MoveSpeed).RegisterMultiplier(i)}break;case G.Quester:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Add,()=>this.TitleEffectValue(s,t).main);this.generalQuestClearGain[s].RegisterMultiplier(i)}break;case G.ExplorerOfSD:for(let s=0;s<N.HeroKind;s++){const i=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).main);this.data.battles[s].superDungeonCtrl.damageMultiplier.RegisterMultiplier(i);const c=new u(n.Title,r.Mul,()=>this.TitleEffectValue(s,t).sub);this.data.superStats.Hero(s).fameGain.RegisterMultiplier(c)}break}}}const en={tierHeroLevel:[100,200,300,500,750,1e3],Upgrade:(e,t)=>{switch(e){case W.ExpGain:return[50,50,!0,100,.25*t];case W.EQRequirement:return[75,75,!0,100,5*t];case W.QuestAcceptableNum:return[250,Math.pow(10,.2),!1,20,t];case W.BasicAtk:return[200,200,!0,50,.05*t];case W.BasicMAtk:return[200,200,!0,50,.05*t];case W.BasicHp:return[200,200,!0,50,.25*t];case W.BasicDef:return[200,200,!0,50,.05*t];case W.BasicMDef:return[200,200,!0,50,.05*t];case W.BasicMp:return[200,200,!0,50,.1*t];case W.StoneGain:return[100,100,!0,100,t];case W.CrystalGain:return[100,100,!0,100,t];case W.LeafGain:return[100,100,!0,100,t];case W.StoneGoldCap:return[100,100,!0,100,.05*t];case W.CrystalGoldCap:return[100,100,!0,100,.05*t];case W.LeafGoldCap:return[100,100,!0,100,.05*t];case W.SkillProfGain:return[100,100,!0,100,.25*t];case W.SkillRankCostReduction:return[100,100,!0,100,Math.pow(.75,t)];case W.ClassSkillSlot:return[1e4,100,!1,1,t];case W.ShareSkillPassive:return[2500,2,!1,10,t*.1];case W.T1ExpGainBoost:return[250,250,!0,100,.1*t];case W.T1RebirthPointGainBoost:return[500,500,!0,10,.1*t];case W.T1BasicAtkBoost:return[200,200,!0,50,.1*t];case W.T1BasicMAtkBoost:return[200,200,!0,50,.1*t];case W.T1BasicHpBoost:return[200,200,!0,50,.1*t];case W.T1BasicDefBoost:return[200,200,!0,50,.1*t];case W.T1BasicMDefBoost:return[200,200,!0,50,.1*t];case W.T1BasicMpBoost:return[200,200,!0,50,.1*t];case W.T1StoneGainBoost:return[100,100,!0,100,.2*t];case W.T1CrystalGainBoost:return[100,100,!0,100,.2*t];case W.T1LeafGainBoost:return[100,100,!0,100,.2*t];case W.T1StoneGoldCapBoost:return[100,100,!0,100,.05*t];case W.T1CrystalGoldCapBoost:return[100,100,!0,100,.05*t];case W.T1LeafGoldCapBoost:return[100,100,!0,100,.05*t];case W.EQProfGain:return[100,100,!0,100,.25*t];case W.EQLevelCap:return[5e3,10,!1,2,5*t];case W.EQWeaponSlot:return[250,5,!1,5,t];case W.EQArmorSlot:return[250,5,!1,5,t];case W.EQJewelrySlot:return[250,5,!1,5,t];case W.T2ExpGainBoost:return[250,250,!0,100,.1*t];case W.T2SkillProfGainBoost:return[250,250,!0,100,.1*t];case W.T2RebirthPointGainBoost:return[500,500,!0,10,.1*t];case W.T2BasicAtkBoost:return[200,200,!0,50,.1*t];case W.T2BasicMAtkBoost:return[200,200,!0,50,.1*t];case W.T2BasicHpBoost:return[200,200,!0,50,.1*t];case W.T2BasicDefBoost:return[200,200,!0,50,.1*t];case W.T2BasicMDefBoost:return[200,200,!0,50,.1*t];case W.T2BasicMpBoost:return[200,200,!0,50,.1*t];case W.T2StoneGainBoost:return[100,100,!0,100,.2*t];case W.T2CrystalGainBoost:return[100,100,!0,100,.2*t];case W.T2LeafGainBoost:return[100,100,!0,100,.2*t];case W.T2StoneGoldCapBoost:return[100,100,!0,100,.05*t];case W.T2CrystalGoldCapBoost:return[100,100,!0,100,.05*t];case W.T2LeafGoldCapBoost:return[100,100,!0,100,.05*t];default:return[1e4,100,!1,1,0]}}};var wt;class Ie{constructor(t,s){Kt(this,wt,void 0);o(this,"rebirth");o(this,"kind");o(this,"effectMultiFactor");o(this,"isGlobalEffect");this.rebirth=t,es(this,wt,t.data),this.kind=s,this.effectMultiFactor=new H(new u(n.Base,r.Add,()=>1))}get level(){switch(this.rebirth.heroKind){case v.Warrior:return R(this,wt).source.rebirthUpgradeLevelsWarrior[this.kind];case v.Wizard:return R(this,wt).source.rebirthUpgradeLevelsWizard[this.kind];case v.Angel:return R(this,wt).source.rebirthUpgradeLevelsAngel[this.kind];case v.Thief:return R(this,wt).source.rebirthUpgradeLevelsTamer[this.kind];case v.Archer:return R(this,wt).source.rebirthUpgradeLevelsArcher[this.kind];case v.Tamer:return R(this,wt).source.rebirthUpgradeLevelsTamer[this.kind];default:return 0}}get rebirthCtrl(){return R(this,wt).rebirth}get heroKind(){return this.rebirth.heroKind}Start(){this.SetEffect()}get effectValue(){return en.Upgrade(this.kind,this.level)[4]*this.effectMultiFactor.Value()}SetEffect(){switch(this.kind){case W.ExpGain:R(this,wt).stats.HeroStats(this.heroKind,D.ExpGain).RegisterMultiplier(new u(n.Rebirth,r.Mul,()=>this.effectValue));break;case W.EQRequirement:R(this,wt).stats.LevelForEquipment(this.heroKind).RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.QuestAcceptableNum:break;case W.BasicAtk:R(this,wt).stats.SetEffectBasicStatsPerLevel(m.ATK,new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.BasicMAtk:R(this,wt).stats.SetEffectBasicStatsPerLevel(m.MATK,new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.BasicHp:R(this,wt).stats.SetEffectBasicStatsPerLevel(m.HP,new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.BasicDef:R(this,wt).stats.SetEffectBasicStatsPerLevel(m.DEF,new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.BasicMDef:R(this,wt).stats.SetEffectBasicStatsPerLevel(m.MDEF,new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.BasicMp:R(this,wt).stats.SetEffectBasicStatsPerLevel(m.MP,new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.StoneGain:R(this,wt).stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.Rebirth,r.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.CrystalGain:R(this,wt).stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.Rebirth,r.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.LeafGain:R(this,wt).stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.Rebirth,r.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.StoneGoldCap:this.isGlobalEffect=!0;break;case W.CrystalGoldCap:this.isGlobalEffect=!0;break;case W.LeafGoldCap:this.isGlobalEffect=!0;break;case W.SkillProfGain:R(this,wt).stats.HeroStats(this.heroKind,D.SkillProficiencyGain).RegisterMultiplier(new u(n.Rebirth,r.Mul,()=>this.effectValue));break;case W.SkillRankCostReduction:R(this,wt).skill.skillRankCostFactors[this.heroKind].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.ClassSkillSlot:R(this,wt).stats.SkillSlotNum(this.heroKind).RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.ShareSkillPassive:R(this,wt).skill.skillPassiveShareFactors[this.heroKind].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T1ExpGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.ExpGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T1RebirthPointGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).rebirthPointGainFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T1BasicAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.BasicAtk).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1BasicMAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.BasicMAtk).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1BasicHpBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.BasicHp).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1BasicDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.BasicDef).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1BasicMDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.BasicMDef).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1BasicMpBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.BasicMp).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1StoneGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.StoneGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1CrystalGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.CrystalGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1LeafGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.LeafGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1StoneGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.StoneGoldCap).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1CrystalGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.CrystalGoldCap).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T1LeafGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(W.LeafGoldCap).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.EQProfGain:R(this,wt).stats.HeroStats(this.heroKind,D.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Rebirth,r.Mul,()=>this.effectValue));break;case W.EQLevelCap:R(this,wt).equipment.maxLevels[this.heroKind].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.EQWeaponSlot:R(this,wt).inventory.equipWeaponUnlockedNum[this.heroKind].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.EQArmorSlot:R(this,wt).inventory.equipArmorUnlockedNum[this.heroKind].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.EQJewelrySlot:R(this,wt).inventory.equipJewelryUnlockedNum[this.heroKind].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T2ExpGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1ExpGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T2SkillProfGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.SkillProfGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T2RebirthPointGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).rebirthPointGainFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue));break;case W.T2BasicAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1BasicAtkBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2BasicMAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1BasicMAtkBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2BasicHpBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1BasicHpBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2BasicDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1BasicDefBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2BasicMDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1BasicMDefBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2BasicMpBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1BasicMpBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2StoneGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1StoneGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2CrystalGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1CrystalGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2LeafGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1LeafGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2StoneGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1StoneGoldCapBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2CrystalGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1CrystalGoldCapBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case W.T2LeafGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(W.T1LeafGoldCapBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break}}}wt=new WeakMap;class xa{constructor(t,s,i){o(this,"data");o(this,"rebirthCtrl");o(this,"additionalAbilityPoint");o(this,"bonusEffectFactorOneDownTier");o(this,"rebirthPointGainFactor");o(this,"rebirthPointKinds",[]);o(this,"heroKind");o(this,"tier");o(this,"rebirthPoint");o(this,"initRebirthPoint");o(this,"rebirthUpgrades");this.data=t,this.rebirthCtrl=this.data.rebirth,this.tier=s,this.heroKind=i,this.Awake()}Awake(){switch(this.additionalAbilityPoint=new H,this.additionalAbilityPoint.minValue=()=>0,this.bonusEffectFactorOneDownTier=new H,this.initRebirthPoint=new H,this.rebirthPointGainFactor=new H(new u(n.Base,r.Add,()=>1)),this.tier){case 0:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ie(this,W.ExpGain),this.rebirthUpgrades[1]=new Ie(this,W.EQRequirement),this.rebirthUpgrades[2]=new Ie(this,W.QuestAcceptableNum),this.heroKind){case v.Warrior:this.rebirthUpgrades[3]=new Ie(this,W.BasicAtk),this.rebirthUpgrades[4]=new Ie(this,W.StoneGain);return;case v.Wizard:this.rebirthUpgrades[3]=new Ie(this,W.BasicMAtk),this.rebirthUpgrades[4]=new Ie(this,W.CrystalGain);return;case v.Angel:this.rebirthUpgrades[3]=new Ie(this,W.BasicHp),this.rebirthUpgrades[4]=new Ie(this,W.LeafGain);return;case v.Thief:this.rebirthUpgrades[3]=new Ie(this,W.BasicDef),this.rebirthUpgrades[4]=new Ie(this,W.StoneGoldCap);return;case v.Archer:this.rebirthUpgrades[3]=new Ie(this,W.BasicMDef),this.rebirthUpgrades[4]=new Ie(this,W.CrystalGoldCap);return;case v.Tamer:this.rebirthUpgrades[3]=new Ie(this,W.BasicMp),this.rebirthUpgrades[4]=new Ie(this,W.LeafGoldCap);return;default:return}case 1:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ie(this,W.SkillProfGain),this.rebirthUpgrades[1]=new Ie(this,W.SkillRankCostReduction),this.rebirthUpgrades[2]=new Ie(this,W.ClassSkillSlot),this.rebirthUpgrades[3]=new Ie(this,W.ShareSkillPassive),this.rebirthUpgrades[4]=new Ie(this,W.T1ExpGainBoost),this.rebirthUpgrades[5]=new Ie(this,W.T1RebirthPointGainBoost),this.heroKind){case v.Warrior:this.rebirthUpgrades[6]=new Ie(this,W.T1BasicAtkBoost),this.rebirthUpgrades[7]=new Ie(this,W.T1StoneGainBoost);return;case v.Wizard:this.rebirthUpgrades[6]=new Ie(this,W.T1BasicMAtkBoost),this.rebirthUpgrades[7]=new Ie(this,W.T1CrystalGainBoost);return;case v.Angel:this.rebirthUpgrades[6]=new Ie(this,W.T1BasicHpBoost),this.rebirthUpgrades[7]=new Ie(this,W.T1LeafGainBoost);return;case v.Thief:this.rebirthUpgrades[6]=new Ie(this,W.T1BasicDefBoost),this.rebirthUpgrades[7]=new Ie(this,W.T1StoneGoldCapBoost);return;case v.Archer:this.rebirthUpgrades[6]=new Ie(this,W.T1BasicMDefBoost),this.rebirthUpgrades[7]=new Ie(this,W.T1CrystalGoldCapBoost);return;case v.Tamer:this.rebirthUpgrades[6]=new Ie(this,W.T1BasicMpBoost),this.rebirthUpgrades[7]=new Ie(this,W.T1LeafGoldCapBoost);return;default:return}case 2:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ie(this,W.EQProfGain),this.rebirthUpgrades[1]=new Ie(this,W.EQLevelCap),this.rebirthUpgrades[2]=new Ie(this,W.EQWeaponSlot),this.rebirthUpgrades[3]=new Ie(this,W.EQArmorSlot),this.rebirthUpgrades[4]=new Ie(this,W.EQJewelrySlot),this.rebirthUpgrades[5]=new Ie(this,W.T2ExpGainBoost),this.rebirthUpgrades[6]=new Ie(this,W.T2SkillProfGainBoost),this.rebirthUpgrades[7]=new Ie(this,W.T2RebirthPointGainBoost),this.heroKind){case v.Warrior:this.rebirthUpgrades[8]=new Ie(this,W.T2BasicAtkBoost),this.rebirthUpgrades[9]=new Ie(this,W.T2StoneGainBoost);return;case v.Wizard:this.rebirthUpgrades[8]=new Ie(this,W.T2BasicMAtkBoost),this.rebirthUpgrades[9]=new Ie(this,W.T2CrystalGainBoost);return;case v.Angel:this.rebirthUpgrades[8]=new Ie(this,W.T2BasicHpBoost),this.rebirthUpgrades[9]=new Ie(this,W.T2LeafGainBoost);return;case v.Thief:this.rebirthUpgrades[8]=new Ie(this,W.T2BasicDefBoost),this.rebirthUpgrades[9]=new Ie(this,W.T2StoneGoldCapBoost);return;case v.Archer:this.rebirthUpgrades[8]=new Ie(this,W.T2BasicMDefBoost),this.rebirthUpgrades[9]=new Ie(this,W.T2CrystalGoldCapBoost);return;case v.Tamer:this.rebirthUpgrades[8]=new Ie(this,W.T2BasicMpBoost),this.rebirthUpgrades[9]=new Ie(this,W.T2LeafGoldCapBoost);return;default:return}}}Start(){for(let t=0;t<this.rebirthUpgrades.length;t++)this.rebirthUpgrades[t].Start()}Upgrade(t){for(let s=0;s<this.rebirthUpgrades.length;s++)if(this.rebirthUpgrades[s].kind==t)return this.rebirthUpgrades[s];return null}GetBonus(){}}var fi;class PA{constructor(t){Kt(this,fi,void 0);o(this,"rebirth",Array(N.HeroKind));o(this,"requiredHeroLevelReduction");o(this,"tier1AbilityPointBonusLevelCap");o(this,"tier2AbilityPointBonusLevelCap");es(this,fi,t),this.requiredHeroLevelReduction=new H(new u(n.Base,r.Add,()=>0),()=>100,()=>0),this.tier1AbilityPointBonusLevelCap=new H(new u(n.Base,r.Add,()=>en.tierHeroLevel[1])),this.tier2AbilityPointBonusLevelCap=new H(new u(n.Base,r.Add,()=>en.tierHeroLevel[2]));for(let s=0;s<N.HeroKind;s++)this.rebirth[s]=[],this.rebirth[s][0]=new xa(R(this,fi),0,s),this.rebirth[s][1]=new xa(R(this,fi),1,s),this.rebirth[s][2]=new xa(R(this,fi),2,s)}Start(){for(let t=0;t<this.rebirth.length;t++)for(let s=0;s<this.rebirth[t].length;s++)this.rebirth[t][s].Start()}Rebirth(t,s){return this.rebirth[t][s]}SetPointMultiplier(t){for(let s=0;s<this.rebirth.length;++s)this.rebirth[s][0].rebirthPointGainFactor.RegisterMultiplier(t),this.rebirth[s][1].rebirthPointGainFactor.RegisterMultiplier(t),this.rebirth[s][2].rebirthPointGainFactor.RegisterMultiplier(t)}get currentHero(){return this.rebirth[R(this,fi).source.currentHero]}}fi=new WeakMap;class vA{constructor(){o(this,"goldCap");o(this,"slimeCoinCap");o(this,"slimeCoinEfficiency");o(this,"slimeCoinInterest");o(this,"resources",Array(N.ResourceKind));this.goldCap=new H(new u(n.Base,r.Add,()=>1e3)),this.slimeCoinCap=new H,this.slimeCoinEfficiency=new H,this.slimeCoinInterest=new H(new u(n.Base,r.Add,()=>0),()=>.5,()=>0);for(let t=0;t<this.resources.length;t++)this.resources[t]=1}HeroResourceKind(t){switch(t){case v.Warrior:return se.Stone;case v.Wizard:return se.Crystal;case v.Angel:return se.Leaf;case v.Thief:return se.Stone;case v.Archer:return se.Crystal;case v.Tamer:return se.Leaf;default:return se.Stone}}HeroResource(t){this.resources[this.HeroResourceKind(t)]}Resource(t){return this.resources[t]}}class BA{constructor(){o(this,"shopItemList",[]);o(this,"shop_MaterialList",[]);o(this,"shop_TrapList",[]);o(this,"shop_BlessingList",[]);o(this,"shop_TownMaterialList",[]);o(this,"materialStockNum");o(this,"trapStockNum");o(this,"blessingStockNum");o(this,"sellPriceRate");o(this,"restockTimesec");o(this,"restockNumMaterial");o(this,"restockNumTrap");o(this,"restockNumBlessing");o(this,"convertTownMaterialAmount");this.materialStockNum=new H(new u(n.Base,r.Add,()=>1)),this.trapStockNum=new H(new u(n.Base,r.Add,()=>20)),this.blessingStockNum=new H(new u(n.Base,r.Add,()=>1)),this.sellPriceRate=new H(new u(n.Base,r.Add,()=>.1)),this.restockTimesec=new H(new u(n.Base,r.Add,()=>600)),this.restockNumMaterial=new H(new u(n.Base,r.Add,()=>1)),this.restockNumTrap=new H(new u(n.Base,r.Add,()=>1)),this.restockNumBlessing=new H(new u(n.Base,r.Add,()=>1)),this.convertTownMaterialAmount=new H(new u(n.Base,r.Add,()=>1))}Start(){}}class tr{constructor(t){o(this,"data");o(this,"skills",Array(N.SkillKindWarrior));o(this,"stances",[]);o(this,"heroKind");this.data=t}get currentStanceId(){return 0}}var d=(e=>(e[e.BasicStats=0]="BasicStats",e[e.HeroStats=1]="HeroStats",e[e.GlobalStats=2]="GlobalStats",e[e.Others=3]="Others",e))(d||{});class p{constructor(t,s,i,c,l,M){o(this,"data");o(this,"skill");o(this,"level");o(this,"requiredLevel");o(this,"effectKind");o(this,"multiplierType");o(this,"value");o(this,"kind");this.data=t.data,this.effectKind=i,this.skill=t,this.level=t.level,this.requiredLevel=s,this.kind=c,this.multiplierType=l,this.value=M,this.SetEffect()}IsActivated(){return this.IsEnoughLevel()}IsEnoughLevel(){return this.level>=this.requiredLevel}SetEffect(){switch(this.effectKind){case d.BasicStats:for(let s=0;s<N.HeroKind;s++){let i=new u(n.SkillPassive,this.multiplierType,()=>this.EffectValue(s),()=>this.IsActivated);this.data.stats.BasicStats(s,this.kind).RegisterMultiplier(i)}break;case d.HeroStats:for(let s=0;s<N.HeroKind;s++){let i=new u(n.SkillPassive,this.multiplierType,()=>this.EffectValue(s),()=>this.IsActivated);this.data.stats.HeroStats(s,this.kind).RegisterMultiplier(i)}break;case d.GlobalStats:let t=new u(n.SkillPassive,this.multiplierType,()=>this.value*this.data.skill.skillPassiveShareFactors[this.skill.heroKind].Value(),()=>this.IsActivated());this.data.stats.globalStats[this.kind].RegisterMultiplier(t);break}}EffectValue(t){let s=this.value;return t!=this.skill.heroKind&&(s*=this.data.skill.skillPassiveShareFactors[this.skill.heroKind].Value()),s}}const ii={skillFactors:[[[1,.02,1,.025,0,0,1.5,0,80,50,0,50,0,0,0,1,0,1],[2,.05,1,.05,0,0,1.25,0,80,50,0,50,0,0,0,1,0,1],[6.5,.125,0,0,10,1,1.25,1,80,50,0,50,0,0,0,2,0,2],[35,.1,0,0,25,2.5,1,2,80,120,0,120,0,0,0,4,.04,8],[550,1.5,10,.05,100,5,2.75,2,120,80,0,80,.5,1/400,.9,1,0,1],[500,.75,0,0,240,5,3,3,150,150,0,300,0,0,0,1,0,1],[2e3,4.5,0,0,500,7.5,4,4,120,80,0,80,.5,1/400,.9,1,0,1],[600,1,0,0,600,10,2,5,300,300,2,500,0,0,0,2,.02,4],[20,.05,10,.05,0,0,1.5,1,500,50,0,50,0,0,0,1,0,1],[60,.2,30,.25,20,1,1.5,2,80,80,0,80,.9,1e-4,.95,1,0,1]],[[1,.02,1,.025,0,0,1.5,0,100,50,0,50,0,0,0,1,0,1],[4,.1,3,.05,0,0,2,0,120,80,0,80,0,0,0,1,0,1],[6,.1,0,0,30,2,2.5,1,120,120,0,200,0,0,0,1,.01,3],[900,.75,0,0,360,10,3,3,200,150,1,300,0,0,0,1,.01,3],[30,.125,10,.1,0,0,1.5,2,150,80,0,80,.1,1/400,.9,1,0,1],[70,.2,10,.1,20,1,1.5,2,100,50,0,50,.1,.001,.5,1,0,1],[1e3,1,0,0,500,12.5,2.5,4,1e3,250,0,500,.25,1/400,1,1,0,1],[10,.025,25,.5,0,0,1,1,200,50,0,50,.2,.002,.5,1,0,1],[30,.05,10,1,30,2,1,2,200,50,0,50,.5,.002,1,2,0,2],[2e3,1.5,0,0,1250,50,3.5,5,200,100,0,100,.5,.001,1,1,.02,4]],[[2,.005,1,.025,0,0,.75,0,150,50,0,50,0,0,0,1,.02,5],[2,.005,1,.025,0,0,.75,0,150,50,0,50,0,0,0,1,.02,5],[15,.075,0,0,30,1.5,3.5,1,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,2.5,1,1,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,10,1,2,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,10,1,2,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,20,20,1,3,1e3,0,0,0,0,0,0,1,0,1],[.25,1e-4,0,0,250,25,1,4,1e3,0,0,0,0,0,0,1,0,1],[250,.2,0,0,240,2,2.5,2,200,200,0,400,.8,.001,.95,1,.02,5],[10,.01,0,0,500,50,1,5,1e3,0,0,0,0,0,0,1,0,1]],[[1,.01,1,.025,0,0,1,0,80,50,0,50,0,0,0,1,0,1],[2,3/400,2,.05,0,0,.75,0,80,50,0,50,.05,1/400,.9,1,.02,3],[35,.125,0,0,25,1.5,1,2,200,50,0,50,0,0,0,2,.01,4],[100,.2,0,0,35,2,1.25,2,80,50,0,50,0,0,0,1,0,1],[150,.25,0,0,250,3.75,2,4,200,50,0,50,0,0,0,2,.02,4],[4,.05,0,0,20,2,2,1,80,120,0,120,.5,.005,.9,1,0,1],[20,.1,5,.1,30,2,1.25,1,500,50,0,50,.2,1/400,.9,1,.02,4],[10,.1,0,0,10,.5,2.5,2,80,50,0,50,0,0,0,1,0,1],[300,.25,0,0,150,3,2,3,150,150,0,300,.25,1/400,.9,1,0,1],[2500,2.5,0,0,400,5,2.75,5,80,50,0,50,.05,5e-5,.2,1,0,1]],[[1,.02,1,.025,0,0,1.5,0,300,80,0,80,0,0,0,1,0,1],[2,.015,2,.05,0,0,1.25,0,300,100,0,100,0,0,0,1,.02,5],[45,.05,0,0,35,2.5,1.5,2,300,100,0,100,0,0,0,5,.02,10],[1250,2.5,0,0,500,10,2,5,500,100,0,100,0,0,0,1,0,1],[6,.05,0,0,20,2,1.75,1,300,100,.5,250,.25,1/400,.9,1,.01,3],[20,.1,5,.1,10,1,1,1,500,150,0,150,.25,1/400,.9,1,0,1],[85,.25,0,0,50,4,2.25,2,300,100,.5,250,.25,1/400,.9,1,.01,3],[80,.15,0,0,200,5,3,3,500,100,0,100,.25,1/400,.9,8,0,8],[40,.1,0,0,400,30,5,4,500,500,0,500,.25,1/400,.9,4,.02,8],[-.35,1e-5,0,0,200,20,1,2,1e3,0,0,0,0,0,0,1,0,1]],[[1,.01,1,1,0,0,1,0,300,50,0,50,0,0,0,1,0,1],[2,.015,2,.05,0,0,1,0,1e3,0,0,0,0,0,0,1,0,1],[40,.2,30,.25,20,2,1.5,2,1e3,0,0,0,0,0,0,1,0,1],[150,1,0,0,200,5,2,3,1e3,0,0,0,0,0,0,1,0,1],[20,.1,0,0,30,2.5,3.5,1,1e3,0,0,0,0,0,0,1,0,1],[.25,.001,0,0,250,25,5,2,1e3,0,0,0,0,0,0,1,0,1],[1,.01,0,0,250,25,1,2,1e3,0,0,0,0,0,0,1,0,1],[1.5,25e-5,0,0,500,50,1,4,1e3,0,0,0,0,0,0,1,0,1],[.1,25e-5,0,0,10,10,1,1,1e3,0,0,0,0,0,0,1,0,1],[200,2,0,0,500,5,5,5,300,50,0,50,0,0,0,1,0,1]]]};class Ce{constructor(t,s,i){o(this,"data");o(this,"heroKind");o(this,"id");o(this,"passiveEffectLists",[]);o(this,"throwSpeed",2e3);o(this,"attackLists",Array(N.HeroKind));o(this,"mp",Array(N.HeroKind));o(this,"tempDamage",Array(N.HeroKind));o(this,"interval",Array(N.HeroKind));o(this,"attackArray",Array(N.HeroKind));o(this,"tempElement");this.data=t,this.heroKind=s,this.id=i}get level(){switch(this.heroKind){case v.Warrior:return this.data.source.warriorSkillLevel[this.id];case v.Wizard:return this.data.source.wizardSkillLevel[this.id];case v.Angel:return this.data.source.angelSkillLevel[this.id];case v.Thief:return this.data.source.thiefSkillLevel[this.id];case v.Archer:return this.data.source.archerSkillLevel[this.id];case v.Tamer:return this.data.source.tamerSkillLevel[this.id];default:return 0}}get rank(){switch(this.heroKind){case v.Warrior:return this.data.source.warriorSkillRank[this.id];case v.Wizard:return this.data.source.wizardSkillRank[this.id];case v.Angel:return this.data.source.angelSkillRank[this.id];case v.Thief:return this.data.source.thiefSkillRank[this.id];case v.Archer:return this.data.source.archerSkillRank[this.id];case v.Tamer:return this.data.source.tamerSkillRank[this.id];default:return 0}}get classSkill(){return this.data.skill.classSkills[this.heroKind]}get element(){return B.Physical}get initDamage(){return ii.skillFactors[this.heroKind][this.id][0]}get incrementDamage(){return ii.skillFactors[this.heroKind][this.id][1]}get initMpGain(){return ii.skillFactors[this.heroKind][this.id][2]}get incrementMpGain(){return ii.skillFactors[this.heroKind][this.id][3]}get initInterval(){return ii.skillFactors[this.heroKind][this.id][6]}get initHitCount(){return ii.skillFactors[this.heroKind][this.id][15]}get incrementHitCount(){return ii.skillFactors[this.heroKind][this.id][16]}get maxHitCount(){return ii.skillFactors[this.heroKind][this.id][17]}get isLog(){return this.data.skill.isLog[this.heroKind]}IsEquipped(t){return!1}IsActiveBuff(t){return!0}get levelBonus(){return this.data.skill.skillLevelBonus[this.heroKind].Value()}Level(){return this.Rank()<=0?0:this.level+this.levelBonus}Rank(){return this.rank}IncrementDamagePerLevel(){return this.incrementDamage*this.Rank()}Damage(){return this.initDamage+this.IncrementDamagePerLevel()*this.Level()}Interval(){return this.initInterval*Math.max(.5,1-1e-4*this.Level())}IncrementMpGainPerLevel(){return this.incrementMpGain*this.Rank()}GainMp(){const t=this.initMpGain+this.IncrementMpGainPerLevel()*this.Level();return this.isLog?Math.log10(Math.max(1,t))*this.HitCount()*(1/Math.pow(.1,.8)):t}HitCount(){return Math.min(this.maxHitCount,this.initHitCount+this.incrementHitCount*this.level)+this.data.skill.extraSkillHitCount[this.heroKind].Value()}DamageOrigin(t,s=!1){return this.tempDamage[t.heroKind]=this.isLog?this.element!=B.Physical?Math.log10(Math.max(1,this.Damage()))+t.matk:Math.log10(Math.max(1,this.Damage()))+t.atk:this.element!=B.Physical?this.Damage()*t.matk:this.Damage()*t.atk,this.tempDamage[t.heroKind]*=this.data.skill.ladyEmeldaEffectMultiplier[t.heroKind].Value(),s?this.tempDamage[t.heroKind]*this.data.stats.ElementDamage(t.heroKind,this.element).Value():this.tempDamage[t.heroKind]}BuffPercent(){return this.initDamage+this.IncrementBuffPercentPerLevel()*this.Level()}IncrementBuffPercentPerLevel(){return this.incrementDamage*this.Rank()}CalculateInterval(t){return Math.max(.1,this.Interval()*this.IntervalModifier(t))}IntervalModifier(t){let s=t.spd;return s>1e7?s=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(9e5,.7)+Math.pow(9e6,.65)+Math.pow(s-1e7,.6):s>1e6?s=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(9e5,.7)+Math.pow(s-1e6,.65):s>1e5?s=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(s-1e5,.7):s>1e4?s=1e3+Math.pow(9e3,.9)+Math.pow(s-1e4,.8):s>1e3&&(s=1e3+Math.pow(s-1e3,.9)),Math.max(.1,1/h.getBaseLog(1.4+Math.max(0,s/5)/5e3,1.4)*Math.max(.5,1-this.data.skill.skillCooltimeReduction[t.heroKind].Value())/this.data.skill.skillCastSpeedModifier[t.heroKind].Value())}}var Zt=(e=>(e[e.Attack=0]="Attack",e[e.Buff=1]="Buff",e[e.Heal=2]="Heal",e[e.Order=3]="Order",e))(Zt||{}),Rs=(e=>(e[e.Nothing=0]="Nothing",e[e.HpUp=1]="HpUp",e[e.AtkUp=2]="AtkUp",e[e.MatkUp=3]="MatkUp",e[e.DefMDefUp=4]="DefMDefUp",e[e.SpdUp=5]="SpdUp",e[e.MoveSpeedUp=6]="MoveSpeedUp",e[e.GoldUp=7]="GoldUp",e[e.SkillLevelUp=8]="SkillLevelUp",e))(Rs||{});class LA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,200)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.HP,r.Add,300)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.HP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,125,d.GlobalStats,gt.GoldGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.HP,r.Mul,.2)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.HpUp}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.HP).RegisterMultiplier(s);let i=new u(n.Buff,r.Add,()=>this.RegenValue,()=>this.IsActiveBuff(t));this.data.stats.HpRegenerate(t).RegisterMultiplier(i)}RegenValue(){return this.level<50?0:this.level<100?10:this.level<150?25:this.level<200?45:70}}class TA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.HeroStats,D.MoveSpeed,r.Mul,.05)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,30,d.HeroStats,D.MoveSpeed,r.Mul,.1)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.SPD,r.Add,150)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.SPD,r.Add,150)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.MoveSpeed,r.Mul,.15)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.SPD,r.Add,300)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.SPD,r.Add,350)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.SPD,r.Add,400)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,500)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.SpdUp}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.SPD).RegisterMultiplier(s);let i=new u(n.Buff,r.Mul,()=>this.MoveSpeedValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(i)}MoveSpeedValue(){return this.level>=200?.5:this.level>=150?.25:this.level>=100?.1:0}}class xA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.DEF,r.Add,15)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MDEF,r.Add,15)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MP,r.Add,200)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.HP,r.Add,300)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.HP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Heal}}class GA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.SkillLevelUp}SetBuff(t){let s=new u(n.Buff,r.Add,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.skill.skillLevelBonusFromHolyArch[t].RegisterMultiplier(s);let i=new u(n.Buff,r.Add,()=>this.DebuffResValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.DebuffRes).RegisterMultiplier(i)}DebuffResValue(){return this.level>=250?.7:this.level>=150?.45:this.level>=100?.25:this.level>=50?.1:0}get levelBonus(){return this.data.skill.skillLevelBonus[this.heroKind].Value()}BuffPercent(){return 20+this.IncrementBuffPercentPerLevel()*this.Level()}IncrementBuffPercentPerLevel(){return .1+.05*this.Rank()}}class FA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.MagCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Add,30)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.MagCritChance,r.Add,.1)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.MATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MATK,r.Add,125)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.MatkUp}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.MATK).RegisterMultiplier(s)}}class IA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,20)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.PhysCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.ATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.HP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.PhysCritChance,r.Add,.1)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.ATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.ATK,r.Add,135)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Mul,.6)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.AtkUp}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.ATK).RegisterMultiplier(s)}}class HA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.DEF,r.Mul,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MDEF,r.Mul,.05)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.HP,r.Add,2e3)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.DEF,r.Add,150)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MDEF,r.Add,150)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.HP,r.Mul,.15)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.DEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MDEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MP,r.Mul,.25)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Mul,.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.DefMDefUp}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.DEF).RegisterMultiplier(s),this.data.stats.BasicStats(t,m.MDEF).RegisterMultiplier(s);let i=new u(n.Buff,r.Add,()=>this.InvalidValue,()=>this.IsActiveBuff(t));this.data.stats.ElementInvalid(t,B.Physical).RegisterMultiplier(i)}InvalidValue(){return this.level>=200?.1:this.level>=100?.025:0}}class _A extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.GlobalStats,gt.LeafGain,r.Mul,.1)),this.passiveEffectLists.push(new p(this,30,d.GlobalStats,gt.LeafGain,r.Mul,.2)),this.passiveEffectLists.push(new p(this,40,d.GlobalStats,gt.LeafGain,r.Mul,.3)),this.passiveEffectLists.push(new p(this,60,d.GlobalStats,gt.LeafGain,r.Mul,.4)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.SkillProficiencyGain,r.Add,.1)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.SkillProficiencyGain,r.Add,.2)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.SkillProficiencyGain,r.Add,.3)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.SkillProficiencyGain,r.Add,.4)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?Ze.Poison:Ze.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class VA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.MagCritChance,r.Add,.015)),this.passiveEffectLists.push(new p(this,60,d.HeroStats,D.MagCritChance,r.Add,.025)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.ExpGain,r.Add,.25)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.ExpGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.ExpGain,r.Add,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Light}}class NA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MP,r.Add,100)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.MP,r.Add,150)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.125)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Light}get debuff(){return Ze.Knockback}}class qA extends tr{constructor(s){super(s);o(this,"heroKind",v.Angel);this.skills[0]=new _A(this.data,v.Angel,0),this.skills[1]=new VA(this.data,v.Angel,1),this.skills[2]=new xA(this.data,v.Angel,2),this.skills[3]=new LA(this.data,v.Angel,3),this.skills[4]=new IA(this.data,v.Angel,4),this.skills[5]=new FA(this.data,v.Angel,5),this.skills[6]=new HA(this.data,v.Angel,6),this.skills[7]=new TA(this.data,v.Angel,7),this.skills[8]=new NA(this.data,v.Angel,8),this.skills[9]=new GA(this.data,v.Angel,9)}}class UA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.GlobalStats,gt.StoneGain,r.Mul,.1)),this.passiveEffectLists.push(new p(this,30,d.GlobalStats,gt.StoneGain,r.Mul,.2)),this.passiveEffectLists.push(new p(this,50,d.GlobalStats,gt.StoneGain,r.Mul,.3)),this.passiveEffectLists.push(new p(this,75,d.GlobalStats,gt.StoneGain,r.Mul,.4)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.SkillProficiencyGain,r.Add,.1)),this.passiveEffectLists.push(new p(this,150,d.HeroStats,D.SkillProficiencyGain,r.Add,.2)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.SkillProficiencyGain,r.Add,.3)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.SkillProficiencyGain,r.Add,.4)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?this.data.skill.baseAttackPoisonChance[this.heroKind].Value():this.classSkill.stances[3].effectValueBuff}Range(){return this.Range()}}class WA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,3)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.HP,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.HP,r.Add,150)),this.passiveEffectLists.push(new p(this,50,d.HeroStats,D.PhysCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.PhysCritChance,r.Add,.02)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.PhysCritChance,r.Add,.03)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.ATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class OA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.PhysCritChance,r.Add,.025)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.15)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,300)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class $A extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.SPD,r.Add,20)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.SPD,r.Add,30)),this.passiveEffectLists.push(new p(this,100,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.075)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class zA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,20)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.ExpGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.ATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.ExpGain,r.Add,1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Add,100)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return Ze.AtkDown}ConsumeMp(){return this.level>=50?this.ConsumeMp()*.5:this.ConsumeMp()}}class JA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,20)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.MoveSpeed,r.Mul,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.MoveSpeed,r.Mul,.1)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Add,750)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.75)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Add,125)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,1.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}EffectRange(){return this.level>=150?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=50?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}Interval(){return this.level>=100?this.Interval()*.5:this.Interval()}ConsumeMp(){return this.level>=200?0:this.ConsumeMp()}}class XA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,100)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.PhysCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.HP,r.Add,5e3)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.PhysCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.PhysCritChance,r.Add,.1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,3)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return Ze.MatkDown}Range(){return this.level>=100?this.Range()+30*this.data.skill.skillRangeMultiplier[this.heroKind].Value():this.Range()}EffectRange(){return this.level>=150?this.EffectRange()+170*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=30?this.EffectRange()+70*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}Interval(){return this.level>=200?this.Interval()*.75:this.Interval()}}class jA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,100)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.SPD,r.Add,300)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,200)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class YA extends Ce{constructor(s,i,c){super(s,i,c);o(this,"dushMeter");this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.DEF,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MDEF,r.Add,10)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MP,r.Add,150)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.DEF,r.Add,100)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MDEF,r.Add,100)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,160,d.BasicStats,m.DEF,r.Mul,.2)),this.passiveEffectLists.push(new p(this,180,d.BasicStats,m.MDEF,r.Mul,.2)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.HP,r.Add,1500)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}DamageBonusPermeter(){let s=0;return this.level>=50&&(s+=.5),this.level>=100&&(s+=.5),s}Damage(){return this.Damage()*(1+this.DamageBonusPermeter()*this.dushMeter)}}class QA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.HP,r.Add,250)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.ExpGain,r.Add,.25)),this.passiveEffectLists.push(new p(this,25,d.BasicStats,m.MDEF,r.Add,40)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.DEF,r.Add,40)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.HP,r.Add,2500)),this.passiveEffectLists.push(new p(this,80,d.GlobalStats,gt.GoldGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MDEF,r.Add,100)),this.passiveEffectLists.push(new p(this,100,d.BasicStats,m.DEF,r.Add,100)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.MDEF,r.Mul,.3)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.DEF,r.Mul,.3)),this.passiveEffectLists.push(new p(this,160,d.BasicStats,m.MDEF,r.Add,150)),this.passiveEffectLists.push(new p(this,180,d.BasicStats,m.DEF,r.Add,150)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.HP,r.Mul,.3)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Mul,.5)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.HP,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return Ze.Knockback}}class ZA extends tr{constructor(s){super(s);o(this,"heroKind",v.Warrior);this.skills[0]=new UA(this.data,v.Warrior,0),this.skills[1]=new WA(this.data,v.Warrior,1),this.skills[2]=new $A(this.data,v.Warrior,2),this.skills[3]=new OA(this.data,v.Warrior,3),this.skills[4]=new zA(this.data,v.Warrior,4),this.skills[5]=new JA(this.data,v.Warrior,5),this.skills[6]=new XA(this.data,v.Warrior,6),this.skills[7]=new jA(this.data,v.Warrior,7),this.skills[8]=new YA(this.data,v.Warrior,8),this.skills[9]=new QA(this.data,v.Warrior,9)}}class KA extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.DEF,r.Add,10)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MDEF,r.Add,10)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Add,150)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.ExpGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.ExpGain,r.Add,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Fire}}class e5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,3)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.MagCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.DEF,r.Add,15)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MDEF,r.Add,15)),this.passiveEffectLists.push(new p(this,70,d.HeroStats,D.MagCritChance,r.Add,.02)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MP,r.Add,100)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.MagCritChance,r.Add,.03)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.MATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Add,30)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Fire}}class t5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,20,d.GlobalStats,gt.CrystalGain,r.Mul,.1)),this.passiveEffectLists.push(new p(this,30,d.GlobalStats,gt.CrystalGain,r.Mul,.2)),this.passiveEffectLists.push(new p(this,50,d.GlobalStats,gt.CrystalGain,r.Mul,.3)),this.passiveEffectLists.push(new p(this,75,d.GlobalStats,gt.CrystalGain,r.Mul,.4)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.SkillProficiencyGain,r.Add,.1)),this.passiveEffectLists.push(new p(this,150,d.HeroStats,D.SkillProficiencyGain,r.Add,.2)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.SkillProficiencyGain,r.Add,.3)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.SkillProficiencyGain,r.Add,.4)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?Ze.Poison:Ze.Nothing}get element(){return B.Fire}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class s5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,30)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.MagCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MATK,r.Mul,.2)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Add,200)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Mul,.75)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,1.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Fire}}class i5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,25,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,100)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.HP,r.Add,300)),this.passiveEffectLists.push(new p(this,100,d.BasicStats,m.DEF,r.Mul,.05)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MDEF,r.Mul,.05)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.HP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.HP,r.Mul,.3)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.3)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.HP,r.Mul,.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Ice}get debuff(){return Ze.SpdDown}}class r5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,100)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MDEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.DEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Mul,.075)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.3)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MP,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Ice}get debuff(){return Ze.Stop}}class a5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,100)),this.passiveEffectLists.push(new p(this,30,d.HeroStats,D.MagCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.MagCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.HP,r.Add,2e3)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.MagCritChance,r.Add,.1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Add,3e3)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,3)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}ConsumeMp(){return this.level>=200?this.ConsumeMp()*.5:this.ConsumeMp()}EffectRange(){return this.level>=100?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=50?this.EffectRange()+150*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=20?this.EffectRange()+50*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}get element(){return B.Ice}get debuff(){return Ze.SpdDown}}class n5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.SPD,r.Add,10)),this.passiveEffectLists.push(new p(this,30,d.HeroStats,D.MagCritChance,r.Add,.025)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.DEF,r.Add,25)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MDEF,r.Add,25)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.SPD,r.Add,20)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MATK,r.Add,30)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.MATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Thunder}get debuff(){return Ze.Electric}GainMp(){return this.level>=100?this.GainMp()*2:this.GainMp()}}class l5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.SPD,r.Add,20)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.MoveSpeed,r.Mul,.05)),this.passiveEffectLists.push(new p(this,25,d.HeroStats,D.ExpGain,r.Add,.25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.MoveSpeed,r.Mul,.1)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,60,d.GlobalStats,gt.GoldGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,100,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Mul,.075)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,250)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}Interval(){return this.level>=150?this.Interval()*.5:this.Interval()}get element(){return B.Thunder}get debuff(){return Ze.Electric}}class u5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,100)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MATK,r.Add,200)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Thunder}get debuff(){return Ze.Electric}}class o5 extends tr{constructor(s){super(s);o(this,"heroKind",v.Wizard);this.skills[0]=new t5(this.data,v.Wizard,0),this.skills[1]=new e5(this.data,v.Wizard,1),this.skills[2]=new KA(this.data,v.Wizard,2),this.skills[3]=new s5(this.data,v.Wizard,3),this.skills[4]=new i5(this.data,v.Wizard,4),this.skills[5]=new r5(this.data,v.Wizard,5),this.skills[6]=new a5(this.data,v.Wizard,6),this.skills[7]=new n5(this.data,v.Wizard,7),this.skills[8]=new l5(this.data,v.Wizard,8),this.skills[9]=new u5(this.data,v.Wizard,9)}}class c5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,150)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.MagCritChance,r.Add,.025)),this.passiveEffectLists.push(new p(this,25,d.HeroStats,D.MagCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.MagCritChance,r.Add,.15)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MATK,r.Mul,1.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Dark}get debuff(){return Ze.Death}ThisSkillCriticalChance(){return Math.min(1,.25+1/400*this.Level())}}class h5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.GlobalStats,gt.StoneGain,r.Mul,.1)),this.passiveEffectLists.push(new p(this,30,d.GlobalStats,gt.StoneGain,r.Mul,.2)),this.passiveEffectLists.push(new p(this,50,d.GlobalStats,gt.StoneGain,r.Mul,.3)),this.passiveEffectLists.push(new p(this,75,d.GlobalStats,gt.StoneGain,r.Mul,.4)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.SkillProficiencyGain,r.Add,.1)),this.passiveEffectLists.push(new p(this,150,d.HeroStats,D.SkillProficiencyGain,r.Add,.2)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.SkillProficiencyGain,r.Add,.3)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.SkillProficiencyGain,r.Add,.4)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?Ze.Poison:Ze.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class f5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.MagCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MATK,r.Add,75)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MATK,r.Add,125)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.HP,r.Add,1500)),this.passiveEffectLists.push(new p(this,100,d.BasicStats,m.SPD,r.Add,200)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Mul,.75)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.DEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MDEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Dark}get debuff(){return Ze.Knockback}EffectRange(){return this.level>=150?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=50?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}}class d5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,20)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.ATK,r.Add,40)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,.075)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.ATK,r.Add,100)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class p5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.SPD,r.Add,20)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.PhysCritChance,r.Add,.025)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.SPD,r.Add,50)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.ExpGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.PhysCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.ExpGain,r.Add,1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.SPD,r.Add,150)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,300)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Add,()=>this.CriticalValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.PhysCritChance).RegisterMultiplier(s)}EffectRange(){return this.level>=100?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}ThisSkillCriticalChance(){return Math.min(1,.25+1/400*this.Level())}CriticalValue(){let t=0;return this.level>=25&&(t+=.05),this.level>=50&&(t+=.05),this.level>=75&&(t+=.05),this.level>=150&&(t+=.1),t}}class g5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MDEF,r.Add,20)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.ExpGain,r.Add,.25)),this.passiveEffectLists.push(new p(this,25,d.HeroStats,D.EquipmentDropChance,r.Add,5e-4)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.DEF,r.Add,20)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MDEF,r.Add,30)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.DEF,r.Add,30)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.HP,r.Add,300)),this.passiveEffectLists.push(new p(this,80,d.GlobalStats,gt.GoldGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MP,r.Add,250)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.EquipmentDropChance,r.Add,5e-4)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.HP,r.Mul,.2)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.EquipmentDropChance,r.Add,.001)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Mul,.3)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Dark}PilferChance(){let t=.05;return this.level>=60&&(t+=.05),this.level>=100&&(t+=.05),this.level>=150&&(t+=.1),this.level>=250&&(t+=.25),t}}class m5 extends Ce{constructor(s,i,c){super(s,i,c);o(this,"tempMul");this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.SPD,r.Add,10)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Add,10)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.SPD,r.Add,20)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MATK,r.Add,15)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.SPD,r.Add,30)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Dark}get debuff(){return Ze.Poison}Damage(){return this.tempMul=1,this.level>=50&&this.tempMul++,this.level>=100&&(this.tempMul+=2),this.level>=150&&(this.tempMul+=4),this.level>=200&&(this.tempMul+=8),this.Damage()*this.tempMul}}class M5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.SPD,r.Add,20)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.HeroStats,D.MagCritChance,r.Add,.025)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.MoveSpeed,r.Mul,.05)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MP,r.Add,150)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.MoveSpeed,r.Mul,.1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.SPD,r.Add,200)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Add,()=>this.CriticalValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.MagCritChance).RegisterMultiplier(s)}CriticalValue(){let t=0;return this.level>=75&&(t+=.05),this.level>=125&&(t+=.05),this.level>=175&&(t+=.05),this.level>=225&&(t+=.1),t}get element(){return B.Dark}get debuff(){return Ze.MdefDown}}class w5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,100)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.PhysCritChance,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.SPD,r.Add,250)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.HP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.SPD,r.Add,500)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.PhysCritChance,r.Add,.15)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.SPD,r.Add,1e3)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,1.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class S5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,3)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.HP,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.PhysCritChance,r.Add,.005)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.PhysCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.PhysCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.ATK,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return Ze.DefDown}}class A5 extends tr{constructor(s){super(s);o(this,"heroKind",v.Thief);this.skills[0]=new h5(this.data,v.Thief,0),this.skills[1]=new S5(this.data,v.Thief,1),this.skills[2]=new d5(this.data,v.Thief,2),this.skills[3]=new p5(this.data,v.Thief,3),this.skills[4]=new w5(this.data,v.Thief,4),this.skills[5]=new m5(this.data,v.Thief,5),this.skills[6]=new M5(this.data,v.Thief,6),this.skills[7]=new g5(this.data,v.Thief,7),this.skills[8]=new f5(this.data,v.Thief,8),this.skills[9]=new c5(this.data,v.Thief,9)}}class b5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,20,d.GlobalStats,gt.CrystalGain,r.Mul,.1)),this.passiveEffectLists.push(new p(this,30,d.GlobalStats,gt.CrystalGain,r.Mul,.2)),this.passiveEffectLists.push(new p(this,50,d.GlobalStats,gt.CrystalGain,r.Mul,.3)),this.passiveEffectLists.push(new p(this,75,d.GlobalStats,gt.CrystalGain,r.Mul,.4)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.SkillProficiencyGain,r.Add,.1)),this.passiveEffectLists.push(new p(this,150,d.HeroStats,D.SkillProficiencyGain,r.Add,.2)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.SkillProficiencyGain,r.Add,.3)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.SkillProficiencyGain,r.Add,.4)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?Ze.Poison:Ze.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class k5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.ATK,r.Add,10)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Add,15)),this.passiveEffectLists.push(new p(this,25,d.BasicStats,m.ATK,r.Add,20)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Add,25)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Add,30)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.ATK,r.Add,40)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.ExpGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,B.Physical).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=75&&(t+=.3),this.level>=175&&(t+=.5),t}}class E5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,30,d.HeroStats,D.FireRes,r.Add,.05)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MATK,r.Add,40)),this.passiveEffectLists.push(new p(this,50,d.HeroStats,D.MagCritChance,r.Add,.03)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.FireRes,r.Add,.15)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.MATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Add,200)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,B.Fire).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=75&&(t+=.3),this.level>=175&&(t+=.5),t}get element(){return B.Fire}get debuff(){return Ze.FireResDown}}class D5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.HeroStats,D.MagCritChance,r.Add,.02)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.IceRes,r.Add,.05)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.MDEF,r.Add,30)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.DEF,r.Add,30)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.HP,r.Add,200)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MDEF,r.Add,40)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.DEF,r.Add,40)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.IceRes,r.Add,.15)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MDEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.DEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.HP,r.Mul,.15)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,B.Ice).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=100&&(t+=.3),this.level>=225&&(t+=.5),t}get element(){return B.Ice}get debuff(){return Ze.IceResDown}}class R5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,100)),this.passiveEffectLists.push(new p(this,15,d.HeroStats,D.DarkRes,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.DarkRes,r.Add,.15)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MP,r.Mul,.5)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,3)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,B.Dark).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=5&&(t+=.2),this.level>=50&&(t+=.3),this.level>=100&&(t+=.5),t}get element(){return B.Dark}get debuff(){return Ze.DarkResDown}}class C5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.HP,r.Add,200)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.DEF,r.Add,30)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.MDEF,r.Add,30)),this.passiveEffectLists.push(new p(this,25,d.HeroStats,D.ExpGain,r.Add,.25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,200)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,80,d.GlobalStats,gt.GoldGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,100,d.BasicStats,m.MDEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.DEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.HP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,160,d.BasicStats,m.MP,r.Mul,.2)),this.passiveEffectLists.push(new p(this,180,d.BasicStats,m.HP,r.Mul,.2)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.ExpGain,r.Add,1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.SPD,r.Add,500)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.HP,r.Mul,.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.MoveSpeedUp}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.MoveSpeed).RegisterMultiplier(s)}}class y5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.ATK,r.Add,50)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,100)),this.passiveEffectLists.push(new p(this,15,d.BasicStats,m.ATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Add,200)),this.passiveEffectLists.push(new p(this,25,d.BasicStats,m.ATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Mul,.75)),this.passiveEffectLists.push(new p(this,50,d.BasicStats,m.ATK,r.Mul,1)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.ATK,r.Mul,1.25)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.ATK,r.Mul,3)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class P5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.ATK,r.Add,5)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MP,r.Add,25)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.PhysCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.PhysCritChance,r.Add,.02)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.PhysCritChance,r.Add,.03)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,.3)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}}class v5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,20,d.HeroStats,D.LightRes,r.Add,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Add,50)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Add,200)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.HP,r.Add,1500)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.LightRes,r.Add,.15)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MATK,r.Mul,.75)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.DEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MDEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MATK,r.Mul,1.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,B.Light).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=50&&(t+=.3),this.level>=150&&(t+=.5),t}get element(){return B.Light}get debuff(){return Ze.LightResDown}}class B5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Add,5)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Add,10)),this.passiveEffectLists.push(new p(this,40,d.HeroStats,D.ThunderRes,r.Add,.05)),this.passiveEffectLists.push(new p(this,50,d.HeroStats,D.MagCritChance,r.Add,.01)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MATK,r.Add,15)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MATK,r.Add,20)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Mul,.025)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.ThunderRes,r.Add,.15)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,B.Thunder).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=20&&(t+=.2),this.level>=150&&(t+=.3),this.level>=250&&(t+=.5),t}get element(){return B.Thunder}get debuff(){return Ze.ThunderResDown}}class L5 extends tr{constructor(s){super(s);o(this,"heroKind",v.Archer);this.skills[0]=new b5(this.data,v.Archer,0),this.skills[1]=new P5(this.data,v.Archer,1),this.skills[2]=new k5(this.data,v.Archer,2),this.skills[3]=new y5(this.data,v.Archer,3),this.skills[4]=new B5(this.data,v.Archer,4),this.skills[5]=new D5(this.data,v.Archer,5),this.skills[6]=new E5(this.data,v.Archer,6),this.skills[7]=new v5(this.data,v.Archer,7),this.skills[8]=new R5(this.data,v.Archer,8),this.skills[9]=new C5(this.data,v.Archer,9)}}class T5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MP,r.Add,250)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,50,d.HeroStats,D.MoveSpeed,r.Mul,.025)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.ATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MATK,r.Mul,.2)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.ATK,r.Mul,.2)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.MoveSpeed,r.Mul,.025)),this.passiveEffectLists.push(new p(this,110,d.BasicStats,m.ATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.MATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,130,d.BasicStats,m.ATK,r.Mul,.35)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.MATK,r.Mul,.35)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.MoveSpeed,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.Nothing}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].summonPetATKMATKMultiplier.RegisterMultiplier(s);let i=new u(n.Buff,r.Add,()=>this.CritChance,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.PetPhysCritChance).RegisterMultiplier(i),this.data.stats.HeroStats(t,D.PetMagCritChance).RegisterMultiplier(i)}CritChance(){return this.level>=200?.1:this.level>=150?.05:0}}class x5 extends Ce{constructor(s,i,c){super(s,i,c);o(this,"tempMul");this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MP,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Mul,.01)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Mul,.01)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Add,200)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.ATK,r.Mul,.02)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MATK,r.Mul,.02)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.ATK,r.Mul,.03)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MATK,r.Mul,.03)),this.passiveEffectLists.push(new p(this,110,d.BasicStats,m.ATK,r.Mul,.04)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.MATK,r.Mul,.04)),this.passiveEffectLists.push(new p(this,130,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Order}EffectValue(){this.tempMul=this.level<250?this.level<200?this.level<150?this.level<100?this.level<50?1:2:4:8:16:48;let s=this.Damage()*this.tempMul;return this.isLog&&s>=1&&(s=1+Math.log10(s*100)/100),s}}class G5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,200)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MP,r.Add,100)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.HP,r.Add,300)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Add,150)),this.passiveEffectLists.push(new p(this,60,d.HeroStats,D.ExpGain,r.Add,.25)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,100,d.HeroStats,D.TamingPointGain,r.Mul,.25)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.ExpGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,175,d.GlobalStats,gt.GoldGain,r.Add,.5)),this.passiveEffectLists.push(new p(this,200,d.HeroStats,D.TamingPointGain,r.Mul,.75)),this.passiveEffectLists.push(new p(this,225,d.HeroStats,D.ExpGain,r.Add,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.Nothing}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].petExpGainPerDefeat.RegisterMultiplier(s);let i=new u(n.Buff,r.Mul,()=>this.LoyaltyGain,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].loyaltyPoingGain.RegisterMultiplier(i)}LoyaltyGain(){return this.level>=250?2:this.level>=150?1:this.level>=50?.5:0}}class F5 extends Ce{constructor(s,i,c){super(s,i,c);o(this,"tempMul");this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.DEF,r.Add,50)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.MDEF,r.Add,50)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.DEF,r.Add,150)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MDEF,r.Add,150)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.DEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MDEF,r.Mul,.1)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.DEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MDEF,r.Mul,.15)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.DEF,r.Mul,.25)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.MDEF,r.Mul,.25)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.HP,r.Mul,.45)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Add,2e3)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.HP,r.Mul,1)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}EffectValue(){this.tempMul=this.level<200?this.level<100?this.level<50?1:2:4:8;let s=this.Damage()*this.tempMul;return this.isLog&&s>=1&&(s=1+Math.log10(s*100)/100),s}get type(){return Zt.Order}}class I5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.SPD,r.Add,100)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.SPD,r.Add,200)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.SPD,r.Add,300)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.ATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.MATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.SPD,r.Add,400)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.ATK,r.Mul,.6)),this.passiveEffectLists.push(new p(this,160,d.BasicStats,m.MATK,r.Mul,.6)),this.passiveEffectLists.push(new p(this,180,d.BasicStats,m.SPD,r.Add,500)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MATK,r.Mul,1.25)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.ATK,r.Mul,1.25)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.Nothing}SetBuff(t){let s=new u(n.Buff,r.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].summonPetSPDMoveSpeedMultiplier.RegisterMultiplier(s);let i=new u(n.Buff,r.Add,()=>this.CritChance,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,D.PetPhysCritChance).RegisterMultiplier(i),this.data.stats.HeroStats(t,D.PetMagCritChance).RegisterMultiplier(i)}CritChance(){return this.level>=250?.5:this.level>=100?.25:this.level>=50?.15:this.level>=30?.1:this.level>=10?.05:0}}class H5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,5,d.BasicStats,m.HP,r.Add,200)),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,75,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.MP,r.Mul,.25)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.MP,r.Mul,.35)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Mul,.45)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.MP,r.Mul,.65)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Buff}get buff(){return Rs.Nothing}SetBuff(t){}IncrementBuffPercentPerLevel(){return this.incrementDamage}BuffPercent(){return Math.min(1,this.BuffPercent())}Chance(){return this.level>=200?1:this.level>=150?.8:this.level>=100?.6:this.level>=50?.4:.2}}class _5 extends Ce{constructor(s,i,c){super(s,i,c);o(this,"tempMul");o(this,"isTry");this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.MATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.ATK,r.Mul,.05)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.ATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,70,d.BasicStats,m.MATK,r.Mul,.1)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.ATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,90,d.BasicStats,m.MATK,r.Mul,.15)),this.passiveEffectLists.push(new p(this,110,d.BasicStats,m.MATK,r.Mul,.2)),this.passiveEffectLists.push(new p(this,120,d.BasicStats,m.ATK,r.Mul,.2)),this.passiveEffectLists.push(new p(this,130,d.BasicStats,m.MATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,140,d.BasicStats,m.ATK,r.Mul,.25)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.MoveSpeed,r.Mul,.05)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,250,d.BasicStats,m.ATK,r.Mul,.5)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Order}EffectValue(){this.tempMul=this.level<200?this.level<150?this.level<100?this.level<50?1:2:4:8:16;let s=this.Damage()*this.tempMul;return this.isLog&&s>=1&&(s=1+Math.log10(s*100)/100),s}}class V5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,100)),this.passiveEffectLists.push(new p(this,20,d.GlobalStats,gt.LeafGain,r.Mul,.1)),this.passiveEffectLists.push(new p(this,30,d.GlobalStats,gt.LeafGain,r.Mul,.2)),this.passiveEffectLists.push(new p(this,40,d.GlobalStats,gt.LeafGain,r.Mul,.3)),this.passiveEffectLists.push(new p(this,50,d.GlobalStats,gt.LeafGain,r.Mul,.4)),this.passiveEffectLists.push(new p(this,75,d.HeroStats,D.SkillProficiencyGain,r.Add,.1)),this.passiveEffectLists.push(new p(this,125,d.HeroStats,D.SkillProficiencyGain,r.Add,.2)),this.passiveEffectLists.push(new p(this,150,d.BasicStats,m.HP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,175,d.HeroStats,D.SkillProficiencyGain,r.Add,.3)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.MP,r.Add,500)),this.passiveEffectLists.push(new p(this,250,d.HeroStats,D.SkillProficiencyGain,r.Add,.4)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get element(){return B.Light}SummonPetNum(){return this.level>=200?3:this.level>=100?2:1}SetBuff(t){return this.data.stats.heroes[t].summonPetSlot.RegisterMultiplier(new u(n.Skill,r.Add,()=>this.SummonPetNum,()=>this.IsEquipped(t)))}EffectValue(){let t=this.Damage();return this.isLog&&t>=1&&(t=1+Math.log10(t*100)/100),t}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?Ze.Poison:Ze.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class N5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,10,d.BasicStats,m.HP,r.Add,200)),this.passiveEffectLists.push(new p(this,20,d.BasicStats,m.HP,r.Add,500)),this.passiveEffectLists.push(new p(this,30,d.BasicStats,m.HP,r.Mul,.05)),this.passiveEffectLists.push(new p(this,40,d.BasicStats,m.HP,r.Add,1e3)),this.passiveEffectLists.push(new p(this,60,d.BasicStats,m.MP,r.Add,250)),this.passiveEffectLists.push(new p(this,80,d.BasicStats,m.HP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,125,d.BasicStats,m.HP,r.Mul,.15)),this.passiveEffectLists.push(new p(this,175,d.BasicStats,m.HP,r.Add,1500)),this.passiveEffectLists.push(new p(this,200,d.BasicStats,m.MP,r.Mul,.1)),this.passiveEffectLists.push(new p(this,225,d.BasicStats,m.HP,r.Mul,.25)),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Heal}}class q5 extends Ce{constructor(t,s,i){super(t,s,i),this.passiveEffectLists.push(new p(this,500,d.HeroStats,D.SkillProficiencyGain,r.Add,1))}get type(){return Zt.Attack}get element(){return B.Light}TamingChance(){return Math.min(1,.005+5e-5*this.Level())}}class U5 extends tr{constructor(s){super(s);o(this,"heroKind",v.Tamer);this.skills[0]=new V5(this.data,v.Tamer,0),this.skills[1]=new x5(this.data,v.Tamer,1),this.skills[2]=new _5(this.data,v.Tamer,2),this.skills[3]=new F5(this.data,v.Tamer,3),this.skills[4]=new N5(this.data,v.Tamer,4),this.skills[5]=new H5(this.data,v.Tamer,5),this.skills[6]=new T5(this.data,v.Tamer,6),this.skills[7]=new I5(this.data,v.Tamer,7),this.skills[8]=new G5(this.data,v.Tamer,8),this.skills[9]=new q5(this.data,v.Tamer,9)}}var qs;class W5{constructor(t){Kt(this,qs,void 0);o(this,"ladyEmeldaEffectMultiplier",Array(N.HeroKind));o(this,"skillLevelBonus",Array(N.HeroKind));o(this,"skillLevelBonusValue",Array(N.HeroKind));o(this,"skillLevelBonusFromHolyArch",Array(N.HeroKind));o(this,"skillRankCostFactors",Array(N.HeroKind));o(this,"skillPassiveShareFactors",Array(N.HeroKind));o(this,"skillCooltimeReduction",Array(N.HeroKind));o(this,"skillCastSpeedModifier",Array(N.HeroKind));o(this,"skillRangeMultiplier",Array(N.HeroKind));o(this,"skillEffectRangeMultiplier",Array(N.HeroKind));o(this,"extraSkillHitCount",Array(N.HeroKind));o(this,"loadoutUnlockedNum");o(this,"globalSkillProfGainRate");o(this,"baseAttackPoisonChance",Array(N.HeroKind));o(this,"baseAttackSlimeBall",Array(N.HeroKind));o(this,"classSkills",Array(N.HeroKind));o(this,"isLog",Array(N.HeroKind));es(this,qs,t);for(let s=0;s<this.skillRankCostFactors.length;s++)this.skillRankCostFactors[s]=new H(new u(n.Base,r.Add,()=>0),()=>1,()=>1e-100);for(let s=0;s<this.ladyEmeldaEffectMultiplier.length;s++)this.ladyEmeldaEffectMultiplier[s]=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.skillCooltimeReduction.length;s++)this.skillCooltimeReduction[s]=new H(new u(n.Base,r.Add,()=>0),()=>.5,()=>0);for(let s=0;s<this.skillCastSpeedModifier.length;s++)this.skillCastSpeedModifier[s]=new H(new u(n.Base,r.Add,()=>1),()=>10,()=>1);for(let s=0;s<this.skillRangeMultiplier.length;s++)this.skillRangeMultiplier[s]=new H(new u(n.Base,r.Add,()=>1)),this.skillEffectRangeMultiplier[s]=new H(new u(n.Base,r.Add,()=>1)),this.extraSkillHitCount[s]=new H(new u(n.Base,r.Add,()=>0),()=>500,()=>0);for(let s=0;s<this.skillLevelBonus.length;s++)this.skillLevelBonus[s]=new H(new u(n.Base,r.Add,()=>0),()=>1e9,()=>0),this.skillLevelBonusFromHolyArch[s]=new H,this.skillLevelBonus[s].numberType=nt.Normal;for(let s=0;s<this.skillPassiveShareFactors.length;s++)this.skillPassiveShareFactors[s]=new H;for(let s=0;s<this.baseAttackPoisonChance.length;s++)this.baseAttackPoisonChance[s]=new H;for(let s=0;s<this.baseAttackSlimeBall.length;s++)this.baseAttackSlimeBall[s]=new H;this.globalSkillProfGainRate=new H,this.classSkills[0]=new ZA(R(this,qs)),this.classSkills[1]=new o5(R(this,qs)),this.classSkills[2]=new qA(R(this,qs)),this.classSkills[3]=new A5(R(this,qs)),this.classSkills[4]=new L5(R(this,qs)),this.classSkills[5]=new U5(R(this,qs))}Skill(t,s){return this.classSkills[s].skills[t]}}qs=new WeakMap;class O5{constructor(t,s,i){o(this,"data");o(this,"heroKind");o(this,"kind");this.data=t,this.heroKind=s,this.kind=i}get value(){switch(this.kind){case C.Vitality:return this.data.source.abilityPointsVitality[this.heroKind];case C.Strength:return this.data.source.abilityPointsStrength[this.heroKind];case C.Intelligence:return this.data.source.abilityPointsIntelligence[this.heroKind];case C.Agility:return this.data.source.abilityPointsAgility[this.heroKind];case C.Luck:return this.data.source.abilityPointsLuck[this.heroKind];default:return 0}}set value(t){switch(this.kind){case C.Vitality:this.data.source.abilityPointsVitality[this.heroKind]=t;break;case C.Strength:this.data.source.abilityPointsStrength[this.heroKind]=t;break;case C.Intelligence:this.data.source.abilityPointsIntelligence[this.heroKind]=t;break;case C.Agility:this.data.source.abilityPointsAgility[this.heroKind]=t;break;case C.Luck:this.data.source.abilityPointsLuck[this.heroKind]=t;break}}}class $5{constructor(t,s,i,c){o(this,"data");o(this,"heroKind");o(this,"kind");o(this,"point");o(this,"pointMultiplicativeMultiplier");this.data=t,this.heroKind=s,this.kind=i,this.pointMultiplicativeMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.point=new O5(this.data,s,i)}Point(){return Math.max(0,this.point.value*this.pointMultiplicativeMultiplier.Value())}}class z5{constructor(t,s){o(this,"data");o(this,"basicStats",Array(N.BasicStatsKind));o(this,"basicStatsPerLevel",Array(N.BasicStatsKind));o(this,"stats",Array(N.Stats));o(this,"optionEffectChance",Array(3));o(this,"hpRegenerate");o(this,"mpRegenerate");o(this,"skillSlotNum");o(this,"levelForEquipment");o(this,"monsterDamages",Array(N.MonsterSpecies));o(this,"elementDamages",Array(N.Element));o(this,"elementAbsoptions",Array(N.Element));o(this,"elementInvalids",Array(N.Element));o(this,"guardianKorInvalidDamageHpPercent",new H);o(this,"monsterDistinguishMaxLevel");o(this,"monsterCaptureMaxLevelIncrement");o(this,"guildExpGain");o(this,"movedDistance");o(this,"movedDistanceReset");o(this,"materialLootGain");o(this,"elementSlayerDamages",Array(N.Element));o(this,"debuffChances",Array(N.Debuff));o(this,"channeledMp");o(this,"summonPetSlot");o(this,"loyaltyPoingGain");o(this,"petExpGainPerDefeat");o(this,"summonPetATKMATKMultiplier");o(this,"summonPetSPDMoveSpeedMultiplier");o(this,"extraAfterDamage");o(this,"heroKind");o(this,"level");o(this,"exp");o(this,"abilities",Array(N.AbilityKind));o(this,"abilityPointLeft");this.data=t,this.heroKind=s,this.level=this.data.source.heroLevel[this.heroKind],this.abilityPointLeft=this.AbilityPointLeft(this.heroKind);for(let i=0;i<this.abilities.length;i++)this.abilities[i]=new $5(this.data,s,i,this.abilityPointLeft);this.SetStats()}AbilityPointLeft(t){return this.data.source.abilityPoints[t]}Ability(t){return this.abilities[t]}AbilityStats(t){let s=ts.stats[this.heroKind][t];switch(t){case m.HP:s*=this.Ability(C.Vitality).Point();break;case m.MP:s*=(this.Ability(C.Agility).Point()+this.Ability(C.Intelligence).Point())/2;break;case m.ATK:s*=this.Ability(C.Strength).Point();break;case m.MATK:s*=this.Ability(C.Intelligence).Point();break;case m.DEF:s*=(this.Ability(C.Vitality).Point()+this.Ability(C.Strength).Point())/2;break;case m.MDEF:s*=(this.Ability(C.Vitality).Point()+this.Ability(C.Intelligence).Point())/2;break;case m.SPD:s*=this.Ability(C.Agility).Point();break}return s}Level(){return this.level}SetStats(){for(let t=0;t<this.basicStats.length;t++)this.basicStats[t]=new H(new u(n.Base,r.Add,()=>ts.baseStats[this.heroKind][t])),this.basicStats[t].RegisterMultiplier(new u(n.Ability,r.Add,()=>this.AbilityStats(t))),this.basicStats[t].numberType=nt.Normal,this.basicStatsPerLevel[t]=new H,this.basicStats[t].RegisterMultiplier(new u(n.Rebirth,r.Add,()=>this.basicStatsPerLevel[t].Value()*this.Level()));for(let t=0;t<this.stats.length;t++)this.stats[t]=new H;this.stats[0].maxValue=()=>.9,this.stats[1].maxValue=()=>.9,this.stats[2].maxValue=()=>.9,this.stats[3].maxValue=()=>.9,this.stats[4].maxValue=()=>.9,this.stats[0].minValue=()=>-1e100,this.stats[1].minValue=()=>-1e100,this.stats[2].minValue=()=>-1e100,this.stats[3].minValue=()=>-1e100,this.stats[4].minValue=()=>-1e100,this.stats[6].RegisterMultiplier(new u(n.Base,r.Add,()=>ts.baseStats[this.heroKind][7])),this.stats[6].RegisterMultiplier(new u(n.Ability,r.Add,()=>ts.stats[this.heroKind][7]*this.abilities[4].Point())),this.stats[7].RegisterMultiplier(new u(n.Base,r.Add,()=>ts.baseStats[this.heroKind][8])),this.stats[7].RegisterMultiplier(new u(n.Ability,r.Add,()=>ts.stats[this.heroKind][8]*this.abilities[4].Point())),this.stats[8].modifiers[0]=new u(n.Base,r.Add,()=>ts.baseStats[this.heroKind][9]),this.stats[9].maxValue=()=>1,this.stats[9].RegisterMultiplier(new u(n.Base,r.Add,()=>ts.baseStats[this.heroKind][10])),this.stats[9].RegisterMultiplier(new u(n.Ability,r.Add,()=>ts.stats[this.heroKind][10]*Math.pow(this.abilities[4].Point(),2/3))),this.stats[10].RegisterMultiplier(new u(n.Base,r.Add,()=>ts.baseStats[this.heroKind][11])),this.stats[10].RegisterMultiplier(new u(n.Ability,r.Add,()=>ts.stats[this.heroKind][11]*Math.pow(this.abilities[3].Point(),2/3))),this.stats[10].minValue=()=>50,this.stats[10].numberType=nt.Meter,this.stats[11].RegisterMultiplier(new u(n.Base,r.Add,()=>1)),this.stats[12].RegisterMultiplier(new u(n.Base,r.Add,()=>1)),this.stats[13].RegisterMultiplier(new u(n.Base,r.Add,()=>1)),this.stats[14].RegisterMultiplier(new u(n.Base,r.Add,()=>1)),this.stats[17].RegisterMultiplier(new u(n.Base,r.Add,()=>.025)),this.stats[18].RegisterMultiplier(new u(n.Base,r.Add,()=>.025)),this.stats[19].RegisterMultiplier(new u(n.Base,r.Add,()=>2)),this.stats[21].RegisterMultiplier(new u(n.Base,r.Add,()=>1));for(let t=0;t<this.optionEffectChance.length;t++)this.optionEffectChance[t]=new H(new u(n.Base,r.Add,()=>.01*Math.pow(.1,t))),this.optionEffectChance[t].maxValue=()=>1,this.optionEffectChance[t].RegisterMultiplier(new u(n.Ability,r.Add,()=>2e-4*Math.pow(.1,t*this.abilities[4].Point())));this.hpRegenerate=new H(new u(n.Base,r.Add,()=>0),()=>this.basicStats[0].Value(),()=>0),this.mpRegenerate=new H(new u(n.Base,r.Add,()=>0),()=>this.basicStats[1].Value(),()=>0),this.hpRegenerate.numberType=nt.Normal,this.mpRegenerate.numberType=nt.Normal,this.skillSlotNum=new H(new u(n.Base,r.Add,()=>1)),this.levelForEquipment=new H(new u(n.Base,r.Add,()=>this.Level()));for(let t=0;t<this.monsterDamages.length;t++)this.monsterDamages[t]=new H(new u(n.Base,r.Add,()=>1));for(let t=0;t<this.elementDamages.length;t++)this.elementDamages[t]=new H(new u(n.Base,r.Add,()=>1)),t==0?this.elementDamages[t].RegisterMultiplier(new u(n.ArmoredFury,r.Mul,()=>this.stats[15].Value()*Math.log2(Math.max(1,this.basicStats[4].Value())))):this.elementDamages[t].RegisterMultiplier(new u(n.WardedFury,r.Mul,()=>this.stats[16].Value()*Math.log2(Math.max(1,this.basicStats[5].Value()))));for(let t=0;t<this.elementAbsoptions.length;t++)this.elementAbsoptions[t]=new H(new u(n.Base,r.Add,()=>0),()=>.9,()=>0);for(let t=0;t<this.elementInvalids.length;t++)this.elementInvalids[t]=new H(new u(n.Base,r.Add,()=>0));this.guardianKorInvalidDamageHpPercent=new H,this.monsterDistinguishMaxLevel=new H,this.monsterCaptureMaxLevelIncrement=new H,this.materialLootGain=new H(new u(n.Base,r.Add,()=>1)),this.guildExpGain=new H(new u(n.Base,r.Add,()=>1));for(let t=0;t<this.debuffChances.length;t++)this.debuffChances[t]=new H;for(let t=0;t<this.elementSlayerDamages.length;t++)this.elementSlayerDamages[t]=new H;this.channeledMp=new H,this.loyaltyPoingGain=new H(new u(n.Base,r.Add,()=>1)),this.petExpGainPerDefeat=new H(new u(n.Base,r.Add,()=>1)),this.summonPetATKMATKMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.summonPetSPDMoveSpeedMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.extraAfterDamage=new H(new u(n.Base,r.Add,()=>0),()=>100,()=>0)}}class J5{constructor(t){o(this,"data");o(this,"heroLevelIncrementLimit");o(this,"globalStats",Array(N.GlobalStats));o(this,"globalSkillSlotNum");o(this,"heroes",Array(N.HeroKind));o(this,"memoMaxTPGAmongHeroes");o(this,"memoMaxPetEXPGainAmongHeroes");this.data=t;for(let s=0;s<this.heroes.length;s++)this.heroes[s]=new z5(this.data,s);for(let s=0;s<this.globalStats.length;s++)this.globalStats[s]=new H;this.globalStats[0].RegisterMultiplier(new u(n.Base,r.Add,()=>1)),this.globalStats[1].numberType=nt.Normal,this.globalStats[2].numberType=nt.Normal,this.globalStats[3].numberType=nt.Normal,this.heroLevelIncrementLimit=new H(new u(n.Base,r.Add,()=>30))}get currentHero(){return this.heroes[this.data.source.currentHero]}GoldGain(){return this.globalStats[0]}ResourceGain(t){switch(t){case se.Stone:return this.globalStats[1];case se.Crystal:return this.globalStats[2];case se.Leaf:return this.globalStats[3];default:return this.globalStats[1]}}Hero(t){return this.heroes[t]}BasicStats(t,s){return this.heroes[t].basicStats[s]}SetEffectBasicStats(t,s){for(let i=0;i<this.heroes.length;i++)this.BasicStats(i,t).RegisterMultiplier(s)}SetEffectStats(t,s){for(let i=0;i<this.heroes.length;i++)this.HeroStats(i,t).RegisterMultiplier(s)}BasicStatsPerLevel(t,s){return this.heroes[t].basicStatsPerLevel[s]}SetEffectBasicStatsPerLevel(t,s){for(let i=0;i<this.heroes.length;i++)this.BasicStatsPerLevel(i,t).RegisterMultiplier(s)}HeroStats(t,s){return this.heroes[t].stats[s]}ModifiedExpGain(t,s){return this.HeroStats(t,D.ExpGain).Value()/(1+this.data.area.expBonuses[this.data.battle[t].areaBattle.CurrentArea().kind].Value())*(1+this.data.area.expBonuses[s].Value())}SetEffectResourceGain(t){for(let s=0;s<N.ResourceKind;s++)this.ResourceGain(s).RegisterMultiplier(t)}SetEffectGuildExp(t){for(let s=0;s<this.heroes.length;s++)this.heroes[s].guildExpGain.RegisterMultiplier(t)}SetEffectLoyalityPointGain(t){for(let s=0;s<this.heroes.length;s++)this.heroes[s].loyaltyPoingGain.RegisterMultiplier(t)}SetEffectPetEXPGain(t){for(let s=0;s<this.heroes.length;s++)this.heroes[s].petExpGainPerDefeat.RegisterMultiplier(t)}OptionEffectChance(t,s){return this.heroes[t].optionEffectChance[s]}ElementResistance(t,s){switch(s){case B.Physical:return;case B.Fire:return this.heroes[t].stats[0];case B.Ice:return this.heroes[t].stats[1];case B.Thunder:return this.heroes[t].stats[2];case B.Light:return this.heroes[t].stats[3];case B.Dark:return this.heroes[t].stats[4];default:return}}SetEffectElementResistance(t){for(let s=0;s<N.HeroKind;s++)this.ElementResistance(s,B.Fire).RegisterMultiplier(t),this.ElementResistance(s,B.Ice).RegisterMultiplier(t),this.ElementResistance(s,B.Thunder).RegisterMultiplier(t),this.ElementResistance(s,B.Light).RegisterMultiplier(t),this.ElementResistance(s,B.Dark).RegisterMultiplier(t)}HpRegenerate(t){return this.heroes[t].hpRegenerate}MpRegenerate(t){return this.heroes[t].mpRegenerate}SkillSlotNum(t){return this.heroes[t].skillSlotNum}LevelForEquipment(t){return this.heroes[t].levelForEquipment}MonsterDamage(t,s){return this.heroes[t].monsterDamages[s]}ElementDamage(t,s){return this.heroes[t].elementDamages[s]}SetEffectElementDamage(t,s){for(let i=0;i<this.heroes.length;i++)this.ElementDamage(i,t).RegisterMultiplier(s)}SetEffectMagicalDamage(t){this.SetEffectElementDamage(B.Fire,t),this.SetEffectElementDamage(B.Ice,t),this.SetEffectElementDamage(B.Thunder,t),this.SetEffectElementDamage(B.Light,t),this.SetEffectElementDamage(B.Dark,t)}ElementAbsorption(t,s){return this.heroes[t].elementAbsoptions[s]}ElementInvalid(t,s){return this.heroes[t].elementInvalids[s]}MonsterDistinguishMaxLevel(t){return this.heroes[t].monsterDistinguishMaxLevel}MonsterCaptureMaxLevelIncrement(t){return this.heroes[t].monsterCaptureMaxLevelIncrement}MaterialLootGain(t){return this.heroes[t].materialLootGain}DebuffChance(t,s){return this.heroes[t].debuffChances[s]}ElementSlayerDamage(t,s){return this.heroes[t].elementSlayerDamages[s]}Level(t){return this.heroes[t].Level()}MaxPetEXPGainAmongHeroes(){if(this.memoMaxPetEXPGainAmongHeroes)return this.memoMaxPetEXPGainAmongHeroes;let t=0;for(let s=0;s<N.HeroKind;++s){let i=this.Hero(s).petExpGainPerDefeat.Value();i>t&&this.data.source.isActiveBattle[s]&&(t=i)}return this.memoMaxPetEXPGainAmongHeroes=t,t}MaxTPGAmongHeroes(){if(this.memoMaxTPGAmongHeroes)return this.memoMaxTPGAmongHeroes;let t=0;for(let s=0;s<N.HeroKind;s++){let i=this.Hero(s).stats[D.TamingPointGain].Value();i>t&&this.data.source.isActiveBattle[s]&&(t=i)}return this.memoMaxTPGAmongHeroes=t,t}}class us{constructor(t){o(this,"data");this.data=t}Start(){return this.SetEffect()}get level(){return this.data.source.sdGemLevels[this.kind]}set level(t){this.data.source.sdGemLevels[this.kind]=Math.min(t,this.maxLevel)}get kind(){return pt.Sunstone}get maxLevel(){return 10}RequiredExp(t){return 1e300}SetEffect(){}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 0}EffectValue(){return this.initEffectValue+this.effectIncrementPerLevel*this.level}NameString(){return Pe.SDGemString(this.kind).name}EffectValueString(){return Pe.SDGemString(this.kind,this.EffectValue()).description}}class X5 extends us{get kind(){return pt.Almandine}get maxLevel(){return 20}RequiredExp(t){return 864e6*Math.pow(10,t/10)}SetEffect(){return this.data.nitro.maxNitroSpeed.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .1}}class j5 extends us{get kind(){return pt.Amber}get maxLevel(){return 100}RequiredExp(t){return(864e4+864e4*t)*Math.pow(10,t/50)}SetEffect(){return this.data.area.SetEffectDungeonClearCount(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class Y5 extends us{get kind(){return pt.BlueTourmaline}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEQLevel.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class Q5 extends us{get kind(){return pt.Carnelian}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEffectIncrement.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class Z5 extends us{get kind(){return pt.Diamond}get maxLevel(){return 100}RequiredExp(t){return t>=63?864e8*(1+.1*(t-63)):(1728e4+1728e4*t)*Math.pow(2,t/10)}SetEffect(){return this.data.potion.talismanPassiveEffectMultiplier.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class K5 extends us{get kind(){return pt.Emerald}get maxLevel(){return 1e3}RequiredExp(t){return 864e5+864e5*t}SetEffect(){return this.data.sdg.powerupPermEffectMultiplier.RegisterMultiplier(new u(n.SDGemRitual,r.Mul,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class eb extends us{get kind(){return pt.Hackmanite}get maxLevel(){return 300}RequiredExp(t){return t>=157?864e8*(1+.025*(t-157)):(10800+10800*t)*Math.pow(2,t/10)}SetEffect(){return this.data.expedition.lowerLimitTime.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>-this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 2}}class tb extends us{get kind(){return pt.Heliodor}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){return this.data.town.researchEffectMultipliers[1].RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class sb extends us{get kind(){return pt.Kunzite}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEQEffect.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .1}}class ib extends us{get kind(){return pt.Morganite}get maxLevel(){return 500}RequiredExp(t){return t>=181?864e8*(1+.01*(t-181)):(1800+1800*t)*Math.pow(2,t/10)}SetEffect(){return this.data.stats.heroLevelIncrementLimit.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class rb extends us{get kind(){return pt.Obsidian}get maxLevel(){return 1e3}RequiredExp(t){return t>=599?864e8*(1+.01*(t-599)):(36e3+36e3*t)*Math.pow(2,t/50)}SetEffect(){return this.data.monster.monsterDefeatNumMultiplier.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class ab extends us{get kind(){return pt.Peridot}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){return this.data.town.researchEffectMultipliers[2].RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class nb extends us{get kind(){return pt.Sunstone}get maxLevel(){return 1e3}RequiredExp(t){return t>=914?864e8*(1+.05*(t-914)):(300+300*t)*Math.pow(2,t/50)}SetEffect(){return this.data.stats.SetEffectGuildExp(new u(n.SDGemRitual,r.Mul,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class lb extends us{get kind(){return pt.Tanzanite}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){this.data.town.researchEffectMultipliers[0].RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class ub extends us{get kind(){return pt.Turquoise}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.expedition.rewardModifierPerHour.RegisterMultiplier(new u(n.SDGemRitual,r.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .001}}class ob{constructor(t){o(this,"data");o(this,"sdGemList",[]);o(this,"progressSpeedModifier");this.data=t,this.progressSpeedModifier=new H(new u(n.Base,r.Add,()=>1)),this.sdGemList.push(new nb(this.data)),this.sdGemList.push(new ib(this.data)),this.sdGemList.push(new lb(this.data)),this.sdGemList.push(new tb(this.data)),this.sdGemList.push(new ab(this.data)),this.sdGemList.push(new rb(this.data)),this.sdGemList.push(new eb(this.data)),this.sdGemList.push(new ub(this.data)),this.sdGemList.push(new sb(this.data)),this.sdGemList.push(new Q5(this.data)),this.sdGemList.push(new Y5(this.data)),this.sdGemList.push(new j5(this.data)),this.sdGemList.push(new Z5(this.data)),this.sdGemList.push(new X5(this.data)),this.sdGemList.push(new K5(this.data))}Start(){for(let t=0;t<this.sdGemList.length;t++)this.sdGemList[t].Start()}Gem(t){for(let s=0;s<this.sdGemList.length;s++)if(this.sdGemList[s].kind==t)return this.sdGemList[s];return null}}class ye{constructor(t){o(this,"sdgCtrl");o(this,"effectValue");this.sdgCtrl=t}get sdUpgradeCtrl(){return this.sdgCtrl.upgradeCtrl}get kind(){return K.MorePowerups}get level(){return this.sdgCtrl.data.source.superDungeonUpgradeLevels[this.kind]}set level(t){this.sdgCtrl.data.source.superDungeonUpgradeLevels[this.kind]=Math.min(t,this.maxLevel)}Start(){this.SetEffect()}SetEffect(){}get maxLevel(){return 1}Cost(t){return 1e300}TotalCost(){let t=0;for(let s=0;s<this.level;s++)t+=this.Cost(s);return t}ModifiedCost(t){return this.Cost(t)*this.sdUpgradeCtrl.costReduction.Value()}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 0}EffectValue(t=this.level){return this.initEffectValue+t*this.incrementEffectValuePerLevel}IsActive(){return!0}NameString(){return Pe.SDUpgradeString(this.kind).name}EffectValueString(){const t=Pe.SDUpgradeString(this.kind,this.EffectValue());return t.description+" "+t.value}}class cb extends ye{get kind(){return K.AlchemyPointGainMul}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class hb extends ye{get kind(){return K.ArmoredFuryMultiplier}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.ArmoredFury,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class fb extends ye{get kind(){return K.ATKMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.ATK,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class db extends ye{get kind(){return K.AutoBuyPowerups}get isAutomation(){return!0}Cost(t){return 30*Math.pow(5,t)}get maxLevel(){return 5}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class pb extends ye{get kind(){return K.AutoDodge}get isAutomation(){return!0}Cost(t){return 50}SetEffect(){}get maxLevel(){return 1}}class gb extends ye{get kind(){return K.AutoLeaveAndRetry}get isAutomation(){return!0}Cost(t){return 20}SetEffect(){}get maxLevel(){return 1}}class mb extends ye{get kind(){return K.AutoProgress}get isAutomation(){return!0}Cost(t){return 10}get maxLevel(){return 1}}class Mb extends ye{get kind(){return K.AutoUseRefreshTicket}get isAutomation(){return!0}Cost(t){return 100}get maxLevel(){return 1}}class wb extends ye{get kind(){return K.BoostStartGoodRNG}Cost(t){return 1e5}get maxLevel(){return 1}}class Sb extends ye{get kind(){return K.CriticalDamageMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.CriticalDamage,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Ab extends ye{get kind(){return K.CrystalGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(se.Crystal).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class bb extends ye{get kind(){return K.CrystalResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[1].RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class kb extends ye{constructor(){super(...arguments);o(this,"ó")}get kind(){return K.DamageToChallengeBossMultiplier}Cost(s){return(1e4+1e4*s)*Math.pow(2,s/5)}SetEffect(){for(let s=0;s<N.HeroKind;s++)this.sdgCtrl.data.stats.MonsterDamage(s,Z.ChallengeBoss).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Eb extends ye{get kind(){return K.DamageToRegularMonstersMultiplier}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.stats.MonsterDamage(t,Z.Slime).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.MagicSlime).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.Spider).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.Bat).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.Fairy).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.Fox).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.DevilFish).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.Treant).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.FlameTiger).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,Z.Unicorn).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Db extends ye{get kind(){return K.DebuffResistanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.DebuffRes,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Rb extends ye{get kind(){return K.DEFMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.DEF,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Cb extends ye{get kind(){return K.ElementResistanceMultiplier}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){this.sdgCtrl.data.stats.SetEffectStats(D.FireRes,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(D.IceRes,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(D.ThunderRes,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(D.LightRes,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(D.DarkRes,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class yb extends ye{get kind(){return K.EquipmentProficiencyGainMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/15)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Pb extends ye{get kind(){return K.FameGain}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/10)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.superStats.Hero(t).fameGain.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class vb extends ye{get kind(){return K.FlexibleDodge}get isAutomation(){return!0}Cost(t){return 5}SetEffect(){}get maxLevel(){return 1}}class Bb extends ye{get kind(){return K.GoldCap}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.resource.goldCap.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class Lb extends ye{get kind(){return K.GoldGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.GoldGain().RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Tb extends ye{get kind(){return K.GuildEXPGainMul}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/5)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectGuildExp(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .001}}class xb extends ye{get kind(){return K.HeroExpGainMul}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.ExpGain,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}}class Gb extends ye{get kind(){return K.HPMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.HP,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Fb extends ye{get kind(){return K.LeafGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(se.Leaf).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class Ib extends ye{get kind(){return K.LeafResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[2].RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class Hb extends ye{get kind(){return K.LeaveAndRetry}get isAutomation(){return!0}Cost(t){return 1}get maxLevel(){return 1}}class _b extends ye{get kind(){return K.LoyaltyPointGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectLoyalityPointGain(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Vb extends ye{get kind(){return K.MagicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.MagCritChance,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Nb extends ye{get kind(){return K.MagicalDamageMultiplier}Cost(t){return(1500+1500*t)*Math.pow(2,t/10)}SetEffect(){this.sdgCtrl.data.stats.SetEffectElementDamage(B.Fire,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(B.Ice,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(B.Thunder,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(B.Light,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(B.Dark,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class qb extends ye{get kind(){return K.MATKMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.MATK,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Ub extends ye{get kind(){return K.MDEFMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.MDEF,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Wb extends ye{get kind(){return K.MorePowerups}Cost(t){return 100*Math.pow(1e3,t)}SetEffect(){return this.sdgCtrl.powerupShowNum.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue()))}get maxLevel(){return 3}get initEffectValue(){return 2}get incrementEffectValuePerLevel(){return 1}}class Ob extends ye{get kind(){return K.MPMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.MP,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class $b extends ye{get kind(){return K.PetCriticalDamageMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.PetCriticalDamage,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class zb extends ye{get kind(){return K.PetDebuffResistanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.PetDebuffResistance,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Jb extends ye{get kind(){return K.PetEXPGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectPetEXPGain(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Xb extends ye{get kind(){return K.PetMagicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.PetMagCritChance,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class jb extends ye{get kind(){return K.PetPhysicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.PetPhysCritChance,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Yb extends ye{get kind(){return K.PhysicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.PhysCritChance,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Qb extends ye{get kind(){return K.PhysicalDamageMultiplier}Cost(t){return(1500+1500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectElementDamage(B.Physical,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Zb extends ye{get kind(){return K.PowerupFilterSlot}get isAutomation(){return!0}Cost(t){return 10*Math.pow(3,t)}SetEffect(){return this.sdgCtrl.powerupFilterSlot.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue()))}get maxLevel(){return 5}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class Kb extends ye{get kind(){return K.SDArmoredFury}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDUpgrade1]}}class ek extends ye{get kind(){return K.SDChallengeBossDamageCutMultiplier}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDUpgrade1]}}class tk extends ye{get kind(){return K.SDChallengeBossDamageMultiplier}Cost(t){return(50+50*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDUpgrade1]}}class sk extends ye{get kind(){return K.SDDamageCutMultiplier}Cost(t){return(20+20*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDUpgrade1]}}class ik extends ye{get kind(){return K.SDDamageMultiplier}Cost(t){return(10+10*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDUpgrade1]}}class rk extends ye{get kind(){return K.SDDungeonCoinBoostStart}Cost(t){return(500+500*t)*Math.pow(2,t/5)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.initialDungeonCoin.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 5}}class ak extends ye{get kind(){return K.SDMPGainEveryFloor}Cost(t){return(200+200*t)*Math.pow(2,t/5)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.mpChargePercentEveryFloor.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue()))}get maxLevel(){return 100}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}}class nk extends ye{get kind(){return K.SDPowerupBoostStart}Cost(t){return 5e4}SetEffect(){}get maxLevel(){return 1}}class lk extends ye{get kind(){return K.SDUpgreadeSuperQueue}get isAutomation(){return!0}Cost(t){return 40*Math.pow(5,t)}SetEffect(){return this.sdUpgradeCtrl.availableSuperQueue.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue()))}get maxLevel(){return 3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class uk extends ye{get kind(){return K.SDWardedFury}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<N.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.SDUpgrade,r.Add,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+Rt.RemoveSDUpgrade1]}}class ok extends ye{get kind(){return K.SkillProficiencyGainMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/15)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.SkillProficiencyGain,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ck extends ye{get kind(){return K.SlimeCoinCap}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class hk extends ye{get kind(){return K.SPDMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.SPD,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class fk extends ye{get kind(){return K.StoneGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(se.Stone).RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class dk extends ye{get kind(){return K.StoneResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[0].RegisterMultiplier(new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class pk extends ye{get kind(){return K.TamingPointGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.TamingPointGain,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class gk extends ye{get kind(){return K.WardedFuryMultiplier}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(D.WardedFury,new u(n.SDUpgrade,r.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class mk{constructor(t){o(this,"sdgCtrl");o(this,"automationList",[]);o(this,"upgrade1ist",[]);o(this,"upgrade2ist",[]);o(this,"upgrade3ist",[]);o(this,"upgrade4ist",[]);o(this,"upgradeList",[]);o(this,"upgradeListArray",[]);o(this,"costReduction");o(this,"availableSuperQueue");this.sdgCtrl=t,this.availableSuperQueue=new H,this.SetUpgrade(),this.costReduction=new H(new u(n.Base,r.Add,()=>0),()=>.99,null)}SetUpgrade(){this.automationList.push(new Hb(this.sdgCtrl)),this.automationList.push(new mb(this.sdgCtrl)),this.automationList.push(new gb(this.sdgCtrl)),this.automationList.push(new db(this.sdgCtrl)),this.automationList.push(new Mb(this.sdgCtrl)),this.automationList.push(new Zb(this.sdgCtrl)),this.automationList.push(new vb(this.sdgCtrl)),this.automationList.push(new pb(this.sdgCtrl)),this.automationList.push(new lk(this.sdgCtrl)),this.upgrade1ist.push(new ik(this.sdgCtrl)),this.upgrade1ist.push(new sk(this.sdgCtrl)),this.upgrade1ist.push(new tk(this.sdgCtrl)),this.upgrade1ist.push(new ek(this.sdgCtrl)),this.upgrade1ist.push(new Kb(this.sdgCtrl)),this.upgrade1ist.push(new uk(this.sdgCtrl)),this.upgrade1ist.push(new Wb(this.sdgCtrl)),this.upgrade1ist.push(new ak(this.sdgCtrl)),this.upgrade1ist.push(new rk(this.sdgCtrl)),this.upgrade1ist.push(new nk(this.sdgCtrl)),this.upgrade1ist.push(new wb(this.sdgCtrl)),this.upgrade1ist.push(new Pb(this.sdgCtrl)),this.upgrade2ist.push(new xb(this.sdgCtrl)),this.upgrade2ist.push(new Bb(this.sdgCtrl)),this.upgrade2ist.push(new Lb(this.sdgCtrl)),this.upgrade2ist.push(new fk(this.sdgCtrl)),this.upgrade2ist.push(new Ab(this.sdgCtrl)),this.upgrade2ist.push(new Fb(this.sdgCtrl)),this.upgrade2ist.push(new ck(this.sdgCtrl)),this.upgrade3ist.push(new Gb(this.sdgCtrl)),this.upgrade3ist.push(new Ob(this.sdgCtrl)),this.upgrade3ist.push(new fb(this.sdgCtrl)),this.upgrade3ist.push(new qb(this.sdgCtrl)),this.upgrade3ist.push(new Rb(this.sdgCtrl)),this.upgrade3ist.push(new Ub(this.sdgCtrl)),this.upgrade3ist.push(new hk(this.sdgCtrl)),this.upgrade3ist.push(new Yb(this.sdgCtrl)),this.upgrade3ist.push(new Vb(this.sdgCtrl)),this.upgrade3ist.push(new Sb(this.sdgCtrl)),this.upgrade3ist.push(new Qb(this.sdgCtrl)),this.upgrade3ist.push(new Nb(this.sdgCtrl)),this.upgrade3ist.push(new hb(this.sdgCtrl)),this.upgrade3ist.push(new gk(this.sdgCtrl)),this.upgrade3ist.push(new Cb(this.sdgCtrl)),this.upgrade3ist.push(new Db(this.sdgCtrl)),this.upgrade3ist.push(new jb(this.sdgCtrl)),this.upgrade3ist.push(new Xb(this.sdgCtrl)),this.upgrade3ist.push(new $b(this.sdgCtrl)),this.upgrade3ist.push(new zb(this.sdgCtrl)),this.upgrade4ist.push(new Eb(this.sdgCtrl)),this.upgrade4ist.push(new kb(this.sdgCtrl)),this.upgrade4ist.push(new ok(this.sdgCtrl)),this.upgrade4ist.push(new yb(this.sdgCtrl)),this.upgrade4ist.push(new Tb(this.sdgCtrl)),this.upgrade4ist.push(new pk(this.sdgCtrl)),this.upgrade4ist.push(new Jb(this.sdgCtrl)),this.upgrade4ist.push(new _b(this.sdgCtrl)),this.upgrade4ist.push(new cb(this.sdgCtrl)),this.upgrade4ist.push(new dk(this.sdgCtrl)),this.upgrade4ist.push(new bb(this.sdgCtrl)),this.upgrade4ist.push(new Ib(this.sdgCtrl)),this.upgradeList=[...this.automationList,...this.upgrade1ist,...this.upgrade2ist,...this.upgrade3ist,...this.upgrade4ist],this.upgradeListArray[0]=this.automationList,this.upgradeListArray[1]=this.upgrade1ist,this.upgradeListArray[2]=this.upgrade2ist,this.upgradeListArray[3]=this.upgrade3ist,this.upgradeListArray[4]=this.upgrade4ist}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start()}Upgrade(t){for(let s=0;s<this.upgradeList.length;s++)if(this.upgradeList[s].kind==t)return this.upgradeList[s];return this.upgradeList[0]}}class Mk{constructor(t,s){o(this,"data");o(this,"id");this.data=t,this.id=s}get sdgCtrl(){return this.data.sdg}get purchasedNum(){return this.data.source.superDungeonShopPurchasedNums[this.id]}set purchasedNum(t){this.data.source.superDungeonShopPurchasedNums[this.id]=Math.min(this.maxLevel,t)}get effectValue(){return this.EffectValue(this.purchasedNum)}get maxLevel(){return 1}Start(){this.SetEffect()}SetEffect(){}RubyCost(t){return 1}EffectValue(t){return t}NameString(){return Pe.SDShopNameString(this.id)}EffectValueString(){return Pe.SDShopEffectValueString(this.id,this.EffectValue(this.purchasedNum),this.EffectValue(1),this.data.equipment.ArtifactEffectMultiplier())}}class Ks extends Mk{constructor(t,s){super(t,s)}EffectValue(t){return t}get effectValue(){return this.EffectValue(this.purchasedNum)}get maxLevel(){return 1}}var yr;class wk extends Ks{constructor(s,i){super(s,i);Kt(this,yr,void 0);es(this,yr,s)}RubyCost(s){return 5+s*5}get maxLevel(){return 1e3}EffectValue(s){return .001*s}SetEffect(){return R(this,yr).equipment.effectMultiplierModifierForArtifact.RegisterMultiplier(new u(n.SDShop,r.Add,()=>this.effectValue))}}yr=new WeakMap;var Pr;class Sk extends Ks{constructor(s,i){super(s,i);Kt(this,Pr,void 0);es(this,Pr,s)}RubyCost(s){return 5}get maxLevel(){return 1e3}EffectValue(s){return .1*s}SetEffect(){return R(this,Pr).resource.goldCap.RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue))}}Pr=new WeakMap;class Ak extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 5}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.GoldGain().RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue))}}class bk extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .01*t}SetEffect(){return this.data.stats.SetEffectGuildExp(new u(n.SDShop,r.Mul,()=>this.effectValue))}}class kk extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.SetEffectLoyalityPointGain(new u(n.SDShop,r.Mul,()=>this.effectValue))}}class Ek extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .2*t}SetEffect(){this.data.town.researchPower[0].RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue)),this.data.town.researchPower[1].RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue)),this.data.town.researchPower[2].RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue))}}class Dk extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .05*t}SetEffect(){return this.data.challenge.sdStatRewardMultiplier.RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue))}}class Rk extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 5}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.SDShop,r.Mul,()=>this.effectValue))}}class Ck extends Ks{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.SDShop,r.Mul,()=>this.effectValue))}}class yk{constructor(t){o(this,"data");o(this,"itemList",[]);o(this,"itemStatBonusList",[]);o(this,"rubyConverterPieceOfRubyCost");o(this,"pieceOfRubyConverterPieceOfRubyGain");this.data=t,this.rubyConverterPieceOfRubyCost=new H(new u(n.Base,r.Add,()=>5e4)),this.pieceOfRubyConverterPieceOfRubyGain=new H(new u(n.Base,r.Add,()=>5e3))}Start(){this.SetItem();for(let t=0;t<this.itemList.length;t++)this.itemList[t].Start()}SetItem(){this.itemStatBonusList.push(new wk(this.data,27)),this.itemStatBonusList.push(new Dk(this.data,57)),this.itemStatBonusList.push(new Sk(this.data,58)),this.itemStatBonusList.push(new Ak(this.data,59)),this.itemStatBonusList.push(new Rk(this.data,60)),this.itemStatBonusList.push(new bk(this.data,61)),this.itemStatBonusList.push(new Ck(this.data,62)),this.itemStatBonusList.push(new kk(this.data,63)),this.itemStatBonusList.push(new Ek(this.data,64)),this.itemList=[...this.itemStatBonusList]}Item(t){for(let s=0;s<this.itemList.length;s++)if(this.itemList[s].id==t)return this.itemList[s];return null}}class Pk{constructor(t){o(this,"data");this.data=t}Total(){return this.data.source.maxModifierCleareds.reduce((t,s)=>t+s,0)}Start(){this.SetModifierMilestones()}isCleared(t){return this.Total()>=t}SetModifierMilestones(){this.data.sdg.upgradeCtrl.availableSuperQueue.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(10))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(30))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(60))),this.data.sdg.powerupFilterLoadoutSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(100))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(110))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(130))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(150))),this.data.sdg.lootGainOnDie.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>.25,()=>this.isCleared(170))),this.data.sdg.PowerupEffectMultiplier(me.DamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(180))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(240))),this.data.sdg.powerupMaxRank.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>25,()=>this.isCleared(300))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(320))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(360))),this.data.sdg.PowerupEffectMultiplier(me.PhysicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(400))),this.data.sdg.PowerupEffectMultiplier(me.MagicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(420))),this.data.sdg.modifierLoadoutSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(440))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(480))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(500))),this.data.sdg.PowerupEffectMultiplier(me.CriticalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(550))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(600))),this.data.sdg.PowerupEffectMultiplier(me.PhysicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(625))),this.data.sdg.PowerupEffectMultiplier(me.MagicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(650))),this.data.sdg.PowerupEffectMultiplier(me.DamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(675))),this.data.sdg.PowerupEffectMultiplier(me.ChallengeBossDamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(700))),this.data.sdg.powerupMaxRank.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>25,()=>this.isCleared(725))),this.data.sdg.PowerupEffectMultiplier(me.DamageCutMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(825))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(875))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(900))),this.data.sdg.PowerupEffectMultiplier(me.DungeonCoinGain).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(925))),this.data.sdg.upgradeCtrl.availableSuperQueue.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(950))),this.data.sdg.PowerupEffectMultiplier(me.ChallengeBossDamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(975))),this.data.quest.sdRefreshTicketFromDailyQuest.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(1e3))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(1025))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(1050))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(1075))),this.data.sdg.PowerupEffectMultiplier(me.FameGain).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(1100))),this.data.sdg.PowerupEffectMultiplier(me.PhysicalAbsorption).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(1125))),this.data.sdg.PowerupEffectMultiplier(me.MagicalAbsorption).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(1150))),this.data.sdg.PowerupEffectMultiplier(me.SkillCastSpeed).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(1175))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(1225))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(1275))),this.data.sdg.PowerupEffectMultiplier(me.SkillHitCount).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(1300))),this.data.sdg.PowerupEffectMultiplier(me.ExtraAfterDamage).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(1325))),this.data.sdg.PowerupEffectMultiplier(me.PhysicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1350))),this.data.sdg.PowerupEffectMultiplier(me.MagicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1375))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(1425))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(1475))),this.data.sdg.PowerupEffectMultiplier(me.PhysicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1550))),this.data.sdg.PowerupEffectMultiplier(me.MagicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1575))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(1600))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>500,()=>this.isCleared(1625))),this.data.sdg.PowerupEffectMultiplier(me.DungeonCoinGain).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1650))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>-1e3,()=>this.isCleared(1675))),this.data.sdg.PowerupEffectMultiplier(me.FameGain).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1750))),this.data.sdg.PowerupEffectMultiplier(me.DamageCutMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.3,()=>this.isCleared(1850))),this.data.sdg.PowerupEffectMultiplier(me.DamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.5,()=>this.isCleared(1900))),this.data.sdg.PowerupEffectMultiplier(me.EquipmentDropChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.2,()=>this.isCleared(2100))),this.data.sdg.PowerupEffectMultiplier(me.ChallengeBossDamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.5,()=>this.isCleared(2200))),this.data.sdg.PowerupEffectMultiplier(me.PhysicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.5,()=>this.isCleared(2250))),this.data.sdg.PowerupEffectMultiplier(me.MagicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,r.Mul,()=>.5,()=>this.isCleared(2300))),this.data.quest.sdRefreshTicketFromDailyQuest.RegisterMultiplier(new u(n.SDModifierMilestone,r.Add,()=>1,()=>this.isCleared(3e3)))}}class vk{constructor(t){o(this,"data");o(this,"dungeonCoinGain");o(this,"dungeonCoinBonus");o(this,"powerupShowNum");o(this,"dodgeTimesec");o(this,"additionalTimeLimit");o(this,"lootGainOnDie");o(this,"modifierMilestoneCtrl");o(this,"modifierLoadoutSlot");o(this,"shopCtrl");o(this,"sdGemRitualCtrl");o(this,"powerupMaxRank");o(this,"powerupFilterSlot");o(this,"powerupFilterLoadoutSlot");o(this,"powerupEffectMultiplier",Array(N.SuperDungeonPowerupKind));o(this,"powerupPermEffectMultiplier");o(this,"autoBuyPowerupsTimesEveryFloor");o(this,"upgradeCtrl");this.data=t,this.dungeonCoinGain=new H(new u(n.Base,r.Add,()=>1)),this.dungeonCoinBonus=new H,this.dodgeTimesec=new H(new u(n.Base,r.Add,()=>10)),this.powerupShowNum=new H(new u(n.Base,r.Add,()=>1),()=>5,()=>2),this.autoBuyPowerupsTimesEveryFloor=new H,this.additionalTimeLimit=new H,this.lootGainOnDie=new H,this.powerupMaxRank=new H(new u(n.Base,r.Add,()=>50)),this.powerupFilterSlot=new H,this.powerupFilterLoadoutSlot=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.powerupEffectMultiplier.length;s++)this.powerupEffectMultiplier[s]=new H(new u(n.Base,r.Add,()=>1));this.powerupPermEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.upgradeCtrl=new mk(this),this.shopCtrl=new yk(this.data),this.sdGemRitualCtrl=new ob(this.data),this.modifierMilestoneCtrl=new Pk(this.data),this.modifierLoadoutSlot=new H(new u(n.Base,r.Add,()=>1))}SetPowerupGlobalEffect(){for(let t=0;t<N.SuperDungeonPowerupKind;t++)this.data.battle.superDungeonCtrl.powerupList[t].SetGlobalEffect()}Start(){this.shopCtrl.Start(),this.upgradeCtrl.Start(),this.sdGemRitualCtrl.Start(),this.SetPowerupGlobalEffect(),this.modifierMilestoneCtrl.Start()}PowerupEffectMultiplier(t){return this.powerupEffectMultiplier[t]}SetEffectSDDamageMultiplier(t){for(let s=0;s<N.HeroKind;s++)this.data.battles[s].superDungeonCtrl.damageMultiplier.RegisterMultiplier(t)}SetEffectSDDamageCutMultiplier(t){for(let s=0;s<N.HeroKind;s++)this.data.battles[s].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(t)}SetEffectSDChallengeBossDamageMultiplier(t){for(let s=0;s<N.HeroKind;s++)this.data.battles[s].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(t)}SetEffectSDChallengeBossDamageCutMultiplier(t){for(let s=0;s<N.HeroKind;s++)this.data.battles[s].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(t)}SetEffectSDArmoredFuryMultiplier(t){for(let s=0;s<N.HeroKind;s++)this.data.battles[s].superDungeonCtrl.armoredFury.RegisterMultiplier(t)}SetEffectSDWardedFuryMultiplier(t){for(let s=0;s<N.HeroKind;s++)this.data.battles[s].superDungeonCtrl.wardedFury.RegisterMultiplier(t)}}class Bk{constructor(t,s,i){o(this,"data");o(this,"heroKind");o(this,"kind");this.data=t,this.heroKind=s,this.kind=i}get value(){switch(this.kind){case C.Vitality:return this.data.source.superAbilityPointsVitality[this.heroKind];case C.Strength:return this.data.source.superAbilityPointsStrength[this.heroKind];case C.Intelligence:return this.data.source.superAbilityPointsIntelligence[this.heroKind];case C.Agility:return this.data.source.superAbilityPointsAgility[this.heroKind];case C.Luck:return this.data.source.superAbilityPointsLuck[this.heroKind];default:return 0}}Point(){return this.value}}class Lk{constructor(t,s){o(this,"data");o(this,"heroKind");o(this,"superAbilities",Array(N.AbilityKind));o(this,"fameGain");o(this,"timecountSec");this.data=t,this.heroKind=s,this.fameGain=new H(new u(n.Base,r.Add,()=>1));for(let i=0;i<this.superAbilities.length;i++)this.superAbilities[i]=new Bk(this.data,s,i)}get grade(){return this.data.source.heroGrade[this.heroKind]}Start(){this.SetStats(),this.SetGradeMilestone()}SuperAbility(t){return this.superAbilities[t]}SetStats(){for(let t=0;t<N.BasicStatsKind;t++)this.SetBasicStats(t);this.data.stats.HeroStats(this.heroKind,D.PhysCritChance).RegisterMultiplier(new u(n.SuperAbility,r.Mul,()=>.01*this.SuperAbility(C.Luck).Point())),this.data.stats.HeroStats(this.heroKind,D.PhysCritChance).RegisterMultiplier(new u(n.SuperAbility,r.After,()=>ts.stats[this.heroKind][7]*this.SuperAbility(C.Luck).Point())),this.data.stats.HeroStats(this.heroKind,D.MagCritChance).RegisterMultiplier(new u(n.SuperAbility,r.Mul,()=>.01*this.SuperAbility(C.Luck).Point())),this.data.stats.HeroStats(this.heroKind,D.MagCritChance).RegisterMultiplier(new u(n.SuperAbility,r.After,()=>ts.stats[this.heroKind][8]*this.SuperAbility(C.Luck).Point())),this.data.stats.HeroStats(this.heroKind,D.CriticalDamage).RegisterMultiplier(new u(n.SuperAbility,r.Mul,()=>.01*(this.SuperAbility(C.Agility).Point()+this.SuperAbility(C.Luck).Point())/2)),this.data.stats.HeroStats(this.heroKind,D.CriticalDamage).RegisterMultiplier(new u(n.SuperAbility,r.After,()=>1e-4*(this.SuperAbility(C.Agility).Point()+this.SuperAbility(C.Luck).Point())/2)),this.data.stats.HeroStats(this.heroKind,D.MoveSpeed).RegisterMultiplier(new u(n.SuperAbility,r.Mul,()=>.01*this.SuperAbility(C.Agility).Point())),this.data.stats.HeroStats(this.heroKind,D.MoveSpeed).RegisterMultiplier(new u(n.SuperAbility,r.After,()=>ts.stats[this.heroKind][11]*Math.pow(this.SuperAbility(C.Agility).Point(),2/3)))}SetBasicStats(t){let s=new u(n.SuperAbility,r.Mul,()=>this.BasicStatsIncrementMul(t));this.data.stats.BasicStats(this.heroKind,t).RegisterMultiplier(s);let i=new u(n.SuperAbility,r.After,()=>this.BasicStatsIncrementAfter(t));this.data.stats.BasicStats(this.heroKind,t).RegisterMultiplier(i)}BasicStatsIncrementBase(t){switch(t){case m.HP:return this.SuperAbility(C.Vitality).Point();case m.MP:return this.SuperAbility(C.Agility).Point()+this.SuperAbility(C.Intelligence).Point();case m.ATK:return this.SuperAbility(C.Strength).Point();case m.MATK:return this.SuperAbility(C.Intelligence).Point();case m.DEF:return(this.SuperAbility(C.Vitality).Point()+this.SuperAbility(C.Strength).Point())/2;case m.MDEF:return(this.SuperAbility(C.Vitality).Point()+this.SuperAbility(C.Intelligence).Point())/2;case m.SPD:return this.SuperAbility(C.Agility).Point();default:return 0}}BasicStatsIncrementMul(t){return this.BasicStatsIncrementBase(t)*.01}BasicStatsIncrementAfter(t){return this.BasicStatsIncrementBase(t)*ts.stats[this.heroKind][t]}SetGradeMilestone(){this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=10)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=20)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.2,()=>this.grade>=30)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=40)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.2,()=>this.grade>=50)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=60)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.2,()=>this.grade>=70)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=80)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.3,()=>this.grade>=90)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=100)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.3,()=>this.grade>=110)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=120)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.3,()=>this.grade>=130)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=140)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.4,()=>this.grade>=150)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.4,()=>this.grade>=160)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.4,()=>this.grade>=170)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.1,()=>this.grade>=180)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.1,()=>this.grade>=190)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.1,()=>this.grade>=200)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=210)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.5,()=>this.grade>=220)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.5,()=>this.grade>=230)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.5,()=>this.grade>=240)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.2,()=>this.grade>=250)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.2,()=>this.grade>=260)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.2,()=>this.grade>=270)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=280)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.6,()=>this.grade>=290)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.6,()=>this.grade>=300)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.6,()=>this.grade>=310)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.3,()=>this.grade>=320)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.3,()=>this.grade>=330)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.3,()=>this.grade>=340)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=350)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.7,()=>this.grade>=360)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.7,()=>this.grade>=370)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.7,()=>this.grade>=380)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.4,()=>this.grade>=390)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.4,()=>this.grade>=400)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.4,()=>this.grade>=410)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=420)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.8,()=>this.grade>=430)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.8,()=>this.grade>=440)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.8,()=>this.grade>=450)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.5,()=>this.grade>=460)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.5,()=>this.grade>=470)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.5,()=>this.grade>=480)),this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=490)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.9,()=>this.grade>=500)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.9,()=>this.grade>=510)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.9,()=>this.grade>=520)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.6,()=>this.grade>=530)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.6,()=>this.grade>=540)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.6,()=>this.grade>=550)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=560)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1,()=>this.grade>=570)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1,()=>this.grade>=580)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1,()=>this.grade>=590)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.7,()=>this.grade>=600)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.7,()=>this.grade>=610)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.7,()=>this.grade>=620)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=630)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1.25,()=>this.grade>=640)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1.25,()=>this.grade>=650)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1.25,()=>this.grade>=660)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.8,()=>this.grade>=670)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.8,()=>this.grade>=680)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.8,()=>this.grade>=690)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=700)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1.5,()=>this.grade>=710)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1.5,()=>this.grade>=720)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1.5,()=>this.grade>=730)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.9,()=>this.grade>=740)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.9,()=>this.grade>=750)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>.9,()=>this.grade>=760)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=770)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>2,()=>this.grade>=780)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>2,()=>this.grade>=790)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>2,()=>this.grade>=800)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1,()=>this.grade>=810)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1,()=>this.grade>=820)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,r.Mul,()=>1,()=>this.grade>=830)),this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.RegisterMultiplier(new u(n.GradeMilestone,r.Add,()=>1,()=>this.grade>=840))}}class Tk{constructor(t){o(this,"data");o(this,"heroes",Array(N.HeroKind));this.data=t;for(let s=0;s<this.heroes.length;s++)this.heroes[s]=new Lk(this.data,s)}Start(){for(let t=0;t<this.heroes.length;t++)this.heroes[t].Start()}Hero(t){return this.heroes[t]}get currentHero(){return this.heroes[this.data.source.currentHero]}}class Ga{constructor(t,s){o(this,"data");o(this,"building");o(this,"kind");o(this,"townCtrl");this.data=t.data,this.townCtrl=t.townCtrl,this.building=t,this.kind=s,this.SetResearch()}get level(){switch(this.kind){case se.Stone:return this.data.source.buildingResearchLevelsStone[this.building.kind];case se.Crystal:return this.data.source.buildingResearchLevelsCrystal[this.building.kind];case se.Leaf:return this.data.source.buildingResearchLevelsLeaf[this.building.kind];default:return 0}}set level(t){switch(this.kind){case se.Stone:this.data.source.buildingResearchLevelsStone[this.building.kind]=Math.min(this.building.Level(),t);break;case se.Crystal:this.data.source.buildingResearchLevelsCrystal[this.building.kind]=Math.min(this.building.Level(),t);break;case se.Leaf:this.data.source.buildingResearchLevelsLeaf[this.building.kind]=Math.min(this.building.Level(),t);break}}get effectValue(){const t=[[.1,.05,.0075],[0,.0075,1],[.01,.01,5],[2,.05,.0075],[.025,5,1],[2e-5,1,.02],[.001,1,.02],[0,.025,.025],[.05,.05,.05],[],[],[.01,.05,.1]],s=this.level*t[this.building.kind][this.kind]*this.townCtrl.researchEffectMultipliers[this.kind].Value();return this.building.kind==fe.Cartographer&&this.kind==se.Crystal||this.building.kind==fe.Blacksmith&&this.kind==se.Leaf||this.building.kind==fe.StatueOfHeroes&&this.kind==se.Leaf?Math.min(.9,s):this.building.kind==fe.Temple&&this.kind==se.Leaf?Math.min(100,s):this.building.kind==fe.Blacksmith&&this.kind==se.Crystal?Math.min(10,s):this.building.kind==fe.Blacksmith&&this.kind==se.Stone?Math.min(250,s):s}SetResearch(){switch(this.building.kind){case fe.AdventuringParty:switch(this.kind){case se.Stone:this.data.expedition.rewardMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Crystal:this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Leaf:this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break}break;case fe.AlchemistsHut:switch(this.kind){case se.Stone:this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Crystal:this.data.alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Leaf:this.data.alchemy.maxMysteriousWaterExpandedCapNum.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break}break;case fe.ArcaneResearcher:switch(this.kind){case se.Stone:this.townCtrl.researchPower[0].RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Crystal:this.townCtrl.researchPower[1].RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Leaf:this.townCtrl.researchPower[2].RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break}break;case fe.Blacksmith:switch(this.kind){case se.Stone:this.data.equipment.autoDisassembleAvailableNum.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Crystal:this.data.equipment.disassembleMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Leaf:this.data.craft.costReduction.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break}break;case fe.Cartographer:switch(this.kind){case se.Stone:break;case se.Crystal:this.data.area.areaDebuffReduction.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Leaf:this.data.area.townMaterialGainBonus.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break}break;case fe.MysticArena:switch(this.kind){case se.Stone:this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Crystal:this.data.challenge.permanentRewardMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Leaf:this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break}break;case fe.Trapper:switch(this.kind){case se.Stone:this.data.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Crystal:this.data.shop.restockNumTrap.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Leaf:this.data.stats.SetEffectStats(D.TamingPointGain,new u(n.TownResearch,r.Mul,()=>this.effectValue));break}break;case fe.Temple:switch(this.kind){case se.Stone:this.data.blessingInfo.SetEffectMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Crystal:this.data.blessingInfo.duration.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Leaf:this.data.rebirth.requiredHeroLevelReduction.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break}break;case fe.StatueOfHeroes:switch(this.kind){case se.Stone:this.data.stats.SetEffectResourceGain(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Crystal:this.data.resource.goldCap.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break;case se.Leaf:this.townCtrl.levelCostReduction.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break}break;case fe.SlimeBank:switch(this.kind){case se.Stone:this.data.resource.slimeCoinInterest.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Crystal:this.data.shop.restockNumMaterial.RegisterMultiplier(new u(n.TownResearch,r.Add,()=>this.effectValue));break;case se.Leaf:this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.TownResearch,r.Mul,()=>this.effectValue));break}break}}EffectValueString(){switch(this.building.kind){case fe.StatueOfHeroes:switch(this.kind){case se.Stone:return`Resource Gain ${h.percent(this.effectValue)}`;case se.Crystal:return`Gold Cap ${h.percent(this.effectValue)}`;case se.Leaf:return`Reduce the cost of all building levels by ${h.percent(this.effectValue)}`}case fe.AlchemistsHut:switch(this.kind){case se.Stone:return`Mysterious Water Gain ${h.tDigit(this.effectValue)} / sec`;case se.Crystal:return`Essence Conversion Rate ${h.percent(this.effectValue)}`;case se.Leaf:return`Max Mysterious Water Cap ${h.tDigit(this.effectValue,0)}`}case fe.Cartographer:switch(this.kind){case se.Stone:return`Dungeon's Time Limit ${h.tDigit(this.effectValue)} sec`;case se.Crystal:return`Reduce Field Debuff effect by ${h.percent(this.effectValue)}`;case se.Leaf:return`Town Material Gain from clearing areas ${h.tDigit(this.effectValue,0)}`}case fe.AdventuringParty:switch(this.kind){case se.Stone:return`Expedition Reward Amount ${h.percent(this.effectValue)}`;case se.Crystal:return`Expedition EXP Gain ${h.percent(this.effectValue)}`;case se.Leaf:return`Expedition Pet EXP Gain ${h.percent(this.effectValue)}`}case fe.Blacksmith:switch(this.kind){case se.Stone:return`Auto-Disassemble EQ Slot ${h.tDigit(this.effectValue,0)}`;case se.Crystal:return`Material Gain on Disassembling EQ ${h.percent(this.effectValue)}`;case se.Leaf:return`Reduce the cost of crafting by ${h.percent(this.effectValue)}`}case fe.Temple:switch(this.kind){case se.Stone:return`Blessing Effect ${h.percent(this.effectValue)}`;case se.Crystal:return`Blessing's duration ${h.tDigit(this.effectValue,0)} sec`;case se.Leaf:return`Rebirth's level requirements -${h.tDigit(this.effectValue,0)}`}case fe.SlimeBank:switch(this.kind){case se.Stone:return`Grants interest on currently held Slime Coin every 10 minutes : ${h.percent(this.effectValue)}`;case se.Crystal:return`Restock amount of materials in Shop ${h.tDigit(this.effectValue,0)}`;case se.Leaf:return`Multiply Slime Coin Cap by ${h.percent(this.effectValue+1)}`}case fe.MysticArena:switch(this.kind){case se.Stone:return`Equipment Inventory Slot ${h.tDigit(this.effectValue,0)}`;case se.Crystal:return`Multiply Handicapped Challenge's Passive Stats Reward by ${h.percent(this.effectValue+1)}`;case se.Leaf:return`Alchemy Point Gain ${h.percent(this.effectValue)}`}case fe.ArcaneResearcher:switch(this.kind){case se.Stone:return`Stone Research Power ${h.percent(this.effectValue)}`;case se.Crystal:return`Crystal Research Power ${h.percent(this.effectValue)}`;case se.Leaf:return`Leaf Research Power ${h.percent(this.effectValue)}`}case fe.Tavern:return"-";case fe.Dojo:return"-";case fe.Trapper:switch(this.kind){case se.Stone:return`Rare Material Drop Chance ${h.percent(this.effectValue,4)}`;case se.Crystal:return`Restock amount of traps in Shop ${h.tDigit(this.effectValue,0)}`;case se.Leaf:return`Multiply Taming Point Gain by ${h.percent(this.effectValue+1)}`}default:return"Not Implemented"}}}class As{constructor(t,s){o(this,"data");o(this,"townCtrl");o(this,"kind");o(this,"rank");o(this,"level");o(this,"levelBonus");o(this,"research",[]);this.data=t,this.kind=s,this.level=this.data.source.buildingLevels,this.townCtrl=this.data.town,this.levelBonus=new H,this.research[0]=new Ga(this,se.Stone),this.research[1]=new Ga(this,se.Crystal),this.research[2]=new Ga(this,se.Leaf),this.SetEffect()}NameString(){return Pe.BuildingString(this.kind)}Rank(){return this.rank.value}Level(){return this.level[this.kind]+this.levelBonus.Value()}MaxLevel(t){return 20*t}EffectValue(){switch(this.kind){case fe.AdventuringParty:return this.Level()*.005*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case fe.AlchemistsHut:return this.Level()*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case fe.ArcaneResearcher:return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case fe.Blacksmith:return this.Level()*.005*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value();case fe.Cartographer:return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value();case fe.MysticArena:return this.Level()*.025*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value();case fe.Trapper:return this.Level()*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case fe.Temple:return this.Level()*.01*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value();case fe.StatueOfHeroes:return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value();case fe.SlimeBank:return this.Level()*.01*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value();default:return 0}}EffectValueString(){let t=this.EffectValue();return(this.kind==fe.Blacksmith||this.kind==fe.AdventuringParty)&&t++,Pe.BuildingEffectString(this.kind,t)}SetCost(){}SetEffect(){switch(this.kind){case fe.AdventuringParty:this.data.expedition.speedMultiplier.RegisterMultiplier(new u(n.Town,r.Add,()=>this.EffectValue()));break;case fe.Blacksmith:this.data.equipment.effectMultiplier.RegisterMultiplier(new u(n.Town,r.Add,()=>this.EffectValue()));break;case fe.MysticArena:for(let t=0;t<N.HeroKind;t++)this.data.stats.MonsterDamage(t,Z.ChallengeBoss).RegisterMultiplier(new u(n.Town,r.Mul,()=>this.EffectValue()));break;case fe.Temple:this.data.rebirth.SetPointMultiplier(new u(n.Town,r.Add,()=>this.EffectValue()));break}}}class xk{constructor(t){o(this,"data");o(this,"maxRank");o(this,"townMaterials",[]);o(this,"townMaterialGainMultiplier",Array(N.HeroKind));o(this,"townLevelEffectMultiplier");o(this,"townLevelEffectMultipliers",Array(N.ResourceKind));o(this,"levelCostReduction");o(this,"buildings",[]);o(this,"researchPower",Array(N.ResourceKind));o(this,"maxResearchNum");o(this,"researchEffectMultipliers",Array(N.ResourceKind));this.data=t;for(let s=0;s<this.townMaterialGainMultiplier.length;s++)this.townMaterialGainMultiplier[s]=new H;this.maxResearchNum=new H(new u(n.Base,r.Add,()=>1)),this.townLevelEffectMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.maxRank=new H,this.levelCostReduction=new H(new u(n.Base,r.Add,()=>0),()=>.9,()=>0);for(let s=0;s<this.researchPower.length;s++)this.researchPower[s]=new H(new u(n.Base,r.Add,()=>Math.log10(10+this.data.resource.Resource(s))),()=>1e20,()=>1),this.researchPower[s].numberType=nt.Normal,this.researchEffectMultipliers[s]=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<N.ResourceKind;s++)this.townLevelEffectMultipliers[s]=new H(new u(n.Base,r.Add,()=>1))}Start(){this.buildings[0]=new As(this.data,fe.StatueOfHeroes),this.buildings[3]=new As(this.data,fe.Blacksmith),this.buildings[1]=new As(this.data,fe.Cartographer),this.buildings[9]=new As(this.data,fe.Tavern),this.buildings[4]=new As(this.data,fe.Temple),this.buildings[10]=new As(this.data,fe.Dojo),this.buildings[5]=new As(this.data,fe.Trapper),this.buildings[7]=new As(this.data,fe.MysticArena),this.buildings[6]=new As(this.data,fe.SlimeBank),this.buildings[8]=new As(this.data,fe.ArcaneResearcher),this.buildings[2]=new As(this.data,fe.AlchemistsHut),this.buildings[11]=new As(this.data,fe.AdventuringParty)}SetEffectTownMatGain(t){for(let s=0;s<this.townMaterialGainMultiplier.length;s++)this.townMaterialGainMultiplier[s].RegisterMultiplier(t)}TotalBuildingLevel(){let t=0;for(let s=0;s<this.buildings.length;s++)t+=this.buildings[s].Level();return t}SetEffectLevelBonusForAllBuilding(t){for(let s=0;s<this.buildings.length;s++)this.buildings[s].levelBonus.RegisterMultiplier(t)}MaxTownMaterialGainMultiplier(){let t=0;for(let s=0;s<this.townMaterialGainMultiplier.length;++s)this.townMaterialGainMultiplier[s].Value()>t&&this.data.source.isActiveBattle[s]&&(t=this.townMaterialGainMultiplier[s].Value());return t}}var Ns=(e=>(e[e.Resource=0]="Resource",e[e.BasicStats=1]="BasicStats",e[e.GoldGain=2]="GoldGain",e[e.ExpGain=3]="ExpGain",e[e.GoldCap=4]="GoldCap",e[e.SlimeBank=5]="SlimeBank",e[e.EquipmentInventory=6]="EquipmentInventory",e))(Ns||{}),pr=(e=>(e[e.SlimeCoinCap=0]="SlimeCoinCap",e[e.SlimeCoinEfficiency=1]="SlimeCoinEfficiency",e[e.UpgradeCostReduction=2]="UpgradeCostReduction",e[e.ResourceBooster=3]="ResourceBooster",e[e.StatsBooster=4]="StatsBooster",e[e.GoldCapBooster=5]="GoldCapBooster",e[e.MysteriousWaterGain=6]="MysteriousWaterGain",e[e.MaterialFinder=7]="MaterialFinder",e[e.ShopTimer=8]="ShopTimer",e[e.ResearchPower=9]="ResearchPower",e[e.SPD=10]="SPD",e[e.FireRes=11]="FireRes",e[e.IceRes=12]="IceRes",e[e.ThunderRes=13]="ThunderRes",e[e.LightRes=14]="LightRes",e[e.DarkRes=15]="DarkRes",e[e.DebuffRes=16]="DebuffRes",e[e.SkillProf=17]="SkillProf",e[e.EquipmentProf=18]="EquipmentProf",e[e.CritDamage=19]="CritDamage",e[e.GoldGain=20]="GoldGain",e[e.SlimeCoinCap2=21]="SlimeCoinCap2",e))(pr||{});class Gk{constructor(t,s,i=0){o(this,"data");o(this,"id");o(this,"kind");o(this,"slimebankKind");this.data=t,this.kind=s,this.slimebankKind=i}get level(){switch(this.kind){case Ns.SlimeBank:return this.data.source.upgradeLevelsSlimebank[this.slimebankKind];default:return 0}}get resource(){return se.Stone}Start(){switch(this.kind){case Ns.SlimeBank:switch(this.slimebankKind){case pr.CritDamage:this.data.stats.SetEffectStats(D.CriticalDamage,new u(n.Upgrade,r.Add,()=>this.EffectValue()));break}break}}Set(){}CostModifier(){return(1-+(this.kind!=Ns.SlimeBank)*this.data.upgrade.costReduction.Value())*(1-+(this.kind!=Ns.SlimeBank)*this.data.upgrade.costReductionFromGuildAbility.Value())*(1-+(this.kind!=Ns.SlimeBank)*this.data.upgrade.costReductionFromGuildSuperAbility.Value())*(1-+(this.kind!=Ns.SlimeBank)*this.data.upgrade.costReductionFromMissionMilestone.Value())*(1-this.data.upgrade.costReductionFromWA.Value())}Cost(t){switch(this.kind){case Ns.SlimeBank:switch(this.slimebankKind){case pr.CritDamage:return 5e4*Math.pow(1.1,t);default:return 0}default:return 0}}EffectValue(){switch(this.kind){case Ns.SlimeBank:switch(this.slimebankKind){case pr.CritDamage:return .025*this.level;default:return 0}default:return 0}}IsUnlocked(){}Name(){return""}Description(){return""}SetUnlockCondition(){}}var vr;class Fk{constructor(t){Kt(this,vr,void 0);o(this,"upgrades");o(this,"goldGainUpgrade");o(this,"expGainUpgrade");o(this,"equipmentInventoryUpgrade");o(this,"generalUpgradeList",[]);o(this,"sb1ist",[]);o(this,"sb2ist",[]);o(this,"sb3ist",[]);o(this,"slimebankUpgradeList",[]);o(this,"upgradeList",[]);o(this,"costReduction");o(this,"costReductionFromGuildAbility");o(this,"costReductionFromGuildSuperAbility");o(this,"costReductionFromWA");o(this,"costReductionFromMissionMilestone");o(this,"resourceMultiplier");o(this,"statsMultiplier");o(this,"goldcapMultiplier");o(this,"goldcapMultipliers",Array(N.ResourceKind));o(this,"resourceCostIncrementPerLevelReduction");o(this,"resourceGainTierFactor");o(this,"availableQueue");o(this,"tempCheapestCost");o(this,"tempCheapestid");o(this,"tempCost");es(this,vr,t),this.costReduction=new H(new u(n.Base,r.Add,()=>0),()=>.99,()=>0),this.costReductionFromGuildAbility=new H(new u(n.Base,r.Add,()=>0),()=>.99,()=>0),this.costReductionFromGuildSuperAbility=new H(new u(n.Base,r.Add,()=>0),()=>.99,()=>0),this.costReductionFromWA=new H(new u(n.Base,r.Add,()=>0),()=>.99,()=>0),this.costReductionFromMissionMilestone=new H(new u(n.Base,r.Add,()=>0),()=>.99,()=>0),this.resourceMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.statsMultiplier=new H(new u(n.Base,r.Add,()=>1)),this.goldcapMultiplier=new H(new u(n.Base,r.Add,()=>1));for(let s=0;s<this.goldcapMultipliers.length;s++)this.goldcapMultipliers[s]=new H(new u(n.Base,r.Add,()=>1));this.resourceCostIncrementPerLevelReduction=new H(new u(n.Base,r.Add,()=>0),()=>.9,()=>0),this.resourceGainTierFactor=new H(new u(n.Base,r.Add,()=>0),()=>5,()=>0),this.sb3ist.push(new Gk(R(this,vr),Ns.SlimeBank,pr.CritDamage)),this.upgradeList=[...this.sb3ist],this.availableQueue=new H}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start()}Upgrade(t,s){return this.upgrades[t][s]}SlimeBankUpgrade(t){for(let s=0;s<this.slimebankUpgradeList.length;s++)if(this.slimebankUpgradeList[s].slimebankKind==t)return this.slimebankUpgradeList[s];return this.slimebankUpgradeList[0]}TotalLevel(t){let s=0;for(let i=0;i<this.upgrades[t].length;i++)s+=this.upgrades[t][i].level;return s}}vr=new WeakMap;var xt=(e=>(e[e.TownBuldingLevel=0]="TownBuldingLevel",e[e.MissionClearNum=1]="MissionClearNum",e[e.UpgradeLevel=2]="UpgradeLevel",e[e.MoveDistance=3]="MoveDistance",e[e.DictionaryPoint=4]="DictionaryPoint",e[e.DisassembleEquipment=5]="DisassembleEquipment",e[e.RebirthPointGainTier1=6]="RebirthPointGainTier1",e[e.RebirthPointGainTier2=7]="RebirthPointGainTier2",e))(xt||{}),ks;class ri{constructor(t,s){Kt(this,ks,void 0);o(this,"kind");es(this,ks,t),this.kind=s}get maxLevelReached(){return R(this,ks).source.ascensionMilestoneLevelReached}get currentPassiveEffectValue(){return this.PassiveEffectValue(this.maxLevelReached[this.kind])}Start(){this.SetEffect()}PassiveEffectValue(t){switch(this.kind){case xt.TownBuldingLevel:return .1*t*Math.pow(2,(t-1)/9);case xt.MissionClearNum:return t*.5;case xt.DictionaryPoint:return .1*t*Math.pow(2,(t-1)/9);case xt.DisassembleEquipment:return .2*t*Math.pow(2,(t-1)/9);case xt.MoveDistance:return .01*Math.pow(t,2);case xt.UpgradeLevel:return Math.max(0,Math.pow(2,t)-1);case xt.RebirthPointGainTier1:return .1*t*Math.pow(2,(t-1)/9);case xt.RebirthPointGainTier2:return .1*t*Math.pow(2,(t-1)/9);default:return 0}}SetEffect(){switch(this.kind){case xt.TownBuldingLevel:R(this,ks).town.townLevelEffectMultiplier.RegisterMultiplier(new u(n.Ascension,r.Add,()=>this.currentPassiveEffectValue));break;case xt.MissionClearNum:R(this,ks).area.townMaterialGainPerDifficultyMultiplier.RegisterMultiplier(new u(n.Ascension,r.Add,()=>this.currentPassiveEffectValue));break;case xt.DictionaryPoint:R(this,ks).equipment.dictionaryUpgradeEffectMultiplier.RegisterMultiplier(new u(n.Ascension,r.Add,()=>this.currentPassiveEffectValue));break;case xt.DisassembleEquipment:R(this,ks).stats.SetEffectStats(D.EquipmentProficiencyGain,new u(n.Ascension,r.Mul,()=>this.currentPassiveEffectValue));break;case xt.MoveDistance:R(this,ks).stats.SetEffectStats(D.MoveSpeed,new u(n.Ascension,r.Mul,()=>this.currentPassiveEffectValue));break;case xt.RebirthPointGainTier1:for(let t=0;t<N.HeroKind;t++)R(this,ks).rebirth.Rebirth(t,0).rebirthPointGainFactor.RegisterMultiplier(new u(n.Ascension,r.Mul,()=>this.currentPassiveEffectValue));break;case xt.RebirthPointGainTier2:for(let t=0;t<N.HeroKind;t++)R(this,ks).rebirth.Rebirth(t,1).rebirthPointGainFactor.RegisterMultiplier(new u(n.Ascension,r.Mul,()=>this.currentPassiveEffectValue));break}}}ks=new WeakMap;class Ik{constructor(t){o(this,"milestoneList",[]);this.milestoneList.push(new ri(t,xt.TownBuldingLevel)),this.milestoneList.push(new ri(t,xt.MissionClearNum)),this.milestoneList.push(new ri(t,xt.UpgradeLevel)),this.milestoneList.push(new ri(t,xt.MoveDistance)),this.milestoneList.push(new ri(t,xt.DictionaryPoint)),this.milestoneList.push(new ri(t,xt.DisassembleEquipment)),this.milestoneList.push(new ri(t,xt.RebirthPointGainTier1)),this.milestoneList.push(new ri(t,xt.RebirthPointGainTier2))}Start(){this.milestoneList.forEach(t=>{t.Start()})}}class Hk{constructor(t){o(this,"data");o(this,"worldAscensions",[]);this.data=t,this.worldAscensions.push(new Ik(t))}Start(){for(let t=0;t<this.worldAscensions.length;t++)this.worldAscensions[t].Start()}}class mo{constructor(t){o(this,"source");o(this,"ascension");o(this,"skill");o(this,"potion");o(this,"alchemy");o(this,"epicStore");o(this,"expedition");o(this,"town");o(this,"stats");o(this,"area");o(this,"battles",Array(N.HeroKind));o(this,"superStats");o(this,"guild");o(this,"monster");o(this,"resource");o(this,"equipment");o(this,"craft");o(this,"quest");o(this,"inventory");o(this,"challenge");o(this,"shop");o(this,"rebirth");o(this,"blessingInfo");o(this,"mission");o(this,"sdg");o(this,"nitro");o(this,"upgrade");o(this,"requireUpdate",Ct(!1));this.source=t,this.guild=new z1(this),this.potion=new CA(this),this.challenge=new F1(this),this.rebirth=new PA(this),this.alchemy=new n1,this.shop=new BA,this.craft=new I1,this.blessingInfo=new G1(this),this.town=new xk(this),this.resource=new vA,this.area=new l1(this),this.ascension=new Hk(this),this.mission=new Z1(this),this.stats=new J5(this),this.expedition=new $1(this),this.inventory=new Q1(this),this.equipment=new U1(this),this.monster=new eS(this),this.sdg=new vk(this),this.nitro=new tS,this.superStats=new Tk(this),this.quest=new yA(this),this.skill=new W5(this),this.epicStore=new H1(this),this.upgrade=new Fk(this);for(let s=0;s<this.battles.length;s++)this.battles[s]=new T1(this,s);this.Start()}get battle(){return this.battles[this.source.currentHero]}Start(){this.challenge.Start(),this.expedition.Start(),this.potion.Start(),this.town.Start(),this.ascension.Start(),this.mission.Start(),this.guild.Start(),this.monster.Start(),this.sdg.Start(),this.superStats.Start();for(let t=0;t<this.battles.length;t++)this.battles[t].Start();this.quest.Start(),this.rebirth.Start(),this.upgrade.Start(),this.epicStore.Start(),this.blessingInfo.Start(),this.equipment.Start(),this.inventory.Start(),this.SuperDungeonToggle()}load(){console.log("data manual load")}save(){console.log("data manual save")}SuperDungeonToggle(){for(let t=0;t<N.HeroKind;t++){const s=this.source.isSuperDungeon;this.skill.isLog[t]=s,this.skill.skillLevelBonus[t].isLog=s,this.skill.skillRangeMultiplier[t].isLog=s,this.skill.skillEffectRangeMultiplier[t].isLog=s,this.stats.heroes[t].stats[5].isLog=s,this.stats.heroes[t].stats[6].isLog=s,this.stats.heroes[t].stats[7].isLog=s,this.stats.heroes[t].stats[8].isLog=s,this.stats.heroes[t].stats[9].isLog=s,this.stats.heroes[t].stats[10].isLog=s,this.stats.heroes[t].hpRegenerate.isLog=s,this.stats.heroes[t].mpRegenerate.isLog=s;for(let i=0;i<N.BasicStatsKind;i++)this.stats.heroes[t].basicStats[i].isLog=s;for(let i=0;i<N.Element;i++)this.stats.heroes[t].elementDamages[i].isLog=s;for(let i=0;i<N.Element-1;i++)this.stats.heroes[t].stats[i].isLog=s;for(let i=0;i<N.Element;i++)this.stats.heroes[t].elementAbsoptions[i].isLog=s;for(let i=0;i<N.Element;i++)this.stats.heroes[t].elementInvalids[i].isLog=s;for(let i=0;i<N.MonsterSpecies;i++)this.stats.heroes[t].monsterDamages[i].isLog=s}}Update(){this.requireUpdate.value=!1}}const Ll="SaveFileSnapshot",_k=new co,Vk=Ma(Ll,{state:()=>Tn(Ll,_k,localStorage,{mergeDefaults:!0})});/*!
  * vue-router v4.2.5
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */const _i=typeof window<"u";function Nk(e){return e.__esModule||e[Symbol.toStringTag]==="Module"}const kt=Object.assign;function Fa(e,t){const s={};for(const i in t){const c=t[i];s[i]=Fs(c)?c.map(e):e(c)}return s}const gr=()=>{},Fs=Array.isArray,qk=/\/$/,Uk=e=>e.replace(qk,"");function Ia(e,t,s="/"){let i,c={},l="",M="";const b=t.indexOf("#");let k=t.indexOf("?");return b<k&&b>=0&&(k=-1),k>-1&&(i=t.slice(0,k),l=t.slice(k+1,b>-1?b:t.length),c=e(l)),b>-1&&(i=i||t.slice(0,b),M=t.slice(b,t.length)),i=zk(i??t,s),{fullPath:i+(l&&"?")+l+M,path:i,query:c,hash:M}}function Wk(e,t){const s=t.query?e(t.query):"";return t.path+(s&&"?")+s+(t.hash||"")}function Tl(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function Ok(e,t,s){const i=t.matched.length-1,c=s.matched.length-1;return i>-1&&i===c&&Yi(t.matched[i],s.matched[c])&&Mo(t.params,s.params)&&e(t.query)===e(s.query)&&t.hash===s.hash}function Yi(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function Mo(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const s in e)if(!$k(e[s],t[s]))return!1;return!0}function $k(e,t){return Fs(e)?xl(e,t):Fs(t)?xl(t,e):e===t}function xl(e,t){return Fs(t)?e.length===t.length&&e.every((s,i)=>s===t[i]):e.length===1&&e[0]===t}function zk(e,t){if(e.startsWith("/"))return e;if(!e)return t;const s=t.split("/"),i=e.split("/"),c=i[i.length-1];(c===".."||c===".")&&i.push("");let l=s.length-1,M,b;for(M=0;M<i.length;M++)if(b=i[M],b!==".")if(b==="..")l>1&&l--;else break;return s.slice(0,l).join("/")+"/"+i.slice(M-(M===i.length?1:0)).join("/")}var Dr;(function(e){e.pop="pop",e.push="push"})(Dr||(Dr={}));var mr;(function(e){e.back="back",e.forward="forward",e.unknown=""})(mr||(mr={}));function Jk(e){if(!e)if(_i){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),Uk(e)}const Xk=/^[^#]+#/;function jk(e,t){return e.replace(Xk,"#")+t}function Yk(e,t){const s=document.documentElement.getBoundingClientRect(),i=e.getBoundingClientRect();return{behavior:t.behavior,left:i.left-s.left-(t.left||0),top:i.top-s.top-(t.top||0)}}const Sa=()=>({left:window.pageXOffset,top:window.pageYOffset});function Qk(e){let t;if("el"in e){const s=e.el,i=typeof s=="string"&&s.startsWith("#"),c=typeof s=="string"?i?document.getElementById(s.slice(1)):document.querySelector(s):s;if(!c)return;t=Yk(c,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.pageXOffset,t.top!=null?t.top:window.pageYOffset)}function Gl(e,t){return(history.state?history.state.position-t:-1)+e}const tn=new Map;function Zk(e,t){tn.set(e,t)}function Kk(e){const t=tn.get(e);return tn.delete(e),t}let eE=()=>location.protocol+"//"+location.host;function wo(e,t){const{pathname:s,search:i,hash:c}=t,l=e.indexOf("#");if(l>-1){let b=c.includes(e.slice(l))?e.slice(l).length:1,k=c.slice(b);return k[0]!=="/"&&(k="/"+k),Tl(k,"")}return Tl(s,e)+i+c}function tE(e,t,s,i){let c=[],l=[],M=null;const b=({state:O})=>{const Y=wo(e,location),Q=s.value,ge=t.value;let Se=0;if(O){if(s.value=Y,t.value=O,M&&M===Q){M=null;return}Se=ge?O.position-ge.position:0}else i(Y);c.forEach(ke=>{ke(s.value,Q,{delta:Se,type:Dr.pop,direction:Se?Se>0?mr.forward:mr.back:mr.unknown})})};function k(){M=s.value}function P(O){c.push(O);const Y=()=>{const Q=c.indexOf(O);Q>-1&&c.splice(Q,1)};return l.push(Y),Y}function y(){const{history:O}=window;O.state&&O.replaceState(kt({},O.state,{scroll:Sa()}),"")}function T(){for(const O of l)O();l=[],window.removeEventListener("popstate",b),window.removeEventListener("beforeunload",y)}return window.addEventListener("popstate",b),window.addEventListener("beforeunload",y,{passive:!0}),{pauseListeners:k,listen:P,destroy:T}}function Fl(e,t,s,i=!1,c=!1){return{back:e,current:t,forward:s,replaced:i,position:window.history.length,scroll:c?Sa():null}}function sE(e){const{history:t,location:s}=window,i={value:wo(e,s)},c={value:t.state};c.value||l(i.value,{back:null,current:i.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function l(k,P,y){const T=e.indexOf("#"),O=T>-1?(s.host&&document.querySelector("base")?e:e.slice(T))+k:eE()+e+k;try{t[y?"replaceState":"pushState"](P,"",O),c.value=P}catch(Y){console.error(Y),s[y?"replace":"assign"](O)}}function M(k,P){const y=kt({},t.state,Fl(c.value.back,k,c.value.forward,!0),P,{position:c.value.position});l(k,y,!0),i.value=k}function b(k,P){const y=kt({},c.value,t.state,{forward:k,scroll:Sa()});l(y.current,y,!0);const T=kt({},Fl(i.value,k,null),{position:y.position+1},P);l(k,T,!1),i.value=k}return{location:i,state:c,push:b,replace:M}}function iE(e){e=Jk(e);const t=sE(e),s=tE(e,t.state,t.location,t.replace);function i(l,M=!0){M||s.pauseListeners(),history.go(l)}const c=kt({location:"",base:e,go:i,createHref:jk.bind(null,e)},t,s);return Object.defineProperty(c,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(c,"state",{enumerable:!0,get:()=>t.state.value}),c}function rE(e){return e=location.host?e||location.pathname+location.search:"",e.includes("#")||(e+="#"),iE(e)}function aE(e){return typeof e=="string"||e&&typeof e=="object"}function So(e){return typeof e=="string"||typeof e=="symbol"}const ai={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Ao=Symbol("");var Il;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(Il||(Il={}));function Qi(e,t){return kt(new Error,{type:e,[Ao]:!0},t)}function Xs(e,t){return e instanceof Error&&Ao in e&&(t==null||!!(e.type&t))}const Hl="[^/]+?",nE={sensitive:!1,strict:!1,start:!0,end:!0},lE=/[.+*?^${}()[\]/\\]/g;function uE(e,t){const s=kt({},nE,t),i=[];let c=s.start?"^":"";const l=[];for(const P of e){const y=P.length?[]:[90];s.strict&&!P.length&&(c+="/");for(let T=0;T<P.length;T++){const O=P[T];let Y=40+(s.sensitive?.25:0);if(O.type===0)T||(c+="/"),c+=O.value.replace(lE,"\\$&"),Y+=40;else if(O.type===1){const{value:Q,repeatable:ge,optional:Se,regexp:ke}=O;l.push({name:Q,repeatable:ge,optional:Se});const Ve=ke||Hl;if(Ve!==Hl){Y+=10;try{new RegExp(`(${Ve})`)}catch(rt){throw new Error(`Invalid custom RegExp for param "${Q}" (${Ve}): `+rt.message)}}let ze=ge?`((?:${Ve})(?:/(?:${Ve}))*)`:`(${Ve})`;T||(ze=Se&&P.length<2?`(?:/${ze})`:"/"+ze),Se&&(ze+="?"),c+=ze,Y+=20,Se&&(Y+=-8),ge&&(Y+=-20),Ve===".*"&&(Y+=-50)}y.push(Y)}i.push(y)}if(s.strict&&s.end){const P=i.length-1;i[P][i[P].length-1]+=.7000000000000001}s.strict||(c+="/?"),s.end?c+="$":s.strict&&(c+="(?:/|$)");const M=new RegExp(c,s.sensitive?"":"i");function b(P){const y=P.match(M),T={};if(!y)return null;for(let O=1;O<y.length;O++){const Y=y[O]||"",Q=l[O-1];T[Q.name]=Y&&Q.repeatable?Y.split("/"):Y}return T}function k(P){let y="",T=!1;for(const O of e){(!T||!y.endsWith("/"))&&(y+="/"),T=!1;for(const Y of O)if(Y.type===0)y+=Y.value;else if(Y.type===1){const{value:Q,repeatable:ge,optional:Se}=Y,ke=Q in P?P[Q]:"";if(Fs(ke)&&!ge)throw new Error(`Provided param "${Q}" is an array but it is not repeatable (* or + modifiers)`);const Ve=Fs(ke)?ke.join("/"):ke;if(!Ve)if(Se)O.length<2&&(y.endsWith("/")?y=y.slice(0,-1):T=!0);else throw new Error(`Missing required param "${Q}"`);y+=Ve}}return y||"/"}return{re:M,score:i,keys:l,parse:b,stringify:k}}function oE(e,t){let s=0;for(;s<e.length&&s<t.length;){const i=t[s]-e[s];if(i)return i;s++}return e.length<t.length?e.length===1&&e[0]===80?-1:1:e.length>t.length?t.length===1&&t[0]===80?1:-1:0}function cE(e,t){let s=0;const i=e.score,c=t.score;for(;s<i.length&&s<c.length;){const l=oE(i[s],c[s]);if(l)return l;s++}if(Math.abs(c.length-i.length)===1){if(_l(i))return 1;if(_l(c))return-1}return c.length-i.length}function _l(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const hE={type:0,value:""},fE=/[a-zA-Z0-9_]/;function dE(e){if(!e)return[[]];if(e==="/")return[[hE]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(Y){throw new Error(`ERR (${s})/"${P}": ${Y}`)}let s=0,i=s;const c=[];let l;function M(){l&&c.push(l),l=[]}let b=0,k,P="",y="";function T(){P&&(s===0?l.push({type:0,value:P}):s===1||s===2||s===3?(l.length>1&&(k==="*"||k==="+")&&t(`A repeatable param (${P}) must be alone in its segment. eg: '/:ids+.`),l.push({type:1,value:P,regexp:y,repeatable:k==="*"||k==="+",optional:k==="*"||k==="?"})):t("Invalid state to consume buffer"),P="")}function O(){P+=k}for(;b<e.length;){if(k=e[b++],k==="\\"&&s!==2){i=s,s=4;continue}switch(s){case 0:k==="/"?(P&&T(),M()):k===":"?(T(),s=1):O();break;case 4:O(),s=i;break;case 1:k==="("?s=2:fE.test(k)?O():(T(),s=0,k!=="*"&&k!=="?"&&k!=="+"&&b--);break;case 2:k===")"?y[y.length-1]=="\\"?y=y.slice(0,-1)+k:s=3:y+=k;break;case 3:T(),s=0,k!=="*"&&k!=="?"&&k!=="+"&&b--,y="";break;default:t("Unknown state");break}}return s===2&&t(`Unfinished custom RegExp for param "${P}"`),T(),M(),c}function pE(e,t,s){const i=uE(dE(e.path),s),c=kt(i,{record:e,parent:t,children:[],alias:[]});return t&&!c.record.aliasOf==!t.record.aliasOf&&t.children.push(c),c}function gE(e,t){const s=[],i=new Map;t=ql({strict:!1,end:!0,sensitive:!1},t);function c(y){return i.get(y)}function l(y,T,O){const Y=!O,Q=mE(y);Q.aliasOf=O&&O.record;const ge=ql(t,y),Se=[Q];if("alias"in y){const ze=typeof y.alias=="string"?[y.alias]:y.alias;for(const rt of ze)Se.push(kt({},Q,{components:O?O.record.components:Q.components,path:rt,aliasOf:O?O.record:Q}))}let ke,Ve;for(const ze of Se){const{path:rt}=ze;if(T&&rt[0]!=="/"){const ot=T.record.path,Je=ot[ot.length-1]==="/"?"":"/";ze.path=T.record.path+(rt&&Je+rt)}if(ke=pE(ze,T,ge),O?O.alias.push(ke):(Ve=Ve||ke,Ve!==ke&&Ve.alias.push(ke),Y&&y.name&&!Nl(ke)&&M(y.name)),Q.children){const ot=Q.children;for(let Je=0;Je<ot.length;Je++)l(ot[Je],ke,O&&O.children[Je])}O=O||ke,(ke.record.components&&Object.keys(ke.record.components).length||ke.record.name||ke.record.redirect)&&k(ke)}return Ve?()=>{M(Ve)}:gr}function M(y){if(So(y)){const T=i.get(y);T&&(i.delete(y),s.splice(s.indexOf(T),1),T.children.forEach(M),T.alias.forEach(M))}else{const T=s.indexOf(y);T>-1&&(s.splice(T,1),y.record.name&&i.delete(y.record.name),y.children.forEach(M),y.alias.forEach(M))}}function b(){return s}function k(y){let T=0;for(;T<s.length&&cE(y,s[T])>=0&&(y.record.path!==s[T].record.path||!bo(y,s[T]));)T++;s.splice(T,0,y),y.record.name&&!Nl(y)&&i.set(y.record.name,y)}function P(y,T){let O,Y={},Q,ge;if("name"in y&&y.name){if(O=i.get(y.name),!O)throw Qi(1,{location:y});ge=O.record.name,Y=kt(Vl(T.params,O.keys.filter(Ve=>!Ve.optional).map(Ve=>Ve.name)),y.params&&Vl(y.params,O.keys.map(Ve=>Ve.name))),Q=O.stringify(Y)}else if("path"in y)Q=y.path,O=s.find(Ve=>Ve.re.test(Q)),O&&(Y=O.parse(Q),ge=O.record.name);else{if(O=T.name?i.get(T.name):s.find(Ve=>Ve.re.test(T.path)),!O)throw Qi(1,{location:y,currentLocation:T});ge=O.record.name,Y=kt({},T.params,y.params),Q=O.stringify(Y)}const Se=[];let ke=O;for(;ke;)Se.unshift(ke.record),ke=ke.parent;return{name:ge,path:Q,params:Y,matched:Se,meta:wE(Se)}}return e.forEach(y=>l(y)),{addRoute:l,resolve:P,removeRoute:M,getRoutes:b,getRecordMatcher:c}}function Vl(e,t){const s={};for(const i of t)i in e&&(s[i]=e[i]);return s}function mE(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:ME(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function ME(e){const t={},s=e.props||!1;if("component"in e)t.default=s;else for(const i in e.components)t[i]=typeof s=="object"?s[i]:s;return t}function Nl(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function wE(e){return e.reduce((t,s)=>kt(t,s.meta),{})}function ql(e,t){const s={};for(const i in e)s[i]=i in t?t[i]:e[i];return s}function bo(e,t){return t.children.some(s=>s===e||bo(e,s))}const ko=/#/g,SE=/&/g,AE=/\//g,bE=/=/g,kE=/\?/g,Eo=/\+/g,EE=/%5B/g,DE=/%5D/g,Do=/%5E/g,RE=/%60/g,Ro=/%7B/g,CE=/%7C/g,Co=/%7D/g,yE=/%20/g;function Fn(e){return encodeURI(""+e).replace(CE,"|").replace(EE,"[").replace(DE,"]")}function PE(e){return Fn(e).replace(Ro,"{").replace(Co,"}").replace(Do,"^")}function sn(e){return Fn(e).replace(Eo,"%2B").replace(yE,"+").replace(ko,"%23").replace(SE,"%26").replace(RE,"`").replace(Ro,"{").replace(Co,"}").replace(Do,"^")}function vE(e){return sn(e).replace(bE,"%3D")}function BE(e){return Fn(e).replace(ko,"%23").replace(kE,"%3F")}function LE(e){return e==null?"":BE(e).replace(AE,"%2F")}function ta(e){try{return decodeURIComponent(""+e)}catch{}return""+e}function TE(e){const t={};if(e===""||e==="?")return t;const i=(e[0]==="?"?e.slice(1):e).split("&");for(let c=0;c<i.length;++c){const l=i[c].replace(Eo," "),M=l.indexOf("="),b=ta(M<0?l:l.slice(0,M)),k=M<0?null:ta(l.slice(M+1));if(b in t){let P=t[b];Fs(P)||(P=t[b]=[P]),P.push(k)}else t[b]=k}return t}function Ul(e){let t="";for(let s in e){const i=e[s];if(s=vE(s),i==null){i!==void 0&&(t+=(t.length?"&":"")+s);continue}(Fs(i)?i.map(l=>l&&sn(l)):[i&&sn(i)]).forEach(l=>{l!==void 0&&(t+=(t.length?"&":"")+s,l!=null&&(t+="="+l))})}return t}function xE(e){const t={};for(const s in e){const i=e[s];i!==void 0&&(t[s]=Fs(i)?i.map(c=>c==null?null:""+c):i==null?i:""+i)}return t}const GE=Symbol(""),Wl=Symbol(""),In=Symbol(""),yo=Symbol(""),rn=Symbol("");function ar(){let e=[];function t(i){return e.push(i),()=>{const c=e.indexOf(i);c>-1&&e.splice(c,1)}}function s(){e=[]}return{add:t,list:()=>e.slice(),reset:s}}function ci(e,t,s,i,c){const l=i&&(i.enterCallbacks[c]=i.enterCallbacks[c]||[]);return()=>new Promise((M,b)=>{const k=T=>{T===!1?b(Qi(4,{from:s,to:t})):T instanceof Error?b(T):aE(T)?b(Qi(2,{from:t,to:T})):(l&&i.enterCallbacks[c]===l&&typeof T=="function"&&l.push(T),M())},P=e.call(i&&i.instances[c],t,s,k);let y=Promise.resolve(P);e.length<3&&(y=y.then(k)),y.catch(T=>b(T))})}function Ha(e,t,s,i){const c=[];for(const l of e)for(const M in l.components){let b=l.components[M];if(!(t!=="beforeRouteEnter"&&!l.instances[M]))if(FE(b)){const P=(b.__vccOpts||b)[t];P&&c.push(ci(P,s,i,l,M))}else{let k=b();c.push(()=>k.then(P=>{if(!P)return Promise.reject(new Error(`Couldn't resolve component "${M}" at "${l.path}"`));const y=Nk(P)?P.default:P;l.components[M]=y;const O=(y.__vccOpts||y)[t];return O&&ci(O,s,i,l,M)()}))}}return c}function FE(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function Ol(e){const t=tt(In),s=tt(yo),i=Vt(()=>t.resolve(A(e.to))),c=Vt(()=>{const{matched:k}=i.value,{length:P}=k,y=k[P-1],T=s.matched;if(!y||!T.length)return-1;const O=T.findIndex(Yi.bind(null,y));if(O>-1)return O;const Y=$l(k[P-2]);return P>1&&$l(y)===Y&&T[T.length-1].path!==Y?T.findIndex(Yi.bind(null,k[P-2])):O}),l=Vt(()=>c.value>-1&&VE(s.params,i.value.params)),M=Vt(()=>c.value>-1&&c.value===s.matched.length-1&&Mo(s.params,i.value.params));function b(k={}){return _E(k)?t[A(e.replace)?"replace":"push"](A(e.to)).catch(gr):Promise.resolve()}return{route:i,href:Vt(()=>i.value.href),isActive:l,isExactActive:M,navigate:b}}const IE=st({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Ol,setup(e,{slots:t}){const s=Ki(Ol(e)),{options:i}=tt(In),c=Vt(()=>({[zl(e.activeClass,i.linkActiveClass,"router-link-active")]:s.isActive,[zl(e.exactActiveClass,i.linkExactActiveClass,"router-link-exact-active")]:s.isExactActive}));return()=>{const l=t.default&&t.default(s);return e.custom?l:ju("a",{"aria-current":s.isExactActive?e.ariaCurrentValue:null,href:s.href,onClick:s.navigate,class:c.value},l)}}}),HE=IE;function _E(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function VE(e,t){for(const s in t){const i=t[s],c=e[s];if(typeof i=="string"){if(i!==c)return!1}else if(!Fs(c)||c.length!==i.length||i.some((l,M)=>l!==c[M]))return!1}return!0}function $l(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const zl=(e,t,s)=>e??t??s,NE=st({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:s}){const i=tt(rn),c=Vt(()=>e.route||i.value),l=tt(Wl,0),M=Vt(()=>{let P=A(l);const{matched:y}=c.value;let T;for(;(T=y[P])&&!T.components;)P++;return P}),b=Vt(()=>c.value.matched[M.value]);cr(Wl,Vt(()=>M.value+1)),cr(GE,b),cr(rn,c);const k=Ct();return rs(()=>[k.value,b.value,e.name],([P,y,T],[O,Y,Q])=>{y&&(y.instances[T]=P,Y&&Y!==y&&P&&P===O&&(y.leaveGuards.size||(y.leaveGuards=Y.leaveGuards),y.updateGuards.size||(y.updateGuards=Y.updateGuards))),P&&y&&(!Y||!Yi(y,Y)||!O)&&(y.enterCallbacks[T]||[]).forEach(ge=>ge(P))},{flush:"post"}),()=>{const P=c.value,y=e.name,T=b.value,O=T&&T.components[y];if(!O)return Jl(s.default,{Component:O,route:P});const Y=T.props[y],Q=Y?Y===!0?P.params:typeof Y=="function"?Y(P):Y:null,Se=ju(O,kt({},Q,t,{onVnodeUnmounted:ke=>{ke.component.isUnmounted&&(T.instances[y]=null)},ref:k}));return Jl(s.default,{Component:Se,route:P})||Se}}});function Jl(e,t){if(!e)return null;const s=e(t);return s.length===1?s[0]:s}const qE=NE;function UE(e){const t=gE(e.routes,e),s=e.parseQuery||TE,i=e.stringifyQuery||Ul,c=e.history,l=ar(),M=ar(),b=ar(),k=wu(ai);let P=ai;_i&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const y=Fa.bind(null,te=>""+te),T=Fa.bind(null,LE),O=Fa.bind(null,ta);function Y(te,Ae){let Me,Be;return So(te)?(Me=t.getRecordMatcher(te),Be=Ae):Be=te,t.addRoute(Be,Me)}function Q(te){const Ae=t.getRecordMatcher(te);Ae&&t.removeRoute(Ae)}function ge(){return t.getRoutes().map(te=>te.record)}function Se(te){return!!t.getRecordMatcher(te)}function ke(te,Ae){if(Ae=kt({},Ae||k.value),typeof te=="string"){const I=Ia(s,te,Ae.path),j=t.resolve({path:I.path},Ae),ie=c.createHref(I.fullPath);return kt(I,j,{params:O(j.params),hash:ta(I.hash),redirectedFrom:void 0,href:ie})}let Me;if("path"in te)Me=kt({},te,{path:Ia(s,te.path,Ae.path).path});else{const I=kt({},te.params);for(const j in I)I[j]==null&&delete I[j];Me=kt({},te,{params:T(I)}),Ae.params=T(Ae.params)}const Be=t.resolve(Me,Ae),At=te.hash||"";Be.params=y(O(Be.params));const Lt=Wk(i,kt({},te,{hash:PE(At),path:Be.path})),L=c.createHref(Lt);return kt({fullPath:Lt,hash:At,query:i===Ul?xE(te.query):te.query||{}},Be,{redirectedFrom:void 0,href:L})}function Ve(te){return typeof te=="string"?Ia(s,te,k.value.path):kt({},te)}function ze(te,Ae){if(P!==te)return Qi(8,{from:Ae,to:te})}function rt(te){return Gt(te)}function ot(te){return rt(kt(Ve(te),{replace:!0}))}function Je(te){const Ae=te.matched[te.matched.length-1];if(Ae&&Ae.redirect){const{redirect:Me}=Ae;let Be=typeof Me=="function"?Me(te):Me;return typeof Be=="string"&&(Be=Be.includes("?")||Be.includes("#")?Be=Ve(Be):{path:Be},Be.params={}),kt({query:te.query,hash:te.hash,params:"path"in Be?{}:te.params},Be)}}function Gt(te,Ae){const Me=P=ke(te),Be=k.value,At=te.state,Lt=te.force,L=te.replace===!0,I=Je(Me);if(I)return Gt(kt(Ve(I),{state:typeof I=="object"?kt({},At,I.state):At,force:Lt,replace:L}),Ae||Me);const j=Me;j.redirectedFrom=Ae;let ie;return!Lt&&Ok(i,Be,Me)&&(ie=Qi(16,{to:j,from:Be}),Hs(Be,Be,!0,!1)),(ie?Promise.resolve(ie):at(j,Be)).catch(ee=>Xs(ee)?Xs(ee,2)?ee:ei(ee):St(ee,j,Be)).then(ee=>{if(ee){if(Xs(ee,2))return Gt(kt({replace:L},Ve(ee.to),{state:typeof ee.to=="object"?kt({},At,ee.to.state):At,force:Lt}),Ae||j)}else ee=fs(j,Be,!0,L,At);return Bt(j,Be,ee),ee})}function Ke(te,Ae){const Me=ze(te,Ae);return Me?Promise.reject(Me):Promise.resolve()}function Re(te){const Ae=Fi.values().next().value;return Ae&&typeof Ae.runWithContext=="function"?Ae.runWithContext(te):te()}function at(te,Ae){let Me;const[Be,At,Lt]=WE(te,Ae);Me=Ha(Be.reverse(),"beforeRouteLeave",te,Ae);for(const I of Be)I.leaveGuards.forEach(j=>{Me.push(ci(j,te,Ae))});const L=Ke.bind(null,te,Ae);return Me.push(L),ss(Me).then(()=>{Me=[];for(const I of l.list())Me.push(ci(I,te,Ae));return Me.push(L),ss(Me)}).then(()=>{Me=Ha(At,"beforeRouteUpdate",te,Ae);for(const I of At)I.updateGuards.forEach(j=>{Me.push(ci(j,te,Ae))});return Me.push(L),ss(Me)}).then(()=>{Me=[];for(const I of Lt)if(I.beforeEnter)if(Fs(I.beforeEnter))for(const j of I.beforeEnter)Me.push(ci(j,te,Ae));else Me.push(ci(I.beforeEnter,te,Ae));return Me.push(L),ss(Me)}).then(()=>(te.matched.forEach(I=>I.enterCallbacks={}),Me=Ha(Lt,"beforeRouteEnter",te,Ae),Me.push(L),ss(Me))).then(()=>{Me=[];for(const I of M.list())Me.push(ci(I,te,Ae));return Me.push(L),ss(Me)}).catch(I=>Xs(I,8)?I:Promise.reject(I))}function Bt(te,Ae,Me){b.list().forEach(Be=>Re(()=>Be(te,Ae,Me)))}function fs(te,Ae,Me,Be,At){const Lt=ze(te,Ae);if(Lt)return Lt;const L=Ae===ai,I=_i?history.state:{};Me&&(Be||L?c.replace(te.fullPath,kt({scroll:L&&I&&I.scroll},At)):c.push(te.fullPath,At)),k.value=te,Hs(te,Ae,Me,L),ei()}let ws;function bi(){ws||(ws=c.listen((te,Ae,Me)=>{if(!Tr.listening)return;const Be=ke(te),At=Je(Be);if(At){Gt(kt(At,{replace:!0}),Be).catch(gr);return}P=Be;const Lt=k.value;_i&&Zk(Gl(Lt.fullPath,Me.delta),Sa()),at(Be,Lt).catch(L=>Xs(L,12)?L:Xs(L,2)?(Gt(L.to,Be).then(I=>{Xs(I,20)&&!Me.delta&&Me.type===Dr.pop&&c.go(-1,!1)}).catch(gr),Promise.reject()):(Me.delta&&c.go(-Me.delta,!1),St(L,Be,Lt))).then(L=>{L=L||fs(Be,Lt,!1),L&&(Me.delta&&!Xs(L,8)?c.go(-Me.delta,!1):Me.type===Dr.pop&&Xs(L,20)&&c.go(-1,!1)),Bt(Be,Lt,L)}).catch(gr)}))}let Ss=ar(),Mt=ar(),Et;function St(te,Ae,Me){ei(te);const Be=Mt.list();return Be.length?Be.forEach(At=>At(te,Ae,Me)):console.error(te),Promise.reject(te)}function Js(){return Et&&k.value!==ai?Promise.resolve():new Promise((te,Ae)=>{Ss.add([te,Ae])})}function ei(te){return Et||(Et=!te,bi(),Ss.list().forEach(([Ae,Me])=>te?Me(te):Ae()),Ss.reset()),te}function Hs(te,Ae,Me,Be){const{scrollBehavior:At}=e;if(!_i||!At)return Promise.resolve();const Lt=!Me&&Kk(Gl(te.fullPath,0))||(Be||!Me)&&history.state&&history.state.scroll||null;return er().then(()=>At(te,Ae,Lt)).then(L=>L&&Qk(L)).catch(L=>St(L,te,Ae))}const os=te=>c.go(te);let Gi;const Fi=new Set,Tr={currentRoute:k,listening:!0,addRoute:Y,removeRoute:Q,hasRoute:Se,getRoutes:ge,resolve:ke,options:e,push:rt,replace:ot,go:os,back:()=>os(-1),forward:()=>os(1),beforeEach:l.add,beforeResolve:M.add,afterEach:b.add,onError:Mt.add,isReady:Js,install(te){const Ae=this;te.component("RouterLink",HE),te.component("RouterView",qE),te.config.globalProperties.$router=Ae,Object.defineProperty(te.config.globalProperties,"$route",{enumerable:!0,get:()=>A(k)}),_i&&!Gi&&k.value===ai&&(Gi=!0,rt(c.location).catch(At=>{}));const Me={};for(const At in ai)Object.defineProperty(Me,At,{get:()=>k.value[At],enumerable:!0});te.provide(In,Ae),te.provide(yo,gu(Me)),te.provide(rn,k);const Be=te.unmount;Fi.add(te),te.unmount=function(){Fi.delete(te),Fi.size<1&&(P=ai,ws&&ws(),ws=null,k.value=ai,Gi=!1,Et=!1),Be()}}};function ss(te){return te.reduce((Ae,Me)=>Ae.then(()=>Re(Me)),Promise.resolve())}return Tr}function WE(e,t){const s=[],i=[],c=[],l=Math.max(t.matched.length,e.matched.length);for(let M=0;M<l;M++){const b=t.matched[M];b&&(e.matched.find(P=>Yi(P,b))?i.push(b):s.push(b));const k=e.matched[M];k&&(t.matched.find(P=>Yi(P,k))||c.push(k))}return[s,i,c]}const Po=UE({history:rE(),routes:oo}),Ai=Qh(s1),OE=tf();Ai.use(Po);Ai.use(OE);const $E=Vk(),Hn=new mo(Za()),_n=new mo($E),vo=new i1(Hn,_n);globalThis.Game=vo;globalThis.SaveFileData=Hn;globalThis.SaveFileSnapshot=_n;Ai.config.performance=!0;Ai.provide("data",Hn);Ai.provide("snap",_n);Ai.provide("router",Po);Ai.provide("game",vo);Ai.mount("#app");
