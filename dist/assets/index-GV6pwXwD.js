var eo=Object.defineProperty;var to=(e,t,s)=>t in e?eo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var c=(e,t,s)=>(to(e,typeof t!="symbol"?t+"":t,s),s),wn=(e,t,s)=>{if(!t.has(e))throw TypeError("Cannot "+s)};var b=(e,t,s)=>(wn(e,t,"read from private field"),s?s.call(e):t.get(e)),Ht=(e,t,s)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,s)},Vt=(e,t,s,a)=>(wn(e,t,"write to private field"),a?a.call(e,s):t.set(e,s),s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const u of document.querySelectorAll('link[rel="modulepreload"]'))a(u);new MutationObserver(u=>{for(const o of u)if(o.type==="childList")for(const M of o.addedNodes)M.tagName==="LINK"&&M.rel==="modulepreload"&&a(M)}).observe(document,{childList:!0,subtree:!0});function s(u){const o={};return u.integrity&&(o.integrity=u.integrity),u.referrerPolicy&&(o.referrerPolicy=u.referrerPolicy),u.crossOrigin==="use-credentials"?o.credentials="include":u.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function a(u){if(u.ep)return;u.ep=!0;const o=s(u);fetch(u.href,o)}})();/**
* @vue/shared v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function qa(e,t){const s=new Set(e.split(","));return t?a=>s.has(a.toLowerCase()):a=>s.has(a)}const gt={},ki=[],us=()=>{},so=()=>!1,_r=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),_a=e=>e.startsWith("onUpdate:"),Ft=Object.assign,Wa=(e,t)=>{const s=e.indexOf(t);s>-1&&e.splice(s,1)},io=Object.prototype.hasOwnProperty,Ye=(e,t)=>io.call(e,t),De=Array.isArray,Ei=e=>ur(e)==="[object Map]",xi=e=>ur(e)==="[object Set]",Mn=e=>ur(e)==="[object Date]",_e=e=>typeof e=="function",Lt=e=>typeof e=="string",si=e=>typeof e=="symbol",mt=e=>e!==null&&typeof e=="object",bl=e=>(mt(e)||_e(e))&&_e(e.then)&&_e(e.catch),Rl=Object.prototype.toString,ur=e=>Rl.call(e),ro=e=>ur(e).slice(8,-1),Dl=e=>ur(e)==="[object Object]",Ua=e=>Lt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,kr=qa(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),Wr=e=>{const t=Object.create(null);return s=>t[s]||(t[s]=e(s))},ao=/-(\w)/g,Rs=Wr(e=>e.replace(ao,(t,s)=>s?s.toUpperCase():"")),no=/\B([A-Z])/g,ri=Wr(e=>e.replace(no,"-$1").toLowerCase()),Ur=Wr(e=>e.charAt(0).toUpperCase()+e.slice(1)),ra=Wr(e=>e?`on${Ur(e)}`:""),Ts=(e,t)=>!Object.is(e,t),Er=(e,t)=>{for(let s=0;s<e.length;s++)e[s](t)},Lr=(e,t,s)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:s})},Yi=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let Sn;const kl=()=>Sn||(Sn=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Oa(e){if(De(e)){const t={};for(let s=0;s<e.length;s++){const a=e[s],u=Lt(a)?uo(a):Oa(a);if(u)for(const o in u)t[o]=u[o]}return t}else if(Lt(e)||mt(e))return e}const lo=/;(?![^(]*\))/g,co=/:([^]+)/,oo=/\/\*[^]*?\*\//g;function uo(e){const t={};return e.replace(oo,"").split(lo).forEach(s=>{if(s){const a=s.split(co);a.length>1&&(t[a[0].trim()]=a[1].trim())}}),t}function Or(e){let t="";if(Lt(e))t=e;else if(De(e))for(let s=0;s<e.length;s++){const a=Or(e[s]);a&&(t+=a+" ")}else if(mt(e))for(const s in e)e[s]&&(t+=s+" ");return t.trim()}const ho="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",fo=qa(ho);function El(e){return!!e||e===""}function po(e,t){if(e.length!==t.length)return!1;let s=!0;for(let a=0;s&&a<e.length;a++)s=Pi(e[a],t[a]);return s}function Pi(e,t){if(e===t)return!0;let s=Mn(e),a=Mn(t);if(s||a)return s&&a?e.getTime()===t.getTime():!1;if(s=si(e),a=si(t),s||a)return e===t;if(s=De(e),a=De(t),s||a)return s&&a?po(e,t):!1;if(s=mt(e),a=mt(t),s||a){if(!s||!a)return!1;const u=Object.keys(e).length,o=Object.keys(t).length;if(u!==o)return!1;for(const M in e){const D=e.hasOwnProperty(M),k=t.hasOwnProperty(M);if(D&&!k||!D&&k||!Pi(e[M],t[M]))return!1}}return String(e)===String(t)}function $a(e,t){return e.findIndex(s=>Pi(s,t))}const Bs=e=>Lt(e)?e:e==null?"":De(e)||mt(e)&&(e.toString===Rl||!_e(e.toString))?JSON.stringify(e,Cl,2):String(e),Cl=(e,t)=>t&&t.__v_isRef?Cl(e,t.value):Ei(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((s,[a,u],o)=>(s[aa(a,o)+" =>"]=u,s),{})}:xi(t)?{[`Set(${t.size})`]:[...t.values()].map(s=>aa(s))}:si(t)?aa(t):mt(t)&&!De(t)&&!Dl(t)?String(t):t,aa=(e,t="")=>{var s;return si(e)?`Symbol(${(s=e.description)!=null?s:t})`:e};/**
* @vue/reactivity v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let ts;class yl{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=ts,!t&&ts&&(this.index=(ts.scopes||(ts.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const s=ts;try{return ts=this,t()}finally{ts=s}}}on(){ts=this}off(){ts=this.parent}stop(t){if(this._active){let s,a;for(s=0,a=this.effects.length;s<a;s++)this.effects[s].stop();for(s=0,a=this.cleanups.length;s<a;s++)this.cleanups[s]();if(this.scopes)for(s=0,a=this.scopes.length;s<a;s++)this.scopes[s].stop(!0);if(!this.detached&&this.parent&&!t){const u=this.parent.scopes.pop();u&&u!==this&&(this.parent.scopes[this.index]=u,u.index=this.index)}this.parent=void 0,this._active=!1}}}function Pl(e){return new yl(e)}function go(e,t=ts){t&&t.active&&t.effects.push(e)}function za(){return ts}function vl(e){ts&&ts.cleanups.push(e)}let di;class Ja{constructor(t,s,a,u){this.fn=t,this.trigger=s,this.scheduler=a,this.active=!0,this.deps=[],this._dirtyLevel=2,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,go(this,u)}get dirty(){if(this._dirtyLevel===1){mi();for(let t=0;t<this._depsLength;t++){const s=this.deps[t];if(s.computed&&(mo(s.computed),this._dirtyLevel>=2))break}this._dirtyLevel<2&&(this._dirtyLevel=0),wi()}return this._dirtyLevel>=2}set dirty(t){this._dirtyLevel=t?2:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let t=Ks,s=di;try{return Ks=!0,di=this,this._runnings++,An(this),this.fn()}finally{bn(this),this._runnings--,di=s,Ks=t}}stop(){var t;this.active&&(An(this),bn(this),(t=this.onStop)==null||t.call(this),this.active=!1)}}function mo(e){return e.value}function An(e){e._trackId++,e._depsLength=0}function bn(e){if(e.deps&&e.deps.length>e._depsLength){for(let t=e._depsLength;t<e.deps.length;t++)Bl(e.deps[t],e);e.deps.length=e._depsLength}}function Bl(e,t){const s=e.get(t);s!==void 0&&t._trackId!==s&&(e.delete(t),e.size===0&&e.cleanup())}let Ks=!0,Sa=0;const Ll=[];function mi(){Ll.push(Ks),Ks=!1}function wi(){const e=Ll.pop();Ks=e===void 0?!0:e}function Xa(){Sa++}function ja(){for(Sa--;!Sa&&Aa.length;)Aa.shift()()}function Tl(e,t,s){if(t.get(e)!==e._trackId){t.set(e,e._trackId);const a=e.deps[e._depsLength];a!==t?(a&&Bl(a,e),e.deps[e._depsLength++]=t):e._depsLength++}}const Aa=[];function Gl(e,t,s){Xa();for(const a of e.keys())if(a._dirtyLevel<t&&e.get(a)===a._trackId){const u=a._dirtyLevel;a._dirtyLevel=t,u===0&&(a._shouldSchedule=!0,a.trigger())}xl(e),ja()}function xl(e){for(const t of e.keys())t.scheduler&&t._shouldSchedule&&(!t._runnings||t.allowRecurse)&&e.get(t)===t._trackId&&(t._shouldSchedule=!1,Aa.push(t.scheduler))}const Fl=(e,t)=>{const s=new Map;return s.cleanup=e,s.computed=t,s},Tr=new WeakMap,gi=Symbol(""),ba=Symbol("");function Qt(e,t,s){if(Ks&&di){let a=Tr.get(e);a||Tr.set(e,a=new Map);let u=a.get(s);u||a.set(s,u=Fl(()=>a.delete(s))),Tl(di,u)}}function Is(e,t,s,a,u,o){const M=Tr.get(e);if(!M)return;let D=[];if(t==="clear")D=[...M.values()];else if(s==="length"&&De(e)){const k=Number(a);M.forEach((y,v)=>{(v==="length"||!si(v)&&v>=k)&&D.push(y)})}else switch(s!==void 0&&D.push(M.get(s)),t){case"add":De(e)?Ua(s)&&D.push(M.get("length")):(D.push(M.get(gi)),Ei(e)&&D.push(M.get(ba)));break;case"delete":De(e)||(D.push(M.get(gi)),Ei(e)&&D.push(M.get(ba)));break;case"set":Ei(e)&&D.push(M.get(gi));break}Xa();for(const k of D)k&&Gl(k,2);ja()}function wo(e,t){var s;return(s=Tr.get(e))==null?void 0:s.get(t)}const Mo=qa("__proto__,__v_isRef,__isVue"),Il=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(si)),Rn=So();function So(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...s){const a=Qe(this);for(let o=0,M=this.length;o<M;o++)Qt(a,"get",o+"");const u=a[t](...s);return u===-1||u===!1?a[t](...s.map(Qe)):u}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...s){mi(),Xa();const a=Qe(this)[t].apply(this,s);return ja(),wi(),a}}),e}function Ao(e){const t=Qe(this);return Qt(t,"has",e),t.hasOwnProperty(e)}class Hl{constructor(t=!1,s=!1){this._isReadonly=t,this._shallow=s}get(t,s,a){const u=this._isReadonly,o=this._shallow;if(s==="__v_isReactive")return!u;if(s==="__v_isReadonly")return u;if(s==="__v_isShallow")return o;if(s==="__v_raw")return a===(u?o?Go:_l:o?ql:Nl).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(a)?t:void 0;const M=De(t);if(!u){if(M&&Ye(Rn,s))return Reflect.get(Rn,s,a);if(s==="hasOwnProperty")return Ao}const D=Reflect.get(t,s,a);return(si(s)?Il.has(s):Mo(s))||(u||Qt(t,"get",s),o)?D:Tt(D)?M&&Ua(s)?D:D.value:mt(D)?u?Qa(D):hr(D):D}}class Vl extends Hl{constructor(t=!1){super(!1,t)}set(t,s,a,u){let o=t[s];if(!this._shallow){const k=vi(o);if(!Gr(a)&&!vi(a)&&(o=Qe(o),a=Qe(a)),!De(t)&&Tt(o)&&!Tt(a))return k?!1:(o.value=a,!0)}const M=De(t)&&Ua(s)?Number(s)<t.length:Ye(t,s),D=Reflect.set(t,s,a,u);return t===Qe(u)&&(M?Ts(a,o)&&Is(t,"set",s,a):Is(t,"add",s,a)),D}deleteProperty(t,s){const a=Ye(t,s);t[s];const u=Reflect.deleteProperty(t,s);return u&&a&&Is(t,"delete",s,void 0),u}has(t,s){const a=Reflect.has(t,s);return(!si(s)||!Il.has(s))&&Qt(t,"has",s),a}ownKeys(t){return Qt(t,"iterate",De(t)?"length":gi),Reflect.ownKeys(t)}}class bo extends Hl{constructor(t=!1){super(!0,t)}set(t,s){return!0}deleteProperty(t,s){return!0}}const Ro=new Vl,Do=new bo,ko=new Vl(!0),Ya=e=>e,$r=e=>Reflect.getPrototypeOf(e);function gr(e,t,s=!1,a=!1){e=e.__v_raw;const u=Qe(e),o=Qe(t);s||(Ts(t,o)&&Qt(u,"get",t),Qt(u,"get",o));const{has:M}=$r(u),D=a?Ya:s?en:Zi;if(M.call(u,t))return D(e.get(t));if(M.call(u,o))return D(e.get(o));e!==u&&e.get(t)}function mr(e,t=!1){const s=this.__v_raw,a=Qe(s),u=Qe(e);return t||(Ts(e,u)&&Qt(a,"has",e),Qt(a,"has",u)),e===u?s.has(e):s.has(e)||s.has(u)}function wr(e,t=!1){return e=e.__v_raw,!t&&Qt(Qe(e),"iterate",gi),Reflect.get(e,"size",e)}function Dn(e){e=Qe(e);const t=Qe(this);return $r(t).has.call(t,e)||(t.add(e),Is(t,"add",e,e)),this}function kn(e,t){t=Qe(t);const s=Qe(this),{has:a,get:u}=$r(s);let o=a.call(s,e);o||(e=Qe(e),o=a.call(s,e));const M=u.call(s,e);return s.set(e,t),o?Ts(t,M)&&Is(s,"set",e,t):Is(s,"add",e,t),this}function En(e){const t=Qe(this),{has:s,get:a}=$r(t);let u=s.call(t,e);u||(e=Qe(e),u=s.call(t,e)),a&&a.call(t,e);const o=t.delete(e);return u&&Is(t,"delete",e,void 0),o}function Cn(){const e=Qe(this),t=e.size!==0,s=e.clear();return t&&Is(e,"clear",void 0,void 0),s}function Mr(e,t){return function(a,u){const o=this,M=o.__v_raw,D=Qe(M),k=t?Ya:e?en:Zi;return!e&&Qt(D,"iterate",gi),M.forEach((y,v)=>a.call(u,k(y),k(v),o))}}function Sr(e,t,s){return function(...a){const u=this.__v_raw,o=Qe(u),M=Ei(o),D=e==="entries"||e===Symbol.iterator&&M,k=e==="keys"&&M,y=u[e](...a),v=s?Ya:t?en:Zi;return!t&&Qt(o,"iterate",k?ba:gi),{next(){const{value:I,done:q}=y.next();return q?{value:I,done:q}:{value:D?[v(I[0]),v(I[1])]:v(I),done:q}},[Symbol.iterator](){return this}}}}function _s(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function Eo(){const e={get(o){return gr(this,o)},get size(){return wr(this)},has:mr,add:Dn,set:kn,delete:En,clear:Cn,forEach:Mr(!1,!1)},t={get(o){return gr(this,o,!1,!0)},get size(){return wr(this)},has:mr,add:Dn,set:kn,delete:En,clear:Cn,forEach:Mr(!1,!0)},s={get(o){return gr(this,o,!0)},get size(){return wr(this,!0)},has(o){return mr.call(this,o,!0)},add:_s("add"),set:_s("set"),delete:_s("delete"),clear:_s("clear"),forEach:Mr(!0,!1)},a={get(o){return gr(this,o,!0,!0)},get size(){return wr(this,!0)},has(o){return mr.call(this,o,!0)},add:_s("add"),set:_s("set"),delete:_s("delete"),clear:_s("clear"),forEach:Mr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{e[o]=Sr(o,!1,!1),s[o]=Sr(o,!0,!1),t[o]=Sr(o,!1,!0),a[o]=Sr(o,!0,!0)}),[e,s,t,a]}const[Co,yo,Po,vo]=Eo();function Za(e,t){const s=t?e?vo:Po:e?yo:Co;return(a,u,o)=>u==="__v_isReactive"?!e:u==="__v_isReadonly"?e:u==="__v_raw"?a:Reflect.get(Ye(s,u)&&u in a?s:a,u,o)}const Bo={get:Za(!1,!1)},Lo={get:Za(!1,!0)},To={get:Za(!0,!1)},Nl=new WeakMap,ql=new WeakMap,_l=new WeakMap,Go=new WeakMap;function xo(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Fo(e){return e.__v_skip||!Object.isExtensible(e)?0:xo(ro(e))}function hr(e){return vi(e)?e:Ka(e,!1,Ro,Bo,Nl)}function Wl(e){return Ka(e,!1,ko,Lo,ql)}function Qa(e){return Ka(e,!0,Do,To,_l)}function Ka(e,t,s,a,u){if(!mt(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const o=u.get(e);if(o)return o;const M=Fo(e);if(M===0)return e;const D=new Proxy(e,M===2?a:s);return u.set(e,D),D}function ei(e){return vi(e)?ei(e.__v_raw):!!(e&&e.__v_isReactive)}function vi(e){return!!(e&&e.__v_isReadonly)}function Gr(e){return!!(e&&e.__v_isShallow)}function Ul(e){return ei(e)||vi(e)}function Qe(e){const t=e&&e.__v_raw;return t?Qe(t):e}function zr(e){return Lr(e,"__v_skip",!0),e}const Zi=e=>mt(e)?hr(e):e,en=e=>mt(e)?Qa(e):e;class Ol{constructor(t,s,a,u){this._setter=s,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Ja(()=>t(this._value),()=>Wi(this,1),()=>this.dep&&xl(this.dep)),this.effect.computed=this,this.effect.active=this._cacheable=!u,this.__v_isReadonly=a}get value(){const t=Qe(this);return(!t._cacheable||t.effect.dirty)&&Ts(t._value,t._value=t.effect.run())&&Wi(t,2),tn(t),t.effect._dirtyLevel>=1&&Wi(t,1),t._value}set value(t){this._setter(t)}get _dirty(){return this.effect.dirty}set _dirty(t){this.effect.dirty=t}}function Io(e,t,s=!1){let a,u;const o=_e(e);return o?(a=e,u=us):(a=e.get,u=e.set),new Ol(a,u,o||!u,s)}function tn(e){Ks&&di&&(e=Qe(e),Tl(di,e.dep||(e.dep=Fl(()=>e.dep=void 0,e instanceof Ol?e:void 0))))}function Wi(e,t=2,s){e=Qe(e);const a=e.dep;a&&Gl(a,t)}function Tt(e){return!!(e&&e.__v_isRef===!0)}function $t(e){return zl(e,!1)}function $l(e){return zl(e,!0)}function zl(e,t){return Tt(e)?e:new Ho(e,t)}class Ho{constructor(t,s){this.__v_isShallow=s,this.dep=void 0,this.__v_isRef=!0,this._rawValue=s?t:Qe(t),this._value=s?t:Zi(t)}get value(){return tn(this),this._value}set value(t){const s=this.__v_isShallow||Gr(t)||vi(t);t=s?t:Qe(t),Ts(t,this._rawValue)&&(this._rawValue=t,this._value=s?t:Zi(t),Wi(this,2))}}function ve(e){return Tt(e)?e.value:e}const Vo={get:(e,t,s)=>ve(Reflect.get(e,t,s)),set:(e,t,s,a)=>{const u=e[t];return Tt(u)&&!Tt(s)?(u.value=s,!0):Reflect.set(e,t,s,a)}};function Jl(e){return ei(e)?e:new Proxy(e,Vo)}class No{constructor(t){this.dep=void 0,this.__v_isRef=!0;const{get:s,set:a}=t(()=>tn(this),()=>Wi(this));this._get=s,this._set=a}get value(){return this._get()}set value(t){this._set(t)}}function qo(e){return new No(e)}function _o(e){const t=De(e)?new Array(e.length):{};for(const s in e)t[s]=Uo(e,s);return t}class Wo{constructor(t,s,a){this._object=t,this._key=s,this._defaultValue=a,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return wo(Qe(this._object),this._key)}}function Uo(e,t,s){const a=e[t];return Tt(a)?a:new Wo(e,t,s)}/**
* @vue/runtime-core v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ti(e,t,s,a){let u;try{u=a?e(...a):e()}catch(o){Jr(o,t,s)}return u}function bs(e,t,s,a){if(_e(e)){const o=ti(e,t,s,a);return o&&bl(o)&&o.catch(M=>{Jr(M,t,s)}),o}const u=[];for(let o=0;o<e.length;o++)u.push(bs(e[o],t,s,a));return u}function Jr(e,t,s,a=!0){const u=t?t.vnode:null;if(t){let o=t.parent;const M=t.proxy,D=`https://vuejs.org/error-reference/#runtime-${s}`;for(;o;){const y=o.ec;if(y){for(let v=0;v<y.length;v++)if(y[v](e,M,D)===!1)return}o=o.parent}const k=t.appContext.config.errorHandler;if(k){ti(k,null,10,[e,M,D]);return}}Oo(e,s,u,a)}function Oo(e,t,s,a=!0){console.error(e)}let Qi=!1,Ra=!1;const Ot=[];let Ls=0;const Ci=[];let Js=null,fi=0;const Xl=Promise.resolve();let sn=null;function Fi(e){const t=sn||Xl;return e?t.then(this?e.bind(this):e):t}function $o(e){let t=Ls+1,s=Ot.length;for(;t<s;){const a=t+s>>>1,u=Ot[a],o=Ki(u);o<e||o===e&&u.pre?t=a+1:s=a}return t}function rn(e){(!Ot.length||!Ot.includes(e,Qi&&e.allowRecurse?Ls+1:Ls))&&(e.id==null?Ot.push(e):Ot.splice($o(e.id),0,e),jl())}function jl(){!Qi&&!Ra&&(Ra=!0,sn=Xl.then(Zl))}function zo(e){const t=Ot.indexOf(e);t>Ls&&Ot.splice(t,1)}function Jo(e){De(e)?Ci.push(...e):(!Js||!Js.includes(e,e.allowRecurse?fi+1:fi))&&Ci.push(e),jl()}function yn(e,t,s=Qi?Ls+1:0){for(;s<Ot.length;s++){const a=Ot[s];if(a&&a.pre){if(e&&a.id!==e.uid)continue;Ot.splice(s,1),s--,a()}}}function Yl(e){if(Ci.length){const t=[...new Set(Ci)].sort((s,a)=>Ki(s)-Ki(a));if(Ci.length=0,Js){Js.push(...t);return}for(Js=t,fi=0;fi<Js.length;fi++)Js[fi]();Js=null,fi=0}}const Ki=e=>e.id==null?1/0:e.id,Xo=(e,t)=>{const s=Ki(e)-Ki(t);if(s===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return s};function Zl(e){Ra=!1,Qi=!0,Ot.sort(Xo);try{for(Ls=0;Ls<Ot.length;Ls++){const t=Ot[Ls];t&&t.active!==!1&&ti(t,null,14)}}finally{Ls=0,Ot.length=0,Yl(),Qi=!1,sn=null,(Ot.length||Ci.length)&&Zl()}}function jo(e,t,...s){if(e.isUnmounted)return;const a=e.vnode.props||gt;let u=s;const o=t.startsWith("update:"),M=o&&t.slice(7);if(M&&M in a){const v=`${M==="modelValue"?"model":M}Modifiers`,{number:I,trim:q}=a[v]||gt;q&&(u=s.map(z=>Lt(z)?z.trim():z)),I&&(u=s.map(Yi))}let D,k=a[D=ra(t)]||a[D=ra(Rs(t))];!k&&o&&(k=a[D=ra(ri(t))]),k&&bs(k,e,6,u);const y=a[D+"Once"];if(y){if(!e.emitted)e.emitted={};else if(e.emitted[D])return;e.emitted[D]=!0,bs(y,e,6,u)}}function Ql(e,t,s=!1){const a=t.emitsCache,u=a.get(e);if(u!==void 0)return u;const o=e.emits;let M={},D=!1;if(!_e(e)){const k=y=>{const v=Ql(y,t,!0);v&&(D=!0,Ft(M,v))};!s&&t.mixins.length&&t.mixins.forEach(k),e.extends&&k(e.extends),e.mixins&&e.mixins.forEach(k)}return!o&&!D?(mt(e)&&a.set(e,null),null):(De(o)?o.forEach(k=>M[k]=null):Ft(M,o),mt(e)&&a.set(e,M),M)}function Xr(e,t){return!e||!_r(t)?!1:(t=t.slice(2).replace(/Once$/,""),Ye(e,t[0].toLowerCase()+t.slice(1))||Ye(e,ri(t))||Ye(e,t))}let Bt=null,jr=null;function xr(e){const t=Bt;return Bt=e,jr=e&&e.type.__scopeId||null,t}function Kl(e){jr=e}function ec(){jr=null}function Zt(e,t=Bt,s){if(!t||e._n)return e;const a=(...u)=>{a._d&&Hn(-1);const o=xr(t);let M;try{M=e(...u)}finally{xr(o),a._d&&Hn(1)}return M};return a._n=!0,a._c=!0,a._d=!0,a}function na(e){const{type:t,vnode:s,proxy:a,withProxy:u,props:o,propsOptions:[M],slots:D,attrs:k,emit:y,render:v,renderCache:I,data:q,setupState:z,ctx:ne,inheritAttrs:oe}=e;let pe,fe;const ke=xr(e);try{if(s.shapeFlag&4){const Je=u||a,je=Je;pe=vs(v.call(je,Je,I,o,z,q,ne)),fe=k}else{const Je=t;pe=vs(Je.length>1?Je(o,{attrs:k,slots:D,emit:y}):Je(o,null)),fe=t.props?k:Yo(k)}}catch(Je){$i.length=0,Jr(Je,e,1),pe=kt(ii)}let Ie=pe;if(fe&&oe!==!1){const Je=Object.keys(fe),{shapeFlag:je}=Ie;Je.length&&je&7&&(M&&Je.some(_a)&&(fe=Zo(fe,M)),Ie=Bi(Ie,fe))}return s.dirs&&(Ie=Bi(Ie),Ie.dirs=Ie.dirs?Ie.dirs.concat(s.dirs):s.dirs),s.transition&&(Ie.transition=s.transition),pe=Ie,xr(ke),pe}const Yo=e=>{let t;for(const s in e)(s==="class"||s==="style"||_r(s))&&((t||(t={}))[s]=e[s]);return t},Zo=(e,t)=>{const s={};for(const a in e)(!_a(a)||!(a.slice(9)in t))&&(s[a]=e[a]);return s};function Qo(e,t,s){const{props:a,children:u,component:o}=e,{props:M,children:D,patchFlag:k}=t,y=o.emitsOptions;if(t.dirs||t.transition)return!0;if(s&&k>=0){if(k&1024)return!0;if(k&16)return a?Pn(a,M,y):!!M;if(k&8){const v=t.dynamicProps;for(let I=0;I<v.length;I++){const q=v[I];if(M[q]!==a[q]&&!Xr(y,q))return!0}}}else return(u||D)&&(!D||!D.$stable)?!0:a===M?!1:a?M?Pn(a,M,y):!0:!!M;return!1}function Pn(e,t,s){const a=Object.keys(t);if(a.length!==Object.keys(e).length)return!0;for(let u=0;u<a.length;u++){const o=a[u];if(t[o]!==e[o]&&!Xr(s,o))return!0}return!1}function Ko({vnode:e,parent:t},s){for(;t;){const a=t.subTree;if(a.suspense&&a.suspense.activeBranch===e&&(a.el=e.el),a===e)(e=t.vnode).el=s,t=t.parent;else break}}const tc="components";function Fr(e,t){return tu(tc,e,!0,t)||e}const eu=Symbol.for("v-ndc");function tu(e,t,s=!0,a=!1){const u=Bt||xt;if(u){const o=u.type;if(e===tc){const D=ju(o,!1);if(D&&(D===t||D===Rs(t)||D===Ur(Rs(t))))return o}const M=vn(u[e]||o[e],t)||vn(u.appContext[e],t);return!M&&a?o:M}}function vn(e,t){return e&&(e[t]||e[Rs(t)]||e[Ur(Rs(t))])}const su=e=>e.__isSuspense;function iu(e,t){t&&t.pendingBranch?De(e)?t.effects.push(...e):t.effects.push(e):Jo(e)}const ru=Symbol.for("v-scx"),au=()=>is(ru);function nu(e,t){return an(e,null,{flush:"sync"})}const Ar={};function Jt(e,t,s){return an(e,t,s)}function an(e,t,{immediate:s,deep:a,flush:u,once:o,onTrack:M,onTrigger:D}=gt){if(t&&o){const He=t;t=(...Dt)=>{He(...Dt),je()}}const k=xt,y=He=>a===!0?He:pi(He,a===!1?1:void 0);let v,I=!1,q=!1;if(Tt(e)?(v=()=>e.value,I=Gr(e)):ei(e)?(v=()=>y(e),I=!0):De(e)?(q=!0,I=e.some(He=>ei(He)||Gr(He)),v=()=>e.map(He=>{if(Tt(He))return He.value;if(ei(He))return y(He);if(_e(He))return ti(He,k,2)})):_e(e)?t?v=()=>ti(e,k,2):v=()=>(z&&z(),bs(e,k,3,[ne])):v=us,t&&a){const He=v;v=()=>pi(He())}let z,ne=He=>{z=Ie.onStop=()=>{ti(He,k,4),z=Ie.onStop=void 0}},oe;if(Kr)if(ne=us,t?s&&bs(t,k,3,[v(),q?[]:void 0,ne]):v(),u==="sync"){const He=au();oe=He.__watcherHandles||(He.__watcherHandles=[])}else return us;let pe=q?new Array(e.length).fill(Ar):Ar;const fe=()=>{if(!(!Ie.active||!Ie.dirty))if(t){const He=Ie.run();(a||I||(q?He.some((Dt,Ue)=>Ts(Dt,pe[Ue])):Ts(He,pe)))&&(z&&z(),bs(t,k,3,[He,pe===Ar?void 0:q&&pe[0]===Ar?[]:pe,ne]),pe=He)}else Ie.run()};fe.allowRecurse=!!t;let ke;u==="sync"?ke=fe:u==="post"?ke=()=>Yt(fe,k&&k.suspense):(fe.pre=!0,k&&(fe.id=k.uid),ke=()=>rn(fe));const Ie=new Ja(v,us,ke),Je=za(),je=()=>{Ie.stop(),Je&&Wa(Je.effects,Ie)};return t?s?fe():pe=Ie.run():u==="post"?Yt(Ie.run.bind(Ie),k&&k.suspense):Ie.run(),oe&&oe.push(je),je}function lu(e,t,s){const a=this.proxy,u=Lt(e)?e.includes(".")?sc(a,e):()=>a[e]:e.bind(a,a);let o;_e(t)?o=t:(o=t.handler,s=t);const M=fr(this),D=an(u,o.bind(a),s);return M(),D}function sc(e,t){const s=t.split(".");return()=>{let a=e;for(let u=0;u<s.length&&a;u++)a=a[s[u]];return a}}function pi(e,t,s=0,a){if(!mt(e)||e.__v_skip)return e;if(t&&t>0){if(s>=t)return e;s++}if(a=a||new Set,a.has(e))return e;if(a.add(e),Tt(e))pi(e.value,t,s,a);else if(De(e))for(let u=0;u<e.length;u++)pi(e[u],t,s,a);else if(xi(e)||Ei(e))e.forEach(u=>{pi(u,t,s,a)});else if(Dl(e))for(const u in e)pi(e[u],t,s,a);return e}function Ms(e,t){if(Bt===null)return e;const s=ea(Bt)||Bt.proxy,a=e.dirs||(e.dirs=[]);for(let u=0;u<t.length;u++){let[o,M,D,k=gt]=t[u];o&&(_e(o)&&(o={mounted:o,updated:o}),o.deep&&pi(M),a.push({dir:o,instance:s,value:M,oldValue:void 0,arg:D,modifiers:k}))}return e}function li(e,t,s,a){const u=e.dirs,o=t&&t.dirs;for(let M=0;M<u.length;M++){const D=u[M];o&&(D.oldValue=o[M].value);let k=D.dir[a];k&&(mi(),bs(k,s,8,[e.el,D,e,t]),wi())}}/*! #__NO_SIDE_EFFECTS__ */function ai(e,t){return _e(e)?Ft({name:e.name},t,{setup:e}):e}const Ui=e=>!!e.type.__asyncLoader,ic=e=>e.type.__isKeepAlive;function cu(e,t){rc(e,"a",t)}function ou(e,t){rc(e,"da",t)}function rc(e,t,s=xt){const a=e.__wdc||(e.__wdc=()=>{let u=s;for(;u;){if(u.isDeactivated)return;u=u.parent}return e()});if(Yr(t,a,s),s){let u=s.parent;for(;u&&u.parent;)ic(u.parent.vnode)&&uu(a,t,s,u),u=u.parent}}function uu(e,t,s,a){const u=Yr(t,e,a,!0);nc(()=>{Wa(a[t],u)},s)}function Yr(e,t,s=xt,a=!1){if(s){const u=s[e]||(s[e]=[]),o=t.__weh||(t.__weh=(...M)=>{if(s.isUnmounted)return;mi();const D=fr(s),k=bs(t,s,e,M);return D(),wi(),k});return a?u.unshift(o):u.push(o),o}}const Vs=e=>(t,s=xt)=>(!Kr||e==="sp")&&Yr(e,(...a)=>t(...a),s),hu=Vs("bm"),ac=Vs("m"),fu=Vs("bu"),pu=Vs("u"),du=Vs("bum"),nc=Vs("um"),gu=Vs("sp"),mu=Vs("rtg"),wu=Vs("rtc");function Mu(e,t=xt){Yr("ec",e,t)}function Cr(e,t,s,a){let u;const o=s&&s[a];if(De(e)||Lt(e)){u=new Array(e.length);for(let M=0,D=e.length;M<D;M++)u[M]=t(e[M],M,void 0,o&&o[M])}else if(typeof e=="number"){u=new Array(e);for(let M=0;M<e;M++)u[M]=t(M+1,M,void 0,o&&o[M])}else if(mt(e))if(e[Symbol.iterator])u=Array.from(e,(M,D)=>t(M,D,void 0,o&&o[D]));else{const M=Object.keys(e);u=new Array(M.length);for(let D=0,k=M.length;D<k;D++){const y=M[D];u[D]=t(e[y],y,D,o&&o[D])}}else u=[];return s&&(s[a]=u),u}function p1(e,t){for(let s=0;s<t.length;s++){const a=t[s];if(De(a))for(let u=0;u<a.length;u++)e[a[u].name]=a[u].fn;else a&&(e[a.name]=a.key?(...u)=>{const o=a.fn(...u);return o&&(o.key=a.key),o}:a.fn)}return e}function Ir(e,t,s={},a,u){if(Bt.isCE||Bt.parent&&Ui(Bt.parent)&&Bt.parent.isCE)return t!=="default"&&(s.name=t),kt("slot",s,a&&a());let o=e[t];o&&o._c&&(o._d=!1),wt();const M=o&&lc(o(s)),D=Fs(Rt,{key:s.key||M&&M.key||`_${t}`},M||(a?a():[]),M&&e._===1?64:-2);return!u&&D.scopeId&&(D.slotScopeIds=[D.scopeId+"-s"]),o&&o._c&&(o._d=!0),D}function lc(e){return e.some(t=>Nr(t)?!(t.type===ii||t.type===Rt&&!lc(t.children)):!0)?e:null}const Da=e=>e?Ac(e)?ea(e)||e.proxy:Da(e.parent):null,Oi=Ft(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Da(e.parent),$root:e=>Da(e.root),$emit:e=>e.emit,$options:e=>nn(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,rn(e.update)}),$nextTick:e=>e.n||(e.n=Fi.bind(e.proxy)),$watch:e=>lu.bind(e)}),la=(e,t)=>e!==gt&&!e.__isScriptSetup&&Ye(e,t),Su={get({_:e},t){const{ctx:s,setupState:a,data:u,props:o,accessCache:M,type:D,appContext:k}=e;let y;if(t[0]!=="$"){const z=M[t];if(z!==void 0)switch(z){case 1:return a[t];case 2:return u[t];case 4:return s[t];case 3:return o[t]}else{if(la(a,t))return M[t]=1,a[t];if(u!==gt&&Ye(u,t))return M[t]=2,u[t];if((y=e.propsOptions[0])&&Ye(y,t))return M[t]=3,o[t];if(s!==gt&&Ye(s,t))return M[t]=4,s[t];ka&&(M[t]=0)}}const v=Oi[t];let I,q;if(v)return t==="$attrs"&&Qt(e,"get",t),v(e);if((I=D.__cssModules)&&(I=I[t]))return I;if(s!==gt&&Ye(s,t))return M[t]=4,s[t];if(q=k.config.globalProperties,Ye(q,t))return q[t]},set({_:e},t,s){const{data:a,setupState:u,ctx:o}=e;return la(u,t)?(u[t]=s,!0):a!==gt&&Ye(a,t)?(a[t]=s,!0):Ye(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(o[t]=s,!0)},has({_:{data:e,setupState:t,accessCache:s,ctx:a,appContext:u,propsOptions:o}},M){let D;return!!s[M]||e!==gt&&Ye(e,M)||la(t,M)||(D=o[0])&&Ye(D,M)||Ye(a,M)||Ye(Oi,M)||Ye(u.config.globalProperties,M)},defineProperty(e,t,s){return s.get!=null?e._.accessCache[t]=0:Ye(s,"value")&&this.set(e,t,s.value,null),Reflect.defineProperty(e,t,s)}};function Hr(e){return De(e)?e.reduce((t,s)=>(t[s]=null,t),{}):e}function d1(e,t){return!e||!t?e||t:De(e)&&De(t)?e.concat(t):Ft({},Hr(e),Hr(t))}let ka=!0;function Au(e){const t=nn(e),s=e.proxy,a=e.ctx;ka=!1,t.beforeCreate&&Bn(t.beforeCreate,e,"bc");const{data:u,computed:o,methods:M,watch:D,provide:k,inject:y,created:v,beforeMount:I,mounted:q,beforeUpdate:z,updated:ne,activated:oe,deactivated:pe,beforeDestroy:fe,beforeUnmount:ke,destroyed:Ie,unmounted:Je,render:je,renderTracked:He,renderTriggered:Dt,errorCaptured:Ue,serverPrefetch:ge,expose:Xe,inheritAttrs:Mt,components:Kt,directives:as,filters:ni}=t;if(y&&bu(y,a,null),M)for(const ht in M){const at=M[ht];_e(at)&&(a[ht]=at.bind(s))}if(u){const ht=u.call(s,s);mt(ht)&&(e.data=hr(ht))}if(ka=!0,o)for(const ht in o){const at=o[ht],Gs=_e(at)?at.bind(s,s):_e(at.get)?at.get.bind(s,s):us,qs=!_e(at)&&_e(at.set)?at.set.bind(s):us,ks=ss({get:Gs,set:qs});Object.defineProperty(a,ht,{enumerable:!0,configurable:!0,get:()=>ks.value,set:jt=>ks.value=jt})}if(D)for(const ht in D)cc(D[ht],a,s,ht);if(k){const ht=_e(k)?k.call(s):k;Reflect.ownKeys(ht).forEach(at=>{yr(at,ht[at])})}v&&Bn(v,e,"c");function it(ht,at){De(at)?at.forEach(Gs=>ht(Gs.bind(s))):at&&ht(at.bind(s))}if(it(hu,I),it(ac,q),it(fu,z),it(pu,ne),it(cu,oe),it(ou,pe),it(Mu,Ue),it(wu,He),it(mu,Dt),it(du,ke),it(nc,Je),it(gu,ge),De(Xe))if(Xe.length){const ht=e.exposed||(e.exposed={});Xe.forEach(at=>{Object.defineProperty(ht,at,{get:()=>s[at],set:Gs=>s[at]=Gs})})}else e.exposed||(e.exposed={});je&&e.render===us&&(e.render=je),Mt!=null&&(e.inheritAttrs=Mt),Kt&&(e.components=Kt),as&&(e.directives=as)}function bu(e,t,s=us){De(e)&&(e=Ea(e));for(const a in e){const u=e[a];let o;mt(u)?"default"in u?o=is(u.from||a,u.default,!0):o=is(u.from||a):o=is(u),Tt(o)?Object.defineProperty(t,a,{enumerable:!0,configurable:!0,get:()=>o.value,set:M=>o.value=M}):t[a]=o}}function Bn(e,t,s){bs(De(e)?e.map(a=>a.bind(t.proxy)):e.bind(t.proxy),t,s)}function cc(e,t,s,a){const u=a.includes(".")?sc(s,a):()=>s[a];if(Lt(e)){const o=t[e];_e(o)&&Jt(u,o)}else if(_e(e))Jt(u,e.bind(s));else if(mt(e))if(De(e))e.forEach(o=>cc(o,t,s,a));else{const o=_e(e.handler)?e.handler.bind(s):t[e.handler];_e(o)&&Jt(u,o,e)}}function nn(e){const t=e.type,{mixins:s,extends:a}=t,{mixins:u,optionsCache:o,config:{optionMergeStrategies:M}}=e.appContext,D=o.get(t);let k;return D?k=D:!u.length&&!s&&!a?k=t:(k={},u.length&&u.forEach(y=>Vr(k,y,M,!0)),Vr(k,t,M)),mt(t)&&o.set(t,k),k}function Vr(e,t,s,a=!1){const{mixins:u,extends:o}=t;o&&Vr(e,o,s,!0),u&&u.forEach(M=>Vr(e,M,s,!0));for(const M in t)if(!(a&&M==="expose")){const D=Ru[M]||s&&s[M];e[M]=D?D(e[M],t[M]):t[M]}return e}const Ru={data:Ln,props:Tn,emits:Tn,methods:_i,computed:_i,beforeCreate:zt,created:zt,beforeMount:zt,mounted:zt,beforeUpdate:zt,updated:zt,beforeDestroy:zt,beforeUnmount:zt,destroyed:zt,unmounted:zt,activated:zt,deactivated:zt,errorCaptured:zt,serverPrefetch:zt,components:_i,directives:_i,watch:ku,provide:Ln,inject:Du};function Ln(e,t){return t?e?function(){return Ft(_e(e)?e.call(this,this):e,_e(t)?t.call(this,this):t)}:t:e}function Du(e,t){return _i(Ea(e),Ea(t))}function Ea(e){if(De(e)){const t={};for(let s=0;s<e.length;s++)t[e[s]]=e[s];return t}return e}function zt(e,t){return e?[...new Set([].concat(e,t))]:t}function _i(e,t){return e?Ft(Object.create(null),e,t):t}function Tn(e,t){return e?De(e)&&De(t)?[...new Set([...e,...t])]:Ft(Object.create(null),Hr(e),Hr(t??{})):t}function ku(e,t){if(!e)return t;if(!t)return e;const s=Ft(Object.create(null),e);for(const a in t)s[a]=zt(e[a],t[a]);return s}function oc(){return{app:null,config:{isNativeTag:so,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Eu=0;function Cu(e,t){return function(a,u=null){_e(a)||(a=Ft({},a)),u!=null&&!mt(u)&&(u=null);const o=oc(),M=new WeakSet;let D=!1;const k=o.app={_uid:Eu++,_component:a,_props:u,_container:null,_context:o,_instance:null,version:Zu,get config(){return o.config},set config(y){},use(y,...v){return M.has(y)||(y&&_e(y.install)?(M.add(y),y.install(k,...v)):_e(y)&&(M.add(y),y(k,...v))),k},mixin(y){return o.mixins.includes(y)||o.mixins.push(y),k},component(y,v){return v?(o.components[y]=v,k):o.components[y]},directive(y,v){return v?(o.directives[y]=v,k):o.directives[y]},mount(y,v,I){if(!D){const q=kt(a,u);return q.appContext=o,I===!0?I="svg":I===!1&&(I=void 0),v&&t?t(q,y):e(q,y,I),D=!0,k._container=y,y.__vue_app__=k,ea(q.component)||q.component.proxy}},unmount(){D&&(e(null,k._container),delete k._container.__vue_app__)},provide(y,v){return o.provides[y]=v,k},runWithContext(y){er=k;try{return y()}finally{er=null}}};return k}}let er=null;function yr(e,t){if(xt){let s=xt.provides;const a=xt.parent&&xt.parent.provides;a===s&&(s=xt.provides=Object.create(a)),s[e]=t}}function is(e,t,s=!1){const a=xt||Bt;if(a||er){const u=a?a.parent==null?a.vnode.appContext&&a.vnode.appContext.provides:a.parent.provides:er._context.provides;if(u&&e in u)return u[e];if(arguments.length>1)return s&&_e(t)?t.call(a&&a.proxy):t}}function yu(){return!!(xt||Bt||er)}function Pu(e,t,s,a=!1){const u={},o={};Lr(o,Qr,1),e.propsDefaults=Object.create(null),uc(e,t,u,o);for(const M in e.propsOptions[0])M in u||(u[M]=void 0);s?e.props=a?u:Wl(u):e.type.props?e.props=u:e.props=o,e.attrs=o}function vu(e,t,s,a){const{props:u,attrs:o,vnode:{patchFlag:M}}=e,D=Qe(u),[k]=e.propsOptions;let y=!1;if((a||M>0)&&!(M&16)){if(M&8){const v=e.vnode.dynamicProps;for(let I=0;I<v.length;I++){let q=v[I];if(Xr(e.emitsOptions,q))continue;const z=t[q];if(k)if(Ye(o,q))z!==o[q]&&(o[q]=z,y=!0);else{const ne=Rs(q);u[ne]=Ca(k,D,ne,z,e,!1)}else z!==o[q]&&(o[q]=z,y=!0)}}}else{uc(e,t,u,o)&&(y=!0);let v;for(const I in D)(!t||!Ye(t,I)&&((v=ri(I))===I||!Ye(t,v)))&&(k?s&&(s[I]!==void 0||s[v]!==void 0)&&(u[I]=Ca(k,D,I,void 0,e,!0)):delete u[I]);if(o!==D)for(const I in o)(!t||!Ye(t,I))&&(delete o[I],y=!0)}y&&Is(e,"set","$attrs")}function uc(e,t,s,a){const[u,o]=e.propsOptions;let M=!1,D;if(t)for(let k in t){if(kr(k))continue;const y=t[k];let v;u&&Ye(u,v=Rs(k))?!o||!o.includes(v)?s[v]=y:(D||(D={}))[v]=y:Xr(e.emitsOptions,k)||(!(k in a)||y!==a[k])&&(a[k]=y,M=!0)}if(o){const k=Qe(s),y=D||gt;for(let v=0;v<o.length;v++){const I=o[v];s[I]=Ca(u,k,I,y[I],e,!Ye(y,I))}}return M}function Ca(e,t,s,a,u,o){const M=e[s];if(M!=null){const D=Ye(M,"default");if(D&&a===void 0){const k=M.default;if(M.type!==Function&&!M.skipFactory&&_e(k)){const{propsDefaults:y}=u;if(s in y)a=y[s];else{const v=fr(u);a=y[s]=k.call(null,t),v()}}else a=k}M[0]&&(o&&!D?a=!1:M[1]&&(a===""||a===ri(s))&&(a=!0))}return a}function hc(e,t,s=!1){const a=t.propsCache,u=a.get(e);if(u)return u;const o=e.props,M={},D=[];let k=!1;if(!_e(e)){const v=I=>{k=!0;const[q,z]=hc(I,t,!0);Ft(M,q),z&&D.push(...z)};!s&&t.mixins.length&&t.mixins.forEach(v),e.extends&&v(e.extends),e.mixins&&e.mixins.forEach(v)}if(!o&&!k)return mt(e)&&a.set(e,ki),ki;if(De(o))for(let v=0;v<o.length;v++){const I=Rs(o[v]);Gn(I)&&(M[I]=gt)}else if(o)for(const v in o){const I=Rs(v);if(Gn(I)){const q=o[v],z=M[I]=De(q)||_e(q)?{type:q}:Ft({},q);if(z){const ne=In(Boolean,z.type),oe=In(String,z.type);z[0]=ne>-1,z[1]=oe<0||ne<oe,(ne>-1||Ye(z,"default"))&&D.push(I)}}}const y=[M,D];return mt(e)&&a.set(e,y),y}function Gn(e){return e[0]!=="$"}function xn(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:e===null?"null":""}function Fn(e,t){return xn(e)===xn(t)}function In(e,t){return De(t)?t.findIndex(s=>Fn(s,e)):_e(t)&&Fn(t,e)?0:-1}const fc=e=>e[0]==="_"||e==="$stable",ln=e=>De(e)?e.map(vs):[vs(e)],Bu=(e,t,s)=>{if(t._n)return t;const a=Zt((...u)=>ln(t(...u)),s);return a._c=!1,a},pc=(e,t,s)=>{const a=e._ctx;for(const u in e){if(fc(u))continue;const o=e[u];if(_e(o))t[u]=Bu(u,o,a);else if(o!=null){const M=ln(o);t[u]=()=>M}}},dc=(e,t)=>{const s=ln(t);e.slots.default=()=>s},Lu=(e,t)=>{if(e.vnode.shapeFlag&32){const s=t._;s?(e.slots=Qe(t),Lr(t,"_",s)):pc(t,e.slots={})}else e.slots={},t&&dc(e,t);Lr(e.slots,Qr,1)},Tu=(e,t,s)=>{const{vnode:a,slots:u}=e;let o=!0,M=gt;if(a.shapeFlag&32){const D=t._;D?s&&D===1?o=!1:(Ft(u,t),!s&&D===1&&delete u._):(o=!t.$stable,pc(t,u)),M=t}else t&&(dc(e,t),M={default:1});if(o)for(const D in u)!fc(D)&&M[D]==null&&delete u[D]};function ya(e,t,s,a,u=!1){if(De(e)){e.forEach((q,z)=>ya(q,t&&(De(t)?t[z]:t),s,a,u));return}if(Ui(a)&&!u)return;const o=a.shapeFlag&4?ea(a.component)||a.component.proxy:a.el,M=u?null:o,{i:D,r:k}=e,y=t&&t.r,v=D.refs===gt?D.refs={}:D.refs,I=D.setupState;if(y!=null&&y!==k&&(Lt(y)?(v[y]=null,Ye(I,y)&&(I[y]=null)):Tt(y)&&(y.value=null)),_e(k))ti(k,D,12,[M,v]);else{const q=Lt(k),z=Tt(k),ne=e.f;if(q||z){const oe=()=>{if(ne){const pe=q?Ye(I,k)?I[k]:v[k]:k.value;u?De(pe)&&Wa(pe,o):De(pe)?pe.includes(o)||pe.push(o):q?(v[k]=[o],Ye(I,k)&&(I[k]=v[k])):(k.value=[o],e.k&&(v[e.k]=k.value))}else q?(v[k]=M,Ye(I,k)&&(I[k]=M)):z&&(k.value=M,e.k&&(v[e.k]=M))};u||ne?oe():(oe.id=-1,Yt(oe,s))}}}const Yt=iu;function Gu(e){return xu(e)}function xu(e,t){const s=kl();s.__VUE__=!0;const{insert:a,remove:u,patchProp:o,createElement:M,createText:D,createComment:k,setText:y,setElementText:v,parentNode:I,nextSibling:q,setScopeId:z=us,insertStaticContent:ne}=e,oe=(P,G,U,Y=null,J=null,ee=null,ce=void 0,K=null,ie=!!G.dynamicChildren)=>{if(P===G)return;P&&!Vi(P,G)&&(Y=X(P),jt(P,J,ee,!0),P=null),G.patchFlag===-2&&(ie=!1,G.dynamicChildren=null);const{type:Q,ref:he,shapeFlag:Pe}=G;switch(Q){case Zr:pe(P,G,U,Y);break;case ii:fe(P,G,U,Y);break;case Pr:P==null&&ke(G,U,Y,ce);break;case Rt:Kt(P,G,U,Y,J,ee,ce,K,ie);break;default:Pe&1?je(P,G,U,Y,J,ee,ce,K,ie):Pe&6?as(P,G,U,Y,J,ee,ce,K,ie):(Pe&64||Pe&128)&&Q.process(P,G,U,Y,J,ee,ce,K,ie,Me)}he!=null&&J&&ya(he,P&&P.ref,ee,G||P,!G)},pe=(P,G,U,Y)=>{if(P==null)a(G.el=D(G.children),U,Y);else{const J=G.el=P.el;G.children!==P.children&&y(J,G.children)}},fe=(P,G,U,Y)=>{P==null?a(G.el=k(G.children||""),U,Y):G.el=P.el},ke=(P,G,U,Y)=>{[P.el,P.anchor]=ne(P.children,G,U,Y,P.el,P.anchor)},Ie=({el:P,anchor:G},U,Y)=>{let J;for(;P&&P!==G;)J=q(P),a(P,U,Y),P=J;a(G,U,Y)},Je=({el:P,anchor:G})=>{let U;for(;P&&P!==G;)U=q(P),u(P),P=U;u(G)},je=(P,G,U,Y,J,ee,ce,K,ie)=>{G.type==="svg"?ce="svg":G.type==="math"&&(ce="mathml"),P==null?He(G,U,Y,J,ee,ce,K,ie):ge(P,G,J,ee,ce,K,ie)},He=(P,G,U,Y,J,ee,ce,K)=>{let ie,Q;const{props:he,shapeFlag:Pe,transition:Ae,dirs:Ve}=P;if(ie=P.el=M(P.type,ee,he&&he.is,he),Pe&8?v(ie,P.children):Pe&16&&Ue(P.children,ie,null,Y,J,ca(P,ee),ce,K),Ve&&li(P,null,Y,"created"),Dt(ie,P,P.scopeId,ce,Y),he){for(const ft in he)ft!=="value"&&!kr(ft)&&o(ie,ft,null,he[ft],ee,P.children,Y,J,qt);"value"in he&&o(ie,"value",null,he.value,ee),(Q=he.onVnodeBeforeMount)&&Cs(Q,Y,P)}Ve&&li(P,null,Y,"beforeMount");const ze=Fu(J,Ae);ze&&Ae.beforeEnter(ie),a(ie,G,U),((Q=he&&he.onVnodeMounted)||ze||Ve)&&Yt(()=>{Q&&Cs(Q,Y,P),ze&&Ae.enter(ie),Ve&&li(P,null,Y,"mounted")},J)},Dt=(P,G,U,Y,J)=>{if(U&&z(P,U),Y)for(let ee=0;ee<Y.length;ee++)z(P,Y[ee]);if(J){let ee=J.subTree;if(G===ee){const ce=J.vnode;Dt(P,ce,ce.scopeId,ce.slotScopeIds,J.parent)}}},Ue=(P,G,U,Y,J,ee,ce,K,ie=0)=>{for(let Q=ie;Q<P.length;Q++){const he=P[Q]=K?Xs(P[Q]):vs(P[Q]);oe(null,he,G,U,Y,J,ee,ce,K)}},ge=(P,G,U,Y,J,ee,ce)=>{const K=G.el=P.el;let{patchFlag:ie,dynamicChildren:Q,dirs:he}=G;ie|=P.patchFlag&16;const Pe=P.props||gt,Ae=G.props||gt;let Ve;if(U&&ci(U,!1),(Ve=Ae.onVnodeBeforeUpdate)&&Cs(Ve,U,G,P),he&&li(G,P,U,"beforeUpdate"),U&&ci(U,!0),Q?Xe(P.dynamicChildren,Q,K,U,Y,ca(G,J),ee):ce||at(P,G,K,null,U,Y,ca(G,J),ee,!1),ie>0){if(ie&16)Mt(K,G,Pe,Ae,U,Y,J);else if(ie&2&&Pe.class!==Ae.class&&o(K,"class",null,Ae.class,J),ie&4&&o(K,"style",Pe.style,Ae.style,J),ie&8){const ze=G.dynamicProps;for(let ft=0;ft<ze.length;ft++){const At=ze[ft],Gt=Pe[At],fs=Ae[At];(fs!==Gt||At==="value")&&o(K,At,Gt,fs,J,P.children,U,Y,qt)}}ie&1&&P.children!==G.children&&v(K,G.children)}else!ce&&Q==null&&Mt(K,G,Pe,Ae,U,Y,J);((Ve=Ae.onVnodeUpdated)||he)&&Yt(()=>{Ve&&Cs(Ve,U,G,P),he&&li(G,P,U,"updated")},Y)},Xe=(P,G,U,Y,J,ee,ce)=>{for(let K=0;K<G.length;K++){const ie=P[K],Q=G[K],he=ie.el&&(ie.type===Rt||!Vi(ie,Q)||ie.shapeFlag&70)?I(ie.el):U;oe(ie,Q,he,null,Y,J,ee,ce,!0)}},Mt=(P,G,U,Y,J,ee,ce)=>{if(U!==Y){if(U!==gt)for(const K in U)!kr(K)&&!(K in Y)&&o(P,K,U[K],null,ce,G.children,J,ee,qt);for(const K in Y){if(kr(K))continue;const ie=Y[K],Q=U[K];ie!==Q&&K!=="value"&&o(P,K,Q,ie,ce,G.children,J,ee,qt)}"value"in Y&&o(P,"value",U.value,Y.value,ce)}},Kt=(P,G,U,Y,J,ee,ce,K,ie)=>{const Q=G.el=P?P.el:D(""),he=G.anchor=P?P.anchor:D("");let{patchFlag:Pe,dynamicChildren:Ae,slotScopeIds:Ve}=G;Ve&&(K=K?K.concat(Ve):Ve),P==null?(a(Q,U,Y),a(he,U,Y),Ue(G.children||[],U,he,J,ee,ce,K,ie)):Pe>0&&Pe&64&&Ae&&P.dynamicChildren?(Xe(P.dynamicChildren,Ae,U,J,ee,ce,K),(G.key!=null||J&&G===J.subTree)&&gc(P,G,!0)):at(P,G,U,he,J,ee,ce,K,ie)},as=(P,G,U,Y,J,ee,ce,K,ie)=>{G.slotScopeIds=K,P==null?G.shapeFlag&512?J.ctx.activate(G,U,Y,ce,ie):ni(G,U,Y,J,ee,ce,ie):ns(P,G,ie)},ni=(P,G,U,Y,J,ee,ce)=>{const K=P.component=Ou(P,Y,J);if(ic(P)&&(K.ctx.renderer=Me),$u(K),K.asyncDep){if(J&&J.registerDep(K,it),!P.el){const ie=K.subTree=kt(ii);fe(null,ie,G,U)}}else it(K,P,G,U,J,ee,ce)},ns=(P,G,U)=>{const Y=G.component=P.component;if(Qo(P,G,U))if(Y.asyncDep&&!Y.asyncResolved){ht(Y,G,U);return}else Y.next=G,zo(Y.update),Y.effect.dirty=!0,Y.update();else G.el=P.el,Y.vnode=G},it=(P,G,U,Y,J,ee,ce)=>{const K=()=>{if(P.isMounted){let{next:he,bu:Pe,u:Ae,parent:Ve,vnode:ze}=P;{const bi=mc(P);if(bi){he&&(he.el=ze.el,ht(P,he,ce)),bi.asyncDep.then(()=>{P.isUnmounted||K()});return}}let ft=he,At;ci(P,!1),he?(he.el=ze.el,ht(P,he,ce)):he=ze,Pe&&Er(Pe),(At=he.props&&he.props.onVnodeBeforeUpdate)&&Cs(At,Ve,he,ze),ci(P,!0);const Gt=na(P),fs=P.subTree;P.subTree=Gt,oe(fs,Gt,I(fs.el),X(fs),P,J,ee),he.el=Gt.el,ft===null&&Ko(P,Gt.el),Ae&&Yt(Ae,J),(At=he.props&&he.props.onVnodeUpdated)&&Yt(()=>Cs(At,Ve,he,ze),J)}else{let he;const{el:Pe,props:Ae}=G,{bm:Ve,m:ze,parent:ft}=P,At=Ui(G);if(ci(P,!1),Ve&&Er(Ve),!At&&(he=Ae&&Ae.onVnodeBeforeMount)&&Cs(he,ft,G),ci(P,!0),Pe&&St){const Gt=()=>{P.subTree=na(P),St(Pe,P.subTree,P,J,null)};At?G.type.__asyncLoader().then(()=>!P.isUnmounted&&Gt()):Gt()}else{const Gt=P.subTree=na(P);oe(null,Gt,U,Y,P,J,ee),G.el=Gt.el}if(ze&&Yt(ze,J),!At&&(he=Ae&&Ae.onVnodeMounted)){const Gt=G;Yt(()=>Cs(he,ft,Gt),J)}(G.shapeFlag&256||ft&&Ui(ft.vnode)&&ft.vnode.shapeFlag&256)&&P.a&&Yt(P.a,J),P.isMounted=!0,G=U=Y=null}},ie=P.effect=new Ja(K,us,()=>rn(Q),P.scope),Q=P.update=()=>{ie.dirty&&ie.run()};Q.id=P.uid,ci(P,!0),Q()},ht=(P,G,U)=>{G.component=P;const Y=P.vnode.props;P.vnode=G,P.next=null,vu(P,G.props,Y,U),Tu(P,G.children,U),mi(),yn(P),wi()},at=(P,G,U,Y,J,ee,ce,K,ie=!1)=>{const Q=P&&P.children,he=P?P.shapeFlag:0,Pe=G.children,{patchFlag:Ae,shapeFlag:Ve}=G;if(Ae>0){if(Ae&128){qs(Q,Pe,U,Y,J,ee,ce,K,ie);return}else if(Ae&256){Gs(Q,Pe,U,Y,J,ee,ce,K,ie);return}}Ve&8?(he&16&&qt(Q,J,ee),Pe!==Q&&v(U,Pe)):he&16?Ve&16?qs(Q,Pe,U,Y,J,ee,ce,K,ie):qt(Q,J,ee,!0):(he&8&&v(U,""),Ve&16&&Ue(Pe,U,Y,J,ee,ce,K,ie))},Gs=(P,G,U,Y,J,ee,ce,K,ie)=>{P=P||ki,G=G||ki;const Q=P.length,he=G.length,Pe=Math.min(Q,he);let Ae;for(Ae=0;Ae<Pe;Ae++){const Ve=G[Ae]=ie?Xs(G[Ae]):vs(G[Ae]);oe(P[Ae],Ve,U,null,J,ee,ce,K,ie)}Q>he?qt(P,J,ee,!0,!1,Pe):Ue(G,U,Y,J,ee,ce,K,ie,Pe)},qs=(P,G,U,Y,J,ee,ce,K,ie)=>{let Q=0;const he=G.length;let Pe=P.length-1,Ae=he-1;for(;Q<=Pe&&Q<=Ae;){const Ve=P[Q],ze=G[Q]=ie?Xs(G[Q]):vs(G[Q]);if(Vi(Ve,ze))oe(Ve,ze,U,null,J,ee,ce,K,ie);else break;Q++}for(;Q<=Pe&&Q<=Ae;){const Ve=P[Pe],ze=G[Ae]=ie?Xs(G[Ae]):vs(G[Ae]);if(Vi(Ve,ze))oe(Ve,ze,U,null,J,ee,ce,K,ie);else break;Pe--,Ae--}if(Q>Pe){if(Q<=Ae){const Ve=Ae+1,ze=Ve<he?G[Ve].el:Y;for(;Q<=Ae;)oe(null,G[Q]=ie?Xs(G[Q]):vs(G[Q]),U,ze,J,ee,ce,K,ie),Q++}}else if(Q>Ae)for(;Q<=Pe;)jt(P[Q],J,ee,!0),Q++;else{const Ve=Q,ze=Q,ft=new Map;for(Q=ze;Q<=Ae;Q++){const es=G[Q]=ie?Xs(G[Q]):vs(G[Q]);es.key!=null&&ft.set(es.key,Q)}let At,Gt=0;const fs=Ae-ze+1;let bi=!1,dn=0;const Hi=new Array(fs);for(Q=0;Q<fs;Q++)Hi[Q]=0;for(Q=Ve;Q<=Pe;Q++){const es=P[Q];if(Gt>=fs){jt(es,J,ee,!0);continue}let Es;if(es.key!=null)Es=ft.get(es.key);else for(At=ze;At<=Ae;At++)if(Hi[At-ze]===0&&Vi(es,G[At])){Es=At;break}Es===void 0?jt(es,J,ee,!0):(Hi[Es-ze]=Q+1,Es>=dn?dn=Es:bi=!0,oe(es,G[Es],U,null,J,ee,ce,K,ie),Gt++)}const gn=bi?Iu(Hi):ki;for(At=gn.length-1,Q=fs-1;Q>=0;Q--){const es=ze+Q,Es=G[es],mn=es+1<he?G[es+1].el:Y;Hi[Q]===0?oe(null,Es,U,mn,J,ee,ce,K,ie):bi&&(At<0||Q!==gn[At]?ks(Es,U,mn,2):At--)}}},ks=(P,G,U,Y,J=null)=>{const{el:ee,type:ce,transition:K,children:ie,shapeFlag:Q}=P;if(Q&6){ks(P.component.subTree,G,U,Y);return}if(Q&128){P.suspense.move(G,U,Y);return}if(Q&64){ce.move(P,G,U,Me);return}if(ce===Rt){a(ee,G,U);for(let Pe=0;Pe<ie.length;Pe++)ks(ie[Pe],G,U,Y);a(P.anchor,G,U);return}if(ce===Pr){Ie(P,G,U);return}if(Y!==2&&Q&1&&K)if(Y===0)K.beforeEnter(ee),a(ee,G,U),Yt(()=>K.enter(ee),J);else{const{leave:Pe,delayLeave:Ae,afterLeave:Ve}=K,ze=()=>a(ee,G,U),ft=()=>{Pe(ee,()=>{ze(),Ve&&Ve()})};Ae?Ae(ee,ze,ft):ft()}else a(ee,G,U)},jt=(P,G,U,Y=!1,J=!1)=>{const{type:ee,props:ce,ref:K,children:ie,dynamicChildren:Q,shapeFlag:he,patchFlag:Pe,dirs:Ae}=P;if(K!=null&&ya(K,null,U,P,!0),he&256){G.ctx.deactivate(P);return}const Ve=he&1&&Ae,ze=!Ui(P);let ft;if(ze&&(ft=ce&&ce.onVnodeBeforeUnmount)&&Cs(ft,G,P),he&6)dr(P.component,U,Y);else{if(he&128){P.suspense.unmount(U,Y);return}Ve&&li(P,null,G,"beforeUnmount"),he&64?P.type.remove(P,G,U,J,Me,Y):Q&&(ee!==Rt||Pe>0&&Pe&64)?qt(Q,G,U,!1,!0):(ee===Rt&&Pe&384||!J&&he&16)&&qt(ie,G,U),Y&&Si(P)}(ze&&(ft=ce&&ce.onVnodeUnmounted)||Ve)&&Yt(()=>{ft&&Cs(ft,G,P),Ve&&li(P,null,G,"unmounted")},U)},Si=P=>{const{type:G,el:U,anchor:Y,transition:J}=P;if(G===Rt){Ai(U,Y);return}if(G===Pr){Je(P);return}const ee=()=>{u(U),J&&!J.persisted&&J.afterLeave&&J.afterLeave()};if(P.shapeFlag&1&&J&&!J.persisted){const{leave:ce,delayLeave:K}=J,ie=()=>ce(U,ee);K?K(P.el,ee,ie):ie()}else ee()},Ai=(P,G)=>{let U;for(;P!==G;)U=q(P),u(P),P=U;u(G)},dr=(P,G,U)=>{const{bum:Y,scope:J,update:ee,subTree:ce,um:K}=P;Y&&Er(Y),J.stop(),ee&&(ee.active=!1,jt(ce,P,G,U)),K&&Yt(K,G),Yt(()=>{P.isUnmounted=!0},G),G&&G.pendingBranch&&!G.isUnmounted&&P.asyncDep&&!P.asyncResolved&&P.suspenseId===G.pendingId&&(G.deps--,G.deps===0&&G.resolve())},qt=(P,G,U,Y=!1,J=!1,ee=0)=>{for(let ce=ee;ce<P.length;ce++)jt(P[ce],G,U,Y,J)},X=P=>P.shapeFlag&6?X(P.component.subTree):P.shapeFlag&128?P.suspense.next():q(P.anchor||P.el);let ue=!1;const le=(P,G,U)=>{P==null?G._vnode&&jt(G._vnode,null,null,!0):oe(G._vnode||null,P,G,null,null,null,U),ue||(ue=!0,yn(),Yl(),ue=!1),G._vnode=P},Me={p:oe,um:jt,m:ks,r:Si,mt:ni,mc:Ue,pc:at,pbc:Xe,n:X,o:e};let nt,St;return t&&([nt,St]=t(Me)),{render:le,hydrate:nt,createApp:Cu(le,nt)}}function ca({type:e,props:t},s){return s==="svg"&&e==="foreignObject"||s==="mathml"&&e==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:s}function ci({effect:e,update:t},s){e.allowRecurse=t.allowRecurse=s}function Fu(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}function gc(e,t,s=!1){const a=e.children,u=t.children;if(De(a)&&De(u))for(let o=0;o<a.length;o++){const M=a[o];let D=u[o];D.shapeFlag&1&&!D.dynamicChildren&&((D.patchFlag<=0||D.patchFlag===32)&&(D=u[o]=Xs(u[o]),D.el=M.el),s||gc(M,D)),D.type===Zr&&(D.el=M.el)}}function Iu(e){const t=e.slice(),s=[0];let a,u,o,M,D;const k=e.length;for(a=0;a<k;a++){const y=e[a];if(y!==0){if(u=s[s.length-1],e[u]<y){t[a]=u,s.push(a);continue}for(o=0,M=s.length-1;o<M;)D=o+M>>1,e[s[D]]<y?o=D+1:M=D;y<e[s[o]]&&(o>0&&(t[a]=s[o-1]),s[o]=a)}}for(o=s.length,M=s[o-1];o-- >0;)s[o]=M,M=t[M];return s}function mc(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:mc(t)}const Hu=e=>e.__isTeleport,Rt=Symbol.for("v-fgt"),Zr=Symbol.for("v-txt"),ii=Symbol.for("v-cmt"),Pr=Symbol.for("v-stc"),$i=[];let As=null;function wt(e=!1){$i.push(As=e?null:[])}function Vu(){$i.pop(),As=$i[$i.length-1]||null}let tr=1;function Hn(e){tr+=e}function wc(e){return e.dynamicChildren=tr>0?As||ki:null,Vu(),tr>0&&As&&As.push(e),e}function Wt(e,t,s,a,u,o){return wc(Le(e,t,s,a,u,o,!0))}function Fs(e,t,s,a,u){return wc(kt(e,t,s,a,u,!0))}function Nr(e){return e?e.__v_isVNode===!0:!1}function Vi(e,t){return e.type===t.type&&e.key===t.key}const Qr="__vInternal",Mc=({key:e})=>e??null,vr=({ref:e,ref_key:t,ref_for:s})=>(typeof e=="number"&&(e=""+e),e!=null?Lt(e)||Tt(e)||_e(e)?{i:Bt,r:e,k:t,f:!!s}:e:null);function Le(e,t=null,s=null,a=0,u=null,o=e===Rt?0:1,M=!1,D=!1){const k={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Mc(t),ref:t&&vr(t),scopeId:jr,slotScopeIds:null,children:s,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:a,dynamicProps:u,dynamicChildren:null,appContext:null,ctx:Bt};return D?(cn(k,s),o&128&&e.normalize(k)):s&&(k.shapeFlag|=Lt(s)?8:16),tr>0&&!M&&As&&(k.patchFlag>0||o&6)&&k.patchFlag!==32&&As.push(k),k}const kt=Nu;function Nu(e,t=null,s=null,a=0,u=null,o=!1){if((!e||e===eu)&&(e=ii),Nr(e)){const D=Bi(e,t,!0);return s&&cn(D,s),tr>0&&!o&&As&&(D.shapeFlag&6?As[As.indexOf(e)]=D:As.push(D)),D.patchFlag|=-2,D}if(Yu(e)&&(e=e.__vccOpts),t){t=qu(t);let{class:D,style:k}=t;D&&!Lt(D)&&(t.class=Or(D)),mt(k)&&(Ul(k)&&!De(k)&&(k=Ft({},k)),t.style=Oa(k))}const M=Lt(e)?1:su(e)?128:Hu(e)?64:mt(e)?4:_e(e)?2:0;return Le(e,t,s,a,u,M,o,!0)}function qu(e){return e?Ul(e)||Qr in e?Ft({},e):e:null}function Bi(e,t,s=!1){const{props:a,ref:u,patchFlag:o,children:M}=e,D=t?_u(a||{},t):a;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:D,key:D&&Mc(D),ref:t&&t.ref?s&&u?De(u)?u.concat(vr(t)):[u,vr(t)]:vr(t):u,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:M,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Rt?o===-1?16:o|16:o,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Bi(e.ssContent),ssFallback:e.ssFallback&&Bi(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function yt(e=" ",t=0){return kt(Zr,null,e,t)}function g1(e,t){const s=kt(Pr,null,e);return s.staticCount=t,s}function Br(e="",t=!1){return t?(wt(),Fs(ii,null,e)):kt(ii,null,e)}function vs(e){return e==null||typeof e=="boolean"?kt(ii):De(e)?kt(Rt,null,e.slice()):typeof e=="object"?Xs(e):kt(Zr,null,String(e))}function Xs(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:Bi(e)}function cn(e,t){let s=0;const{shapeFlag:a}=e;if(t==null)t=null;else if(De(t))s=16;else if(typeof t=="object")if(a&65){const u=t.default;u&&(u._c&&(u._d=!1),cn(e,u()),u._c&&(u._d=!0));return}else{s=32;const u=t._;!u&&!(Qr in t)?t._ctx=Bt:u===3&&Bt&&(Bt.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else _e(t)?(t={default:t,_ctx:Bt},s=32):(t=String(t),a&64?(s=16,t=[yt(t)]):s=8);e.children=t,e.shapeFlag|=s}function _u(...e){const t={};for(let s=0;s<e.length;s++){const a=e[s];for(const u in a)if(u==="class")t.class!==a.class&&(t.class=Or([t.class,a.class]));else if(u==="style")t.style=Oa([t.style,a.style]);else if(_r(u)){const o=t[u],M=a[u];M&&o!==M&&!(De(o)&&o.includes(M))&&(t[u]=o?[].concat(o,M):M)}else u!==""&&(t[u]=a[u])}return t}function Cs(e,t,s,a=null){bs(e,t,7,[s,a])}const Wu=oc();let Uu=0;function Ou(e,t,s){const a=e.type,u=(t?t.appContext:e.appContext)||Wu,o={uid:Uu++,vnode:e,type:a,parent:t,appContext:u,root:null,next:null,subTree:null,effect:null,update:null,scope:new yl(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(u.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:hc(a,u),emitsOptions:Ql(a,u),emit:null,emitted:null,propsDefaults:gt,inheritAttrs:a.inheritAttrs,ctx:gt,data:gt,props:gt,attrs:gt,slots:gt,refs:gt,setupState:gt,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:s,suspenseId:s?s.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=t?t.root:o,o.emit=jo.bind(null,o),e.ce&&e.ce(o),o}let xt=null;const Sc=()=>xt||Bt;let qr,Pa;{const e=kl(),t=(s,a)=>{let u;return(u=e[s])||(u=e[s]=[]),u.push(a),o=>{u.length>1?u.forEach(M=>M(o)):u[0](o)}};qr=t("__VUE_INSTANCE_SETTERS__",s=>xt=s),Pa=t("__VUE_SSR_SETTERS__",s=>Kr=s)}const fr=e=>{const t=xt;return qr(e),e.scope.on(),()=>{e.scope.off(),qr(t)}},Vn=()=>{xt&&xt.scope.off(),qr(null)};function Ac(e){return e.vnode.shapeFlag&4}let Kr=!1;function $u(e,t=!1){t&&Pa(t);const{props:s,children:a}=e.vnode,u=Ac(e);Pu(e,s,u,t),Lu(e,a);const o=u?zu(e,t):void 0;return t&&Pa(!1),o}function zu(e,t){const s=e.type;e.accessCache=Object.create(null),e.proxy=zr(new Proxy(e.ctx,Su));const{setup:a}=s;if(a){const u=e.setupContext=a.length>1?Xu(e):null,o=fr(e);mi();const M=ti(a,e,0,[e.props,u]);if(wi(),o(),bl(M)){if(M.then(Vn,Vn),t)return M.then(D=>{Nn(e,D,t)}).catch(D=>{Jr(D,e,0)});e.asyncDep=M}else Nn(e,M,t)}else bc(e,t)}function Nn(e,t,s){_e(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:mt(t)&&(e.setupState=Jl(t)),bc(e,s)}let qn;function bc(e,t,s){const a=e.type;if(!e.render){if(!t&&qn&&!a.render){const u=a.template||nn(e).template;if(u){const{isCustomElement:o,compilerOptions:M}=e.appContext.config,{delimiters:D,compilerOptions:k}=a,y=Ft(Ft({isCustomElement:o,delimiters:D},M),k);a.render=qn(u,y)}}e.render=a.render||us}{const u=fr(e);mi();try{Au(e)}finally{wi(),u()}}}function Ju(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,s){return Qt(e,"get","$attrs"),t[s]}}))}function Xu(e){const t=s=>{e.exposed=s||{}};return{get attrs(){return Ju(e)},slots:e.slots,emit:e.emit,expose:t}}function ea(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Jl(zr(e.exposed)),{get(t,s){if(s in t)return t[s];if(s in Oi)return Oi[s](e)},has(t,s){return s in t||s in Oi}}))}function ju(e,t=!0){return _e(e)?e.displayName||e.name:e.name||t&&e.__name}function Yu(e){return _e(e)&&"__vccOpts"in e}const ss=(e,t)=>Io(e,t,Kr);function m1(e,t,s=gt){const a=Sc(),u=Rs(t),o=ri(t),M=qo((k,y)=>{let v;return nu(()=>{const I=e[t];Ts(v,I)&&(v=I,y())}),{get(){return k(),s.get?s.get(v):v},set(I){const q=a.vnode.props;!(q&&(t in q||u in q||o in q)&&(`onUpdate:${t}`in q||`onUpdate:${u}`in q||`onUpdate:${o}`in q))&&Ts(I,v)&&(v=I,y()),a.emit(`update:${t}`,s.set?s.set(I):I)}}}),D=t==="modelValue"?"modelModifiers":`${t}Modifiers`;return M[Symbol.iterator]=()=>{let k=0;return{next(){return k<2?{value:k++?e[D]||{}:M,done:!1}:{done:!0}}}},M}function Rc(e,t,s){const a=arguments.length;return a===2?mt(t)&&!De(t)?Nr(t)?kt(e,null,[t]):kt(e,t):kt(e,null,t):(a>3?s=Array.prototype.slice.call(arguments,2):a===3&&Nr(s)&&(s=[s]),kt(e,t,s))}const Zu="3.4.15";/**
* @vue/runtime-dom v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Qu="http://www.w3.org/2000/svg",Ku="http://www.w3.org/1998/Math/MathML",js=typeof document<"u"?document:null,_n=js&&js.createElement("template"),eh={insert:(e,t,s)=>{t.insertBefore(e,s||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,s,a)=>{const u=t==="svg"?js.createElementNS(Qu,e):t==="mathml"?js.createElementNS(Ku,e):js.createElement(e,s?{is:s}:void 0);return e==="select"&&a&&a.multiple!=null&&u.setAttribute("multiple",a.multiple),u},createText:e=>js.createTextNode(e),createComment:e=>js.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>js.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,s,a,u,o){const M=s?s.previousSibling:t.lastChild;if(u&&(u===o||u.nextSibling))for(;t.insertBefore(u.cloneNode(!0),s),!(u===o||!(u=u.nextSibling)););else{_n.innerHTML=a==="svg"?`<svg>${e}</svg>`:a==="mathml"?`<math>${e}</math>`:e;const D=_n.content;if(a==="svg"||a==="mathml"){const k=D.firstChild;for(;k.firstChild;)D.appendChild(k.firstChild);D.removeChild(k)}t.insertBefore(D,s)}return[M?M.nextSibling:t.firstChild,s?s.previousSibling:t.lastChild]}},th=Symbol("_vtc");function sh(e,t,s){const a=e[th];a&&(t=(t?[t,...a]:[...a]).join(" ")),t==null?e.removeAttribute("class"):s?e.setAttribute("class",t):e.className=t}const on=Symbol("_vod"),Dc={beforeMount(e,{value:t},{transition:s}){e[on]=e.style.display==="none"?"":e.style.display,s&&t?s.beforeEnter(e):Ni(e,t)},mounted(e,{value:t},{transition:s}){s&&t&&s.enter(e)},updated(e,{value:t,oldValue:s},{transition:a}){!t!=!s&&(a?t?(a.beforeEnter(e),Ni(e,!0),a.enter(e)):a.leave(e,()=>{Ni(e,!1)}):Ni(e,t))},beforeUnmount(e,{value:t}){Ni(e,t)}};function Ni(e,t){e.style.display=t?e[on]:"none"}const ih=Symbol("");function rh(e,t,s){const a=e.style,u=a.display,o=Lt(s);if(s&&!o){if(t&&!Lt(t))for(const M in t)s[M]==null&&va(a,M,"");for(const M in s)va(a,M,s[M])}else if(o){if(t!==s){const M=a[ih];M&&(s+=";"+M),a.cssText=s}}else t&&e.removeAttribute("style");on in e&&(a.display=u)}const Wn=/\s*!important$/;function va(e,t,s){if(De(s))s.forEach(a=>va(e,t,a));else if(s==null&&(s=""),t.startsWith("--"))e.setProperty(t,s);else{const a=ah(e,t);Wn.test(s)?e.setProperty(ri(a),s.replace(Wn,""),"important"):e[a]=s}}const Un=["Webkit","Moz","ms"],oa={};function ah(e,t){const s=oa[t];if(s)return s;let a=Rs(t);if(a!=="filter"&&a in e)return oa[t]=a;a=Ur(a);for(let u=0;u<Un.length;u++){const o=Un[u]+a;if(o in e)return oa[t]=o}return t}const On="http://www.w3.org/1999/xlink";function nh(e,t,s,a,u){if(a&&t.startsWith("xlink:"))s==null?e.removeAttributeNS(On,t.slice(6,t.length)):e.setAttributeNS(On,t,s);else{const o=fo(t);s==null||o&&!El(s)?e.removeAttribute(t):e.setAttribute(t,o?"":s)}}function lh(e,t,s,a,u,o,M){if(t==="innerHTML"||t==="textContent"){a&&M(a,u,o),e[t]=s??"";return}const D=e.tagName;if(t==="value"&&D!=="PROGRESS"&&!D.includes("-")){e._value=s;const y=D==="OPTION"?e.getAttribute("value"):e.value,v=s??"";y!==v&&(e.value=v),s==null&&e.removeAttribute(t);return}let k=!1;if(s===""||s==null){const y=typeof e[t];y==="boolean"?s=El(s):s==null&&y==="string"?(s="",k=!0):y==="number"&&(s=0,k=!0)}try{e[t]=s}catch{}k&&e.removeAttribute(t)}function Zs(e,t,s,a){e.addEventListener(t,s,a)}function ch(e,t,s,a){e.removeEventListener(t,s,a)}const $n=Symbol("_vei");function oh(e,t,s,a,u=null){const o=e[$n]||(e[$n]={}),M=o[t];if(a&&M)M.value=a;else{const[D,k]=uh(t);if(a){const y=o[t]=ph(a,u);Zs(e,D,y,k)}else M&&(ch(e,D,M,k),o[t]=void 0)}}const zn=/(?:Once|Passive|Capture)$/;function uh(e){let t;if(zn.test(e)){t={};let a;for(;a=e.match(zn);)e=e.slice(0,e.length-a[0].length),t[a[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):ri(e.slice(2)),t]}let ua=0;const hh=Promise.resolve(),fh=()=>ua||(hh.then(()=>ua=0),ua=Date.now());function ph(e,t){const s=a=>{if(!a._vts)a._vts=Date.now();else if(a._vts<=s.attached)return;bs(dh(a,s.value),t,5,[a])};return s.value=e,s.attached=fh(),s}function dh(e,t){if(De(t)){const s=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{s.call(e),e._stopped=!0},t.map(a=>u=>!u._stopped&&a&&a(u))}else return t}const Jn=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,gh=(e,t,s,a,u,o,M,D,k)=>{const y=u==="svg";t==="class"?sh(e,a,y):t==="style"?rh(e,s,a):_r(t)?_a(t)||oh(e,t,s,a,M):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):mh(e,t,a,y))?lh(e,t,a,o,M,D,k):(t==="true-value"?e._trueValue=a:t==="false-value"&&(e._falseValue=a),nh(e,t,a,y))};function mh(e,t,s,a){if(a)return!!(t==="innerHTML"||t==="textContent"||t in e&&Jn(t)&&_e(s));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const u=e.tagName;if(u==="IMG"||u==="VIDEO"||u==="CANVAS"||u==="SOURCE")return!1}return Jn(t)&&Lt(s)?!1:t in e}const Li=e=>{const t=e.props["onUpdate:modelValue"]||!1;return De(t)?s=>Er(t,s):t};function wh(e){e.target.composing=!0}function Xn(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const Hs=Symbol("_assign"),Mh={created(e,{modifiers:{lazy:t,trim:s,number:a}},u){e[Hs]=Li(u);const o=a||u.props&&u.props.type==="number";Zs(e,t?"change":"input",M=>{if(M.target.composing)return;let D=e.value;s&&(D=D.trim()),o&&(D=Yi(D)),e[Hs](D)}),s&&Zs(e,"change",()=>{e.value=e.value.trim()}),t||(Zs(e,"compositionstart",wh),Zs(e,"compositionend",Xn),Zs(e,"change",Xn))},mounted(e,{value:t}){e.value=t??""},beforeUpdate(e,{value:t,modifiers:{lazy:s,trim:a,number:u}},o){if(e[Hs]=Li(o),e.composing)return;const M=u||e.type==="number"?Yi(e.value):e.value,D=t??"";M!==D&&(document.activeElement===e&&e.type!=="range"&&(s||a&&e.value.trim()===D)||(e.value=D))}},Ws={deep:!0,created(e,t,s){e[Hs]=Li(s),Zs(e,"change",()=>{const a=e._modelValue,u=sr(e),o=e.checked,M=e[Hs];if(De(a)){const D=$a(a,u),k=D!==-1;if(o&&!k)M(a.concat(u));else if(!o&&k){const y=[...a];y.splice(D,1),M(y)}}else if(xi(a)){const D=new Set(a);o?D.add(u):D.delete(u),M(D)}else M(kc(e,o))})},mounted:jn,beforeUpdate(e,t,s){e[Hs]=Li(s),jn(e,t,s)}};function jn(e,{value:t,oldValue:s},a){e._modelValue=t,De(t)?e.checked=$a(t,a.props.value)>-1:xi(t)?e.checked=t.has(a.props.value):t!==s&&(e.checked=Pi(t,kc(e,!0)))}const w1={deep:!0,created(e,{value:t,modifiers:{number:s}},a){const u=xi(t);Zs(e,"change",()=>{const o=Array.prototype.filter.call(e.options,M=>M.selected).map(M=>s?Yi(sr(M)):sr(M));e[Hs](e.multiple?u?new Set(o):o:o[0]),e._assigning=!0,Fi(()=>{e._assigning=!1})}),e[Hs]=Li(a)},mounted(e,{value:t,oldValue:s,modifiers:{number:a}}){Yn(e,t,s,a)},beforeUpdate(e,t,s){e[Hs]=Li(s)},updated(e,{value:t,oldValue:s,modifiers:{number:a}}){e._assigning||Yn(e,t,s,a)}};function Yn(e,t,s,a){const u=e.multiple,o=De(t);if(!(u&&!o&&!xi(t))&&!(o&&Pi(t,s))){for(let M=0,D=e.options.length;M<D;M++){const k=e.options[M],y=sr(k);if(u)if(o){const v=typeof y;v==="string"||v==="number"?k.selected=t.includes(a?Yi(y):y):k.selected=$a(t,y)>-1}else k.selected=t.has(y);else if(Pi(sr(k),t)){e.selectedIndex!==M&&(e.selectedIndex=M);return}}!u&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function sr(e){return"_value"in e?e._value:e.value}function kc(e,t){const s=t?"_trueValue":"_falseValue";return s in e?e[s]:t}const Sh=["ctrl","shift","alt","meta"],Ah={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,t)=>Sh.some(s=>e[`${s}Key`]&&!t.includes(s))},M1=(e,t)=>{const s=e._withMods||(e._withMods={}),a=t.join(".");return s[a]||(s[a]=(u,...o)=>{for(let M=0;M<t.length;M++){const D=Ah[t[M]];if(D&&D(u,t))return}return e(u,...o)})},bh={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},S1=(e,t)=>{const s=e._withKeys||(e._withKeys={}),a=t.join(".");return s[a]||(s[a]=u=>{if(!("key"in u))return;const o=ri(u.key);if(t.some(M=>M===o||bh[M]===o))return e(u)})},Rh=Ft({patchProp:gh},eh);let Zn;function Dh(){return Zn||(Zn=Gu(Rh))}const kh=(...e)=>{const t=Dh().createApp(...e),{mount:s}=t;return t.mount=a=>{const u=Ch(a);if(!u)return;const o=t._component;!_e(o)&&!o.render&&!o.template&&(o.template=u.innerHTML),u.innerHTML="";const M=s(u,!1,Eh(u));return u instanceof Element&&(u.removeAttribute("v-cloak"),u.setAttribute("data-v-app","")),M},t};function Eh(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function Ch(e){return Lt(e)?document.querySelector(e):e}var yh=!1;/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */let Ec;const ta=e=>Ec=e,Cc=Symbol();function Ba(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var zi;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(zi||(zi={}));function Ph(){const e=Pl(!0),t=e.run(()=>$t({}));let s=[],a=[];const u=zr({install(o){ta(u),u._a=o,o.provide(Cc,u),o.config.globalProperties.$pinia=u,a.forEach(M=>s.push(M)),a=[]},use(o){return!this._a&&!yh?a.push(o):s.push(o),this},_p:s,_a:null,_e:e,_s:new Map,state:t});return u}const yc=()=>{};function Qn(e,t,s,a=yc){e.push(t);const u=()=>{const o=e.indexOf(t);o>-1&&(e.splice(o,1),a())};return!s&&za()&&vl(u),u}function Ri(e,...t){e.slice().forEach(s=>{s(...t)})}const vh=e=>e();function La(e,t){e instanceof Map&&t instanceof Map&&t.forEach((s,a)=>e.set(a,s)),e instanceof Set&&t instanceof Set&&t.forEach(e.add,e);for(const s in t){if(!t.hasOwnProperty(s))continue;const a=t[s],u=e[s];Ba(u)&&Ba(a)&&e.hasOwnProperty(s)&&!Tt(a)&&!ei(a)?e[s]=La(u,a):e[s]=a}return e}const Bh=Symbol();function Lh(e){return!Ba(e)||!e.hasOwnProperty(Bh)}const{assign:zs}=Object;function Th(e){return!!(Tt(e)&&e.effect)}function Gh(e,t,s,a){const{state:u,actions:o,getters:M}=t,D=s.state.value[e];let k;function y(){D||(s.state.value[e]=u?u():{});const v=_o(s.state.value[e]);return zs(v,o,Object.keys(M||{}).reduce((I,q)=>(I[q]=zr(ss(()=>{ta(s);const z=s._s.get(e);return M[q].call(z,z)})),I),{}))}return k=Pc(e,y,t,s,a,!0),k}function Pc(e,t,s={},a,u,o){let M;const D=zs({actions:{}},s),k={deep:!0};let y,v,I=[],q=[],z;const ne=a.state.value[e];!o&&!ne&&(a.state.value[e]={}),$t({});let oe;function pe(Ue){let ge;y=v=!1,typeof Ue=="function"?(Ue(a.state.value[e]),ge={type:zi.patchFunction,storeId:e,events:z}):(La(a.state.value[e],Ue),ge={type:zi.patchObject,payload:Ue,storeId:e,events:z});const Xe=oe=Symbol();Fi().then(()=>{oe===Xe&&(y=!0)}),v=!0,Ri(I,ge,a.state.value[e])}const fe=o?function(){const{state:ge}=s,Xe=ge?ge():{};this.$patch(Mt=>{zs(Mt,Xe)})}:yc;function ke(){M.stop(),I=[],q=[],a._s.delete(e)}function Ie(Ue,ge){return function(){ta(a);const Xe=Array.from(arguments),Mt=[],Kt=[];function as(it){Mt.push(it)}function ni(it){Kt.push(it)}Ri(q,{args:Xe,name:Ue,store:je,after:as,onError:ni});let ns;try{ns=ge.apply(this&&this.$id===e?this:je,Xe)}catch(it){throw Ri(Kt,it),it}return ns instanceof Promise?ns.then(it=>(Ri(Mt,it),it)).catch(it=>(Ri(Kt,it),Promise.reject(it))):(Ri(Mt,ns),ns)}}const Je={_p:a,$id:e,$onAction:Qn.bind(null,q),$patch:pe,$reset:fe,$subscribe(Ue,ge={}){const Xe=Qn(I,Ue,ge.detached,()=>Mt()),Mt=M.run(()=>Jt(()=>a.state.value[e],Kt=>{(ge.flush==="sync"?v:y)&&Ue({storeId:e,type:zi.direct,events:z},Kt)},zs({},k,ge)));return Xe},$dispose:ke},je=hr(Je);a._s.set(e,je);const Dt=(a._a&&a._a.runWithContext||vh)(()=>a._e.run(()=>(M=Pl()).run(t)));for(const Ue in Dt){const ge=Dt[Ue];if(Tt(ge)&&!Th(ge)||ei(ge))o||(ne&&Lh(ge)&&(Tt(ge)?ge.value=ne[Ue]:La(ge,ne[Ue])),a.state.value[e][Ue]=ge);else if(typeof ge=="function"){const Xe=Ie(Ue,ge);Dt[Ue]=Xe,D.actions[Ue]=ge}}return zs(je,Dt),zs(Qe(je),Dt),Object.defineProperty(je,"$state",{get:()=>a.state.value[e],set:Ue=>{pe(ge=>{zs(ge,Ue)})}}),a._p.forEach(Ue=>{zs(je,M.run(()=>Ue({store:je,app:a._a,pinia:a,options:D})))}),ne&&o&&s.hydrate&&s.hydrate(je.$state,ne),y=!0,v=!0,je}function un(e,t,s){let a,u;const o=typeof t=="function";typeof e=="string"?(a=e,u=o?s:t):(u=e,a=e.id);function M(D,k){const y=yu();return D=D||(y?is(Cc,null):null),D&&ta(D),D=Ec,D._s.has(a)||(o?Pc(a,t,u,D):Gh(a,u,D)),D._s.get(a)}return M.$id=a,M}const xh="ieh2calculator",Fh="Calculator for Incremental Epic Hero 2",Ih="0.1.27",Hh="module",Vh={dev:"vite",build:"npm --no-git-tag-version version patch && vue-tsc && vite build",preview:"vite preview",testbuild:"vue-tsc && vite build"},Nh={type:"git",url:"git+https://github.com/PR0CESSUS/IEH2Calculator.git"},qh=["IEH2","Incremental","Epic","Hero","Calculator"],_h="Processus",Wh="ISC",Uh={url:"https://github.com/PR0CESSUS/IEH2Calculator/issues"},Oh="https://github.com/PR0CESSUS/IEH2Calculator#readme",$h={"@vueuse/core":"^10.7.2",pinia:"^2.1.7",vue:"^3.3.11","vue-router":"^4.2.5"},zh={"@vitejs/plugin-vue":"^4.5.2","rollup-plugin-visualizer":"^5.12.0",typescript:"^5.2.2","unplugin-vue-router":"^0.8.5",vite:"^5.0.8","vue-tsc":"^1.8.25"},Jh={name:xh,description:Fh,private:!0,version:Ih,type:Hh,scripts:Vh,repository:Nh,keywords:qh,author:_h,license:Wh,bugs:Uh,homepage:Oh,dependencies:$h,devDependencies:zh};var Ss=(e=>(e[e.Nothing=0]="Nothing",e[e.Equipment=1]="Equipment",e[e.OptionEffect=2]="OptionEffect",e[e.ForgeEffects=3]="ForgeEffects",e[e.EquipmentLoadout=4]="EquipmentLoadout",e))(Ss||{});const Xh=un("clipboard",()=>{const e=$t(),t=$t(Ss.Nothing);return{data:e,type:t}}),jh=ai({__name:"Clipboard",setup(e){const t=Xh();return(s,a)=>Ms((wt(),Wt("div",null,"Clipboard "+Bs(ve(Ss)[ve(t).type]),513)),[[Dc,ve(t).type!=ve(Ss).Nothing]])}}),Mi=(e,t)=>{const s=e.__vccOpts||e;for(const[a,u]of t)s[a]=u;return s},Yh=Mi(jh,[["__scopeId","data-v-cbf326c7"]]);function Zh(e){return za()?(vl(e),!0):!1}function hn(e){return typeof e=="function"?e():ve(e)}const Qh=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Kh=Object.prototype.toString,ef=e=>Kh.call(e)==="[object Object]",tf=()=>{};function sf(e,t){function s(...a){return new Promise((u,o)=>{Promise.resolve(e(()=>t.apply(this,a),{fn:t,thisArg:this,args:a})).then(u).catch(o)})}return s}const vc=e=>e();function rf(e=vc){const t=$t(!0);function s(){t.value=!1}function a(){t.value=!0}const u=(...o)=>{t.value&&e(...o)};return{isActive:Qa(t),pause:s,resume:a,eventFilter:u}}function af(e){return e||Sc()}function nf(e,t,s={}){const{eventFilter:a=vc,...u}=s;return Jt(e,sf(a,t),u)}function lf(e,t,s={}){const{eventFilter:a,...u}=s,{eventFilter:o,pause:M,resume:D,isActive:k}=rf(a);return{stop:nf(e,t,{...u,eventFilter:o}),pause:M,resume:D,isActive:k}}function cf(e,t=!0,s){af()?ac(e,s):t?e():Fi(e)}function of(e){var t;const s=hn(e);return(t=s==null?void 0:s.$el)!=null?t:s}const Ta=Qh?window:void 0;function Ga(...e){let t,s,a,u;if(typeof e[0]=="string"||Array.isArray(e[0])?([s,a,u]=e,t=Ta):[t,s,a,u]=e,!t)return tf;Array.isArray(s)||(s=[s]),Array.isArray(a)||(a=[a]);const o=[],M=()=>{o.forEach(v=>v()),o.length=0},D=(v,I,q,z)=>(v.addEventListener(I,q,z),()=>v.removeEventListener(I,q,z)),k=Jt(()=>[of(t),hn(u)],([v,I])=>{if(M(),!v)return;const q=ef(I)?{...I}:I;o.push(...s.flatMap(z=>a.map(ne=>D(v,z,ne,q))))},{immediate:!0,flush:"post"}),y=()=>{k(),M()};return Zh(y),y}const br=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Rr="__vueuse_ssr_handlers__",uf=hf();function hf(){return Rr in br||(br[Rr]=br[Rr]||{}),br[Rr]}function ff(e,t){return uf[e]||t}function pf(e){return e==null?"any":e instanceof Set?"set":e instanceof Map?"map":e instanceof Date?"date":typeof e=="boolean"?"boolean":typeof e=="string"?"string":typeof e=="object"?"object":Number.isNaN(e)?"any":"number"}const df={boolean:{read:e=>e==="true",write:e=>String(e)},object:{read:e=>JSON.parse(e),write:e=>JSON.stringify(e)},number:{read:e=>Number.parseFloat(e),write:e=>String(e)},any:{read:e=>e,write:e=>String(e)},string:{read:e=>e,write:e=>String(e)},map:{read:e=>new Map(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e.entries()))},set:{read:e=>new Set(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e))},date:{read:e=>new Date(e),write:e=>e.toISOString()}},Kn="vueuse-storage";function Bc(e,t,s,a={}){var u;const{flush:o="pre",deep:M=!0,listenToStorageChanges:D=!0,writeDefaults:k=!0,mergeDefaults:y=!1,shallow:v,window:I=Ta,eventFilter:q,onError:z=ge=>{console.error(ge)},initOnMounted:ne}=a,oe=(v?$l:$t)(typeof t=="function"?t():t);if(!s)try{s=ff("getDefaultStorage",()=>{var ge;return(ge=Ta)==null?void 0:ge.localStorage})()}catch(ge){z(ge)}if(!s)return oe;const pe=hn(t),fe=pf(pe),ke=(u=a.serializer)!=null?u:df[fe],{pause:Ie,resume:Je}=lf(oe,()=>je(oe.value),{flush:o,deep:M,eventFilter:q});return I&&D&&cf(()=>{Ga(I,"storage",Ue),Ga(I,Kn,Dt),ne&&Ue()}),ne||Ue(),oe;function je(ge){try{if(ge==null)s.removeItem(e);else{const Xe=ke.write(ge),Mt=s.getItem(e);Mt!==Xe&&(s.setItem(e,Xe),I&&I.dispatchEvent(new CustomEvent(Kn,{detail:{key:e,oldValue:Mt,newValue:Xe,storageArea:s}})))}}catch(Xe){z(Xe)}}function He(ge){const Xe=ge?ge.newValue:s.getItem(e);if(Xe==null)return k&&pe!=null&&s.setItem(e,ke.write(pe)),pe;if(!ge&&y){const Mt=ke.read(Xe);return typeof y=="function"?y(Mt,pe):fe==="object"&&!Array.isArray(Mt)?{...pe,...Mt}:Mt}else return typeof Xe!="string"?Xe:ke.read(Xe)}function Dt(ge){Ue(ge.detail)}function Ue(ge){if(!(ge&&ge.storageArea!==s)){if(ge&&ge.key==null){oe.value=pe;return}if(!(ge&&ge.key!==e)){Ie();try{(ge==null?void 0:ge.newValue)!==ke.write(oe.value)&&(oe.value=He(ge))}catch(Xe){z(Xe)}finally{ge?Fi(Je):Je()}}}}}class Lc{constructor(){c(this,"isSuperDungeon",!1);c(this,"isBlessing",!1);c(this,"superDungeonPowerupLevels",Array(21).fill(0));c(this,"superDungeonPowerupIsActive",!1);c(this,"enemyLevel",1);c(this,"enemyColor",0);c(this,"enemySpecies",0);c(this,"enemyChallenge",0);c(this,"ascendTime");c(this,"currentAreaKind",Array(6).fill(0));c(this,"currentAreaId",Array(6).fill(0));c(this,"isActiveBattle",Array(6).fill(!1));c(this,"blessingDurationLefts");c(this,"monsterDefeatedNumsSlime",Array(60).fill(0));c(this,"monsterDefeatedNumsMagicSlime",Array(60).fill(0));c(this,"monsterDefeatedNumsSpider",Array(60).fill(0));c(this,"monsterDefeatedNumsBat",Array(60).fill(0));c(this,"monsterDefeatedNumsFairy",Array(60).fill(0));c(this,"monsterDefeatedNumsFox",Array(60).fill(0));c(this,"monsterDefeatedNumsDevilFish",Array(60).fill(0));c(this,"monsterDefeatedNumsTreant",Array(60).fill(0));c(this,"monsterDefeatedNumsFlameTiger",Array(60).fill(0));c(this,"monsterDefeatedNumsUnicorn",Array(60).fill(0));c(this,"monsterDefeatedNumsMimic",Array(60).fill(0));c(this,"monsterDefeatedNumsChallenge",Array(100).fill(0));c(this,"monsterCapturedNumsSlime",Array(60).fill(0));c(this,"monsterCapturedNumsMagicSlime",Array(60).fill(0));c(this,"monsterCapturedNumsSpider",Array(60).fill(0));c(this,"monsterCapturedNumsBat",Array(60).fill(0));c(this,"monsterCapturedNumsFairy",Array(60).fill(0));c(this,"monsterCapturedNumsFox",Array(60).fill(0));c(this,"monsterCapturedNumsDevilFish",Array(60).fill(0));c(this,"monsterCapturedNumsTreant",Array(60).fill(0));c(this,"monsterCapturedNumsFlameTiger",Array(60).fill(0));c(this,"monsterCapturedNumsUnicorn",Array(60).fill(0));c(this,"monsterCapturedNumsMimic",Array(60).fill(0));c(this,"monsterCapturedNumsChallenge",Array(100).fill(0));c(this,"monsterMutantDefeatedNumsSlime",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsMagicSlime",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsSpider",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsBat",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsFairy",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsFox",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsDevilFish",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsTreant",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsFlameTiger",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsUnicorn",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsMimic",Array(60).fill(0));c(this,"monsterMutantDefeatedNumsChallenge",Array(100).fill(0));c(this,"monsterMutantCapturedNumsSlime",Array(60).fill(0));c(this,"monsterMutantCapturedNumsMagicSlime",Array(60).fill(0));c(this,"monsterMutantCapturedNumsSpider",Array(60).fill(0));c(this,"monsterMutantCapturedNumsBat",Array(60).fill(0));c(this,"monsterMutantCapturedNumsFairy",Array(60).fill(0));c(this,"monsterMutantCapturedNumsFox",Array(60).fill(0));c(this,"monsterMutantCapturedNumsDevilFish",Array(60).fill(0));c(this,"monsterMutantCapturedNumsTreant",Array(60).fill(0));c(this,"monsterMutantCapturedNumsFlameTiger",Array(60).fill(0));c(this,"monsterMutantCapturedNumsUnicorn",Array(60).fill(0));c(this,"monsterMutantCapturedNumsMimic",Array(60).fill(0));c(this,"monsterMutantCapturedNumsChallenge",Array(100).fill(0));c(this,"summonSpecies");c(this,"summonColor");c(this,"isSetSummonPet");c(this,"materials");c(this,"movedDistance");c(this,"movedDistancePet");c(this,"heroLevel",Array(6).fill(0));c(this,"heroExp");c(this,"abilityPoints",Array(6).fill(0));c(this,"abilityPointsVitality",Array(6).fill(0));c(this,"abilityPointsStrength",Array(6).fill(0));c(this,"abilityPointsIntelligence",Array(6).fill(0));c(this,"abilityPointsAgility",Array(6).fill(0));c(this,"abilityPointsLuck",Array(6).fill(0));c(this,"combatRangeId");c(this,"superAbilityPoint",Array(6).fill(0));c(this,"heroFame",Array(6).fill(0));c(this,"heroGrade",Array(6).fill(0));c(this,"superAbilityPointsVitality",Array(6).fill(0));c(this,"superAbilityPointsStrength",Array(6).fill(0));c(this,"superAbilityPointsIntelligence",Array(6).fill(0));c(this,"superAbilityPointsAgility",Array(6).fill(0));c(this,"superAbilityPointsLuck",Array(6).fill(0));c(this,"currentAreaLevelsSlime",Array(20).fill(0));c(this,"currentAreaLevelsMagicSlime",Array(20).fill(0));c(this,"currentAreaLevelsSpider",Array(20).fill(0));c(this,"currentAreaLevelsBat",Array(20).fill(0));c(this,"currentAreaLevelsFairy",Array(20).fill(0));c(this,"currentAreaLevelsFox",Array(20).fill(0));c(this,"currentAreaLevelsDevilFish",Array(20).fill(0));c(this,"currentAreaLevelsTreant",Array(20).fill(0));c(this,"currentAreaLevelsFlameTiger",Array(20).fill(0));c(this,"currentAreaLevelsUnicorn",Array(20).fill(0));c(this,"areaIsReceivedFirstRewardSlime");c(this,"areaIsReceivedFirstRewardMagicSlime");c(this,"areaIsReceivedFirstRewardSpider");c(this,"areaIsReceivedFirstRewardBat");c(this,"areaIsReceivedFirstRewardFairy");c(this,"areaIsReceivedFirstRewardFox");c(this,"areaIsReceivedFirstRewardDevilFish");c(this,"areaIsReceivedFirstRewardTreant");c(this,"areaIsReceivedFirstRewardFlameTiger");c(this,"areaIsReceivedFirstRewardUnicorn");c(this,"areaCompleteNumsSlime");c(this,"areaCompleteNumsMagicSlime");c(this,"areaCompleteNumsSpider");c(this,"areaCompleteNumsBat");c(this,"areaCompleteNumsFairy");c(this,"areaCompleteNumsFox");c(this,"areaCompleteNumsDevilFish");c(this,"areaCompleteNumsTreant");c(this,"areaCompleteNumsFlameTiger");c(this,"areaCompleteNumsUnicorn");c(this,"areaBestTimesSlime");c(this,"areaBestTimesMagicSlime");c(this,"areaBestTimesSpider");c(this,"areaBestTimesBat");c(this,"areaBestTimesFairy");c(this,"areaBestTimesFox");c(this,"areaBestTimesDevilFish");c(this,"areaBestTimesTreant");c(this,"areaBestTimesFlameTiger");c(this,"areaBestTimesUnicorn");c(this,"areaBestGoldsSlime");c(this,"areaBestGoldsMagicSlime");c(this,"areaBestGoldsSpider");c(this,"areaBestGoldsBat");c(this,"areaBestGoldsFairy");c(this,"areaBestGoldsFox");c(this,"areaBestGoldsDevilFish");c(this,"areaBestGoldsTreant");c(this,"areaBestGoldsFlameTiger");c(this,"areaBestGoldsUnicorn");c(this,"areaBestExpsSlime");c(this,"areaBestExpsMagicSlime");c(this,"areaBestExpsSpider");c(this,"areaBestExpsBat");c(this,"areaBestExpsFairy");c(this,"areaBestExpsFox");c(this,"areaBestExpsDevilFish");c(this,"areaBestExpsTreant");c(this,"areaBestExpsFlameTiger");c(this,"areaBestExpsUnicorn");c(this,"areaPrestigePointsSlime");c(this,"areaPrestigePointsMagicSlime");c(this,"areaPrestigePointsSpider");c(this,"areaPrestigePointsBat");c(this,"areaPrestigePointsFairy");c(this,"areaPrestigePointsFox");c(this,"areaPrestigePointsDevilFish");c(this,"areaPrestigePointsTreant");c(this,"areaPrestigePointsFlameTiger");c(this,"areaPrestigePointsUnicorn");c(this,"areaPrestigeUpgradeLevelsSlime");c(this,"areaPrestigeUpgradeLevelsMagicSlime");c(this,"areaPrestigeUpgradeLevelsSpider");c(this,"areaPrestigeUpgradeLevelsBat");c(this,"areaPrestigeUpgradeLevelsFairy");c(this,"areaPrestigeUpgradeLevelsFox");c(this,"areaPrestigeUpgradeLevelsDevilFish");c(this,"areaPrestigeUpgradeLevelsTreant");c(this,"areaPrestigeUpgradeLevelsFlameTiger");c(this,"areaPrestigeUpgradeLevelsUnicorn");c(this,"areaPrestigeResetNumsSlime");c(this,"areaPrestigeResetNumsMagicSlime");c(this,"areaPrestigeResetNumsSpider");c(this,"areaPrestigeResetNumsBat");c(this,"areaPrestigeResetNumsFairy");c(this,"areaPrestigeResetNumsFox");c(this,"areaPrestigeResetNumsDevilFish");c(this,"areaPrestigeResetNumsTreant");c(this,"areaPrestigeResetNumsFlameTiger");c(this,"areaPrestigeResetNumsUnicorn");c(this,"isClearedMission",Array(1e4).fill(!1));c(this,"isClearedChallenge",Array(1080).fill(!1));c(this,"isReceivedRewardsChallenge",Array(1080).fill(!1));c(this,"accomplishedFirstTimesChallenge");c(this,"accomplishedTimesChallenge");c(this,"accomplishedBestTimesChallenge");c(this,"superDungeonMaxFloorsReached",Array(100).fill(0));c(this,"dungeonCoin",0);c(this,"topaz",0);c(this,"ruby",0);c(this,"pieceOfRuby",0);c(this,"motherStone",0);c(this,"entryCostRefreshTicket",0);c(this,"superDungeonPowerupIsUnlocked",Array(21).fill(!1));c(this,"superDungeonPowerupPurchasedNums",Array(21).fill(0));c(this,"superDungeonPowerupRanks",Array(21).fill(0));c(this,"superDungeonShopPurchasedNums",Array(200).fill(0));c(this,"superDungeonUpgradeLevels",Array(61).fill(0));c(this,"superDungeonUpgradeIsSuperQueued",Array(61).fill(!1));c(this,"equipmentKinds",Array(6e3).fill(0));c(this,"equipmentOptionNums");c(this,"equipmentIsLocked");c(this,"dictionaryUpgradePoint");c(this,"dictionaryUpgradeLevels",Array(10).fill(0));c(this,"enchantKinds");c(this,"enchantEffectKinds");c(this,"enchantEffectLevels");c(this,"enchantForgeEffectKinds");c(this,"enchantEffectValues");c(this,"enchantIsLocked");c(this,"equipment1stForgeValues",Array(5300).fill(0));c(this,"equipment2ndForgeValues",Array(5300).fill(0));c(this,"equipment3rdForgeValues",Array(5300).fill(0));c(this,"equipment4thForgeValues",Array(5300).fill(0));c(this,"equipment5thForgeValues",Array(5300).fill(0));c(this,"equipment6thForgeValues",Array(5300).fill(0));c(this,"equipment7thForgeValues",Array(5300).fill(0));c(this,"equipmentLevelsWarrior",Array(174).fill(0));c(this,"equipmentLevelsWizard",Array(174).fill(0));c(this,"equipmentLevelsAngel",Array(174).fill(0));c(this,"equipmentLevelsThief",Array(174).fill(0));c(this,"equipmentLevelsArcher",Array(174).fill(0));c(this,"equipmentLevelsTamer",Array(174).fill(0));c(this,"equipmentProficiencyWarrior");c(this,"equipmentProficiencyWizard");c(this,"equipmentProficiencyAngel");c(this,"equipmentProficiencyThief");c(this,"equipmentProficiencyArcher");c(this,"equipmentProficiencyTamer");c(this,"equipmentIsMaxedWarrior",Array(174).fill(!1));c(this,"equipmentIsMaxedWizard",Array(174).fill(!1));c(this,"equipmentIsMaxedAngel",Array(174).fill(!1));c(this,"equipmentIsMaxedThief",Array(174).fill(!1));c(this,"equipmentIsMaxedArcher",Array(174).fill(!1));c(this,"equipmentIsMaxedTamer",Array(174).fill(!1));c(this,"equipmentIsAutoDisassemble");c(this,"equipmentIsAutoProficiency");c(this,"disassembledEquipmentNums");c(this,"townMatGainFromdisassemble");c(this,"equipment1stOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment2ndOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment3rdOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment4thOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment5thOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment6thOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment7thOptionEffectKinds",Array(6e3).fill(0));c(this,"equipment1stOptionLevels",Array(6e3).fill(0));c(this,"equipment2ndOptionLevels",Array(6e3).fill(0));c(this,"equipment3rdOptionLevels",Array(6e3).fill(0));c(this,"equipment4thOptionLevels",Array(6e3).fill(0));c(this,"equipment5thOptionLevels",Array(6e3).fill(0));c(this,"equipment6thOptionLevels",Array(6e3).fill(0));c(this,"equipment7thOptionLevels",Array(6e3).fill(0));c(this,"equipment1stOptionEffectValues",Array(6e3).fill(0));c(this,"equipment2ndOptionEffectValues",Array(6e3).fill(0));c(this,"equipment3rdOptionEffectValues",Array(6e3).fill(0));c(this,"equipment4thOptionEffectValues",Array(6e3).fill(0));c(this,"equipment5thOptionEffectValues",Array(6e3).fill(0));c(this,"equipment6thOptionEffectValues",Array(6e3).fill(0));c(this,"equipment7thOptionEffectValues",Array(6e3).fill(0));c(this,"equipmentId",Array(6e3).fill(0));c(this,"enchantId");c(this,"potionId",Array(296).fill(0));c(this,"potionKinds",Array(296).fill(0));c(this,"potionStackNums",Array(296).fill(0));c(this,"potionIsLocked");c(this,"potionLevels",Array(86).fill(0));c(this,"potionProductedNums");c(this,"potionDisassembledNums",Array(86).fill(0));c(this,"guildLevel",0);c(this,"guildExp",0);c(this,"guildAbilityPoint");c(this,"guildAbilityLevels",Array(20).fill(0));c(this,"accomplishedFirstTimesGuildLevel");c(this,"accomplishedTimesGuildLevel");c(this,"accomplishedBestTimesGuildLevel");c(this,"guildGrade",0);c(this,"guildFame",0);c(this,"guildSuperAbilityPoint",0);c(this,"guildSuperAbilityLevels",Array(13).fill(0));c(this,"alchemyPoint");c(this,"mysteriousWater",0);c(this,"mysteriousWaterProgress");c(this,"mysteriousWaterExpandedCapNum",0);c(this,"alchemyUpgradeLevels",Array(10).fill(0));c(this,"catalystLevels",Array(8).fill(0));c(this,"isEquippedCatarysts",Array(8).fill(!1));c(this,"essenceWaterPerSecs",Array(16).fill(0));c(this,"essenceProgresses");c(this,"craftEnchantScrollLevels");c(this,"essences");c(this,"totalGeneralQuestClearedNum");c(this,"totalGeneralQuestClearedNums");c(this,"generalQuestClearNumsPerClass");c(this,"isClearedQuestGeneralOnce");c(this,"isPersistentUnlockedQuestGeneral");c(this,"isClearedQuestsGlobal",Array(79).fill(!1));c(this,"isClearedQuestsTitleWarrior",Array(139).fill(!1));c(this,"isClearedQuestsTitleWizard",Array(139).fill(!1));c(this,"isClearedQuestsTitleAngel",Array(139).fill(!1));c(this,"isClearedQuestsTitleThief",Array(139).fill(!1));c(this,"isClearedQuestsTitleArcher",Array(139).fill(!1));c(this,"isClearedQuestsTitleTamer",Array(139).fill(!1));c(this,"isClearedQuestsGeneralWarrior");c(this,"isClearedQuestsGeneralWizard");c(this,"isClearedQuestsGeneralAngel");c(this,"isClearedQuestsGeneralThief");c(this,"isClearedQuestsGeneralArcher");c(this,"isClearedQuestsGeneralTamer");c(this,"isAcceptedQuestsGlobal");c(this,"isAcceptedQuestsTitleWarrior");c(this,"isAcceptedQuestsTitleWizard");c(this,"isAcceptedQuestsTitleAngel");c(this,"isAcceptedQuestsTitleThief");c(this,"isAcceptedQuestsTitleArcher");c(this,"isAcceptedQuestsTitleTamer");c(this,"isAcceptedQuestsGeneralWarrior");c(this,"isAcceptedQuestsGeneralWizard");c(this,"isAcceptedQuestsGeneralAngel");c(this,"isAcceptedQuestsGeneralThief");c(this,"isAcceptedQuestsGeneralArcher");c(this,"isAcceptedQuestsGeneralTamer");c(this,"initDefeatedNumQuestsGlobal");c(this,"initDefeatedNumQuestsTitleWarrior");c(this,"initDefeatedNumQuestsTitleWizard");c(this,"initDefeatedNumQuestsTitleAngel");c(this,"initDefeatedNumQuestsTitleThief");c(this,"initDefeatedNumQuestsTitleArcher");c(this,"initDefeatedNumQuestsTitleTamer");c(this,"initDefeatedNumQuestsGeneralWarrior");c(this,"initDefeatedNumQuestsGeneralWizard");c(this,"initDefeatedNumQuestsGeneralAngel");c(this,"initDefeatedNumQuestsGeneralThief");c(this,"initDefeatedNumQuestsGeneralArcher");c(this,"initDefeatedNumQuestsGeneralTamer");c(this,"initCompletedAreaNumQuestsTitleWarrior");c(this,"initCompletedAreaNumQuestsTitleWizard");c(this,"initCompletedAreaNumQuestsTitleAngel");c(this,"initCompletedAreaNumQuestsTitleThief");c(this,"initCompletedAreaNumQuestsTitleArcher");c(this,"initCompletedAreaNumQuestsTitleTamer");c(this,"initCompletedAreaNumQuestsGeneralWarrior");c(this,"initCompletedAreaNumQuestsGeneralWizard");c(this,"initCompletedAreaNumQuestsGeneralAngel");c(this,"initCompletedAreaNumQuestsGeneralThief");c(this,"initCompletedAreaNumQuestsGeneralArcher");c(this,"initCompletedAreaNumQuestsGeneralTamer");c(this,"initMovedDistanceQuestTitle");c(this,"initPhysicalSkillTriggeredNumQuestTitle");c(this,"initFireSkillTriggeredNumQuestTitle");c(this,"initIceSkillTriggeredNumQuestTitle");c(this,"initThunderSkillTriggeredNumQuestTitle");c(this,"initLightSkillTriggeredNumQuestTitle");c(this,"initDarkSkillTriggeredNumQuestTitle");c(this,"survivalNumQuestTitle");c(this,"sdMobDefeatedNums",Array(6).fill(0));c(this,"rebirthMaxHeroLevels");c(this,"rebirthNumsWarrior");c(this,"rebirthNumsWizard");c(this,"rebirthNumsAngel");c(this,"rebirthNumsThief");c(this,"rebirthNumsArcher");c(this,"rebirthNumsTamer");c(this,"rebirthPlayTimesWarrior");c(this,"rebirthPlayTimesWizard");c(this,"rebirthPlayTimesAngel");c(this,"rebirthPlayTimesThief");c(this,"rebirthPlayTimesArcher");c(this,"rebirthPlayTimesTamer");c(this,"rebirthMaxHeroLevelsWarrior");c(this,"rebirthMaxHeroLevelsWizard");c(this,"rebirthMaxHeroLevelsAngel");c(this,"rebirthMaxHeroLevelsThief");c(this,"rebirthMaxHeroLevelsArcher");c(this,"rebirthMaxHeroLevelsTamer");c(this,"rebirthPointsWarrior");c(this,"rebirthPointsWizard");c(this,"rebirthPointsAngel");c(this,"rebirthPointsThief");c(this,"rebirthPointsArcher");c(this,"rebirthPointsTamer");c(this,"rebirthUpgradeLevelsWarrior",Array(53).fill(0));c(this,"rebirthUpgradeLevelsWizard",Array(53).fill(0));c(this,"rebirthUpgradeLevelsAngel",Array(53).fill(0));c(this,"rebirthUpgradeLevelsThief",Array(53).fill(0));c(this,"rebirthUpgradeLevelsArcher",Array(53).fill(0));c(this,"rebirthUpgradeLevelsTamer",Array(53).fill(0));c(this,"purchasedNumMaterials");c(this,"purchasedNumTraps");c(this,"purchasedNumBlessing");c(this,"purchasedNumTownMaterials");c(this,"shopRestockTimecount");c(this,"isAutoBuyBlessings");c(this,"warriorSkillLevel",Array(10).fill(0));c(this,"wizardSkillLevel",Array(10).fill(0));c(this,"angelSkillLevel",Array(10).fill(0));c(this,"thiefSkillLevel",Array(10).fill(0));c(this,"archerSkillLevel",Array(10).fill(0));c(this,"tamerSkillLevel",Array(10).fill(0));c(this,"warriorMaxReachedSkillLevel",Array(10).fill(0));c(this,"wizardMaxReachedSkillLevel",Array(10).fill(0));c(this,"angelMaxReachedSkillLevel",Array(10).fill(0));c(this,"thiefMaxReachedSkillLevel",Array(10).fill(0));c(this,"archerMaxReachedSkillLevel",Array(10).fill(0));c(this,"tamerMaxReachedSkillLevel",Array(10).fill(0));c(this,"warriorSkillRank",Array(10).fill(0));c(this,"wizardSkillRank",Array(10).fill(0));c(this,"angelSkillRank",Array(10).fill(0));c(this,"thiefSkillRank",Array(10).fill(0));c(this,"archerSkillRank",Array(10).fill(0));c(this,"tamerSkillRank",Array(10).fill(0));c(this,"warriorSkillProficiency");c(this,"wizardSkillProficiency");c(this,"angelSkillProficiency");c(this,"thiefSkillProficiency");c(this,"archerSkillProficiency");c(this,"tamerSkillProficiency");c(this,"currentStanceId",Array(6).fill(0));c(this,"isEquippedWarriorSkillForWarrior");c(this,"isEquippedWizardSkillForWarrior");c(this,"isEquippedAngelSkillForWarrior");c(this,"isEquippedThiefSkillForWarrior");c(this,"isEquippedArcherSkillForWarrior");c(this,"isEquippedTamerSkillForWarrior");c(this,"isEquippedWarriorSkillForWizard");c(this,"isEquippedWizardSkillForWizard");c(this,"isEquippedAngelSkillForWizard");c(this,"isEquippedThiefSkillForWizard");c(this,"isEquippedArcherSkillForWizard");c(this,"isEquippedTamerSkillForWizard");c(this,"isEquippedWarriorSkillForAngel");c(this,"isEquippedWizardSkillForAngel");c(this,"isEquippedAngelSkillForAngel");c(this,"isEquippedThiefSkillForAngel");c(this,"isEquippedArcherSkillForAngel");c(this,"isEquippedTamerSkillForAngel");c(this,"isEquippedWarriorSkillForThief");c(this,"isEquippedWizardSkillForThief");c(this,"isEquippedAngelSkillForThief");c(this,"isEquippedThiefSkillForThief");c(this,"isEquippedArcherSkillForThief");c(this,"isEquippedTamerSkillForThief");c(this,"isEquippedWarriorSkillForArcher");c(this,"isEquippedWizardSkillForArcher");c(this,"isEquippedAngelSkillForArcher");c(this,"isEquippedThiefSkillForArcher");c(this,"isEquippedArcherSkillForArcher");c(this,"isEquippedTamerSkillForArcher");c(this,"isEquippedWarriorSkillForTamer");c(this,"isEquippedWizardSkillForTamer");c(this,"isEquippedAngelSkillForTamer");c(this,"isEquippedThiefSkillForTamer");c(this,"isEquippedArcherSkillForTamer");c(this,"isEquippedTamerSkillForTamer");c(this,"buildingLevels",Array(12).fill(0));c(this,"buildingRanks");c(this,"buildingResearchLevelsStone",Array(12).fill(0));c(this,"buildingResearchLevelsCrystal",Array(12).fill(0));c(this,"buildingResearchLevelsLeaf",Array(12).fill(0));c(this,"buildingResearchExpsStone");c(this,"buildingResearchExpsCrystal");c(this,"buildingResearchExpsLeaf");c(this,"IsBuildingResearchStone");c(this,"IsBuildingResearchCrystal");c(this,"IsBuildingResearchLeaf");c(this,"accomplishedFirstTimesBuilding");c(this,"accomplishedTimesBuilding");c(this,"accomplishedBestTimesBuilding");c(this,"townMaterials");c(this,"upgradeLevelsResource",Array(20).fill(0));c(this,"upgradeLevelsBasicStats",Array(7).fill(0));c(this,"upgradeLevelsGoldGain",0);c(this,"upgradeLevelsExpGain",0);c(this,"upgradeLevelsEquipmentInventory",0);c(this,"upgradeLevelsGoldCap",Array(3).fill(0));c(this,"upgradeLevelsSlimebank",Array(22).fill(0));c(this,"gold");c(this,"slimeCoin");c(this,"resources");c(this,"playtimes");c(this,"playtimesRealTime");c(this,"multibuyId");c(this,"version");c(this,"allTime");c(this,"allTimeRealtime");c(this,"allTimeWorldAscension");c(this,"lastDailyTime");c(this,"wasd");c(this,"isGotAchievements");c(this,"isGotAchievementRewards");c(this,"achievementPlaytimes");c(this,"monsterMilk");c(this,"monsterPetRanks",Array(130).fill(0));c(this,"monsterPetLevels",Array(130).fill(0));c(this,"monsterPetExps");c(this,"monsterPetLoyalty",Array(130).fill(0));c(this,"monsterPetLoyaltyExp");c(this,"monsterPetTamingPoints");c(this,"monsterPetIsActives");c(this,"openedChestNum");c(this,"totalMovedDistance");c(this,"totalMovedDistancePet");c(this,"maxHeroLevelReached");c(this,"physicalTriggeredNum");c(this,"fireTriggeredNum");c(this,"iceTriggeredNum");c(this,"thunderTriggeredNum");c(this,"lightTriggeredNum");c(this,"darkTriggeredNum");c(this,"persistentSkillSlotNum");c(this,"persistentGlobalSkillSlotNum");c(this,"maxHeroGradeReached",Array(6).fill(0));c(this,"areaIsUnlockedOnceSlime");c(this,"areaIsUnlockedOnceMagicslime");c(this,"areaIsUnlockedOnceSpider");c(this,"areaIsUnlockedOnceBat");c(this,"areaIsUnlockedOnceFairy");c(this,"areaIsUnlockedOnceFox");c(this,"areaIsUnlockedOnceDevilfish");c(this,"areaIsUnlockedOnceTreant");c(this,"areaIsUnlockedOnceFlametiger");c(this,"areaIsUnlockedOnceUnicorn");c(this,"portalOrbNum");c(this,"currentSDRun",0);c(this,"currentSDRunFailed",0);c(this,"totalSDRun",0);c(this,"totalSDRunFailed",0);c(this,"swarmClearedNum");c(this,"swarmBestScores");c(this,"ascensionNum");c(this,"ascensionPlayTime");c(this,"ascensionPoints");c(this,"bestAscensionPlayTime");c(this,"accomplishedFirstTimeAscension");c(this,"accomplishedTimeAscension");c(this,"accomplishedBestTimeAscension");c(this,"ascensionMilestoneLevelReached",Array(8).fill(0));c(this,"isGotRewardWAAccomplishments");c(this,"worldAscensionUpgradeLevels",Array(10).fill(0));c(this,"sdGemLevels",Array(15).fill(0));c(this,"sdGemExps",Array(15).fill(0));c(this,"sdGemMotherStoneAssigned",Array(15).fill(0));c(this,"modifierLoadoutId",Array(200).fill(0));c(this,"isActiveSdModifiers",Array(4e3).fill(!1));c(this,"maxModifierCleareds",Array(200).fill(0));c(this,"sdModifierValues",Array(4e3).fill(0));c(this,"totalDungeonCoinGained",0);c(this,"totalPermanentDungeonCoinGained",0);c(this,"totalTopazGained",0);c(this,"totalRubyGained",0);c(this,"totalPieceOfRubyGained",0);c(this,"totalMotherStoneGained",0);c(this,"totalEntryCostRefreshTicketGained",0);c(this,"totalEntryCostRefreshTicketUsed",0);c(this,"totalDodgeNum",0);c(this,"regularChestRNG");c(this,"regularChestRNGUsedIdNum");c(this,"isReceivedRegularChestToday",!1);c(this,"epicCoin");c(this,"epicCoinConsumed");c(this,"epicStorePurchasedNum",Array(75).fill(0));c(this,"inAppPurchasedNum",Array(10).fill(0));c(this,"inAppPurchasedNum_ver01020101",Array(10).fill(0));c(this,"totalEquipmentGained");c(this,"pieceOfRubyGainFromDisassemble",0);c(this,"equipmentIsGotOnce");c(this,"equipmentLoadoutIds",Array(6).fill(0));c(this,"potionQueues");c(this,"potionIsSuperQueues");c(this,"isDisassembleTalismans");c(this,"isStartedExpedition");c(this,"expeditionProgress");c(this,"expeditionTimeId",Array(20).fill(0));c(this,"expeditionMovedDistance");c(this,"expeditionPetSpecies",Array(100).fill(0));c(this,"expeditionPetColors",Array(100).fill(0));c(this,"expeditionPetIsSet",Array(100).fill(!1));c(this,"expeditionKinds",Array(100).fill(0));c(this,"expeditionLevels",Array(7).fill(0));c(this,"expeditionExps",Array(7).fill(0));c(this,"expeditionCompletedNums");c(this,"expeditionTimes");c(this,"maxGuildLevel",0);c(this,"maxGuildGrade",0);c(this,"autoTargetGuildAbilityLevels",Array(20).fill(0));c(this,"talismanFragement");c(this,"totalAlchemyPointGained");c(this,"isOnAMWA");c(this,"amwaIsEquippedCatalysts");c(this,"amwaSavedEssenceWaterPerSecs");c(this,"dailyQuestRarities");c(this,"dailyQuestMonsterSpecies");c(this,"dailyQuestAreaKind");c(this,"dailyQuestAreaId");c(this,"isClearedQuestsDaily");c(this,"isAcceptedQuestsDaily");c(this,"initDefeatedNumQuestsDaily");c(this,"initCompletedAreaNumQuestsDaily");c(this,"maxReachedGeneralQuestClearedNums");c(this,"isFavoriteQuestWarrior");c(this,"isFavoriteQuestWizard");c(this,"isFavoriteQuestAngel");c(this,"isFavoriteQuestThief");c(this,"isFavoriteQuestArcher");c(this,"isFavoriteQuestTamer");c(this,"questingAreaKinds");c(this,"questingAreaIds");c(this,"questingAreaIsDungeon");c(this,"isGotFirstEQ");c(this,"totalRebirthNums",Array(100).fill(0));c(this,"bestRebirthPlaytimes");c(this,"isAutoRebirthOns");c(this,"autoRebirthLevels");c(this,"autoRebirthPoints");c(this,"autoRebirthTiers");c(this,"favoriteAreaKinds");c(this,"favoriteAreaIds");c(this,"isBestExpSecAreas");c(this,"isLazyQuestingMode");c(this,"isAutoAbilityPointPresets");c(this,"autoAbilityPointPresetsVIT");c(this,"autoAbilityPointPresetsSTR");c(this,"autoAbilityPointPresetsINT");c(this,"autoAbilityPointPresetsAGI");c(this,"autoAbilityPointPresetsLUK");c(this,"autoAbilityPointMaxVIT");c(this,"autoAbilityPointMaxSTR");c(this,"autoAbilityPointMaxINT");c(this,"autoAbilityPointMaxAGI");c(this,"autoAbilityPointMaxLUK");c(this,"accomplishedFirstTimesRebirth");c(this,"accomplishedTimesRebirth");c(this,"accomplishedBestTimesRebirth");c(this,"warriorSkillTriggeredNum");c(this,"wizardSkillTriggeredNum");c(this,"angelSkillTriggeredNum");c(this,"thiefSkillTriggeredNum");c(this,"archerSkillTriggeredNum");c(this,"tamerSkillTriggeredNum");c(this,"skillLoadoutIds",Array(6).fill(0));c(this,"maxBuildingLevelsReached",Array(12).fill(0));c(this,"maxBuildingRanksReached",Array(12).fill(0));c(this,"upgradeQueuesResource");c(this,"upgradeQueuesBasicStats");c(this,"upgradeQueuesGoldGain");c(this,"upgradeQueueExpGain");c(this,"upgradeQueuesEquipmentInventory");c(this,"upgradeQueuesGoldCap");c(this,"upgradeQueuesSlimebank");c(this,"upgradeIsSuperQueuesResource");c(this,"upgradeIsSuperQueuesBasicStats");c(this,"upgradeIsSuperQueuesGoldGain");c(this,"upgradeIsSuperQueueExpGain");c(this,"upgradeIsSuperQueueEquipmentInventory");c(this,"upgradeIsSuperQueuesGoldCap");c(this,"upgradeIsSuperQueuesSlimebank");c(this,"nitro");c(this,"nitroConsumed");c(this,"nitroSpeed",0);c(this,"totalGold");c(this,"totalStone");c(this,"totalCrystal");c(this,"totalLeaf");c(this,"totalSlimeCoin");c(this,"isDlcStarterPack");c(this,"isDlcNitroPack");c(this,"isDlcGlobalSkillSlotPack");c(this,"isDlcInventorySlotPack");c(this,"currentHero",0);c(this,"isAlphaSave",!1);c(this,"multibuyNums");c(this,"isShowQuickAccess");c(this,"autoAreaProgressionTargetClearNums");c(this,"isReceivedBonusCodes");c(this,"isEnchantFilter");c(this,"enchantFilterLevel");c(this,"isSlotNumEnchantFilter");c(this,"slotNumEnchantFilter");c(this,"checkedIEH1Achievement");c(this,"receivedIEH1Achievement");c(this,"isReceivedIEH1DLCIEH2SupportPack",!1);c(this,"isScrollFilter");c(this,"isPowerupFilter",Array(160).fill(!1));c(this,"powerupFilterPurchaseLimit",Array(160).fill(0));c(this,"powerupFilterLoadoutId",Array(6).fill(0));c(this,"SDAutoLeaveAndRetryTargetFloor",0);c(this,"SDAutoLeaveAndRetryTargetEntryCost",0);c(this,"SDAutoProgressionTargetFloor",0);c(this,"SDAutoUseRefreshTicketTargetEntryCost",0);c(this,"SDAutoBuyPurchaseNum",0);c(this,"currentTutorialArrow");c(this,"equipmentOptionNums1");c(this,"equipmentOptionNums2");c(this,"equipmentOptionNums3");c(this,"equipmentOptionNums4");c(this,"equipmentOptionNums5");c(this,"equipmentOptionNums6");c(this,"equipmentIsLocked1");c(this,"equipmentIsLocked2");c(this,"equipmentIsLocked3");c(this,"equipmentIsLocked4");c(this,"equipmentIsLocked5");c(this,"equipmentIsLocked6")}}const el="SaveFileData",gf=new Lc,xa=un(el,{state:()=>Bc(el,gf,localStorage,{mergeDefaults:!0})});var dt=(e=>(e[e.MobLv=0]="MobLv",e[e.ReducePowerup=1]="ReducePowerup",e[e.ReduceSkillSlot=2]="ReduceSkillSlot",e[e.MobFullCast=3]="MobFullCast",e[e.DodgeDrainSpeed2x=4]="DodgeDrainSpeed2x",e[e.DodgeDrainPerDodge=5]="DodgeDrainPerDodge",e[e.DisableMove=6]="DisableMove",e[e.DungeonCoinFixed1=7]="DungeonCoinFixed1",e[e.RemoveSDPowerupPassives=8]="RemoveSDPowerupPassives",e[e.RemoveEquipmentEffectBonuses=9]="RemoveEquipmentEffectBonuses",e[e.DisablePowerupFilter=10]="DisablePowerupFilter",e[e.StartWith5PercentOfMaxHP=11]="StartWith5PercentOfMaxHP",e[e.DrainHPPerSec=12]="DrainHPPerSec",e[e.SwapATKWithDEF=13]="SwapATKWithDEF",e[e.SDDamage=14]="SDDamage",e[e.SDChallengeBossDamage=15]="SDChallengeBossDamage",e[e.RemoveSDUpgrade1=16]="RemoveSDUpgrade1",e[e.ReducePowerupEffect=17]="ReducePowerupEffect",e[e.MonsterExplode=18]="MonsterExplode",e[e.MPRegen=19]="MPRegen",e[e.FameGain=20]="FameGain",e[e.ArtifactChance=21]="ArtifactChance",e[e.SDEnchantChance=22]="SDEnchantChance",e))(dt||{});const mf={};function wf(e,t){const s=Fr("RouterLink");return wt(),Wt(Rt,null,[kt(s,{to:"/"},{default:Zt(()=>[yt("IEH2Calculator")]),_:1}),(wt(!0),Wt(Rt,null,Cr(e.$route.matched,a=>(wt(),Wt(Rt,null,[a.meta.default?Br("",!0):(wt(),Wt(Rt,{key:0},[yt(" / "),kt(s,{to:e.$route.matched[e.$route.matched.length-1].children.length&&!e.$route.path.includes("/")?e.$route.path+"/"+a.path:a.path},{default:Zt(()=>[yt(Bs(a.meta.name),1)]),_:2},1032,["to"])],64))],64))),256))],64)}const Mf=Mi(mf,[["render",wf]]),Sf=ai({__name:"AppDropdown",setup(e){const t=$t(!1),s=$t(!1),a=ss(()=>t.value||s.value),u=$t(),o=M=>{if(u.value.textContent=="")return;s.value=!0;const D=M.target.getBoundingClientRect();u.value.style.left=`${D.right}px`,u.value.style.top=`${D.top}px`};return(M,D)=>(wt(),Wt("div",null,[Le("div",{class:"trigger",onMouseenter:D[0]||(D[0]=k=>o(k)),onMouseleave:D[1]||(D[1]=k=>s.value=!1)},[Ir(M.$slots,"trigger",{},void 0,!0)],32),Ms(Le("div",{class:"tooltip",ref_key:"content",ref:u,onMouseenter:D[2]||(D[2]=k=>t.value=!0),onMouseleave:D[3]||(D[3]=k=>t.value=!1)},[Ir(M.$slots,"content",{},void 0,!0)],544),[[Dc,a.value]])]))}}),tl=Mi(Sf,[["__scopeId","data-v-03e81e43"]]),Af="modulepreload",bf=function(e,t){return new URL(e,t).href},sl={},ct=function(t,s,a){let u=Promise.resolve();if(s&&s.length>0){const o=document.getElementsByTagName("link");u=Promise.all(s.map(M=>{if(M=bf(M,a),M in sl)return;sl[M]=!0;const D=M.endsWith(".css"),k=D?'[rel="stylesheet"]':"";if(!!a)for(let I=o.length-1;I>=0;I--){const q=o[I];if(q.href===M&&(!D||q.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${M}"]${k}`))return;const v=document.createElement("link");if(v.rel=D?"stylesheet":Af,D||(v.as="script",v.crossOrigin=""),v.href=M,document.head.appendChild(v),D)return new Promise((I,q)=>{v.addEventListener("load",I),v.addEventListener("error",()=>q(new Error(`Unable to preload CSS for ${M}`)))})}))}return u.then(()=>t()).catch(o=>{const M=new Event("vite:preloadError",{cancelable:!0});if(M.payload=o,window.dispatchEvent(M),!M.defaultPrevented)throw o})},Rf={meta:{name:"Changelog",root:!0}};/*!
  * vue-router v4.3.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const Di=typeof document<"u";function Df(e){return e.__esModule||e[Symbol.toStringTag]==="Module"}const ut=Object.assign;function ha(e,t){const s={};for(const a in t){const u=t[a];s[a]=Ds(u)?u.map(e):e(u)}return s}const Ji=()=>{},Ds=Array.isArray,Tc=/#/g,kf=/&/g,Ef=/\//g,Cf=/=/g,yf=/\?/g,Gc=/\+/g,Pf=/%5B/g,vf=/%5D/g,xc=/%5E/g,Bf=/%60/g,Fc=/%7B/g,Lf=/%7C/g,Ic=/%7D/g,Tf=/%20/g;function fn(e){return encodeURI(""+e).replace(Lf,"|").replace(Pf,"[").replace(vf,"]")}function Gf(e){return fn(e).replace(Fc,"{").replace(Ic,"}").replace(xc,"^")}function Fa(e){return fn(e).replace(Gc,"%2B").replace(Tf,"+").replace(Tc,"%23").replace(kf,"%26").replace(Bf,"`").replace(Fc,"{").replace(Ic,"}").replace(xc,"^")}function xf(e){return Fa(e).replace(Cf,"%3D")}function Ff(e){return fn(e).replace(Tc,"%23").replace(yf,"%3F")}function If(e){return e==null?"":Ff(e).replace(Ef,"%2F")}function ir(e){try{return decodeURIComponent(""+e)}catch{}return""+e}const Hf=/\/$/,Vf=e=>e.replace(Hf,"");function fa(e,t,s="/"){let a,u={},o="",M="";const D=t.indexOf("#");let k=t.indexOf("?");return D<k&&D>=0&&(k=-1),k>-1&&(a=t.slice(0,k),o=t.slice(k+1,D>-1?D:t.length),u=e(o)),D>-1&&(a=a||t.slice(0,D),M=t.slice(D,t.length)),a=Wf(a??t,s),{fullPath:a+(o&&"?")+o+M,path:a,query:u,hash:ir(M)}}function Nf(e,t){const s=t.query?e(t.query):"";return t.path+(s&&"?")+s+(t.hash||"")}function il(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function qf(e,t,s){const a=t.matched.length-1,u=s.matched.length-1;return a>-1&&a===u&&Ti(t.matched[a],s.matched[u])&&Hc(t.params,s.params)&&e(t.query)===e(s.query)&&t.hash===s.hash}function Ti(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function Hc(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const s in e)if(!_f(e[s],t[s]))return!1;return!0}function _f(e,t){return Ds(e)?rl(e,t):Ds(t)?rl(t,e):e===t}function rl(e,t){return Ds(t)?e.length===t.length&&e.every((s,a)=>s===t[a]):e.length===1&&e[0]===t}function Wf(e,t){if(e.startsWith("/"))return e;if(!e)return t;const s=t.split("/"),a=e.split("/"),u=a[a.length-1];(u===".."||u===".")&&a.push("");let o=s.length-1,M,D;for(M=0;M<a.length;M++)if(D=a[M],D!==".")if(D==="..")o>1&&o--;else break;return s.slice(0,o).join("/")+"/"+a.slice(M).join("/")}var rr;(function(e){e.pop="pop",e.push="push"})(rr||(rr={}));var Xi;(function(e){e.back="back",e.forward="forward",e.unknown=""})(Xi||(Xi={}));function Uf(e){if(!e)if(Di){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),Vf(e)}const Of=/^[^#]+#/;function $f(e,t){return e.replace(Of,"#")+t}function zf(e,t){const s=document.documentElement.getBoundingClientRect(),a=e.getBoundingClientRect();return{behavior:t.behavior,left:a.left-s.left-(t.left||0),top:a.top-s.top-(t.top||0)}}const sa=()=>({left:window.scrollX,top:window.scrollY});function Jf(e){let t;if("el"in e){const s=e.el,a=typeof s=="string"&&s.startsWith("#"),u=typeof s=="string"?a?document.getElementById(s.slice(1)):document.querySelector(s):s;if(!u)return;t=zf(u,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function al(e,t){return(history.state?history.state.position-t:-1)+e}const Ia=new Map;function Xf(e,t){Ia.set(e,t)}function jf(e){const t=Ia.get(e);return Ia.delete(e),t}let Yf=()=>location.protocol+"//"+location.host;function Vc(e,t){const{pathname:s,search:a,hash:u}=t,o=e.indexOf("#");if(o>-1){let D=u.includes(e.slice(o))?e.slice(o).length:1,k=u.slice(D);return k[0]!=="/"&&(k="/"+k),il(k,"")}return il(s,e)+a+u}function Zf(e,t,s,a){let u=[],o=[],M=null;const D=({state:q})=>{const z=Vc(e,location),ne=s.value,oe=t.value;let pe=0;if(q){if(s.value=z,t.value=q,M&&M===ne){M=null;return}pe=oe?q.position-oe.position:0}else a(z);u.forEach(fe=>{fe(s.value,ne,{delta:pe,type:rr.pop,direction:pe?pe>0?Xi.forward:Xi.back:Xi.unknown})})};function k(){M=s.value}function y(q){u.push(q);const z=()=>{const ne=u.indexOf(q);ne>-1&&u.splice(ne,1)};return o.push(z),z}function v(){const{history:q}=window;q.state&&q.replaceState(ut({},q.state,{scroll:sa()}),"")}function I(){for(const q of o)q();o=[],window.removeEventListener("popstate",D),window.removeEventListener("beforeunload",v)}return window.addEventListener("popstate",D),window.addEventListener("beforeunload",v,{passive:!0}),{pauseListeners:k,listen:y,destroy:I}}function nl(e,t,s,a=!1,u=!1){return{back:e,current:t,forward:s,replaced:a,position:window.history.length,scroll:u?sa():null}}function Qf(e){const{history:t,location:s}=window,a={value:Vc(e,s)},u={value:t.state};u.value||o(a.value,{back:null,current:a.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function o(k,y,v){const I=e.indexOf("#"),q=I>-1?(s.host&&document.querySelector("base")?e:e.slice(I))+k:Yf()+e+k;try{t[v?"replaceState":"pushState"](y,"",q),u.value=y}catch(z){console.error(z),s[v?"replace":"assign"](q)}}function M(k,y){const v=ut({},t.state,nl(u.value.back,k,u.value.forward,!0),y,{position:u.value.position});o(k,v,!0),a.value=k}function D(k,y){const v=ut({},u.value,t.state,{forward:k,scroll:sa()});o(v.current,v,!0);const I=ut({},nl(a.value,k,null),{position:v.position+1},y);o(k,I,!1),a.value=k}return{location:a,state:u,push:D,replace:M}}function Kf(e){e=Uf(e);const t=Qf(e),s=Zf(e,t.state,t.location,t.replace);function a(o,M=!0){M||s.pauseListeners(),history.go(o)}const u=ut({location:"",base:e,go:a,createHref:$f.bind(null,e)},t,s);return Object.defineProperty(u,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(u,"state",{enumerable:!0,get:()=>t.state.value}),u}function ep(e){return e=location.host?e||location.pathname+location.search:"",e.includes("#")||(e+="#"),Kf(e)}function tp(e){return typeof e=="string"||e&&typeof e=="object"}function Nc(e){return typeof e=="string"||typeof e=="symbol"}const Us={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},qc=Symbol("");var ll;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(ll||(ll={}));function Gi(e,t){return ut(new Error,{type:e,[qc]:!0},t)}function xs(e,t){return e instanceof Error&&qc in e&&(t==null||!!(e.type&t))}const cl="[^/]+?",sp={sensitive:!1,strict:!1,start:!0,end:!0},ip=/[.+*?^${}()[\]/\\]/g;function rp(e,t){const s=ut({},sp,t),a=[];let u=s.start?"^":"";const o=[];for(const y of e){const v=y.length?[]:[90];s.strict&&!y.length&&(u+="/");for(let I=0;I<y.length;I++){const q=y[I];let z=40+(s.sensitive?.25:0);if(q.type===0)I||(u+="/"),u+=q.value.replace(ip,"\\$&"),z+=40;else if(q.type===1){const{value:ne,repeatable:oe,optional:pe,regexp:fe}=q;o.push({name:ne,repeatable:oe,optional:pe});const ke=fe||cl;if(ke!==cl){z+=10;try{new RegExp(`(${ke})`)}catch(Je){throw new Error(`Invalid custom RegExp for param "${ne}" (${ke}): `+Je.message)}}let Ie=oe?`((?:${ke})(?:/(?:${ke}))*)`:`(${ke})`;I||(Ie=pe&&y.length<2?`(?:/${Ie})`:"/"+Ie),pe&&(Ie+="?"),u+=Ie,z+=20,pe&&(z+=-8),oe&&(z+=-20),ke===".*"&&(z+=-50)}v.push(z)}a.push(v)}if(s.strict&&s.end){const y=a.length-1;a[y][a[y].length-1]+=.7000000000000001}s.strict||(u+="/?"),s.end?u+="$":s.strict&&(u+="(?:/|$)");const M=new RegExp(u,s.sensitive?"":"i");function D(y){const v=y.match(M),I={};if(!v)return null;for(let q=1;q<v.length;q++){const z=v[q]||"",ne=o[q-1];I[ne.name]=z&&ne.repeatable?z.split("/"):z}return I}function k(y){let v="",I=!1;for(const q of e){(!I||!v.endsWith("/"))&&(v+="/"),I=!1;for(const z of q)if(z.type===0)v+=z.value;else if(z.type===1){const{value:ne,repeatable:oe,optional:pe}=z,fe=ne in y?y[ne]:"";if(Ds(fe)&&!oe)throw new Error(`Provided param "${ne}" is an array but it is not repeatable (* or + modifiers)`);const ke=Ds(fe)?fe.join("/"):fe;if(!ke)if(pe)q.length<2&&(v.endsWith("/")?v=v.slice(0,-1):I=!0);else throw new Error(`Missing required param "${ne}"`);v+=ke}}return v||"/"}return{re:M,score:a,keys:o,parse:D,stringify:k}}function ap(e,t){let s=0;for(;s<e.length&&s<t.length;){const a=t[s]-e[s];if(a)return a;s++}return e.length<t.length?e.length===1&&e[0]===80?-1:1:e.length>t.length?t.length===1&&t[0]===80?1:-1:0}function np(e,t){let s=0;const a=e.score,u=t.score;for(;s<a.length&&s<u.length;){const o=ap(a[s],u[s]);if(o)return o;s++}if(Math.abs(u.length-a.length)===1){if(ol(a))return 1;if(ol(u))return-1}return u.length-a.length}function ol(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const lp={type:0,value:""},cp=/[a-zA-Z0-9_]/;function op(e){if(!e)return[[]];if(e==="/")return[[lp]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(z){throw new Error(`ERR (${s})/"${y}": ${z}`)}let s=0,a=s;const u=[];let o;function M(){o&&u.push(o),o=[]}let D=0,k,y="",v="";function I(){y&&(s===0?o.push({type:0,value:y}):s===1||s===2||s===3?(o.length>1&&(k==="*"||k==="+")&&t(`A repeatable param (${y}) must be alone in its segment. eg: '/:ids+.`),o.push({type:1,value:y,regexp:v,repeatable:k==="*"||k==="+",optional:k==="*"||k==="?"})):t("Invalid state to consume buffer"),y="")}function q(){y+=k}for(;D<e.length;){if(k=e[D++],k==="\\"&&s!==2){a=s,s=4;continue}switch(s){case 0:k==="/"?(y&&I(),M()):k===":"?(I(),s=1):q();break;case 4:q(),s=a;break;case 1:k==="("?s=2:cp.test(k)?q():(I(),s=0,k!=="*"&&k!=="?"&&k!=="+"&&D--);break;case 2:k===")"?v[v.length-1]=="\\"?v=v.slice(0,-1)+k:s=3:v+=k;break;case 3:I(),s=0,k!=="*"&&k!=="?"&&k!=="+"&&D--,v="";break;default:t("Unknown state");break}}return s===2&&t(`Unfinished custom RegExp for param "${y}"`),I(),M(),u}function up(e,t,s){const a=rp(op(e.path),s),u=ut(a,{record:e,parent:t,children:[],alias:[]});return t&&!u.record.aliasOf==!t.record.aliasOf&&t.children.push(u),u}function hp(e,t){const s=[],a=new Map;t=fl({strict:!1,end:!0,sensitive:!1},t);function u(v){return a.get(v)}function o(v,I,q){const z=!q,ne=fp(v);ne.aliasOf=q&&q.record;const oe=fl(t,v),pe=[ne];if("alias"in v){const Ie=typeof v.alias=="string"?[v.alias]:v.alias;for(const Je of Ie)pe.push(ut({},ne,{components:q?q.record.components:ne.components,path:Je,aliasOf:q?q.record:ne}))}let fe,ke;for(const Ie of pe){const{path:Je}=Ie;if(I&&Je[0]!=="/"){const je=I.record.path,He=je[je.length-1]==="/"?"":"/";Ie.path=I.record.path+(Je&&He+Je)}if(fe=up(Ie,I,oe),q?q.alias.push(fe):(ke=ke||fe,ke!==fe&&ke.alias.push(fe),z&&v.name&&!hl(fe)&&M(v.name)),ne.children){const je=ne.children;for(let He=0;He<je.length;He++)o(je[He],fe,q&&q.children[He])}q=q||fe,(fe.record.components&&Object.keys(fe.record.components).length||fe.record.name||fe.record.redirect)&&k(fe)}return ke?()=>{M(ke)}:Ji}function M(v){if(Nc(v)){const I=a.get(v);I&&(a.delete(v),s.splice(s.indexOf(I),1),I.children.forEach(M),I.alias.forEach(M))}else{const I=s.indexOf(v);I>-1&&(s.splice(I,1),v.record.name&&a.delete(v.record.name),v.children.forEach(M),v.alias.forEach(M))}}function D(){return s}function k(v){let I=0;for(;I<s.length&&np(v,s[I])>=0&&(v.record.path!==s[I].record.path||!_c(v,s[I]));)I++;s.splice(I,0,v),v.record.name&&!hl(v)&&a.set(v.record.name,v)}function y(v,I){let q,z={},ne,oe;if("name"in v&&v.name){if(q=a.get(v.name),!q)throw Gi(1,{location:v});oe=q.record.name,z=ut(ul(I.params,q.keys.filter(ke=>!ke.optional).concat(q.parent?q.parent.keys.filter(ke=>ke.optional):[]).map(ke=>ke.name)),v.params&&ul(v.params,q.keys.map(ke=>ke.name))),ne=q.stringify(z)}else if(v.path!=null)ne=v.path,q=s.find(ke=>ke.re.test(ne)),q&&(z=q.parse(ne),oe=q.record.name);else{if(q=I.name?a.get(I.name):s.find(ke=>ke.re.test(I.path)),!q)throw Gi(1,{location:v,currentLocation:I});oe=q.record.name,z=ut({},I.params,v.params),ne=q.stringify(z)}const pe=[];let fe=q;for(;fe;)pe.unshift(fe.record),fe=fe.parent;return{name:oe,path:ne,params:z,matched:pe,meta:dp(pe)}}return e.forEach(v=>o(v)),{addRoute:o,resolve:y,removeRoute:M,getRoutes:D,getRecordMatcher:u}}function ul(e,t){const s={};for(const a of t)a in e&&(s[a]=e[a]);return s}function fp(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:pp(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function pp(e){const t={},s=e.props||!1;if("component"in e)t.default=s;else for(const a in e.components)t[a]=typeof s=="object"?s[a]:s;return t}function hl(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function dp(e){return e.reduce((t,s)=>ut(t,s.meta),{})}function fl(e,t){const s={};for(const a in e)s[a]=a in t?t[a]:e[a];return s}function _c(e,t){return t.children.some(s=>s===e||_c(e,s))}function gp(e){const t={};if(e===""||e==="?")return t;const a=(e[0]==="?"?e.slice(1):e).split("&");for(let u=0;u<a.length;++u){const o=a[u].replace(Gc," "),M=o.indexOf("="),D=ir(M<0?o:o.slice(0,M)),k=M<0?null:ir(o.slice(M+1));if(D in t){let y=t[D];Ds(y)||(y=t[D]=[y]),y.push(k)}else t[D]=k}return t}function pl(e){let t="";for(let s in e){const a=e[s];if(s=xf(s),a==null){a!==void 0&&(t+=(t.length?"&":"")+s);continue}(Ds(a)?a.map(o=>o&&Fa(o)):[a&&Fa(a)]).forEach(o=>{o!==void 0&&(t+=(t.length?"&":"")+s,o!=null&&(t+="="+o))})}return t}function mp(e){const t={};for(const s in e){const a=e[s];a!==void 0&&(t[s]=Ds(a)?a.map(u=>u==null?null:""+u):a==null?a:""+a)}return t}const wp=Symbol(""),dl=Symbol(""),ia=Symbol(""),pn=Symbol(""),Ha=Symbol("");function qi(){let e=[];function t(a){return e.push(a),()=>{const u=e.indexOf(a);u>-1&&e.splice(u,1)}}function s(){e=[]}return{add:t,list:()=>e.slice(),reset:s}}function Ys(e,t,s,a,u,o=M=>M()){const M=a&&(a.enterCallbacks[u]=a.enterCallbacks[u]||[]);return()=>new Promise((D,k)=>{const y=q=>{q===!1?k(Gi(4,{from:s,to:t})):q instanceof Error?k(q):tp(q)?k(Gi(2,{from:t,to:q})):(M&&a.enterCallbacks[u]===M&&typeof q=="function"&&M.push(q),D())},v=o(()=>e.call(a&&a.instances[u],t,s,y));let I=Promise.resolve(v);e.length<3&&(I=I.then(y)),I.catch(q=>k(q))})}function pa(e,t,s,a,u=o=>o()){const o=[];for(const M of e)for(const D in M.components){let k=M.components[D];if(!(t!=="beforeRouteEnter"&&!M.instances[D]))if(Mp(k)){const v=(k.__vccOpts||k)[t];v&&o.push(Ys(v,s,a,M,D,u))}else{let y=k();o.push(()=>y.then(v=>{if(!v)return Promise.reject(new Error(`Couldn't resolve component "${D}" at "${M.path}"`));const I=Df(v)?v.default:v;M.components[D]=I;const z=(I.__vccOpts||I)[t];return z&&Ys(z,s,a,M,D,u)()}))}}return o}function Mp(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function gl(e){const t=is(ia),s=is(pn),a=ss(()=>t.resolve(ve(e.to))),u=ss(()=>{const{matched:k}=a.value,{length:y}=k,v=k[y-1],I=s.matched;if(!v||!I.length)return-1;const q=I.findIndex(Ti.bind(null,v));if(q>-1)return q;const z=ml(k[y-2]);return y>1&&ml(v)===z&&I[I.length-1].path!==z?I.findIndex(Ti.bind(null,k[y-2])):q}),o=ss(()=>u.value>-1&&Rp(s.params,a.value.params)),M=ss(()=>u.value>-1&&u.value===s.matched.length-1&&Hc(s.params,a.value.params));function D(k={}){return bp(k)?t[ve(e.replace)?"replace":"push"](ve(e.to)).catch(Ji):Promise.resolve()}return{route:a,href:ss(()=>a.value.href),isActive:o,isExactActive:M,navigate:D}}const Sp=ai({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:gl,setup(e,{slots:t}){const s=hr(gl(e)),{options:a}=is(ia),u=ss(()=>({[wl(e.activeClass,a.linkActiveClass,"router-link-active")]:s.isActive,[wl(e.exactActiveClass,a.linkExactActiveClass,"router-link-exact-active")]:s.isExactActive}));return()=>{const o=t.default&&t.default(s);return e.custom?o:Rc("a",{"aria-current":s.isExactActive?e.ariaCurrentValue:null,href:s.href,onClick:s.navigate,class:u.value},o)}}}),Ap=Sp;function bp(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function Rp(e,t){for(const s in t){const a=t[s],u=e[s];if(typeof a=="string"){if(a!==u)return!1}else if(!Ds(u)||u.length!==a.length||a.some((o,M)=>o!==u[M]))return!1}return!0}function ml(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const wl=(e,t,s)=>e??t??s,Dp=ai({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:s}){const a=is(Ha),u=ss(()=>e.route||a.value),o=is(dl,0),M=ss(()=>{let y=ve(o);const{matched:v}=u.value;let I;for(;(I=v[y])&&!I.components;)y++;return y}),D=ss(()=>u.value.matched[M.value]);yr(dl,ss(()=>M.value+1)),yr(wp,D),yr(Ha,u);const k=$t();return Jt(()=>[k.value,D.value,e.name],([y,v,I],[q,z,ne])=>{v&&(v.instances[I]=y,z&&z!==v&&y&&y===q&&(v.leaveGuards.size||(v.leaveGuards=z.leaveGuards),v.updateGuards.size||(v.updateGuards=z.updateGuards))),y&&v&&(!z||!Ti(v,z)||!q)&&(v.enterCallbacks[I]||[]).forEach(oe=>oe(y))},{flush:"post"}),()=>{const y=u.value,v=e.name,I=D.value,q=I&&I.components[v];if(!q)return Ml(s.default,{Component:q,route:y});const z=I.props[v],ne=z?z===!0?y.params:typeof z=="function"?z(y):z:null,pe=Rc(q,ut({},ne,t,{onVnodeUnmounted:fe=>{fe.component.isUnmounted&&(I.instances[v]=null)},ref:k}));return Ml(s.default,{Component:pe,route:y})||pe}}});function Ml(e,t){if(!e)return null;const s=e(t);return s.length===1?s[0]:s}const kp=Dp;function Ep(e){const t=hp(e.routes,e),s=e.parseQuery||gp,a=e.stringifyQuery||pl,u=e.history,o=qi(),M=qi(),D=qi(),k=$l(Us);let y=Us;Di&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const v=ha.bind(null,X=>""+X),I=ha.bind(null,If),q=ha.bind(null,ir);function z(X,ue){let le,Me;return Nc(X)?(le=t.getRecordMatcher(X),Me=ue):Me=X,t.addRoute(Me,le)}function ne(X){const ue=t.getRecordMatcher(X);ue&&t.removeRoute(ue)}function oe(){return t.getRoutes().map(X=>X.record)}function pe(X){return!!t.getRecordMatcher(X)}function fe(X,ue){if(ue=ut({},ue||k.value),typeof X=="string"){const G=fa(s,X,ue.path),U=t.resolve({path:G.path},ue),Y=u.createHref(G.fullPath);return ut(G,U,{params:q(U.params),hash:ir(G.hash),redirectedFrom:void 0,href:Y})}let le;if(X.path!=null)le=ut({},X,{path:fa(s,X.path,ue.path).path});else{const G=ut({},X.params);for(const U in G)G[U]==null&&delete G[U];le=ut({},X,{params:I(G)}),ue.params=I(ue.params)}const Me=t.resolve(le,ue),nt=X.hash||"";Me.params=v(q(Me.params));const St=Nf(a,ut({},X,{hash:Gf(nt),path:Me.path})),P=u.createHref(St);return ut({fullPath:St,hash:nt,query:a===pl?mp(X.query):X.query||{}},Me,{redirectedFrom:void 0,href:P})}function ke(X){return typeof X=="string"?fa(s,X,k.value.path):ut({},X)}function Ie(X,ue){if(y!==X)return Gi(8,{from:ue,to:X})}function Je(X){return Dt(X)}function je(X){return Je(ut(ke(X),{replace:!0}))}function He(X){const ue=X.matched[X.matched.length-1];if(ue&&ue.redirect){const{redirect:le}=ue;let Me=typeof le=="function"?le(X):le;return typeof Me=="string"&&(Me=Me.includes("?")||Me.includes("#")?Me=ke(Me):{path:Me},Me.params={}),ut({query:X.query,hash:X.hash,params:Me.path!=null?{}:X.params},Me)}}function Dt(X,ue){const le=y=fe(X),Me=k.value,nt=X.state,St=X.force,P=X.replace===!0,G=He(le);if(G)return Dt(ut(ke(G),{state:typeof G=="object"?ut({},nt,G.state):nt,force:St,replace:P}),ue||le);const U=le;U.redirectedFrom=ue;let Y;return!St&&qf(a,Me,le)&&(Y=Gi(16,{to:U,from:Me}),ks(Me,Me,!0,!1)),(Y?Promise.resolve(Y):Xe(U,Me)).catch(J=>xs(J)?xs(J,2)?J:qs(J):at(J,U,Me)).then(J=>{if(J){if(xs(J,2))return Dt(ut({replace:P},ke(J.to),{state:typeof J.to=="object"?ut({},nt,J.to.state):nt,force:St}),ue||U)}else J=Kt(U,Me,!0,P,nt);return Mt(U,Me,J),J})}function Ue(X,ue){const le=Ie(X,ue);return le?Promise.reject(le):Promise.resolve()}function ge(X){const ue=Ai.values().next().value;return ue&&typeof ue.runWithContext=="function"?ue.runWithContext(X):X()}function Xe(X,ue){let le;const[Me,nt,St]=Cp(X,ue);le=pa(Me.reverse(),"beforeRouteLeave",X,ue);for(const G of Me)G.leaveGuards.forEach(U=>{le.push(Ys(U,X,ue))});const P=Ue.bind(null,X,ue);return le.push(P),qt(le).then(()=>{le=[];for(const G of o.list())le.push(Ys(G,X,ue));return le.push(P),qt(le)}).then(()=>{le=pa(nt,"beforeRouteUpdate",X,ue);for(const G of nt)G.updateGuards.forEach(U=>{le.push(Ys(U,X,ue))});return le.push(P),qt(le)}).then(()=>{le=[];for(const G of St)if(G.beforeEnter)if(Ds(G.beforeEnter))for(const U of G.beforeEnter)le.push(Ys(U,X,ue));else le.push(Ys(G.beforeEnter,X,ue));return le.push(P),qt(le)}).then(()=>(X.matched.forEach(G=>G.enterCallbacks={}),le=pa(St,"beforeRouteEnter",X,ue,ge),le.push(P),qt(le))).then(()=>{le=[];for(const G of M.list())le.push(Ys(G,X,ue));return le.push(P),qt(le)}).catch(G=>xs(G,8)?G:Promise.reject(G))}function Mt(X,ue,le){D.list().forEach(Me=>ge(()=>Me(X,ue,le)))}function Kt(X,ue,le,Me,nt){const St=Ie(X,ue);if(St)return St;const P=ue===Us,G=Di?history.state:{};le&&(Me||P?u.replace(X.fullPath,ut({scroll:P&&G&&G.scroll},nt)):u.push(X.fullPath,nt)),k.value=X,ks(X,ue,le,P),qs()}let as;function ni(){as||(as=u.listen((X,ue,le)=>{if(!dr.listening)return;const Me=fe(X),nt=He(Me);if(nt){Dt(ut(nt,{replace:!0}),Me).catch(Ji);return}y=Me;const St=k.value;Di&&Xf(al(St.fullPath,le.delta),sa()),Xe(Me,St).catch(P=>xs(P,12)?P:xs(P,2)?(Dt(P.to,Me).then(G=>{xs(G,20)&&!le.delta&&le.type===rr.pop&&u.go(-1,!1)}).catch(Ji),Promise.reject()):(le.delta&&u.go(-le.delta,!1),at(P,Me,St))).then(P=>{P=P||Kt(Me,St,!1),P&&(le.delta&&!xs(P,8)?u.go(-le.delta,!1):le.type===rr.pop&&xs(P,20)&&u.go(-1,!1)),Mt(Me,St,P)}).catch(Ji)}))}let ns=qi(),it=qi(),ht;function at(X,ue,le){qs(X);const Me=it.list();return Me.length?Me.forEach(nt=>nt(X,ue,le)):console.error(X),Promise.reject(X)}function Gs(){return ht&&k.value!==Us?Promise.resolve():new Promise((X,ue)=>{ns.add([X,ue])})}function qs(X){return ht||(ht=!X,ni(),ns.list().forEach(([ue,le])=>X?le(X):ue()),ns.reset()),X}function ks(X,ue,le,Me){const{scrollBehavior:nt}=e;if(!Di||!nt)return Promise.resolve();const St=!le&&jf(al(X.fullPath,0))||(Me||!le)&&history.state&&history.state.scroll||null;return Fi().then(()=>nt(X,ue,St)).then(P=>P&&Jf(P)).catch(P=>at(P,X,ue))}const jt=X=>u.go(X);let Si;const Ai=new Set,dr={currentRoute:k,listening:!0,addRoute:z,removeRoute:ne,hasRoute:pe,getRoutes:oe,resolve:fe,options:e,push:Je,replace:je,go:jt,back:()=>jt(-1),forward:()=>jt(1),beforeEach:o.add,beforeResolve:M.add,afterEach:D.add,onError:it.add,isReady:Gs,install(X){const ue=this;X.component("RouterLink",Ap),X.component("RouterView",kp),X.config.globalProperties.$router=ue,Object.defineProperty(X.config.globalProperties,"$route",{enumerable:!0,get:()=>ve(k)}),Di&&!Si&&k.value===Us&&(Si=!0,Je(u.location).catch(nt=>{}));const le={};for(const nt in Us)Object.defineProperty(le,nt,{get:()=>k.value[nt],enumerable:!0});X.provide(ia,ue),X.provide(pn,Wl(le)),X.provide(Ha,k);const Me=X.unmount;Ai.add(X),X.unmount=function(){Ai.delete(X),Ai.size<1&&(y=Us,as&&as(),as=null,k.value=Us,Si=!1,ht=!1),Me()}}};function qt(X){return X.reduce((ue,le)=>ue.then(()=>ge(le)),Promise.resolve())}return dr}function Cp(e,t){const s=[],a=[],u=[],o=Math.max(t.matched.length,e.matched.length);for(let M=0;M<o;M++){const D=t.matched[M];D&&(e.matched.find(y=>Ti(y,D))?a.push(D):s.push(D));const k=e.matched[M];k&&(t.matched.find(y=>Ti(y,k))||u.push(k))}return[s,a,u]}function yp(){return is(ia)}function A1(){return is(pn)}function pt(e,...t){return t.reduce((s,a)=>{const u=Object.assign({},s.meta,a.meta),o=[].concat(s.alias||[],a.alias||[]);return Object.assign(s,a),s.meta=u,s.alias=o,s},e)}const Pp={meta:{name:"noname",default:!0}},vp={meta:{name:"Ability"}},Bp={meta:{name:"Bestiary"}},Lp={meta:{name:"Challange"}},Tp={meta:{name:"Expedition"}},Gp={meta:{name:"Guild"}},xp={meta:{name:"noname",default:!0}},Fp={meta:{name:"Global"}},Ip={meta:{name:"Title"}},Hp={meta:{name:"Quest"}},Vp={meta:{name:"noname",default:!0}},Np={meta:{name:"Powerup"}},qp={meta:{name:"Ritual"}},_p={meta:{name:"Ruby Shop"}},Wp={meta:{name:"Upgrade"}},Up={meta:{name:"Super Dungeon"}},Op={meta:{name:"Talisman"}},$p={meta:{name:"Town"}},zp={meta:{name:"Data",root:!0}},Jp={meta:{name:"Drop Chance",root:!0}},Xp={meta:{name:"Equipment",root:!0}},jp={meta:{name:"Expedition",root:!0}},Yp={meta:{name:"Guild",root:!0}},Zp={meta:{name:"Help",root:!0}},Qp={meta:{name:"Ruby Shard",root:!0}},Kp={meta:{name:"Talisman",root:!0}},ed={meta:{name:"Test",root:!0}},Sl=[{path:"/",name:"/",component:()=>ct(()=>import("./index-KxwSUUN8.js"),__vite__mapDeps([]),import.meta.url)},pt({path:"/changelog",name:"/changelog",component:()=>ct(()=>import("./changelog-hLl4dYxc.js"),__vite__mapDeps([0,1]),import.meta.url)},Rf),pt({path:"/data",name:"/data",component:()=>ct(()=>import("./data-dJs-y5JT.js"),__vite__mapDeps([]),import.meta.url),children:[pt({path:"",name:"/data/",component:()=>ct(()=>import("./index-xyFVRzJN.js"),__vite__mapDeps([2,3]),import.meta.url)},Pp),pt({path:"ability",name:"/data/ability",component:()=>ct(()=>import("./ability-2e7YT5FJ.js"),__vite__mapDeps([4,5]),import.meta.url)},vp),pt({path:"bestiary",name:"/data/bestiary",component:()=>ct(()=>import("./bestiary-xuqbggUj.js"),__vite__mapDeps([]),import.meta.url)},Bp),pt({path:"challange",name:"/data/challange",component:()=>ct(()=>import("./challange-yJ--DYlp.js"),__vite__mapDeps([6,5]),import.meta.url)},Lp),pt({path:"expedition",name:"/data/expedition",component:()=>ct(()=>import("./expedition-e8_IojWF.js"),__vite__mapDeps([]),import.meta.url)},Tp),pt({path:"guild",name:"/data/guild",component:()=>ct(()=>import("./guild-vf7SJuHR.js"),__vite__mapDeps([]),import.meta.url)},Gp),pt({path:"quest",name:"/data/quest",component:()=>ct(()=>import("./quest-TAgKnPVs.js"),__vite__mapDeps([]),import.meta.url),children:[pt({path:"",name:"/data/quest/",component:()=>ct(()=>import("./index-zsXNhkZB.js"),__vite__mapDeps([7,3]),import.meta.url)},xp),pt({path:"global",name:"/data/quest/global",component:()=>ct(()=>import("./global-DhxNKJjh.js"),__vite__mapDeps([]),import.meta.url)},Fp),pt({path:"title",name:"/data/quest/title",component:()=>ct(()=>import("./title-6QF69sXY.js"),__vite__mapDeps([]),import.meta.url)},Ip)]},Hp),pt({path:"super-dungeon",name:"/data/super-dungeon",component:()=>ct(()=>import("./super-dungeon-0vdHSEpI.js"),__vite__mapDeps([]),import.meta.url),children:[pt({path:"",name:"/data/super-dungeon/",component:()=>ct(()=>import("./index-uNzt9chd.js"),__vite__mapDeps([8,3]),import.meta.url)},Vp),pt({path:"powerup",name:"/data/super-dungeon/powerup",component:()=>ct(()=>import("./powerup-2whk5eha.js"),__vite__mapDeps([]),import.meta.url)},Np),pt({path:"ritual",name:"/data/super-dungeon/ritual",component:()=>ct(()=>import("./ritual-nEfOomgw.js"),__vite__mapDeps([]),import.meta.url)},qp),pt({path:"ruby-shop",name:"/data/super-dungeon/ruby-shop",component:()=>ct(()=>import("./ruby-shop-gSI-b8Np.js"),__vite__mapDeps([]),import.meta.url)},_p),pt({path:"upgrade",name:"/data/super-dungeon/upgrade",component:()=>ct(()=>import("./upgrade-9znKrqSE.js"),__vite__mapDeps([]),import.meta.url)},Wp)]},Up),pt({path:"talisman",name:"/data/talisman",component:()=>ct(()=>import("./talisman-7nIFd7_h.js"),__vite__mapDeps([]),import.meta.url)},Op),pt({path:"town",name:"/data/town",component:()=>ct(()=>import("./town-8bwbG0b3.js"),__vite__mapDeps([9,5]),import.meta.url)},$p)]},zp),pt({path:"/drop-chance",name:"/drop-chance",component:()=>ct(()=>import("./drop-chance-oiADQRGN.js"),__vite__mapDeps([10,11,12]),import.meta.url)},Jp),pt({path:"/equipment",name:"/equipment",component:()=>ct(()=>import("./equipment-dDg6xsg4.js"),__vite__mapDeps([13,14,15,11,16]),import.meta.url)},Xp),pt({path:"/expedition",name:"/expedition",component:()=>ct(()=>import("./expedition-6VZaTtQc.js"),__vite__mapDeps([17,14,15,11,5,18]),import.meta.url)},jp),pt({path:"/guild",name:"/guild",component:()=>ct(()=>import("./guild-zOp1e16w.js"),__vite__mapDeps([19,11]),import.meta.url)},Yp),pt({path:"/help",name:"/help",component:()=>ct(()=>import("./help-09Ab-pBh.js"),__vite__mapDeps([20,21]),import.meta.url)},Zp),pt({path:"/ruby-shard",name:"/ruby-shard",component:()=>ct(()=>import("./ruby-shard-I6r4OsUz.js"),__vite__mapDeps([22,11]),import.meta.url)},Qp),pt({path:"/talisman",name:"/talisman",component:()=>ct(()=>import("./talisman-Uq1NvT4j.js"),__vite__mapDeps([23,11]),import.meta.url)},Kp),pt({path:"/test",name:"/test",component:()=>ct(()=>import("./test-2-Kf5Qq6.js"),__vite__mapDeps([]),import.meta.url)},ed)];function td(e){const{extendRoutes:t}=e;return Ep(Object.assign(e,{routes:typeof t=="function"?t(Sl):Sl}))}const sd=ai({__name:"TheMenu",setup(e){const t=yp().getRoutes().filter(s=>s.meta.root);return(s,a)=>{const u=Fr("RouterLink"),o=Fr("router-link");return wt(),Wt("nav",null,[(wt(!0),Wt(Rt,null,Cr(ve(t),M=>{var D;return wt(),Wt(Rt,null,[(D=M.children)!=null&&D.length?(wt(),Fs(tl,{key:0},{trigger:Zt(()=>[kt(u,{to:M.path,class:"rightarrow"},{default:Zt(()=>[yt(Bs(M.meta.name),1)]),_:2},1032,["to"])]),content:Zt(()=>[(wt(!0),Wt(Rt,null,Cr(M.children.filter(k=>{var y;return!((y=k.meta)!=null&&y.default)}),k=>{var y,v;return wt(),Wt(Rt,null,[(y=k.children)!=null&&y.length?(wt(),Fs(tl,{key:0,submenu:""},{trigger:Zt(()=>{var I;return[(I=k.meta)!=null&&I.default?Br("",!0):(wt(),Fs(o,{key:0,class:"submenu rightarrow",to:M.path+"/"+k.path},{default:Zt(()=>{var q;return[yt(Bs((q=k.meta)==null?void 0:q.name),1)]}),_:2},1032,["to"]))]}),content:Zt(()=>[(wt(!0),Wt(Rt,null,Cr(k.children,I=>{var q;return wt(),Wt(Rt,null,[(q=I.meta)!=null&&q.default?Br("",!0):(wt(),Fs(o,{key:0,class:"submenu",to:M.path+"/"+k.path+"/"+I.path},{default:Zt(()=>{var z;return[yt(Bs((z=I.meta)==null?void 0:z.name),1)]}),_:2},1032,["to"]))],64)}),256))]),_:2},1024)):(wt(),Wt(Rt,{key:1},[(v=k.meta)!=null&&v.default?Br("",!0):(wt(),Fs(o,{key:0,class:"submenu",to:M.path+"/"+k.path},{default:Zt(()=>{var I;return[yt(Bs((I=k.meta)==null?void 0:I.name),1)]}),_:2},1032,["to"]))],64))],64)}),256))]),_:2},1024)):(wt(),Fs(u,{key:1,to:M.path},{default:Zt(()=>[yt(Bs(M.meta.name),1)]),_:2},1032,["to"]))],64)}),256))])}}}),id=Mi(sd,[["__scopeId","data-v-6ada906b"]]),rd={class:"wrapper"},ad=ai({__name:"AppDialog",setup(e,{expose:t}){const s=$t();function a(u){u.target.nodeName==s.value.nodeName&&s.value.close()}return t({dialog:s}),(u,o)=>(wt(),Wt(Rt,null,[Le("span",{onClick:o[0]||(o[0]=M=>s.value.showModal())},[Ir(u.$slots,"trigger",{},void 0,!0)]),Le("dialog",{ref_key:"dialog",ref:s,onMousedown:a},[Le("div",rd,[Ir(u.$slots,"content",{},()=>[yt("Dialog Content")],!0)])],544)],64))}}),nd=Mi(ad,[["__scopeId","data-v-e1d8dc20"]]),ld=e=>(Kl("data-v-a7649dc3"),e=e(),ec(),e),cd={style:{width:"700px"}},od=ld(()=>Le("h1",null,"Last log",-1)),ud=ai({__name:"TheLog",setup(e){const t=$t("Nothing"),s=$t(!1),a=$t(null);return Ga(document,"log",u=>{u.detail.type=="msg"&&(t.value=u.detail.data,s.value=!0)}),(u,o)=>(wt(),Fs(nd,{ref_key:"dialog",ref:a},{trigger:Zt(()=>[Le("button",{class:Or({yellow:s.value}),onClick:o[0]||(o[0]=M=>s.value=!s.value)},"Log",2)]),content:Zt(()=>[Le("div",cd,[od,Le("pre",null,Bs(t.value),1)])]),_:1},512))}}),hd=Mi(ud,[["__scopeId","data-v-a7649dc3"]]),rs=e=>(Kl("data-v-e3851949"),e=e(),ec(),e),fd={class:"header"},pd={id:"title"},dd={id:"settings"},gd=rs(()=>Le("label",{for:"saveFileImport",class:"importLabel"},"Import Save File",-1)),md={class:"sidebar",id:"menu"},wd={id:"content"},Md={id:"footer",class:"footer"},Sd={id:"version"},Ad=rs(()=>Le("a",{href:"https://github.com/pr0cessus/IEH2Calculator"},"Github Repository Page",-1)),bd=rs(()=>Le("a",{href:"https://discordapp.com/users/.processus/"},"DM me on Discord",-1)),Rd={style:{padding:"10px"}},Dd=rs(()=>Le("br",null,null,-1)),kd=rs(()=>Le("br",null,null,-1)),Ed=rs(()=>Le("br",null,null,-1)),Cd=rs(()=>Le("hr",null,null,-1)),yd=rs(()=>Le("h4",null,"SD Modifiers",-1)),Pd=rs(()=>Le("br",null,null,-1)),vd=rs(()=>Le("br",null,null,-1)),Bd=rs(()=>Le("br",null,null,-1)),Ld=rs(()=>Le("br",null,null,-1)),Td=rs(()=>Le("br",null,null,-1)),Gd=ai({__name:"App",setup(e){const t=is("game"),s=$t();function a(M){if(!M.target.files)return;const D=document.createElement("script");D.src="./SaveFileDencrypt.js",D.onload=function(){console.log("script loaded");const k=new FileReader;k.readAsText(M.target.files[0]),k.onloadend=()=>{const y=new globalThis.SaveFileDencrypt(k.result).data;localStorage.setItem("SaveFileData",JSON.stringify({...xa().$state,...y})),window.alert("Save File loaded! Reloading page"),location.reload()}},document.head.appendChild(D)}function u(){window.confirm("Clear data?")&&(localStorage.clear(),window.alert("Data cleared, Reload page if you wish to start over"))}function o(){localStorage.setItem("SaveFileSnapshot",JSON.stringify(xa().$state)),location.reload()}return(M,D)=>{const k=Fr("router-view");return wt(),Wt(Rt,null,[Le("div",{class:"wrapper",onSomeEventOnce:D[3]||(D[3]=y=>console.log("someevent"))},[Le("div",fd,[Le("h1",pd,[kt(Mf)]),Le("div",dd,[kt(hd),Le("button",{style:{"font-size":"12px"},onClick:D[0]||(D[0]=y=>s.value.showModal())},"☰"),Le("button",{onClick:D[1]||(D[1]=y=>o())},"Create Snapshot"),gd,Le("input",{type:"file",id:"saveFileImport",accept:".txt",onChange:a},null,32),Le("button",{id:"data-restart",type:"reset",onClick:D[2]||(D[2]=y=>u())},"Hard Reset")])]),Le("div",md,[kt(id)]),Le("div",wd,[kt(k)]),Le("div",Md,[yt(" Version: "),Le("span",Sd,Bs(ve(Jh).version),1),yt(" | Game Version (1.2.1.8) | "),Ad,yt(" | Encounter any bug? "),bd])],32),Le("dialog",{ref_key:"dialog",ref:s,onMousedown:D[13]||(D[13]=y=>{y.target.nodeName==s.value.nodeName&&s.value.close()}),style:{"background-color":"#3a3a3a",color:"#fff"}},[Le("div",Rd,[Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[4]||(D[4]=y=>ve(t).data.source.isSuperDungeon=y),class:"checkbox",name:"isSuperDungeon"},null,512),[[Ws,ve(t).data.source.isSuperDungeon]]),yt(" Super Dungeon"),Dd,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[5]||(D[5]=y=>ve(t).data.source.superDungeonPowerupIsActive=y),class:"checkbox",name:"superDungeonPowerupIsActive"},null,512),[[Ws,ve(t).data.source.superDungeonPowerupIsActive]]),yt(" Active Powerup"),kd,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[6]||(D[6]=y=>ve(t).data.source.isBlessing=y),class:"checkbox",name:"isBlessing"},null,512),[[Ws,ve(t).data.source.isBlessing]]),yt(" Blessings"),Ed,Cd,yd,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[7]||(D[7]=y=>ve(t).data.source.isActiveSdModifiers[950+ve(dt).SwapATKWithDEF]=y),class:"checkbox",name:"SwapATKWithDEF"},null,512),[[Ws,ve(t).data.source.isActiveSdModifiers[950+ve(dt).SwapATKWithDEF]]]),yt(" Swap ATK/MATK with DEF/MDEF"),Pd,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[8]||(D[8]=y=>ve(t).data.source.isActiveSdModifiers[950+ve(dt).RemoveSDUpgrade1]=y),class:"checkbox",name:"RemoveSDUpgrade1"},null,512),[[Ws,ve(t).data.source.isActiveSdModifiers[950+ve(dt).RemoveSDUpgrade1]]]),yt(" Remove the effect of SD Damage-type and Fury upgrades in SD Upgrade I"),vd,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[9]||(D[9]=y=>ve(t).data.source.isActiveSdModifiers[950+ve(dt).ReducePowerupEffect]=y),class:"checkbox",name:"ReducePowerupEffect"},null,512),[[Ws,ve(t).data.source.isActiveSdModifiers[950+ve(dt).ReducePowerupEffect]]]),yt(" Reduce the effect of powerups by "+Bs(ve(t).data.source.sdModifierValues[950+ve(dt).ReducePowerupEffect]==0?"50.00%":ve(t).data.source.sdModifierValues[950+ve(dt).ReducePowerupEffect]==1?"90.00%":"99.00%")+" ",1),Bd,yt("            "),Ms(Le("input",{type:"range",min:"0",max:"2","onUpdate:modelValue":D[10]||(D[10]=y=>ve(t).data.source.sdModifierValues[950+ve(dt).ReducePowerupEffect]=y),name:"ReducePowerupEffectValue"},null,512),[[Mh,ve(t).data.source.sdModifierValues[950+ve(dt).ReducePowerupEffect],void 0,{lazy:!0,number:!0}]]),Ld,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[11]||(D[11]=y=>ve(t).data.source.isActiveSdModifiers[950+ve(dt).RemoveSDPowerupPassives]=y),class:"checkbox",name:"RemoveSDPowerupPassives"},null,512),[[Ws,ve(t).data.source.isActiveSdModifiers[950+ve(dt).RemoveSDPowerupPassives]]]),yt(" Remove the permanent effects of SD Powerups "),Td,Ms(Le("input",{type:"checkbox","onUpdate:modelValue":D[12]||(D[12]=y=>ve(t).data.source.isActiveSdModifiers[950+ve(dt).RemoveEquipmentEffectBonuses]=y),class:"checkbox",name:"RemoveEquipmentEffectBonuses"},null,512),[[Ws,ve(t).data.source.isActiveSdModifiers[950+ve(dt).RemoveEquipmentEffectBonuses]]]),yt(" Remove Equipment Effect Bonus ")])],544),kt(Yh)],64)}}}),xd=Mi(Gd,[["__scopeId","data-v-e3851949"]]);class Fd{constructor(){c(this,"list",[])}new(t,s=!1){return this.list.push(t),s?t:`data-endpoint="${t}"`}}var Ze=(e=>(e[e.Normal=0]="Normal",e[e.Percent=1]="Percent",e[e.Meter=2]="Meter",e[e.TimeDhms=3]="TimeDhms",e))(Ze||{});function Wc(e,t=!0){e=parseInt(e);let s=Math.floor(e/(3600*24)),a=Math.floor(e%(3600*24)/3600),u=Math.floor(e%3600/60),o=Math.floor(e%60);return a<10&&(a="0"+a),u<10&&(u="0"+u),o<10&&(o="0"+o),s==0&&a==0?`${u}m${o}s`:s==0?`${a}h${u}m${o}s`:t?`${s}d ${a}:${u}:${o}`:`${s}d${a}h${u}m${o}s`}function Dr(e,t=2,s=null){if(e==null)switch(s){case Ze.Normal:return"0%";case Ze.Meter:return"0m / sec";default:return 0}e=parseFloat(e);let a=0,u=!1;return s==Ze.TimeDhms?Wc(e):(s==Ze.Meter&&(e/=100),s==Ze.Percent&&(e*=100),e<0&&(e*=-1,u=!0),e<=1e4?a=e.toFixed(t):e<1e6?a=(e/1e3).toFixed(t)+"K":e<1e9?a=(e/1e6).toFixed(t)+"M":e<1e12?a=(e/1e9).toFixed(t)+"B":e<1e15?a=(e/1e12).toFixed(t)+"T":a=e.toExponential(t),s==Ze.Meter?a+"m / sec":(u&&(a.slice(0,1),a="-"+a),s==Ze.Percent&&(a+="%"),a.toString()))}function Id(e){if(e instanceof String&&e.includes("e+")||e>=1e15)return e;if(e=e.toString(),e=e.replace(/,/g,"."),/^\d*\.?\d+$/.test(e))return parseFloat(e);{const t=/(.*)(\D)$/gm;e=e.toLowerCase(),e=e.replace(/ /g,""),e=t.exec(e);let s=0;return e[2]=="t"?s=e[1]*1e3**4:e[2]=="b"?s=e[1]*1e3**3:e[2]=="m"?s=e[1]*1e3**2:e[2]=="k"&&(s=e[1]*1e3**1),parseFloat(s)}}const Hd=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Vd=/\\(\\)?/g;function Uc(e){let t=[];return e.charCodeAt(0)===46&&t.push(""),e.replace(Hd,function(s,a,u,o){t.push(u?o.replace(Vd,"$1"):a||s)}),t}function Nd(e,t){const s=Uc(t);for(let a=0;a<s.length;a++)if(s[a].includes("(")){const u=s[a].replace(/(\w+)\((.*?)\)/gm,"$1"),o=s[a].replace(/(\w+)\((.*?)\)/gm,"$2");e=e[u](o)}else s[a]&&(e=e[s[a]]);return e}const h={convertTo:Dr,convertFrom:Id,tDigit:(e,t=2)=>Dr(e,t,Ze.Normal),percent:(e,t=2)=>Dr(e,t,Ze.Percent),meter:(e,t=2)=>Dr(e,t,Ze.Meter),secondsToDhms:Wc,getBaseLog:(e,t)=>Math.log(e)/Math.log(t),Endpoint:Fd,stringToPath:Uc,get:Nd};class qd{constructor(t,s){c(this,"isProxy",new WeakMap);c(this,"data");c(this,"snap");c(this,"compare");this.snap=s,this.data=t,this.compare=new Proxy(this.data,this.Proxy()),this.Synchronization()}Proxy(){const t=(u,o,M=!1)=>{if((o==0||o==null)&&M)return"(NEW)";if((u==0||u==null)&&M)return"(MISSING)";if(o>u)return o/u-1<1e-4?void 0:`(-${h.percent(o/u-1,2)})`;if(o<u)return u/o-1<1e-4?void 0:`(+${h.percent(u/o-1,2)})`};let s=this.snap;const a={isProxy:new WeakMap,$snap:new WeakMap,get(u,o,M){if(this.$snap.has(u)&&(s=this.$snap.get(u)),typeof u[o]=="object"&&u[o]!==null){if(this.isProxy.has(u[o]))return this.isProxy.get(u[o]);{const D=new Proxy(Reflect.get(u,o,M),a);return this.isProxy.set(u[o],D),this.$snap.set(u[o],s[o]),D}}else{if(typeof u[o]=="function")return console.log("target is function",Reflect.apply(u[o],u,[])),()=>Reflect.apply(u[o],u,[]);if(Array.isArray(u))return Reflect.get(u,o,M);const D=u[o],k=s[o],y=D-k;return{value:D,snap:k,diff:{raw:y,digit:y>0?`Difference: +${y}`:`Difference: ${y}`,percent:t(D,k)},class:y>0?"green":y<0?"red":""}}}};return a}Synchronization(){Jt(this.data.source,(t,s)=>{console.log("watch data.source"),this.data.requireUpdate.value=!0}),Jt(()=>this.data.source.isSuperDungeon,(t,s)=>{this.snap.source.isSuperDungeon=t,this.snap.SuperDungeonToggle(),this.data.SuperDungeonToggle()}),Jt(()=>this.data.source.currentHero,(t,s)=>{this.snap.source.currentHero=t}),Jt(this.data.source.equipmentLoadoutIds,(t,s)=>{this.snap.source.equipmentLoadoutIds=t,this.data.inventory.Update(),this.snap.inventory.Update()}),Jt(()=>this.data.source.enemyColor,(t,s)=>this.snap.source.enemyColor=t),Jt(()=>this.data.source.enemySpecies,(t,s)=>this.snap.source.enemySpecies=t),Jt(()=>this.data.source.enemyLevel,(t,s)=>this.snap.source.enemyLevel=t),Jt(()=>this.data.source.enemyChallenge,(t,s)=>this.snap.source.enemyChallenge=t)}Worker(){}}var E=(e=>(e[e.Warrior=0]="Warrior",e[e.Wizard=1]="Wizard",e[e.Angel=2]="Angel",e[e.Thief=3]="Thief",e[e.Archer=4]="Archer",e[e.Tamer=5]="Tamer",e))(E||{}),Oc=(e=>(e[e.SlimeVillage=0]="SlimeVillage",e[e.MagicSlimeCity=1]="MagicSlimeCity",e[e.SpiderMaze=2]="SpiderMaze",e[e.BatCave=3]="BatCave",e[e.FairyGarden=4]="FairyGarden",e[e.FoxShrine=5]="FoxShrine",e[e.DevilFishLake=6]="DevilFishLake",e[e.TreantDarkForest=7]="TreantDarkForest",e[e.FlameTigerVolcano=8]="FlameTigerVolcano",e[e.UnicornIsland=9]="UnicornIsland",e))(Oc||{}),j=(e=>(e[e.Stone=0]="Stone",e[e.Crystal=1]="Crystal",e[e.Leaf=2]="Leaf",e))(j||{}),tt=(e=>(e[e.GoldGain=0]="GoldGain",e[e.StoneGain=1]="StoneGain",e[e.CrystalGain=2]="CrystalGain",e[e.LeafGain=3]="LeafGain",e))(tt||{}),m=(e=>(e[e.HP=0]="HP",e[e.MP=1]="MP",e[e.ATK=2]="ATK",e[e.MATK=3]="MATK",e[e.DEF=4]="DEF",e[e.MDEF=5]="MDEF",e[e.SPD=6]="SPD",e))(m||{}),O=(e=>(e[e.Slime=0]="Slime",e[e.MagicSlime=1]="MagicSlime",e[e.Spider=2]="Spider",e[e.Bat=3]="Bat",e[e.Fairy=4]="Fairy",e[e.Fox=5]="Fox",e[e.DevilFish=6]="DevilFish",e[e.Treant=7]="Treant",e[e.FlameTiger=8]="FlameTiger",e[e.Unicorn=9]="Unicorn",e[e.Mimic=10]="Mimic",e[e.ChallengeBoss=11]="ChallengeBoss",e))(O||{}),lt=(e=>(e[e.Florzporb=0]="Florzporb",e[e.Arachnetta=1]="Arachnetta",e[e.GuardianKor=2]="GuardianKor",e[e.Nostro=3]="Nostro",e[e.LadyEmelda=4]="LadyEmelda",e[e.NariSune=5]="NariSune",e[e.Octobaddie=6]="Octobaddie",e[e.Bananoon=7]="Bananoon",e[e.Glorbliorbus=8]="Glorbliorbus",e[e.DistortionSlime=9]="DistortionSlime",e))(lt||{}),vt=(e=>(e[e.Normal=0]="Normal",e[e.Blue=1]="Blue",e[e.Yellow=2]="Yellow",e[e.Red=3]="Red",e[e.Green=4]="Green",e[e.Purple=5]="Purple",e[e.Boss=6]="Boss",e[e.Metal=7]="Metal",e))(vt||{}),$c=(e=>(e[e.None=0]="None",e[e.GetResource=1]="GetResource",e[e.GetMaterial=2]="GetMaterial",e[e.GetEquipment=3]="GetEquipment",e[e.DisassembleEquipment=4]="DisassembleEquipment",e[e.DisassemblePotion=5]="DisassemblePotion",e[e.UpgradeQueue=6]="UpgradeQueue",e[e.ExpandMysteriousWaterCap=7]="ExpandMysteriousWaterCap",e[e.AlchemyQueue=8]="AlchemyQueue",e[e.EquipPotion=9]="EquipPotion",e[e.Capture=10]="Capture",e[e.RebirthTier1=11]="RebirthTier1",e[e.RebirthTier2=12]="RebirthTier2",e[e.RebirthTier3=13]="RebirthTier3",e[e.RebirthTier4=14]="RebirthTier4",e[e.RebirthTier5=15]="RebirthTier5",e[e.RebirthTier6=16]="RebirthTier6",e[e.BuyShopMaterialSlime=17]="BuyShopMaterialSlime",e[e.BuyShopMaterialMagicSlime=18]="BuyShopMaterialMagicSlime",e[e.BuyShopMaterialSpider=19]="BuyShopMaterialSpider",e[e.BuyShopMaterialBat=20]="BuyShopMaterialBat",e[e.BuyShopMaterialFairy=21]="BuyShopMaterialFairy",e[e.BuyShopMaterialFox=22]="BuyShopMaterialFox",e[e.BuyShopMaterialDevilfish=23]="BuyShopMaterialDevilfish",e[e.BuyShopMaterialTreant=24]="BuyShopMaterialTreant",e[e.BuyShopMaterialFlametiger=25]="BuyShopMaterialFlametiger",e[e.BuyShopMaterialUnicorn=26]="BuyShopMaterialUnicorn",e[e.BuyShopTrapNormal=27]="BuyShopTrapNormal",e[e.BuyShopTrapIce=28]="BuyShopTrapIce",e[e.BuyShopTrapThunder=29]="BuyShopTrapThunder",e[e.BuyShopTrapFire=30]="BuyShopTrapFire",e[e.BuyShopTrapLight=31]="BuyShopTrapLight",e[e.BuyShopTrapDark=32]="BuyShopTrapDark",e[e.RetryDungeon=33]="RetryDungeon",e[e.OpenChest=34]="OpenChest",e[e.SkillRankUp=35]="SkillRankUp",e[e.SmartSlimeCoins=36]="SmartSlimeCoins",e[e.TownLevelUp=37]="TownLevelUp",e[e.RebirthUpgradeEXP=38]="RebirthUpgradeEXP",e[e.EquipNonMaxedEQ=39]="EquipNonMaxedEQ",e[e.AutoCraftDisassembleEQ=40]="AutoCraftDisassembleEQ",e[e.DisassembleTalismanCommon=41]="DisassembleTalismanCommon",e[e.BuyBlessing=42]="BuyBlessing",e[e.AutoExpedition=43]="AutoExpedition",e[e.AutoEquipTrap=44]="AutoEquipTrap",e[e.AutoUseProfScroll=45]="AutoUseProfScroll",e[e.AutoSwitchTownResearch=46]="AutoSwitchTownResearch",e[e.ClearLowerDifAreaMission=47]="ClearLowerDifAreaMission",e[e.AutoAlchemiseForNito=48]="AutoAlchemiseForNito",e[e.AutoBuyGuildAbility=49]="AutoBuyGuildAbility",e))($c||{}),R=(e=>(e[e.Vitality=0]="Vitality",e[e.Strength=1]="Strength",e[e.Intelligence=2]="Intelligence",e[e.Agility=3]="Agility",e[e.Luck=4]="Luck",e))(R||{}),A=(e=>(e[e.FireRes=0]="FireRes",e[e.IceRes=1]="IceRes",e[e.ThunderRes=2]="ThunderRes",e[e.LightRes=3]="LightRes",e[e.DarkRes=4]="DarkRes",e[e.DebuffRes=5]="DebuffRes",e[e.PhysCritChance=6]="PhysCritChance",e[e.MagCritChance=7]="MagCritChance",e[e.CriticalDamage=8]="CriticalDamage",e[e.EquipmentDropChance=9]="EquipmentDropChance",e[e.MoveSpeed=10]="MoveSpeed",e[e.SkillProficiencyGain=11]="SkillProficiencyGain",e[e.EquipmentProficiencyGain=12]="EquipmentProficiencyGain",e[e.TamingPointGain=13]="TamingPointGain",e[e.ExpGain=14]="ExpGain",e[e.ArmoredFury=15]="ArmoredFury",e[e.WardedFury=16]="WardedFury",e[e.PetPhysCritChance=17]="PetPhysCritChance",e[e.PetMagCritChance=18]="PetMagCritChance",e[e.PetCriticalDamage=19]="PetCriticalDamage",e[e.PetDebuffResistance=20]="PetDebuffResistance",e[e.ArtifactProficiencyGain=21]="ArtifactProficiencyGain",e))(A||{}),C=(e=>(e[e.Physical=0]="Physical",e[e.Fire=1]="Fire",e[e.Ice=2]="Ice",e[e.Thunder=3]="Thunder",e[e.Light=4]="Light",e[e.Dark=5]="Dark",e))(C||{}),Et=(e=>(e[e.StoneGain=0]="StoneGain",e[e.CrystalGain=1]="CrystalGain",e[e.LeafGain=2]="LeafGain",e[e.GuildExpGain=3]="GuildExpGain",e[e.EquipmentInventory=4]="EquipmentInventory",e[e.EnchantInventory=5]="EnchantInventory",e[e.PotionInventory=6]="PotionInventory",e[e.MysteriousWater=7]="MysteriousWater",e[e.SkillProficiency=8]="SkillProficiency",e[e.GlobalSkillSlot=9]="GlobalSkillSlot",e[e.GoldCap=10]="GoldCap",e[e.GoldGain=11]="GoldGain",e[e.Trapping=12]="Trapping",e[e.UpgradeCost=13]="UpgradeCost",e[e.PhysicalAbsorption=14]="PhysicalAbsorption",e[e.MagicalAbsoption=15]="MagicalAbsoption",e[e.ExpGain=16]="ExpGain",e[e.EquipmentProficiency=17]="EquipmentProficiency",e[e.MaterialDrop=18]="MaterialDrop",e[e.NitroCap=19]="NitroCap",e))(Et||{}),re=(e=>(e[e.Nothing=0]="Nothing",e[e.Slime=1]="Slime",e[e.Magicslime=2]="Magicslime",e[e.Spider=3]="Spider",e[e.Bat=4]="Bat",e[e.Fairy=5]="Fairy",e[e.Fox=6]="Fox",e[e.Devilfish=7]="Devilfish",e[e.Treant=8]="Treant",e[e.Flametiger=9]="Flametiger",e[e.Unicorn=10]="Unicorn",e))(re||{}),g=(e=>(e[e.Nothing=0]="Nothing",e[e.DullSword=1]="DullSword",e[e.BrittleStaff=2]="BrittleStaff",e[e.FlimsyWing=3]="FlimsyWing",e[e.WornDart=4]="WornDart",e[e.SmallBow=5]="SmallBow",e[e.WoodenRecorder=6]="WoodenRecorder",e[e.OldCloak=7]="OldCloak",e[e.BlueHat=8]="BlueHat",e[e.OrangeHat=9]="OrangeHat",e[e.TShirt=10]="TShirt",e[e.ClothGlove=11]="ClothGlove",e[e.BlueTShirt=12]="BlueTShirt",e[e.OrangeTShirt=13]="OrangeTShirt",e[e.ClothBelt=14]="ClothBelt",e[e.ClothShoes=15]="ClothShoes",e[e.IronRing=16]="IronRing",e[e.PearlEarring=17]="PearlEarring",e[e.FireBrooch=18]="FireBrooch",e[e.IceBrooch=19]="IceBrooch",e[e.ThunderBrooch=20]="ThunderBrooch",e[e.LightBrooch=21]="LightBrooch",e[e.DarkBrooch=22]="DarkBrooch",e[e.WoodenShield=23]="WoodenShield",e[e.LongSword=24]="LongSword",e[e.LongStaff=25]="LongStaff",e[e.WarmWing=26]="WarmWing",e[e.DualDagger=27]="DualDagger",e[e.ReinforcedBow=28]="ReinforcedBow",e[e.Flute=29]="Flute",e[e.FireStaff=30]="FireStaff",e[e.IceStaff=31]="IceStaff",e[e.ThunderStaff=32]="ThunderStaff",e[e.LeatherBelt=33]="LeatherBelt",e[e.LeatherShoes=34]="LeatherShoes",e[e.WarmCloak=35]="WarmCloak",e[e.LeatherArmor=36]="LeatherArmor",e[e.LeatherGlove=37]="LeatherGlove",e[e.LeatherShield=38]="LeatherShield",e[e.FireRing=39]="FireRing",e[e.IceRing=40]="IceRing",e[e.ThunderRing=41]="ThunderRing",e[e.LightRing=42]="LightRing",e[e.DarkRing=43]="DarkRing",e[e.EnhancedFireBrooch=44]="EnhancedFireBrooch",e[e.EnhancedIceBrooch=45]="EnhancedIceBrooch",e[e.EnhancedThunderBrooch=46]="EnhancedThunderBrooch",e[e.EnhancedLightBrooch=47]="EnhancedLightBrooch",e[e.EnhancedDarkBrooch=48]="EnhancedDarkBrooch",e[e.BattleSword=49]="BattleSword",e[e.BattleStaff=50]="BattleStaff",e[e.BattleWing=51]="BattleWing",e[e.BattleDagger=52]="BattleDagger",e[e.BattleBow=53]="BattleBow",e[e.BattleRecorder=54]="BattleRecorder",e[e.SlimeSword=55]="SlimeSword",e[e.SlimeGlove=56]="SlimeGlove",e[e.SlimeRing=57]="SlimeRing",e[e.SlimeBelt=58]="SlimeBelt",e[e.SlimePincenez=59]="SlimePincenez",e[e.SlimeWing=60]="SlimeWing",e[e.SlimePoncho=61]="SlimePoncho",e[e.SlimeDart=62]="SlimeDart",e[e.MagicSlimeStick=63]="MagicSlimeStick",e[e.MagicSlimeHat=64]="MagicSlimeHat",e[e.MagicSlimeBow=65]="MagicSlimeBow",e[e.MagicSlimeShoes=66]="MagicSlimeShoes",e[e.MagicSlimeRecorder=67]="MagicSlimeRecorder",e[e.MagicSlimeEarring=68]="MagicSlimeEarring",e[e.MagicSlimeBalloon=69]="MagicSlimeBalloon",e[e.MagicSlimeSkirt=70]="MagicSlimeSkirt",e[e.SpiderHat=71]="SpiderHat",e[e.SpiderSkirt=72]="SpiderSkirt",e[e.SpiderSuit=73]="SpiderSuit",e[e.SpiderDagger=74]="SpiderDagger",e[e.SpiderWing=75]="SpiderWing",e[e.SpiderCatchingNet=76]="SpiderCatchingNet",e[e.SpiderStick=77]="SpiderStick",e[e.SpiderFoldingFan=78]="SpiderFoldingFan",e[e.BatRing=79]="BatRing",e[e.BatShoes=80]="BatShoes",e[e.BatSword=81]="BatSword",e[e.BatHat=82]="BatHat",e[e.BatRecorder=83]="BatRecorder",e[e.BatBow=84]="BatBow",e[e.BatMascaradeMask=85]="BatMascaradeMask",e[e.BatCloak=86]="BatCloak",e[e.BronzeShoulder=87]="BronzeShoulder",e[e.BattleRing=88]="BattleRing",e[e.Halo=89]="Halo",e[e.IronShoulder=90]="IronShoulder",e[e.StrengthRing=91]="StrengthRing",e[e.GoldenRing=92]="GoldenRing",e[e.GoldenFireRing=93]="GoldenFireRing",e[e.GoldenIceRing=94]="GoldenIceRing",e[e.GoldenThunderRing=95]="GoldenThunderRing",e[e.GoldenLightRing=96]="GoldenLightRing",e[e.GoldenDarkRing=97]="GoldenDarkRing",e[e.IronBelt=98]="IronBelt",e[e.IronShoes=99]="IronShoes",e[e.CopperArmor=100]="CopperArmor",e[e.IronGlove=101]="IronGlove",e[e.TowerShield=102]="TowerShield",e[e.FireTowerShield=103]="FireTowerShield",e[e.IceTowerShield=104]="IceTowerShield",e[e.ThunderTowerShield=105]="ThunderTowerShield",e[e.LightTowerShield=106]="LightTowerShield",e[e.DarkTowerShield=107]="DarkTowerShield",e[e.SavageRing=108]="SavageRing",e[e.SpellboundFireBrooch=109]="SpellboundFireBrooch",e[e.SpellboundIceBrooch=110]="SpellboundIceBrooch",e[e.SpellboundThunderBrooch=111]="SpellboundThunderBrooch",e[e.SpellboundLightBrooch=112]="SpellboundLightBrooch",e[e.SpellboundDarkBrooch=113]="SpellboundDarkBrooch",e[e.CopperHelm=114]="CopperHelm",e[e.BattleHelm=115]="BattleHelm",e[e.WizardHelm=116]="WizardHelm",e[e.LargeSword=117]="LargeSword",e[e.LargeStaff=118]="LargeStaff",e[e.LargeWing=119]="LargeWing",e[e.LargeDagger=120]="LargeDagger",e[e.LargeBow=121]="LargeBow",e[e.LargeOcarina=122]="LargeOcarina",e[e.FairyClothes=123]="FairyClothes",e[e.FairyStaff=124]="FairyStaff",e[e.FairyBoots=125]="FairyBoots",e[e.FairyGlove=126]="FairyGlove",e[e.FairyBrooch=127]="FairyBrooch",e[e.FairyLamp=128]="FairyLamp",e[e.FairyWing=129]="FairyWing",e[e.FairyShuriken=130]="FairyShuriken",e[e.FoxKanzashi=131]="FoxKanzashi",e[e.FoxLoincloth=132]="FoxLoincloth",e[e.FoxMask=133]="FoxMask",e[e.FoxHamayayumi=134]="FoxHamayayumi",e[e.FoxHat=135]="FoxHat",e[e.FoxCoat=136]="FoxCoat",e[e.FoxBoot=137]="FoxBoot",e[e.FoxEma=138]="FoxEma",e[e.DevilfishSword=139]="DevilfishSword",e[e.DevilfishWing=140]="DevilfishWing",e[e.DevilfishRecorder=141]="DevilfishRecorder",e[e.DevilfishArmor=142]="DevilfishArmor",e[e.DevilfishScarf=143]="DevilfishScarf",e[e.DevilfishGill=144]="DevilfishGill",e[e.DevilfishPendant=145]="DevilfishPendant",e[e.DevilfishRing=146]="DevilfishRing",e[e.TreantAmulet=147]="TreantAmulet",e[e.TreantHagoita=148]="TreantHagoita",e[e.TreantChoppingBoard=149]="TreantChoppingBoard",e[e.TreantDagger=150]="TreantDagger",e[e.TreantHaniwa=151]="TreantHaniwa",e[e.TreantKokeshi=152]="TreantKokeshi",e[e.TreantLamp=153]="TreantLamp",e[e.TreantLunchbox=154]="TreantLunchbox",e[e.FlametigerPortableHotSpring=155]="FlametigerPortableHotSpring",e[e.FlametigerVolcanicShield=156]="FlametigerVolcanicShield",e[e.FlametigerStripedBriefs=157]="FlametigerStripedBriefs",e[e.TorchOfEverburningFlametiger=158]="TorchOfEverburningFlametiger",e[e.FlametigerCostume=159]="FlametigerCostume",e[e.RingOfFlametigersWrath=160]="RingOfFlametigersWrath",e[e.EndlessBowlOfSpicyFlametigerRamen=161]="EndlessBowlOfSpicyFlametigerRamen",e[e.ScreenOfTheSneakyFlametiger=162]="ScreenOfTheSneakyFlametiger",e[e.ModifiedSword=163]="ModifiedSword",e[e.ModifiedStaff=164]="ModifiedStaff",e[e.ModifiedWing=165]="ModifiedWing",e[e.ModifiedDart=166]="ModifiedDart",e[e.ModifiedBow=167]="ModifiedBow",e[e.ModifiedRecorder=168]="ModifiedRecorder",e[e.AncientCloak=169]="AncientCloak",e[e.AncientBelt=170]="AncientBelt",e[e.AncientShoes=171]="AncientShoes",e[e.AncientRing=172]="AncientRing",e[e.AncientEarring=173]="AncientEarring",e))(g||{}),T=(e=>(e[e.Weapon=0]="Weapon",e[e.Armor=1]="Armor",e[e.Jewelry=2]="Jewelry",e))(T||{}),B=(e=>(e[e.Nothing=0]="Nothing",e[e.MinorHealthPotion=1]="MinorHealthPotion",e[e.MinorRegenerationPoultice=2]="MinorRegenerationPoultice",e[e.MinorResourcePoultice=3]="MinorResourcePoultice",e[e.SlickShoeSolution=4]="SlickShoeSolution",e[e.MinorManaRegenerationPoultice=5]="MinorManaRegenerationPoultice",e[e.MaterialMultiplierMist=6]="MaterialMultiplierMist",e[e.BasicElixirOfBrawn=7]="BasicElixirOfBrawn",e[e.BasicElixirOfBrains=8]="BasicElixirOfBrains",e[e.BasicElixirOfFortitude=9]="BasicElixirOfFortitude",e[e.BasicElixirOfConcentration=10]="BasicElixirOfConcentration",e[e.BasicElixirOfUnderstanding=11]="BasicElixirOfUnderstanding",e[e.ChilledHealthPotion=12]="ChilledHealthPotion",e[e.ChilledRegenerationPoultice=13]="ChilledRegenerationPoultice",e[e.FrostyDefensePotion=14]="FrostyDefensePotion",e[e.IcyAuraDraught=15]="IcyAuraDraught",e[e.SlightlyStickySalve=16]="SlightlyStickySalve",e[e.SlickerShoeSolution=17]="SlickerShoeSolution",e[e.CoolHeadOintment=18]="CoolHeadOintment",e[e.FrostySlayersOil=19]="FrostySlayersOil",e[e.BurningDefensePotion=20]="BurningDefensePotion",e[e.BlazingAuraDraught=21]="BlazingAuraDraught",e[e.FierySlayersOil=22]="FierySlayersOil",e[e.ElectricDefensePotion=23]="ElectricDefensePotion",e[e.WhirlingAuraDraught=24]="WhirlingAuraDraught",e[e.ShockingSlayersOil=25]="ShockingSlayersOil",e[e.ThrowingNet=26]="ThrowingNet",e[e.IceRope=27]="IceRope",e[e.ThunderRope=28]="ThunderRope",e[e.FireRope=29]="FireRope",e[e.LightRope=30]="LightRope",e[e.DarkRope=31]="DarkRope",e[e.GuildMembersEmblem=32]="GuildMembersEmblem",e[e.CertificateOfCompetence=33]="CertificateOfCompetence",e[e.MasonsTrowel=34]="MasonsTrowel",e[e.EnchantedAlembic=35]="EnchantedAlembic",e[e.TrackersMap=36]="TrackersMap",e[e.BerserkersStone=37]="BerserkersStone",e[e.TrappersTag=38]="TrappersTag",e[e.HitanDoll=39]="HitanDoll",e[e.RingoldDoll=40]="RingoldDoll",e[e.NuttyDoll=41]="NuttyDoll",e[e.MorkylDoll=42]="MorkylDoll",e[e.FlorzporbDoll=43]="FlorzporbDoll",e[e.ArachnettaDoll=44]="ArachnettaDoll",e[e.GuardianKorDoll=45]="GuardianKorDoll",e[e.SlimeBadge=46]="SlimeBadge",e[e.MagicslimeBadge=47]="MagicslimeBadge",e[e.SpiderBadge=48]="SpiderBadge",e[e.BatBadge=49]="BatBadge",e[e.FairyBadge=50]="FairyBadge",e[e.FoxBadge=51]="FoxBadge",e[e.DevilfishBadge=52]="DevilfishBadge",e[e.TreantBadge=53]="TreantBadge",e[e.FlametigerBadge=54]="FlametigerBadge",e[e.UnicornBadge=55]="UnicornBadge",e[e.AscendedFromIEH1=56]="AscendedFromIEH1",e[e.WarriorsBadge=57]="WarriorsBadge",e[e.WizardsBadge=58]="WizardsBadge",e[e.AngelsBadge=59]="AngelsBadge",e[e.ThiefsBadge=60]="ThiefsBadge",e[e.ArchersBadge=61]="ArchersBadge",e[e.TamersBadge=62]="TamersBadge",e[e.NostroDoll=63]="NostroDoll",e[e.LadyEmeldaDoll=64]="LadyEmeldaDoll",e[e.NariSuneDoll=65]="NariSuneDoll",e[e.OctobaddieDoll=66]="OctobaddieDoll",e[e.BananoonDoll=67]="BananoonDoll",e[e.GlorbliorbusDoll=68]="GlorbliorbusDoll",e[e.DistortionSlimeDoll=69]="DistortionSlimeDoll",e[e.AncientSlimeBadge=70]="AncientSlimeBadge",e[e.AncientMagicslimeBadge=71]="AncientMagicslimeBadge",e[e.AncientSpiderBadge=72]="AncientSpiderBadge",e[e.AncientBatBadge=73]="AncientBatBadge",e[e.AncientFairyBadge=74]="AncientFairyBadge",e[e.AncientFoxBadge=75]="AncientFoxBadge",e[e.AncientDevilfishBadge=76]="AncientDevilfishBadge",e[e.AncientTreantBadge=77]="AncientTreantBadge",e[e.AncientFlametigerBadge=78]="AncientFlametigerBadge",e[e.AncientUnicornBadge=79]="AncientUnicornBadge",e[e.AncientWarriorsBadge=80]="AncientWarriorsBadge",e[e.AncientWizardsBadge=81]="AncientWizardsBadge",e[e.AncientAngelsBadge=82]="AncientAngelsBadge",e[e.AncientThiefsBadge=83]="AncientThiefsBadge",e[e.AncientArchersBadge=84]="AncientArchersBadge",e[e.AncientTamersBadge=85]="AncientTamersBadge",e))(B||{}),ae=(e=>(e[e.Heal=0]="Heal",e[e.TimeLimit=1]="TimeLimit",e[e.DamageMultiplier=2]="DamageMultiplier",e[e.DamageCutMultiplier=3]="DamageCutMultiplier",e[e.RestoreDodgeTimesec=4]="RestoreDodgeTimesec",e[e.DodgeHeal=5]="DodgeHeal",e[e.DungeonCoinGain=6]="DungeonCoinGain",e[e.FameGain=7]="FameGain",e[e.SkillCastSpeed=8]="SkillCastSpeed",e[e.PhysicalCriticalChance=9]="PhysicalCriticalChance",e[e.MagicalCriticalChance=10]="MagicalCriticalChance",e[e.CriticalDamage=11]="CriticalDamage",e[e.MoveSpeed=12]="MoveSpeed",e[e.PhysicalDamage=13]="PhysicalDamage",e[e.MagicalDamage=14]="MagicalDamage",e[e.PhysicalAbsorption=15]="PhysicalAbsorption",e[e.MagicalAbsorption=16]="MagicalAbsorption",e[e.SkillHitCount=17]="SkillHitCount",e[e.ExtraAfterDamage=18]="ExtraAfterDamage",e[e.EquipmentDropChance=19]="EquipmentDropChance",e[e.ChallengeBossDamageMultiplier=20]="ChallengeBossDamageMultiplier",e))(ae||{}),n=(e=>(e[e.Base=0]="Base",e[e.Ability=1]="Ability",e[e.SuperAbility=2]="SuperAbility",e[e.Title=3]="Title",e[e.Quest=4]="Quest",e[e.Skill=5]="Skill",e[e.ChanneledSkill=6]="ChanneledSkill",e[e.SkillPassive=7]="SkillPassive",e[e.Stance=8]="Stance",e[e.Upgrade=9]="Upgrade",e[e.Town=10]="Town",e[e.TownResearch=11]="TownResearch",e[e.Equipment=12]="Equipment",e[e.ArmoredFury=13]="ArmoredFury",e[e.WardedFury=14]="WardedFury",e[e.Dictionary=15]="Dictionary",e[e.Alchemy=16]="Alchemy",e[e.AlchemyExpand=17]="AlchemyExpand",e[e.Potion=18]="Potion",e[e.Pet=19]="Pet",e[e.PetRankMilestone=20]="PetRankMilestone",e[e.Guild=21]="Guild",e[e.GuildSuperAbility=22]="GuildSuperAbility",e[e.Rebirth=23]="Rebirth",e[e.Challenge=24]="Challenge",e[e.SuperDungeon=25]="SuperDungeon",e[e.DungeonItem=26]="DungeonItem",e[e.DungeonItemPermanent=27]="DungeonItemPermanent",e[e.SDUpgrade=28]="SDUpgrade",e[e.SDShop=29]="SDShop",e[e.SDModifier=30]="SDModifier",e[e.SDModifierMilestone=31]="SDModifierMilestone",e[e.SDGemRitual=32]="SDGemRitual",e[e.GradeMilestone=33]="GradeMilestone",e[e.Expedition=34]="Expedition",e[e.ExpeditionMilestone=35]="ExpeditionMilestone",e[e.MissionMilestone=36]="MissionMilestone",e[e.AreaPrestige=37]="AreaPrestige",e[e.Ascension=38]="Ascension",e[e.AreaDebuff=39]="AreaDebuff",e[e.FieldCurse=40]="FieldCurse",e[e.Blessing=41]="Blessing",e[e.Buff=42]="Buff",e[e.Debuff=43]="Debuff",e[e.Talisman=44]="Talisman",e[e.TalismanPassive=45]="TalismanPassive",e[e.Achievement=46]="Achievement",e[e.EpicStore=47]="EpicStore",e[e.DLC=48]="DLC",e))(n||{}),L=(e=>(e[e.SkillMaster=0]="SkillMaster",e[e.MonsterDistinguisher=1]="MonsterDistinguisher",e[e.EquipmentSlotWeapon=2]="EquipmentSlotWeapon",e[e.EquipmentSlotArmor=3]="EquipmentSlotArmor",e[e.EquipmentSlotJewelry=4]="EquipmentSlotJewelry",e[e.PotionSlot=5]="PotionSlot",e[e.EquipmentProficiency=6]="EquipmentProficiency",e[e.PhysicalDamage=7]="PhysicalDamage",e[e.FireDamage=8]="FireDamage",e[e.IceDamage=9]="IceDamage",e[e.ThunderDamage=10]="ThunderDamage",e[e.LightDamage=11]="LightDamage",e[e.DarkDamage=12]="DarkDamage",e[e.Alchemist=13]="Alchemist",e[e.MetalHunter=14]="MetalHunter",e[e.Survival=15]="Survival",e[e.FireResistance=16]="FireResistance",e[e.IceResistance=17]="IceResistance",e[e.ThunderResistance=18]="ThunderResistance",e[e.LightResistance=19]="LightResistance",e[e.DarkResistance=20]="DarkResistance",e[e.Cooperation=21]="Cooperation",e[e.DebuffResistance=22]="DebuffResistance",e[e.MoveSpeed=23]="MoveSpeed",e[e.BreakingTheLimit=24]="BreakingTheLimit",e[e.Quester=25]="Quester",e[e.ExplorerOfSD=26]="ExplorerOfSD",e))(L||{}),cs=(e=>(e[e.SwordAttack=0]="SwordAttack",e[e.Slash=1]="Slash",e[e.DoubleSlash=2]="DoubleSlash",e[e.SonicSlash=3]="SonicSlash",e[e.SwingDown=4]="SwingDown",e[e.SwingAround=5]="SwingAround",e[e.ChargeSwing=6]="ChargeSwing",e[e.FanSwing=7]="FanSwing",e[e.ShieldAttack=8]="ShieldAttack",e[e.KnockingShot=9]="KnockingShot",e))(cs||{}),r=(e=>(e[e.Nothing=0]="Nothing",e[e.HPAdder=1]="HPAdder",e[e.MPAdder=2]="MPAdder",e[e.ATKAdder=3]="ATKAdder",e[e.MATKAdder=4]="MATKAdder",e[e.DEFAdder=5]="DEFAdder",e[e.MDEFAdder=6]="MDEFAdder",e[e.SPDAdder=7]="SPDAdder",e[e.HPMultiplier=8]="HPMultiplier",e[e.MPMultiplier=9]="MPMultiplier",e[e.ATKMultiplier=10]="ATKMultiplier",e[e.MATKMultiplier=11]="MATKMultiplier",e[e.DEFMultiplier=12]="DEFMultiplier",e[e.MDEFMultiplier=13]="MDEFMultiplier",e[e.ATKPropotion=14]="ATKPropotion",e[e.MATKPropotion=15]="MATKPropotion",e[e.DEFPropotion=16]="DEFPropotion",e[e.MDEFPropotion=17]="MDEFPropotion",e[e.FireResistance=18]="FireResistance",e[e.IceResistance=19]="IceResistance",e[e.ThunderResistance=20]="ThunderResistance",e[e.LightResistance=21]="LightResistance",e[e.DarkResistance=22]="DarkResistance",e[e.PhysicalAbsorption=23]="PhysicalAbsorption",e[e.FireAbsorption=24]="FireAbsorption",e[e.IceAbsorption=25]="IceAbsorption",e[e.ThunderAbsorption=26]="ThunderAbsorption",e[e.LightAbsorption=27]="LightAbsorption",e[e.DarkAbsorption=28]="DarkAbsorption",e[e.DebuffResistance=29]="DebuffResistance",e[e.EquipmentDropChance=30]="EquipmentDropChance",e[e.SlimeDropChance=31]="SlimeDropChance",e[e.MagicSlimeDropChance=32]="MagicSlimeDropChance",e[e.SpiderDropChance=33]="SpiderDropChance",e[e.BatDropChance=34]="BatDropChance",e[e.FairyDropChance=35]="FairyDropChance",e[e.FoxDropChance=36]="FoxDropChance",e[e.DevilFishDropChance=37]="DevilFishDropChance",e[e.TreantDropChance=38]="TreantDropChance",e[e.FlameTigerDropChance=39]="FlameTigerDropChance",e[e.UnicornDropChance=40]="UnicornDropChance",e[e.ColorMaterialDropChance=41]="ColorMaterialDropChance",e[e.PhysicalCritical=42]="PhysicalCritical",e[e.MagicalCritical=43]="MagicalCritical",e[e.EXPGain=44]="EXPGain",e[e.SkillProficiency=45]="SkillProficiency",e[e.EquipmentProficiency=46]="EquipmentProficiency",e[e.MoveSpeedMultiplier=47]="MoveSpeedMultiplier",e[e.GoldGain=48]="GoldGain",e[e.StoneGain=49]="StoneGain",e[e.CrystalGain=50]="CrystalGain",e[e.LeafGain=51]="LeafGain",e[e.WarriorSkillLevel=52]="WarriorSkillLevel",e[e.WizardSkillLevel=53]="WizardSkillLevel",e[e.AngelSkillLevel=54]="AngelSkillLevel",e[e.ThiefSkillLevel=55]="ThiefSkillLevel",e[e.ArcherSkillLevel=56]="ArcherSkillLevel",e[e.TamerSkillLevel=57]="TamerSkillLevel",e[e.AllSkillLevel=58]="AllSkillLevel",e[e.SlimeKnowledge=59]="SlimeKnowledge",e[e.MagicSlimeKnowledge=60]="MagicSlimeKnowledge",e[e.SpiderKnowledge=61]="SpiderKnowledge",e[e.BatKnowledge=62]="BatKnowledge",e[e.FairyKnowledge=63]="FairyKnowledge",e[e.FoxKnowledge=64]="FoxKnowledge",e[e.DevilFishKnowledge=65]="DevilFishKnowledge",e[e.TreantKnowledge=66]="TreantKnowledge",e[e.FlameTigerKnowledge=67]="FlameTigerKnowledge",e[e.UnicornKnowledge=68]="UnicornKnowledge",e[e.PhysicalDamage=69]="PhysicalDamage",e[e.FireDamage=70]="FireDamage",e[e.IceDamage=71]="IceDamage",e[e.ThunderDamage=72]="ThunderDamage",e[e.LightDamage=73]="LightDamage",e[e.DarkDamage=74]="DarkDamage",e[e.HpRegen=75]="HpRegen",e[e.MpRegen=76]="MpRegen",e[e.TamingPoint=77]="TamingPoint",e[e.WarriorSkillRange=78]="WarriorSkillRange",e[e.WizardSkillRange=79]="WizardSkillRange",e[e.AngelSkillRange=80]="AngelSkillRange",e[e.ThiefSkillRange=81]="ThiefSkillRange",e[e.ArcherSkillRange=82]="ArcherSkillRange",e[e.TamerSkillRange=83]="TamerSkillRange",e[e.TownMatGain=84]="TownMatGain",e[e.TownMatAreaClearGain=85]="TownMatAreaClearGain",e[e.RebirthPointGain1=86]="RebirthPointGain1",e[e.RebirthPointGain2=87]="RebirthPointGain2",e[e.RebirthPointGain3=88]="RebirthPointGain3",e[e.CriticalDamage=89]="CriticalDamage",e[e.BlessingEffect=90]="BlessingEffect",e[e.MoveSpeedAdder=91]="MoveSpeedAdder",e[e.PetEXPGain=92]="PetEXPGain",e[e.LoyaltyPointGain=93]="LoyaltyPointGain",e[e.CatalystDoubleCriticalChance=94]="CatalystDoubleCriticalChance",e[e.WarriorSkillEffectRange=95]="WarriorSkillEffectRange",e[e.WizardSkillEffectRange=96]="WizardSkillEffectRange",e[e.AngelSkillEffectRange=97]="AngelSkillEffectRange",e[e.ThiefSkillEffectRange=98]="ThiefSkillEffectRange",e[e.ArcherSkillEffectRange=99]="ArcherSkillEffectRange",e[e.TamerSkillEffectRange=100]="TamerSkillEffectRange",e[e.HpRegenMultiplier=101]="HpRegenMultiplier",e[e.MpRegenMultiplier=102]="MpRegenMultiplier",e[e.ArmoredFury=103]="ArmoredFury",e[e.WardedFury=104]="WardedFury",e[e.PetPhysicalCriticalChance=105]="PetPhysicalCriticalChance",e[e.PetMagicalCriticalChance=106]="PetMagicalCriticalChance",e[e.PetCriticalDamage=107]="PetCriticalDamage",e[e.PetDebuffResistance=108]="PetDebuffResistance",e[e.StoneTownResearchPower=109]="StoneTownResearchPower",e[e.CrystalTownResearchPower=110]="CrystalTownResearchPower",e[e.LeafTownResearchPower=111]="LeafTownResearchPower",e[e.GuildEXPGain=112]="GuildEXPGain",e[e.SPDMultiplier=113]="SPDMultiplier",e[e.CriticalDamageMultiplier=114]="CriticalDamageMultiplier",e[e.SkillProficiencyMultiplier=115]="SkillProficiencyMultiplier",e[e.EquipmentProficiencyMultiplier=116]="EquipmentProficiencyMultiplier",e[e.EXPGainMultiplier=117]="EXPGainMultiplier",e[e.GoldGainMultiplier=118]="GoldGainMultiplier",e[e.PhysicalDamageMultiplier=119]="PhysicalDamageMultiplier",e[e.FireDamageMultiplier=120]="FireDamageMultiplier",e[e.IceDamageMultiplier=121]="IceDamageMultiplier",e[e.ThunderDamageMultiplier=122]="ThunderDamageMultiplier",e[e.LightDamageMultiplier=123]="LightDamageMultiplier",e[e.DarkDamageMultiplier=124]="DarkDamageMultiplier",e[e.TamingPointMultiplier=125]="TamingPointMultiplier",e[e.PetEXPGainMultiplier=126]="PetEXPGainMultiplier",e[e.LoyaltyPointGainMultiplier=127]="LoyaltyPointGainMultiplier",e[e.BlessingEffectMultiplier=128]="BlessingEffectMultiplier",e[e.PhysicalCriticalMultiplier=129]="PhysicalCriticalMultiplier",e[e.MagicalCriticalMultiplier=130]="MagicalCriticalMultiplier",e[e.ChallengeBossKnowledge=131]="ChallengeBossKnowledge",e[e.HPAfter=132]="HPAfter",e[e.MPAfter=133]="MPAfter",e[e.ATKAfter=134]="ATKAfter",e[e.MATKAfter=135]="MATKAfter",e[e.DEFAfter=136]="DEFAfter",e[e.MDEFAfter=137]="MDEFAfter",e[e.SPDAfter=138]="SPDAfter",e[e.MoveSpeedAfter=139]="MoveSpeedAfter",e[e.PhysicalCriticalAfter=140]="PhysicalCriticalAfter",e[e.MagicalCriticalAfter=141]="MagicalCriticalAfter",e[e.CriticalDamageAfter=142]="CriticalDamageAfter",e[e.DebuffResistanceAfter=143]="DebuffResistanceAfter",e[e.PhysicalDamageAfter=144]="PhysicalDamageAfter",e[e.FireDamageAfter=145]="FireDamageAfter",e[e.IceDamageAfter=146]="IceDamageAfter",e[e.ThunderDamageAfter=147]="ThunderDamageAfter",e[e.LightDamageAfter=148]="LightDamageAfter",e[e.DarkDamageAfter=149]="DarkDamageAfter",e[e.FireResistanceAfter=150]="FireResistanceAfter",e[e.IceResistanceAfter=151]="IceResistanceAfter",e[e.ThunderResistanceAfter=152]="ThunderResistanceAfter",e[e.LightResistanceAfter=153]="LightResistanceAfter",e[e.DarkResistanceAfter=154]="DarkResistanceAfter",e[e.SlimeKnowledgeAfter=155]="SlimeKnowledgeAfter",e[e.MagicSlimeKnowledgeAfter=156]="MagicSlimeKnowledgeAfter",e[e.SpiderKnowledgeAfter=157]="SpiderKnowledgeAfter",e[e.BatKnowledgeAfter=158]="BatKnowledgeAfter",e[e.FairyKnowledgeAfter=159]="FairyKnowledgeAfter",e[e.FoxKnowledgeAfter=160]="FoxKnowledgeAfter",e[e.DevilFishKnowledgeAfter=161]="DevilFishKnowledgeAfter",e[e.TreantKnowledgeAfter=162]="TreantKnowledgeAfter",e[e.FlameTigerKnowledgeAfter=163]="FlameTigerKnowledgeAfter",e[e.UnicornKnowledgeAfter=164]="UnicornKnowledgeAfter",e[e.ChallengeBossKnowledgeAfter=165]="ChallengeBossKnowledgeAfter",e[e.SDDamageMultiplier=166]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=167]="SDDamageCutMultiplier",e[e.FameGain=168]="FameGain",e[e.DungeonCoinGain=169]="DungeonCoinGain",e[e.ExtraAfterDamage=170]="ExtraAfterDamage",e))(r||{}),V=(e=>(e[e.ExpGain=0]="ExpGain",e[e.EQRequirement=1]="EQRequirement",e[e.QuestAcceptableNum=2]="QuestAcceptableNum",e[e.BasicAtk=3]="BasicAtk",e[e.BasicMAtk=4]="BasicMAtk",e[e.BasicHp=5]="BasicHp",e[e.BasicDef=6]="BasicDef",e[e.BasicMDef=7]="BasicMDef",e[e.BasicMp=8]="BasicMp",e[e.StoneGain=9]="StoneGain",e[e.CrystalGain=10]="CrystalGain",e[e.LeafGain=11]="LeafGain",e[e.StoneGoldCap=12]="StoneGoldCap",e[e.CrystalGoldCap=13]="CrystalGoldCap",e[e.LeafGoldCap=14]="LeafGoldCap",e[e.SkillProfGain=15]="SkillProfGain",e[e.SkillRankCostReduction=16]="SkillRankCostReduction",e[e.ClassSkillSlot=17]="ClassSkillSlot",e[e.ShareSkillPassive=18]="ShareSkillPassive",e[e.T1ExpGainBoost=19]="T1ExpGainBoost",e[e.T1RebirthPointGainBoost=20]="T1RebirthPointGainBoost",e[e.T1BasicAtkBoost=21]="T1BasicAtkBoost",e[e.T1BasicMAtkBoost=22]="T1BasicMAtkBoost",e[e.T1BasicHpBoost=23]="T1BasicHpBoost",e[e.T1BasicDefBoost=24]="T1BasicDefBoost",e[e.T1BasicMDefBoost=25]="T1BasicMDefBoost",e[e.T1BasicMpBoost=26]="T1BasicMpBoost",e[e.T1StoneGainBoost=27]="T1StoneGainBoost",e[e.T1CrystalGainBoost=28]="T1CrystalGainBoost",e[e.T1LeafGainBoost=29]="T1LeafGainBoost",e[e.T1StoneGoldCapBoost=30]="T1StoneGoldCapBoost",e[e.T1CrystalGoldCapBoost=31]="T1CrystalGoldCapBoost",e[e.T1LeafGoldCapBoost=32]="T1LeafGoldCapBoost",e[e.EQProfGain=33]="EQProfGain",e[e.EQLevelCap=34]="EQLevelCap",e[e.EQWeaponSlot=35]="EQWeaponSlot",e[e.EQArmorSlot=36]="EQArmorSlot",e[e.EQJewelrySlot=37]="EQJewelrySlot",e[e.T2ExpGainBoost=38]="T2ExpGainBoost",e[e.T2SkillProfGainBoost=39]="T2SkillProfGainBoost",e[e.T2RebirthPointGainBoost=40]="T2RebirthPointGainBoost",e[e.T2BasicAtkBoost=41]="T2BasicAtkBoost",e[e.T2BasicMAtkBoost=42]="T2BasicMAtkBoost",e[e.T2BasicHpBoost=43]="T2BasicHpBoost",e[e.T2BasicDefBoost=44]="T2BasicDefBoost",e[e.T2BasicMDefBoost=45]="T2BasicMDefBoost",e[e.T2BasicMpBoost=46]="T2BasicMpBoost",e[e.T2StoneGainBoost=47]="T2StoneGainBoost",e[e.T2CrystalGainBoost=48]="T2CrystalGainBoost",e[e.T2LeafGainBoost=49]="T2LeafGainBoost",e[e.T2StoneGoldCapBoost=50]="T2StoneGoldCapBoost",e[e.T2CrystalGoldCapBoost=51]="T2CrystalGoldCapBoost",e[e.T2LeafGoldCapBoost=52]="T2LeafGoldCapBoost",e))(V||{}),Se=(e=>(e[e.ReduceRequiredHeroLevel=0]="ReduceRequiredHeroLevel",e[e.ReduceRequiredAbility=1]="ReduceRequiredAbility",e[e.IncreaseProficiencyGain=2]="IncreaseProficiencyGain",e[e.IncreaseEffect=3]="IncreaseEffect",e[e.PurifyCurseEffect=4]="PurifyCurseEffect",e[e.IncreaseEffectIncrement=5]="IncreaseEffectIncrement",e[e.EqLevel=6]="EqLevel",e))(Se||{}),Ke=(e=>(e[e.EquipmentProficiencyGainWarrior=0]="EquipmentProficiencyGainWarrior",e[e.EquipmentProficiencyGainWizard=1]="EquipmentProficiencyGainWizard",e[e.EquipmentProficiencyGainAngel=2]="EquipmentProficiencyGainAngel",e[e.EquipmentProficiencyGainThief=3]="EquipmentProficiencyGainThief",e[e.EquipmentProficiencyGainArcher=4]="EquipmentProficiencyGainArcher",e[e.EquipmentProficiencyGainTamer=5]="EquipmentProficiencyGainTamer",e[e.EquipmentDropChance=6]="EquipmentDropChance",e[e.EnchantedEffectChance1=7]="EnchantedEffectChance1",e[e.EnchantedEffectChance2=8]="EnchantedEffectChance2",e[e.EnchantedEffectChance3=9]="EnchantedEffectChance3",e))(Ke||{}),We=(e=>(e[e.Nothing=0]="Nothing",e[e.AtkDown=1]="AtkDown",e[e.MatkDown=2]="MatkDown",e[e.DefDown=3]="DefDown",e[e.MdefDown=4]="MdefDown",e[e.SpdDown=5]="SpdDown",e[e.Stop=6]="Stop",e[e.Electric=7]="Electric",e[e.Poison=8]="Poison",e[e.Death=9]="Death",e[e.Knockback=10]="Knockback",e[e.FireResDown=11]="FireResDown",e[e.IceResDown=12]="IceResDown",e[e.ThunderResDown=13]="ThunderResDown",e[e.LightResDown=14]="LightResDown",e[e.DarkResDown=15]="DarkResDown",e[e.Gravity=16]="Gravity",e[e.MaxMPDown=17]="MaxMPDown",e[e.MPAspiration=18]="MPAspiration",e))(We||{}),W=(e=>(e[e.RaidFlorzporb100=0]="RaidFlorzporb100",e[e.SoloFlorzporb100=1]="SoloFlorzporb100",e[e.RaidArachnetta150=2]="RaidArachnetta150",e[e.SoloArachnetta150=3]="SoloArachnetta150",e[e.RaidGuardianKor200=4]="RaidGuardianKor200",e[e.SoloGuardianKor200=5]="SoloGuardianKor200",e[e.HCArena1=6]="HCArena1",e[e.HCFlorzporb100=7]="HCFlorzporb100",e[e.HCArachnetta150=8]="HCArachnetta150",e[e.HCGuardianKor200=9]="HCGuardianKor200",e[e.HCArena2=10]="HCArena2",e[e.RaidNostro250=11]="RaidNostro250",e[e.SoloNostro250=12]="SoloNostro250",e[e.HCNostro250=13]="HCNostro250",e[e.RaidLadyEmelda300=14]="RaidLadyEmelda300",e[e.SoloLadyEmelda300=15]="SoloLadyEmelda300",e[e.HCLadyEmelda300=16]="HCLadyEmelda300",e[e.RaidNariSune350=17]="RaidNariSune350",e[e.SoloNariSune350=18]="SoloNariSune350",e[e.HCNariSune350=19]="HCNariSune350",e[e.RaidOctobaddie400=20]="RaidOctobaddie400",e[e.SoloOctobaddie400=21]="SoloOctobaddie400",e[e.HCOctobaddie400=22]="HCOctobaddie400",e[e.RaidBananoon450=23]="RaidBananoon450",e[e.SoloBananoon450=24]="SoloBananoon450",e[e.HCBananoon450=25]="HCBananoon450",e[e.RaidGlorbliorbus500=26]="RaidGlorbliorbus500",e[e.SoloGlorbliorbus500=27]="SoloGlorbliorbus500",e[e.HCGlorbliorbus500=28]="HCGlorbliorbus500",e[e.RaidDistortionSlime550=29]="RaidDistortionSlime550",e[e.SoloDistortionSlime550=30]="SoloDistortionSlime550",e[e.HCDistortionSlime550=31]="HCDistortionSlime550",e[e.RaidFlorzporb200=32]="RaidFlorzporb200",e[e.SoloFlorzporb200=33]="SoloFlorzporb200",e[e.HCFlorzporb200=34]="HCFlorzporb200",e[e.RaidFlorzporb300=35]="RaidFlorzporb300",e[e.SoloFlorzporb300=36]="SoloFlorzporb300",e[e.HCFlorzporb300=37]="HCFlorzporb300",e[e.RaidArachnetta250=38]="RaidArachnetta250",e[e.SoloArachnetta250=39]="SoloArachnetta250",e[e.HCArachnetta250=40]="HCArachnetta250",e[e.RaidArachnetta350=41]="RaidArachnetta350",e[e.SoloArachnetta350=42]="SoloArachnetta350",e[e.HCArachnetta350=43]="HCArachnetta350",e[e.RaidGuardianKor300=44]="RaidGuardianKor300",e[e.SoloGuardianKor300=45]="SoloGuardianKor300",e[e.HCGuardianKor300=46]="HCGuardianKor300",e[e.RaidGuardianKor400=47]="RaidGuardianKor400",e[e.SoloGuardianKor400=48]="SoloGuardianKor400",e[e.HCGuardianKor400=49]="HCGuardianKor400",e[e.RaidNostro350=50]="RaidNostro350",e[e.SoloNostro350=51]="SoloNostro350",e[e.HCNostro350=52]="HCNostro350",e[e.RaidNostro450=53]="RaidNostro450",e[e.SoloNostro450=54]="SoloNostro450",e[e.HCNostro450=55]="HCNostro450",e[e.HCArena3=56]="HCArena3",e[e.HCArena4=57]="HCArena4",e[e.HCArena5=58]="HCArena5",e[e.HCArena6=59]="HCArena6",e[e.HCArena7=60]="HCArena7",e[e.HCArena8=61]="HCArena8",e[e.HCArena9=62]="HCArena9",e[e.HCArena10=63]="HCArena10",e[e.RaidFlorzporb400=64]="RaidFlorzporb400",e[e.SoloFlorzporb400=65]="SoloFlorzporb400",e[e.HCFlorzporb400=66]="HCFlorzporb400",e[e.RaidArachnetta450=67]="RaidArachnetta450",e[e.SoloArachnetta450=68]="SoloArachnetta450",e[e.HCArachnetta450=69]="HCArachnetta450",e[e.RaidGuardianKor500=70]="RaidGuardianKor500",e[e.SoloGuardianKor500=71]="SoloGuardianKor500",e[e.HCGuardianKor500=72]="HCGuardianKor500",e[e.RaidNostro550=73]="RaidNostro550",e[e.SoloNostro550=74]="SoloNostro550",e[e.HCNostro550=75]="HCNostro550",e[e.RaidLadyEmelda400=76]="RaidLadyEmelda400",e[e.SoloLadyEmelda400=77]="SoloLadyEmelda400",e[e.HCLadyEmelda400=78]="HCLadyEmelda400",e[e.RaidLadyEmelda500=79]="RaidLadyEmelda500",e[e.SoloLadyEmelda500=80]="SoloLadyEmelda500",e[e.HCLadyEmelda500=81]="HCLadyEmelda500",e[e.RaidLadyEmelda600=82]="RaidLadyEmelda600",e[e.SoloLadyEmelda600=83]="SoloLadyEmelda600",e[e.HCLadyEmelda600=84]="HCLadyEmelda600",e[e.RaidNariSune450=85]="RaidNariSune450",e[e.SoloNariSune450=86]="SoloNariSune450",e[e.HCNariSune450=87]="HCNariSune450",e[e.RaidNariSune550=88]="RaidNariSune550",e[e.SoloNariSune550=89]="SoloNariSune550",e[e.HCNariSune550=90]="HCNariSune550",e[e.RaidNariSune650=91]="RaidNariSune650",e[e.SoloNariSune650=92]="SoloNariSune650",e[e.HCNariSune650=93]="HCNariSune650",e[e.SDSlime=94]="SDSlime",e[e.RaidOctobaddie500=95]="RaidOctobaddie500",e[e.SoloOctobaddie500=96]="SoloOctobaddie500",e[e.HCOctobaddie500=97]="HCOctobaddie500",e[e.RaidOctobaddie600=98]="RaidOctobaddie600",e[e.SoloOctobaddie600=99]="SoloOctobaddie600",e[e.HCOctobaddie600=100]="HCOctobaddie600",e[e.RaidOctobaddie700=101]="RaidOctobaddie700",e[e.SoloOctobaddie700=102]="SoloOctobaddie700",e[e.HCOctobaddie700=103]="HCOctobaddie700",e[e.SDSpider=104]="SDSpider",e[e.SDBatTreant=105]="SDBatTreant",e[e.SDFairyFlametiger=106]="SDFairyFlametiger",e[e.SDSlimeMslime=107]="SDSlimeMslime",e))(W||{}),S=(e=>(e[e.SkillMaster1=0]="SkillMaster1",e[e.SkillMaster2=1]="SkillMaster2",e[e.SkillMaster3=2]="SkillMaster3",e[e.SkillMaster4=3]="SkillMaster4",e[e.MonsterDistinguisher1=4]="MonsterDistinguisher1",e[e.MonsterDistinguisher2=5]="MonsterDistinguisher2",e[e.MonsterDistinguisher3=6]="MonsterDistinguisher3",e[e.MonsterDistinguisher4=7]="MonsterDistinguisher4",e[e.MonsterDistinguisher5=8]="MonsterDistinguisher5",e[e.MonsterDistinguisher6=9]="MonsterDistinguisher6",e[e.EquipmentSlotWeapon1=10]="EquipmentSlotWeapon1",e[e.EquipmentSlotWeapon2=11]="EquipmentSlotWeapon2",e[e.EquipmentSlotWeapon3=12]="EquipmentSlotWeapon3",e[e.EquipmentSlotWeapon4=13]="EquipmentSlotWeapon4",e[e.EquipmentSlotWeapon5=14]="EquipmentSlotWeapon5",e[e.EquipmentSlotWeapon6=15]="EquipmentSlotWeapon6",e[e.EquipmentSlotArmor1=16]="EquipmentSlotArmor1",e[e.EquipmentSlotArmor2=17]="EquipmentSlotArmor2",e[e.EquipmentSlotArmor3=18]="EquipmentSlotArmor3",e[e.EquipmentSlotArmor4=19]="EquipmentSlotArmor4",e[e.EquipmentSlotArmor5=20]="EquipmentSlotArmor5",e[e.EquipmentSlotArmor6=21]="EquipmentSlotArmor6",e[e.EquipmentSlotJewelry1=22]="EquipmentSlotJewelry1",e[e.EquipmentSlotJewelry2=23]="EquipmentSlotJewelry2",e[e.EquipmentSlotJewelry3=24]="EquipmentSlotJewelry3",e[e.EquipmentSlotJewelry4=25]="EquipmentSlotJewelry4",e[e.EquipmentSlotJewelry5=26]="EquipmentSlotJewelry5",e[e.EquipmentSlotJewelry6=27]="EquipmentSlotJewelry6",e[e.PotionSlot1=28]="PotionSlot1",e[e.PotionSlot2=29]="PotionSlot2",e[e.PotionSlot3=30]="PotionSlot3",e[e.PhysicalAttack1=31]="PhysicalAttack1",e[e.PhysicalAttack2=32]="PhysicalAttack2",e[e.PhysicalAttack3=33]="PhysicalAttack3",e[e.PhysicalAttack4=34]="PhysicalAttack4",e[e.FireAttack1=35]="FireAttack1",e[e.FireAttack2=36]="FireAttack2",e[e.FireAttack3=37]="FireAttack3",e[e.FireAttack4=38]="FireAttack4",e[e.IceAttack1=39]="IceAttack1",e[e.IceAttack2=40]="IceAttack2",e[e.IceAttack3=41]="IceAttack3",e[e.IceAttack4=42]="IceAttack4",e[e.ThunderAttack1=43]="ThunderAttack1",e[e.ThunderAttack2=44]="ThunderAttack2",e[e.ThunderAttack3=45]="ThunderAttack3",e[e.ThunderAttack4=46]="ThunderAttack4",e[e.LightAttack1=47]="LightAttack1",e[e.LightAttack2=48]="LightAttack2",e[e.LightAttack3=49]="LightAttack3",e[e.LightAttack4=50]="LightAttack4",e[e.DarkAttack1=51]="DarkAttack1",e[e.DarkAttack2=52]="DarkAttack2",e[e.DarkAttack3=53]="DarkAttack3",e[e.DarkAttack4=54]="DarkAttack4",e[e.Porter1=55]="Porter1",e[e.Porter2=56]="Porter2",e[e.Porter3=57]="Porter3",e[e.Porter4=58]="Porter4",e[e.Porter5=59]="Porter5",e[e.Porter6=60]="Porter6",e[e.Alchemist1=61]="Alchemist1",e[e.Alchemist2=62]="Alchemist2",e[e.Alchemist3=63]="Alchemist3",e[e.Alchemist4=64]="Alchemist4",e[e.Alchemist5=65]="Alchemist5",e[e.EquipmentProf1=66]="EquipmentProf1",e[e.EquipmentProf2=67]="EquipmentProf2",e[e.EquipmentProf3=68]="EquipmentProf3",e[e.EquipmentProf4=69]="EquipmentProf4",e[e.EquipmentProf5=70]="EquipmentProf5",e[e.MetalHunter1=71]="MetalHunter1",e[e.MetalHunter2=72]="MetalHunter2",e[e.MetalHunter3=73]="MetalHunter3",e[e.MetalHunter4=74]="MetalHunter4",e[e.FireResistance1=75]="FireResistance1",e[e.FireResistance2=76]="FireResistance2",e[e.FireResistance3=77]="FireResistance3",e[e.FireResistance4=78]="FireResistance4",e[e.FireResistance5=79]="FireResistance5",e[e.IceResistance1=80]="IceResistance1",e[e.IceResistance2=81]="IceResistance2",e[e.IceResistance3=82]="IceResistance3",e[e.IceResistance4=83]="IceResistance4",e[e.IceResistance5=84]="IceResistance5",e[e.ThunderResistance1=85]="ThunderResistance1",e[e.ThunderResistance2=86]="ThunderResistance2",e[e.ThunderResistance3=87]="ThunderResistance3",e[e.ThunderResistance4=88]="ThunderResistance4",e[e.ThunderResistance5=89]="ThunderResistance5",e[e.LightResistance1=90]="LightResistance1",e[e.LightResistance2=91]="LightResistance2",e[e.LightResistance3=92]="LightResistance3",e[e.LightResistance4=93]="LightResistance4",e[e.LightResistance5=94]="LightResistance5",e[e.DarkResistance1=95]="DarkResistance1",e[e.DarkResistance2=96]="DarkResistance2",e[e.DarkResistance3=97]="DarkResistance3",e[e.DarkResistance4=98]="DarkResistance4",e[e.DarkResistance5=99]="DarkResistance5",e[e.Survival1=100]="Survival1",e[e.Survival2=101]="Survival2",e[e.Survival3=102]="Survival3",e[e.Survival4=103]="Survival4",e[e.Cooperation1=104]="Cooperation1",e[e.Cooperation2=105]="Cooperation2",e[e.Cooperation3=106]="Cooperation3",e[e.Quester1=107]="Quester1",e[e.Quester2=108]="Quester2",e[e.Quester3=109]="Quester3",e[e.Quester4=110]="Quester4",e[e.Quester5=111]="Quester5",e[e.Quester6=112]="Quester6",e[e.Quester7=113]="Quester7",e[e.Quester8=114]="Quester8",e[e.Quester9=115]="Quester9",e[e.Quester10=116]="Quester10",e[e.MonsterDistinguisher7=117]="MonsterDistinguisher7",e[e.MonsterDistinguisher8=118]="MonsterDistinguisher8",e[e.MetalHunter5=119]="MetalHunter5",e[e.MetalHunter6=120]="MetalHunter6",e[e.MetalHunter7=121]="MetalHunter7",e[e.MetalHunter8=122]="MetalHunter8",e[e.MetalHunter9=123]="MetalHunter9",e[e.ExplorerOfSD1=124]="ExplorerOfSD1",e[e.ExplorerOfSD2=125]="ExplorerOfSD2",e[e.ExplorerOfSD3=126]="ExplorerOfSD3",e[e.ExplorerOfSD4=127]="ExplorerOfSD4",e[e.ExplorerOfSD5=128]="ExplorerOfSD5",e[e.ExplorerOfSD6=129]="ExplorerOfSD6",e[e.ExplorerOfSD7=130]="ExplorerOfSD7",e[e.ExplorerOfSD8=131]="ExplorerOfSD8",e[e.ExplorerOfSD9=132]="ExplorerOfSD9",e[e.ExplorerOfSD10=133]="ExplorerOfSD10",e[e.ExplorerOfSD11=134]="ExplorerOfSD11",e[e.ExplorerOfSD12=135]="ExplorerOfSD12",e[e.ExplorerOfSD13=136]="ExplorerOfSD13",e[e.ExplorerOfSD14=137]="ExplorerOfSD14",e[e.ExplorerOfSD15=138]="ExplorerOfSD15",e))(S||{});const H={HeroKind:Object.entries(E).length/2,AreaKind:Object.entries(Oc).length/2,ResourceKind:Object.entries(j).length/2,GlobalStats:Object.entries(tt).length/2,Stats:Object.entries(A).length/2,BasicStatsKind:Object.entries(m).length/2,ChallengeMonsterKind:Object.entries(lt).length/2,MonsterSpecies:Object.entries(O).length/2,MonsterColor:Object.entries(vt).length/2,Element:Object.entries(C).length/2,PetActiveEffectKind:Object.entries($c).length/2,GuildAbilityKind:Object.entries(Et).length/2,AbilityKind:Object.entries(R).length/2,EquipmentSetKind:Object.entries(re).length/2,EquipmentKind:Object.entries(g).length/2,EquipmentPart:Object.entries(T).length/2,SuperDungeonPowerupKind:Object.entries(ae).length/2,PotionKind:Object.entries(B).length/2,MultiplierKind:Object.entries(n).length/2,TitleKind:Object.entries(L).length/2,SkillKindWarrior:Object.entries(cs).length/2,EquipmentEffectKind:Object.entries(r).length/2,RebirthUpgradeKind:Object.entries(V).length/2,EquipmentForgeEffectKind:Object.entries(Se).length/2,DictionaryUpgradeKind:Object.entries(Ke).length/2,Debuff:Object.entries(We).length/2,ChallengeKind:Object.entries(W).length/2,QuestKindTitle:Object.entries(S).length/2};var i=(e=>(e[e.Add=0]="Add",e[e.Mul=1]="Mul",e[e.After=2]="After",e))(i||{});class x{constructor(t=new l(n.Base,i.Add,()=>0),s=()=>1e300,a=()=>0){c(this,"modifiers",[]);c(this,"additiveKind");c(this,"multiplicativeKind");c(this,"afterKind");c(this,"additive",0);c(this,"after",0);c(this,"temp",0);c(this,"value",0);c(this,"log",0);c(this,"isLog",!1);c(this,"numberType",Ze.Percent);c(this,"multiplicative",1);c(this,"maxValue");c(this,"minValue");c(this,"debug",!1);this.maxValue=s,this.minValue=a,this.RegisterMultiplier(t),this.RegisterMultiplier(new l(n.Base,i.Mul,()=>0))}Debug(t,s){this.modifiers.forEach(a=>{a.kind==t&&a.type==s&&console.log("modifier",a)})}Snapshot(){return this.Calculate(),{additive:this.additive,multiplicative:this.multiplicative,after:this.after,multiplicativeKind:this.multiplicativeKind,additiveKind:this.additiveKind,afterKind:this.afterKind,value:this.value,temp:this.temp,log:this.log,numberType:this.numberType,isLog:this.isLog,ValueString:()=>this.ValueString(),Value:()=>this.Value()}}Value(){return this.Calculate(),this.value}ValueString(){switch(this.numberType){case Ze.Normal:return h.tDigit(this.Value(),2);case Ze.Percent:return h.percent(this.Value(),2);case Ze.Meter:return h.meter(this.Value(),2);default:return this.Value()}}TotalValue(){return this.BeforeTotalValue(this.isLog)+this.After()}RegisterMultiplier(t){return this.modifiers.push(t),()=>this.UnregisterMultplier(t)}UnregisterMultplier(t){for(let s=0;s<this.modifiers.length;s++)this.modifiers[s]==t&&this.modifiers.splice(s,1)}After(){return this.after}Calculate(){this.additiveKind={},this.multiplicativeKind={},this.afterKind={};for(let t=0;t<this.modifiers.length;t++){const s=this.modifiers[t];if(s.trigger()!=!1)switch(s.type){case i.Add:this.additiveKind[n[s.kind]]?this.additiveKind[n[s.kind]]+=s.value():this.additiveKind[n[s.kind]]=s.value();break;case i.Mul:this.multiplicativeKind[n[s.kind]]?this.multiplicativeKind[n[s.kind]]+=s.value():this.multiplicativeKind[n[s.kind]]=1+s.value();break;case i.After:this.afterKind[n[s.kind]]?this.afterKind[n[s.kind]]+=s.value():this.afterKind[n[s.kind]]=s.value();break}}this.additive=Object.values(this.additiveKind).reduce((t,s)=>t+s,0),this.multiplicative=Object.values(this.multiplicativeKind).reduce((t,s)=>t*s),this.after=Object.values(this.afterKind).reduce((t,s)=>t+s,0),this.temp=this.BeforeTotalValue(!1),this.log=this.BeforeTotalValue(!0),this.value=Math.max(this.minValue(),Math.min(this.maxValue(),this.TotalValue()))}BeforeTotalValue(t){if(t){let s=this.additive*this.multiplicative;switch(this.numberType){case Ze.Normal:return s<1?s:this.modifiers[0].Value+Math.log10(s);case Ze.Percent:return this.modifiers[0].Value>=1?s<1?s:this.modifiers[0].Value+Math.log10(s):s<.01?s:this.modifiers[0].Value+Math.log10(s*100)/100;case Ze.Meter:return s<100?s:this.modifiers[0].Value+Math.log10(s/100)*100}}return this.additive*this.multiplicative}}class l{constructor(t,s,a,u=()=>!0){c(this,"kind");c(this,"type");c(this,"value");c(this,"trigger");this.kind=t,this.type=s,this.value=a,this.trigger=u}get Value(){return this.value()}get info(){return`kind: ${n[this.kind]}, type: ${i[this.type]}, trigger: ${this.trigger()}, value: ${this.Value}`}}const _d={maxLevel:50,upgradeMaxLevel:999,catalystMaxLevel:50};class Wd{constructor(){c(this,"criticalChanceMultiplier");c(this,"catalystLevelCap");c(this,"catalystCostReduction");c(this,"catalystDoubleCriticalChance");c(this,"catalysts",[]);c(this,"essenceProductions",[]);c(this,"essenceProductionMultiplier");c(this,"essenceProductionDiminishing");c(this,"availableNum");this.catalystLevelCap=new x(new l(n.Base,i.Add,()=>_d.catalystMaxLevel)),this.catalystCostReduction=new x(new l(n.Base,i.Add,()=>0),()=>.5,()=>0),this.catalystDoubleCriticalChance=new x(new l(n.Base,i.Add,()=>0),()=>1,()=>0),this.availableNum=new x(new l(n.Base,i.Add,()=>1)),this.essenceProductionDiminishing=new x(new l(n.Base,i.Add,()=>0),()=>2,()=>1.1),this.essenceProductionDiminishing.RegisterMultiplier(new l(n.Base,i.Add,()=>2)),this.essenceProductionMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.criticalChanceMultiplier=new x(new l(n.Base,i.Add,()=>1))}}class Ud{constructor(){c(this,"catalyst",new Wd);c(this,"mysteriousWaterProductionPerSec");c(this,"mysteriousWaterCap");c(this,"maxMysteriousWaterExpandedCapNum");c(this,"mysteriousWaterExpandedCapNum",0);c(this,"doubleAlchemyPointChance");c(this,"alchemyPointGainMultiplier");c(this,"alchemyUpgrades",[]);c(this,"maxPurificationLevel");c(this,"maxWaterPreservationLevel");c(this,"preventUseEssenceToCraft");c(this,"nitroGainOnCraft");this.maxMysteriousWaterExpandedCapNum=new x(new l(n.Base,i.Add,()=>50)),this.mysteriousWaterCap=new x(new l(n.Base,i.Add,()=>this.mysteriousWaterExpandedCapNum)),this.mysteriousWaterProductionPerSec=new x(new l(n.Base,i.Add,()=>.1)),this.doubleAlchemyPointChance=new x,this.alchemyPointGainMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.preventUseEssenceToCraft=new x,this.nitroGainOnCraft=new x,this.maxPurificationLevel=new x(new l(n.Base,i.Add,()=>50)),this.maxWaterPreservationLevel=new x(new l(n.Base,i.Add,()=>5))}Start(){}}var ar;class Od{constructor(t){Ht(this,ar,void 0);c(this,"expBonuses",Array(H.AreaKind));c(this,"moveSpeedBonuses",Array(H.AreaKind));c(this,"areaDebuffReduction");c(this,"largeSwarmChanceInsteadOfRegular");c(this,"epicSwarmChanceInsteadOfLarge");c(this,"swarmScoreMultiplier");c(this,"maxAreaPrestigeLevel");c(this,"maxAreaExpLevel");c(this,"maxAreaMoveSpeedLevel");c(this,"townMaterialGainBonus");c(this,"townMaterialDungeonRewardMultiplier");c(this,"townMaterialGainPerDifficultyMultiplier");c(this,"townMaterialGainBonusClass",Array(H.HeroKind));c(this,"chestPortalOrbChance");c(this,"clearCountBonusClass",Array(H.HeroKind));c(this,"dungeonClearCountBonusClass",Array(H.HeroKind));c(this,"memoTotalClearedMissionNum");Vt(this,ar,t),this.chestPortalOrbChance=new x,this.townMaterialGainBonus=new x,this.townMaterialGainPerDifficultyMultiplier=new x,this.maxAreaExpLevel=new x(new l(n.Base,i.Add,()=>100)),this.maxAreaPrestigeLevel=new x(new l(n.Base,i.Add,()=>9)),this.swarmScoreMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.maxAreaMoveSpeedLevel=new x(new l(n.Base,i.Add,()=>100)),this.townMaterialDungeonRewardMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.epicSwarmChanceInsteadOfLarge=new x(new l(n.Base,i.Add,()=>0),()=>1,()=>0),this.largeSwarmChanceInsteadOfRegular=new x(new l(n.Base,i.Add,()=>0),()=>1,()=>0),this.areaDebuffReduction=new x(new l(n.Base,i.Add,()=>0),()=>.9,()=>0);for(let s=0;s<this.expBonuses.length;s++)this.expBonuses[s]=new x,this.moveSpeedBonuses[s]=new x;for(let s=0;s<this.townMaterialGainBonusClass.length;s++)this.townMaterialGainBonusClass[s]=new x;for(let s=0;s<this.clearCountBonusClass.length;s++)this.clearCountBonusClass[s]=new x(new l(n.Base,i.Add,()=>1)),this.dungeonClearCountBonusClass[s]=new x(new l(n.Base,i.Add,()=>1))}SetEffectClearCount(t){for(let s=0;s<this.clearCountBonusClass.length;s++)this.clearCountBonusClass[s].RegisterMultiplier(t)}SetEffectDungeonClearCount(t){for(let s=0;s<this.dungeonClearCountBonusClass.length;s++)this.dungeonClearCountBonusClass[s].RegisterMultiplier(t)}TotalClearedMissionNum(){if(this.memoTotalClearedMissionNum)return this.memoTotalClearedMissionNum;const t=b(this,ar).source.isClearedMission.filter(Boolean).length;return this.memoTotalClearedMissionNum=t,t}}ar=new WeakMap;function $d(e){switch(e){case r.Nothing:return"Enchant Slot";case r.HPAdder:return"HP Adder";case r.MPAdder:return"MP Adder";case r.ATKAdder:return"ATK Adder";case r.MATKAdder:return"MATK Adder";case r.DEFAdder:return"DEF Adder";case r.MDEFAdder:return"MDEF Adder";case r.SPDAdder:return"SPD Adder";case r.HPMultiplier:return"HP Multiplier";case r.MPMultiplier:return"MP Multiplier";case r.ATKMultiplier:return"ATK Multiplier";case r.MATKMultiplier:return"MATK Multiplier";case r.DEFMultiplier:return"DEF Multiplier";case r.MDEFMultiplier:return"MDEF Multiplier";case r.ATKPropotion:return"ATK Proportion";case r.MATKPropotion:return"MATK Proportion";case r.DEFPropotion:return"DEF Proportion";case r.MDEFPropotion:return"MDEF Proportion";case r.FireResistance:return"Fire Resistance";case r.IceResistance:return"Ice Resistance";case r.ThunderResistance:return"Thunder Resistance";case r.LightResistance:return"Light Resistance";case r.DarkResistance:return"Dark Resistance";case r.PhysicalAbsorption:return"Physical Absorption";case r.FireAbsorption:return"Fire Absorption";case r.IceAbsorption:return"Ice Absorption";case r.ThunderAbsorption:return"Thunder Absorption";case r.LightAbsorption:return"Light Absorption";case r.DarkAbsorption:return"Dark Absorption";case r.DebuffResistance:return"Debuff Resistance";case r.EquipmentDropChance:return"Equipment Drop";case r.SlimeDropChance:return"Slime Drop";case r.MagicSlimeDropChance:return"Magicslime Drop";case r.SpiderDropChance:return"Spider Drop";case r.BatDropChance:return"Bat Drop";case r.FairyDropChance:return"Fairy Drop";case r.FoxDropChance:return"Fox Drop";case r.DevilFishDropChance:return"Devilfish Drop";case r.TreantDropChance:return"Treant Drop";case r.FlameTigerDropChance:return"Flametiger Drop";case r.UnicornDropChance:return"Unicorn Drop";case r.ColorMaterialDropChance:return"Rare Material Drop";case r.PhysicalCritical:return"Physical Critical";case r.MagicalCritical:return"Magical Critical";case r.EXPGain:return"EXP Gain";case r.SkillProficiency:return"Skill Proficiency";case r.EquipmentProficiency:return"Equipment Proficiency";case r.MoveSpeedMultiplier:return"Move Speed Multiplier";case r.GoldGain:return"Gold Gain";case r.StoneGain:return"Stone Gain";case r.CrystalGain:return"Crystal Gain";case r.LeafGain:return"Leaf Gain";case r.WarriorSkillLevel:return"Warrior Skill";case r.WizardSkillLevel:return"Wizard Skill";case r.AngelSkillLevel:return"Angel Skill";case r.ThiefSkillLevel:return"Thief Skill";case r.ArcherSkillLevel:return"Archer Skill";case r.TamerSkillLevel:return"Tamer Skill";case r.AllSkillLevel:return"All Skill";case r.SlimeKnowledge:return"Slime Knowledge";case r.MagicSlimeKnowledge:return"Magicslime Knowledge";case r.SpiderKnowledge:return"Spider Knowledge";case r.BatKnowledge:return"Bat Knowledge";case r.FairyKnowledge:return"Fairy Knowledge";case r.FoxKnowledge:return"Fox Knowledge";case r.DevilFishKnowledge:return"Devilfish Knowledge";case r.TreantKnowledge:return"Treant Knowledge";case r.FlameTigerKnowledge:return"Flametiger Knowledge";case r.UnicornKnowledge:return"Unicorn Knowledge";case r.PhysicalDamage:return"Physical Damage";case r.FireDamage:return"Fire Damage";case r.IceDamage:return"Ice Damage";case r.ThunderDamage:return"Thunder Damage";case r.LightDamage:return"Light Damage";case r.DarkDamage:return"Dark Damage";case r.HpRegen:return"HP Regeneration";case r.MpRegen:return"MP Regeneration";case r.TamingPoint:return"Taming Point";case r.WarriorSkillRange:return"Warrior Skill Range";case r.WizardSkillRange:return"Wizard Skill Range";case r.AngelSkillRange:return"Angel Skill Range";case r.ThiefSkillRange:return"Thief Skill Range";case r.ArcherSkillRange:return"Archer Skill Range";case r.TamerSkillRange:return"Tamer Skill Range";case r.TownMatGain:return"Town Material Gain";case r.TownMatAreaClearGain:return"Area Town Material";case r.RebirthPointGain1:return"Tier 1 Rebirth PoGain";case r.RebirthPointGain2:return"Tier 2 Rebirth PoGain";case r.RebirthPointGain3:return"Tier 3 Rebirth PoGain";case r.CriticalDamage:return"Critical Damage";case r.BlessingEffect:return"Blessing Effect";case r.MoveSpeedAdder:return"Move Speed Adder";case r.PetEXPGain:return"Pet EXP Gain";case r.LoyaltyPointGain:return"Loyalty Point Gain";case r.CatalystDoubleCriticalChance:return"Catalyst Double Critical";case r.WarriorSkillEffectRange:return"Warrior Area of Effect";case r.WizardSkillEffectRange:return"Wizard Area of Effect";case r.AngelSkillEffectRange:return"Angel Area of Effect";case r.ThiefSkillEffectRange:return"Thief Area of Effect";case r.ArcherSkillEffectRange:return"Archer Area of Effect";case r.TamerSkillEffectRange:return"Tamer Area of Effect";case r.HpRegenMultiplier:return"HP Regen Multiplier";case r.MpRegenMultiplier:return"MP Regen Multiplier";case r.ArmoredFury:return"Armored Fury";case r.WardedFury:return"Warded Fury";case r.PetPhysicalCriticalChance:return"Pet Physical Critical Chance";case r.PetMagicalCriticalChance:return"Pet Magical Critical Chance";case r.PetCriticalDamage:return"Pet Critical Damage";case r.PetDebuffResistance:return"Pet Debuff Resistance";case r.StoneTownResearchPower:return"Stone Research Power";case r.CrystalTownResearchPower:return"Crystal Research Power";case r.LeafTownResearchPower:return"Leaf Research Power";case r.GuildEXPGain:return"Guild EXP Gain";case r.SPDMultiplier:return"SPD Multiplier";case r.CriticalDamageMultiplier:return"Critical Damage Multiplier";case r.SkillProficiencyMultiplier:return"Skill Proficiency Multiplier";case r.EquipmentProficiencyMultiplier:return"Equipment Proficiency Multiplier";case r.EXPGainMultiplier:return"EXP Gain Multiplier";case r.GoldGainMultiplier:return"Gold Gain Multiplier";case r.PhysicalDamageMultiplier:return"Physical Damage Multiplier";case r.FireDamageMultiplier:return"Fire Damage Multiplier";case r.IceDamageMultiplier:return"Ice Damage Multiplier";case r.ThunderDamageMultiplier:return"Thunder Damage Multiplier";case r.LightDamageMultiplier:return"Light Damage Multiplier";case r.DarkDamageMultiplier:return"Dark Damage Multiplier";case r.TamingPointMultiplier:return"Taming Point Multiplier";case r.PetEXPGainMultiplier:return"Pet EXP Gain Multiplier";case r.LoyaltyPointGainMultiplier:return"Loyalty Point Gain Multiplier";case r.BlessingEffectMultiplier:return"Blessing Effect Multiplier";case r.PhysicalCriticalMultiplier:return"Physical Critical Multiplier";case r.MagicalCriticalMultiplier:return"Magical Critical Multiplier";case r.ChallengeBossKnowledge:return"Challenge Boss Knowledge";case r.HPAfter:return"HP After";case r.MPAfter:return"MP After";case r.ATKAfter:return"ATK After";case r.MATKAfter:return"MATK After";case r.DEFAfter:return"DEF After";case r.MDEFAfter:return"MDEF After";case r.SPDAfter:return"SPD After";case r.MoveSpeedAfter:return"Move Speed After";case r.PhysicalCriticalAfter:return"Physical Critical After";case r.MagicalCriticalAfter:return"Magical Critical After";case r.CriticalDamageAfter:return"Critical Damage After";case r.DebuffResistanceAfter:return"Debuff Resistance After";case r.PhysicalDamageAfter:return"Physical Damage After";case r.FireDamageAfter:return"Fire Damage After";case r.IceDamageAfter:return"Ice Damage After";case r.ThunderDamageAfter:return"Thunder Damage After";case r.LightDamageAfter:return"Light Damage After";case r.DarkDamageAfter:return"Dark Damage After";case r.FireResistanceAfter:return"Fire Resistance After";case r.IceResistanceAfter:return"Ice Resistance After";case r.ThunderResistanceAfter:return"Thunder Resistance After";case r.LightResistanceAfter:return"Light Resistance After";case r.DarkResistanceAfter:return"Dark Resistance After";case r.SlimeKnowledgeAfter:return"Slime Knowledge After";case r.MagicSlimeKnowledgeAfter:return"Magicslime Knowledge After";case r.SpiderKnowledgeAfter:return"Spider Knowledge After";case r.BatKnowledgeAfter:return"Bat Knowledge After";case r.FairyKnowledgeAfter:return"Fairy Knowledge After";case r.FoxKnowledgeAfter:return"Fox Knowledge After";case r.DevilFishKnowledgeAfter:return"Devilfish Knowledge After";case r.TreantKnowledgeAfter:return"Treant Knowledge After";case r.FlameTigerKnowledgeAfter:return"Flametiger Knowledge After";case r.UnicornKnowledgeAfter:return"Unicorn Knowledge After";case r.ChallengeBossKnowledgeAfter:return"Challenge Boss Knowledge After";case r.SDDamageMultiplier:return"SD Damage Multiplier";case r.SDDamageCutMultiplier:return"SD Damage Cut Multiplier";case r.FameGain:return"Fame Gain";case r.DungeonCoinGain:return"Dungeon Coin Gain";case r.ExtraAfterDamage:return"Extra After Damage";default:return e}}function zd(e){switch(e){case g.Nothing:return"Nothing";case g.DullSword:return"Dull Sword";case g.BrittleStaff:return"Brittle Staff";case g.FlimsyWing:return"Flimsy Wing";case g.WornDart:return"Worn Dart";case g.SmallBow:return"Small Bow";case g.WoodenRecorder:return"Wooden Recorder";case g.OldCloak:return"Old Cloak";case g.BlueHat:return"Blue Hat";case g.OrangeHat:return"Orange Hat";case g.TShirt:return"T-shirt";case g.ClothGlove:return"Cloth Gloves";case g.BlueTShirt:return"Blue T-shirt";case g.OrangeTShirt:return"Orange T-shirt";case g.ClothBelt:return"Cloth Belt";case g.ClothShoes:return"Cloth Shoes";case g.IronRing:return"Iron Ring";case g.PearlEarring:return"Pearl Earring";case g.FireBrooch:return"Fire Brooch";case g.IceBrooch:return"Ice Brooch";case g.ThunderBrooch:return"Thunder Brooch";case g.LightBrooch:return"Light Brooch";case g.DarkBrooch:return"Dark Brooch";case g.WoodenShield:return"Wooden Shield";case g.LongSword:return"Long Sword";case g.LongStaff:return"Long Staff";case g.WarmWing:return"Warm Wing";case g.DualDagger:return"Dual Dagger";case g.ReinforcedBow:return"Reinforced Bow";case g.Flute:return"Flute";case g.FireStaff:return"Fire Staff";case g.IceStaff:return"Ice Staff";case g.ThunderStaff:return"Thunder Staff";case g.LeatherBelt:return"Leather Belt";case g.LeatherShoes:return"Leather Shoes";case g.WarmCloak:return"Warm Cloak";case g.LeatherArmor:return"Leather Armor";case g.LeatherGlove:return"Leather Gloves";case g.LeatherShield:return"Leather Shield";case g.FireRing:return"Fire Ring";case g.IceRing:return"Ice Ring";case g.ThunderRing:return"Thunder Ring";case g.LightRing:return"Light Ring";case g.DarkRing:return"Dark Ring";case g.EnhancedFireBrooch:return"Enhanced Fire Brooch";case g.EnhancedIceBrooch:return"Enhanced Ice Brooch";case g.EnhancedThunderBrooch:return"Enhanced Thunder Brooch";case g.EnhancedLightBrooch:return"Enhanced Light Brooch";case g.EnhancedDarkBrooch:return"Enhanced Dark Brooch";case g.BattleSword:return"Battle Sword";case g.BattleStaff:return"Battle Staff";case g.BattleWing:return"Battle Wing";case g.BattleDagger:return"Battle Dagger";case g.BattleBow:return"Battle Bow";case g.BattleRecorder:return"Battle Flute";case g.SlimeSword:return"Slime Sword";case g.SlimeGlove:return"Slime Gloves";case g.SlimeRing:return"Slime Ring";case g.SlimeBelt:return"Slime Belt";case g.SlimePincenez:return"Slime Pince-nez";case g.SlimeWing:return"Slime Wing";case g.SlimePoncho:return"Slime Poncho";case g.SlimeDart:return"Slime Dart";case g.MagicSlimeStick:return"Magicslime Stick";case g.MagicSlimeHat:return"Magicslime Hat";case g.MagicSlimeBow:return"Magicslime Bow";case g.MagicSlimeShoes:return"Magicslime Shoes";case g.MagicSlimeRecorder:return"Magicslime Recorder";case g.MagicSlimeEarring:return"Magicslime Earring";case g.MagicSlimeBalloon:return"Magicslime Balloon";case g.MagicSlimeSkirt:return"Magicslime Skirt";case g.SpiderHat:return"Spider Hat";case g.SpiderSkirt:return"Spider Skirt";case g.SpiderSuit:return"Spider Suit";case g.SpiderDagger:return"Spider Dagger";case g.SpiderWing:return"Spider Wing";case g.SpiderCatchingNet:return"Spider Catching Net";case g.SpiderStick:return"Spider Stick";case g.SpiderFoldingFan:return"Spider Folding Fan";case g.BatRing:return"Bat Ring";case g.BatShoes:return"Bat Shoes";case g.BatSword:return"Bat Sword";case g.BatHat:return"Bat Helm";case g.BatRecorder:return"Bat Recorder";case g.BatBow:return"Bat Bow";case g.BatMascaradeMask:return"Bat Mascarade Mask";case g.BatCloak:return"Bat Cloak";case g.BronzeShoulder:return"Bronze Spaulder";case g.BattleRing:return"Battle Ring";case g.Halo:return"Halo";case g.IronShoulder:return"Iron Spaulder";case g.StrengthRing:return"Strength Ring";case g.GoldenRing:return"Golden Ring";case g.GoldenFireRing:return"Golden Fire Ring";case g.GoldenIceRing:return"Golden Ice Ring";case g.GoldenThunderRing:return"Golden Thunder Ring";case g.GoldenLightRing:return"Golden Light Ring";case g.GoldenDarkRing:return"Golden Dark Ring";case g.IronBelt:return"Iron Belt";case g.IronShoes:return"Iron Sabatons";case g.CopperArmor:return"Copper Armor";case g.IronGlove:return"Iron Gloves";case g.TowerShield:return"Tower Shield";case g.FireTowerShield:return"Fire Tower Shield";case g.IceTowerShield:return"Ice Tower Shield";case g.ThunderTowerShield:return"Thunder Tower Shield";case g.LightTowerShield:return"Light Tower Shield";case g.DarkTowerShield:return"Dark Tower Shield";case g.SavageRing:return"Savage Ring";case g.SpellboundFireBrooch:return"Spellbound Fire Brooch";case g.SpellboundIceBrooch:return"Spellbound Ice Brooch";case g.SpellboundThunderBrooch:return"Spellbound Thunder Brooch";case g.SpellboundLightBrooch:return"Spellbound Light Brooch";case g.SpellboundDarkBrooch:return"Spellbound Dark Brooch";case g.CopperHelm:return"Leather Hood";case g.BattleHelm:return"Battle Helm";case g.WizardHelm:return"Wizard Hood";case g.LargeSword:return"Large Sword";case g.LargeStaff:return"Large Staff";case g.LargeWing:return"Large Wing";case g.LargeDagger:return"Large Dagger";case g.LargeBow:return"Large Bow";case g.LargeOcarina:return"Large Ocarina";case g.FairyClothes:return"Fairy Clothes";case g.FairyStaff:return"Fairy Staff";case g.FairyBoots:return"Fairy Boots";case g.FairyGlove:return"Fairy Gloves";case g.FairyBrooch:return"Fairy Brooch";case g.FairyLamp:return"Fairy Lamp";case g.FairyWing:return"Fairy Wing";case g.FairyShuriken:return"Fairy Shuriken";case g.FoxKanzashi:return"Fox Kanzashi";case g.FoxLoincloth:return"Fox Loincloth";case g.FoxMask:return"Fox Mask";case g.FoxHamayayumi:return"Fox Hamaya-yumi";case g.FoxHat:return"Fox Hat";case g.FoxCoat:return"Fox Coat";case g.FoxBoot:return"Fox Boots";case g.FoxEma:return"Fox Ema";case g.DevilfishSword:return"Devilfish Sword";case g.DevilfishWing:return"Devilfish Wing";case g.DevilfishRecorder:return"Devilfish Recorder";case g.DevilfishArmor:return"Devilfish Armor";case g.DevilfishScarf:return"Devilfish Scarf";case g.DevilfishGill:return"Devilfish Gill";case g.DevilfishPendant:return"Devilfish Pendant";case g.DevilfishRing:return"Devilfish Ring";case g.TreantAmulet:return"Treant Amulet";case g.TreantHagoita:return"Treant Hagoita";case g.TreantChoppingBoard:return"Treant Chopping Board";case g.TreantDagger:return"Treant Dagger";case g.TreantHaniwa:return"Treant Haniwa";case g.TreantKokeshi:return"Treant Kokeshi";case g.TreantLamp:return"Treant Lamp";case g.TreantLunchbox:return"Treant Lunchbox";case g.FlametigerPortableHotSpring:return"Flametiger Portable Hot Spring";case g.FlametigerVolcanicShield:return"Flametiger Volcanic Shield";case g.FlametigerStripedBriefs:return"Flametiger-Striped Briefs";case g.TorchOfEverburningFlametiger:return"Torch of Everburning Flametiger";case g.FlametigerCostume:return"Flametiger Costume";case g.RingOfFlametigersWrath:return"Ring of the Flametiger's Wrath";case g.EndlessBowlOfSpicyFlametigerRamen:return"Endless Bowl of Spicy Flametiger Ramen";case g.ScreenOfTheSneakyFlametiger:return"Screen of the Sneaky Flametiger";case g.ModifiedSword:return"Ancient Sword";case g.ModifiedStaff:return"Ancient Staff";case g.ModifiedWing:return"Ancient Wing";case g.ModifiedDart:return"Ancient Dart";case g.ModifiedBow:return"Ancient Bow";case g.ModifiedRecorder:return"Ancient Recorder";case g.AncientCloak:return"Ancient Cloak";case g.AncientBelt:return"Ancient Belt";case g.AncientShoes:return"Ancient Shoes";case g.AncientRing:return"Ancient Ring";case g.AncientEarring:return"Ancient Earring";default:return e}}function Jd(e){switch(e){case n.Base:return"Base";case n.Ability:return"Ability";case n.SuperAbility:return"Super Ability";case n.Title:return"Title";case n.Quest:return"Quest";case n.Skill:return"Skill";case n.ChanneledSkill:return"Channeled Skill";case n.SkillPassive:return"Skill Passive";case n.Stance:return"Stance";case n.Upgrade:return"Upgrade";case n.Town:return"Town";case n.TownResearch:return"Town Research";case n.Equipment:return"Equipment";case n.ArmoredFury:return"Armored Fury";case n.WardedFury:return"Warded Fury";case n.Dictionary:return"Dictionary";case n.Alchemy:return"Alchemy Upgrade";case n.AlchemyExpand:return"Expand Cap";case n.Potion:return"Potion";case n.Pet:return"Pet";case n.PetRankMilestone:return"Pet Rank Milestone";case n.Guild:return"Guild Ability";case n.GuildSuperAbility:return"Guild Super Ability";case n.Rebirth:return"Rebirth";case n.Challenge:return"Challenge";case n.SuperDungeon:return"Super Dungeon";case n.DungeonItem:return"SD Powerup";case n.DungeonItemPermanent:return"SD Powerup (Permanent)";case n.SDUpgrade:return"SD Upgrade";case n.SDShop:return"SD Ruby Shop";case n.SDModifier:return"SD Modifier";case n.SDModifierMilestone:return"SD Modifier Milestone";case n.SDGemRitual:return"SD Gem Ritual";case n.GradeMilestone:return"Grade Milestone";case n.Expedition:return"Expedition";case n.ExpeditionMilestone:return"Expedition Milestone";case n.MissionMilestone:return"Mission Milestone";case n.AreaPrestige:return"Area Prestige";case n.Ascension:return"World Ascension";case n.AreaDebuff:return"Field Debuff";case n.FieldCurse:return"Field Curse";case n.Blessing:return"Blessing";case n.Buff:return"Skill Buff";case n.Debuff:return"Debuff";case n.Talisman:return"Talisman";case n.TalismanPassive:return"Talisman Passive";case n.Achievement:return"Achievement";case n.EpicStore:return"Epic Store";case n.DLC:return"Steam DLC";default:return e}}var $=(e=>(e[e.MorePowerups=0]="MorePowerups",e[e.FlexibleDodge=1]="FlexibleDodge",e[e.LeaveAndRetry=2]="LeaveAndRetry",e[e.AutoDodge=3]="AutoDodge",e[e.AutoLeaveAndRetry=4]="AutoLeaveAndRetry",e[e.SDDamageMultiplier=5]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=6]="SDDamageCutMultiplier",e[e.FameGain=7]="FameGain",e[e.SDMPGainEveryFloor=8]="SDMPGainEveryFloor",e[e.SDDungeonCoinBoostStart=9]="SDDungeonCoinBoostStart",e[e.SDPowerupBoostStart=10]="SDPowerupBoostStart",e[e.AutoProgress=11]="AutoProgress",e[e.AutoBuyPowerups=12]="AutoBuyPowerups",e[e.AutoUseRefreshTicket=13]="AutoUseRefreshTicket",e[e.SDChallengeBossDamageMultiplier=14]="SDChallengeBossDamageMultiplier",e[e.GoldCap=15]="GoldCap",e[e.SlimeCoinCap=16]="SlimeCoinCap",e[e.HPMultiplier=17]="HPMultiplier",e[e.MPMultiplier=18]="MPMultiplier",e[e.ATKMultiplier=19]="ATKMultiplier",e[e.MATKMultiplier=20]="MATKMultiplier",e[e.DEFMultiplier=21]="DEFMultiplier",e[e.MDEFMultiplier=22]="MDEFMultiplier",e[e.SPDMultiplier=23]="SPDMultiplier",e[e.PhysicalCriticalChanceMul=24]="PhysicalCriticalChanceMul",e[e.MagicalCriticalChanceMul=25]="MagicalCriticalChanceMul",e[e.CriticalDamageMul=26]="CriticalDamageMul",e[e.DebuffResistanceMul=27]="DebuffResistanceMul",e[e.PetPhysicalCriticalChanceMul=28]="PetPhysicalCriticalChanceMul",e[e.PetMagicalCriticalChanceMul=29]="PetMagicalCriticalChanceMul",e[e.PetCriticalDamageMul=30]="PetCriticalDamageMul",e[e.PetDebuffResistanceMul=31]="PetDebuffResistanceMul",e[e.ElementResistanceMultiplier=32]="ElementResistanceMultiplier",e[e.PhysicalDamageMultiplier=33]="PhysicalDamageMultiplier",e[e.MagicalDamageMultiplier=34]="MagicalDamageMultiplier",e[e.ArmoredFuryMultiplier=35]="ArmoredFuryMultiplier",e[e.WardedFuryMultiplier=36]="WardedFuryMultiplier",e[e.DamageToRegularMonstersMultiplier=37]="DamageToRegularMonstersMultiplier",e[e.DamageToChallengeBossMultiplier=38]="DamageToChallengeBossMultiplier",e[e.HeroExpGainMul=39]="HeroExpGainMul",e[e.GoldGainMul=40]="GoldGainMul",e[e.StoneGainMul=41]="StoneGainMul",e[e.CrystalGainMul=42]="CrystalGainMul",e[e.LeafGainMul=43]="LeafGainMul",e[e.SkillProficiencyGainMul=44]="SkillProficiencyGainMul",e[e.EquipmentProficiencyGainMul=45]="EquipmentProficiencyGainMul",e[e.GuildEXPGainMul=46]="GuildEXPGainMul",e[e.TownMatGainMul=47]="TownMatGainMul",e[e.TamingPointGainMul=48]="TamingPointGainMul",e[e.PetEXPGainMul=49]="PetEXPGainMul",e[e.LoyaltyPointGainMul=50]="LoyaltyPointGainMul",e[e.AlchemyPointGainMul=51]="AlchemyPointGainMul",e[e.StoneResearchPowerMul=52]="StoneResearchPowerMul",e[e.CrystalResearchPowerMul=53]="CrystalResearchPowerMul",e[e.LeafResearchPowerMul=54]="LeafResearchPowerMul",e[e.SDUpgreadeSuperQueue=55]="SDUpgreadeSuperQueue",e[e.SDArmoredFury=56]="SDArmoredFury",e[e.SDWardedFury=57]="SDWardedFury",e[e.PowerupFilterSlot=58]="PowerupFilterSlot",e[e.SDChallengeBossDamageCutMultiplier=59]="SDChallengeBossDamageCutMultiplier",e[e.BoostStartGoodRNG=60]="BoostStartGoodRNG",e))($||{});function Xd(e,t=0){let s="",a="",u="";switch(e){case $.MorePowerups:s="More Powerups",a="Increases the amount of powerups every floor",u=h.tDigit(t,0)+" powerups appear in the Safe Zone every floor";break;case $.FlexibleDodge:s="Flexible Dodge",a="Enables you to keep casting skills and moving during Dodge",u="";break;case $.LeaveAndRetry:s="Leave & Retry",a='Unlocks the "Leave & Retry" button that enables you start the current Super Dungeon as soon as you leave it',u="";break;case $.AutoDodge:s="Auto Dodge",a='Unlocks the "Auto Dodge" toggle in SD Options tab that automatically keeps holding down the Dodge button until the available dodge time is gone',u="";break;case $.AutoLeaveAndRetry:s="Auto Leave & Retry",a="Unlocks the toggle in SD Options tab that automatically clicks Leave & Retry button when you reach a certain floor with the entry cost less than a certain amount",u="";break;case $.SDDamageMultiplier:s="SD Damage Multiplier",a="Multiplies SD Damage Multiplier",u="by "+h.percent(t+1);break;case $.SDDamageCutMultiplier:s="SD Damage Cut Multiplier",a="Multiplies SD Damage Cut Multiplier",u="by "+h.percent(t+1);break;case $.FameGain:s="Fame Gain",a="Multiplies Fame Gain",u="by "+h.percent(t+1);break;case $.SDMPGainEveryFloor:s="Boost-Start of MP",a="",u="Gains "+h.percent(t)+" of Max MP when you visit every floor";break;case $.SDDungeonCoinBoostStart:s="Boost-Start of Dungeon Coin",a="",u="Starts a Super Dungeon run with "+h.tDigit(t,0)+" Dungeon Coins";break;case $.SDPowerupBoostStart:s="Boost-Start of Powerups",a="Starts a Super Dungeon run with random powerups to purchase at B1F Safe Zone",u="";break;case $.AutoProgress:s="Auto Progression",a='Unlocks the "Auto Progression" toggle in SD Options tab that automatically keeps going to the next floor up to a certain floor',u="";break;case $.AutoBuyPowerups:s="Auto Buy Powerups",a='Unlocks the "Auto Buy Powerups" toggle in SD Options tab that automatically buys powerups randomly',u="Buys random powerups "+h.percent(t)+" times every floor";break;case $.AutoUseRefreshTicket:s="Auto Use Refresh Tickets",a='Unlocks the "Auto Use Refresh Tickets" toggle in SD Options tab that automatically uses an Entry Cost Refresh Ticket when the entry cost exceeds a certain amount',u="";break;case $.SDChallengeBossDamageMultiplier:s="SD Challenge Boss Damage Multiplier",a="Multiplies SD Challenge Boss Damage Multiplier",u="by "+h.percent(t+1);break;case $.GoldCap:s="Gold Cap",a="Multiplies Gold Cap",u="by "+h.percent(t);break;case $.SlimeCoinCap:s="Slime Coin Cap",a="Multiplies Slime Coin Cap",u="by "+h.percent(t);break;case $.HPMultiplier:s="HP Multiplier",a="Multiplies HP",u="by "+h.percent(t);break;case $.MPMultiplier:s="MP Multiplier",a="Multiplies MP",u="by "+h.percent(t);break;case $.ATKMultiplier:s="ATK Multiplier",a="Multiplies ATK",u="by "+h.percent(t);break;case $.MATKMultiplier:s="MATK Multiplier",a="Multiplies MATK",u="by "+h.percent(t);break;case $.DEFMultiplier:s="DEF Multiplier",a="Multiplies DEF",u="by "+h.percent(t);break;case $.MDEFMultiplier:s="MDEF Multiplier",a="Multiplies MDEF",u="by "+h.percent(t);break;case $.SPDMultiplier:s="SPD Multiplier",a="Multiplies SPD",u="by "+h.percent(t);break;case $.PhysicalCriticalChanceMul:s=this.Stat(A.PhysCritChance)+" Multiplier",a="Multiplies "+this.Stat(A.PhysCritChance),u="by "+h.percent(t);break;case $.MagicalCriticalChanceMul:s=this.Stat(A.MagCritChance)+" Multiplier",a="Multiplies "+this.Stat(A.MagCritChance),u="by "+h.percent(t);break;case $.CriticalDamageMul:s=this.Stat(A.CriticalDamage)+" Multiplier",a="Multiplies "+this.Stat(A.CriticalDamage),u="by "+h.percent(t);break;case $.DebuffResistanceMul:s=this.Stat(A.DebuffRes)+" Multiplier",a="Multiplies "+this.Stat(A.DebuffRes),u="by "+h.percent(t);break;case $.PetPhysicalCriticalChanceMul:s=this.Stat(A.PetPhysCritChance)+" Multiplier",a="Multiplies "+this.Stat(A.PetPhysCritChance),u="by "+h.percent(t);break;case $.PetMagicalCriticalChanceMul:s=this.Stat(A.PetMagCritChance)+" Multiplier",a="Multiplies "+this.Stat(A.PetMagCritChance),u="by "+h.percent(t);break;case $.PetCriticalDamageMul:s=this.Stat(A.PetCriticalDamage)+" Multiplier",a="Multiplies "+this.Stat(A.PetCriticalDamage),u="by "+h.percent(t);break;case $.PetDebuffResistanceMul:s=this.Stat(A.PetDebuffResistance)+" Multiplier",a="Multiplies "+this.Stat(A.PetDebuffResistance),u="by "+h.percent(t);break;case $.ElementResistanceMultiplier:s="Element Resistance Multiplier",a="Multiplies All Resistance",u="by "+h.percent(t);break;case $.PhysicalDamageMultiplier:s="Physical Damage Multiplier",a="Multiplies Physical Damage",u="by "+h.percent(t);break;case $.MagicalDamageMultiplier:s="Magical Damage Multiplier",a="Multiplies Magical Damage",u="by "+h.percent(t);break;case $.ArmoredFuryMultiplier:s=this.Stat(A.ArmoredFury)+" Multiplier",a="Multiplies "+this.Stat(A.ArmoredFury),u="by "+h.percent(t);break;case $.WardedFuryMultiplier:s=this.Stat(A.WardedFury)+" Multiplier",a="Multiplies "+this.Stat(A.WardedFury),u="by "+h.percent(t);break;case $.DamageToRegularMonstersMultiplier:s="Damage to Regular Monsters",a="Multiplies Damage to Regular Monsters",u="by "+h.percent(t);break;case $.DamageToChallengeBossMultiplier:s="Damage to Challenge Boss",a="Multiplies Damage to Challenge Boss",u="by "+h.percent(t);break;case $.HeroExpGainMul:s="Hero EXP Gain",a="Multiplies Hero EXP Gain",u="by "+h.percent(t);break;case $.GoldGainMul:s="Gold Gain",a="Multiplies Gold Gain",u="by "+h.percent(t);break;case $.StoneGainMul:s="Stone Gain",a="Multiplies Stone Gain",u="by "+h.percent(t);break;case $.CrystalGainMul:s="Crystal Gain",a="Multiplies Crystal Gain",u="by "+h.percent(t);break;case $.LeafGainMul:s="Leaf Gain",a="Multiplies Leaf Gain",u="by "+h.percent(t);break;case $.SkillProficiencyGainMul:s=this.Stat(A.SkillProficiencyGain),a="Multiplies "+this.Stat(A.SkillProficiencyGain),u="by "+h.percent(t);break;case $.EquipmentProficiencyGainMul:s=this.Stat(A.EquipmentProficiencyGain),a="Multiplies "+this.Stat(A.EquipmentProficiencyGain),u="by "+h.percent(t);break;case $.GuildEXPGainMul:s="Guild EXP Gain",a="Multiplies Guild EXP Gain",u="by "+h.percent(t);break;case $.TownMatGainMul:s="Town Material Gain",a="Multiplies Town Material Gain",u="by "+h.percent(t);break;case $.TamingPointGainMul:s=this.Stat(A.TamingPointGain),a="Multiplies "+this.Stat(A.TamingPointGain),u="by "+h.percent(t);break;case $.PetEXPGainMul:s="Pet EXP Gain",a="Multiplies Pet EXP Gain",u="by "+h.percent(t);break;case $.LoyaltyPointGainMul:s="Loyalty Point Gain",a="Multiplies Loyalty Point Gain",u="by "+h.percent(t);break;case $.AlchemyPointGainMul:s="Alchemy Point Gain",a="Multiplies Alchemy Point Gain",u="by "+h.percent(t);break;case $.StoneResearchPowerMul:s="Stone Research Power",a="Multiplies Stone Research Power",u="by "+h.percent(t);break;case $.CrystalResearchPowerMul:s="Crystal Research Power",a="Multiplies Crystal Research Power",u="by "+h.percent(t);break;case $.LeafResearchPowerMul:s="Leaf Research Power",a="Multiplies Leaf Research Power",u="by "+h.percent(t);break;case $.SDUpgreadeSuperQueue:s="SD Upgrade Super Queue",a="SD Upgrade Available Super Queue",u="+ "+h.tDigit(t,0);break;case $.SDArmoredFury:s="SD Armored Fury",a="Increases SD Armored Fury",u="by "+h.percent(t);break;case $.SDWardedFury:s="SD Warded Fury",a="Increases SD Warded Fury",u="by "+h.percent(t);break;case $.PowerupFilterSlot:s="Powerup Filter Slot",a="Increase Powerup Filter Slot",u="by "+h.tDigit(t,0);break;case $.SDChallengeBossDamageCutMultiplier:s="SD Challenge Boss Damage Cut Multiplier",a="Multiplies SD Challenge Boss Damage Cut Multiplier",u="by "+h.percent(t+1);break;case $.BoostStartGoodRNG:s="Boost-Start of RNGesus's Favour",a="The Powerup [SD Damage Multiplier] will always show up at B1F Safe Zone",u="";break}return{name:s,description:a,value:u}}function jd(e){switch(e){case 27:return"Artifact Effect";case 57:return"SD Max Floor Reward Multiplier";case 58:return"Gold Cap";case 59:return"Gold Gain";case 60:return"Slime Coin Cap";case 61:return"Guild EXP Gain";case 62:return"Taming Point Gain";case 63:return"Loyalty Point Gain";case 64:return"Town Research Power";default:return e}}function Yd(e,t=0,s=0,a=0){switch(e){case 27:return h.percent(t)+' of "Equipment Effect" stats applies to Artifacts  ( + '+h.percent(s)+` / Lv )
- Current Equipment Effect for Artifacts : `+h.percent(a);case 57:return"Multiplies the SD Max Floor Reached Reward by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 58:return"Multiplies Gold Cap by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 59:return"Multiplies Gold Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 60:return"Multiplies Slime Coin Cap by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 61:return"Multiplies Guild EXP Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 62:return"Multiplies Taming Point Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 63:return"Multiplies Loyalty Point Gain by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";case 64:return"Multiplies Town Research Power by "+h.percent(t)+"  ( + "+h.percent(s)+" / Lv )";default:return h.percent(t)}}var et=(e=>(e[e.Sunstone=0]="Sunstone",e[e.Morganite=1]="Morganite",e[e.Tanzanite=2]="Tanzanite",e[e.Heliodor=3]="Heliodor",e[e.Peridot=4]="Peridot",e[e.Obsidian=5]="Obsidian",e[e.Amber=6]="Amber",e[e.Hackmanite=7]="Hackmanite",e[e.Turquoise=8]="Turquoise",e[e.Kunzite=9]="Kunzite",e[e.Carnelian=10]="Carnelian",e[e.BlueTourmaline=11]="BlueTourmaline",e[e.Diamond=12]="Diamond",e[e.Almandine=13]="Almandine",e[e.Emerald=14]="Emerald",e))(et||{});function Zd(e,t=0){let s,a;switch(e){case et.Sunstone:s="Sunstone",a="Multiplies Guild EXP Gain by "+h.percent(t+1);break;case et.Morganite:s="Morganite",a="Expands the limit of Hero Level increment at once (default: Lv+30) by "+h.tDigit(t,0);break;case et.Tanzanite:s="Tanzanite",a="Multiplies Stone Town Research Effect by "+h.percent(t);break;case et.Heliodor:s="Heliodor",a="Multiplies Crystal Town Research Effect by "+h.percent(t);break;case et.Peridot:s="Peridot",a="Multiplies Leaf Town Research Effect by "+h.percent(t);break;case et.Obsidian:s="Obsidian",a="Increases Monster Defeated # gain per defeat by "+h.tDigit(t,0);break;case et.Amber:s="Amber",a="Increases Dungeon Clear # and Clear Reward by "+h.tDigit(t,0);break;case et.Hackmanite:s="Hackmanite",a="Lowers the expedition minimum time (default: 15m) by "+h.secondsToDhms(t);break;case et.Turquoise:s="Turquoise",a="Reduce the efficiency penalty of longer expeditions - Current : [Hour]^"+h.tDigit(.85+t,3);break;case et.Kunzite:s="Kunzite",a="Expand the cap of Forging Effect [Equipment Effect +%] by "+h.percent(t);break;case et.Carnelian:s="Carnelian",a="Expand the cap of Forging Effect [Effect Incement / Lv +%] by "+h.percent(t);break;case et.BlueTourmaline:s="Blue Tourmaline",a="Expand the cap of Forging Effect [Equipment Level +] by "+h.tDigit(t,0);break;case et.Diamond:s="Diamond",a="Multiplies Talisman Passive Effect by "+h.percent(t+1);break;case et.Almandine:s="Almandine",a="Nitro Speed + "+h.tDigit(t,1)+"x";break;case et.Emerald:s="Emerald",a="Multiplies SD Powerups Permanent Effect by "+h.percent(t+1);break;default:s=e,a="";break}return{name:s,description:a}}function Qd(e){switch(e){case B.MinorHealthPotion:return"Minor Health Potion";case B.MinorRegenerationPoultice:return"Minor Regeneration Poultice";case B.MinorResourcePoultice:return"Minor Resource Poultice";case B.SlickShoeSolution:return"Slick Shoe Solution";case B.MinorManaRegenerationPoultice:return"Minor Mana Regeneration Poultice";case B.MaterialMultiplierMist:return"Material Multiplier Mist";case B.BasicElixirOfBrawn:return"Basic Elixir of Brawn";case B.BasicElixirOfBrains:return"Basic Elixir of Brains";case B.BasicElixirOfFortitude:return"Basic Elixir of Fortitude";case B.BasicElixirOfConcentration:return"Basic Elixir of Concentration";case B.BasicElixirOfUnderstanding:return"Basic Elixir of Understanding";case B.ChilledHealthPotion:return"Chilled Health Potion";case B.ChilledRegenerationPoultice:return"Chilled Regeneration Poultice";case B.FrostyDefensePotion:return"Frosty Defense Potion";case B.IcyAuraDraught:return"Ice Aura Draught";case B.SlightlyStickySalve:return"Slightly Sticky Salve";case B.SlickerShoeSolution:return"Slicker Shoe Solution";case B.CoolHeadOintment:return"Cool Head Ointment";case B.FrostySlayersOil:return"Frosty Slayer's Oil";case B.BurningDefensePotion:return"Burning Defense Potion";case B.BlazingAuraDraught:return"Blazing Aura Draught";case B.FierySlayersOil:return"Fiery Slayer's Oil";case B.ElectricDefensePotion:return"Electric Defense Potion";case B.WhirlingAuraDraught:return"Whirling Aura Draught";case B.ShockingSlayersOil:return"Shocking Slayer's Oil";case B.ThrowingNet:return"Throwing Net";case B.IceRope:return"Ice Net";case B.ThunderRope:return"Thunder Net";case B.FireRope:return"Fire Net";case B.LightRope:return"Light Net";case B.DarkRope:return"Dark Net";case B.GuildMembersEmblem:return"Guild Member's Emblem";case B.CertificateOfCompetence:return"Certificate of Competence";case B.MasonsTrowel:return"Mason's Trowel";case B.EnchantedAlembic:return"Enchanted Alembic";case B.TrackersMap:return"Tracker's Map";case B.BerserkersStone:return"Berserker's Stone";case B.TrappersTag:return"Trapper's Tag";case B.FlorzporbDoll:return"Florzporb Doll";case B.ArachnettaDoll:return"Arachnetta Doll";case B.GuardianKorDoll:return"Guardian Kor Doll";case B.SlimeBadge:return"Slime Badge";case B.MagicslimeBadge:return"Magicslime Badge";case B.SpiderBadge:return"Spider Badge";case B.BatBadge:return"Bat Badge";case B.FairyBadge:return"Fairy Badge";case B.FoxBadge:return"Fox Badge";case B.DevilfishBadge:return"Devilfish Badge";case B.TreantBadge:return"Treant Badge";case B.FlametigerBadge:return"Flametiger Badge";case B.UnicornBadge:return"Unicorn Badge";case B.AscendedFromIEH1:return"Proof of Ascension from IEH1";case B.WarriorsBadge:return"Warrior's Badge";case B.WizardsBadge:return"Wizard's Badge";case B.AngelsBadge:return"Angel's Badge";case B.ThiefsBadge:return"Thief's Badge";case B.ArchersBadge:return"Archer's Badge";case B.TamersBadge:return"Tamer's Badge";case B.NostroDoll:return"Nostro Doll";case B.LadyEmeldaDoll:return"Lady Emelda Doll";case B.NariSuneDoll:return"Nari Sune Doll";case B.OctobaddieDoll:return"Octobaddie Doll";case B.BananoonDoll:return"Bananoon Doll";case B.GlorbliorbusDoll:return"Glorbliorbus Doll";case B.DistortionSlimeDoll:return"Gankyū Doll";case B.AncientSlimeBadge:return"Ancient Slime Badge";case B.AncientMagicslimeBadge:return"Ancient Magicslime Badge";case B.AncientSpiderBadge:return"Ancient Spider Badge";case B.AncientBatBadge:return"Ancient Bat Badge";case B.AncientFairyBadge:return"Ancient Fairy Badge";case B.AncientFoxBadge:return"Ancient Fox Badge";case B.AncientDevilfishBadge:return"Ancient Devilfish Badge";case B.AncientTreantBadge:return"Ancient Treant Badge";case B.AncientFlametigerBadge:return"Ancient Flametiger Badge";case B.AncientUnicornBadge:return"Ancient Unicorn Badge";case B.AncientWarriorsBadge:return"Ancient Warrior's Badge";case B.AncientWizardsBadge:return"Ancient Wizard's Badge";case B.AncientAngelsBadge:return"Ancient Angel's Badge";case B.AncientThiefsBadge:return"Ancient Thief's Badge";case B.AncientArchersBadge:return"Ancient Archer's Badge";case B.AncientTamersBadge:return"Ancient Tamer's Badge";default:return B[e]}}var qe=(e=>(e[e.Brick=0]="Brick",e[e.Log=1]="Log",e[e.Shard=2]="Shard",e[e.PetRank=3]="PetRank",e[e.Equipment=4]="Equipment",e[e.PetExp=5]="PetExp",e[e.WalkDistance=6]="WalkDistance",e))(qe||{});function Kd(e,t=""){let s="",a="",u="",o="";switch(e.kind){case qe.Brick:s="Manufacturing Bricks",u=`Town Brick Buildings' level effect + ${h.percent(e.EffectValue())} ( + ${h.percent(e.passiveEffectValueIncrementPerLevel)} / Lv )`;break;case qe.Log:s="Logging Trees",u="Town Log Buildings' level effect + "+h.percent(e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case qe.Shard:s="Gathering Shards",u="Town Shard Buildings' level effect + "+h.percent(e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case qe.PetRank:s="Capturing Monsters",u="Multiply Taming Point Gain by "+h.percent(1+e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",o=t+"'s Taming Point";break;case qe.Equipment:s="Training Equipment",u="Multiply Equipment Proficiency Gain by "+h.percent(1+e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case qe.PetExp:s="Field Training",u="Multiply Pet EXP Gain from any expeditions by "+h.percent(1+e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",o=t+"'s Pet EXP";break;case qe.WalkDistance:s="Marathon Race",u="Walked Distance Gain from expeditions + "+h.percent(e.EffectValue())+"  ( + "+h.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",o=t+" Walked Distance";break}return{name:s,effect:a,passive:u,reward:o}}function e0(e,t=""){switch(e){case 0:return"The Slime Hideout";case 1:return"The Spider Underground Apartment";case 2:return"The Darkest Forest";case 3:return"The Burning Garden";case 4:return"The Kor Lecture Hall";default:return t}}function t0(e,t,s,a){switch(e){case Se.ReduceRequiredHeroLevel:return a?"Required Hero Grade of this equipment - "+h.tDigit(t):"Required Hero Level of this equipment - "+h.tDigit(t)+" (Max: "+h.tDigit(s)+")";case Se.ReduceRequiredAbility:return a?"Required Super Ability Point of this equipment - "+h.tDigit(t):"Required Ability Point of this equipment - "+h.tDigit(t)+" (Max: "+h.tDigit(s)+")";case Se.IncreaseProficiencyGain:return"Proficiency Gain of this equipment + "+h.percent(t)+" (Max: "+h.percent(s)+")";case Se.IncreaseEffect:return"This equipment's effect + "+h.percent(t)+" (Max: "+h.percent(s)+")";case Se.PurifyCurseEffect:return"Decrease this equipment's current negative effects by "+h.percent(t)+" (Max: "+h.percent(s)+")";case Se.IncreaseEffectIncrement:return"This equipment's effect increment per level + "+h.percent(t)+" (Max: "+h.percent(s)+")";case Se.EqLevel:return"This equipment's level + "+h.tDigit(t)+" (Max: "+h.tDigit(s)+")";default:return Se[e]}}function s0(e,t=!1){switch(e){case Se.ReduceRequiredHeroLevel:return t?"Hero Grade":"Hero Level";case Se.ReduceRequiredAbility:return t?"Required Super Ability":"Required Ability";case Se.IncreaseProficiencyGain:return"Proficiency Gain ";case Se.IncreaseEffect:return"Equipment Effect";case Se.PurifyCurseEffect:return"Purify of Cursed Effect";case Se.IncreaseEffectIncrement:return"Effect Increment / Lv";case Se.EqLevel:return"Equipment Level";default:return e}}var Be=(e=>(e[e.MonsterFluid=0]="MonsterFluid",e[e.FlameShard=1]="FlameShard",e[e.FrostShard=2]="FrostShard",e[e.LightningShard=3]="LightningShard",e[e.NatureShard=4]="NatureShard",e[e.PoisonShard=5]="PoisonShard",e[e.BlackPearl=6]="BlackPearl",e[e.OilOfSlime=7]="OilOfSlime",e[e.EnchantedCloth=8]="EnchantedCloth",e[e.SpiderSilk=9]="SpiderSilk",e[e.BatWing=10]="BatWing",e[e.FairyDust=11]="FairyDust",e[e.FoxTail=12]="FoxTail",e[e.FishScales=13]="FishScales",e[e.CarvedBranch=14]="CarvedBranch",e[e.ThickFur=15]="ThickFur",e[e.UnicornHorn=16]="UnicornHorn",e[e.SlimeBall=17]="SlimeBall",e[e.ManaSeed=18]="ManaSeed",e[e.UnmeltingIce=19]="UnmeltingIce",e[e.EternalFlame=20]="EternalFlame",e[e.AncientBattery=21]="AncientBattery",e[e.Ectoplasm=22]="Ectoplasm",e[e.Stardust=23]="Stardust",e[e.VoidEgg=24]="VoidEgg",e[e.EnchantedShard=25]="EnchantedShard",e))(Be||{});function i0(e){switch(e){case Be.MonsterFluid:return"Monster Fluid";case Be.FlameShard:return"Flame Shard";case Be.FrostShard:return"Frost Shard";case Be.LightningShard:return"Lightning Shard";case Be.NatureShard:return"Nature Shard";case Be.PoisonShard:return"Poison Shard";case Be.BlackPearl:return"Black Pearl";case Be.OilOfSlime:return"Oil of Slime";case Be.EnchantedCloth:return"Magical Cloth";case Be.SpiderSilk:return"Spider Silk";case Be.BatWing:return"Bat Wing";case Be.FairyDust:return"Fairy Dust";case Be.FoxTail:return"Fox Tail";case Be.FishScales:return"Fish Scales";case Be.CarvedBranch:return"Carved Branch";case Be.ThickFur:return"Thick Fur";case Be.UnicornHorn:return"Unicorn Horn";case Be.SlimeBall:return"Slime Ball";case Be.ManaSeed:return"Mana Seed";case Be.UnmeltingIce:return"Unmelting Ice";case Be.EternalFlame:return"Eternal Flame";case Be.AncientBattery:return"Ancient Battery";case Be.Ectoplasm:return"Ectoplasm";case Be.Stardust:return"Stardust";case Be.VoidEgg:return"Void Egg";case Be.EnchantedShard:return"Enchanted Shard";default:return e}}function r0(e,t,s=!1,a=0,u=!1){let o;switch(e){case r.Nothing:if(u)return"";o=s?"Enchant Slot + "+h.tDigit(t):"[Enchant Available]";break;case r.HPAdder:if(u)return h.tDigit(t,1);if(o="HP + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MPAdder:if(u)return h.tDigit(t,1);if(o="MP + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.ATKAdder:if(u)return h.tDigit(t,1);if(o="ATK + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MATKAdder:if(u)return h.tDigit(t,1);if(o="MATK + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.DEFAdder:if(u)return h.tDigit(t,1);if(o="DEF + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MDEFAdder:if(u)return h.tDigit(t,1);if(o="MDEF + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.SPDAdder:if(u)return h.tDigit(t,1);if(t<0){if(o="SPD <span class='red'>"+h.tDigit(t,1)+"</span>",a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break}if(o="SPD + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.HPMultiplier:if(u)return h.percent(t);if(o="HP + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MPMultiplier:if(u)return h.percent(t);if(t<0){if(o="MP <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break}if(o="MP + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ATKMultiplier:if(u)return h.percent(t);if(t<0){if(o="ATK <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break}if(o="ATK + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MATKMultiplier:if(u)return h.percent(t);if(t<0){if(o="MATK <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break}if(o="MATK + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DEFMultiplier:if(u)return h.percent(t);if(t<0){if(o="DEF <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break}if(o="DEF + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MDEFMultiplier:if(u)return h.percent(t);if(t<0){if(o="MDEF <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break}if(o="MDEF + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ATKPropotion:if(u)return h.percent(t);if(o="ATK + "+h.percent(t)+" of Hero Level",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MATKPropotion:if(u)return h.percent(t);if(o="MATK + "+h.percent(t)+" of Hero Level",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DEFPropotion:if(u)return h.percent(t);if(o="DEF + "+h.percent(t)+" of Hero Level",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MDEFPropotion:if(u)return h.percent(t);if(o="MDEF + "+h.percent(t)+" of Hero Level",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FireResistance:if(u)return h.percent(t);if(o="Fire Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.IceResistance:if(u)return h.percent(t);if(o="Ice Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ThunderResistance:if(u)return h.percent(t);if(o="Thunder Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LightResistance:if(u)return h.percent(t);if(o="Light Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DarkResistance:if(u)return h.percent(t);if(o="Dark Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.PhysicalAbsorption:if(u)return h.percent(t);if(o="Physical Absorption + "+h.percent(t)+" of received damage",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FireAbsorption:if(u)return h.percent(t);if(o="Fire Absorption + "+h.percent(t)+" of received damage",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.IceAbsorption:if(u)return h.percent(t);if(o="Ice Absorption + "+h.percent(t)+" of received damage",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ThunderAbsorption:if(u)return h.percent(t);if(o="Thunder Absorption + "+h.percent(t)+" of received damage",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LightAbsorption:if(u)return h.percent(t);if(o="Light Absorption + "+h.percent(t)+" of received damage",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DarkAbsorption:if(u)return h.percent(t);if(o="Dark Absorption + "+h.percent(t)+" of received damage",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DebuffResistance:if(u)return h.percent(t);if(o=t>=0?"Debuff Resistance + "+h.percent(t):"Debuff Resistance <span class='red'> "+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.EquipmentDropChance:if(u)return h.percent(t,4);if(o="Equipment Drop Chance + "+h.percent(t,4),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.SlimeDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.OilOfSlime)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.MagicSlimeDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.EnchantedCloth)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.SpiderDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.SpiderSilk)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.BatDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.BatWing)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.FairyDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.FairyDust)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.FoxDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.FoxTail)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.DevilFishDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.FishScales)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.TreantDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.CarvedBranch)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.FlameTigerDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.ThickFur)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.UnicornDropChance:if(u)return h.percent(t,3);if(o=$e.Material(Be.UnicornHorn)+" Drop Chance (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.ColorMaterialDropChance:if(u)return h.percent(t,4);if(o="Rare Material Drop Chance (Global) + "+h.percent(t,4),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.PhysicalCritical:if(u)return h.percent(t);if(o="Physical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MagicalCritical:if(u)return h.percent(t);if(o="Magical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.EXPGain:if(u)return h.percent(t);if(o=t>=0?"EXP Gain + "+h.percent(t):"EXP Gain <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.SkillProficiency:if(u)return h.percent(t);if(o=t>=0?"Skill Proficiency Gain + "+h.percent(t):"Skill Proficiency Gain <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.EquipmentProficiency:if(u)return h.percent(t);if(o=t>=0?"Equipment Proficiency Gain + "+h.percent(t):"Equipment Proficiency Gain <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MoveSpeedMultiplier:if(u)return h.percent(t);if(t<0){if(o="Move Speed <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break}if(o="Move Speed + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.GoldGain:if(u)return h.percent(t);if(o=t>=0?"Gold Gain (Global) + "+h.percent(t):"Gold Gain (Global) <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.StoneGain:if(u)return h.percent(t);if(o="Stone Gain (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.CrystalGain:if(u)return h.percent(t);if(o="Crystal Gain (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LeafGain:if(u)return h.percent(t);if(o="Leaf Gain (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.WarriorSkillLevel:if(u)return h.tDigit(t,1);if(o="Warrior Skill Level (Global) + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.WizardSkillLevel:if(u)return h.tDigit(t,1);if(o="Wizard Skill Level (Global) + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.AngelSkillLevel:if(u)return h.tDigit(t,1);if(o="Angel Skill Level (Global) + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.ThiefSkillLevel:if(u)return h.tDigit(t,1);if(o="Thief Skill Level (Global) + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.ArcherSkillLevel:if(u)return h.tDigit(t,1);if(o="Archer Skill Level (Global) + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.TamerSkillLevel:if(u)return h.tDigit(t,1);if(o="Tamer Skill Level (Global) + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.AllSkillLevel:if(u)return h.tDigit(t,1);if(o=t>=0?"All Skill Level (Global) + "+h.tDigit(t,1):"All Skill Level (Global) <span class='red'>"+h.tDigit(t,1)+"</span>",a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.SlimeKnowledge:if(u)return h.percent(t);if(o="Damage to Slime + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MagicSlimeKnowledge:if(u)return h.percent(t);if(o="Damage to Magicslime + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.SpiderKnowledge:if(u)return h.percent(t);if(o="Damage to Spider + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.BatKnowledge:if(u)return h.percent(t);if(o="Damage to Bat + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FairyKnowledge:if(u)return h.percent(t);if(o="Damage to Fairy + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FoxKnowledge:if(u)return h.percent(t);if(o="Damage to Fox + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DevilFishKnowledge:if(u)return h.percent(t);if(o="Damage to Devilfish + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.TreantKnowledge:if(u)return h.percent(t);if(o="Damage to Treant + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FlameTigerKnowledge:if(u)return h.percent(t);if(o="Damage to Flametiger + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.UnicornKnowledge:if(u)return h.percent(t);if(o="Damage to Unicorn + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.PhysicalDamage:if(u)return h.percent(t);if(o="Physical Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FireDamage:if(u)return h.percent(t);if(o="Fire Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.IceDamage:if(u)return h.percent(t);if(o="Ice Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ThunderDamage:if(u)return h.percent(t);if(o="Thunder Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LightDamage:if(u)return h.percent(t);if(o="Light Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DarkDamage:if(u)return h.percent(t);if(o="Dark Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.HpRegen:if(u)return h.tDigit(t,2);if(o="HP Regeneration + "+h.tDigit(t,2)+" / sec",a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MpRegen:if(u)return h.tDigit(t,2);if(o="MP Regeneration + "+h.tDigit(t,2)+" / sec",a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.TamingPoint:if(u)return h.percent(t);if(o=t>=0?"Taming Point Gain + "+h.percent(t):"Taming Point Gain <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.WarriorSkillRange:if(u)return h.percent(t,3);if(o="Warrior's Class Skills Range (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.WizardSkillRange:if(u)return h.percent(t,3);if(o="Wizard's Class Skills Range (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.AngelSkillRange:if(u)return h.percent(t,3);if(o="Angel's Class Skills Range (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.ThiefSkillRange:if(u)return h.percent(t,3);if(o="Thief's Class Skills Range (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.ArcherSkillRange:if(u)return h.percent(t,3);if(o="Archer's Class Skills Range (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.TamerSkillRange:if(u)return h.percent(t,3);if(o="Tamer's Class Skills Range (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.TownMatGain:if(u)return h.percent(t);if(o="Town Material Gain + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.TownMatAreaClearGain:if(u)return h.tDigit(t,1);if(o="Town Material Gain from Area Clear + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.RebirthPointGain1:if(u)return h.percent(t);if(o="Tier 1 Rebirth Point Gain + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.RebirthPointGain2:if(u)return h.percent(t);if(o="Tier 2 Rebirth Point Gain + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.RebirthPointGain3:if(u)return h.percent(t);if(o="Tier 3 Rebirth Point Gain + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.CriticalDamage:if(u)return h.percent(t);if(o="Critical Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.BlessingEffect:if(u)return h.percent(t);if(o="Blessing Effect + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MoveSpeedAdder:if(u)return h.meter(t);if(o=t>=0?"Move Speed + "+h.meter(t):"Move Speed <span class='red'>"+h.meter(t)+"</span>",a>0){o=o+" ( + "+h.meter(a)+" / Lv )";break}break;case r.PetEXPGain:if(u)return h.percent(t);if(o="Pet EXP Gain + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LoyaltyPointGain:if(u)return h.percent(t);if(o=t>=0?"Loyalty Point Gain + "+h.percent(t):"Loyalty Point Gain <span class='red'>"+h.percent(t)+"</span>",a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.CatalystDoubleCriticalChance:if(u)return h.percent(t);if(o="Catalyst Double Critical Chance (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.WarriorSkillEffectRange:if(u)return h.percent(t,3);if(o="Warrior's Class Skills Area of Effect (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.WizardSkillEffectRange:if(u)return h.percent(t,3);if(o="Wizard's Class Skills Area of Effect (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.AngelSkillEffectRange:if(u)return h.percent(t,3);if(o="Angel's Class Skills Area of Effect (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.ThiefSkillEffectRange:if(u)return h.percent(t,3);if(o="Thief's Class Skills Area of Effect (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.ArcherSkillEffectRange:if(u)return h.percent(t,3);if(o="Archer's Class Skills Area of Effect (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.TamerSkillEffectRange:if(u)return h.percent(t,3);if(o="Tamer's Class Skills Area of Effect (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.HpRegenMultiplier:if(u)return h.percent(t,3);if(o="HP Regeneration / sec + "+h.percent(t,3)+" of Max HP",a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.MpRegenMultiplier:if(u)return h.percent(t,3);if(o="MP Regeneration / sec + "+h.percent(t,3)+" of Max MP",a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.ArmoredFury:if(u)return h.percent(t,3);if(o="Armored Fury + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.WardedFury:if(u)return h.percent(t,3);if(o="Warded Fury + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.PetPhysicalCriticalChance:if(u)return h.percent(t);if(o="Pet Physical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.PetMagicalCriticalChance:if(u)return h.percent(t);if(o="Pet Magical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.PetCriticalDamage:if(u)return h.percent(t);if(o="Pet Critical Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.PetDebuffResistance:if(u)return h.percent(t);if(o="Pet Debuff Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.StoneTownResearchPower:if(u)return h.percent(t);if(o="Stone Research Power (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.CrystalTownResearchPower:if(u)return h.percent(t);if(o="Crystal Research Power (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LeafTownResearchPower:if(u)return h.percent(t);if(o="Leaf Research Power (Global) + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.GuildEXPGain:if(u)return h.percent(t,3);if(o="Guild EXP Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.SPDMultiplier:if(u)return h.percent(t,3);if(o="SPD + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.CriticalDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Critical Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.SkillProficiencyMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Skill Proficiency Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.EquipmentProficiencyMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Equipment Proficiency Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.EXPGainMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative EXP Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.GoldGainMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Gold Gain (Global) + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.PhysicalDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Physical Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.FireDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Fire Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.IceDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Ice Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.ThunderDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Thunder Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.LightDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Light Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.DarkDamageMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Dark Damage + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.TamingPointMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Taming Point Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.PetEXPGainMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Pet EXP Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.LoyaltyPointGainMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Loyalty Point Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.BlessingEffectMultiplier:if(u)return h.percent(t,3);if(o="Multiplicative Blessing Effect + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.PhysicalCriticalMultiplier:if(u)return h.percent(t);if(o="Multiplicative Physical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MagicalCriticalMultiplier:if(u)return h.percent(t);if(o="Multiplicative Magical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ChallengeBossKnowledge:if(u)return h.percent(t);if(o="Damage to Challenge Boss + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.HPAfter:if(u)return h.tDigit(t,1);if(o="After HP + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MPAfter:if(u)return h.tDigit(t,1);if(o="After MP + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.ATKAfter:if(u)return h.tDigit(t,1);if(o="After ATK + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MATKAfter:if(u)return h.tDigit(t,1);if(o="After MATK + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.DEFAfter:if(u)return h.tDigit(t,1);if(o="After DEF + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MDEFAfter:if(u)return h.tDigit(t,1);if(o="After MDEF + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.SPDAfter:if(u)return h.tDigit(t,1);if(o="After SPD + "+h.tDigit(t,1),a>0){o=o+" ( + "+h.tDigit(a,2)+" / Lv )";break}break;case r.MoveSpeedAfter:if(u)return h.meter(t);if(o="After Move Speed + "+h.meter(t)+" / sec",a>0){o=o+" ( + "+h.meter(a)+" / Lv )";break}break;case r.PhysicalCriticalAfter:if(u)return h.percent(t);if(o="After Physical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MagicalCriticalAfter:if(u)return h.percent(t);if(o="After Magical Critical Chance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.CriticalDamageAfter:if(u)return h.percent(t);if(o="After Critical Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DebuffResistanceAfter:if(u)return h.percent(t);if(o="After Debuff Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.PhysicalDamageAfter:if(u)return h.percent(t);if(o="After Physical Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FireDamageAfter:if(u)return h.percent(t);if(o="After Fire Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.IceDamageAfter:if(u)return h.percent(t);if(o="After Ice Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ThunderDamageAfter:if(u)return h.percent(t);if(o="After Thunder Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LightDamageAfter:if(u)return h.percent(t);if(o="After Light Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DarkDamageAfter:if(u)return h.percent(t);if(o="After Dark Damage + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FireResistanceAfter:if(u)return h.percent(t);if(o="After Fire Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.IceResistanceAfter:if(u)return h.percent(t);if(o="After Ice Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ThunderResistanceAfter:if(u)return h.percent(t);if(o="After Thunder Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.LightResistanceAfter:if(u)return h.percent(t);if(o="After Light Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DarkResistanceAfter:if(u)return h.percent(t);if(o="After Dark Resistance + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.SlimeKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Slime + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.MagicSlimeKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Magicslime + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.SpiderKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Spider + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.BatKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Bat + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FairyKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Fairy + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FoxKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Fox + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.DevilFishKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Devilfish + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.TreantKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Treant + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FlameTigerKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Flametiger + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.UnicornKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Unicorn + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.ChallengeBossKnowledgeAfter:if(u)return h.percent(t);if(o="After Damage to Challenge Boss + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.SDDamageMultiplier:if(u)return h.percent(t);if(o="SD Damage Multiplier + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.SDDamageCutMultiplier:if(u)return h.percent(t);if(o="SD Damage Cut Multiplier + "+h.percent(t),a>0){o=o+" ( + "+h.percent(a)+" / Lv )";break}break;case r.FameGain:if(u)return h.percent(t);if(o="Fame Gain + "+h.percent(t,3),a>0){o=o+" ( + "+h.percent(a,3)+" / Lv )";break}break;case r.DungeonCoinGain:if(u)return h.percent(t);if(o="Dungeon Coin Gain + "+h.percent(t,4),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;case r.ExtraAfterDamage:if(u)return h.percent(t);if(o="Extra After Damage + "+h.percent(t,4),a>0){o=o+" ( + "+h.percent(a,4)+" / Lv )";break}break;default:if(u)return h.tDigit(t);o=e+" + "+h.tDigit(t);break}return o}function a0(e,t,s=!1){switch(e){case B.MinorHealthPotion:return"Restores HP + "+h.tDigit(t);case B.MinorRegenerationPoultice:return"HP Regenerate + "+h.tDigit(t,2)+" / sec";case B.MinorResourcePoultice:return"Resource Gain (Global) + "+h.percent(t);case B.SlickShoeSolution:return"Move Speed + "+h.percent(t);case B.MinorManaRegenerationPoultice:return"MP Regenerate + "+h.tDigit(t,2)+" / sec";case B.MaterialMultiplierMist:return"Increases dropped amount of materials by "+h.tDigit(t);case B.BasicElixirOfBrawn:return"Physical Damage + "+h.percent(t);case B.BasicElixirOfBrains:return"Magical Damage + "+h.percent(t);case B.BasicElixirOfFortitude:return"HP + "+h.tDigit(t);case B.BasicElixirOfConcentration:return"MP + "+h.tDigit(t);case B.BasicElixirOfUnderstanding:return"Skill Proficiency Gain + "+h.percent(t);case B.ChilledHealthPotion:return"Restores HP + "+h.tDigit(t);case B.ChilledRegenerationPoultice:return"HP Regenerate + "+h.tDigit(t,2)+" / sec";case B.FrostyDefensePotion:return"Ice Resistance + "+h.percent(t);case B.IcyAuraDraught:return"Generates an aura of cold around hero that has "+h.percent(t)+" chance every second to give monsters SPD Down debuff";case B.SlightlyStickySalve:return"Gold Gain (Global) + "+h.percent(t);case B.SlickerShoeSolution:return"Move Speed + "+h.percent(t);case B.CoolHeadOintment:return"EXP Gain + "+h.percent(t);case B.FrostySlayersOil:return"Changes skills' damage type to Ice and adds extra "+h.percent(t)+" ice damage";case B.BurningDefensePotion:return"Fire Resistance + "+h.percent(t);case B.BlazingAuraDraught:return"Generates an aura of fire around hero that has "+h.percent(t)+" chance every second to knockback monsters";case B.FierySlayersOil:return"Changes skills' damage type to Fire and adds extra "+h.percent(t)+" fire damage";case B.ElectricDefensePotion:return"Thunder Resistance + "+h.percent(t);case B.WhirlingAuraDraught:return"Generates an aura of thunder around hero that has "+h.percent(t)+" chance every second to give monsters Electric debuff";case B.ShockingSlayersOil:return"Changes skills' damage type to Thunder and adds extra "+h.percent(t)+" thunder damage";case B.ThrowingNet:return"Right-click to capture Normal Type monsters";case B.IceRope:return"Right-click to capture Blue Type monsters";case B.ThunderRope:return"Right-click to capture Yellow Type monsters";case B.FireRope:return"Right-click to capture Red Type monsters";case B.LightRope:return"Right-click to capture Green Type monsters";case B.DarkRope:return"Right-click to capture Purple Type monsters";case B.GuildMembersEmblem:return s?"Reduces Guild EXP requirement to level by "+h.percent(t):"Multiplies Guild EXP Gain by "+h.percent(1+t);case B.CertificateOfCompetence:return s?"Multiplies Skill Proficiency Gain by "+h.percent(1+t):"Reduces Skill's Cast Time by "+h.percent(t);case B.MasonsTrowel:return s?"Increases Town Building's level effect by "+h.percent(t):"Increases Town Material Gain by "+h.percent(t);case B.EnchantedAlembic:return s?"Mysterious Water Gain + "+h.tDigit(t)+" / sec":"Potion Effect (Global) + "+h.percent(t);case B.TrackersMap:return s?"Epic Swarm Chance + "+h.percent(t)+" instead of Large Swarm":"Increases Area Clear # and Clear Reward by "+h.tDigit(t,1);case B.BerserkersStone:return s?"Equipment Effect + "+h.percent(t):"Multiplicative Damage to Challenge Boss by "+h.percent(t);case B.TrappersTag:return s?"Multiplies Taming Point Gain by "+h.percent(1+t):"Triple Capture Chance + "+h.percent(t);case B.FlorzporbDoll:return s?"Multiplies Gold Gain by "+h.percent(1+t):"Gives additional Slime Ball attack to Base Attack Skill with "+h.percent(t)+" damage";case B.ArachnettaDoll:return s?"Gold Cap + "+h.percent(t):"Gives Poison debuff to Base Attack Skill with "+h.percent(Math.min(1,t))+" chance";case B.GuardianKorDoll:return s?"Multiplies Equipment Proficiency Gain by "+h.percent(1+t):"If damage taken "+h.percent(Math.min(.25,t))+" or less of HP, nullifies it (Max:25%)";case B.SlimeBadge:return s?"HP + "+h.tDigit(t,1):"HP + "+h.percent(t);case B.MagicslimeBadge:return s?"MDEF + "+h.tDigit(t,1):"MDEF + "+h.percent(t);case B.SpiderBadge:return s?"DEF + "+h.tDigit(t,1):"DEF + "+h.percent(t);case B.BatBadge:return s?"ATK + "+h.tDigit(t,1):"ATK + "+h.percent(t);case B.FairyBadge:return s?"MATK + "+h.tDigit(t,1):"MATK + "+h.percent(t);case B.FoxBadge:return s?"MP + "+h.tDigit(t,1):"MP + "+h.percent(t);case B.DevilfishBadge:return s?"Stone Gain + "+h.percent(t):"Move Speed + "+h.percent(t);case B.TreantBadge:return s?"Crystal Gain + "+h.percent(t):"EXP Gain + "+h.percent(t);case B.FlametigerBadge:return s?"Leaf Gain + "+h.percent(t):"Equipment Proficiency Gain + "+h.percent(t);case B.UnicornBadge:return s?"SPD + "+h.tDigit(t,1):"SPD + "+h.percent(t);case B.AscendedFromIEH1:return s?"Nothing":"Multiplies EXP Gain by "+h.percent(1+t);case B.WarriorsBadge:return s?"Reduces Warrior's Skill Rank Cost by "+h.percent(t):"Multiplies Physical Critical Chance by "+h.percent(1+t);case B.WizardsBadge:return s?"Reduces Wizard's Skill Rank Cost by "+h.percent(t):"Multiplies Magical Critical Chance by "+h.percent(1+t);case B.AngelsBadge:return s?"Reduces Angel's Skill Rank Cost by "+h.percent(t):"Multiplies Skill Proficiency Gain by "+h.percent(1+t);case B.ThiefsBadge:return s?"Reduces Thief's Skill Rank Cost by "+h.percent(t):"Multiplies Equipment Drop Chance by "+h.percent(1+t);case B.ArchersBadge:return s?"Reduces Archer's Skill Rank Cost by "+h.percent(t):"Multiplies Critical Damage by "+h.percent(1+t);case B.TamersBadge:return s?"Reduces Tamer's Skill Rank Cost by "+h.percent(t):"Multiplies Pet EXP Gain by "+h.percent(1+t);case B.NostroDoll:return s?"Physical Absorption + "+h.percent(t):"Increase MP Regeneration / sec by "+h.percent(t)+" of Max MP";case B.LadyEmeldaDoll:return s?"Magical Absorption + "+h.percent(t):"Damage-Type Skill's damage + "+h.percent(t)+" along with its MP Consumption increasing + "+h.percent(4*t);case B.NariSuneDoll:return s?"Large Swarm Chance + "+h.percent(t)+" instead of Regular Swarm":"Skill's Range + "+h.percent(t);case B.OctobaddieDoll:return s?"Slime Coin Gain + "+h.percent(t):"Skill's Area of Effect + "+h.percent(t);case B.AncientSlimeBadge:return s?"After Damage to Slime + "+h.percent(t):"Multiplicative Damage to Slime + "+h.percent(t);case B.AncientMagicslimeBadge:return s?"After Damage to Magicslime + "+h.percent(t):"Multiplicative Damage to Magicslime + "+h.percent(t);case B.AncientSpiderBadge:return s?"After Damage to Spider + "+h.percent(t):"Multiplicative Damage to Spider + "+h.percent(t);case B.AncientBatBadge:return s?"After Damage to Bat + "+h.percent(t):"Multiplicative Damage to Bat + "+h.percent(t);case B.AncientFairyBadge:return s?"After Damage to Fairy + "+h.percent(t):"Multiplicative Damage to Fairy + "+h.percent(t);case B.AncientFoxBadge:return s?"After Damage to Fox + "+h.percent(t):"Multiplicative Damage to Fox + "+h.percent(t);case B.AncientDevilfishBadge:return s?"After Damage to Devilfish + "+h.percent(t):"Multiplicative Damage to Devilfish + "+h.percent(t);case B.AncientTreantBadge:return s?"After Damage to Treant + "+h.percent(t):"Multiplicative Damage to Treant + "+h.percent(t);case B.AncientFlametigerBadge:return s?"After Damage to Flametiger + "+h.percent(t):"Multiplicative Damage to Flametiger + "+h.percent(t);case B.AncientUnicornBadge:return s?"After Damage to Unicorn + "+h.percent(t):"Multiplicative Damage to Unicorn + "+h.percent(t);case B.AncientWarriorsBadge:return s?"SD Damage Multiplier + "+h.percent(t):"Multiplies Physical Damage by "+h.percent(1+t);case B.AncientWizardsBadge:return s?"SD Challenge Boss Damage Multiplier "+h.percent(t):"Multiplies Magical Damage by "+h.percent(1+t);case B.AncientAngelsBadge:return s?"SD Damage Cut Multiplier + "+h.percent(t):"Multiplies Equipment Proficiency Gain by "+h.percent(1+t);case B.AncientThiefsBadge:return s?"SD Armored Fury + "+h.percent(t):"Multiplies Armored Fury by "+h.percent(1+t);case B.AncientArchersBadge:return s?"SD Warded Fury + "+h.percent(t):"Multiplies Warded Fury by "+h.percent(1+t);case B.AncientTamersBadge:return s?"Dungeon Coin Gain + "+h.percent(t):"Multiplies Taming Point Gain by "+h.percent(1+t);default:return"Nothing"}}var be=(e=>(e[e.Nothing=0]="Nothing",e[e.Health=1]="Health",e[e.HealthRegen=2]="HealthRegen",e[e.ResourceGain=3]="ResourceGain",e[e.Move=4]="Move",e[e.Mana=5]="Mana",e[e.ManaRegen=6]="ManaRegen",e[e.MaterialGain=7]="MaterialGain",e[e.PhysicalDamage=8]="PhysicalDamage",e[e.MagicalDamage=9]="MagicalDamage",e[e.MaxHP=10]="MaxHP",e[e.MaxMP=11]="MaxMP",e[e.SkillProfGain=12]="SkillProfGain",e[e.ElementResistance=13]="ElementResistance",e[e.Aura=14]="Aura",e[e.GoldGain=15]="GoldGain",e[e.ExpGain=16]="ExpGain",e[e.SlayerOil=17]="SlayerOil",e[e.Trap=18]="Trap",e[e.Talisman=19]="Talisman",e))(be||{});function n0(e){switch(e){case be.Health:return"Health";case be.HealthRegen:return"Health Regen";case be.ResourceGain:return"Resource";case be.Move:return"Move";case be.Mana:return"Mana";case be.ManaRegen:return"Mana Regen";case be.MaterialGain:return"Material";case be.PhysicalDamage:return"Physical Damage";case be.MagicalDamage:return"Magical Damage";case be.MaxHP:return"Max HP";case be.MaxMP:return"Max MP";case be.SkillProfGain:return"Skill Proficiency";case be.ElementResistance:return"Element Resistance";case be.Aura:return"Aura";case be.GoldGain:return"Gold";case be.ExpGain:return"EXP";case be.SlayerOil:return"Slayer Oil";case be.Trap:return"Trap";case be.Talisman:return"Talisman";default:return"Nothing"}}var ps=(e=>(e[e.WingAttack=0]="WingAttack",e[e.WingShoot=1]="WingShoot",e[e.Heal=2]="Heal",e[e.GodBless=3]="GodBless",e[e.MuscleInflation=4]="MuscleInflation",e[e.MagicImpact=5]="MagicImpact",e[e.ProtectWall=6]="ProtectWall",e[e.Haste=7]="Haste",e[e.WingStorm=8]="WingStorm",e[e.HolyArch=9]="HolyArch",e))(ps||{});function l0(e){switch(e){case ps.WingAttack:return"Wing Attack";case ps.WingShoot:return"Wing Shoot";case ps.Heal:return"Heal";case ps.GodBless:return"God Bless";case ps.MuscleInflation:return"Muscle Inflation";case ps.MagicImpact:return"Magic Impact";case ps.ProtectWall:return"Protect Wall";case ps.Haste:return"Haste";case ps.WingStorm:return"Wing Storm";case ps.HolyArch:return"Holy Arch";default:return e}}var ds=(e=>(e[e.ArrowAttak=0]="ArrowAttak",e[e.PiercingArrow=1]="PiercingArrow",e[e.BurstArrow=2]="BurstArrow",e[e.Multishot=3]="Multishot",e[e.ShockArrow=4]="ShockArrow",e[e.FrozenArrow=5]="FrozenArrow",e[e.ExplodingArrow=6]="ExplodingArrow",e[e.ShiningArrow=7]="ShiningArrow",e[e.GravityArrow=8]="GravityArrow",e[e.Kiting=9]="Kiting",e))(ds||{});function c0(e){switch(e){case ds.ArrowAttak:return"Arrow Attack";case ds.PiercingArrow:return"Piercing Arrow";case ds.BurstArrow:return"Burst Arrow";case ds.Multishot:return"Multishot";case ds.ShockArrow:return"Shock Arrow";case ds.FrozenArrow:return"Frozen Arrow";case ds.ExplodingArrow:return"Exploding Arrow";case ds.ShiningArrow:return"Shining Arrow";case ds.GravityArrow:return"Gravity Arrow";case ds.Kiting:return"Kiting";default:return e}}var gs=(e=>(e[e.SonnetAttack=0]="SonnetAttack",e[e.AttackingOrder=1]="AttackingOrder",e[e.RushOrder=2]="RushOrder",e[e.DefensiveOrder=3]="DefensiveOrder",e[e.SoothingBallad=4]="SoothingBallad",e[e.OdeOfFriendship=5]="OdeOfFriendship",e[e.AnthemOfEnthusiasm=6]="AnthemOfEnthusiasm",e[e.FeedChilli=7]="FeedChilli",e[e.BreedingKnowledge=8]="BreedingKnowledge",e[e.TuneOfTotalTaming=9]="TuneOfTotalTaming",e))(gs||{});function o0(e){switch(e){case gs.SonnetAttack:return"Sonnet Attack";case gs.AttackingOrder:return"Attacking Order";case gs.RushOrder:return"Rush Order";case gs.DefensiveOrder:return"Defensive Order";case gs.SoothingBallad:return"Soothing Ballad";case gs.OdeOfFriendship:return"Ode of Friendship";case gs.AnthemOfEnthusiasm:return"Anthem of Enthusiasm";case gs.FeedChilli:return"Feed Chilli";case gs.BreedingKnowledge:return"Breeding Knowledge";case gs.TuneOfTotalTaming:return"Tune of Total Taming";default:return e}}var ms=(e=>(e[e.DaggerAttack=0]="DaggerAttack",e[e.Stab=1]="Stab",e[e.KnifeToss=2]="KnifeToss",e[e.LuckyBlow=3]="LuckyBlow",e[e.SpreadToss=4]="SpreadToss",e[e.ShadowStrike=5]="ShadowStrike",e[e.SneakyStrike=6]="SneakyStrike",e[e.Pilfer=7]="Pilfer",e[e.DarkWield=8]="DarkWield",e[e.Assassination=9]="Assassination",e))(ms||{});function u0(e){switch(e){case ms.DaggerAttack:return"Dagger Attack";case ms.Stab:return"Stab";case ms.KnifeToss:return"Knife Toss";case ms.LuckyBlow:return"Lucky Blow";case ms.SpreadToss:return"Spread Toss";case ms.ShadowStrike:return"Shadow Strike";case ms.SneakyStrike:return"Sneaky Strike";case ms.Pilfer:return"Pilfer";case ms.DarkWield:return"Dark Wield";case ms.Assassination:return"Assassination";default:return e}}function h0(e){switch(e){case cs.SwordAttack:return"Sword Attack";case cs.Slash:return"Slash";case cs.DoubleSlash:return"Double Slash";case cs.SonicSlash:return"Sonic Slash";case cs.SwingDown:return"Swing Down";case cs.SwingAround:return"Swing Around";case cs.ChargeSwing:return"Charge Swing";case cs.FanSwing:return"Fan Swing";case cs.ShieldAttack:return"Shield Charge";case cs.KnockingShot:return"Knocking Shot";default:return e}}var ws=(e=>(e[e.StaffAttack=0]="StaffAttack",e[e.FireBolt=1]="FireBolt",e[e.FireStorm=2]="FireStorm",e[e.MeteorStrike=3]="MeteorStrike",e[e.IceBolt=4]="IceBolt",e[e.ChillingTouch=5]="ChillingTouch",e[e.Blizzard=6]="Blizzard",e[e.ThunderBolt=7]="ThunderBolt",e[e.DoubleThunderBolt=8]="DoubleThunderBolt",e[e.LightningThunder=9]="LightningThunder",e))(ws||{});function f0(e){switch(e){case ws.StaffAttack:return"Staff Attack";case ws.FireBolt:return"Fire Bolt";case ws.FireStorm:return"Fire Storm";case ws.MeteorStrike:return"Meteor Strike";case ws.IceBolt:return"Ice Bolt";case ws.ChillingTouch:return"Chilling Touch";case ws.Blizzard:return"Blizzard";case ws.ThunderBolt:return"Thunder Bolt";case ws.DoubleThunderBolt:return"Double Thunder Bolt";case ws.LightningThunder:return"Lightning Thunder";default:return e}}function p0(e,t){switch(e){case E.Warrior:return h0(t);case E.Wizard:return f0(t);case E.Angel:return l0(t);case E.Thief:return u0(t);case E.Archer:return c0(t);case E.Tamer:return o0(t);default:return""}}function d0(e,t=0,s=0){let a="",u="",o="";switch(e){case ae.Heal:a="Heal",u=`Restores ${t} of Max every: HP floor ( + ${s} / Rank )`,o=`HP After + ${h.tDigit(t)}`;break;case ae.TimeLimit:a="Time Expansion",u=`SD Time Limit + ${t} ( + ${s} / Rank )`,o=`Initial SD Time Limit + ${h.secondsToDhms(t)}`;break;case ae.DamageMultiplier:a="SD Damage Multiplier",u=`SD Damage Multiplier + ${t} ( + ${s} / Rank )`,o=`Multiplicative SD Damage Multiplier + ${h.percent(t)}`;break;case ae.DamageCutMultiplier:a="SD Damage Cut Multiplier",u=`SD Damage Cut Multiplier + ${t} ( + ${s} / Rank )`,o=`Multiplicative SD Damage Cut Multiplier + ${h.percent(t)}`;break;case ae.RestoreDodgeTimesec:a="Dodge Time",u=`Restores ${t} sec available dodge every floor ( + ${s} / Rank )`,o=`Initial available dodge + ${h.tDigit(t,0)} sec`;break;case ae.DodgeHeal:a="Dodge Heal",u=`Restores ${t} of Max every: HP time dodge is successful ( + ${s} / Rank )`,o=`MP After + ${h.tDigit(t)}`;break;case ae.DungeonCoinGain:a="Dungeon Coin Gain",u=`Extra Dungeon per: Coin defeat + ${t} ( + ${s} / Rank )`,o=`Dungeon Coin Gain + ${h.percent(t)}`;break;case ae.FameGain:a="Fame Gain",u=`Fame Gain + ${t} ( + ${s} / Rank )`,o=`Fame Gain + ${h.percent(t)}`;break;case ae.SkillCastSpeed:a="Skill Cast Speed",u=`Skill Cast Speed + ${t} ( + ${s} / Rank )`,o=`SPD After + ${h.tDigit(t)}`;break;case ae.PhysicalCriticalChance:a="Physical Critical Chance",u=`Physical Critical Chance After + ${t} ( + ${s} / Rank )`,o=`Physical Critical Chance After + ${h.percent(t)}`;break;case ae.MagicalCriticalChance:a="Magical Critical Chance",u=`Magical Critical Chance After + ${t} ( + ${s} / Rank )`,o=`Magical Critical Chance After + ${h.percent(t)}`;break;case ae.CriticalDamage:a="Critical Damage",u=`Critical Damage After + ${t} ( + ${s} / Rank )`,o=`Multiplicative Critical Damage + ${h.percent(t)}`;break;case ae.MoveSpeed:a="Move Speed",u=`Move Speed After + ${t} / sec ( + ${s} / Rank )`,o=`Move Speed After + ${t} / sec`;break;case ae.PhysicalDamage:a="Physical Damage",u=`Physical Damage After + ${t} ( + ${s} / Rank )`,o=`ATK After + ${h.tDigit(t)}`;break;case ae.MagicalDamage:a="Magical Damage",u=`Magical Damage After + ${t} ( + ${s} / Rank )`,o=`MATK After + ${h.tDigit(t)}`;break;case ae.PhysicalAbsorption:a="Physical Absorption",u=`Physical Absorption After + ${t} ( + ${s} / Rank )`,o=`DEF After + ${h.tDigit(t)}`;break;case ae.MagicalAbsorption:a="Magical Absorption",u=`Magical Absorption After + ${t} ( + ${s} / Rank )`,o=`MDEF After + ${h.tDigit(t)}`;break;case ae.SkillHitCount:a="Skill Hit Count",u=`Skill Hit Count + ${t} ( + ${s} / Rank )`,o=`Skill Level After + ${h.tDigit(t)}`;break;case ae.ExtraAfterDamage:a="Extra After Damage",u=`Extra After Damage + ${t} ( + ${s} / Rank )`,o=`Extra After Damage + ${h.percent(t)}`;break;case ae.EquipmentDropChance:a="Equipment Drop Chance",u=`Equipment Drop Chance After + ${t} ( + ${s} / Rank )`,o=`Artifact Proficiency Gain + ${h.percent(t)}`;break;case ae.ChallengeBossDamageMultiplier:a="SD Challenge Boss Damage Multiplier",u=`SD Challenge Boss Damage Multiplier + ${t} ( + ${s} / Rank )`,o=`Multiplicative SD Challenge Boss Damage Multiplier + ${h.percent(t)}`;break}return{name:a,active:u,passive:o}}var Fe=(e=>(e[e.MudBrick=0]="MudBrick",e[e.LimestoneBrick=1]="LimestoneBrick",e[e.MarbleBrick=2]="MarbleBrick",e[e.GraniteBrick=3]="GraniteBrick",e[e.BasaltBrick=4]="BasaltBrick",e[e.PineLog=5]="PineLog",e[e.MapleLog=6]="MapleLog",e[e.AshLog=7]="AshLog",e[e.MahoganyLog=8]="MahoganyLog",e[e.RosewoodLog=9]="RosewoodLog",e[e.JasperShard=10]="JasperShard",e[e.OpalShard=11]="OpalShard",e[e.OnyxShard=12]="OnyxShard",e[e.JadeShard=13]="JadeShard",e[e.SapphireShard=14]="SapphireShard",e))(Fe||{});function g0(e){switch(e){case Fe.MudBrick:return"Mud Brick";case Fe.LimestoneBrick:return"Limestone Brick";case Fe.MarbleBrick:return"Marble Brick";case Fe.GraniteBrick:return"Granite Brick";case Fe.BasaltBrick:return"Basalt Brick";case Fe.PineLog:return"Pine Log";case Fe.MapleLog:return"Maple Log";case Fe.AshLog:return"Ash Log";case Fe.MahoganyLog:return"Mahogany Log";case Fe.RosewoodLog:return"Rosewood Log";case Fe.JasperShard:return"Jasper Shard";case Fe.OpalShard:return"Opal Shard";case Fe.OnyxShard:return"Onyx Shard";case Fe.JadeShard:return"Jade Shard";case Fe.SapphireShard:return"Sapphire Shard";default:return e}}function m0(e){switch(e){case O.Slime:return"Slime";case O.MagicSlime:return"Magicslime";case O.Spider:return"Spider";case O.Bat:return"Bat";case O.Fairy:return"Fairy";case O.Fox:return"Fox";case O.DevilFish:return"Devilfish";case O.Treant:return"Treant";case O.FlameTiger:return"Flametiger";case O.Unicorn:return"Unicorn";case O.Mimic:return"Mimic";case O.ChallengeBoss:return"Challenge Boss";default:return e}}var F=(e=>(e[e.Nothing=0]="Nothing",e[e.ResourceGain=1]="ResourceGain",e[e.PotionEffect=2]="PotionEffect",e[e.TamingPointGain=3]="TamingPointGain",e[e.GoldCap=4]="GoldCap",e[e.GoldGain=5]="GoldGain",e[e.ExpGain=6]="ExpGain",e[e.DoubleMaterialChance=7]="DoubleMaterialChance",e[e.GoldGainOnDisassemblePotion=8]="GoldGainOnDisassemblePotion",e[e.DisassembleTownMatGain=9]="DisassembleTownMatGain",e[e.TownMatGainFromDungeonReward=10]="TownMatGainFromDungeonReward",e[e.OilOfSlimeDropChance=11]="OilOfSlimeDropChance",e[e.EnchantedClothDropChance=12]="EnchantedClothDropChance",e[e.SpiderSilkDropChance=13]="SpiderSilkDropChance",e[e.BatWingDropChance=14]="BatWingDropChance",e[e.FairyDustDropChance=15]="FairyDustDropChance",e[e.FoxTailDropChance=16]="FoxTailDropChance",e[e.FishScalesDropChance=17]="FishScalesDropChance",e[e.CarvedBranchDropChance=18]="CarvedBranchDropChance",e[e.ThickFurDropChance=19]="ThickFurDropChance",e[e.UnicornHornDropChance=20]="UnicornHornDropChance",e[e.EquipProfGain=21]="EquipProfGain",e[e.MysteriousWaterGain=22]="MysteriousWaterGain",e[e.ChestPortalOrbChance=23]="ChestPortalOrbChance",e[e.SkillProfGain=24]="SkillProfGain",e[e.TownMatGain=25]="TownMatGain",e[e.ResearchPowerStone=26]="ResearchPowerStone",e[e.ResearchPowerCrystal=27]="ResearchPowerCrystal",e[e.ResearchPowerLeaf=28]="ResearchPowerLeaf",e[e.CatalystCriticalChance=29]="CatalystCriticalChance",e[e.MysteriousWaterCap=30]="MysteriousWaterCap",e[e.BlessingEffect=31]="BlessingEffect",e[e.LoyaltyPointGain=32]="LoyaltyPointGain",e[e.PetExpGain=33]="PetExpGain",e[e.ExpeditionExpGain=34]="ExpeditionExpGain",e[e.EssenceConversionRate=35]="EssenceConversionRate",e[e.SlimeCoinEfficiency=36]="SlimeCoinEfficiency",e[e.SlimeCoinCap=37]="SlimeCoinCap",e[e.EquipmentEffect=38]="EquipmentEffect",e[e.AlchemyPointGain=39]="AlchemyPointGain",e))(F||{});function w0(e){switch(e.passiveEffectKind){case F.Nothing:return"Stay tuned for future updates!";case F.ResourceGain:return"Resource Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.PotionEffect:return"Potion Effect + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case F.TamingPointGain:return"Taming Point Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.GoldCap:return"Multiply Gold Cap by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case F.GoldGain:return"Gold Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case F.ExpGain:return"EXP Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.DoubleMaterialChance:return"Lucky Material Chance for Doubled Material Gain : "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.GoldGainOnDisassemblePotion:return"Gold Gain on Disassembling Potions + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.DisassembleTownMatGain:return"Town Material Gain on Disassembling Equipment + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.TownMatGainFromDungeonReward:return"Town Material Gain from Dungeon Reward + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.OilOfSlimeDropChance:return this.Material(Be.OilOfSlime)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.EnchantedClothDropChance:return this.Material(Be.EnchantedCloth)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.SpiderSilkDropChance:return this.Material(Be.SpiderSilk)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.BatWingDropChance:return this.Material(Be.BatWing)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.FairyDustDropChance:return this.Material(Be.FairyDust)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.FoxTailDropChance:return this.Material(Be.FoxTail)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.FishScalesDropChance:return this.Material(Be.FishScales)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.CarvedBranchDropChance:return this.Material(Be.CarvedBranch)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.ThickFurDropChance:return this.Material(Be.ThickFur)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.UnicornHornDropChance:return this.Material(Be.UnicornHorn)+" Drop Chance + "+h.percent(e.effectValue,3)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.EquipProfGain:return"Equipment Proficiency Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.MysteriousWaterGain:return"Mysterious Water Gain + "+h.tDigit(e.effectValue,3)+" / sec ( + "+h.tDigit(e.effectIncrementValue,3)+" / Rank )";case F.ChestPortalOrbChance:return"Finding Portal Orb from Chest Chance : "+h.percent(e.effectValue,4)+" ( + "+h.percent(e.effectIncrementValue,4)+" / Rank )";case F.SkillProfGain:return"Skill Proficiency Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.TownMatGain:return"Multiply Town Material Gain by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.ResearchPowerStone:return"Stone Research Power + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case F.ResearchPowerCrystal:return"Crystal Research Power + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case F.ResearchPowerLeaf:return"Leaf Research Power + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue,3)+" / Rank )";case F.CatalystCriticalChance:return"Multiplies Critical Chance of Catalyst by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.MysteriousWaterCap:return"Max Mysterious Water Cap + "+h.tDigit(e.effectValue)+" ( + "+h.tDigit(e.effectIncrementValue,2)+" / Rank )";case F.BlessingEffect:return"Blessing Effect + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.LoyaltyPointGain:return"Loyalty Point Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.PetExpGain:return"Pet EXP Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.ExpeditionExpGain:return"Expedition EXP Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.EssenceConversionRate:return"Essence Conversion Rate + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.SlimeCoinEfficiency:return"Multiplies Slime Coin Gain by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.SlimeCoinCap:return"Multiplies Slime Coin Cap by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.EquipmentEffect:return"Multiplies Equipment Effect by "+h.percent(1+e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";case F.AlchemyPointGain:return"Alchemy Point Gain + "+h.percent(e.effectValue)+" ( + "+h.percent(e.effectIncrementValue)+" / Rank )";default:return""}}function M0(e){switch(e){case A.FireRes:return"Fire Resistance";case A.IceRes:return"Ice Resistance";case A.ThunderRes:return"Thunder Resistance";case A.LightRes:return"Light Resistance";case A.DarkRes:return"Dark Resistance";case A.DebuffRes:return"Debuff Resistance";case A.PhysCritChance:return"Physical Critical Chance";case A.MagCritChance:return"Magical Critical Chance";case A.CriticalDamage:return"Critical Damage";case A.EquipmentDropChance:return"Equipment Drop Chance";case A.MoveSpeed:return"Move Speed";case A.SkillProficiencyGain:return"Skill Proficiency Gain";case A.EquipmentProficiencyGain:return"Equipment Proficiency Gain";case A.TamingPointGain:return"Taming Point Gain";case A.ExpGain:return"EXP Gain";case A.ArmoredFury:return"Armored Fury";case A.WardedFury:return"Warded Fury";case A.PetPhysCritChance:return"Pet Base Physical Critical Chance";case A.PetMagCritChance:return"Pet Base Magical Critical Chance";case A.PetCriticalDamage:return"Pet Base Critical Damage";case A.PetDebuffResistance:return"Pet Debuff Resistance";case A.ArtifactProficiencyGain:return"Artifact Proficiency Gain"}}var de=(e=>(e[e.Global=0]="Global",e[e.Daily=1]="Daily",e[e.Title=2]="Title",e[e.General=3]="General",e))(de||{}),_=(e=>(e[e.AbilityVIT=0]="AbilityVIT",e[e.ClearGeneralQuest=1]="ClearGeneralQuest",e[e.ClearTitleQuest=2]="ClearTitleQuest",e[e.UpgradeResource=3]="UpgradeResource",e[e.Equip=4]="Equip",e[e.Alchemy=5]="Alchemy",e[e.Guild=6]="Guild",e[e.Town=7]="Town",e[e.Research=8]="Research",e[e.Rebirth=9]="Rebirth",e[e.Challenge=10]="Challenge",e[e.Expedition=11]="Expedition",e[e.WorldAscension=12]="WorldAscension",e[e.AreaPrestige=13]="AreaPrestige",e[e.Upgrade1=14]="Upgrade1",e[e.Upgrade2=15]="Upgrade2",e[e.Upgrade3=16]="Upgrade3",e[e.Upgrade4=17]="Upgrade4",e[e.Upgrade5=18]="Upgrade5",e[e.Upgrade6=19]="Upgrade6",e[e.Upgrade7=20]="Upgrade7",e[e.Upgrade8=21]="Upgrade8",e[e.Nitro1=22]="Nitro1",e[e.Nitro2=23]="Nitro2",e[e.Nitro3=24]="Nitro3",e[e.Nitro4=25]="Nitro4",e[e.Nitro5=26]="Nitro5",e[e.Nitro6=27]="Nitro6",e[e.Nitro7=28]="Nitro7",e[e.Nitro8=29]="Nitro8",e[e.Capture1=30]="Capture1",e[e.Capture2=31]="Capture2",e[e.Capture3=32]="Capture3",e[e.Capture4=33]="Capture4",e[e.Capture5=34]="Capture5",e[e.Alchemy1=35]="Alchemy1",e[e.Alchemy2=36]="Alchemy2",e[e.Alchemy3=37]="Alchemy3",e[e.Alchemy4=38]="Alchemy4",e[e.Alchemy5=39]="Alchemy5",e[e.Alchemy6=40]="Alchemy6",e[e.Alchemy7=41]="Alchemy7",e[e.Alchemy8=42]="Alchemy8",e[e.Upgrade9=43]="Upgrade9",e[e.Upgrade10=44]="Upgrade10",e[e.Upgrade11=45]="Upgrade11",e[e.Upgrade12=46]="Upgrade12",e[e.Upgrade13=47]="Upgrade13",e[e.Nitro9=48]="Nitro9",e[e.Nitro10=49]="Nitro10",e[e.Nitro11=50]="Nitro11",e[e.Nitro12=51]="Nitro12",e[e.Nitro13=52]="Nitro13",e[e.Nitro14=53]="Nitro14",e[e.Nitro15=54]="Nitro15",e[e.Capture6=55]="Capture6",e[e.Capture7=56]="Capture7",e[e.Capture8=57]="Capture8",e[e.Capture9=58]="Capture9",e[e.Capture10=59]="Capture10",e[e.Capture11=60]="Capture11",e[e.Capture12=61]="Capture12",e[e.Upgrade14=62]="Upgrade14",e[e.Upgrade15=63]="Upgrade15",e[e.Upgrade16=64]="Upgrade16",e[e.Upgrade17=65]="Upgrade17",e[e.Upgrade18=66]="Upgrade18",e[e.Capture13=67]="Capture13",e[e.Capture14=68]="Capture14",e[e.Capture15=69]="Capture15",e[e.Capture16=70]="Capture16",e[e.SD1=71]="SD1",e[e.SD2=72]="SD2",e[e.SD3=73]="SD3",e[e.SD4=74]="SD4",e[e.SD5=75]="SD5",e[e.SD6=76]="SD6",e[e.SD7=77]="SD7",e[e.SD8=78]="SD8",e))(_||{});function S0(e){const t=e.kind,s=e.kindGlobal,a=e.kindTitle;switch(t){case de.Global:switch(s){case _.AbilityVIT:return"Tutorial 1 : Basic Training";case _.ClearGeneralQuest:return"Tutorial 2 : General Quest";case _.ClearTitleQuest:return"Tutorial 3 : Title Quest";case _.UpgradeResource:return"Tutorial 4 : Upgrade";case _.Equip:return"Tutorial 5 : Equipment";case _.Alchemy:return"Tutorial 6 : Alchemy";case _.Guild:return"Tutorial 7 : Guild";case _.Town:return"Tutorial 8 : Town";case _.Research:return"Tutorial 9 : Town Research";case _.Rebirth:return"Tutorial 10 : Rebirth";case _.Challenge:return"Tutorial 11 : Challenge";case _.Expedition:return"Tutorial 12 : Expedition";case _.WorldAscension:return"Tutorial 13 : World Ascension";case _.AreaPrestige:return"Tutorial 14 : Area Prestige";case _.Upgrade1:return"To Further Stage 1";case _.Upgrade2:return"To Further Stage 2";case _.Upgrade3:return"To Further Stage 3";case _.Upgrade4:return"To Further Stage 4";case _.Upgrade5:return"To Further Stage 5";case _.Upgrade6:return"To Further Stage 6";case _.Upgrade7:return"To Further Stage 7";case _.Upgrade8:return"To Further Stage 8";case _.Nitro1:return"How to be a Nitro Booster Geek 1";case _.Nitro2:return"How to be a Nitro Booster Geek 2";case _.Nitro3:return"How to be a Nitro Booster Geek 3";case _.Nitro4:return"How to be a Nitro Booster Geek 4";case _.Nitro5:return"How to be a Nitro Booster Geek 5";case _.Nitro6:return"How to be a Nitro Booster Geek 6";case _.Nitro7:return"How to be a Nitro Booster Geek 7";case _.Nitro8:return"How to be a Nitro Booster Geek 8";case _.Capture1:return"Capturing Monsters 1";case _.Capture2:return"Capturing Monsters 2";case _.Capture3:return"Capturing Monsters 3";case _.Capture4:return"Capturing Monsters 4";case _.Capture5:return"Capturing Monsters 5";case _.Alchemy1:return"The Road of Alchemy 1";case _.Alchemy2:return"The Road of Alchemy 2";case _.Alchemy3:return"The Road of Alchemy 3";case _.Alchemy4:return"The Road of Alchemy 4";case _.Alchemy5:return"The Road of Alchemy 5";case _.Alchemy6:return"The Road of Alchemy 6";case _.Alchemy7:return"The Road of Alchemy 7";case _.Alchemy8:return"The Road of Alchemy 8";case _.Upgrade9:return"To Further Stage 9";case _.Upgrade10:return"To Further Stage 10";case _.Upgrade11:return"To Further Stage 11";case _.Upgrade12:return"To Further Stage 12";case _.Upgrade13:return"To Further Stage 13";case _.Nitro9:return"How to be a Nitro Booster Geek 9";case _.Nitro10:return"How to be a Nitro Booster Geek 10";case _.Nitro11:return"How to be a Nitro Booster Geek 11";case _.Nitro12:return"How to be a Nitro Booster Geek 12";case _.Nitro13:return"How to be a Nitro Booster Geek 13";case _.Nitro14:return"How to be a Nitro Booster Geek 14";case _.Nitro15:return"How to be a Nitro Booster Geek 15";case _.Capture6:return"Capturing Monsters 6";case _.Capture7:return"Capturing Monsters 7";case _.Capture8:return"Capturing Monsters 8";case _.Capture9:return"Capturing Monsters 9";case _.Capture10:return"Capturing Monsters 10";case _.Capture11:return"Capturing Monsters 11";case _.Capture12:return"Capturing Monsters 12";case _.Upgrade14:return"To Further Stage 14";case _.Upgrade15:return"To Further Stage 15";case _.Upgrade16:return"To Further Stage 16";case _.Upgrade17:return"To Further Stage 17";case _.Upgrade18:return"To Further Stage 18";case _.Capture13:return"Capturing Monsters 13";case _.Capture14:return"Capturing Monsters 14";case _.Capture15:return"Capturing Monsters 15";case _.Capture16:return"Capturing Monsters 16";case _.SD1:return"Super Dungeon 1";case _.SD2:return"Super Dungeon 2";case _.SD3:return"Super Dungeon 3";case _.SD4:return"Super Dungeon 4";case _.SD5:return"Super Dungeon 5";case _.SD6:return"Super Dungeon 6";case _.SD7:return"Super Dungeon 7";case _.SD8:return"Super Dungeon 8"}break;case de.Daily:break;case de.Title:switch(a){case S.SkillMaster1:return this.Title(L.SkillMaster)+" 1";case S.SkillMaster2:return this.Title(L.SkillMaster)+" 2";case S.SkillMaster3:return this.Title(L.SkillMaster)+" 3";case S.SkillMaster4:return this.Title(L.SkillMaster)+" 4";case S.MonsterDistinguisher1:return this.Title(L.MonsterDistinguisher)+" 1";case S.MonsterDistinguisher2:return this.Title(L.MonsterDistinguisher)+" 2";case S.MonsterDistinguisher3:return this.Title(L.MonsterDistinguisher)+" 3";case S.MonsterDistinguisher4:return this.Title(L.MonsterDistinguisher)+" 4";case S.MonsterDistinguisher5:return this.Title(L.MonsterDistinguisher)+" 5";case S.MonsterDistinguisher6:return this.Title(L.MonsterDistinguisher)+" 6";case S.EquipmentSlotWeapon1:return this.Title(L.EquipmentSlotWeapon)+" 1";case S.EquipmentSlotWeapon2:return this.Title(L.EquipmentSlotWeapon)+" 2";case S.EquipmentSlotWeapon3:return this.Title(L.EquipmentSlotWeapon)+" 3";case S.EquipmentSlotWeapon4:return this.Title(L.EquipmentSlotWeapon)+" 4";case S.EquipmentSlotWeapon5:return this.Title(L.EquipmentSlotWeapon)+" 5";case S.EquipmentSlotWeapon6:return this.Title(L.EquipmentSlotWeapon)+" 6";case S.EquipmentSlotArmor1:return this.Title(L.EquipmentSlotArmor)+" 1";case S.EquipmentSlotArmor2:return this.Title(L.EquipmentSlotArmor)+" 2";case S.EquipmentSlotArmor3:return this.Title(L.EquipmentSlotArmor)+" 3";case S.EquipmentSlotArmor4:return this.Title(L.EquipmentSlotArmor)+" 4";case S.EquipmentSlotArmor5:return this.Title(L.EquipmentSlotArmor)+" 5";case S.EquipmentSlotArmor6:return this.Title(L.EquipmentSlotArmor)+" 6";case S.EquipmentSlotJewelry1:return this.Title(L.EquipmentSlotJewelry)+" 1";case S.EquipmentSlotJewelry2:return this.Title(L.EquipmentSlotJewelry)+" 2";case S.EquipmentSlotJewelry3:return this.Title(L.EquipmentSlotJewelry)+" 3";case S.EquipmentSlotJewelry4:return this.Title(L.EquipmentSlotJewelry)+" 4";case S.EquipmentSlotJewelry5:return this.Title(L.EquipmentSlotJewelry)+" 5";case S.EquipmentSlotJewelry6:return this.Title(L.EquipmentSlotJewelry)+" 6";case S.PotionSlot1:return this.Title(L.PotionSlot)+" 1";case S.PotionSlot2:return this.Title(L.PotionSlot)+" 2";case S.PotionSlot3:return this.Title(L.PotionSlot)+" 3";case S.PhysicalAttack1:return this.Title(L.PhysicalDamage)+" 1";case S.PhysicalAttack2:return this.Title(L.PhysicalDamage)+" 2";case S.PhysicalAttack3:return this.Title(L.PhysicalDamage)+" 3";case S.PhysicalAttack4:return this.Title(L.PhysicalDamage)+" 4";case S.FireAttack1:return this.Title(L.FireDamage)+" 1";case S.FireAttack2:return this.Title(L.FireDamage)+" 2";case S.FireAttack3:return this.Title(L.FireDamage)+" 3";case S.FireAttack4:return this.Title(L.FireDamage)+" 4";case S.IceAttack1:return this.Title(L.IceDamage)+" 1";case S.IceAttack2:return this.Title(L.IceDamage)+" 2";case S.IceAttack3:return this.Title(L.IceDamage)+" 3";case S.IceAttack4:return this.Title(L.IceDamage)+" 4";case S.ThunderAttack1:return this.Title(L.ThunderDamage)+" 1";case S.ThunderAttack2:return this.Title(L.ThunderDamage)+" 2";case S.ThunderAttack3:return this.Title(L.ThunderDamage)+" 3";case S.ThunderAttack4:return this.Title(L.ThunderDamage)+" 4";case S.LightAttack1:return this.Title(L.LightDamage)+" 1";case S.LightAttack2:return this.Title(L.LightDamage)+" 2";case S.LightAttack3:return this.Title(L.LightDamage)+" 3";case S.LightAttack4:return this.Title(L.LightDamage)+" 4";case S.DarkAttack1:return this.Title(L.DarkDamage)+" 1";case S.DarkAttack2:return this.Title(L.DarkDamage)+" 2";case S.DarkAttack3:return this.Title(L.DarkDamage)+" 3";case S.DarkAttack4:return this.Title(L.DarkDamage)+" 4";case S.Porter1:return"The Great Race 1";case S.Porter2:return"The Great Race 2";case S.Porter3:return"The Great Race 3";case S.Porter4:return"The Great Race 4";case S.Porter5:return"The Great Race 5";case S.Porter6:return"The Great Race 6";case S.Alchemist1:return this.Title(L.Alchemist)+" 1";case S.Alchemist2:return this.Title(L.Alchemist)+" 2";case S.Alchemist3:return this.Title(L.Alchemist)+" 3";case S.Alchemist4:return this.Title(L.Alchemist)+" 4";case S.Alchemist5:return this.Title(L.Alchemist)+" 5";case S.EquipmentProf1:return this.Title(L.EquipmentProficiency)+" 1";case S.EquipmentProf2:return this.Title(L.EquipmentProficiency)+" 2";case S.EquipmentProf3:return this.Title(L.EquipmentProficiency)+" 3";case S.EquipmentProf4:return this.Title(L.EquipmentProficiency)+" 4";case S.EquipmentProf5:return this.Title(L.EquipmentProficiency)+" 5";case S.MetalHunter1:return this.Title(L.MetalHunter)+" 1";case S.MetalHunter2:return this.Title(L.MetalHunter)+" 2";case S.MetalHunter3:return this.Title(L.MetalHunter)+" 3";case S.MetalHunter4:return this.Title(L.MetalHunter)+" 4";case S.FireResistance1:return this.Title(L.FireResistance)+" 1";case S.FireResistance2:return this.Title(L.FireResistance)+" 2";case S.FireResistance3:return this.Title(L.FireResistance)+" 3";case S.FireResistance4:return this.Title(L.FireResistance)+" 4";case S.FireResistance5:return this.Title(L.FireResistance)+" 5";case S.IceResistance1:return this.Title(L.IceResistance)+" 1";case S.IceResistance2:return this.Title(L.IceResistance)+" 2";case S.IceResistance3:return this.Title(L.IceResistance)+" 3";case S.IceResistance4:return this.Title(L.IceResistance)+" 4";case S.IceResistance5:return this.Title(L.IceResistance)+" 5";case S.ThunderResistance1:return this.Title(L.ThunderResistance)+" 1";case S.ThunderResistance2:return this.Title(L.ThunderResistance)+" 2";case S.ThunderResistance3:return this.Title(L.ThunderResistance)+" 3";case S.ThunderResistance4:return this.Title(L.ThunderResistance)+" 4";case S.ThunderResistance5:return this.Title(L.ThunderResistance)+" 5";case S.LightResistance1:return this.Title(L.LightResistance)+" 1";case S.LightResistance2:return this.Title(L.LightResistance)+" 2";case S.LightResistance3:return this.Title(L.LightResistance)+" 3";case S.LightResistance4:return this.Title(L.LightResistance)+" 4";case S.LightResistance5:return this.Title(L.LightResistance)+" 5";case S.DarkResistance1:return this.Title(L.DarkResistance)+" 1";case S.DarkResistance2:return this.Title(L.DarkResistance)+" 2";case S.DarkResistance3:return this.Title(L.DarkResistance)+" 3";case S.DarkResistance4:return this.Title(L.DarkResistance)+" 4";case S.DarkResistance5:return this.Title(L.DarkResistance)+" 5";case S.Survival1:return this.Title(L.Survival)+" 1";case S.Survival2:return this.Title(L.Survival)+" 2";case S.Survival3:return this.Title(L.Survival)+" 3";case S.Survival4:return this.Title(L.Survival)+" 4";case S.Cooperation1:return this.Title(L.Cooperation)+" 1";case S.Cooperation2:return this.Title(L.Cooperation)+" 2";case S.Cooperation3:return this.Title(L.Cooperation)+" 3";case S.Quester1:return this.Title(L.Quester)+" 1";case S.Quester2:return this.Title(L.Quester)+" 2";case S.Quester3:return this.Title(L.Quester)+" 3";case S.Quester4:return this.Title(L.Quester)+" 4";case S.Quester5:return this.Title(L.Quester)+" 5";case S.Quester6:return this.Title(L.Quester)+" 6";case S.Quester7:return this.Title(L.Quester)+" 7";case S.Quester8:return this.Title(L.Quester)+" 8";case S.Quester9:return this.Title(L.Quester)+" 9";case S.Quester10:return this.Title(L.Quester)+" 10";case S.MonsterDistinguisher7:return this.Title(L.MonsterDistinguisher)+" 7";case S.MonsterDistinguisher8:return this.Title(L.MonsterDistinguisher)+" 8";case S.MetalHunter5:return this.Title(L.MetalHunter)+" 5";case S.MetalHunter6:return this.Title(L.MetalHunter)+" 6";case S.MetalHunter7:return this.Title(L.MetalHunter)+" 7";case S.MetalHunter8:return this.Title(L.MetalHunter)+" 8";case S.MetalHunter9:return this.Title(L.MetalHunter)+" 9";case S.ExplorerOfSD1:return this.Title(L.ExplorerOfSD)+" 1";case S.ExplorerOfSD2:return this.Title(L.ExplorerOfSD)+" 2";case S.ExplorerOfSD3:return this.Title(L.ExplorerOfSD)+" 3";case S.ExplorerOfSD4:return this.Title(L.ExplorerOfSD)+" 4";case S.ExplorerOfSD5:return this.Title(L.ExplorerOfSD)+" 5";case S.ExplorerOfSD6:return this.Title(L.ExplorerOfSD)+" 6";case S.ExplorerOfSD7:return this.Title(L.ExplorerOfSD)+" 7";case S.ExplorerOfSD8:return this.Title(L.ExplorerOfSD)+" 8";case S.ExplorerOfSD9:return this.Title(L.ExplorerOfSD)+" 9";case S.ExplorerOfSD10:return this.Title(L.ExplorerOfSD)+" 10";case S.ExplorerOfSD11:return this.Title(L.ExplorerOfSD)+" 11";case S.ExplorerOfSD12:return this.Title(L.ExplorerOfSD)+" 12";case S.ExplorerOfSD13:return this.Title(L.ExplorerOfSD)+" 13";case S.ExplorerOfSD14:return this.Title(L.ExplorerOfSD)+" 14";case S.ExplorerOfSD15:return this.Title(L.ExplorerOfSD)+" 15"}break;case de.General:break}return"not found"}function A0(e){switch(e){case L.SkillMaster:return"Class Master";case L.MonsterDistinguisher:return"Monster Study";case L.EquipmentSlotWeapon:return"Apprentice of Weapon";case L.EquipmentSlotArmor:return"Apprentice of Armor";case L.EquipmentSlotJewelry:return"Apprentice of Jewelry";case L.PotionSlot:return"Apprentice of Potion";case L.EquipmentProficiency:return"Equipment Master";case L.PhysicalDamage:return"Master of Physical Attacks";case L.FireDamage:return"Master of Fire Attacks";case L.IceDamage:return"Master of Ice Attacks";case L.ThunderDamage:return"Master of Thunder Attacks";case L.LightDamage:return"Master of Light Attacks";case L.DarkDamage:return"Master of Dark Attacks";case L.Alchemist:return"Alchemist";case L.MetalHunter:return"Metal Hunter";case L.Survival:return"Survival";case L.FireResistance:return"Fire Soul";case L.IceResistance:return"Ice Soul";case L.ThunderResistance:return"Thunder Soul";case L.LightResistance:return"Light Soul";case L.DarkResistance:return"Dark Soul";case L.Cooperation:return"Proof of Rebirth";case L.DebuffResistance:return"Holy Guard";case L.MoveSpeed:return"Racer";case L.BreakingTheLimit:return"Breaking The Limit";case L.Quester:return"Quester";case L.ExplorerOfSD:return"Explorer of Super Dungeon";default:return"Not Implemented"}}var se=(e=>(e[e.StatueOfHeroes=0]="StatueOfHeroes",e[e.Cartographer=1]="Cartographer",e[e.AlchemistsHut=2]="AlchemistsHut",e[e.Blacksmith=3]="Blacksmith",e[e.Temple=4]="Temple",e[e.Trapper=5]="Trapper",e[e.SlimeBank=6]="SlimeBank",e[e.MysticArena=7]="MysticArena",e[e.ArcaneResearcher=8]="ArcaneResearcher",e[e.Tavern=9]="Tavern",e[e.Dojo=10]="Dojo",e[e.AdventuringParty=11]="AdventuringParty",e))(se||{});function b0(e){switch(e){case se.StatueOfHeroes:return"Statue of Heroes";case se.AlchemistsHut:return"Alchemist's Hut";case se.Cartographer:return"Cartographer";case se.AdventuringParty:return"Adventuring Party";case se.Blacksmith:return"Blacksmith";case se.Temple:return"Temple";case se.SlimeBank:return"Slime Bank";case se.MysticArena:return"Mystic Arena";case se.ArcaneResearcher:return"Arcane Researcher";case se.Tavern:return"Tavern";case se.Dojo:return"Dojo";case se.Trapper:return"Trapper";default:return"Not Implemented"}}function R0(e,t){switch(e){case se.StatueOfHeroes:return`EXP Gain ${h.percent(t)}`;case se.AlchemistsHut:return`Shop Material's Max Stock # ${h.tDigit(t,0)}`;case se.Cartographer:return`Gold Gain ${h.percent(t)}`;case se.AdventuringParty:return`Multiply Expedition Speed by ${h.percent(t)}`;case se.Blacksmith:return`Multiply Equipment's Effect by ${h.percent(t)}`;case se.Temple:return`Rebirth Point Gain ${h.percent(t)}`;case se.SlimeBank:return`Slime Coin Gain ${h.percent(t)}`;case se.MysticArena:return`Damage to Challenge Boss ${h.percent(t)}`;case se.ArcaneResearcher:return`Multiply Research Power by ${h.percent(t)}`;case se.Tavern:return"-";case se.Dojo:return"-";case se.Trapper:return`Capturable Monster Max Lv : ${h.tDigit(t,0)}`;default:return"Not Implemented"}}function D0(e){switch(e){case lt.Florzporb:return"Florzporb";case lt.Arachnetta:return"Arachnetta";case lt.GuardianKor:return"Guardian Kor";case lt.Nostro:return"Nostro";case lt.LadyEmelda:return"Lady Emelda";case lt.NariSune:return"Nari Sune";case lt.Octobaddie:return"Octobaddie";case lt.Bananoon:return"Bananoon";case lt.Glorbliorbus:return"Glorbliorbus";case lt.DistortionSlime:return"Gankyū";default:return"Not Implemented"}}const $e={EquipmentEffectName:$d,EquipmentName:zd,StatsBreakdown:Jd,SDUpgradeString:Xd,SDShopNameString:jd,SDGemString:Zd,PotionName:Qd,ExpeditionGlobalInformationString:Kd,SDName:e0,ForgeEffectString:t0,ForgeNameString:s0,Material:i0,EquipmentEffect:r0,PotionEffect:a0,PotionTypeString:n0,SkillName:p0,SDPowerupString:d0,SDShopEffectValueString:Yd,TownMaterialNameString:g0,MonsterSpeciesName:m0,MonsterPetPassiveEffectString:w0,Stat:M0,Quest:S0,Title:A0,BuildingString:b0,BuildingEffectString:R0,MonsterShortNameString:D0};class Pt{constructor(t){c(this,"ctrl");c(this,"heroKind");this.ctrl=t,this.heroKind=t.heroKind}get level(){return this.ctrl.data.source.superDungeonPowerupLevels[this.kind]}set level(t){this.ctrl.data.source.superDungeonPowerupLevels[this.kind]=t}get sdgCtrl(){return this.ctrl.data.sdg}get isUnlocked(){return this.ctrl.data.source.superDungeonPowerupIsUnlocked[this.kind]}get kind(){return ae.Heal}get purchasedNum(){return this.ctrl.data.source.superDungeonPowerupPurchasedNums[this.kind]}set purchasedNum(t){this.ctrl.data.source.superDungeonPowerupPurchasedNums[this.kind]=t}get rank(){return this.ctrl.data.source.superDungeonPowerupRanks[this.kind]}set rank(t){this.ctrl.data.source.superDungeonPowerupRanks[this.kind]=Math.min(100,t)}Start(){this.SetEffect()}isActive(){return this.ctrl.data.source.superDungeonPowerupIsActive}SetEffect(){}SetGlobalEffect(){}get baseInitEffectValue(){return 0}get initEffectValue(){return this.baseInitEffectValue*this.sdgCtrl.powerupEffectMultiplier[this.kind].Value()}get baseIncrementEffectValuePerRank(){return 0}get incrementEffectValuePerRank(){return this.baseIncrementEffectValuePerRank*this.sdgCtrl.powerupEffectMultiplier[this.kind].Value()}EffectValue(){const t=this.initEffectValue+this.rank*this.incrementEffectValuePerRank;if(this.sdgCtrl.data.source.isSuperDungeon&&this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.ReducePowerupEffect]){const s=this.sdgCtrl.data.source.sdModifierValues[950+dt.ReducePowerupEffect],a=s==0?.5:s==1?.9:.99;return t*Math.max(0,1-a)}return t}get basePermEffect(){return 0}get permEffect(){return this.basePermEffect*this.sdgCtrl.powerupPermEffectMultiplier.Value()}get basePermEffectMaxValue(){return 1e300}get permEffectMaxValue(){return this.basePermEffectMaxValue*this.sdgCtrl.powerupPermEffectMultiplier.Value()}PermanentEffectValue(){return this.sdgCtrl.data.source.isSuperDungeon&&this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDPowerupPassives]?0:Math.min(this.permEffectMaxValue,Math.pow(this.purchasedNum,2/3)*this.permEffect)}RankCost(t){return 0}NameString(){return $e.SDPowerupString(this.kind,this.PermanentEffectValue()).name}TotalRankCost(){let t=0;for(let s=0;s<this.rank;s++)this.rank&&(t+=this.RankCost(s));return t}EffectValueString(){return $e.SDPowerupString(this.kind,this.PermanentEffectValue()).passive}}class k0 extends Pt{get kind(){return ae.ChallengeBossDamageMultiplier}constructor(t){super(t)}Cost(t){return 50+50*t+50*(Math.pow(10,t/10)-1)}RankCost(t){return 4+4*t}get unlockDungeonCoinCost(){return 75e3}SetEffect(){return this.ctrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<H.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .01}}class E0 extends Pt{get kind(){return ae.CriticalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 500}Cost(t){return 10+10*t+10*(Math.pow(5,t/10)-1)}SetEffect(){this.ctrl.data.stats.HeroStats(this.heroKind,A.CriticalDamage).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(A.CriticalDamage,new l(n.DungeonItemPermanent,i.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .5}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .01}}class C0 extends Pt{get kind(){return ae.DamageCutMultiplier}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/10)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.damageCutMultiplier.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<H.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .05}get baseIncrementEffectValuePerRank(){return .025}get basePermEffect(){return .01}}class y0 extends Pt{get kind(){return ae.DamageMultiplier}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/10)-1)}RankCost(t){return 1+t}SetEffect(){this.ctrl.damageMultiplier.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<H.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .5}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .01}}class P0 extends Pt{get kind(){return ae.DodgeHeal}constructor(t){super(t)}Cost(t){return 25*Math.pow(2,t)}RankCost(t){return 2+2*t}get unlockDungeonCoinCost(){return 100}SetEffect(){return this.ctrl.dodgeHealPercent.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.MP,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 2}}class v0 extends Pt{get kind(){return ae.DungeonCoinGain}constructor(t){super(t)}Cost(t){return 50*Math.pow(2,t)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 5e3}SetEffect(){return this.sdgCtrl.dungeonCoinBonus.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.sdgCtrl.dungeonCoinGain.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .001}}class B0 extends Pt{get kind(){return ae.EquipmentDropChance}constructor(t){super(t)}RankCost(t){return 5+5*t}get unlockDungeonCoinCost(){return 1e5}Cost(t){return 200+200*t+200*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,A.EquipmentDropChance).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(A.ArtifactProficiencyGain,new l(n.DungeonItemPermanent,i.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .001}get baseIncrementEffectValuePerRank(){return 1e-4}get basePermEffect(){return .005}}class L0 extends Pt{get kind(){return ae.ExtraAfterDamage}constructor(t){super(t)}RankCost(t){return 5+5*t}get unlockDungeonCoinCost(){return 1e5}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.Hero(this.heroKind).extraAfterDamage.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<H.HeroKind;t++)this.ctrl.data.stats.Hero(t).extraAfterDamage.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .25}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .001}}class T0 extends Pt{get kind(){return ae.FameGain}constructor(t){super(t)}Cost(t){return 100*Math.pow(10,t/5)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 1e4}SetEffect(){return this.ctrl.data.superStats.Hero(this.heroKind).fameGain.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<H.HeroKind;t++)this.ctrl.data.superStats.Hero(t).fameGain.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .05}get baseIncrementEffectValuePerRank(){return .005}get basePermEffect(){return .001}}class G0 extends Pt{get kind(){return ae.Heal}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(2,t)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.healPercentEveryFloor.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.HP,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 5}}class x0 extends Pt{get kind(){return ae.MagicalAbsorption}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){this.ctrl.data.stats.ElementAbsorption(this.heroKind,C.Fire).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,C.Ice).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,C.Thunder).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,C.Light).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,C.Dark).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.MDEF,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 1}}class F0 extends Pt{get kind(){return ae.MagicalCriticalChance}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 200}Cost(t){return 25+25*t+10*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,A.MagCritChance).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(A.MagCritChance,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .02}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 5e-4}}class I0 extends Pt{get kind(){return ae.MagicalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){this.ctrl.data.stats.ElementDamage(this.heroKind,C.Fire).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,C.Ice).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,C.Thunder).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,C.Light).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,C.Dark).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.MATK,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .5}get basePermEffect(){return 1}}class H0 extends Pt{get kind(){return ae.MoveSpeed}constructor(t){super(t)}RankCost(t){return 1+t}Cost(t){return 25+25*t+25*(Math.pow(10,t/5)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,A.MoveSpeed).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(A.MoveSpeed,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 50}get baseIncrementEffectValuePerRank(){return 10}get basePermEffect(){return .1}get basePermEffectMaxValue(){return 1e3}}class V0 extends Pt{get kind(){return ae.PhysicalAbsorption}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.ElementAbsorption(this.heroKind,C.Physical).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.DEF,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 1}}class N0 extends Pt{get kind(){return ae.PhysicalCriticalChance}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 200}Cost(t){return 25+25*t+10*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,A.PhysCritChance).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(A.PhysCritChance,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .02}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 5e-4}}class q0 extends Pt{get kind(){return ae.PhysicalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.ElementDamage(this.heroKind,C.Physical).RegisterMultiplier(new l(n.DungeonItem,i.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.ATK,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .5}get basePermEffect(){return 1}}class _0 extends Pt{get kind(){return ae.RestoreDodgeTimesec}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/5)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.dodgeTimeRestoreSecEveryFloor.RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.sdgCtrl.dodgeTimesec.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .1}get basePermEffectMaxValue(){return 20}}class W0 extends Pt{get kind(){return ae.SkillCastSpeed}constructor(t){super(t)}RankCost(t){return 2+2*t}get unlockDungeonCoinCost(){return 500}Cost(t){return 25*Math.pow(2,t)}SetEffect(){return this.ctrl.data.skill.skillCastSpeedModifier[this.heroKind].RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(m.SPD,new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .1}get baseIncrementEffectValuePerRank(){return .01}get basePermEffect(){return 1}}class U0 extends Pt{get kind(){return ae.SkillHitCount}constructor(t){super(t)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 5e4}Cost(t){return 50*Math.pow(2,t)}SetEffect(){this.ctrl.data.skill.extraSkillHitCount[this.heroKind].RegisterMultiplier(new l(n.DungeonItem,i.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<this.ctrl.data.skill.skillLevelBonus.length;t++)this.ctrl.data.skill.skillLevelBonus[t].RegisterMultiplier(new l(n.DungeonItemPermanent,i.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .5}}class O0 extends Pt{get kind(){return ae.TimeLimit}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/5)-1)}RankCost(t){return 1+t}SetGlobalEffect(){this.sdgCtrl.additionalTimeLimit.RegisterMultiplier(new l(n.DungeonItemPermanent,i.Add,()=>this.PermanentEffectValue))}get baseInitEffectValue(){return 10}get baseIncrementEffectValuePerRank(){return 2}get basePermEffect(){return .5}}class $0{constructor(t){c(this,"data");c(this,"battleCtrl");c(this,"initialDungeonCoin");c(this,"powerupList",[]);c(this,"skillSlotNum");c(this,"eqWeaponSlotNum");c(this,"eqArmorSlotNum");c(this,"eqJewelrySlotNum");c(this,"utilitySlotNum");c(this,"damageMultiplier");c(this,"damageCutMultiplier");c(this,"sdChallengeBossDamageMultiplier");c(this,"sdChallengeBossDamageCutMultiplier");c(this,"armoredFury");c(this,"wardedFury");c(this,"healPercentEveryFloor");c(this,"mpChargePercentEveryFloor");c(this,"dodgeTimesecLeft");c(this,"dodgeHealPercent");c(this,"dodgeTimeRestoreSecEveryFloor");this.battleCtrl=t,this.data=t.data,this.initialDungeonCoin=new x,this.skillSlotNum=new x(new l(n.Base,i.Add,()=>1)),this.eqWeaponSlotNum=new x(new l(n.Base,i.Add,()=>0)),this.eqArmorSlotNum=new x(new l(n.Base,i.Add,()=>0)),this.eqJewelrySlotNum=new x(new l(n.Base,i.Add,()=>0)),this.utilitySlotNum=new x(new l(n.Base,i.Add,()=>0)),this.damageMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.damageCutMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.sdChallengeBossDamageMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.sdChallengeBossDamageCutMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.armoredFury=new x,this.wardedFury=new x,this.healPercentEveryFloor=new x(new l(n.Base,i.Add,()=>0),()=>1,()=>0),this.mpChargePercentEveryFloor=new x(new l(n.Base,i.Add,()=>0),()=>1,()=>0),this.dodgeHealPercent=new x(new l(n.Base,i.Add,()=>0),()=>1,null),this.dodgeTimeRestoreSecEveryFloor=new x,this.SetPowerups()}get heroKind(){return this.battleCtrl.heroKind}get sdgCtrl(){return this.battleCtrl.data.sdg}Start(){this.damageMultiplier.RegisterMultiplier(new l(n.ArmoredFury,i.Mul,()=>this.armoredFury.Value()*Math.log2(Math.max(1,this.battleCtrl.data.stats.BasicStats(this.heroKind,m.DEF).After())))),this.damageMultiplier.RegisterMultiplier(new l(n.WardedFury,i.Mul,()=>this.wardedFury.Value()*Math.log2(Math.max(1,this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MDEF).After()))));for(let t=0;t<this.powerupList.length;t++)this.powerupList[t].Start()}SetPowerups(){this.powerupList.push(new G0(this)),this.powerupList.push(new O0(this)),this.powerupList.push(new y0(this)),this.powerupList.push(new C0(this)),this.powerupList.push(new _0(this)),this.powerupList.push(new P0(this)),this.powerupList.push(new v0(this)),this.powerupList.push(new T0(this)),this.powerupList.push(new W0(this)),this.powerupList.push(new N0(this)),this.powerupList.push(new F0(this)),this.powerupList.push(new E0(this)),this.powerupList.push(new H0(this)),this.powerupList.push(new q0(this)),this.powerupList.push(new I0(this)),this.powerupList.push(new V0(this)),this.powerupList.push(new x0(this)),this.powerupList.push(new U0(this)),this.powerupList.push(new L0(this)),this.powerupList.push(new B0(this)),this.powerupList.push(new k0(this))}Powerup(t){for(let s=0;s<this.powerupList.length;s++)if(this.powerupList[s].kind==t)return this.powerupList[s];return null}}class zc{constructor(t,s){c(this,"data");c(this,"heroKind");c(this,"tempValue");c(this,"isSlayerOil");c(this,"calculatedDamage");c(this,"elementAbsorptionValue");c(this,"tempTotalDamagePerHitCount");c(this,"tempTotalDamage");c(this,"tempExtraAfterDamage");c(this,"totalDamage");c(this,"electricDamage",0);c(this,"slayerOilDamage",0);c(this,"poisonDamagePerSec");c(this,"isPilfered");c(this,"battleCtrl");c(this,"fieldDebuffElement");c(this,"fieldDebuffPhyCrit");c(this,"fieldDebuffMagCrit");c(this,"fieldCurseMoveSpeedMul");c(this,"fieldDebuffDebuffRes");c(this,"isHero",!1);this.data=t,this.heroKind=s.heroKind,this.battleCtrl=s,this.fieldDebuffElement=Array(5).fill(0),this.fieldDebuffPhyCrit=0,this.fieldDebuffMagCrit=0,this.fieldCurseMoveSpeedMul=0,this.fieldDebuffDebuffRes=0}get level(){return this.data.source.enemyLevel}get species(){return this.data.source.enemySpecies}get color(){return this.species==O.Mimic?vt.Normal:this.data.source.enemyColor}DebuffFactor(t){return 1}DamageFactorElement(t){switch(t){case C.Physical:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[C.Physical].Value();case C.Fire:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[C.Fire].Value();case C.Ice:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[C.Ice].Value();case C.Thunder:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[C.Thunder].Value();case C.Light:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[C.Light].Value();case C.Dark:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[C.Dark].Value();default:return 1}}get atk(){return 0}get matk(){return 0}get isPet(){return!1}get def(){return 0}get mdef(){return 0}get spd(){return 0}get fire(){return 0}get ice(){return 0}get thunder(){return 0}get light(){return 0}get dark(){return 0}get extraAfterDamage(){return 0}get critDamage(){return 0}get damageFactor(){return 1}DamageCutRate(t,s){let a=1,u=0;switch(s){case C.Physical:u=this.def/(t+this.def);break;case C.Fire:a*=1-Math.min(.9,this.fire),u=this.mdef/(t+this.mdef);break;case C.Ice:a*=1-Math.min(.9,this.ice),u=this.mdef/(t+this.mdef);break;case C.Thunder:a*=1-Math.min(.9,this.thunder),u=this.mdef/(t+this.mdef);break;case C.Light:a*=1-Math.min(.9,this.light),u=this.mdef/(t+this.mdef);break;case C.Dark:a*=1-Math.min(.9,this.dark),u=this.mdef/(t+this.mdef);break}return a*(1-Math.min(.9999,this.DamageCutModifier(u)))}DamageModifier(t){return this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageMultiplier.Value():t}DamageCutModifier(t){return this.isHero&&this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageCutMultiplier.Value():t}CalculateDamage(t,s,a,u){return this.tempValue=t,this.tempValue*=this.DamageCutRate(t,a),this.tempValue<0?0:(this.tempValue*=this.damageFactor,this.tempValue*=this.DamageFactorElement(a),this.tempValue=Math.max(1,this.tempValue),u&&(this.tempValue*=s),this.tempValue)}Attacked(t,s,a,u,o){return this.isSlayerOil=!this.isHero&&this.battleCtrl.CurrentSlayerElement()!=0,this.isSlayerOil&&(o=this.battleCtrl.CurrentSlayerElement()),this.calculatedDamage=this.CalculateDamage(s,t.critDamage,o,u),this.tempTotalDamagePerHitCount=this.DamageModifier(this.calculatedDamage),this.tempTotalDamage=this.tempTotalDamagePerHitCount*a,this.slayerOilDamage=this.isSlayerOil?this.tempTotalDamage*this.battleCtrl.data.stats.ElementSlayerDamage(this.battleCtrl.heroKind,o).Value():0,this.totalDamage=this.tempTotalDamage+this.electricDamage+this.slayerOilDamage,this.tempExtraAfterDamage=this.totalDamage*t.extraAfterDamage,this.totalDamage+=this.tempExtraAfterDamage,this.totalDamage}AttackedInfo(){const t=this.data.battle.hero,s=this.data.skill.Skill(0,this.data.source.currentHero),a=s.DamageOrigin(t,!1),u=!0,o=this.data.source.currentHero==E.Angel?s.HitCount()/5:s.HitCount();let M=s.element;const D=!this.isHero&&this.battleCtrl.CurrentSlayerElement()!=0;D&&(M=this.battleCtrl.CurrentSlayerElement());let k={DamagePerHit:this.DamageModifier(this.CalculateDamage(a,t.critDamage,M,u)),tempTotalDamage:0,slayerOilDamage:0,electricDamage:0,totalBeforeExtraAfter:0,extraAfterDamagePerHit:0,extraAfterDamage:0,totalDamage:0,skill:s,hero:t,damage:a,element:M,SlayerOilValue:this.data.stats.ElementSlayerDamage(this.battleCtrl.heroKind,M).Value(),castTime:s.CalculateInterval(t),dps:0,realHitCount:o};return k.tempTotalDamage=k.DamagePerHit*o,k.slayerOilDamage=D?k.tempTotalDamage*k.SlayerOilValue:0,k.totalBeforeExtraAfter=k.tempTotalDamage+k.electricDamage+k.slayerOilDamage,k.extraAfterDamagePerHit=k.DamagePerHit*t.extraAfterDamage,k.extraAfterDamage=k.totalBeforeExtraAfter*t.extraAfterDamage,k.totalDamage=k.tempTotalDamage+k.electricDamage+k.slayerOilDamage+k.extraAfterDamage,k.dps=k.totalDamage/k.castTime,k}}class Jc extends zc{constructor(s,a){super(s,a);c(this,"difficulty",0)}get isPet(){return!1}get globalInformation(){return this.battleCtrl.data.monster.GlobalInformation(this.species,this.color)}get attackElement(){return this.globalInformation.AttackElement()}get hp(){return this.globalInformation.Hp(this.level,this.difficulty)}get mp(){return this.globalInformation.Mp(this.level,this.difficulty)}get atk(){return this.DebuffFactor(We.AtkDown)*this.globalInformation.Atk(this.level,this.difficulty)}get matk(){return this.DebuffFactor(We.MatkDown)*this.globalInformation.MAtk(this.level,this.difficulty)}get def(){return this.DebuffFactor(We.DefDown)*this.globalInformation.Def(this.level,this.difficulty)}get mdef(){return this.DebuffFactor(We.MdefDown)*this.globalInformation.MDef(this.level,this.difficulty)}get spd(){return this.DebuffFactor(We.SpdDown)*this.DebuffFactor(We.Stop)*this.globalInformation.Spd()}get fire(){return this.globalInformation.Fire()}get ice(){return this.globalInformation.Ice()}get thunder(){return this.globalInformation.Thunder()}get light(){return this.globalInformation.Light()}get dark(){return this.globalInformation.Dark()}get phyCrit(){return this.globalInformation.PhyCrit(this.level)}get magCrit(){return this.globalInformation.MagCrit(this.level)}get critDamage(){return this.globalInformation.CriticalDamage()}get debuffResistance(){return this.globalInformation.DebuffResistance()}get damageFactor(){return this.battleCtrl.data.stats.MonsterDamage(this.battleCtrl.heroKind,this.species).isLog=this.battleCtrl.data.source.isSuperDungeon,this.battleCtrl.data.stats.MonsterDamage(this.battleCtrl.heroKind,this.species).Value()}DamageFactorElement(s){return this.battleCtrl.data.stats.ElementDamage(this.battleCtrl.heroKind,s).isLog=this.battleCtrl.data.source.isSuperDungeon,this.battleCtrl.data.stats.ElementDamage(this.battleCtrl.heroKind,s).Value()}get exp(){return this.globalInformation.Exp(this.level,this.difficulty)}get resource(){return 1}CalculatedExp(s){let a=this.exp,u=this.level-s,o=u>=-60?u>=-40?u>=-20?u>20?u>40?u>60?u>80?u>100?u>150?u>200?u>300?a*.01:a*.1:a*.25:a*.5:a*.75:a*1:a*1.15:a*1.3:a*1.5:a*1.3:a*1.15:a*1;return this.color==vt.Metal&&(o*=1+this.battleCtrl.data.quest.TitleEffectValue(this.battleCtrl.heroKind,L.MetalHunter).sub),o}get gainFactor(){return this.battleCtrl.data.guild.Member(this.battleCtrl.heroKind).gainRate}Damage(){return this.globalInformation.Damage(this.level,this.difficulty)}}class z0 extends Jc{constructor(t,s){super(t,s)}get species(){return O.ChallengeBoss}get globalInformation(){return this.battleCtrl.data.monster.GlobalInformationChallengeBoss(this.challengeMonsterKind)}get challengeMonsterKind(){return this.battleCtrl.data.source.enemyChallenge}get hp(){let t=this.globalInformation.Hp(this.level,this.difficulty),s=this.level;switch(this.challengeMonsterKind){case lt.Florzporb:return t*Math.max(1,Math.pow(5,Math.max(0,s-300)/100))*Math.max(1,Math.pow(5,Math.max(0,s-400)/100));case lt.GuardianKor:return t*Math.max(1,Math.pow(10,Math.max(0,s-400)/100))*Math.max(1,Math.pow(5,Math.max(0,s-500)/100));case lt.Arachnetta:return t*Math.max(1,Math.pow(5,Math.max(0,s-350)/100))*Math.max(1,Math.pow(5,Math.max(0,s-450)/100));case lt.Nostro:return t*Math.max(1,Math.pow(10,Math.max(0,s-450)/100))*Math.max(1,Math.pow(5,Math.max(0,s-550)/100));case lt.LadyEmelda:return t*Math.pow(2,Math.max(1,s-300)/100)*Math.max(1,Math.pow(25,Math.max(0,s-600)/100));case lt.NariSune:return t*Math.max(1,Math.pow(5,Math.max(0,s-350)/100))*Math.max(1,Math.pow(10,Math.max(0,s-650)/100));case lt.Octobaddie:return t*Math.max(1,Math.pow(1e6,Math.max(0,s-400)/100))*Math.max(1,Math.pow(10,Math.max(0,s-700)/100));default:return t}}DamageModifier(t){return this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageMultiplier.Value()*this.battleCtrl.superDungeonCtrl.sdChallengeBossDamageMultiplier.Value():t}}class J0 extends zc{constructor(s,a,u){super(s,u);c(this,"isAutoMove",!0);c(this,"initUIAction");c(this,"tempSkillId");c(this,"tempSkill");c(this,"isHero",!0);this.battleCtrl=u,this.heroKind=a}get level(){return this.battleCtrl.data.source.heroLevel[this.heroKind]}StatsModifier(s){return this.battleCtrl.isSuperDungeon?Math.log10(Math.max(1,s)):s}Start(){}get hp(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.HP).Value()}get mp(){return Math.max(0,this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MP).Value()-this.battleCtrl.data.stats.heroes[this.heroKind].channeledMp.Value())}get atk(){return this.battleCtrl.data.source.isSuperDungeon&&this.battleCtrl.data.source.isActiveSdModifiers[950+dt.SwapATKWithDEF]?this.battleCtrl.data.stats.BasicStats(this.heroKind,m.DEF).Value():this.battleCtrl.data.stats.BasicStats(this.heroKind,m.ATK).Value()}get matk(){return this.battleCtrl.data.source.isSuperDungeon&&this.battleCtrl.data.source.isActiveSdModifiers[950+dt.SwapATKWithDEF]?this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MDEF).Value():this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MATK).Value()}get def(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.DEF).Value()}get mdef(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.MDEF).Value()}get spd(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,m.SPD).Value()}get fire(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,C.Fire).Value()+this.fieldDebuffElement[1]*this.battleCtrl.areaBattle.areaDebuffFactor}get ice(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,C.Ice).Value()+this.fieldDebuffElement[2]*this.battleCtrl.areaBattle.areaDebuffFactor}get thunder(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,C.Thunder).Value()+this.fieldDebuffElement[3]*this.battleCtrl.areaBattle.areaDebuffFactor}get light(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,C.Light).Value()+this.fieldDebuffElement[4]*this.battleCtrl.areaBattle.areaDebuffFactor}get dark(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,C.Dark).Value()+this.fieldDebuffElement[5]*this.battleCtrl.areaBattle.areaDebuffFactor}get phyCrit(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,A.PhysCritChance).Value()+this.fieldDebuffPhyCrit*this.battleCtrl.areaBattle.areaDebuffFactor}get magCrit(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,A.MagCritChance).Value()+this.fieldDebuffMagCrit*this.battleCtrl.areaBattle.areaDebuffFactor}get critDamage(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,A.CriticalDamage).Value()}get moveSpeed(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,A.MoveSpeed).Value()*this.fieldCurseMoveSpeedMul}get extraAfterDamage(){return this.battleCtrl.data.stats.Hero(this.heroKind).extraAfterDamage.Value()}get debuffResistance(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,A.DebuffRes).Value()+this.fieldDebuffDebuffRes*this.battleCtrl.areaBattle.areaDebuffFactor}get physicalAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,C.Physical).Value()}get fireAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,C.Fire).Value()}get iceAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,C.Ice).Value()}get thunderAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,C.Thunder).Value()}get lightAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,C.Light).Value()}get darkAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,C.Dark).Value()}get physicalInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,C.Physical).Value()}get fireInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,C.Fire).Value()}get iceInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,C.Ice).Value()}get thunderInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,C.Thunder).Value()}get lightInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,C.Light).Value()}get darkInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,C.Dark).Value()}get guardianKorInvalidChanceDamageHpPercent(){return Math.min(.25,this.battleCtrl.data.stats.heroes[this.heroKind].guardianKorInvalidDamageHpPercent.Value())}}class X0{constructor(t,s){c(this,"data");c(this,"heroKind");c(this,"hero");c(this,"monster");c(this,"challengeMonster");c(this,"areaBattle",{areaDebuffFactor:1});c(this,"superDungeonCtrl");c(this,"isSuperDungeon",!0);this.data=t,this.heroKind=s,this.superDungeonCtrl=new $0(this),this.monster=new Jc(t,this),this.challengeMonster=new z0(t,this),this.hero=new J0(t,this.heroKind,this)}Start(){this.superDungeonCtrl.Start()}CurrentSlayerElement(){for(let t=0;t<H.Element;++t){let s=t;if(this.data.stats.ElementSlayerDamage(this.heroKind,s).Value()>0)return s}return C.Physical}Enemy(){return this.data.source.enemySpecies==O.ChallengeBoss?this.challengeMonster:this.monster}}var _t=(e=>(e[e.Hp=0]="Hp",e[e.Atk=1]="Atk",e[e.MAtk=2]="MAtk",e[e.MoveSpeed=3]="MoveSpeed",e[e.SkillProficiency=4]="SkillProficiency",e[e.EquipProficiency=5]="EquipProficiency",e[e.GoldGain=6]="GoldGain",e[e.ExpGain=7]="ExpGain",e))(_t||{});class j0{constructor(t,s,a){c(this,"data");c(this,"heroKind");c(this,"kind");this.data=t,this.heroKind=s,this.kind=a}get effectValue(){switch(this.kind){case _t.Atk:case _t.Hp:case _t.MAtk:case _t.ExpGain:case _t.EquipProficiency:case _t.SkillProficiency:return .5*this.data.blessingInfo.effectMultipliers[this.heroKind].Value();case _t.MoveSpeed:return Math.min(1,.25*this.data.blessingInfo.effectMultipliers[this.heroKind].Value())}}Start(){this.SetEffect()}SetEffect(){switch(this.kind){case _t.Atk:this.data.stats.BasicStats(this.heroKind,m.ATK).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.EquipProficiency:this.data.stats.HeroStats(this.heroKind,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.ExpGain:this.data.stats.HeroStats(this.heroKind,A.ExpGain).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.EquipProficiency:this.data.stats.GoldGain().RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.Hp:this.data.stats.BasicStats(this.heroKind,m.HP).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.MAtk:this.data.stats.BasicStats(this.heroKind,m.MATK).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.MoveSpeed:this.data.stats.HeroStats(this.heroKind,A.MoveSpeed).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case _t.SkillProficiency:this.data.stats.HeroStats(this.heroKind,A.SkillProficiencyGain).RegisterMultiplier(new l(n.Blessing,i.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break}}}class Y0{constructor(t){c(this,"data");c(this,"effectMultipliers",Array(H.HeroKind));c(this,"duration");c(this,"heroes",Array(H.HeroKind));this.data=t,this.duration=new x(new l(n.Base,i.Add,()=>180));for(let s=0;s<this.effectMultipliers.length;s++)this.effectMultipliers[s]=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.heroes.length;s++){this.heroes[s]=[];for(let a=0;a<8;a++)this.heroes[s].push(new j0(this.data,s,a))}}SetEffectMultiplier(t){for(let s=0;s<this.effectMultipliers.length;s++)this.effectMultipliers[s].RegisterMultiplier(t)}Start(){for(let t=0;t<this.heroes.length;t++)for(let s=0;s<8;s++)this.heroes[t][s].Start()}}var Xc=(e=>(e[e.RaidBossBattle=0]="RaidBossBattle",e[e.SingleBossBattle=1]="SingleBossBattle",e[e.HandicappedBattle=2]="HandicappedBattle",e[e.SuperDungeon=3]="SuperDungeon",e))(Xc||{}),Z;class Oe{constructor(t,s){Ht(this,Z,void 0);c(this,"handicapKindList",[]);c(this,"type",Xc.RaidBossBattle);c(this,"superDungeonId");c(this,"kind");switch(Vt(this,Z,t),this.kind=s,this.kind){case W.SDSlime:this.superDungeonId=0;break;case W.SDSpider:this.superDungeonId=1;break;case W.SDBatTreant:this.superDungeonId=2;break;case W.SDFairyFlametiger:this.superDungeonId=3;break;case W.SDSlimeMslime:this.superDungeonId=4;break}}get statRewardMultiplier(){return b(this,Z).challenge.sdStatRewardMultiplier.Value()}Start(){this.SetReward()}NameString(){const t=W[this.kind];switch(this.kind){case W.SDSlime:return $e.SDName(0);case W.SDSpider:return $e.SDName(1);case W.SDBatTreant:return $e.SDName(2);case W.SDFairyFlametiger:return $e.SDName(3);case W.SDSlimeMslime:return $e.SDName(4);default:return t}}EffectValueString(t){switch(this.kind){case W.SDSlime:switch(t){case E.Warrior:return`Stone Gain ${h.percent(this.FloorRewardValue(E.Warrior))}`;case E.Wizard:return`Crystal Gain ${h.percent(this.FloorRewardValue(E.Wizard))}`;case E.Angel:return`Leaf Gain ${h.percent(this.FloorRewardValue(E.Angel))}`;case E.Thief:return`Gold Cap ${h.percent(this.FloorRewardValue(E.Thief))}`;case E.Archer:return`Gold Gain ${h.percent(this.FloorRewardValue(E.Archer))}`;case E.Tamer:return`Slime Coin Cap ${h.percent(this.FloorRewardValue(E.Tamer))}`}case W.SDSpider:switch(t){case E.Warrior:return`HP ${h.percent(this.FloorRewardValue(E.Warrior))}`;case E.Wizard:return`MP ${h.percent(this.FloorRewardValue(E.Wizard))}`;case E.Angel:return`ATK ${h.percent(this.FloorRewardValue(E.Angel))}`;case E.Thief:return`MATK ${h.percent(this.FloorRewardValue(E.Thief))}`;case E.Archer:return`DEF ${h.percent(this.FloorRewardValue(E.Archer))}`;case E.Tamer:return`MDEF ${h.percent(this.FloorRewardValue(E.Tamer))}`}case W.SDBatTreant:switch(t){case E.Warrior:return`Physical Damage ${h.percent(this.FloorRewardValue(E.Warrior))}`;case E.Wizard:return`Physical Critical Chance ${h.percent(this.FloorRewardValue(E.Wizard))}`;case E.Angel:return`Armored Fury ${h.percent(this.FloorRewardValue(E.Angel))}`;case E.Thief:return`Critical Damage ${h.percent(this.FloorRewardValue(E.Thief))}`;case E.Archer:return`Pet Base Critical Damage ${h.percent(this.FloorRewardValue(E.Archer))}`;case E.Tamer:return`Pet Base Physical Critical Chance ${h.percent(this.FloorRewardValue(E.Tamer))}`}case W.SDFairyFlametiger:switch(t){case E.Warrior:return`Magical Damage ${h.percent(this.FloorRewardValue(E.Warrior))}`;case E.Wizard:return`Magical Critical Chance ${h.percent(this.FloorRewardValue(E.Wizard))}`;case E.Angel:return`Warded Fury ${h.percent(this.FloorRewardValue(E.Angel))}`;case E.Thief:return`Debuff Resistance ${h.percent(this.FloorRewardValue(E.Thief))}`;case E.Archer:return`Element Resistance ${h.percent(this.FloorRewardValue(E.Archer))}`;case E.Tamer:return`Pet Base Magical Critical Chance ${h.percent(this.FloorRewardValue(E.Tamer))}`}case W.SDSlimeMslime:switch(t){case E.Warrior:return`SD Damage Multiplier ${h.percent(this.FloorRewardValue(E.Warrior))}`;case E.Wizard:return`SD Challenge BOSS Damage Multiplier ${h.percent(this.FloorRewardValue(E.Wizard))}`;case E.Angel:return`SD Damage Cut Multiplier ${h.percent(this.FloorRewardValue(E.Angel))}`;case E.Thief:return`SD Challenge Boss Damage Cut Multiplier ${h.percent(this.FloorRewardValue(E.Thief))}`;case E.Archer:return`SD Armored Fury ${h.percent(this.FloorRewardValue(E.Archer))}`;case E.Tamer:return`SD Warded Fury ${h.percent(this.FloorRewardValue(E.Tamer))}`}default:return"-"}}IsCleared(t){return b(this,Z).source.isClearedChallenge[t+10*this.kind]}IsClearedOnce(){for(let t=0;t<H.HeroKind;t++)if(this.IsCleared(t))return!0;return!1}GetMaxModifierCleared(t){return b(this,Z).source.maxModifierCleareds[t+10*this.superDungeonId]}BaseRewardValueIncrementPerFloor(t){switch(this.superDungeonId){case 0:switch(t){case E.Warrior:return 1;case E.Wizard:return 1;case E.Angel:return 1;case E.Thief:return .2;case E.Archer:return .05;case E.Tamer:return .05;default:return 0}case 1:switch(t){case E.Warrior:return .025;case E.Wizard:return .025;case E.Angel:return .025;case E.Thief:return .025;case E.Archer:return .025;case E.Tamer:return .025;default:return 0}case 2:switch(t){case E.Warrior:return .01;case E.Wizard:return .01;case E.Angel:return .01;case E.Thief:return .01;case E.Archer:return .01;case E.Tamer:return .01;default:return 0}case 3:switch(t){case E.Warrior:return .01;case E.Wizard:return .01;case E.Angel:return .01;case E.Thief:return .01;case E.Archer:return .01;case E.Tamer:return .01;default:return 0}case 4:switch(t){case E.Warrior:return .005;case E.Wizard:return .005;case E.Angel:return 1/400;case E.Thief:return 1/400;case E.Archer:return 1/400;case E.Tamer:return 1/400;default:return 0}default:return 0}}RewardValueIncrementPerFloor(t){return this.BaseRewardValueIncrementPerFloor(t)*this.statRewardMultiplier}SuperDungeonMaxFloorReached(t){return b(this,Z).source.superDungeonMaxFloorsReached[t+10*this.superDungeonId]}FloorRewardValue(t){return this.RewardValueIncrementPerFloor(t)*this.SuperDungeonMaxFloorReached(t)*(1+.1*this.GetMaxModifierCleared(t))}IsClearedCompleted(){for(let t=0;t<H.HeroKind;t++)if(!this.IsCleared(t))return!1;return!0}get isReceivedRewardOnce(){return b(this,Z).source.isReceivedRewardsChallenge[this.kind*10]}set isReceivedRewardOnce(t){b(this,Z).source.isReceivedRewardsChallenge[this.kind*10]=t}get isReceivedRewardWarrior(){return b(this,Z).source.isReceivedRewardsChallenge[1+this.kind*10]}set isReceivedRewardWarrior(t){b(this,Z).source.isReceivedRewardsChallenge[1+this.kind*10]=t}get isReceivedRewardWizard(){return b(this,Z).source.isReceivedRewardsChallenge[2+this.kind*10]}set isReceivedRewardWizard(t){b(this,Z).source.isReceivedRewardsChallenge[2+this.kind*10]=t}get isReceivedRewardAngel(){return b(this,Z).source.isReceivedRewardsChallenge[3+this.kind*10]}set isReceivedRewardAngel(t){b(this,Z).source.isReceivedRewardsChallenge[3+this.kind*10]=t}get isReceivedRewardThief(){return b(this,Z).source.isReceivedRewardsChallenge[4+this.kind*10]}set isReceivedRewardThief(t){b(this,Z).source.isReceivedRewardsChallenge[4+this.kind*10]=t}get isReceivedRewardArcher(){return b(this,Z).source.isReceivedRewardsChallenge[5+this.kind*10]}set isReceivedRewardArcher(t){b(this,Z).source.isReceivedRewardsChallenge[5+this.kind*10]=t}get isReceivedRewardTamer(){return b(this,Z).source.isReceivedRewardsChallenge[6+this.kind*10]}set isReceivedRewardTamer(t){b(this,Z).source.isReceivedRewardsChallenge[6+this.kind*10]=t}get isReceivedRewardComplete(){return b(this,Z).source.isReceivedRewardsChallenge[7+this.kind*10]}set isReceivedRewardComplete(t){b(this,Z).source.isReceivedRewardsChallenge[7+this.kind*10]=t}IsReceivedRewardClass(t){switch(t){case E.Warrior:return this.isReceivedRewardWarrior;case E.Wizard:return this.isReceivedRewardWizard;case E.Angel:return this.isReceivedRewardAngel;case E.Thief:return this.isReceivedRewardThief;case E.Archer:return this.isReceivedRewardArcher;case E.Tamer:return this.isReceivedRewardTamer;default:return!1}}SetReceivedRewardClass(t,s){switch(t){case E.Warrior:this.isReceivedRewardWarrior=s;break;case E.Wizard:this.isReceivedRewardWizard=s;break;case E.Angel:this.isReceivedRewardAngel=s;break;case E.Thief:this.isReceivedRewardThief=s;break;case E.Archer:this.isReceivedRewardArcher=s;break;case E.Tamer:this.isReceivedRewardTamer=s;break}}get rewardMultiplier(){return b(this,Z).challenge.permanentRewardMultiplier.Value()}SetReward(){switch(this.kind){case W.RaidFlorzporb100:break;case W.SoloFlorzporb100:this.SetRewardEquipmentSlot(T.Weapon);break;case W.RaidArachnetta150:break;case W.SoloArachnetta150:break;case W.RaidGuardianKor200:break;case W.SoloGuardianKor200:this.SetRewardEquipmentSlot(T.Jewelry);break;case W.HCArena1:break;case W.HCFlorzporb100:this.SetRewardBasicStats(.1);break;case W.HCArachnetta150:this.SetRewardBasicStats(.2);break;case W.HCGuardianKor200:this.SetRewardBasicStats(.3);break;case W.HCArena2:break;case W.RaidNostro250:break;case W.SoloNostro250:this.SetRewardEquipmentSlot(T.Armor);break;case W.HCNostro250:this.SetRewardBasicStats(.4);break;case W.RaidLadyEmelda300:break;case W.SoloLadyEmelda300:this.SetRewardEquipmentSlot(T.Weapon);break;case W.HCLadyEmelda300:this.SetRewardBasicStats(.5);break;case W.RaidNariSune350:break;case W.SoloNariSune350:this.SetRewardEquipmentSlot(T.Jewelry);break;case W.HCNariSune350:this.SetRewardBasicStats(.6);break;case W.RaidOctobaddie400:break;case W.SoloOctobaddie400:this.SetRewardEquipmentSlot(T.Armor);break;case W.HCOctobaddie400:this.SetRewardOcto([.1,.1,.1,1,1,1]);break;case W.RaidBananoon450:break;case W.SoloBananoon450:break;case W.HCBananoon450:break;case W.RaidGlorbliorbus500:break;case W.SoloGlorbliorbus500:break;case W.HCGlorbliorbus500:break;case W.RaidDistortionSlime550:break;case W.SoloDistortionSlime550:break;case W.HCDistortionSlime550:break;case W.RaidFlorzporb200:break;case W.SoloFlorzporb200:break;case W.HCFlorzporb200:this.SetRewardBasicStats(.2);break;case W.RaidFlorzporb300:break;case W.SoloFlorzporb300:break;case W.HCFlorzporb300:this.SetRewardBasicStats(.3);break;case W.RaidArachnetta250:break;case W.SoloArachnetta250:break;case W.HCArachnetta250:this.SetRewardBasicStats(.3);break;case W.RaidArachnetta350:break;case W.SoloArachnetta350:break;case W.HCArachnetta350:this.SetRewardBasicStats(.4);break;case W.RaidGuardianKor300:break;case W.SoloGuardianKor300:break;case W.HCGuardianKor300:this.SetRewardBasicStats(.4);break;case W.RaidGuardianKor400:break;case W.SoloGuardianKor400:break;case W.HCGuardianKor400:this.SetRewardBasicStats(.5);break;case W.RaidNostro350:break;case W.SoloNostro350:break;case W.HCNostro350:this.SetRewardBasicStats(.5);break;case W.RaidNostro450:break;case W.SoloNostro450:break;case W.HCNostro450:this.SetRewardBasicStats(.6);break;case W.HCArena3:break;case W.HCArena4:break;case W.HCArena5:break;case W.HCArena6:break;case W.HCArena7:break;case W.HCArena8:break;case W.HCArena9:break;case W.HCArena10:break;case W.RaidFlorzporb400:break;case W.SoloFlorzporb400:break;case W.HCFlorzporb400:this.SetRewardBasicStats(.4);break;case W.RaidArachnetta450:break;case W.SoloArachnetta450:break;case W.HCArachnetta450:this.SetRewardBasicStats(.5);break;case W.RaidGuardianKor500:break;case W.SoloGuardianKor500:break;case W.HCGuardianKor500:this.SetRewardBasicStats(.6);break;case W.RaidNostro550:break;case W.SoloNostro550:break;case W.HCNostro550:this.SetRewardBasicStats(.7);break;case W.RaidLadyEmelda400:break;case W.SoloLadyEmelda400:break;case W.HCLadyEmelda400:this.SetRewardBasicStats(.6);break;case W.RaidLadyEmelda500:break;case W.SoloLadyEmelda500:break;case W.HCLadyEmelda500:this.SetRewardBasicStats(.7);break;case W.RaidLadyEmelda600:break;case W.SoloLadyEmelda600:break;case W.HCLadyEmelda600:this.SetRewardBasicStats(.8);break;case W.RaidNariSune450:break;case W.SoloNariSune450:break;case W.HCNariSune450:this.SetRewardBasicStats(.7);break;case W.RaidNariSune550:break;case W.SoloNariSune550:break;case W.HCNariSune550:this.SetRewardBasicStats(.8);break;case W.RaidNariSune650:break;case W.SoloNariSune650:break;case W.HCNariSune650:this.SetRewardBasicStats(.9);break;case W.SDSlime:b(this,Z).stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Warrior),()=>this.isReceivedRewardWarrior)),b(this,Z).stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Wizard),()=>this.isReceivedRewardWizard)),b(this,Z).stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Angel),()=>this.isReceivedRewardAngel)),b(this,Z).resource.goldCap.RegisterMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Thief),()=>this.isReceivedRewardThief)),b(this,Z).stats.GoldGain().RegisterMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Archer),()=>this.isReceivedRewardArcher)),b(this,Z).resource.slimeCoinCap.RegisterMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Tamer),()=>this.isReceivedRewardTamer));break;case W.RaidOctobaddie500:break;case W.SoloOctobaddie500:break;case W.HCOctobaddie500:this.SetRewardOcto([.2,.2,.2,5,5,5]);break;case W.RaidOctobaddie600:break;case W.SoloOctobaddie600:break;case W.HCOctobaddie600:this.SetRewardOcto([.4,.4,.4,25,25,25]);break;case W.RaidOctobaddie700:break;case W.SoloOctobaddie700:break;case W.HCOctobaddie700:this.SetRewardOcto([.8,.8,.8,125,125,125]);break;case W.SDSpider:b(this,Z).stats.SetEffectBasicStats(m.HP,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Warrior),()=>this.isReceivedRewardWarrior)),b(this,Z).stats.SetEffectBasicStats(m.MP,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Wizard),()=>this.isReceivedRewardWizard)),b(this,Z).stats.SetEffectBasicStats(m.ATK,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Angel),()=>this.isReceivedRewardAngel)),b(this,Z).stats.SetEffectBasicStats(m.MATK,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Thief),()=>this.isReceivedRewardThief)),b(this,Z).stats.SetEffectBasicStats(m.DEF,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Archer),()=>this.isReceivedRewardArcher)),b(this,Z).stats.SetEffectBasicStats(m.MDEF,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Tamer),()=>this.isReceivedRewardTamer));break;case W.SDBatTreant:b(this,Z).stats.SetEffectElementDamage(C.Physical,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Warrior),()=>this.isReceivedRewardWarrior)),b(this,Z).stats.SetEffectStats(A.PhysCritChance,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Wizard),()=>this.isReceivedRewardWizard)),b(this,Z).stats.SetEffectStats(A.ArmoredFury,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Angel),()=>this.isReceivedRewardAngel)),b(this,Z).stats.SetEffectStats(A.CriticalDamage,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Thief),()=>this.isReceivedRewardThief)),b(this,Z).stats.SetEffectStats(A.PetCriticalDamage,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Archer),()=>this.isReceivedRewardArcher)),b(this,Z).stats.SetEffectStats(A.PetPhysCritChance,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Tamer),()=>this.isReceivedRewardTamer));break;case W.SDFairyFlametiger:b(this,Z).stats.SetEffectMagicalDamage(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Warrior),()=>this.isReceivedRewardWarrior)),b(this,Z).stats.SetEffectStats(A.MagCritChance,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Wizard),()=>this.isReceivedRewardWizard)),b(this,Z).stats.SetEffectStats(A.WardedFury,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Angel),()=>this.isReceivedRewardAngel)),b(this,Z).stats.SetEffectStats(A.DebuffRes,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Thief),()=>this.isReceivedRewardThief)),b(this,Z).stats.SetEffectElementResistance(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Archer),()=>this.isReceivedRewardArcher)),b(this,Z).stats.SetEffectStats(A.PetMagCritChance,new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Tamer),()=>this.isReceivedRewardTamer));break;case W.SDSlimeMslime:b(this,Z).sdg.SetEffectSDDamageMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Warrior),()=>this.isReceivedRewardWarrior)),b(this,Z).sdg.SetEffectSDChallengeBossDamageMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Wizard),()=>this.isReceivedRewardWizard)),b(this,Z).sdg.SetEffectSDDamageCutMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Angel),()=>this.isReceivedRewardAngel)),b(this,Z).sdg.SetEffectSDChallengeBossDamageCutMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Thief),()=>this.isReceivedRewardThief)),b(this,Z).sdg.SetEffectSDArmoredFuryMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Archer),()=>this.isReceivedRewardArcher)),b(this,Z).sdg.SetEffectSDWardedFuryMultiplier(new l(n.SuperDungeon,i.Mul,()=>this.FloorRewardValue(E.Tamer),()=>this.isReceivedRewardTamer));break}}SetRewardEquipmentSlot(t){switch(t){case T.Weapon:b(this,Z).inventory.equipWeaponUnlockedNum[0].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardWarrior)),b(this,Z).inventory.equipWeaponUnlockedNum[1].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardWizard)),b(this,Z).inventory.equipWeaponUnlockedNum[2].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardAngel)),b(this,Z).inventory.equipWeaponUnlockedNum[3].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardThief)),b(this,Z).inventory.equipWeaponUnlockedNum[4].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardArcher)),b(this,Z).inventory.equipWeaponUnlockedNum[5].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardTamer));break;case T.Armor:b(this,Z).inventory.equipArmorUnlockedNum[0].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardWarrior)),b(this,Z).inventory.equipArmorUnlockedNum[1].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardWizard)),b(this,Z).inventory.equipArmorUnlockedNum[2].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardAngel)),b(this,Z).inventory.equipArmorUnlockedNum[3].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardThief)),b(this,Z).inventory.equipArmorUnlockedNum[4].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardArcher)),b(this,Z).inventory.equipArmorUnlockedNum[5].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardTamer));break;case T.Jewelry:b(this,Z).inventory.equipJewelryUnlockedNum[0].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardWarrior)),b(this,Z).inventory.equipJewelryUnlockedNum[1].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardWizard)),b(this,Z).inventory.equipJewelryUnlockedNum[2].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardAngel)),b(this,Z).inventory.equipJewelryUnlockedNum[3].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardThief)),b(this,Z).inventory.equipJewelryUnlockedNum[4].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardArcher)),b(this,Z).inventory.equipJewelryUnlockedNum[5].RegisterMultiplier(new l(n.Challenge,i.Add,()=>1,()=>this.isReceivedRewardTamer));break}}SetRewardBasicStats(t){b(this,Z).stats.SetEffectBasicStats(m.HP,new l(n.Challenge,i.Mul,()=>t*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),b(this,Z).stats.SetEffectBasicStats(m.MP,new l(n.Challenge,i.Mul,()=>t*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),b(this,Z).stats.SetEffectBasicStats(m.ATK,new l(n.Challenge,i.Mul,()=>t*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),b(this,Z).stats.SetEffectBasicStats(m.MATK,new l(n.Challenge,i.Mul,()=>t*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),b(this,Z).stats.SetEffectBasicStats(m.DEF,new l(n.Challenge,i.Mul,()=>t*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),b(this,Z).stats.SetEffectBasicStats(m.MDEF,new l(n.Challenge,i.Mul,()=>t*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}SetRewardOcto(t){b(this,Z).stats.SetEffectStats(A.ArmoredFury,new l(n.Challenge,i.Mul,()=>t[0]*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),b(this,Z).stats.SetEffectStats(A.WardedFury,new l(n.Challenge,i.Mul,()=>t[1]*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),b(this,Z).resource.goldCap.RegisterMultiplier(new l(n.Challenge,i.Mul,()=>t[2]*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),b(this,Z).stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.Challenge,i.Mul,()=>t[3]*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),b(this,Z).stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.Challenge,i.Mul,()=>t[4]*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),b(this,Z).stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.Challenge,i.Mul,()=>t[5]*b(this,Z).challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}Z=new WeakMap;var Ne;class Z0{constructor(t){Ht(this,Ne,void 0);c(this,"raidbossList",[]);c(this,"solobossList",[]);c(this,"handicapList",[]);c(this,"superdungeonList",[]);c(this,"challengeList",[]);c(this,"permanentRewardMultiplier");c(this,"sdStatRewardMultiplier");Vt(this,Ne,t),this.permanentRewardMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.sdStatRewardMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.solobossList.push(new Oe(b(this,Ne),W.SoloFlorzporb100)),this.solobossList.push(new Oe(b(this,Ne),W.SoloGuardianKor200)),this.solobossList.push(new Oe(b(this,Ne),W.SoloLadyEmelda300)),this.solobossList.push(new Oe(b(this,Ne),W.SoloLadyEmelda400)),this.solobossList.push(new Oe(b(this,Ne),W.SoloNariSune350)),this.solobossList.push(new Oe(b(this,Ne),W.SoloNostro250)),this.solobossList.push(new Oe(b(this,Ne),W.SoloOctobaddie400)),this.handicapList.push(new Oe(b(this,Ne),W.HCFlorzporb100)),this.handicapList.push(new Oe(b(this,Ne),W.HCFlorzporb200)),this.handicapList.push(new Oe(b(this,Ne),W.HCFlorzporb300)),this.handicapList.push(new Oe(b(this,Ne),W.HCFlorzporb400)),this.handicapList.push(new Oe(b(this,Ne),W.HCArachnetta150)),this.handicapList.push(new Oe(b(this,Ne),W.HCArachnetta250)),this.handicapList.push(new Oe(b(this,Ne),W.HCArachnetta350)),this.handicapList.push(new Oe(b(this,Ne),W.HCArachnetta450)),this.handicapList.push(new Oe(b(this,Ne),W.HCGuardianKor200)),this.handicapList.push(new Oe(b(this,Ne),W.HCGuardianKor300)),this.handicapList.push(new Oe(b(this,Ne),W.HCGuardianKor400)),this.handicapList.push(new Oe(b(this,Ne),W.HCGuardianKor500)),this.handicapList.push(new Oe(b(this,Ne),W.HCLadyEmelda300)),this.handicapList.push(new Oe(b(this,Ne),W.HCLadyEmelda400)),this.handicapList.push(new Oe(b(this,Ne),W.HCLadyEmelda500)),this.handicapList.push(new Oe(b(this,Ne),W.HCLadyEmelda600)),this.handicapList.push(new Oe(b(this,Ne),W.HCNostro250)),this.handicapList.push(new Oe(b(this,Ne),W.HCNostro350)),this.handicapList.push(new Oe(b(this,Ne),W.HCNostro450)),this.handicapList.push(new Oe(b(this,Ne),W.HCNostro550)),this.handicapList.push(new Oe(b(this,Ne),W.HCNariSune350)),this.handicapList.push(new Oe(b(this,Ne),W.HCNariSune450)),this.handicapList.push(new Oe(b(this,Ne),W.HCNariSune550)),this.handicapList.push(new Oe(b(this,Ne),W.HCNariSune650)),this.handicapList.push(new Oe(b(this,Ne),W.HCOctobaddie400)),this.handicapList.push(new Oe(b(this,Ne),W.HCOctobaddie500)),this.handicapList.push(new Oe(b(this,Ne),W.HCOctobaddie600)),this.handicapList.push(new Oe(b(this,Ne),W.HCOctobaddie700)),this.superdungeonList.push(new Oe(b(this,Ne),W.SDSlime)),this.superdungeonList.push(new Oe(b(this,Ne),W.SDSpider)),this.superdungeonList.push(new Oe(b(this,Ne),W.SDBatTreant)),this.superdungeonList.push(new Oe(b(this,Ne),W.SDFairyFlametiger)),this.superdungeonList.push(new Oe(b(this,Ne),W.SDSlimeMslime))}Start(){this.handicapList.forEach(t=>{t.Start()}),this.superdungeonList.forEach(t=>{t.Start()}),this.solobossList.forEach(t=>{t.Start()})}}Ne=new WeakMap;class Q0{constructor(){c(this,"costReduction");this.costReduction=new x(new l(n.Base,i.Add,()=>1),()=>.9,()=>0)}}var hi=(e=>(e[e.Nothing=0]="Nothing",e[e.NitroMaxCharger=1]="NitroMaxCharger",e[e.AbilityReset=2]="AbilityReset",e[e.GuildAbilityReset=3]="GuildAbilityReset",e[e.DictionaryUpgradeReset=4]="DictionaryUpgradeReset",e[e.AdvancedAutoDisassemblingEquipment=5]="AdvancedAutoDisassemblingEquipment",e[e.AdvancedAutoDisassemblePotion=6]="AdvancedAutoDisassemblePotion",e[e.SuperQueue=7]="SuperQueue",e[e.SuperQueueForAlchemy=8]="SuperQueueForAlchemy",e[e.ClassSkillSlot1=9]="ClassSkillSlot1",e[e.GlobalSkillSlot1=10]="GlobalSkillSlot1",e[e.EquipmentInventorySlot10=11]="EquipmentInventorySlot10",e[e.EquipmentWeaponSlot1=12]="EquipmentWeaponSlot1",e[e.EquipmentArmorSlot1=13]="EquipmentArmorSlot1",e[e.EquipmentJewelrySlot1=14]="EquipmentJewelrySlot1",e[e.SkillTenacity=15]="SkillTenacity",e[e.EquipmentTenacity=16]="EquipmentTenacity",e[e.AdvancedAutoRebirthTiming=17]="AdvancedAutoRebirthTiming",e[e.AdvancedAutoRebirthFavoriteArea=18]="AdvancedAutoRebirthFavoriteArea",e[e.AdvancedAutoRebirthTravelingBestExpArea=19]="AdvancedAutoRebirthTravelingBestExpArea",e[e.AdvancedAutoAbilityPointAdder=20]="AdvancedAutoAbilityPointAdder",e[e.UpgradeQueue5=21]="UpgradeQueue5",e[e.AlchemyQueue10=22]="AlchemyQueue10",e[e.AutoDisassembleEquipmentSlot5=23]="AutoDisassembleEquipmentSlot5",e[e.Tier1RebirthUpgradeReset=24]="Tier1RebirthUpgradeReset",e[e.Tier2RebirthUpgradeReset=25]="Tier2RebirthUpgradeReset",e[e.Tier3RebirthUpgradeReset=26]="Tier3RebirthUpgradeReset",e[e.RebirthTier4UpgradeReset=27]="RebirthTier4UpgradeReset",e[e.RebirthTier5UpgradeReset=28]="RebirthTier5UpgradeReset",e[e.RebirthTier6UpgradeReset=29]="RebirthTier6UpgradeReset",e[e.ActivePetSlot5=30]="ActivePetSlot5",e[e.AdditionalEpicCoinDailyQuest=31]="AdditionalEpicCoinDailyQuest",e[e.ImprovingMinimumDailyQuestRarity=32]="ImprovingMinimumDailyQuestRarity",e[e.EquipUtilitySlot1=33]="EquipUtilitySlot1",e[e.UtilityInventorySlot5=34]="UtilityInventorySlot5",e[e.Tier1WorldAscensionUpgradeReset=35]="Tier1WorldAscensionUpgradeReset",e[e.FavoriteQuest=36]="FavoriteQuest",e[e.Multitrapper=37]="Multitrapper",e[e.UtilityKeeper=38]="UtilityKeeper",e[e.Convene=39]="Convene",e[e.SwarmChaser=40]="SwarmChaser",e[e.EasyAccessEquipment=41]="EasyAccessEquipment",e[e.AdvancedAutoDisassembleCraftedEquipment=42]="AdvancedAutoDisassembleCraftedEquipment",e[e.AdvancedAutoBuyTraps=43]="AdvancedAutoBuyTraps",e[e.AreaDungeonPrestigeReset=44]="AreaDungeonPrestigeReset",e[e.ExpeditionTeamSlot1=45]="ExpeditionTeamSlot1",e[e.BribesForIEH1=46]="BribesForIEH1",e[e.EquipmentLoadouts=47]="EquipmentLoadouts",e[e.RegularDailyChest=48]="RegularDailyChest",e[e.SmartUseOfProficiencyScrolls=49]="SmartUseOfProficiencyScrolls",e[e.EasyAccessSkill=50]="EasyAccessSkill",e[e.Pause=51]="Pause",e[e.PurpleFoxMastery=52]="PurpleFoxMastery",e[e.EquipmentEnchantFilter=53]="EquipmentEnchantFilter",e[e.EasyAccessQuest=54]="EasyAccessQuest",e[e.SkillLoadouts=55]="SkillLoadouts",e[e.AdvancedAutoProficiencyScroll=56]="AdvancedAutoProficiencyScroll",e[e.OneClickChallenges=57]="OneClickChallenges",e[e.ScrollFilter=58]="ScrollFilter",e[e.PersistentSkillSet=59]="PersistentSkillSet",e[e.AutoAreaProgression=60]="AutoAreaProgression",e[e.NitroCapExpansion=61]="NitroCapExpansion",e[e.AdvancedAutoRebirthLazyQuestingMode=62]="AdvancedAutoRebirthLazyQuestingMode",e[e.Nitro_OfflineBonus=63]="Nitro_OfflineBonus",e[e.AutoMysteriousWaterAdder=64]="AutoMysteriousWaterAdder",e[e.SmartUseOfAnvils=65]="SmartUseOfAnvils",e[e.EasyAccessChallenge=66]="EasyAccessChallenge",e))(hi||{}),Va=(e=>(e[e.EpicCoin500=0]="EpicCoin500",e[e.EpicCoin1050=1]="EpicCoin1050",e[e.EpicCoin2650=2]="EpicCoin2650",e[e.EpicCoin5500=3]="EpicCoin5500",e[e.EpicCoin12000=4]="EpicCoin12000",e[e.EpicCoin18500=5]="EpicCoin18500",e[e.EpicCoin31000=6]="EpicCoin31000",e[e.EpicCoin70000=7]="EpicCoin70000",e[e.UpdateBundle1=8]="UpdateBundle1",e[e.UpdateBundle2=9]="UpdateBundle2",e))(Va||{});class K0{constructor(t){c(this,"data");this.data=t}Start(){for(let t=0;t<H.HeroKind;t++)this.data.inventory.equipWeaponUnlockedNum[t].RegisterMultiplier(new l(n.EpicStore,i.Add,()=>this.data.source.epicStorePurchasedNum[hi.EquipmentWeaponSlot1])),this.data.inventory.equipArmorUnlockedNum[t].RegisterMultiplier(new l(n.EpicStore,i.Add,()=>this.data.source.epicStorePurchasedNum[hi.EquipmentArmorSlot1])),this.data.inventory.equipJewelryUnlockedNum[t].RegisterMultiplier(new l(n.EpicStore,i.Add,()=>this.data.source.epicStorePurchasedNum[hi.EquipmentJewelrySlot1])),this.data.inventory.equipPotionUnlockedNum[t].RegisterMultiplier(new l(n.EpicStore,i.Add,()=>this.data.source.epicStorePurchasedNum[hi.EquipUtilitySlot1]));this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.EpicStore,i.Add,()=>this.data.source.epicStorePurchasedNum[hi.ExpeditionTeamSlot1])),this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.EpicStore,i.Add,()=>this.data.source.inAppPurchasedNum[Va.UpdateBundle2])),this.data.nitro.nitroCap.RegisterMultiplier(new l(n.EpicStore,i.Mul,()=>.1*this.data.source.epicStorePurchasedNum[hi.NitroCapExpansion])),this.data.nitro.nitroCap.RegisterMultiplier(new l(n.EpicStore,i.Mul,()=>.5,()=>this.data.source.inAppPurchasedNum[Va.UpdateBundle1]))}}const eg={UpgradeCost(e,t){switch(e){case Ke.EquipmentProficiencyGainWarrior:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EquipmentProficiencyGainWizard:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EquipmentProficiencyGainAngel:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EquipmentProficiencyGainThief:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EquipmentProficiencyGainArcher:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EquipmentProficiencyGainTamer:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EquipmentDropChance:return(5+5*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EnchantedEffectChance1:return(10+10*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EnchantedEffectChance2:return(20+20*t)*Math.pow(2,Math.max(0,t-20)/10);case Ke.EnchantedEffectChance3:return(30+30*t)*Math.pow(2,Math.max(0,t-20)/10);default:return 1}},EffectValue(e,t){switch(e){case Ke.EquipmentProficiencyGainWarrior:return .05*t;case Ke.EquipmentProficiencyGainWizard:return .05*t;case Ke.EquipmentProficiencyGainAngel:return .05*t;case Ke.EquipmentProficiencyGainThief:return .05*t;case Ke.EquipmentProficiencyGainArcher:return .05*t;case Ke.EquipmentProficiencyGainTamer:return .05*t;case Ke.EquipmentDropChance:return .025*t/100;case Ke.EnchantedEffectChance1:return .25*t/100;case Ke.EnchantedEffectChance2:return .05*t/100;case Ke.EnchantedEffectChance3:return .005*t/100;default:return 0}}};class tg{constructor(t,s){c(this,"data");c(this,"equipmentCtrl");c(this,"kind");this.data=t.data,this.equipmentCtrl=t,this.kind=s}get level(){return this.data.source.dictionaryUpgradeLevels[this.kind]}Start(){this.SetEffect()}get effectValue(){return eg.EffectValue(this.kind,this.level)*this.equipmentCtrl.dictionaryUpgradeEffectMultiplier.Value()}SetEffect(){switch(this.kind){case Ke.EquipmentProficiencyGainWarrior:this.data.stats.HeroStats(E.Warrior,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EquipmentProficiencyGainWizard:this.data.stats.HeroStats(E.Wizard,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EquipmentProficiencyGainAngel:this.data.stats.HeroStats(E.Angel,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EquipmentProficiencyGainThief:this.data.stats.HeroStats(E.Thief,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EquipmentProficiencyGainArcher:this.data.stats.HeroStats(E.Archer,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EquipmentProficiencyGainTamer:this.data.stats.HeroStats(E.Tamer,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EquipmentDropChance:this.data.stats.SetEffectStats(A.EquipmentDropChance,new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EnchantedEffectChance1:for(let t=0;t<H.HeroKind;++t)this.data.stats.OptionEffectChance(t,0).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EnchantedEffectChance2:for(let t=0;t<H.HeroKind;++t)this.data.stats.OptionEffectChance(t,1).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break;case Ke.EnchantedEffectChance3:for(let t=0;t<H.HeroKind;++t)this.data.stats.OptionEffectChance(t,2).RegisterMultiplier(new l(n.Dictionary,i.Add,()=>this.effectValue));break}}}var N=(e=>(e[e.Common=0]="Common",e[e.Uncommon=1]="Uncommon",e[e.Rare=2]="Rare",e[e.SuperRare=3]="SuperRare",e[e.Epic=4]="Epic",e))(N||{});class f{constructor(t,s,a,u=!1){c(this,"isMaxEffect");c(this,"kind");c(this,"initValue");c(this,"baseValue");this.kind=t,this.initValue=s,this.baseValue=a,this.isMaxEffect=u}EffectValue(t,s=1){return this.kind==r.Nothing?Math.floor(this.initValue()):this.isMaxEffect?this.initValue()*Math.max(1,t/10):this.initValue()+s*this.baseValue()*t}get valueKind(){switch(this.kind){case r.ATKAdder:case r.ATKAfter:case r.AllSkillLevel:case r.HPAfter:case r.HPAdder:case r.DEFAdder:case r.DEFAfter:case r.MATKAdder:case r.MATKAfter:case r.MDEFAdder:case r.MDEFAfter:case r.MPAdder:case r.MPAfter:return Ze.Normal;case r.MoveSpeedAdder:case r.MoveSpeedAfter:return Ze.Meter;default:return Ze.Percent}}}class sg{constructor(t,s,a){c(this,"data");c(this,"kind");c(this,"heroKind");c(this,"maxValue");this.data=t,this.kind=s,this.heroKind=a,this.maxValue=()=>this.data.equipment.maxLevels[a].Value()}GetMastery(){this.isMaxed=!0,this.value<10}get isMaxed(){switch(this.heroKind){case E.Warrior:return this.data.source.equipmentIsMaxedWarrior[this.kind];case E.Wizard:return this.data.source.equipmentIsMaxedWizard[this.kind];case E.Angel:return this.data.source.equipmentIsMaxedAngel[this.kind];case E.Thief:return this.data.source.equipmentIsMaxedThief[this.kind];case E.Archer:return this.data.source.equipmentIsMaxedArcher[this.kind];case E.Tamer:return this.data.source.equipmentIsMaxedTamer[this.kind];default:return!1}}set isMaxed(t){switch(this.heroKind){case E.Warrior:this.data.source.equipmentIsMaxedWarrior[this.kind]=t;break;case E.Wizard:this.data.source.equipmentIsMaxedWizard[this.kind]=t;break;case E.Angel:this.data.source.equipmentIsMaxedAngel[this.kind]=t;break;case E.Thief:this.data.source.equipmentIsMaxedThief[this.kind]=t;break;case E.Archer:this.data.source.equipmentIsMaxedArcher[this.kind]=t;break;case E.Tamer:this.data.source.equipmentIsMaxedTamer[this.kind]=t;break}}get value(){switch(this.heroKind){case E.Warrior:return this.data.source.equipmentLevelsWarrior[this.kind];case E.Wizard:return this.data.source.equipmentLevelsWizard[this.kind];case E.Angel:return this.data.source.equipmentLevelsAngel[this.kind];case E.Thief:return this.data.source.equipmentLevelsThief[this.kind];case E.Archer:return this.data.source.equipmentLevelsArcher[this.kind];case E.Tamer:return this.data.source.equipmentLevelsTamer[this.kind];default:return 0}}set value(t){switch(this.heroKind){case E.Warrior:this.data.source.equipmentLevelsWarrior[this.kind]=t;break;case E.Wizard:this.data.source.equipmentLevelsWizard[this.kind]=t;break;case E.Angel:this.data.source.equipmentLevelsAngel[this.kind]=t;break;case E.Thief:this.data.source.equipmentLevelsThief[this.kind]=t;break;case E.Archer:this.data.source.equipmentLevelsArcher[this.kind]=t;break;case E.Tamer:this.data.source.equipmentLevelsTamer[this.kind]=t;break}}}const Ut={maxOptionEffectNum:7,maxForgeEffectNum:7,maxLevelForEachHero:10,areaUniqueDropChanceBase:1e-5,Rarity(e){switch(e){case g.Nothing:return N.Common;case g.DullSword:return N.Common;case g.BrittleStaff:return N.Common;case g.FlimsyWing:return N.Common;case g.WornDart:return N.Common;case g.SmallBow:return N.Common;case g.WoodenRecorder:return N.Common;case g.OldCloak:return N.Common;case g.BlueHat:return N.Common;case g.OrangeHat:return N.Common;case g.TShirt:return N.Common;case g.ClothGlove:return N.Common;case g.BlueTShirt:return N.Common;case g.OrangeTShirt:return N.Common;case g.ClothBelt:return N.Common;case g.ClothShoes:return N.Common;case g.IronRing:return N.Common;case g.PearlEarring:return N.Common;case g.FireBrooch:return N.Common;case g.IceBrooch:return N.Common;case g.ThunderBrooch:return N.Common;case g.LightBrooch:return N.Common;case g.DarkBrooch:return N.Common;case g.WoodenShield:return N.Common;case g.LongSword:return N.Uncommon;case g.LongStaff:return N.Uncommon;case g.WarmWing:return N.Uncommon;case g.DualDagger:return N.Uncommon;case g.ReinforcedBow:return N.Uncommon;case g.Flute:return N.Uncommon;case g.FireStaff:return N.Uncommon;case g.IceStaff:return N.Uncommon;case g.ThunderStaff:return N.Uncommon;case g.LeatherBelt:return N.Uncommon;case g.LeatherShoes:return N.Uncommon;case g.WarmCloak:return N.Uncommon;case g.LeatherArmor:return N.Uncommon;case g.LeatherGlove:return N.Uncommon;case g.LeatherShield:return N.Uncommon;case g.FireRing:return N.Common;case g.IceRing:return N.Common;case g.ThunderRing:return N.Common;case g.LightRing:return N.Common;case g.DarkRing:return N.Common;case g.EnhancedFireBrooch:return N.Uncommon;case g.EnhancedIceBrooch:return N.Uncommon;case g.EnhancedThunderBrooch:return N.Uncommon;case g.EnhancedLightBrooch:return N.Uncommon;case g.EnhancedDarkBrooch:return N.Uncommon;case g.BattleSword:return N.Uncommon;case g.BattleStaff:return N.Uncommon;case g.BattleWing:return N.Uncommon;case g.BattleDagger:return N.Uncommon;case g.BattleBow:return N.Uncommon;case g.BattleRecorder:return N.Uncommon;case g.SlimeSword:return N.Rare;case g.SlimeGlove:return N.Rare;case g.SlimeRing:return N.Rare;case g.SlimeBelt:return N.Rare;case g.SlimePincenez:return N.Rare;case g.SlimeWing:return N.Rare;case g.SlimePoncho:return N.Rare;case g.SlimeDart:return N.Rare;case g.MagicSlimeStick:return N.Rare;case g.MagicSlimeHat:return N.Rare;case g.MagicSlimeBow:return N.Rare;case g.MagicSlimeShoes:return N.Rare;case g.MagicSlimeRecorder:return N.Rare;case g.MagicSlimeEarring:return N.Rare;case g.MagicSlimeBalloon:return N.Rare;case g.MagicSlimeSkirt:return N.Rare;case g.SpiderHat:return N.Rare;case g.SpiderSkirt:return N.Rare;case g.SpiderSuit:return N.Rare;case g.SpiderDagger:return N.Rare;case g.SpiderWing:return N.Rare;case g.SpiderCatchingNet:return N.Rare;case g.SpiderStick:return N.Rare;case g.SpiderFoldingFan:return N.Rare;case g.BatRing:return N.Rare;case g.BatShoes:return N.Rare;case g.BatSword:return N.Rare;case g.BatHat:return N.Rare;case g.BatRecorder:return N.Rare;case g.BatBow:return N.Rare;case g.BatMascaradeMask:return N.Rare;case g.BatCloak:return N.Rare;case g.BronzeShoulder:return N.Common;case g.BattleRing:return N.Common;case g.Halo:return N.Common;case g.IronShoulder:return N.Uncommon;case g.StrengthRing:return N.Uncommon;case g.GoldenRing:return N.Uncommon;case g.GoldenFireRing:return N.Uncommon;case g.GoldenIceRing:return N.Uncommon;case g.GoldenThunderRing:return N.Uncommon;case g.GoldenLightRing:return N.Uncommon;case g.GoldenDarkRing:return N.Uncommon;case g.IronBelt:return N.Uncommon;case g.IronShoes:return N.Uncommon;case g.CopperArmor:return N.Uncommon;case g.IronGlove:return N.Uncommon;case g.TowerShield:return N.Uncommon;case g.FireTowerShield:return N.Uncommon;case g.IceTowerShield:return N.Uncommon;case g.ThunderTowerShield:return N.Uncommon;case g.LightTowerShield:return N.Uncommon;case g.DarkTowerShield:return N.Uncommon;case g.SavageRing:return N.Uncommon;case g.SpellboundFireBrooch:return N.Uncommon;case g.SpellboundIceBrooch:return N.Uncommon;case g.SpellboundThunderBrooch:return N.Uncommon;case g.SpellboundLightBrooch:return N.Uncommon;case g.SpellboundDarkBrooch:return N.Uncommon;case g.CopperHelm:return N.Uncommon;case g.BattleHelm:return N.Uncommon;case g.WizardHelm:return N.Uncommon;case g.LargeSword:return N.Uncommon;case g.LargeStaff:return N.Uncommon;case g.LargeWing:return N.Uncommon;case g.LargeDagger:return N.Uncommon;case g.LargeBow:return N.Uncommon;case g.LargeOcarina:return N.Uncommon;case g.FairyClothes:return N.SuperRare;case g.FairyStaff:return N.SuperRare;case g.FairyBoots:return N.SuperRare;case g.FairyGlove:return N.SuperRare;case g.FairyBrooch:return N.SuperRare;case g.FairyLamp:return N.SuperRare;case g.FairyWing:return N.SuperRare;case g.FairyShuriken:return N.SuperRare;case g.FoxKanzashi:return N.SuperRare;case g.FoxLoincloth:return N.SuperRare;case g.FoxMask:return N.SuperRare;case g.FoxHamayayumi:return N.SuperRare;case g.FoxHat:return N.SuperRare;case g.FoxCoat:return N.SuperRare;case g.FoxBoot:return N.SuperRare;case g.FoxEma:return N.SuperRare;case g.DevilfishSword:return N.SuperRare;case g.DevilfishWing:return N.SuperRare;case g.DevilfishRecorder:return N.SuperRare;case g.DevilfishArmor:return N.SuperRare;case g.DevilfishScarf:return N.SuperRare;case g.DevilfishGill:return N.SuperRare;case g.DevilfishPendant:return N.SuperRare;case g.DevilfishRing:return N.SuperRare;case g.TreantAmulet:return N.SuperRare;case g.TreantHagoita:return N.SuperRare;case g.TreantChoppingBoard:return N.SuperRare;case g.TreantDagger:return N.SuperRare;case g.TreantHaniwa:return N.SuperRare;case g.TreantKokeshi:return N.SuperRare;case g.TreantLamp:return N.SuperRare;case g.TreantLunchbox:return N.SuperRare;case g.FlametigerPortableHotSpring:return N.Epic;case g.FlametigerVolcanicShield:return N.Epic;case g.FlametigerStripedBriefs:return N.Epic;case g.TorchOfEverburningFlametiger:return N.Epic;case g.FlametigerCostume:return N.Epic;case g.RingOfFlametigersWrath:return N.Epic;case g.EndlessBowlOfSpicyFlametigerRamen:return N.Epic;case g.ScreenOfTheSneakyFlametiger:return N.Epic;case g.ModifiedSword:return N.Rare;case g.ModifiedStaff:return N.Rare;case g.ModifiedWing:return N.Rare;case g.ModifiedDart:return N.Rare;case g.ModifiedBow:return N.Rare;case g.ModifiedRecorder:return N.Rare;case g.AncientCloak:return N.Rare;case g.AncientBelt:return N.Rare;case g.AncientShoes:return N.Rare;case g.AncientRing:return N.Rare;case g.AncientEarring:return N.Rare;default:return N.Common}},Part(e){switch(e){case g.Nothing:return T.Weapon;case g.DullSword:return T.Weapon;case g.BrittleStaff:return T.Weapon;case g.FlimsyWing:return T.Weapon;case g.WornDart:return T.Weapon;case g.SmallBow:return T.Weapon;case g.WoodenRecorder:return T.Weapon;case g.OldCloak:return T.Armor;case g.BlueHat:return T.Armor;case g.OrangeHat:return T.Armor;case g.TShirt:return T.Armor;case g.ClothGlove:return T.Armor;case g.BlueTShirt:return T.Armor;case g.OrangeTShirt:return T.Armor;case g.ClothBelt:return T.Armor;case g.ClothShoes:return T.Armor;case g.IronRing:return T.Jewelry;case g.PearlEarring:return T.Jewelry;case g.FireBrooch:return T.Jewelry;case g.IceBrooch:return T.Jewelry;case g.ThunderBrooch:return T.Jewelry;case g.LightBrooch:return T.Jewelry;case g.DarkBrooch:return T.Jewelry;case g.WoodenShield:return T.Armor;case g.LongSword:return T.Weapon;case g.LongStaff:return T.Weapon;case g.WarmWing:return T.Weapon;case g.DualDagger:return T.Weapon;case g.ReinforcedBow:return T.Weapon;case g.Flute:return T.Weapon;case g.FireStaff:return T.Weapon;case g.IceStaff:return T.Weapon;case g.ThunderStaff:return T.Weapon;case g.LeatherBelt:return T.Armor;case g.LeatherShoes:return T.Armor;case g.WarmCloak:return T.Armor;case g.LeatherArmor:return T.Armor;case g.LeatherGlove:return T.Armor;case g.LeatherShield:return T.Armor;case g.FireRing:return T.Jewelry;case g.IceRing:return T.Jewelry;case g.ThunderRing:return T.Jewelry;case g.LightRing:return T.Jewelry;case g.DarkRing:return T.Jewelry;case g.EnhancedFireBrooch:return T.Jewelry;case g.EnhancedIceBrooch:return T.Jewelry;case g.EnhancedThunderBrooch:return T.Jewelry;case g.EnhancedLightBrooch:return T.Jewelry;case g.EnhancedDarkBrooch:return T.Jewelry;case g.BattleSword:return T.Weapon;case g.BattleStaff:return T.Weapon;case g.BattleWing:return T.Weapon;case g.BattleDagger:return T.Weapon;case g.BattleBow:return T.Weapon;case g.BattleRecorder:return T.Weapon;case g.SlimeSword:return T.Weapon;case g.SlimeGlove:return T.Armor;case g.SlimeRing:return T.Jewelry;case g.SlimeBelt:return T.Armor;case g.SlimePincenez:return T.Jewelry;case g.SlimeWing:return T.Weapon;case g.SlimePoncho:return T.Armor;case g.SlimeDart:return T.Weapon;case g.MagicSlimeStick:return T.Weapon;case g.MagicSlimeHat:return T.Armor;case g.MagicSlimeBow:return T.Weapon;case g.MagicSlimeShoes:return T.Armor;case g.MagicSlimeRecorder:return T.Weapon;case g.MagicSlimeEarring:return T.Jewelry;case g.MagicSlimeBalloon:return T.Jewelry;case g.MagicSlimeSkirt:return T.Armor;case g.SpiderHat:return T.Armor;case g.SpiderSkirt:return T.Armor;case g.SpiderSuit:return T.Armor;case g.SpiderDagger:return T.Weapon;case g.SpiderWing:return T.Weapon;case g.SpiderCatchingNet:return T.Weapon;case g.SpiderStick:return T.Weapon;case g.SpiderFoldingFan:return T.Jewelry;case g.BatRing:return T.Jewelry;case g.BatShoes:return T.Armor;case g.BatSword:return T.Weapon;case g.BatHat:return T.Armor;case g.BatRecorder:return T.Weapon;case g.BatBow:return T.Weapon;case g.BatMascaradeMask:return T.Jewelry;case g.BatCloak:return T.Armor;case g.BronzeShoulder:return T.Armor;case g.BattleRing:return T.Jewelry;case g.Halo:return T.Jewelry;case g.IronShoulder:return T.Armor;case g.StrengthRing:return T.Jewelry;case g.GoldenRing:return T.Jewelry;case g.GoldenFireRing:return T.Jewelry;case g.GoldenIceRing:return T.Jewelry;case g.GoldenThunderRing:return T.Jewelry;case g.GoldenLightRing:return T.Jewelry;case g.GoldenDarkRing:return T.Jewelry;case g.IronBelt:return T.Armor;case g.IronShoes:return T.Armor;case g.CopperArmor:return T.Armor;case g.IronGlove:return T.Armor;case g.TowerShield:return T.Armor;case g.FireTowerShield:return T.Armor;case g.IceTowerShield:return T.Armor;case g.ThunderTowerShield:return T.Armor;case g.LightTowerShield:return T.Armor;case g.DarkTowerShield:return T.Armor;case g.SavageRing:return T.Jewelry;case g.SpellboundFireBrooch:return T.Jewelry;case g.SpellboundIceBrooch:return T.Jewelry;case g.SpellboundThunderBrooch:return T.Jewelry;case g.SpellboundLightBrooch:return T.Jewelry;case g.SpellboundDarkBrooch:return T.Jewelry;case g.CopperHelm:return T.Armor;case g.BattleHelm:return T.Armor;case g.WizardHelm:return T.Armor;case g.LargeSword:return T.Weapon;case g.LargeStaff:return T.Weapon;case g.LargeWing:return T.Weapon;case g.LargeDagger:return T.Weapon;case g.LargeBow:return T.Weapon;case g.LargeOcarina:return T.Weapon;case g.FairyClothes:return T.Armor;case g.FairyStaff:return T.Weapon;case g.FairyBoots:return T.Armor;case g.FairyGlove:return T.Armor;case g.FairyBrooch:return T.Jewelry;case g.FairyLamp:return T.Jewelry;case g.FairyWing:return T.Weapon;case g.FairyShuriken:return T.Weapon;case g.FoxKanzashi:return T.Jewelry;case g.FoxLoincloth:return T.Armor;case g.FoxMask:return T.Jewelry;case g.FoxHamayayumi:return T.Weapon;case g.FoxHat:return T.Armor;case g.FoxCoat:return T.Armor;case g.FoxBoot:return T.Armor;case g.FoxEma:return T.Jewelry;case g.DevilfishSword:return T.Weapon;case g.DevilfishWing:return T.Weapon;case g.DevilfishRecorder:return T.Weapon;case g.DevilfishArmor:return T.Armor;case g.DevilfishScarf:return T.Armor;case g.DevilfishGill:return T.Jewelry;case g.DevilfishPendant:return T.Jewelry;case g.DevilfishRing:return T.Jewelry;case g.TreantAmulet:return T.Jewelry;case g.TreantHagoita:return T.Weapon;case g.TreantChoppingBoard:return T.Armor;case g.TreantDagger:return T.Weapon;case g.TreantHaniwa:return T.Armor;case g.TreantKokeshi:return T.Jewelry;case g.TreantLamp:return T.Jewelry;case g.TreantLunchbox:return T.Jewelry;case g.FlametigerPortableHotSpring:return T.Jewelry;case g.FlametigerVolcanicShield:return T.Weapon;case g.FlametigerStripedBriefs:return T.Armor;case g.TorchOfEverburningFlametiger:return T.Weapon;case g.FlametigerCostume:return T.Armor;case g.RingOfFlametigersWrath:return T.Weapon;case g.EndlessBowlOfSpicyFlametigerRamen:return T.Jewelry;case g.ScreenOfTheSneakyFlametiger:return T.Jewelry;case g.ModifiedSword:return T.Weapon;case g.ModifiedStaff:return T.Weapon;case g.ModifiedWing:return T.Weapon;case g.ModifiedDart:return T.Weapon;case g.ModifiedBow:return T.Weapon;case g.ModifiedRecorder:return T.Weapon;case g.AncientCloak:return T.Armor;case g.AncientBelt:return T.Armor;case g.AncientShoes:return T.Armor;case g.AncientRing:return T.Jewelry;case g.AncientEarring:return T.Jewelry;default:return T.Weapon}},RarityFactor(e){switch(e){case r.Nothing:return 1;case r.HPAdder:return 1;case r.MPAdder:return 1;case r.ATKAdder:return 1;case r.MATKAdder:return 1;case r.DEFAdder:return 1;case r.MDEFAdder:return 1;case r.SPDAdder:return 5;case r.HPMultiplier:return 5;case r.MPMultiplier:return 5;case r.ATKMultiplier:return 5;case r.MATKMultiplier:return 5;case r.DEFMultiplier:return 5;case r.MDEFMultiplier:return 5;case r.ATKPropotion:return 3;case r.MATKPropotion:return 3;case r.DEFPropotion:return 3;case r.MDEFPropotion:return 3;case r.FireResistance:return 2;case r.IceResistance:return 2;case r.ThunderResistance:return 2;case r.LightResistance:return 2;case r.DarkResistance:return 2;case r.PhysicalAbsorption:return 4;case r.FireAbsorption:return 4;case r.IceAbsorption:return 4;case r.ThunderAbsorption:return 4;case r.LightAbsorption:return 4;case r.DarkAbsorption:return 4;case r.DebuffResistance:return 3;case r.EquipmentDropChance:return 10;case r.SlimeDropChance:return 10;case r.MagicSlimeDropChance:return 20;case r.SpiderDropChance:return 30;case r.BatDropChance:return 40;case r.FairyDropChance:return 50;case r.FoxDropChance:return 60;case r.DevilFishDropChance:return 70;case r.TreantDropChance:return 80;case r.FlameTigerDropChance:return 90;case r.UnicornDropChance:return 100;case r.ColorMaterialDropChance:return 10;case r.PhysicalCritical:return 2;case r.MagicalCritical:return 2;case r.EXPGain:return 10;case r.SkillProficiency:return 10;case r.EquipmentProficiency:return 10;case r.MoveSpeedMultiplier:return 10;case r.GoldGain:return 5;case r.StoneGain:return 2;case r.CrystalGain:return 2;case r.LeafGain:return 2;case r.WarriorSkillLevel:return 4;case r.WizardSkillLevel:return 4;case r.AngelSkillLevel:return 4;case r.ThiefSkillLevel:return 4;case r.ArcherSkillLevel:return 4;case r.TamerSkillLevel:return 4;case r.AllSkillLevel:return 5;case r.SlimeKnowledge:return 10;case r.MagicSlimeKnowledge:return 20;case r.SpiderKnowledge:return 30;case r.BatKnowledge:return 40;case r.FairyKnowledge:return 50;case r.FoxKnowledge:return 60;case r.DevilFishKnowledge:return 70;case r.TreantKnowledge:return 80;case r.FlameTigerKnowledge:return 90;case r.UnicornKnowledge:return 100;case r.PhysicalDamage:return 5;case r.FireDamage:return 5;case r.IceDamage:return 5;case r.ThunderDamage:return 5;case r.LightDamage:return 5;case r.DarkDamage:return 5;case r.HpRegen:return 10;case r.MpRegen:return 10;case r.TamingPoint:return 10;case r.WarriorSkillRange:return 200;case r.WizardSkillRange:return 200;case r.AngelSkillRange:return 200;case r.ThiefSkillRange:return 200;case r.ArcherSkillRange:return 200;case r.TamerSkillRange:return 200;case r.TownMatGain:return 100;case r.TownMatAreaClearGain:return 100;case r.RebirthPointGain1:return 100;case r.RebirthPointGain2:return 100;case r.RebirthPointGain3:return 100;case r.CriticalDamage:return 10;case r.BlessingEffect:return 100;case r.MoveSpeedAdder:return 3;case r.PetEXPGain:return 10;case r.LoyaltyPointGain:return 10;case r.CatalystDoubleCriticalChance:return 100;case r.WarriorSkillEffectRange:return 400;case r.WizardSkillEffectRange:return 400;case r.AngelSkillEffectRange:return 400;case r.ThiefSkillEffectRange:return 400;case r.ArcherSkillEffectRange:return 400;case r.TamerSkillEffectRange:return 400;case r.HpRegenMultiplier:return 200;case r.MpRegenMultiplier:return 250;case r.ArmoredFury:return 500;case r.WardedFury:return 500;case r.PetPhysicalCriticalChance:return 60;case r.PetMagicalCriticalChance:return 60;case r.PetCriticalDamage:return 80;case r.PetDebuffResistance:return 100;case r.StoneTownResearchPower:return 400;case r.CrystalTownResearchPower:return 400;case r.LeafTownResearchPower:return 400;case r.GuildEXPGain:return 800;case r.SPDMultiplier:return 400;case r.CriticalDamageMultiplier:return 250;case r.SkillProficiencyMultiplier:return 200;case r.EquipmentProficiencyMultiplier:return 300;case r.EXPGainMultiplier:return 200;case r.GoldGainMultiplier:return 200;case r.PhysicalDamageMultiplier:return 200;case r.FireDamageMultiplier:return 200;case r.IceDamageMultiplier:return 200;case r.ThunderDamageMultiplier:return 200;case r.LightDamageMultiplier:return 200;case r.DarkDamageMultiplier:return 200;case r.TamingPointMultiplier:return 200;case r.PetEXPGainMultiplier:return 200;case r.LoyaltyPointGainMultiplier:return 300;case r.BlessingEffectMultiplier:return 400;case r.PhysicalCriticalMultiplier:return 60;case r.MagicalCriticalMultiplier:return 60;case r.ChallengeBossKnowledge:return 1e3;case r.HPAfter:return 10;case r.MPAfter:return 10;case r.ATKAfter:return 10;case r.MATKAfter:return 10;case r.DEFAfter:return 10;case r.MDEFAfter:return 10;case r.SPDAfter:return 10;case r.MoveSpeedAfter:return 50;case r.PhysicalCriticalAfter:return 40;case r.MagicalCriticalAfter:return 40;case r.CriticalDamageAfter:return 50;case r.DebuffResistanceAfter:return 30;case r.PhysicalDamageAfter:return 60;case r.FireDamageAfter:return 60;case r.IceDamageAfter:return 60;case r.ThunderDamageAfter:return 60;case r.LightDamageAfter:return 60;case r.DarkDamageAfter:return 60;case r.FireResistanceAfter:return 20;case r.IceResistanceAfter:return 20;case r.ThunderResistanceAfter:return 20;case r.LightResistanceAfter:return 20;case r.DarkResistanceAfter:return 20;case r.SlimeKnowledgeAfter:return 20;case r.MagicSlimeKnowledgeAfter:return 40;case r.SpiderKnowledgeAfter:return 60;case r.BatKnowledgeAfter:return 80;case r.FairyKnowledgeAfter:return 100;case r.FoxKnowledgeAfter:return 120;case r.DevilFishKnowledgeAfter:return 140;case r.TreantKnowledgeAfter:return 160;case r.FlameTigerKnowledgeAfter:return 180;case r.UnicornKnowledgeAfter:return 200;case r.ChallengeBossKnowledgeAfter:return 250;case r.SDDamageMultiplier:return 100;case r.SDDamageCutMultiplier:return 100;case r.FameGain:return 800;case r.DungeonCoinGain:return 1e3;case r.ExtraAfterDamage:return 1e3;default:return 1e3}},MaxLevel(e){switch(e){case r.HPAdder:return 10;case r.MPAdder:return 10;case r.ATKAdder:return 10;case r.MATKAdder:return 10;case r.DEFAdder:return 10;case r.MDEFAdder:return 10;case r.SPDAdder:return 10;case r.HPMultiplier:return 5;case r.MPMultiplier:return 5;case r.ATKMultiplier:return 5;case r.MATKMultiplier:return 5;case r.DEFMultiplier:return 5;case r.MDEFMultiplier:return 5;case r.ATKPropotion:return 5;case r.MATKPropotion:return 5;case r.DEFPropotion:return 5;case r.MDEFPropotion:return 5;case r.FireResistance:return 10;case r.IceResistance:return 10;case r.ThunderResistance:return 10;case r.LightResistance:return 10;case r.DarkResistance:return 10;case r.PhysicalAbsorption:return 2;case r.FireAbsorption:return 2;case r.IceAbsorption:return 2;case r.ThunderAbsorption:return 2;case r.LightAbsorption:return 2;case r.DarkAbsorption:return 2;case r.DebuffResistance:return 5;case r.EquipmentDropChance:return 10;case r.SlimeDropChance:return 10;case r.MagicSlimeDropChance:return 10;case r.SpiderDropChance:return 10;case r.BatDropChance:return 10;case r.FairyDropChance:return 10;case r.FoxDropChance:return 10;case r.DevilFishDropChance:return 10;case r.TreantDropChance:return 10;case r.FlameTigerDropChance:return 10;case r.UnicornDropChance:return 10;case r.ColorMaterialDropChance:return 10;case r.PhysicalCritical:return 2;case r.MagicalCritical:return 2;case r.EXPGain:return 10;case r.SkillProficiency:return 10;case r.EquipmentProficiency:return 10;case r.MoveSpeedMultiplier:return 10;case r.GoldGain:return 5;case r.StoneGain:return 10;case r.CrystalGain:return 10;case r.LeafGain:return 10;case r.WarriorSkillLevel:return 10;case r.WizardSkillLevel:return 10;case r.AngelSkillLevel:return 10;case r.ThiefSkillLevel:return 10;case r.ArcherSkillLevel:return 10;case r.TamerSkillLevel:return 10;case r.AllSkillLevel:return 10;case r.SlimeKnowledge:return 10;case r.MagicSlimeKnowledge:return 10;case r.SpiderKnowledge:return 10;case r.BatKnowledge:return 10;case r.FairyKnowledge:return 10;case r.FoxKnowledge:return 10;case r.DevilFishKnowledge:return 10;case r.TreantKnowledge:return 10;case r.FlameTigerKnowledge:return 10;case r.UnicornKnowledge:return 10;case r.PhysicalDamage:return 10;case r.FireDamage:return 10;case r.IceDamage:return 10;case r.ThunderDamage:return 10;case r.LightDamage:return 10;case r.DarkDamage:return 10;case r.HpRegen:return 5;case r.MpRegen:return 5;case r.TamingPoint:return 10;case r.WarriorSkillRange:return 2;case r.WizardSkillRange:return 2;case r.AngelSkillRange:return 2;case r.ThiefSkillRange:return 2;case r.ArcherSkillRange:return 2;case r.TamerSkillRange:return 2;case r.TownMatGain:return 10;case r.TownMatAreaClearGain:return 10;case r.RebirthPointGain1:return 10;case r.RebirthPointGain2:return 10;case r.RebirthPointGain3:return 10;case r.CriticalDamage:return 2;case r.BlessingEffect:return 10;case r.MoveSpeedAdder:return 10;case r.PetEXPGain:return 10;case r.LoyaltyPointGain:return 10;case r.CatalystDoubleCriticalChance:return 10;case r.WarriorSkillEffectRange:return 2;case r.WizardSkillEffectRange:return 2;case r.AngelSkillEffectRange:return 2;case r.ThiefSkillEffectRange:return 2;case r.ArcherSkillEffectRange:return 2;case r.TamerSkillEffectRange:return 2;case r.HpRegenMultiplier:return 5;case r.MpRegenMultiplier:return 5;case r.ArmoredFury:return 10;case r.WardedFury:return 10;case r.PetPhysicalCriticalChance:return 2;case r.PetMagicalCriticalChance:return 2;case r.PetCriticalDamage:return 2;case r.PetDebuffResistance:return 5;case r.StoneTownResearchPower:return 10;case r.CrystalTownResearchPower:return 10;case r.LeafTownResearchPower:return 10;case r.GuildEXPGain:return 10;case r.SPDMultiplier:return 5;case r.CriticalDamageMultiplier:return 5;case r.SkillProficiencyMultiplier:return 5;case r.EquipmentProficiencyMultiplier:return 5;case r.EXPGainMultiplier:return 5;case r.GoldGainMultiplier:return 5;case r.PhysicalDamageMultiplier:return 5;case r.FireDamageMultiplier:return 5;case r.IceDamageMultiplier:return 5;case r.ThunderDamageMultiplier:return 5;case r.LightDamageMultiplier:return 5;case r.DarkDamageMultiplier:return 5;case r.TamingPointMultiplier:return 5;case r.PetEXPGainMultiplier:return 5;case r.LoyaltyPointGainMultiplier:return 5;case r.BlessingEffectMultiplier:return 5;case r.PhysicalCriticalMultiplier:return 2;case r.MagicalCriticalMultiplier:return 2;case r.ChallengeBossKnowledge:return 10;case r.HPAfter:return 10;case r.MPAfter:return 10;case r.ATKAfter:return 10;case r.MATKAfter:return 10;case r.DEFAfter:return 10;case r.MDEFAfter:return 10;case r.SPDAfter:return 10;case r.MoveSpeedAfter:return 10;case r.PhysicalCriticalAfter:return 10;case r.MagicalCriticalAfter:return 10;case r.CriticalDamageAfter:return 10;case r.DebuffResistanceAfter:return 10;case r.PhysicalDamageAfter:return 10;case r.FireDamageAfter:return 10;case r.IceDamageAfter:return 10;case r.ThunderDamageAfter:return 10;case r.LightDamageAfter:return 10;case r.DarkDamageAfter:return 10;case r.FireResistanceAfter:return 10;case r.IceResistanceAfter:return 10;case r.ThunderResistanceAfter:return 10;case r.LightResistanceAfter:return 10;case r.DarkResistanceAfter:return 10;case r.SlimeKnowledgeAfter:return 10;case r.MagicSlimeKnowledgeAfter:return 10;case r.SpiderKnowledgeAfter:return 10;case r.BatKnowledgeAfter:return 10;case r.FairyKnowledgeAfter:return 10;case r.FoxKnowledgeAfter:return 10;case r.DevilFishKnowledgeAfter:return 10;case r.TreantKnowledgeAfter:return 10;case r.FlameTigerKnowledgeAfter:return 10;case r.UnicornKnowledgeAfter:return 10;case r.ChallengeBossKnowledgeAfter:return 10;case r.SDDamageMultiplier:return 10;case r.SDDamageCutMultiplier:return 10;case r.FameGain:return 10;case r.DungeonCoinGain:return 10;case r.ExtraAfterDamage:return 10;default:return 2}},EffectCalculation(e,t){switch(e){case r.HPAdder:return 10*Math.pow(t,2);case r.MPAdder:return 5*Math.pow(t,2);case r.ATKAdder:return Math.pow(t,2);case r.MATKAdder:return Math.pow(t,2);case r.DEFAdder:return Math.pow(t,2);case r.MDEFAdder:return Math.pow(t,2);case r.SPDAdder:return Math.pow(t,2);case r.HPMultiplier:return .5*t*(t+1)/100;case r.MPMultiplier:return .5*t*(t+1)/100;case r.ATKMultiplier:return .5*t*(t+1)/100;case r.MATKMultiplier:return .5*t*(t+1)/100;case r.DEFMultiplier:return .5*t*(t+1)/100;case r.MDEFMultiplier:return .5*t*(t+1)/100;case r.ATKPropotion:return 10*t/100;case r.MATKPropotion:return 10*t/100;case r.DEFPropotion:return 10*t/100;case r.MDEFPropotion:return 10*t/100;case r.FireResistance:return 2*t/100;case r.IceResistance:return 2*t/100;case r.ThunderResistance:return 2*t/100;case r.LightResistance:return 2*t/100;case r.DarkResistance:return 2*t/100;case r.PhysicalAbsorption:return Math.pow(t,2)/100;case r.FireAbsorption:return Math.pow(t,2)/100;case r.IceAbsorption:return Math.pow(t,2)/100;case r.ThunderAbsorption:return Math.pow(t,2)/100;case r.LightAbsorption:return Math.pow(t,2)/100;case r.DarkAbsorption:return Math.pow(t,2)/100;case r.DebuffResistance:return 5*t/100;case r.EquipmentDropChance:return 1e-4*t*(t+1)/100;case r.SlimeDropChance:return .01*t*(t+1)/100;case r.MagicSlimeDropChance:return .01*t*(t+1)/100;case r.SpiderDropChance:return .01*t*(t+1)/100;case r.BatDropChance:return .01*t*(t+1)/100;case r.FairyDropChance:return .01*t*(t+1)/100;case r.FoxDropChance:return .01*t*(t+1)/100;case r.DevilFishDropChance:return .01*t*(t+1)/100;case r.TreantDropChance:return .01*t*(t+1)/100;case r.FlameTigerDropChance:return .01*t*(t+1)/100;case r.UnicornDropChance:return .01*t*(t+1)/100;case r.ColorMaterialDropChance:return 1e-4*t*(t+1)/100;case r.PhysicalCritical:return 3*t/100;case r.MagicalCritical:return 3*t/100;case r.EXPGain:return 1*t*(t+1)/100;case r.SkillProficiency:return .5*t*(t+1)/100;case r.EquipmentProficiency:return .25*t*(t+1)/100;case r.MoveSpeedMultiplier:return .1*t*(t+1)/100;case r.GoldGain:return t*(t+1)/100;case r.StoneGain:return 5*Math.pow(t,2)/100;case r.CrystalGain:return 5*Math.pow(t,2)/100;case r.LeafGain:return 5*Math.pow(t,2)/100;case r.WarriorSkillLevel:return 2*t;case r.WizardSkillLevel:return 2*t;case r.AngelSkillLevel:return 2*t;case r.ThiefSkillLevel:return 2*t;case r.ArcherSkillLevel:return 2*t;case r.TamerSkillLevel:return 2*t;case r.AllSkillLevel:return t;case r.SlimeKnowledge:return .5*t*(t+1)/100;case r.MagicSlimeKnowledge:return .5*t*(t+1)/100;case r.SpiderKnowledge:return .5*t*(t+1)/100;case r.BatKnowledge:return .5*t*(t+1)/100;case r.FairyKnowledge:return .5*t*(t+1)/100;case r.FoxKnowledge:return .5*t*(t+1)/100;case r.DevilFishKnowledge:return .5*t*(t+1)/100;case r.TreantKnowledge:return .5*t*(t+1)/100;case r.FlameTigerKnowledge:return .5*t*(t+1)/100;case r.UnicornKnowledge:return .5*t*(t+1)/100;case r.PhysicalDamage:return .5*t*(t+1)/100;case r.FireDamage:return .5*t*(t+1)/100;case r.IceDamage:return .5*t*(t+1)/100;case r.ThunderDamage:return .5*t*(t+1)/100;case r.LightDamage:return .5*t*(t+1)/100;case r.DarkDamage:return .5*t*(t+1)/100;case r.HpRegen:return 10*t;case r.MpRegen:return 10*t*(t+1);case r.TamingPoint:return .05*t;case r.WarriorSkillRange:return .002*t;case r.WizardSkillRange:return .002*t;case r.AngelSkillRange:return .002*t;case r.ThiefSkillRange:return .002*t;case r.ArcherSkillRange:return .002*t;case r.TamerSkillRange:return .002*t;case r.TownMatGain:return .01*t;case r.TownMatAreaClearGain:return t;case r.RebirthPointGain1:return .01*t;case r.RebirthPointGain2:return .01*t;case r.RebirthPointGain3:return .01*t;case r.CriticalDamage:return 5*t*(t+1)/100;case r.BlessingEffect:return .01*t;case r.MoveSpeedAdder:return t*(t+1)/2;case r.PetEXPGain:return .05*t;case r.LoyaltyPointGain:return .05*t;case r.CatalystDoubleCriticalChance:return .005*t;case r.WarriorSkillEffectRange:return .002*t;case r.WizardSkillEffectRange:return .002*t;case r.AngelSkillEffectRange:return .002*t;case r.ThiefSkillEffectRange:return .002*t;case r.ArcherSkillEffectRange:return .002*t;case r.TamerSkillEffectRange:return .002*t;case r.HpRegenMultiplier:return .005*t*(t+1)*.01;case r.MpRegenMultiplier:return .005*t*(t+1)*.01;case r.ArmoredFury:return .1*t*.01;case r.WardedFury:return .1*t*.01;case r.PetPhysicalCriticalChance:return 3*t*.01;case r.PetMagicalCriticalChance:return 3*t*.01;case r.PetCriticalDamage:return 5*t*(t+1)*.01;case r.PetDebuffResistance:return 5*t*.01;case r.StoneTownResearchPower:return .025*t*(t+1)*.01;case r.CrystalTownResearchPower:return .025*t*(t+1)*.01;case r.LeafTownResearchPower:return .025*t*(t+1)*.01;case r.GuildEXPGain:return .002*t*(t+1)*.01;case r.SPDMultiplier:return .5*t*(t+1)/100;case r.CriticalDamageMultiplier:return .5*t*(t+1)/100;case r.SkillProficiencyMultiplier:return .5*t*(t+1)/100;case r.EquipmentProficiencyMultiplier:return .25*t*(t+1)/100;case r.EXPGainMultiplier:return .25*t*(t+1)/100;case r.GoldGainMultiplier:return .25*t*(t+1)/100;case r.PhysicalDamageMultiplier:return .25*t*(t+1)/100;case r.FireDamageMultiplier:return .25*t*(t+1)/100;case r.IceDamageMultiplier:return .25*t*(t+1)/100;case r.ThunderDamageMultiplier:return .25*t*(t+1)/100;case r.LightDamageMultiplier:return .25*t*(t+1)/100;case r.DarkDamageMultiplier:return .25*t*(t+1)/100;case r.TamingPointMultiplier:return .5*t*(t+1)/100;case r.PetEXPGainMultiplier:return .5*t*(t+1)/100;case r.LoyaltyPointGainMultiplier:return .5*t*(t+1)/100;case r.BlessingEffectMultiplier:return .05*t*(t+1)/100;case r.PhysicalCriticalMultiplier:return 2*t/100;case r.MagicalCriticalMultiplier:return 2*t/100;case r.ChallengeBossKnowledge:return .2*t*(t+1)/100;case r.HPAfter:return 12.5*t*(t+1);case r.MPAfter:return 10*t*(t+1);case r.ATKAfter:return 5*t*(t+1);case r.MATKAfter:return 5*t*(t+1);case r.DEFAfter:return 5*t*(t+1);case r.MDEFAfter:return 5*t*(t+1);case r.SPDAfter:return 5*t*(t+1);case r.MoveSpeedAfter:return .5*t*(t+1);case r.PhysicalCriticalAfter:return .1*t*.01;case r.MagicalCriticalAfter:return .1*t*.01;case r.CriticalDamageAfter:return t*(t+1)*.01;case r.DebuffResistanceAfter:return .1*t*.01;case r.PhysicalDamageAfter:return 10*t*(t+1)*.01;case r.FireDamageAfter:return 10*t*(t+1)*.01;case r.IceDamageAfter:return 10*t*(t+1)*.01;case r.ThunderDamageAfter:return 10*t*(t+1)*.01;case r.LightDamageAfter:return 10*t*(t+1)*.01;case r.DarkDamageAfter:return 10*t*(t+1)*.01;case r.FireResistanceAfter:return .1*t*.01;case r.IceResistanceAfter:return .1*t*.01;case r.ThunderResistanceAfter:return .1*t*.01;case r.LightResistanceAfter:return .1*t*.01;case r.DarkResistanceAfter:return .1*t*.01;case r.SlimeKnowledgeAfter:return 10*t*(t+1)*.01;case r.MagicSlimeKnowledgeAfter:return 10*t*(t+1)*.01;case r.SpiderKnowledgeAfter:return 10*t*(t+1)*.01;case r.BatKnowledgeAfter:return 10*t*(t+1)*.01;case r.FairyKnowledgeAfter:return 10*t*(t+1)*.01;case r.FoxKnowledgeAfter:return 10*t*(t+1)*.01;case r.DevilFishKnowledgeAfter:return 10*t*(t+1)*.01;case r.TreantKnowledgeAfter:return 10*t*(t+1)*.01;case r.FlameTigerKnowledgeAfter:return 10*t*(t+1)*.01;case r.UnicornKnowledgeAfter:return 10*t*(t+1)*.01;case r.ChallengeBossKnowledgeAfter:return 10*t*(t+1)*.01;case r.SDDamageMultiplier:return 2.5*t*(t+1)*.01;case r.SDDamageCutMultiplier:return 2.5*t*(t+1)*.01;case r.FameGain:return .1*t*(t+1)*.01;case r.DungeonCoinGain:return .01*t*(t+1)*.01;case r.ExtraAfterDamage:return .01*t*(t+1)*.01;default:return 0}},RequiredLevelIncrement(e,t){return e==r.Nothing?0:Math.floor(25/this.MaxLevel(e))*t*this.RarityFactor(e)},IsAfter(e){switch(e){case r.HPAfter:return!0;case r.MPAfter:return!0;case r.ATKAfter:return!0;case r.MATKAfter:return!0;case r.DEFAfter:return!0;case r.MDEFAfter:return!0;case r.SPDAfter:return!0;case r.MoveSpeedAfter:return!0;case r.PhysicalCriticalAfter:return!0;case r.MagicalCriticalAfter:return!0;case r.CriticalDamageAfter:return!0;case r.DebuffResistanceAfter:return!0;case r.PhysicalDamageAfter:return!0;case r.FireDamageAfter:return!0;case r.IceDamageAfter:return!0;case r.ThunderDamageAfter:return!0;case r.LightDamageAfter:return!0;case r.DarkDamageAfter:return!0;case r.FireResistanceAfter:return!0;case r.IceResistanceAfter:return!0;case r.ThunderResistanceAfter:return!0;case r.LightResistanceAfter:return!0;case r.DarkResistanceAfter:return!0;case r.SlimeKnowledgeAfter:return!0;case r.MagicSlimeKnowledgeAfter:return!0;case r.SpiderKnowledgeAfter:return!0;case r.BatKnowledgeAfter:return!0;case r.FairyKnowledgeAfter:return!0;case r.FoxKnowledgeAfter:return!0;case r.DevilFishKnowledgeAfter:return!0;case r.TreantKnowledgeAfter:return!0;case r.FlameTigerKnowledgeAfter:return!0;case r.UnicornKnowledgeAfter:return!0;case r.ChallengeBossKnowledgeAfter:return!0;case r.SDDamageMultiplier:return!0;case r.SDDamageCutMultiplier:return!0;case r.FameGain:return!0;case r.DungeonCoinGain:return!0;case r.ExtraAfterDamage:return!0;default:return!1}},MaxEffectValue(e){switch(e){case Se.IncreaseProficiencyGain:return 100;case Se.IncreaseEffect:return 10;case Se.PurifyCurseEffect:return 1;case Se.IncreaseEffectIncrement:return 1;case Se.EqLevel:return 100;default:return 1e9}}};class w{constructor(t,s=0,a=!1){c(this,"kind");c(this,"requiredValue");c(this,"isLevel");c(this,"isSuperAbility");arguments.length==1?this.EquipmentRequiredAbility(arguments[0],a):arguments.length==2&&arguments[1]==!0?this.EquipmentRequiredAbility(arguments[0],arguments[1]):(this.kind=t,this.requiredValue=s,this.isSuperAbility=a)}EquipmentRequiredAbility(t,s=!1){this.isLevel=!0,this.requiredValue=t,this.isSuperAbility=s}}class ig{constructor(t,s){c(this,"data");c(this,"kind");c(this,"levels",Array(H.HeroKind));c(this,"effects",[]);c(this,"requiredAbilities",[]);c(this,"levelMaxEffects",Array(H.HeroKind));c(this,"setKind",re.Nothing);c(this,"isArtifact");this.data=t,this.kind=s,this.SetEffectAndRequiredAbility(),this.SetLevelMaxEffect();for(let a=0;a<this.levels.length;a++)this.levels[a]=new sg(this.data,s,a)}get rarity(){return Ut.Rarity(this.kind)}get part(){return Ut.Part(this.kind)}SetEffectAndRequiredAbility(){switch(this.kind){case g.Nothing:this.requiredAbilities.push(new w(1));break;case g.DullSword:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.ATKAdder,()=>4,()=>1)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Strength,3));break;case g.BrittleStaff:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.MATKAdder,()=>4,()=>1)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Intelligence,3));break;case g.FlimsyWing:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.ATKAdder,()=>2,()=>.5)),this.effects.push(new f(r.MATKAdder,()=>2,()=>.5)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Strength,2)),this.requiredAbilities.push(new w(R.Intelligence,2));break;case g.WornDart:this.effects.push(new f(r.MPAdder,()=>2.5,()=>.5)),this.effects.push(new f(r.ATKAdder,()=>4,()=>1)),this.effects.push(new f(r.StoneGain,()=>.1,()=>.025)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Strength,3));break;case g.SmallBow:this.effects.push(new f(r.MPAdder,()=>2.5,()=>.5)),this.effects.push(new f(r.MATKAdder,()=>4,()=>1)),this.effects.push(new f(r.CrystalGain,()=>.1,()=>.025)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Intelligence,3));break;case g.WoodenRecorder:this.effects.push(new f(r.MPAdder,()=>2.5,()=>.5)),this.effects.push(new f(r.ATKAdder,()=>2,()=>.5)),this.effects.push(new f(r.MATKAdder,()=>2,()=>.5)),this.effects.push(new f(r.LeafGain,()=>.1,()=>.025)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Strength,2)),this.requiredAbilities.push(new w(R.Intelligence,2));break;case g.OldCloak:this.effects.push(new f(r.HPAdder,()=>10,()=>10)),this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.requiredAbilities.push(new w(1)),this.requiredAbilities.push(new w(R.Vitality,3));break;case g.BlueHat:this.effects.push(new f(r.DEFAdder,()=>1,()=>1)),this.requiredAbilities.push(new w(5)),this.requiredAbilities.push(new w(R.Vitality,3)),this.requiredAbilities.push(new w(R.Strength,2));break;case g.OrangeHat:this.effects.push(new f(r.MDEFAdder,()=>1,()=>1)),this.requiredAbilities.push(new w(5)),this.requiredAbilities.push(new w(R.Vitality,3)),this.requiredAbilities.push(new w(R.Intelligence,2));break;case g.TShirt:this.effects.push(new f(r.HPAdder,()=>20,()=>5)),this.effects.push(new f(r.DEFAdder,()=>.5,()=>.5)),this.requiredAbilities.push(new w(5)),this.requiredAbilities.push(new w(R.Vitality,5));break;case g.ClothGlove:this.effects.push(new f(r.DEFAdder,()=>2.5,()=>.5)),this.effects.push(new f(r.PhysicalCritical,()=>.005,()=>25e-5)),this.requiredAbilities.push(new w(10)),this.requiredAbilities.push(new w(R.Luck,5));break;case g.BlueTShirt:this.effects.push(new f(r.MPAdder,()=>30,()=>3)),this.requiredAbilities.push(new w(15)),this.requiredAbilities.push(new w(R.Vitality,5));break;case g.OrangeTShirt:this.effects.push(new f(r.HPAdder,()=>20,()=>20)),this.requiredAbilities.push(new w(15)),this.requiredAbilities.push(new w(R.Agility,5));break;case g.ClothBelt:this.effects.push(new f(r.DEFMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new w(5)),this.requiredAbilities.push(new w(R.Vitality,3));break;case g.ClothShoes:this.effects.push(new f(r.MoveSpeedAdder,()=>5,()=>.25)),this.requiredAbilities.push(new w(5)),this.requiredAbilities.push(new w(R.Agility,5));break;case g.IronRing:this.effects.push(new f(r.HPAdder,()=>20,()=>2)),this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.HPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new w(10)),this.requiredAbilities.push(new w(R.Vitality,5));break;case g.PearlEarring:this.effects.push(new f(r.MPAdder,()=>20,()=>4)),this.effects.push(new f(r.MPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new w(10)),this.requiredAbilities.push(new w(R.Agility,5));break;case g.FireBrooch:this.effects.push(new f(r.FireDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(20)),this.requiredAbilities.push(new w(R.Vitality,5)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.IceBrooch:this.effects.push(new f(r.IceDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(20)),this.requiredAbilities.push(new w(R.Vitality,5)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.ThunderBrooch:this.effects.push(new f(r.ThunderDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(20)),this.requiredAbilities.push(new w(R.Vitality,5)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.LightBrooch:this.effects.push(new f(r.LightDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(20)),this.requiredAbilities.push(new w(R.Vitality,5)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.DarkBrooch:this.effects.push(new f(r.DarkDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(20)),this.requiredAbilities.push(new w(R.Vitality,5)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.WoodenShield:this.effects.push(new f(r.DEFAdder,()=>20,()=>1)),this.requiredAbilities.push(new w(15)),this.requiredAbilities.push(new w(R.Vitality,10)),this.requiredAbilities.push(new w(R.Strength,5));break;case g.LongSword:this.effects.push(new f(r.MPAdder,()=>10,()=>2)),this.effects.push(new f(r.ATKAdder,()=>10,()=>1)),this.effects.push(new f(r.WarriorSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new w(30)),this.requiredAbilities.push(new w(R.Strength,20));break;case g.LongStaff:this.effects.push(new f(r.MPAdder,()=>10,()=>2)),this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.WizardSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new w(30)),this.requiredAbilities.push(new w(R.Intelligence,20));break;case g.WarmWing:this.effects.push(new f(r.MPAdder,()=>10,()=>2)),this.effects.push(new f(r.ATKAdder,()=>5,()=>.5)),this.effects.push(new f(r.MATKAdder,()=>5,()=>.5)),this.effects.push(new f(r.AngelSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new w(30)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.DualDagger:this.effects.push(new f(r.MPAdder,()=>10,()=>2)),this.effects.push(new f(r.ATKAdder,()=>8,()=>.8)),this.effects.push(new f(r.MATKAdder,()=>2,()=>.2)),this.effects.push(new f(r.ThiefSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new w(30)),this.requiredAbilities.push(new w(R.Strength,20));break;case g.ReinforcedBow:this.effects.push(new f(r.MPAdder,()=>10,()=>2)),this.effects.push(new f(r.ATKAdder,()=>2,()=>.2)),this.effects.push(new f(r.MATKAdder,()=>8,()=>.8)),this.effects.push(new f(r.ArcherSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new w(30)),this.requiredAbilities.push(new w(R.Intelligence,20));break;case g.Flute:this.effects.push(new f(r.MPAdder,()=>10,()=>2)),this.effects.push(new f(r.ATKAdder,()=>5,()=>.5)),this.effects.push(new f(r.MATKAdder,()=>5,()=>.5)),this.effects.push(new f(r.TamerSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new w(30)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.FireStaff:this.effects.push(new f(r.MPAdder,()=>20,()=>2)),this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.FireDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Intelligence,15)),this.requiredAbilities.push(new w(R.Agility,10));break;case g.IceStaff:this.effects.push(new f(r.MPAdder,()=>20,()=>2)),this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.IceDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Intelligence,15)),this.requiredAbilities.push(new w(R.Agility,10));break;case g.ThunderStaff:this.effects.push(new f(r.MPAdder,()=>20,()=>2)),this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.ThunderDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Intelligence,15)),this.requiredAbilities.push(new w(R.Agility,10));break;case g.LeatherBelt:this.effects.push(new f(r.DEFAdder,()=>10,()=>1)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Vitality,10)),this.requiredAbilities.push(new w(R.Strength,5)),this.requiredAbilities.push(new w(R.Intelligence,5));break;case g.LeatherShoes:this.effects.push(new f(r.SPDAdder,()=>10,()=>.5)),this.effects.push(new f(r.MoveSpeedAdder,()=>10,()=>.5)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Agility,20));break;case g.WarmCloak:this.effects.push(new f(r.HPAdder,()=>100,()=>25)),this.effects.push(new f(r.MPAdder,()=>25,()=>5)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Vitality,10)),this.requiredAbilities.push(new w(R.Agility,10));break;case g.LeatherArmor:this.effects.push(new f(r.DEFAdder,()=>20,()=>2)),this.effects.push(new f(r.MDEFAdder,()=>20,()=>2)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Vitality,15)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.LeatherGlove:this.effects.push(new f(r.MDEFAdder,()=>5,()=>.5)),this.effects.push(new f(r.MagicalCritical,()=>.005,()=>5e-4)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Intelligence,5)),this.requiredAbilities.push(new w(R.Luck,15));break;case g.LeatherShield:this.effects.push(new f(r.DEFAdder,()=>20,()=>1)),this.effects.push(new f(r.PhysicalAbsorption,()=>.01,()=>5e-4)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Vitality,10)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Luck,10));break;case g.FireRing:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.FireResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Intelligence,15));break;case g.IceRing:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.IceResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Intelligence,15));break;case g.ThunderRing:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.ThunderResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Intelligence,15));break;case g.LightRing:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.LightResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Intelligence,15));break;case g.DarkRing:this.effects.push(new f(r.MPAdder,()=>5,()=>1)),this.effects.push(new f(r.DarkResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Intelligence,15));break;case g.EnhancedFireBrooch:this.effects.push(new f(r.FireDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new w(60)),this.requiredAbilities.push(new w(R.Intelligence,50));break;case g.EnhancedIceBrooch:this.effects.push(new f(r.IceDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new w(60)),this.requiredAbilities.push(new w(R.Intelligence,50));break;case g.EnhancedThunderBrooch:this.effects.push(new f(r.ThunderDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new w(60)),this.requiredAbilities.push(new w(R.Intelligence,50));break;case g.EnhancedLightBrooch:this.effects.push(new f(r.LightDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new w(60)),this.requiredAbilities.push(new w(R.Intelligence,50));break;case g.EnhancedDarkBrooch:this.effects.push(new f(r.DarkDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new w(60)),this.requiredAbilities.push(new w(R.Intelligence,50));break;case g.BattleSword:this.effects.push(new f(r.ATKAdder,()=>20,()=>1)),this.effects.push(new f(r.ATKMultiplier,()=>.01,()=>5e-4)),this.effects.push(new f(r.ATKPropotion,()=>.1,()=>.005)),this.requiredAbilities.push(new w(80)),this.requiredAbilities.push(new w(R.Strength,60));break;case g.BattleStaff:this.effects.push(new f(r.MATKAdder,()=>20,()=>1)),this.effects.push(new f(r.MATKMultiplier,()=>.01,()=>5e-4)),this.effects.push(new f(r.MATKPropotion,()=>.1,()=>.005)),this.requiredAbilities.push(new w(80)),this.requiredAbilities.push(new w(R.Intelligence,60));break;case g.BattleWing:this.effects.push(new f(r.ATKAdder,()=>10,()=>.5)),this.effects.push(new f(r.ATKMultiplier,()=>.005,()=>25e-5)),this.effects.push(new f(r.ATKPropotion,()=>.05,()=>1/400)),this.effects.push(new f(r.MATKAdder,()=>10,()=>.5)),this.effects.push(new f(r.MATKMultiplier,()=>.005,()=>25e-5)),this.effects.push(new f(r.MATKPropotion,()=>.05,()=>1/400)),this.requiredAbilities.push(new w(80)),this.requiredAbilities.push(new w(R.Strength,30)),this.requiredAbilities.push(new w(R.Intelligence,30));break;case g.BattleDagger:this.effects.push(new f(r.ATKAdder,()=>15,()=>1.5)),this.effects.push(new f(r.MATKAdder,()=>5,()=>.5)),this.effects.push(new f(r.PhysicalCritical,()=>.05,()=>5e-4)),this.requiredAbilities.push(new w(80)),this.requiredAbilities.push(new w(R.Strength,40)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.BattleBow:this.effects.push(new f(r.ATKAdder,()=>5,()=>.5)),this.effects.push(new f(r.MATKAdder,()=>15,()=>1.5)),this.effects.push(new f(r.MagicalCritical,()=>.05,()=>5e-4)),this.requiredAbilities.push(new w(80)),this.requiredAbilities.push(new w(R.Intelligence,40)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.BattleRecorder:this.effects.push(new f(r.ATKAdder,()=>10,()=>1)),this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.PhysicalCritical,()=>.025,()=>25e-5)),this.effects.push(new f(r.MagicalCritical,()=>.025,()=>25e-5)),this.requiredAbilities.push(new w(80)),this.requiredAbilities.push(new w(R.Strength,20)),this.requiredAbilities.push(new w(R.Intelligence,20)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.SlimeSword:this.setKind=re.Slime,this.effects.push(new f(r.ATKAdder,()=>15,()=>2)),this.effects.push(new f(r.ATKMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Strength,20));break;case g.SlimeGlove:this.setKind=re.Slime,this.effects.push(new f(r.SPDAdder,()=>20,()=>1)),this.effects.push(new f(r.SkillProficiency,()=>.05,()=>1/400)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Agility,10)),this.requiredAbilities.push(new w(R.Luck,10));break;case g.SlimeRing:this.setKind=re.Slime,this.effects.push(new f(r.StoneGain,()=>.5,()=>.1)),this.effects.push(new f(r.CrystalGain,()=>.5,()=>.1)),this.effects.push(new f(r.LeafGain,()=>.5,()=>.1)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.SlimeBelt:this.setKind=re.Slime,this.effects.push(new f(r.DEFAdder,()=>5,()=>1)),this.effects.push(new f(r.DebuffResistance,()=>.1,()=>.001)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Vitality,10)),this.requiredAbilities.push(new w(R.Luck,10));break;case g.SlimePincenez:this.setKind=re.Slime,this.effects.push(new f(r.EXPGain,()=>.05,()=>1/400)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.SlimeWing:this.setKind=re.Slime,this.effects.push(new f(r.ATKMultiplier,()=>.005,()=>5e-4)),this.effects.push(new f(r.MATKMultiplier,()=>.005,()=>5e-4)),this.effects.push(new f(r.LightDamage,()=>.2,()=>.02)),this.effects.push(new f(r.AngelSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Intelligence,10));break;case g.SlimePoncho:this.setKind=re.Slime,this.effects.push(new f(r.HPAdder,()=>100,()=>20)),this.effects.push(new f(r.HPMultiplier,()=>.05,()=>.001)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Vitality,20));break;case g.SlimeDart:this.setKind=re.Slime,this.effects.push(new f(r.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new f(r.DarkDamage,()=>.2,()=>.005)),this.effects.push(new f(r.StoneGain,()=>1,()=>.2)),this.effects.push(new f(r.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Luck,10));break;case g.MagicSlimeStick:this.setKind=re.Magicslime,this.effects.push(new f(r.MATKAdder,()=>15,()=>2)),this.effects.push(new f(r.MATKMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Intelligence,20));break;case g.MagicSlimeHat:this.setKind=re.Magicslime,this.effects.push(new f(r.MDEFAdder,()=>10,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Vitality,20)),this.requiredAbilities.push(new w(R.Intelligence,20));break;case g.MagicSlimeBow:this.setKind=re.Magicslime,this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.FireDamage,()=>.1,()=>.01)),this.effects.push(new f(r.IceDamage,()=>.1,()=>.01)),this.effects.push(new f(r.ThunderDamage,()=>.1,()=>.01)),this.effects.push(new f(r.CrystalGain,()=>1,()=>.2)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.MagicSlimeShoes:this.setKind=re.Magicslime,this.effects.push(new f(r.FireResistance,()=>.1,()=>1/400)),this.effects.push(new f(r.IceResistance,()=>.1,()=>1/400)),this.effects.push(new f(r.ThunderResistance,()=>.1,()=>1/400)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Vitality,15)),this.requiredAbilities.push(new w(R.Intelligence,20)),this.requiredAbilities.push(new w(R.Agility,5));break;case g.MagicSlimeRecorder:this.setKind=re.Magicslime,this.effects.push(new f(r.LeafGain,()=>1,()=>.2)),this.effects.push(new f(r.TamerSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Strength,10)),this.requiredAbilities.push(new w(R.Intelligence,10)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.MagicSlimeEarring:this.setKind=re.Magicslime,this.effects.push(new f(r.GoldGain,()=>.1,()=>.005)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.MagicSlimeBalloon:this.setKind=re.Magicslime,this.effects.push(new f(r.ColorMaterialDropChance,()=>15e-5,()=>1e-6)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.MagicSlimeSkirt:this.setKind=re.Magicslime,this.effects.push(new f(r.MPAdder,()=>200,()=>20)),this.effects.push(new f(r.MPMultiplier,()=>.05,()=>1/400)),this.effects.push(new f(r.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(50)),this.requiredAbilities.push(new w(R.Vitality,20)),this.requiredAbilities.push(new w(R.Agility,20));break;case g.SpiderHat:this.setKind=re.Spider,this.effects.push(new f(r.HPAdder,()=>500,()=>20)),this.effects.push(new f(r.DEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(r.DEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,40)),this.requiredAbilities.push(new w(R.Strength,40));break;case g.SpiderSkirt:this.setKind=re.Spider,this.effects.push(new f(r.DarkResistance,()=>.1,()=>1/400)),this.effects.push(new f(r.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,30)),this.requiredAbilities.push(new w(R.Intelligence,40)),this.requiredAbilities.push(new w(R.Agility,10));break;case g.SpiderSuit:this.setKind=re.Spider,this.effects.push(new f(r.HPAdder,()=>500,()=>20)),this.effects.push(new f(r.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(r.MDEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,40)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.SpiderDagger:this.setKind=re.Spider,this.effects.push(new f(r.MATKAdder,()=>30,()=>3)),this.effects.push(new f(r.DarkDamage,()=>.2,()=>.01)),this.effects.push(new f(r.ThiefSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Intelligence,80));break;case g.SpiderWing:this.setKind=re.Spider,this.effects.push(new f(r.PhysicalCritical,()=>.025,()=>1/400)),this.effects.push(new f(r.MagicalCritical,()=>.025,()=>1/400)),this.effects.push(new f(r.PhysicalDamage,()=>.2,()=>.01)),this.effects.push(new f(r.LightDamage,()=>.2,()=>.01)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Strength,30)),this.requiredAbilities.push(new w(R.Intelligence,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.SpiderCatchingNet:this.setKind=re.Spider,this.effects.push(new f(r.TamingPoint,()=>.5,()=>.01)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Strength,40)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.SpiderStick:this.setKind=re.Spider,this.effects.push(new f(r.TamingPoint,()=>.25,()=>.005)),this.effects.push(new f(r.ColorMaterialDropChance,()=>1e-4,()=>1e-6)),this.effects.push(new f(r.WizardSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Intelligence,40)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.SpiderFoldingFan:this.setKind=re.Spider,this.effects.push(new f(r.SkillProficiency,()=>.05,()=>1/400)),this.effects.push(new f(r.GoldGain,()=>.1,()=>.01)),this.effects.push(new f(r.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Agility,40)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.BatRing:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.DebuffResistance,()=>.1,()=>.001)),this.effects.push(new f(r.StoneGain,()=>1,()=>.2)),this.effects.push(new f(r.CrystalGain,()=>1,()=>.2)),this.effects.push(new f(r.LeafGain,()=>1,()=>.2)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Agility,60)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.BatShoes:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.MoveSpeedAdder,()=>20,()=>1)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Agility,100));break;case g.BatSword:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.ATKAdder,()=>50,()=>5)),this.effects.push(new f(r.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.WarriorSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Strength,40)),this.requiredAbilities.push(new w(R.Agility,60));break;case g.BatHat:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.FireAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.IceAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.ThunderAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.LightAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,40)),this.requiredAbilities.push(new w(R.Agility,60));break;case g.BatRecorder:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.TamerSkillLevel,()=>10,()=>.25)),this.effects.push(new f(r.TamingPoint,()=>.1,()=>.01)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Agility,100));break;case g.BatBow:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.ATKPropotion,()=>.2,()=>.02)),this.effects.push(new f(r.ArcherSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Agility,100));break;case g.BatMascaradeMask:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.EXPGain,()=>.2,()=>.01)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Agility,60)),this.requiredAbilities.push(new w(R.Luck,40));break;case g.BatCloak:this.setKind=re.Bat,this.effects.push(new f(r.SPDAdder,()=>20,()=>2)),this.effects.push(new f(r.PhysicalAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.MPAdder,()=>200,()=>20)),this.effects.push(new f(r.MPMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,20)),this.requiredAbilities.push(new w(R.Intelligence,20)),this.requiredAbilities.push(new w(R.Agility,60));break;case g.BronzeShoulder:this.effects.push(new f(r.MDEFAdder,()=>20,()=>1)),this.requiredAbilities.push(new w(15)),this.requiredAbilities.push(new w(R.Vitality,10)),this.requiredAbilities.push(new w(R.Intelligence,5));break;case g.BattleRing:this.effects.push(new f(r.PhysicalDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(20)),this.requiredAbilities.push(new w(R.Vitality,5)),this.requiredAbilities.push(new w(R.Strength,10));break;case g.Halo:this.effects.push(new f(r.HpRegen,()=>5,()=>.25)),this.requiredAbilities.push(new w(25)),this.requiredAbilities.push(new w(R.Vitality,20)),this.requiredAbilities.push(new w(R.Luck,5));break;case g.IronShoulder:this.effects.push(new f(r.MPAdder,()=>25,()=>5)),this.effects.push(new f(r.MDEFAdder,()=>25,()=>1)),this.requiredAbilities.push(new w(35)),this.requiredAbilities.push(new w(R.Vitality,15)),this.requiredAbilities.push(new w(R.Intelligence,15));break;case g.StrengthRing:this.effects.push(new f(r.PhysicalDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new w(60)),this.requiredAbilities.push(new w(R.Strength,50));break;case g.GoldenRing:this.effects.push(new f(r.HPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(r.MPMultiplier,()=>.02,()=>.002)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,20)),this.requiredAbilities.push(new w(R.Intelligence,20));break;case g.GoldenFireRing:this.effects.push(new f(r.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(r.FireResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.GoldenIceRing:this.effects.push(new f(r.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(r.IceResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.GoldenThunderRing:this.effects.push(new f(r.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(r.ThunderResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.GoldenLightRing:this.effects.push(new f(r.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(r.LightResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.GoldenDarkRing:this.effects.push(new f(r.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new f(r.DarkResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new w(100)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,40));break;case g.IronBelt:this.effects.push(new f(r.DEFAdder,()=>20,()=>2)),this.effects.push(new f(r.DEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.DEFPropotion,()=>.1,()=>.01)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,50));break;case g.IronShoes:this.effects.push(new f(r.SPDAdder,()=>20,()=>1)),this.effects.push(new f(r.MoveSpeedAdder,()=>20,()=>.5)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Agility,100));break;case g.CopperArmor:this.effects.push(new f(r.DEFAdder,()=>40,()=>4)),this.effects.push(new f(r.MDEFAdder,()=>40,()=>4)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,60)),this.requiredAbilities.push(new w(R.Strength,20)),this.requiredAbilities.push(new w(R.Intelligence,20));break;case g.IronGlove:this.effects.push(new f(r.MDEFAdder,()=>20,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.MDEFPropotion,()=>.1,()=>.01)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,50));break;case g.TowerShield:this.effects.push(new f(r.DEFAdder,()=>40,()=>2)),this.effects.push(new f(r.DEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.PhysicalAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.FireTowerShield:this.effects.push(new f(r.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.FireAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.IceTowerShield:this.effects.push(new f(r.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.IceAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.ThunderTowerShield:this.effects.push(new f(r.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.ThunderAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.LightTowerShield:this.effects.push(new f(r.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.LightAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.DarkTowerShield:this.effects.push(new f(r.MDEFAdder,()=>40,()=>2)),this.effects.push(new f(r.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.DarkAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new w(120)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,30)),this.requiredAbilities.push(new w(R.Luck,20));break;case g.SavageRing:this.effects.push(new f(r.PhysicalDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Strength,150));break;case g.SpellboundFireBrooch:this.effects.push(new f(r.FireDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Intelligence,150));break;case g.SpellboundIceBrooch:this.effects.push(new f(r.IceDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Intelligence,150));break;case g.SpellboundThunderBrooch:this.effects.push(new f(r.ThunderDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Intelligence,150));break;case g.SpellboundLightBrooch:this.effects.push(new f(r.LightDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Intelligence,150));break;case g.SpellboundDarkBrooch:this.effects.push(new f(r.DarkDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Intelligence,150));break;case g.CopperHelm:this.effects.push(new f(r.HPAdder,()=>250,()=>10)),this.effects.push(new f(r.HPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new w(70)),this.requiredAbilities.push(new w(R.Vitality,50));break;case g.BattleHelm:this.effects.push(new f(r.ATKAdder,()=>10,()=>1)),this.effects.push(new f(r.PhysicalDamage,()=>.025,()=>1/400)),this.requiredAbilities.push(new w(70)),this.requiredAbilities.push(new w(R.Vitality,20)),this.requiredAbilities.push(new w(R.Strength,30));break;case g.WizardHelm:this.effects.push(new f(r.MATKAdder,()=>10,()=>1)),this.effects.push(new f(r.FireDamage,()=>.025,()=>1/400)),this.effects.push(new f(r.IceDamage,()=>.025,()=>1/400)),this.effects.push(new f(r.ThunderDamage,()=>.025,()=>1/400)),this.effects.push(new f(r.LightDamage,()=>.025,()=>1/400)),this.effects.push(new f(r.DarkDamage,()=>.025,()=>1/400)),this.requiredAbilities.push(new w(70)),this.requiredAbilities.push(new w(R.Vitality,20)),this.requiredAbilities.push(new w(R.Intelligence,30));break;case g.LargeSword:this.effects.push(new f(r.ATKAdder,()=>30,()=>3)),this.effects.push(new f(r.ATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(r.WarriorSkillLevel,()=>5,()=>.1)),this.effects.push(new f(r.StoneGain,()=>1,()=>.2)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,100)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.LargeStaff:this.effects.push(new f(r.MATKAdder,()=>30,()=>3)),this.effects.push(new f(r.MATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(r.WizardSkillLevel,()=>5,()=>.1)),this.effects.push(new f(r.CrystalGain,()=>1,()=>.2)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,100)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.LargeWing:this.effects.push(new f(r.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new f(r.LightDamage,()=>.2,()=>.005)),this.effects.push(new f(r.AngelSkillLevel,()=>5,()=>.1)),this.effects.push(new f(r.LeafGain,()=>1,()=>.2)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,50)),this.requiredAbilities.push(new w(R.Intelligence,50)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.LargeDagger:this.effects.push(new f(r.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new f(r.DarkDamage,()=>.2,()=>.005)),this.effects.push(new f(r.ThiefSkillLevel,()=>5,()=>.1)),this.effects.push(new f(r.StoneGain,()=>1,()=>.2)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,50)),this.requiredAbilities.push(new w(R.Intelligence,50)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.LargeBow:this.effects.push(new f(r.FireDamage,()=>.2,()=>.005)),this.effects.push(new f(r.IceDamage,()=>.2,()=>.005)),this.effects.push(new f(r.ThunderDamage,()=>.2,()=>.005)),this.effects.push(new f(r.ArcherSkillLevel,()=>5,()=>.1)),this.effects.push(new f(r.CrystalGain,()=>1,()=>.2)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Intelligence,100)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.LargeOcarina:this.effects.push(new f(r.TamingPoint,()=>.1,()=>.005)),this.effects.push(new f(r.TamerSkillLevel,()=>5,()=>.1)),this.effects.push(new f(r.LeafGain,()=>1,()=>.2)),this.requiredAbilities.push(new w(150)),this.requiredAbilities.push(new w(R.Vitality,50)),this.requiredAbilities.push(new w(R.Strength,50)),this.requiredAbilities.push(new w(R.Intelligence,50)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.FairyClothes:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.TownMatGain,()=>.05,()=>1/400)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Intelligence,50)),this.requiredAbilities.push(new w(R.Luck,200));break;case g.FairyStaff:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.CrystalGain,()=>2,()=>.2)),this.effects.push(new f(r.MATKMultiplier,()=>.1,()=>.01)),this.effects.push(new f(r.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Intelligence,150)),this.requiredAbilities.push(new w(R.Luck,100));break;case g.FairyBoots:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.MoveSpeedAdder,()=>20,()=>1)),this.effects.push(new f(r.LightResistance,()=>.1,()=>1/400)),this.effects.push(new f(r.LightAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Vitality,100)),this.requiredAbilities.push(new w(R.Intelligence,50)),this.requiredAbilities.push(new w(R.Agility,100));break;case g.FairyGlove:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.SkillProficiency,()=>.15,()=>.005)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Intelligence,150)),this.requiredAbilities.push(new w(R.Luck,100));break;case g.FairyBrooch:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.EXPGain,()=>.3,()=>.015)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Luck,250));break;case g.FairyLamp:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.TownMatAreaClearGain,()=>2,()=>.1)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Intelligence,50)),this.requiredAbilities.push(new w(R.Luck,200));break;case g.FairyWing:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.LeafGain,()=>2,()=>.2)),this.effects.push(new f(r.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.ATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(r.MATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.MATKPropotion,()=>.25,()=>.01)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Strength,100)),this.requiredAbilities.push(new w(R.Intelligence,100)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.FairyShuriken:this.setKind=re.Fairy,this.effects.push(new f(r.MPAdder,()=>100,()=>10)),this.effects.push(new f(r.StoneGain,()=>2,()=>.2)),this.effects.push(new f(r.ATKMultiplier,()=>.1,()=>.01)),this.effects.push(new f(r.ATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(r.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(200)),this.requiredAbilities.push(new w(R.Strength,150)),this.requiredAbilities.push(new w(R.Luck,100));break;case g.FoxKanzashi:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.BlessingEffect,()=>.1,()=>1/400)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Vitality,200)),this.requiredAbilities.push(new w(R.Luck,200));break;case g.FoxLoincloth:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.EXPGain,()=>.5,()=>.025)),this.effects.push(new f(r.DEFMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(r.MDEFMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Agility,200)),this.requiredAbilities.push(new w(R.Luck,200));break;case g.FoxMask:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.MPMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.MpRegen,()=>100,()=>10)),this.effects.push(new f(r.PhysicalAbsorption,()=>.02,()=>1e-4)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Vitality,200)),this.requiredAbilities.push(new w(R.Intelligence,150)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.FoxHamayayumi:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.CriticalDamage,()=>.2,()=>.005)),this.effects.push(new f(r.ArcherSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.DebuffResistance,()=>.05,()=>5e-4)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Strength,150)),this.requiredAbilities.push(new w(R.Intelligence,150)),this.requiredAbilities.push(new w(R.Agility,50)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.FoxHat:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.HPAdder,()=>500,()=>20)),this.effects.push(new f(r.HPMultiplier,()=>.05,()=>.001)),this.effects.push(new f(r.HpRegen,()=>10,()=>1)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Vitality,350)),this.requiredAbilities.push(new w(R.Luck,50));break;case g.FoxCoat:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.IceResistance,()=>.15,()=>1/400)),this.effects.push(new f(r.ThunderResistance,()=>.15,()=>1/400)),this.effects.push(new f(r.LightResistance,()=>.15,()=>1/400)),this.effects.push(new f(r.ThunderAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Vitality,200)),this.requiredAbilities.push(new w(R.Intelligence,100)),this.requiredAbilities.push(new w(R.Luck,100));break;case g.FoxBoot:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(r.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(r.ThunderDamage,()=>.25,()=>.005)),this.effects.push(new f(r.LightDamage,()=>.25,()=>.005)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Vitality,200)),this.requiredAbilities.push(new w(R.Intelligence,200));break;case g.FoxEma:this.setKind=re.Fox,this.effects.push(new f(r.GoldGain,()=>.05,()=>.005)),this.effects.push(new f(r.BlessingEffect,()=>.05,()=>1/400)),this.effects.push(new f(r.EquipmentDropChance,()=>15e-5,()=>1e-6)),this.effects.push(new f(r.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(250)),this.requiredAbilities.push(new w(R.Luck,400));break;case g.DevilfishSword:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.ATKMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(r.MATKMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(r.PhysicalCritical,()=>.25,()=>.005)),this.effects.push(new f(r.MagicalCritical,()=>.25,()=>.005)),this.effects.push(new f(r.CriticalDamage,()=>.1,()=>.005)),this.effects.push(new f(r.WarriorSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Strength,200)),this.requiredAbilities.push(new w(R.Intelligence,200)),this.requiredAbilities.push(new w(R.Luck,200));break;case g.DevilfishWing:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.HPMultiplier,()=>.025,()=>.001)),this.effects.push(new f(r.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.MATKMultiplier,()=>.05,()=>.005)),this.effects.push(new f(r.FireResistance,()=>.15,()=>1/400)),this.effects.push(new f(r.AngelSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Vitality,200)),this.requiredAbilities.push(new w(R.Strength,200)),this.requiredAbilities.push(new w(R.Intelligence,200));break;case g.DevilfishRecorder:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new f(r.IceDamage,()=>.25,()=>.005)),this.effects.push(new f(r.DarkDamage,()=>.25,()=>.005)),this.effects.push(new f(r.MPMultiplier,()=>-.2,()=>.002)),this.effects.push(new f(r.TamerSkillLevel,()=>5,()=>.2)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Vitality,200)),this.requiredAbilities.push(new w(R.Intelligence,400));break;case g.DevilfishArmor:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.DEFAdder,()=>50,()=>5)),this.effects.push(new f(r.MDEFAdder,()=>50,()=>5)),this.effects.push(new f(r.HPMultiplier,()=>.025,()=>.001)),this.effects.push(new f(r.FireResistance,()=>.15,()=>1/400)),this.effects.push(new f(r.DarkResistance,()=>.15,()=>1/400)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Vitality,600));break;case g.DevilfishScarf:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.DEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(r.DEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(r.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new f(r.MDEFPropotion,()=>.1,()=>.01)),this.effects.push(new f(r.IceDamage,()=>.05,()=>1/400)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Vitality,300)),this.requiredAbilities.push(new w(R.Strength,150)),this.requiredAbilities.push(new w(R.Intelligence,150));break;case g.DevilfishGill:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.IceDamage,()=>.05,()=>1/400)),this.effects.push(new f(r.FireAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.IceAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Vitality,350)),this.requiredAbilities.push(new w(R.Intelligence,250));break;case g.DevilfishPendant:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.GoldGain,()=>.2,()=>.02)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Luck,600));break;case g.DevilfishRing:this.setKind=re.Devilfish,this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.DebuffResistance,()=>.15,()=>.0015)),this.effects.push(new f(r.StoneGain,()=>3,()=>.5)),this.effects.push(new f(r.CrystalGain,()=>3,()=>.5)),this.effects.push(new f(r.LeafGain,()=>3,()=>.5)),this.effects.push(new f(r.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(300)),this.requiredAbilities.push(new w(R.Vitality,400)),this.requiredAbilities.push(new w(R.Luck,200));break;case g.TreantAmulet:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.StoneGain,()=>100,()=>1)),this.effects.push(new f(r.CrystalGain,()=>100,()=>1)),this.effects.push(new f(r.LeafGain,()=>100,()=>1)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,500)),this.requiredAbilities.push(new w(R.Luck,1e3));break;case g.TreantHagoita:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.TamingPoint,()=>.25,()=>.025)),this.effects.push(new f(r.PetEXPGain,()=>.25,()=>.025)),this.effects.push(new f(r.LoyaltyPointGain,()=>.25,()=>.025)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,500)),this.requiredAbilities.push(new w(R.Strength,500)),this.requiredAbilities.push(new w(R.Intelligence,500));break;case g.TreantChoppingBoard:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.HPAdder,()=>200,()=>20)),this.effects.push(new f(r.DEFAdder,()=>100,()=>10)),this.effects.push(new f(r.MDEFAdder,()=>100,()=>10)),this.effects.push(new f(r.DEFMultiplier,()=>.1,()=>.01)),this.effects.push(new f(r.MDEFMultiplier,()=>.1,()=>.01)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,1e3)),this.requiredAbilities.push(new w(R.Strength,250)),this.requiredAbilities.push(new w(R.Intelligence,250));break;case g.TreantDagger:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.PhysicalDamage,()=>1,()=>.01)),this.effects.push(new f(r.FireDamage,()=>1,()=>.01)),this.effects.push(new f(r.IceDamage,()=>1,()=>.01)),this.effects.push(new f(r.ThunderDamage,()=>1,()=>.01)),this.effects.push(new f(r.LightDamage,()=>1,()=>.01)),this.effects.push(new f(r.DarkDamage,()=>1,()=>.01)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Strength,750)),this.requiredAbilities.push(new w(R.Intelligence,750));break;case g.TreantHaniwa:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.HPAdder,()=>1e3,()=>50)),this.effects.push(new f(r.HPMultiplier,()=>.1,()=>.005)),this.effects.push(new f(r.HpRegen,()=>250,()=>25)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,1500));break;case g.TreantKokeshi:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.ColorMaterialDropChance,()=>1e-4,()=>1e-6)),this.effects.push(new f(r.CriticalDamage,()=>1,()=>.01)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,500)),this.requiredAbilities.push(new w(R.Luck,1e3));break;case g.TreantLamp:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.GoldGain,()=>.5,()=>.025)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,500)),this.requiredAbilities.push(new w(R.Strength,250)),this.requiredAbilities.push(new w(R.Intelligence,250)),this.requiredAbilities.push(new w(R.Luck,500));break;case g.TreantLunchbox:this.setKind=re.Treant,this.effects.push(new f(r.SPDAdder,()=>-3600,()=>30)),this.effects.push(new f(r.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new f(r.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new f(r.CatalystDoubleCriticalChance,()=>.025,()=>5e-4)),this.effects.push(new f(r.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(350)),this.requiredAbilities.push(new w(R.Vitality,500)),this.requiredAbilities.push(new w(R.Luck,1e3));break;case g.FlametigerPortableHotSpring:this.setKind=re.Flametiger,this.effects.push(new f(r.SkillProficiency,()=>-2,()=>.005)),this.effects.push(new f(r.HPAdder,()=>5e3,()=>500)),this.effects.push(new f(r.MPAdder,()=>2e3,()=>200)),this.effects.push(new f(r.HPMultiplier,()=>.5,()=>.01)),this.effects.push(new f(r.MPMultiplier,()=>.5,()=>.01)),this.effects.push(new f(r.HpRegenMultiplier,()=>.001,()=>5e-5)),this.effects.push(new f(r.MpRegenMultiplier,()=>.001,()=>5e-5)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Vitality,5e5));break;case g.FlametigerVolcanicShield:this.setKind=re.Flametiger,this.effects.push(new f(r.EXPGain,()=>-2,()=>.005)),this.effects.push(new f(r.PhysicalDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.ArmoredFury,()=>.025,()=>.001)),this.effects.push(new f(r.DEFAdder,()=>200,()=>20)),this.effects.push(new f(r.DEFMultiplier,()=>.2,()=>.02)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Vitality,25e4)),this.requiredAbilities.push(new w(R.Strength,25e4));break;case g.FlametigerStripedBriefs:this.setKind=re.Flametiger,this.effects.push(new f(r.DebuffResistance,()=>-4,()=>.01)),this.effects.push(new f(r.PhysicalCriticalMultiplier,()=>.025,()=>5e-4)),this.effects.push(new f(r.MagicalCriticalMultiplier,()=>.025,()=>5e-4)),this.effects.push(new f(r.EXPGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(r.GoldGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Luck,5e5));break;case g.TorchOfEverburningFlametiger:this.setKind=re.Flametiger,this.effects.push(new f(r.GoldGain,()=>-2,()=>.005)),this.effects.push(new f(r.WarriorSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(r.WizardSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(r.AngelSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(r.ThiefSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(r.ArcherSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(r.TamerSkillRange,()=>.001,()=>25e-6)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Strength,1e5)),this.requiredAbilities.push(new w(R.Intelligence,1e5)),this.requiredAbilities.push(new w(R.Agility,3e5));break;case g.FlametigerCostume:this.setKind=re.Flametiger,this.effects.push(new f(r.EquipmentProficiency,()=>-2,()=>.005)),this.effects.push(new f(r.PetPhysicalCriticalChance,()=>.1,()=>.005)),this.effects.push(new f(r.PetMagicalCriticalChance,()=>.1,()=>.005)),this.effects.push(new f(r.PetCriticalDamage,()=>.3,()=>.005)),this.effects.push(new f(r.TamingPointMultiplier,()=>.1,()=>.005)),this.effects.push(new f(r.PetEXPGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(r.LoyaltyPointGainMultiplier,()=>.1,()=>.005)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Vitality,1e5)),this.requiredAbilities.push(new w(R.Agility,2e5)),this.requiredAbilities.push(new w(R.Luck,2e5));break;case g.RingOfFlametigersWrath:this.setKind=re.Flametiger,this.effects.push(new f(r.EXPGain,()=>-2,()=>.005)),this.effects.push(new f(r.FireDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.IceDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.ThunderDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.LightDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.DarkDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new f(r.WardedFury,()=>.025,()=>.001)),this.effects.push(new f(r.MDEFAdder,()=>200,()=>20)),this.effects.push(new f(r.MDEFMultiplier,()=>.2,()=>.02)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Vitality,25e4)),this.requiredAbilities.push(new w(R.Intelligence,25e4));break;case g.EndlessBowlOfSpicyFlametigerRamen:this.setKind=re.Flametiger,this.effects.push(new f(r.TamingPoint,()=>-10,()=>.025)),this.effects.push(new f(r.LoyaltyPointGain,()=>-10,()=>.025)),this.effects.push(new f(r.StoneTownResearchPower,()=>.025,()=>.001)),this.effects.push(new f(r.CrystalTownResearchPower,()=>.025,()=>.001)),this.effects.push(new f(r.LeafTownResearchPower,()=>.025,()=>.001)),this.effects.push(new f(r.BlessingEffectMultiplier,()=>.01,()=>25e-5)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Vitality,1e5)),this.requiredAbilities.push(new w(R.Agility,4e5));break;case g.ScreenOfTheSneakyFlametiger:this.setKind=re.Flametiger,this.effects.push(new f(r.AllSkillLevel,()=>-1e3,()=>2.5)),this.effects.push(new f(r.GoldGainMultiplier,()=>.05,()=>1/400)),this.effects.push(new f(r.GuildEXPGain,()=>.005,()=>25e-5)),this.effects.push(new f(r.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new f(r.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new w(700)),this.requiredAbilities.push(new w(R.Agility,25e4)),this.requiredAbilities.push(new w(R.Luck,25e4));break;case g.ModifiedSword:this.isArtifact=!0,this.effects.push(new f(r.MPAfter,()=>25,()=>5)),this.effects.push(new f(r.ATKAfter,()=>50,()=>10)),this.requiredAbilities.push(new w(10,!0)),this.requiredAbilities.push(new w(R.Strength,5,!0));break;case g.ModifiedStaff:this.isArtifact=!0,this.effects.push(new f(r.HPAfter,()=>50,()=>10)),this.effects.push(new f(r.MATKAfter,()=>50,()=>10)),this.requiredAbilities.push(new w(10,!0)),this.requiredAbilities.push(new w(R.Intelligence,5,!0));break;case g.ModifiedWing:this.isArtifact=!0,this.effects.push(new f(r.HPAfter,()=>50,()=>10)),this.effects.push(new f(r.MPAfter,()=>25,()=>5)),this.effects.push(new f(r.SDDamageCutMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new w(10,!0)),this.requiredAbilities.push(new w(R.Vitality,5,!0));break;case g.ModifiedDart:this.isArtifact=!0,this.effects.push(new f(r.MPAfter,()=>10,()=>2)),this.effects.push(new f(r.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new w(10,!0)),this.requiredAbilities.push(new w(R.Agility,3,!0)),this.requiredAbilities.push(new w(R.Luck,2,!0));break;case g.ModifiedBow:this.isArtifact=!0,this.effects.push(new f(r.HPAfter,()=>25,()=>5)),this.effects.push(new f(r.DEFAfter,()=>25,()=>5)),this.effects.push(new f(r.MDEFAfter,()=>25,()=>5)),this.effects.push(new f(r.SDDamageMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new w(10,!0)),this.requiredAbilities.push(new w(R.Vitality,1,!0)),this.requiredAbilities.push(new w(R.Strength,2,!0)),this.requiredAbilities.push(new w(R.Intelligence,2,!0));break;case g.ModifiedRecorder:this.isArtifact=!0,this.effects.push(new f(r.HPAfter,()=>50,()=>10)),this.effects.push(new f(r.MPAfter,()=>25,()=>5)),this.effects.push(new f(r.FameGain,()=>.05,()=>.01)),this.requiredAbilities.push(new w(10,!0)),this.requiredAbilities.push(new w(R.Luck,5,!0));break;case g.AncientCloak:this.isArtifact=!0,this.effects.push(new f(r.HPAfter,()=>200,()=>40)),this.effects.push(new f(r.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new w(20,!0)),this.requiredAbilities.push(new w(R.Vitality,10,!0)),this.requiredAbilities.push(new w(R.Agility,5,!0)),this.requiredAbilities.push(new w(R.Luck,5,!0));break;case g.AncientBelt:this.isArtifact=!0,this.effects.push(new f(r.DEFAfter,()=>50,()=>10)),this.effects.push(new f(r.MDEFAfter,()=>50,()=>10)),this.effects.push(new f(r.SDDamageCutMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new w(20,!0)),this.requiredAbilities.push(new w(R.Vitality,20,!0));break;case g.AncientShoes:this.isArtifact=!0,this.effects.push(new f(r.SPDAfter,()=>25,()=>5)),this.effects.push(new f(r.MoveSpeedAfter,()=>20,()=>4)),this.effects.push(new f(r.FameGain,()=>.02,()=>.004)),this.requiredAbilities.push(new w(30,!0)),this.requiredAbilities.push(new w(R.Agility,20,!0)),this.requiredAbilities.push(new w(R.Luck,10,!0));break;case g.AncientRing:this.isArtifact=!0,this.effects.push(new f(r.ATKAfter,()=>10,()=>2.5)),this.effects.push(new f(r.MATKAfter,()=>10,()=>2.5)),this.effects.push(new f(r.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new w(40,!0)),this.requiredAbilities.push(new w(R.Strength,10,!0)),this.requiredAbilities.push(new w(R.Intelligence,10,!0)),this.requiredAbilities.push(new w(R.Agility,10,!0)),this.requiredAbilities.push(new w(R.Luck,10,!0));break;case g.AncientEarring:this.isArtifact=!0,this.effects.push(new f(r.SDDamageMultiplier,()=>.1,()=>.05)),this.effects.push(new f(r.FameGain,()=>.05,()=>.01)),this.requiredAbilities.push(new w(40,!0)),this.requiredAbilities.push(new w(R.Agility,10,!0)),this.requiredAbilities.push(new w(R.Luck,30,!0));break}}SetLevelMaxEffect(){if(this.isArtifact)switch(this.rarity){case N.Rare:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.ATKAfter,()=>50,()=>0,!0),this.levelMaxEffects[1]=new f(r.MATKAfter,()=>50,()=>0,!0),this.levelMaxEffects[2]=new f(r.MPAfter,()=>50,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.PhysicalCriticalAfter,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new f(r.MagicalCriticalAfter,()=>.01,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.DEFAfter,()=>50,()=>0,!0),this.levelMaxEffects[1]=new f(r.MDEFAfter,()=>50,()=>0,!0),this.levelMaxEffects[2]=new f(r.HPAfter,()=>200,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAfter,()=>50,()=>0,!0),this.levelMaxEffects[5]=new f(r.MoveSpeedAfter,()=>50,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.FireResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.IceResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.ThunderResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.LightResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new f(r.DarkResistanceAfter,()=>.05,()=>0,!0);return;default:return}case N.SuperRare:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.ATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(r.MATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(r.CriticalDamage,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPoint,()=>.5,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.DEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(r.MDEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new f(r.GoldGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(r.EquipmentProficiency,()=>.1,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.EXPGain,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(r.SkillProficiency,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(r.RebirthPointGain2,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.TownMatGain,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new f(r.PetEXPGain,()=>.25,()=>0,!0);return;default:return}case N.Epic:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.StoneTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.CrystalTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.LeafTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDMultiplier,()=>.3,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPointMultiplier,()=>.25,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.ArmoredFury,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.WardedFury,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.GoldGainMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(r.GuildEXPGain,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new f(r.PetEXPGainMultiplier,()=>.25,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.EXPGainMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(r.SkillProficiencyMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(r.RebirthPointGain3,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(r.EquipmentProficiencyMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[5]=new f(r.LoyaltyPointGainMultiplier,()=>.25,()=>0,!0);return;default:return}}else switch(this.rarity){case N.Common:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.ATKAdder,()=>15,()=>0,!0),this.levelMaxEffects[1]=new f(r.MATKAdder,()=>15,()=>0,!0),this.levelMaxEffects[2]=new f(r.AllSkillLevel,()=>1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>20,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPoint,()=>.05,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.HPAdder,()=>100,()=>0,!0),this.levelMaxEffects[1]=new f(r.MPAdder,()=>50,()=>0,!0),this.levelMaxEffects[2]=new f(r.HpRegen,()=>5,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(r.MpRegen,()=>20,()=>0,!0),this.levelMaxEffects[5]=new f(r.LoyaltyPointGain,()=>.05,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.StoneGain,()=>1,()=>0,!0),this.levelMaxEffects[1]=new f(r.CrystalGain,()=>1,()=>0,!0),this.levelMaxEffects[2]=new f(r.LeafGain,()=>1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(r.TownMatAreaClearGain,()=>1,()=>0,!0),this.levelMaxEffects[5]=new f(r.PetEXPGain,()=>.05,()=>0,!0);return;default:return}case N.Uncommon:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.ATKMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.MATKMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.SkillProficiency,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>50,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPoint,()=>.1,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.DEFAdder,()=>25,()=>0,!0),this.levelMaxEffects[1]=new f(r.MDEFAdder,()=>25,()=>0,!0),this.levelMaxEffects[2]=new f(r.GoldGain,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>50,()=>0,!0),this.levelMaxEffects[5]=new f(r.EquipmentProficiency,()=>.025,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.HPMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.MPMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.EXPGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new f(r.TownMatGain,()=>.025,()=>0,!0),this.levelMaxEffects[5]=new f(r.PetEXPGain,()=>.1,()=>0,!0);return;default:return}case N.Rare:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.ATKPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(r.MATKPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new f(r.SkillProficiency,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>100,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPoint,()=>.25,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.DEFMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[1]=new f(r.MDEFMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(r.HpRegen,()=>10,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>100,()=>0,!0),this.levelMaxEffects[5]=new f(r.EquipmentProficiency,()=>.05,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.HPMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[1]=new f(r.MPMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(r.RebirthPointGain1,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.TownMatAreaClearGain,()=>2,()=>0,!0),this.levelMaxEffects[5]=new f(r.LoyaltyPointGain,()=>.2,()=>0,!0);return;default:return}case N.SuperRare:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.ATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(r.MATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(r.CriticalDamage,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPoint,()=>.5,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.DEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(r.MDEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new f(r.GoldGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new f(r.EquipmentProficiency,()=>.1,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.EXPGain,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new f(r.SkillProficiency,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new f(r.RebirthPointGain2,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new f(r.TownMatGain,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new f(r.PetEXPGain,()=>.25,()=>0,!0);return;default:return}case N.Epic:switch(this.part){case T.Weapon:this.levelMaxEffects[0]=new f(r.StoneTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.CrystalTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.LeafTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(r.SPDMultiplier,()=>.3,()=>0,!0),this.levelMaxEffects[5]=new f(r.TamingPointMultiplier,()=>.25,()=>0,!0);return;case T.Armor:this.levelMaxEffects[0]=new f(r.ArmoredFury,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new f(r.WardedFury,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new f(r.GoldGainMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(r.GuildEXPGain,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new f(r.PetEXPGainMultiplier,()=>.25,()=>0,!0);return;case T.Jewelry:this.levelMaxEffects[0]=new f(r.EXPGainMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new f(r.SkillProficiencyMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new f(r.RebirthPointGain3,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new f(r.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new f(r.EquipmentProficiencyMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[5]=new f(r.LoyaltyPointGainMultiplier,()=>.25,()=>0,!0);return;default:return}}}DisassembleMaterialNum(){return this.isArtifact?1+this.TotalLevel():Math.max(1,Math.floor((this.TotalLevel()+this.requiredAbilities[0].requiredValue/2)/4))}CraftCostMaterialNum(){let t=this.DisassembleMaterialNum()*500*(1-this.data.craft.costReduction.Value())*(1+this.rarity*2);return this.rarity>=N.Epic&&(t*=1e6),t<this.DisassembleMaterialNum()*this.data.equipment.disassembleMultiplier.Value()*4&&(t=this.DisassembleMaterialNum()*this.data.equipment.disassembleMultiplier.Value()*4),t}TotalLevel(){let t=0;for(let s=0;s<this.levels.length;s++)t+=this.levels[s].value;return t}RequiredProficiency(t,s){let a=Math.pow(3,this.rarity)*(1+1.5*this.rarity)*300*(s*(1+this.rarity)+1);return this.rarity>=N.Epic&&(a*=1e4*Math.pow(10,s/10)),s<=10?a:a*Math.pow(2,s-10)}ForgeSlotNum(){return this.TotalLevel()<60?0:this.TotalLevel()<80?1:this.TotalLevel()<100?2:this.TotalLevel()<120?3:this.TotalLevel()<140?4:this.TotalLevel()<160?5:6}MasteryNum(){let t=0;for(let s=0;s<this.levels.length;s++)this.levels[s].isMaxed&&t++;return t}}class rg{constructor(t){c(this,"data");c(this,"globalInformations",Array(H.EquipmentKind));c(this,"setItemArray",Array(H.EquipmentSetKind));c(this,"dictionaryUpgradeEffectMultiplier");c(this,"equipments",[]);c(this,"activeEquipments",Array(H.HeroKind));c(this,"dictionaryUpgradeMaxLevel");c(this,"dictionaryPointLeft");c(this,"dictionaryUpgrades",Array(H.DictionaryUpgradeKind));c(this,"artifactChance");c(this,"sdEnchantChance");c(this,"loadoutUnlockedNum");c(this,"effectMultiplier");c(this,"effectMultiplierModifierForArtifact");c(this,"forgeEffectCapAdderEQEffect");c(this,"forgeEffectCapAdderEffectIncrement");c(this,"forgeEffectCapAdderEQLevel");c(this,"maxLevels",Array(H.HeroKind));c(this,"disassembleMultiplier");c(this,"autoDisassembleAvailableNum");c(this,"dictionaryEquipmentArray");this.data=t;for(let s=0;s<this.globalInformations.length;s++)this.globalInformations[s]=new ig(this.data,s);this.autoDisassembleAvailableNum=new x,this.forgeEffectCapAdderEQLevel=new x,this.forgeEffectCapAdderEffectIncrement=new x,this.forgeEffectCapAdderEQEffect=new x,this.loadoutUnlockedNum=new x,this.dictionaryUpgradeEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.dictionaryUpgradeMaxLevel=new x(new l(n.Base,i.Add,()=>50)),this.effectMultiplierModifierForArtifact=new x,this.effectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.disassembleMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.artifactChance=new x(new l(n.Base,i.Add,()=>.01)),this.sdEnchantChance=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.maxLevels.length;s++)this.maxLevels[s]=new x(new l(n.Base,i.Add,()=>Ut.maxLevelForEachHero));for(let s=0;s<H.EquipmentSetKind;s++)this.setItemArray[s]=this.SetItemList(s);for(let s=0;s<this.dictionaryUpgrades.length;++s)this.dictionaryUpgrades[s]=new tg(this,s)}SetItemList(t){let s=[];for(let a=0;a<this.globalInformations.length;a++)this.globalInformations[a].setKind==t&&s.push(this.globalInformations[a].kind);return s}Start(){for(let t=0;t<this.dictionaryUpgrades.length;t++)this.dictionaryUpgrades[t].Start()}EffectMultiplier(){return this.data.source.isSuperDungeon&&this.data.source.isActiveSdModifiers[950+dt.RemoveEquipmentEffectBonuses]?1:this.effectMultiplier.Value()}ArtifactEffectMultiplier(){return 1+(this.EffectMultiplier()-1)*this.effectMultiplierModifierForArtifact.Value()}}const ot={colorDropChanceBase:.001,dropChanceBase:.01,ColorFactor(e){switch(e){case vt.Normal:return 1;case vt.Blue:return 1.25;case vt.Yellow:return 1.25;case vt.Red:return 1.5;case vt.Green:return 2.5;case vt.Purple:return 3;case vt.Boss:return 10;case vt.Metal:return 500;default:return 1}},SpeciesFactor(e){switch(e){case O.Slime:return 1;case O.MagicSlime:return 1.15;case O.Spider:return .8;case O.Bat:return 1.35;case O.Fairy:return 1.5;case O.Fox:return 1.75;case O.DevilFish:return 2.35;case O.Treant:return 3;case O.FlameTiger:return 5;case O.Unicorn:return 7;case O.Mimic:return 10;case O.ChallengeBoss:return 5;default:return 1}},PetPassiveEffectMaxValue(e){switch(e){case F.DoubleMaterialChance:return 1;case F.DisassembleTownMatGain:return 10;case F.ChestPortalOrbChance:return .005;default:return 1e300}},PetPassiveEffectValue(e,t){switch(e){case F.ResourceGain:return .1*t;case F.PotionEffect:return .005*t;case F.TamingPointGain:return .05*t;case F.GoldCap:return .025*t;case F.GoldGain:return .025*t;case F.ExpGain:return .1*t;case F.DoubleMaterialChance:return 5e-4*t;case F.GoldGainOnDisassemblePotion:return .05*t;case F.DisassembleTownMatGain:return .01*t;case F.TownMatGainFromDungeonReward:return .01*t;case F.OilOfSlimeDropChance:return .001*t;case F.EnchantedClothDropChance:return .001*t;case F.SpiderSilkDropChance:return .001*t;case F.BatWingDropChance:return .001*t;case F.FairyDustDropChance:return .001*t;case F.FoxTailDropChance:return .001*t;case F.FishScalesDropChance:return .001*t;case F.CarvedBranchDropChance:return .001*t;case F.ThickFurDropChance:return .001*t;case F.UnicornHornDropChance:return .001*t;case F.EquipProfGain:return .01*t;case F.MysteriousWaterGain:return .01*t;case F.ChestPortalOrbChance:return 1e-6*t;case F.SkillProfGain:return .01*t;case F.TownMatGain:return .01*t;case F.ResearchPowerStone:return .025*t;case F.ResearchPowerCrystal:return .025*t;case F.ResearchPowerLeaf:return .025*t;case F.CatalystCriticalChance:return .01*t;case F.MysteriousWaterCap:return 2*t;case F.BlessingEffect:return .02*t;case F.LoyaltyPointGain:return .025*t;case F.PetExpGain:return .05*t;case F.ExpeditionExpGain:return .005*t;case F.EssenceConversionRate:return .005*t;case F.SlimeCoinEfficiency:return .005*t;case F.SlimeCoinCap:return .025*t;case F.EquipmentEffect:return .001*t;case F.AlchemyPointGain:return .01*t;default:return 0}},petPassiveEffectKinds:[[F.ResourceGain,F.DoubleMaterialChance,F.OilOfSlimeDropChance,F.EquipProfGain,F.TownMatGain,F.GoldGain,F.Nothing,F.Nothing,F.Nothing],[F.PotionEffect,F.GoldGainOnDisassemblePotion,F.EnchantedClothDropChance,F.MysteriousWaterGain,F.ResearchPowerStone,F.ResearchPowerLeaf,F.Nothing,F.Nothing,F.Nothing],[F.TamingPointGain,F.TamingPointGain,F.SpiderSilkDropChance,F.TamingPointGain,F.TamingPointGain,F.TamingPointGain,F.Nothing,F.Nothing,F.Nothing],[F.GoldCap,F.DisassembleTownMatGain,F.BatWingDropChance,F.DisassembleTownMatGain,F.ResearchPowerCrystal,F.ResearchPowerCrystal,F.Nothing,F.Nothing,F.Nothing],[F.ExpGain,F.TownMatGainFromDungeonReward,F.FairyDustDropChance,F.ChestPortalOrbChance,F.TamingPointGain,F.TamingPointGain,F.Nothing,F.Nothing,F.Nothing],[F.GoldGain,F.DisassembleTownMatGain,F.FoxTailDropChance,F.SkillProfGain,F.ResearchPowerLeaf,F.ResearchPowerStone,F.Nothing,F.Nothing,F.Nothing],[F.CatalystCriticalChance,F.MysteriousWaterCap,F.FishScalesDropChance,F.PotionEffect,F.BlessingEffect,F.LoyaltyPointGain,F.Nothing,F.Nothing,F.Nothing],[F.ResourceGain,F.PetExpGain,F.CarvedBranchDropChance,F.SkillProfGain,F.LoyaltyPointGain,F.ExpeditionExpGain,F.Nothing,F.Nothing,F.Nothing],[F.EssenceConversionRate,F.SlimeCoinEfficiency,F.ThickFurDropChance,F.SlimeCoinCap,F.EquipmentEffect,F.AlchemyPointGain,F.Nothing,F.Nothing,F.Nothing],[F.Nothing,F.Nothing,F.UnicornHornDropChance,F.Nothing,F.Nothing,F.Nothing,F.Nothing,F.Nothing,F.Nothing],[F.DisassembleTownMatGain,F.SpiderSilkDropChance]],monsterAttackElements:[[C.Physical,C.Physical,C.Physical,C.Physical,C.Physical,C.Physical,C.Physical,C.Physical],[C.Ice,C.Ice,C.Thunder,C.Fire,C.Light,C.Dark,C.Fire,C.Physical],[C.Physical,C.Ice,C.Physical,C.Fire,C.Physical,C.Dark,C.Physical,C.Physical],[C.Fire,C.Ice,C.Thunder,C.Fire,C.Light,C.Dark,C.Dark,C.Physical],[C.Thunder,C.Physical,C.Thunder,C.Physical,C.Light,C.Physical,C.Thunder,C.Physical],[C.Physical,C.Ice,C.Physical,C.Fire,C.Physical,C.Dark,C.Physical,C.Physical],[C.Fire,C.Ice,C.Thunder,C.Fire,C.Light,C.Dark,C.Physical,C.Physical],[C.Physical,C.Ice,C.Physical,C.Fire,C.Physical,C.Dark,C.Physical,C.Physical],[C.Physical,C.Ice,C.Physical,C.Fire,C.Physical,C.Dark,C.Physical,C.Physical],[C.Physical],[C.Physical,C.Dark,C.Physical,C.Physical,C.Fire,C.Thunder,C.Physical,C.Physical,C.Physical,C.Physical]],monsterStats:[[[10,0,.5,0,0,0,5,-.5,-.5,-.5,-.5,-.5],[20,0,.75,0,0,0,5,-.5,-.5,-.5,-.5,-.5],[10,0,.5,0,0,0,7.5,-.5,-.5,-.5,-.5,-.5],[20,0,1.25,0,0,0,2.5,-.5,-.5,-.5,-.5,-.5],[30,0,.75,0,5,1,10,-.5,-.5,-.5,-.5,-.5],[50,0,2.5,0,5,1,2.5,-.5,-.5,-.5,-.5,-.5],[200,0,2.5,0,20,5,5,-.2,-.2,-.2,-.2,-.2],[1,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,.5,0,0,5,-.5,-.5,-.5,-.5,-.5],[20,0,0,.75,0,0,5,0,.5,-.5,0,0],[10,0,0,.5,0,0,7.5,-.5,0,.5,0,0],[20,0,0,1.25,0,0,2.5,.5,-.5,0,0,0],[30,0,0,.75,1,5,10,0,0,0,.5,-.5],[50,0,0,2.5,1,5,2.5,0,0,0,-.5,.5],[200,0,0,2.5,5,20,5,0,0,0,0,0],[2,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,1,0,2.5,.5,5,-.2,0,0,-.5,.5],[15,0,0,1,.5,2.5,5,-.2,.6,-.4,-.5,.5],[10,0,.75,0,2.5,.5,7.5,-.6,0,.6,-.5,.5],[15,0,0,1.5,.5,2.5,2.5,.4,-.4,0,-.5,.5],[20,0,1,0,5,1,10,-.2,0,0,-.5,.5],[30,0,0,3,1,5,2.5,-.2,0,0,-1,.9],[150,0,3.75,0,20,20,5,.5,.5,.5,-.5,.5],[3,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,.5,0,2.5,.5,20,-.2,-.2,-.2,-.5,0],[15,0,.5,0,2.5,.5,20,-.2,.5,-.2,-.5,0],[10,0,.4,0,2.5,.5,30,-.2,-.2,.5,-.5,0],[15,0,1,0,2.5,.5,10,.5,-.2,-.2,-.5,0],[20,0,.6,0,5,1,40,-.2,-.2,-.2,-.2,0],[30,0,1.5,0,5,1,10,-.2,-.2,-.2,-.5,.5],[150,0,2,0,20,5,40,0,0,0,-.5,0],[4,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,0,.5,.5,2.5,20,0,0,0,.5,-.5],[15,0,0,.5,.5,2.5,20,0,.5,-.2,.5,-.5],[10,0,0,.4,.5,2.5,30,-.2,0,.5,.5,-.5],[15,0,0,1,.5,2.5,10,.5,-.2,0,.5,-.5],[20,0,0,.6,1,5,40,0,0,0,.9,-.5],[30,0,0,1.5,1,5,10,0,0,0,.5,-.2],[150,0,0,2,5,20,40,.2,.2,.2,.9,-.2],[5,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,1,1,1,5,-.2,.1,.8,.5,-.25],[20,0,1.5,0,1,1,5,-.2,.1,.25,.5,-.25],[10,0,0,1,1,1,7.5,-.2,.1,.8,.5,-.25],[20,0,2.5,0,1,1,2.5,-.2,.1,.5,.5,-.25],[30,0,0,1.5,2,2,10,-.2,.1,.5,.9,-.25],[50,0,5,0,2,2,2.5,-.2,.1,.5,.5,-.25],[200,0,0,5,5,5,5,0,.5,.9,.9,-.1],[6,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[25,0,.5,0,10,10,2.5,.5,.2,-.5,-.25,.8],[50,0,0,.75,10,10,2.5,.5,.5,-.5,-.25,.8],[25,0,.5,0,10,10,3.5,.5,.2,-.5,-.25,.8],[50,0,0,1.25,10,10,1.5,.5,.2,-.5,-.25,.8],[75,0,.75,0,25,25,3.5,.5,.2,-.5,-.25,.8],[125,0,0,2.5,25,25,1.5,.5,.2,-.5,-.25,.9],[500,0,2.5,0,50,50,2.5,.9,.5,-.2,0,.9],[7,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[50,0,.75,0,40,40,2,-.25,.2,.2,-.25,.8],[100,0,1,0,40,40,2,-.25,.2,.2,-.25,.8],[50,0,.75,0,40,40,3,-.25,.2,.2,-.25,.8],[100,0,1.5,0,40,40,1.25,-.25,.2,.2,-.25,.8],[150,0,1,0,100,100,3,-.25,.2,.2,-.25,.8],[250,0,3,0,100,100,1.25,-.25,.2,.2,-.25,.9],[1e3,0,3,0,100,100,2.5,0,.5,.5,0,.9],[8,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,1,0,.5,10,.5,.5,.5,.5,.5],[20,0,0,1.5,0,.5,10,.5,.9,.5,.5,.5],[10,0,0,1,0,.5,15,.5,.5,.9,.5,.5],[20,0,0,2.5,0,.5,5,.9,.5,.5,.5,.5],[30,0,0,1.5,0,1,20,.5,.5,.5,.9,.5],[50,0,0,5,0,1,5,.5,.5,.5,.5,.9],[200,0,5,0,1,2.5,10,.9,.9,.9,.9,.9],[9,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,.5,2.5,0,0,5,-.2,0,0,-.5,.5],[15,0,0,1,0,2.5,5,-.6,.6,0,-.5,.5],[10,0,.75,0,2.5,0,7.5,-.2,0,0,-.5,.5],[15,0,0,1.5,0,2.5,2.5,.4,-.6,0,-.5,.5],[20,0,1,0,5,0,10,-.2,0,0,-.5,.5],[30,0,0,3,0,5,2.5,-.2,0,0,-1,.9],[150,0,3.75,0,20,20,5,0,0,0,0,0],[.3,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[200,0,1,0,10,10,5,0,0,0,0,0]],[[1e3,0,3.5,0,10,10,2.5,0,0,0,0,0],[850,0,0,7.5,100,10,2.5,.5,.5,.5,-.5,.5],[2e3,0,7.5,7.5,200,200,2,0,0,0,0,0],[1e3,0,3.5,0,50,10,10/3,0,0,0,-.2,.5],[1200,0,0,3.5,50,100,4,.6,.6,.6,.9,.1],[2e3,0,10,10,100,100,2.5,.5,.6,.9,.9,.3],[1e5,0,10,0,200,200,2.5,.9,.9,.9,.9,.9],[2e3,0,5,5,200,200,2,0,0,0,0,0],[2e3,0,5,5,200,200,2,0,0,0,0,0],[2e3,0,5,5,200,200,2,0,0,0,0,0]]],townMatBricks:[Fe.MudBrick,Fe.MudBrick,Fe.LimestoneBrick,Fe.LimestoneBrick,Fe.MarbleBrick,Fe.MarbleBrick,Fe.GraniteBrick,Fe.GraniteBrick,Fe.BasaltBrick,Fe.BasaltBrick],townMatLogs:[Fe.PineLog,Fe.PineLog,Fe.MapleLog,Fe.MapleLog,Fe.AshLog,Fe.AshLog,Fe.MahoganyLog,Fe.MahoganyLog,Fe.RosewoodLog,Fe.RosewoodLog],townMatShards:[Fe.JasperShard,Fe.JasperShard,Fe.OpalShard,Fe.OpalShard,Fe.OnyxShard,Fe.OnyxShard,Fe.JadeShard,Fe.JadeShard,Fe.SapphireShard,Fe.SapphireShard]};class oi{constructor(t,s){c(this,"data");c(this,"kind");this.data=t,this.kind=s}Start(){this.SetEffect()}get level(){return this.data.source.expeditionLevels[this.kind]}set level(t){this.data.source.expeditionLevels[this.kind]=parseInt(t)}get exp(){return this.data.source.expeditionExps[this.kind]}RequiredExp(t){let s=86400*(1+t+.25*Math.pow(Math.max(0,t-3),2));return t>=200&&(s*=Math.pow(2,(t-200)/50)),t>=300&&(s*=Math.pow(2,(t-300)/50)),t>=400&&(s*=Math.pow(2,(t-400)/50)),t>=500&&(s*=Math.pow(2,(t-500)/50)),s}TotalExp(){let t=0;for(let s=0;s<this.level;s++)t+=this.RequiredExp(s);return t+this.exp}GetExp(t){return t*this.ExpGainPerSecPerPet()}ExpGainPerSecPerPet(){return 1*this.data.expedition.expGainMultiplier.Value()}PetExpGainPerSec(){return 5*(1+.5*this.level)*this.data.expedition.petExpGainMultiplier.Value()*this.data.stats.MaxPetEXPGainAmongHeroes()}SpeedModifierByExpeditionLevel(){return Math.pow(1.1,Math.floor(this.level/10))}SetEffect(){switch(this.kind){case qe.Brick:this.data.town.townLevelEffectMultipliers[0].RegisterMultiplier(new l(n.Expedition,i.Add,()=>this.EffectValue()));break;case qe.Equipment:this.data.stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.Expedition,i.Mul,()=>this.EffectValue()));break;case qe.Log:this.data.town.townLevelEffectMultipliers[1].RegisterMultiplier(new l(n.Expedition,i.Add,()=>this.EffectValue()));break;case qe.PetExp:this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new l(n.Expedition,i.Mul,()=>this.EffectValue()));break;case qe.PetRank:this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.Expedition,i.Mul,()=>this.EffectValue()));break;case qe.Shard:this.data.town.townLevelEffectMultipliers[2].RegisterMultiplier(new l(n.Expedition,i.Add,()=>this.EffectValue()));break;case qe.WalkDistance:this.data.expedition.walkedDistanceGainMultiplier.RegisterMultiplier(new l(n.Expedition,i.Add,()=>this.EffectValue()));break}}get passiveEffectValueIncrementPerLevel(){switch(this.kind){case qe.Brick:return .01*this.data.expedition.passiveEffectMultiplier.Value();case qe.Equipment:return .02*this.data.expedition.passiveEffectMultiplier.Value();case qe.Log:return .01*this.data.expedition.passiveEffectMultiplier.Value();case qe.PetExp:return .2*this.data.expedition.passiveEffectMultiplier.Value()*this.data.expedition.fieldTrainingPassiveEffectMultiplier.Value();case qe.PetRank:return .05*this.data.expedition.passiveEffectMultiplier.Value();case qe.Shard:return .01*this.data.expedition.passiveEffectMultiplier.Value();case qe.WalkDistance:return .05*this.data.expedition.passiveEffectMultiplier.Value();default:return 0}}EffectValue(){return this.passiveEffectValueIncrementPerLevel*this.level}RewardAmount(t,s,a){switch(this.kind){case qe.Brick:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*s.rank)*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case qe.Equipment:return 1200*(1+.1*this.level)*(1+.05*s.rank)*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case qe.Log:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*s.rank)*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case qe.PetExp:return 18e3*Math.pow(1.2,this.level)*(1+.1*t.TotalRank())*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*this.data.stats.MaxPetEXPGainAmongHeroes()*this.data.expedition.petExpGainMultiplier.Value()*t.expeditionCtrl.rewardMultiplier.Value();case qe.PetRank:return 4*s.MaxTPGAmongHeroes()*Math.pow(1.1,this.level)*(1+.1*s.rank)*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*this.data.expedition.rewardMultiplier.Value();case qe.Shard:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*s.rank)*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case qe.WalkDistance:return 1800*s.globalInfo.MoveSpeed(0,0,!1,E.Warrior)*Math.pow(1.2,this.level)*(1+.1*t.TotalRank())*Math.max(.55478474,Math.pow(a,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();default:return 0}}NameString(){return $e.ExpeditionGlobalInformationString(this).name}EffectValueString(){return $e.ExpeditionGlobalInformationString(this).passive}RewardString(t,s,a){switch(this.kind){case qe.Brick:return`${h.tDigit(this.RewardAmount(t,s,a))} ${$e.TownMaterialNameString(ot.townMatBricks[s.species])}`;case qe.Log:return`${h.tDigit(this.RewardAmount(t,s,a))} ${$e.TownMaterialNameString(ot.townMatLogs[s.species])}`;case qe.Shard:return`${h.tDigit(this.RewardAmount(t,s,a))} ${$e.TownMaterialNameString(ot.townMatShards[s.species])}`;case qe.Equipment:return`Proficiency Scroll [${h.secondsToDhms(this.RewardAmount(t,s,a),!1)}]`;case qe.PetExp:return`${h.tDigit(this.RewardAmount(t,s,a))}  Pet EXP`;case qe.PetRank:return`${h.tDigit(this.RewardAmount(t,s,a))} ${vt[s.color]} ${O[s.species]}'s  Taming Point`;case qe.WalkDistance:return`${h.tDigit(this.RewardAmount(t,s,a))}  meters Walked Distance`;default:return"not implemented"}}}class ag{constructor(t,s){c(this,"expedition");c(this,"slotId");this.expedition=t,this.slotId=s}get id(){return this.expedition.id}get species(){return this.expedition.expeditionCtrl.data.source.expeditionPetSpecies[this.slotId+5*this.id]}get color(){return this.expedition.expeditionCtrl.data.source.expeditionPetColors[this.slotId+5*this.id]}get isSet(){return this.expedition.expeditionCtrl.data.source.expeditionPetIsSet[this.slotId+5*this.id]}get pet(){return this.expedition.expeditionCtrl.data.monster.GlobalInformation(this.species,this.color).pet}}var nr,yi;class ng{constructor(t,s){c(this,"expeditionCtrl");c(this,"timeHours",[.5,1,2,4,8,16,24,48,72,120,240,480,960,1920,3840]);c(this,"id");c(this,"pets",Array(3));c(this,"tempDistance");Ht(this,nr,void 0);Ht(this,yi,void 0);this.expeditionCtrl=t,this.id=s;for(let a=0;a<this.pets.length;a++)this.pets[a]=new ag(this,a)}get kind(){return this.expeditionCtrl.data.source.expeditionKinds[this.id]}set kind(t){this.expeditionCtrl.data.source.expeditionKinds[this.id]=t}get timeId(){return this.expeditionCtrl.data.source.expeditionTimeId[this.id]}set timeId(t){this.expeditionCtrl.data.source.expeditionTimeId[this.id]=t>=this.timeHours.length?0:t<0?this.timeHours.length-1:t}get globalInfo(){return this.expeditionCtrl.GlobalInfo(this.kind)}Start(){}PetNum(){let t=0;for(let s=0;s<this.pets.length;s++)this.pets[s].isSet&&t++;return t}TotalRank(){let t=0;for(let s=0;s<this.pets.length;s++)this.pets[s].isSet&&(t+=this.pets[s].pet.rank);return t}TotalLevel(){let t=0;for(let s=0;s<this.pets.length;s++)this.pets[s].isSet&&(t+=this.pets[s].pet.level);return t}TimeSpeed(){return(1+this.TotalLevel()*.001)*this.TimeSpeedModifier()}TimeSpeedModifier(){return this.expeditionCtrl.speedMultiplier.Value()*this.globalInfo.SpeedModifierByExpeditionLevel()}RewardPerSec(t){return this.globalInfo.RewardAmount(this,this.pets[t].pet,this.timeHours[this.timeId])/this.RequiredTimesec()}RewardPerSecString(t){return h.tDigit(this.RewardPerSec(t))}MostEffective(){let t=0,s=0;if(b(this,nr)==this.TimeSpeed()&&b(this,yi)!=null)return b(this,yi);for(let u=0;u<this.timeHours.length;u++){let o=0,M=0;o+=this.globalInfo.RewardAmount(this,this.pets[0].pet,this.timeHours[u]),o+=this.globalInfo.RewardAmount(this,this.pets[1].pet,this.timeHours[u]),o+=this.globalInfo.RewardAmount(this,this.pets[2].pet,this.timeHours[u]);let D=this.timeHours[u]*3600;this.TimeSpeed()>0&&(D*=1/this.TimeSpeed()),D=Math.max(this.minTime,D),M=o/D,M>s&&(s=M,t=u)}const a=this.timeHours[t]>=8760?`${this.timeHours[t]/8760}y`:`${this.timeHours[t]}h`;return Vt(this,nr,this.TimeSpeed()),Vt(this,yi,a),a}get timeHour(){return this.timeHours[this.timeId]}set timeHour(t){this.timeId=t}get minTime(){return this.expeditionCtrl.lowerLimitTime.Value()}RequiredTimesec(){let t=this.timeHours[this.timeId]*3600;return this.TimeSpeed()>0&&(t*=1/this.TimeSpeed()),Math.max(this.minTime,t)}GetExpeditionExp(){return this.globalInfo.GetExp(this.PetNum())}}nr=new WeakMap,yi=new WeakMap;class lg{constructor(t){c(this,"data");c(this,"globalInfoList",[]);c(this,"expeditions",Array(20));c(this,"expGainMultiplier");c(this,"petExpGainMultiplier");c(this,"speedMultiplier");c(this,"rewardMultiplier");c(this,"passiveEffectMultiplier");c(this,"walkedDistanceGainMultiplier");c(this,"unlockedExpeditionSlotNum");c(this,"fieldTrainingPassiveEffectMultiplier");c(this,"lowerLimitTime");c(this,"rewardModifierPerHour");this.data=t,this.lowerLimitTime=new x(new l(n.Base,i.Add,()=>900),()=>900,()=>300),this.rewardModifierPerHour=new x(new l(n.Base,i.Add,()=>.85),()=>.95,()=>.85),this.petExpGainMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.expGainMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.rewardMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.passiveEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.walkedDistanceGainMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.unlockedExpeditionSlotNum=new x(new l(n.Base,i.Add,()=>1)),this.unlockedExpeditionSlotNum.numberType=Ze.Normal,this.fieldTrainingPassiveEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.speedMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.globalInfoList.push(new oi(this.data,qe.Brick)),this.globalInfoList.push(new oi(this.data,qe.Log)),this.globalInfoList.push(new oi(this.data,qe.Shard)),this.globalInfoList.push(new oi(this.data,qe.PetRank)),this.globalInfoList.push(new oi(this.data,qe.Equipment)),this.globalInfoList.push(new oi(this.data,qe.PetExp)),this.globalInfoList.push(new oi(this.data,qe.WalkDistance));for(let s=0;s<this.expeditions.length;s++)this.expeditions[s]=new ng(this,s)}TotalLevel(){return this.data.source.expeditionLevels.reduce((t,s)=>t+s,0)}Start(){this.SetMilestone(),this.globalInfoList.forEach(t=>{t.SetEffect()})}TotalExp(){let t=0;for(let s=0;s<this.globalInfoList.length;s++)t+=this.globalInfoList[s].TotalExp();return t}SetMilestone(){const t=this.TotalLevel();t>=5&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=15&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=30&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=125&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=175&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=200&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=225&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=250&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=275&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9)),t>=300&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.1)),t>=325&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=350&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=375&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>90)),t>=400&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=425&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>.25)),t>=450&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=475&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>900)),t>=500&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.2)),t>=525&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>.5)),t>=550&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.5)),t>=575&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e3)),t>=600&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.5)),t>=625&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>.75)),t>=650&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=675&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e4)),t>=700&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.3)),t>=725&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=750&&this.data.monster.petRankCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>50)),t>=775&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e5)),t>=800&&this.data.monster.loyaltyCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>100)),t>=825&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>2)),t>=850&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=875&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e6)),t>=900&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.75)),t>=925&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>3.5)),t>=950&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.75)),t>=975&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e7)),t>=1e3&&this.data.resource.goldCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>9)),t>=1050&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=1100&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>5)),t>=1150&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.4)),t>=1200&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e8)),t>=1250&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=1300&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>7.5)),t>=1350&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1)),t>=1400&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1)),t>=1450&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=1500&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.5)),t>=1550&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e9)),t>=1600&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>12)),t>=1650&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1.25)),t>=1700&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1.25)),t>=1750&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=1800&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.6)),t>=1850&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e10)),t>=1900&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>20)),t>=1950&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1.5)),t>=2e3&&this.data.resource.goldCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>90)),t>=2100&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1.5)),t>=2200&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=2300&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.7)),t>=2400&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e11)),t>=2500&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>1)),t>=2600&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>40)),t>=2700&&this.data.monster.petRankCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>50)),t>=2800&&this.expGainMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1.75)),t>=2900&&this.speedMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>1.75)),t>=3e3&&this.data.resource.goldCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>900)),t>=3100&&this.data.monster.loyaltyCap.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>100)),t>=3200&&this.passiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.25)),t>=3300&&this.rewardMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Mul,()=>.8)),t>=3400&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new l(n.ExpeditionMilestone,i.Add,()=>9e12))}GlobalInfo(t){return this.globalInfoList[t]}}var jc=(e=>(e[e.SuperMining=0]="SuperMining",e[e.SuperSynthesizing=1]="SuperSynthesizing",e[e.SuperGathering=2]="SuperGathering",e[e.SuperTraining=3]="SuperTraining",e[e.SuperTrapping=4]="SuperTrapping",e[e.SuperBanking=5]="SuperBanking",e[e.SuperFinancing=6]="SuperFinancing",e[e.Finding=7]="Finding",e[e.Racing=8]="Racing",e[e.Socializing=9]="Socializing",e[e.Ritualizing=10]="Ritualizing",e[e.Artificing=11]="Artificing",e[e.Haggling=12]="Haggling",e))(jc||{});const da={maxGuildLevel:300,maxGuildLevelCap:500,FameGainPerHeroGrade:e=>e>=153?1010+10*(e-153):5+Math.floor(5*Math.pow(2,e/20)),ExpGainPerHeroLevel:e=>200+e*5,RequiredExp:e=>Math.floor((500*(e+1)+50*Math.pow(e,2)+500*Math.pow(e/5,3)+2e3*Math.pow(e/10,6)+25e3*Math.pow(e/20,9)+3e5*Math.pow(e/30,12))*Math.pow(10,Math.max(0,e-300)/25)),MemberUnlockLevel:e=>{switch(e){case E.Warrior:return 0;case E.Wizard:return 5;case E.Angel:return 10;case E.Thief:return 30;case E.Archer:return 45;case E.Tamer:return 60;default:return 100}},AbilityEffectValue:(e,t)=>{switch(e){case Et.StoneGain:return Math.pow(2,t)-1;case Et.CrystalGain:return Math.pow(2,t)-1;case Et.LeafGain:return Math.pow(2,t)-1;case Et.GuildExpGain:return t*.1;case Et.EquipmentInventory:return 3*t;case Et.EnchantInventory:return t;case Et.PotionInventory:return 2*t;case Et.MysteriousWater:return .1*t;case Et.SkillProficiency:return .1*t;case Et.GlobalSkillSlot:return t;case Et.GoldCap:return .1*t;case Et.GoldGain:return .1*t;case Et.Trapping:return .1*t;case Et.UpgradeCost:return .05*t;case Et.PhysicalAbsorption:return .01*t;case Et.MagicalAbsoption:return .01*t;case Et.ExpGain:return .1*t;case Et.EquipmentProficiency:return .2*t;case Et.MaterialDrop:return t;case Et.NitroCap:return 1e3*t;default:return 0}}};class cg{constructor(t){c(this,"data");c(this,"guildLevelCap");c(this,"timecountSec");c(this,"activableNum");c(this,"level");c(this,"exp");c(this,"expRequirementReduction");c(this,"members");c(this,"abilityPointLeft");c(this,"abilities");c(this,"superAbilityList",[]);c(this,"grade");c(this,"fame");c(this,"superAbilityPointLeft");this.data=t,this.expRequirementReduction=new x(new l(n.Base,i.Add,()=>0),()=>.99,()=>0),this.guildLevelCap=new x(new l(n.Base,i.Add,()=>da.maxGuildLevel)),this.activableNum=new x(new l(n.Base,i.Add,()=>3))}Start(){this.data.nitro.nitroCap.RegisterMultiplier(new l(n.GuildSuperAbility,i.Mul,()=>.05*this.data.source.guildSuperAbilityLevels[jc.Racing]))}Member(t){return this.members[t]}Ability(t){this.abilities[t]}Level(){return this.level}MaxLevelReached(){return globalThis.data}RequiredExp(t=0){return t==0?this.RequiredExp(this.Level()):da.RequiredExp(t)*(1-this.expRequirementReduction.Value())}RequiredFame(t=0){return t==0?this.RequiredFame(this.grade):da.RequiredExp(t)}}const ga={equipMaxDropNum:30,resourceMaxDropNum:30,materialMaxDropNum:30,chestMaxDropNum:10,equipPartSlotId:24,equipmentInventorySlotNum:520,equipmentLoadoutSlotNumPerHero:720,equipInventorySlotId:4840,equipSlotsPerHero:72,allEquipmentSlotId:5272,enchantSlotId:130,potionSlotId:260,equipPotionSlotId:6,allPotionSlotId:296};class ui{constructor(t,s){c(this,"equipment");c(this,"kind");this.equipment=t,this.kind=s}get effectValue(){switch(this.kind){case Se.ReduceRequiredHeroLevel:return this.equipment.data.source.equipment1stForgeValues[this.equipment.id];case Se.ReduceRequiredAbility:return this.equipment.data.source.equipment2ndForgeValues[this.equipment.id];case Se.IncreaseProficiencyGain:return this.equipment.data.source.equipment3rdForgeValues[this.equipment.id];case Se.IncreaseEffect:return this.equipment.data.source.equipment4thForgeValues[this.equipment.id];case Se.PurifyCurseEffect:return this.equipment.data.source.equipment5thForgeValues[this.equipment.id];case Se.IncreaseEffectIncrement:return this.equipment.data.source.equipment6thForgeValues[this.equipment.id];case Se.EqLevel:return this.equipment.data.source.equipment7thForgeValues[this.equipment.id];default:return 0}}SetEffectValue(t){switch(this.kind){case Se.ReduceRequiredHeroLevel:this.equipment.data.source.equipment1stForgeValues[this.equipment.id]=t;break;case Se.ReduceRequiredAbility:this.equipment.data.source.equipment2ndForgeValues[this.equipment.id]=t;break;case Se.IncreaseProficiencyGain:this.equipment.data.source.equipment3rdForgeValues[this.equipment.id]=t;break;case Se.IncreaseEffect:this.equipment.data.source.equipment4thForgeValues[this.equipment.id]=t;break;case Se.PurifyCurseEffect:this.equipment.data.source.equipment5thForgeValues[this.equipment.id]=t;break;case Se.IncreaseEffectIncrement:this.equipment.data.source.equipment6thForgeValues[this.equipment.id]=t;break;case Se.EqLevel:this.equipment.data.source.equipment7thForgeValues[this.equipment.id]=t;break}}set effectValue(t){this.equipment.ForgedSlotNum()>=4&&t>0&&this.effectValue==0||this.SetEffectValue(t)}IsForged(){return this.effectValue>0}EffectValue(){return Math.min(this.effectValue,this.equipment.ForgeEffectMaxValue(this.kind,this.equipment.globalInfo.isArtifact))}stringKind(){switch(this.kind){case Se.EqLevel:case Se.ReduceRequiredHeroLevel:case Se.ReduceRequiredAbility:return"normal";case Se.IncreaseEffect:case Se.IncreaseEffectIncrement:case Se.IncreaseProficiencyGain:case Se.PurifyCurseEffect:return"percent";default:return"normal"}}EffectString(){return $e.ForgeEffectString(this.kind,this.effectValue,this.equipment.ForgeEffectMaxValue(this.kind,this.equipment.globalInfo.isArtifact),this.equipment.globalInfo.isArtifact)}Copy(){return{kind:this.kind,effectValue:this.effectValue}}Paste(t){this.kind=t.kind,this.effectValue=t.effectValue}}class og{constructor(t,s,a){c(this,"equipment");c(this,"createId");c(this,"optionKindDictionary",[]);c(this,"optionKindAfterDictionary",[]);c(this,"optionLotteryDictionary",[]);c(this,"optionLotteryAfterDictionary",[]);c(this,"optionLottery");c(this,"optionId");this.equipment=t,this.createId=s,this.optionId=a}CanEnchant(){return this.kind==r.Nothing}get kind(){switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionEffectKinds[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionEffectKinds[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionEffectKinds[this.createId];case 3:return this.equipment.data.source.equipment4thOptionEffectKinds[this.createId];case 4:return this.equipment.data.source.equipment5thOptionEffectKinds[this.createId];case 5:return this.equipment.data.source.equipment6thOptionEffectKinds[this.createId];case 6:return this.equipment.data.source.equipment7thOptionEffectKinds[this.createId];default:return 0}}SetKind(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionEffectKinds[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionEffectKinds[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionEffectKinds[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionEffectKinds[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionEffectKinds[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionEffectKinds[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionEffectKinds[this.createId]=t;break}}set kind(t){this.equipment.IsEffectRegisteredClear(),this.SetKind(t),this.equipment.Start(),this.level=this.MaxLevel()}get effectValue(){if(this.optionId>=this.equipment.totalOptionNum.Value())return 0;switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionEffectValues[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionEffectValues[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionEffectValues[this.createId];case 3:return this.equipment.data.source.equipment4thOptionEffectValues[this.createId];case 4:return this.equipment.data.source.equipment5thOptionEffectValues[this.createId];case 5:return this.equipment.data.source.equipment6thOptionEffectValues[this.createId];case 6:return this.equipment.data.source.equipment7thOptionEffectValues[this.createId];default:return 0}}SetEffectValue(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionEffectValues[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionEffectValues[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionEffectValues[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionEffectValues[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionEffectValues[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionEffectValues[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionEffectValues[this.createId]=t;break}}set effectValue(t){t=Math.min(t,Ut.EffectCalculation(this.kind,this.level+1)),this.SetEffectValue(t)}get level(){switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionLevels[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionLevels[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionLevels[this.createId];case 3:return this.equipment.data.source.equipment4thOptionLevels[this.createId];case 4:return this.equipment.data.source.equipment5thOptionLevels[this.createId];case 5:return this.equipment.data.source.equipment6thOptionLevels[this.createId];case 6:return this.equipment.data.source.equipment7thOptionLevels[this.createId];default:return 0}}SetLevel(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionLevels[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionLevels[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionLevels[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionLevels[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionLevels[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionLevels[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionLevels[this.createId]=t;break}}set level(t){t=Math.min(t,Ut.MaxLevel(this.kind)),this.SetLevel(t),this.effectValue=this.MaxEffectValue()}get isAfter(){return Ut.IsAfter(this.kind)}MaxLevel(){return Ut.MaxLevel(this.kind)}MaxEffectValue(){return Ut.EffectCalculation(this.kind,this.level+1)}MinEffectValue(){return Ut.EffectCalculation(this.kind,this.level)}RequiredLevelIncrement(){return Ut.RequiredLevelIncrement(this.kind,this.level)}get valueKind(){switch(this.kind){case r.ATKAdder:case r.ATKAfter:case r.AllSkillLevel:case r.HPAfter:case r.HPAdder:case r.DEFAdder:case r.DEFAfter:case r.MATKAdder:case r.MATKAfter:case r.MDEFAdder:case r.MDEFAfter:case r.MPAdder:case r.MPAfter:return"normal";default:return"percent"}}Copy(){return{kind:this.kind,effectValue:this.effectValue,level:this.level}}Paste(t){this.kind=t.kind,this.level=t.level,this.effectValue=t.effectValue,this.equipment.Start()}}function ug(e,t,s,a,u=null){switch(this.activateCondition=()=>u==null||u(),s){case r.HPAdder:return e.stats.BasicStats(t,m.HP).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MPAdder:return e.stats.BasicStats(t,m.MP).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ATKAdder:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MATKAdder:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.DEFAdder:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MDEFAdder:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.SPDAdder:return e.stats.BasicStats(t,m.SPD).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.HPMultiplier:return e.stats.BasicStats(t,m.HP).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.MPMultiplier:return e.stats.BasicStats(t,m.MP).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.ATKMultiplier:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.MATKMultiplier:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.DEFMultiplier:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.MDEFMultiplier:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.ATKPropotion:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new l(n.Equipment,i.Add,()=>e.stats.Level(t)*this.EffectValue(a(),t),this.activateCondition));case r.MATKPropotion:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new l(n.Equipment,i.Add,()=>e.stats.Level(t)*this.EffectValue(a(),t),this.activateCondition));case r.DEFPropotion:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new l(n.Equipment,i.Add,()=>e.stats.Level(t)*this.EffectValue(a(),t),this.activateCondition));case r.MDEFPropotion:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new l(n.Equipment,i.Add,()=>e.stats.Level(t)*this.EffectValue(a(),t),this.activateCondition));case r.FireResistance:return e.stats.ElementResistance(t,C.Fire).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.IceResistance:return e.stats.ElementResistance(t,C.Ice).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThunderResistance:return e.stats.ElementResistance(t,C.Thunder).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.LightResistance:return e.stats.ElementResistance(t,C.Light).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.DarkResistance:return e.stats.ElementResistance(t,C.Dark).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalAbsorption:return e.stats.ElementAbsorption(t,C.Physical).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.FireAbsorption:return e.stats.ElementAbsorption(t,C.Fire).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.IceAbsorption:return e.stats.ElementAbsorption(t,C.Ice).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThunderAbsorption:return e.stats.ElementAbsorption(t,C.Thunder).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.LightAbsorption:return e.stats.ElementAbsorption(t,C.Light).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.DarkAbsorption:return e.stats.ElementAbsorption(t,C.Dark).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.DebuffResistance:return e.stats.HeroStats(t,A.DebuffRes).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.EquipmentDropChance:return e.stats.HeroStats(t,A.EquipmentDropChance).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.SlimeDropChance:return e.monster.speciesMaterialDropChance[0].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MagicSlimeDropChance:return e.monster.speciesMaterialDropChance[1].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.SpiderDropChance:return e.monster.speciesMaterialDropChance[2].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.BatDropChance:return e.monster.speciesMaterialDropChance[3].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.FairyDropChance:return e.monster.speciesMaterialDropChance[4].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.FoxDropChance:return e.monster.speciesMaterialDropChance[5].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.DevilFishDropChance:return e.monster.speciesMaterialDropChance[6].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TreantDropChance:return e.monster.speciesMaterialDropChance[7].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.FlameTigerDropChance:return e.monster.speciesMaterialDropChance[8].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.UnicornDropChance:return e.monster.speciesMaterialDropChance[9].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ColorMaterialDropChance:return e.monster.colorMaterialDropChance.RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalCritical:return e.stats.HeroStats(t,A.PhysCritChance).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MagicalCritical:return e.stats.HeroStats(t,A.MagCritChance).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.EXPGain:return e.stats.HeroStats(t,A.ExpGain).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.SkillProficiency:return e.stats.HeroStats(t,A.SkillProficiencyGain).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.EquipmentProficiency:return e.stats.HeroStats(t,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MoveSpeedMultiplier:return e.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.GoldGain:return e.stats.GoldGain().RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.StoneGain:return e.stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.CrystalGain:return e.stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.LeafGain:return e.stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.WarriorSkillLevel:return e.skill.skillLevelBonus[0].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.WizardSkillLevel:return e.skill.skillLevelBonus[1].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.AngelSkillLevel:return e.skill.skillLevelBonus[2].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThiefSkillLevel:return e.skill.skillLevelBonus[3].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ArcherSkillLevel:return e.skill.skillLevelBonus[4].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TamerSkillLevel:return e.skill.skillLevelBonus[5].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.AllSkillLevel:return[e.skill.skillLevelBonus[0].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition)),e.skill.skillLevelBonus[1].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition)),e.skill.skillLevelBonus[2].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition)),e.skill.skillLevelBonus[3].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition)),e.skill.skillLevelBonus[4].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition)),e.skill.skillLevelBonus[5].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition))];case r.SlimeKnowledge:return e.stats.MonsterDamage(t,O.Slime).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.MagicSlimeKnowledge:return e.stats.MonsterDamage(t,O.MagicSlime).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.SpiderKnowledge:return e.stats.MonsterDamage(t,O.Spider).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.BatKnowledge:return e.stats.MonsterDamage(t,O.Bat).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.FairyKnowledge:return e.stats.MonsterDamage(t,O.Fairy).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.FoxKnowledge:return e.stats.MonsterDamage(t,O.Fox).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.DevilFishKnowledge:return e.stats.MonsterDamage(t,O.DevilFish).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.TreantKnowledge:return e.stats.MonsterDamage(t,O.Treant).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.FlameTigerKnowledge:return e.stats.MonsterDamage(t,O.FlameTiger).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.UnicornKnowledge:return e.stats.MonsterDamage(t,O.Unicorn).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalDamage:return e.stats.ElementDamage(t,C.Physical).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.FireDamage:return e.stats.ElementDamage(t,C.Fire).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.IceDamage:return e.stats.ElementDamage(t,C.Ice).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThunderDamage:return e.stats.ElementDamage(t,C.Thunder).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.LightDamage:return e.stats.ElementDamage(t,C.Light).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.DarkDamage:return e.stats.ElementDamage(t,C.Dark).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.HpRegen:return e.stats.HpRegenerate(t).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MpRegen:return e.stats.MpRegenerate(t).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TamingPoint:return e.stats.HeroStats(t,A.TamingPointGain).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.WarriorSkillRange:return e.skill.skillRangeMultiplier[0].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.WizardSkillRange:return e.skill.skillRangeMultiplier[1].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.AngelSkillRange:return e.skill.skillRangeMultiplier[2].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThiefSkillRange:return e.skill.skillRangeMultiplier[3].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ArcherSkillRange:return e.skill.skillRangeMultiplier[4].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TamerSkillRange:return e.skill.skillRangeMultiplier[5].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TownMatGain:return e.town.townMaterialGainMultiplier[t].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TownMatAreaClearGain:return e.area.townMaterialGainBonusClass[t].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.RebirthPointGain1:return e.rebirth.Rebirth(t,0).rebirthPointGainFactor.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.RebirthPointGain2:return e.rebirth.Rebirth(t,1).rebirthPointGainFactor.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.RebirthPointGain3:return e.rebirth.Rebirth(t,2).rebirthPointGainFactor.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.CriticalDamage:return e.stats.HeroStats(t,A.CriticalDamage).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.BlessingEffect:return e.blessingInfo.effectMultipliers[t].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.MoveSpeedAdder:return e.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.PetEXPGain:return e.stats.Hero(t).petExpGainPerDefeat.RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.LoyaltyPointGain:return e.stats.Hero(t).loyaltyPoingGain.RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.CatalystDoubleCriticalChance:return e.alchemy.catalyst.catalystDoubleCriticalChance.RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.WarriorSkillEffectRange:return e.skill.skillEffectRangeMultiplier[0].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.WizardSkillEffectRange:return e.skill.skillEffectRangeMultiplier[1].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.AngelSkillEffectRange:return e.skill.skillEffectRangeMultiplier[2].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThiefSkillEffectRange:return e.skill.skillEffectRangeMultiplier[3].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.ArcherSkillEffectRange:return e.skill.skillEffectRangeMultiplier[4].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.TamerSkillEffectRange:return e.skill.skillEffectRangeMultiplier[5].RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.HpRegenMultiplier:return e.stats.HpRegenerate(t).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a()*e.stats.BasicStats(t,m.HP).Value(),t),this.activateCondition));case r.MpRegenMultiplier:return e.stats.MpRegenerate(t).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a()*e.stats.BasicStats(t,m.MP).Value(),t),this.activateCondition));case r.ArmoredFury:return e.stats.HeroStats(t,A.ArmoredFury).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.WardedFury:return e.stats.HeroStats(t,A.WardedFury).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.PetPhysicalCriticalChance:return e.stats.HeroStats(t,A.PetPhysCritChance).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.PetMagicalCriticalChance:return e.stats.HeroStats(t,A.PetMagCritChance).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.PetCriticalDamage:return e.stats.HeroStats(t,A.PetCriticalDamage).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.PetDebuffResistance:return e.stats.HeroStats(t,A.PetDebuffResistance).RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.StoneTownResearchPower:return e.town.researchPower[0].RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.CrystalTownResearchPower:return e.town.researchPower[1].RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.LeafTownResearchPower:return e.town.researchPower[2].RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.GuildEXPGain:return e.stats.heroes[t].guildExpGain.RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.EffectValue(a(),t),this.activateCondition));case r.SPDMultiplier:return e.stats.BasicStats(t,m.SPD).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.CriticalDamageMultiplier:return e.stats.HeroStats(t,A.CriticalDamage).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.SkillProficiencyMultiplier:return e.stats.HeroStats(t,A.SkillProficiencyGain).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.EquipmentProficiencyMultiplier:return e.stats.HeroStats(t,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.EXPGainMultiplier:return e.stats.HeroStats(t,A.ExpGain).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.GoldGainMultiplier:return e.stats.GoldGain().RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalDamageMultiplier:return e.stats.ElementDamage(t,C.Physical).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.FireDamageMultiplier:return e.stats.ElementDamage(t,C.Fire).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.IceDamageMultiplier:return e.stats.ElementDamage(t,C.Ice).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThunderDamageMultiplier:return e.stats.ElementDamage(t,C.Thunder).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.LightDamageMultiplier:return e.stats.ElementDamage(t,C.Light).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.DarkDamageMultiplier:return e.stats.ElementDamage(t,C.Dark).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.TamingPointMultiplier:return e.stats.HeroStats(t,A.TamingPointGain).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.PetEXPGainMultiplier:return e.stats.Hero(t).petExpGainPerDefeat.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.LoyaltyPointGainMultiplier:return e.stats.Hero(t).loyaltyPoingGain.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.BlessingEffectMultiplier:return e.blessingInfo.effectMultipliers[t].RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalCriticalMultiplier:return e.stats.HeroStats(t,A.PhysCritChance).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.MagicalCriticalMultiplier:return e.stats.HeroStats(t,A.MagCritChance).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.ChallengeBossKnowledge:return e.stats.MonsterDamage(t,O.ChallengeBoss).RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.HPAfter:return e.stats.BasicStats(t,m.HP).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.MPAfter:return e.stats.BasicStats(t,m.MP).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.ATKAfter:return e.stats.BasicStats(t,m.ATK).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.MATKAfter:return e.stats.BasicStats(t,m.MATK).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.DEFAfter:return e.stats.BasicStats(t,m.DEF).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.MDEFAfter:return e.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.SPDAfter:return e.stats.BasicStats(t,m.SPD).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.MoveSpeedAfter:return e.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalCriticalAfter:return e.stats.HeroStats(t,A.PhysCritChance).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.MagicalCriticalAfter:return e.stats.HeroStats(t,A.MagCritChance).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.CriticalDamageAfter:return e.stats.HeroStats(t,A.CriticalDamage).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.DebuffResistanceAfter:return e.stats.HeroStats(t,A.DebuffRes).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.PhysicalDamageAfter:return e.stats.ElementDamage(t,C.Physical).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.FireDamageAfter:return e.stats.ElementDamage(t,C.Fire).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.IceDamageAfter:return e.stats.ElementDamage(t,C.Ice).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThunderDamageAfter:return e.stats.ElementDamage(t,C.Thunder).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.LightDamageAfter:return e.stats.ElementDamage(t,C.Light).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.DarkDamageAfter:return e.stats.ElementDamage(t,C.Dark).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.FireResistanceAfter:return e.stats.ElementResistance(t,C.Fire).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.IceResistanceAfter:return e.stats.ElementResistance(t,C.Ice).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.ThunderResistanceAfter:return e.stats.ElementResistance(t,C.Thunder).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.LightResistanceAfter:return e.stats.ElementResistance(t,C.Light).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.DarkResistanceAfter:return e.stats.ElementResistance(t,C.Dark).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.SlimeKnowledgeAfter:return e.stats.MonsterDamage(t,O.Slime).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.MagicSlimeKnowledgeAfter:return e.stats.MonsterDamage(t,O.MagicSlime).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.SpiderKnowledgeAfter:return e.stats.MonsterDamage(t,O.Spider).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.BatKnowledgeAfter:return e.stats.MonsterDamage(t,O.Bat).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.FairyKnowledgeAfter:return e.stats.MonsterDamage(t,O.Fairy).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.FoxKnowledgeAfter:return e.stats.MonsterDamage(t,O.Fox).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.DevilFishKnowledgeAfter:return e.stats.MonsterDamage(t,O.DevilFish).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.TreantKnowledgeAfter:return e.stats.MonsterDamage(t,O.Treant).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.FlameTigerKnowledgeAfter:return e.stats.MonsterDamage(t,O.FlameTiger).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.UnicornKnowledgeAfter:return e.stats.MonsterDamage(t,O.Unicorn).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.ChallengeBossKnowledgeAfter:return e.stats.MonsterDamage(t,O.ChallengeBoss).RegisterMultiplier(new l(n.Equipment,i.After,()=>this.EffectValue(a(),t),this.activateCondition));case r.SDDamageMultiplier:return e.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.SDDamageCutMultiplier:return e.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.FameGain:return e.superStats.Hero(t).fameGain.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.DungeonCoinGain:return e.sdg.dungeonCoinGain.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition));case r.ExtraAfterDamage:return e.stats.Hero(t).extraAfterDamage.RegisterMultiplier(new l(n.Equipment,i.Mul,()=>this.EffectValue(a(),t),this.activateCondition))}}function hg(e,t,s){const a=e.data;let u=[];const o=e.AttackedInfo(),M=wg(e.species),D=mg(o.element),k=fg(e.data.source.isActiveSdModifiers[950+dt.SwapATKWithDEF]&&e.data.source.isSuperDungeon),y=pg(),v=dg(t.heroKind),I=gg();a.source.isBlessing&&(u=[...u,...y]),u=[...u,...M,...D,...k,...v,...I];let q=0,z=0,ne=0,oe="";oe+=`Searching MAX DPS enchant for ${$e.EquipmentName(t.kind)} in enchantements slot ${s+1}
`;for(let pe=0;pe<u.length;pe++){const fe=u[pe];Ut.RequiredLevelIncrement(fe,1)>t.data.source.enemyLevel||Ut.IsAfter(fe)&&!t.globalInfo.isArtifact||(t.optionEffects[s].kind=fe,q=e.AttackedInfo().dps,z<q&&(z=q,ne=fe),oe+=`dps: ${h.tDigit(q,5)}: ${$e.EquipmentEffectName(fe)}
`)}t.optionEffects[s].kind=ne,oe+=`----------------------------------------
`,oe+=`Best found:
`,oe+=`dps: ${h.tDigit(z,5)}: ${$e.EquipmentEffectName(ne)}
`,document.dispatchEvent(new CustomEvent("log",{detail:{type:"msg",data:oe}}))}function fg(e){let t=[r.SPDAdder,r.SPDMultiplier,r.SPDAfter];return e?t=[...t,r.DEFAdder,r.MDEFAdder,r.DEFMultiplier,r.MDEFMultiplier,r.DEFPropotion,r.MDEFPropotion,r.DEFAfter,r.MDEFAfter]:t=[...t,r.ATKAdder,r.MATKAdder,r.ATKMultiplier,r.MATKMultiplier,r.ATKPropotion,r.MATKPropotion,r.ATKAfter,r.MATKAfter],t}function pg(){return[r.BlessingEffect,r.BlessingEffectMultiplier]}function dg(e){switch(e){case E.Warrior:return[r.WarriorSkillLevel];case E.Wizard:return[r.WizardSkillLevel];case E.Angel:return[r.AngelSkillLevel];case E.Thief:return[r.ThiefSkillLevel];case E.Archer:return[r.ArcherSkillLevel];case E.Tamer:return[r.TamerSkillLevel]}}function gg(){return[r.ArmoredFury,r.AllSkillLevel,r.CriticalDamage,r.WardedFury,r.CriticalDamageMultiplier,r.CriticalDamageAfter,r.ExtraAfterDamage]}function mg(e){switch(e){case C.Physical:return[r.PhysicalDamage,r.PhysicalDamageMultiplier,r.PhysicalDamageAfter];case C.Fire:return[r.FireDamage,r.FireDamageMultiplier,r.FireDamageAfter];case C.Thunder:return[r.ThunderDamage,r.ThunderDamageMultiplier,r.ThunderDamageAfter];case C.Ice:return[r.IceDamage,r.IceDamageMultiplier,r.IceDamageAfter];case C.Light:return[r.LightDamage,r.LightDamageMultiplier,r.LightDamageAfter];case C.Dark:return[r.DarkDamage,r.DarkDamageMultiplier,r.DarkDamageAfter]}}function wg(e){switch(e){case O.Slime:return[r.SlimeKnowledge,r.SlimeKnowledgeAfter];case O.MagicSlime:return[r.MagicSlimeKnowledge,r.MagicSlimeKnowledgeAfter];case O.Spider:return[r.SpiderKnowledge,r.SpiderKnowledgeAfter];case O.Bat:return[r.BatKnowledge,r.BatKnowledgeAfter];case O.Fairy:return[r.FairyKnowledge,r.FairyKnowledgeAfter];case O.Fox:return[r.FoxKnowledge,r.FoxKnowledgeAfter];case O.DevilFish:return[r.DevilFishKnowledge,r.DevilFishKnowledgeAfter];case O.Treant:return[r.TreantKnowledge,r.TreantKnowledgeAfter];case O.FlameTiger:return[r.FlameTigerKnowledge,r.FlameTigerKnowledgeAfter];case O.Unicorn:return[r.UnicornKnowledge,r.UnicornKnowledgeAfter];case O.ChallengeBoss:return[r.ChallengeBossKnowledge,r.ChallengeBossKnowledgeAfter]}}class Mg{constructor(t,s){c(this,"data");c(this,"isEffectRegistered",[]);c(this,"isMasteryEffectRegistered");c(this,"isOptionEffectRegistered",Array(H.HeroKind));c(this,"isReachedMax");c(this,"id");c(this,"slotId");c(this,"totalOptionNum");c(this,"optionEffects",Array(Ut.maxOptionEffectNum));c(this,"forgeEffects",Array(Ut.maxForgeEffectNum));c(this,"requiredLevel");c(this,"requiredGrade");c(this,"requiredLevelWithoutForge");c(this,"requiredGradeWithoutForge");c(this,"requiredAbilityPoint");c(this,"info");c(this,"activateCondition");c(this,"optionNum",4);c(this,"SetEffect",ug);this.data=t,this.id=this.data.source.equipmentId[s],this.slotId=s;for(let a=0;a<this.optionEffects.length;a++)this.optionEffects[a]=new og(this,this.id,a);this.totalOptionNum=new x(new l(n.Base,i.Add,()=>this.optionNum)),this.totalOptionNum.RegisterMultiplier(new l(n.Equipment,i.Add,()=>this.globalInfo.levelMaxEffects[3].EffectValue(0),()=>this.globalInfo.levels[3].isMaxed)),this.forgeEffects[0]=new ui(this,Se.ReduceRequiredHeroLevel),this.forgeEffects[1]=new ui(this,Se.ReduceRequiredAbility),this.forgeEffects[2]=new ui(this,Se.IncreaseProficiencyGain),this.forgeEffects[3]=new ui(this,Se.IncreaseEffect),this.forgeEffects[4]=new ui(this,Se.PurifyCurseEffect),this.forgeEffects[5]=new ui(this,Se.IncreaseEffectIncrement),this.forgeEffects[6]=new ui(this,Se.EqLevel)}get globalInfo(){return this.data.equipment.globalInformations[this.kind]}get level(){return this.globalInfo.TotalLevel()}get kind(){return this.data.source.equipmentKinds[this.id]}get setKind(){return this.globalInfo.setKind}set kind(t){(Ut.Part(t)==this.slotPart||t==g.Nothing)&&(this.data.source.equipmentKinds[this.id]=t),this.Start()}get heroKind(){const t=this.slotId;if(t>=520&&t<1240)return E.Warrior;if(t>=1240&&t<1960)return E.Wizard;if(t>=1960&&t<2680)return E.Angel;if(t>=2680&&t<3400)return E.Thief;if(t>=3400&&t<4120)return E.Archer;if(t>=4120&&t<4840)return E.Tamer}get loadout(){return Math.floor((this.slotId-(520+this.heroKind*720))/72)}get loadoutSlot(){return this.slotId-(520+this.heroKind*720+this.loadout*72)}get slotPart(){return this.loadoutSlot<24?T.Weapon:this.loadoutSlot>=24&&this.loadoutSlot<48?T.Armor:T.Jewelry}Start(){this.CalculateRequiredLevel(),this.SetAgainAllEffect()}IsSkillLevelEnchant(t){return t==r.WarriorSkillLevel||t==r.WizardSkillLevel||t==r.AngelSkillLevel||t==r.ThiefSkillLevel||t==r.ArcherSkillLevel||t==r.TamerSkillLevel||t==r.AllSkillLevel}Forge(t,s,a){this.CanForge(t,a)}CanForge(t,s){return!s&&this.globalInfo.isArtifact||s&&!this.globalInfo.isArtifact?!1:this.forgeEffects[t].IsForged()?this.ForgeEffectMaxValueLeft(t,s)>0:this.AvailableForgeSlotNum()>0}ForgeEffectMaxValueLeft(t,s){return this.ForgeEffectMaxValue(t,s)-this.forgeEffects[t].effectValue}ForgeEffectValueLeft(t,s,a){return this.CanForge(t,a)?Math.max(0,s-this.ForgeEffectMaxValueLeft(t,a)):0}ForgeEffectMaxValue(t,s){let a=Ut.MaxEffectValue(t);switch(t){case Se.ReduceRequiredHeroLevel:a=s?this.RequiredLevel(!0,!0):this.RequiredLevel(!0,!1);break;case Se.ReduceRequiredAbility:a=0;for(let u=1;u<this.globalInfo.requiredAbilities.length;u++)s?this.globalInfo.requiredAbilities[u].isSuperAbility&&(a=Math.max(a,this.globalInfo.requiredAbilities[u].requiredValue)):this.globalInfo.requiredAbilities[u].isSuperAbility||(a=Math.max(a,this.globalInfo.requiredAbilities[u].requiredValue));break;case Se.IncreaseEffect:a+=this.data.equipment.forgeEffectCapAdderEQEffect.Value();break;case Se.IncreaseEffectIncrement:a+=this.data.equipment.forgeEffectCapAdderEffectIncrement.Value();break;case Se.EqLevel:a+=this.data.equipment.forgeEffectCapAdderEQLevel.Value();break}return a}ForgedSlotNum(){let t=0;for(let s=0;s<this.forgeEffects.length;s++)this.forgeEffects[s].IsForged()&&t++;return t}AvailableForgeSlotNum(){return this.globalInfo.ForgeSlotNum()-this.ForgedSlotNum()}IsEffectRegisteredClear(){this.isEffectRegistered.forEach(t=>{t()}),this.isEffectRegistered=[]}SetAgainAllEffect(){this.IsEffectRegisteredClear(),this.IsEquipped()&&(this.SetEffectBase(this.heroKind),this.SetMasteryEffect(this.heroKind))}IsEquipped(){if(this.slotId<520||this.slotId>=4840||this.loadout!=this.data.source.equipmentLoadoutIds[this.heroKind]||!this.data.source.isActiveBattle[this.heroKind]||this.kind==0)return!1;if(this.loadoutSlot<24)return this.data.inventory.equipWeaponUnlockedNum[this.heroKind].Value()>this.loadoutSlot;if(this.loadoutSlot>=24&&this.loadoutSlot<48)return this.data.inventory.equipArmorUnlockedNum[this.heroKind].Value()>this.loadoutSlot-24;if(this.loadoutSlot>=48)return this.data.inventory.equipJewelryUnlockedNum[this.heroKind].Value()>this.loadoutSlot-48}isDisabled(){if(this.slotId<520||this.slotId>=4840)return!0;if(this.data.source.isSuperDungeon&&this.heroKind==this.data.source.currentHero)switch(this.slotPart){case T.Weapon:return this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.Value()<=this.loadoutSlot;case T.Armor:return this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.Value()<=this.loadoutSlot-24;case T.Jewelry:return this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.Value()<=this.loadoutSlot-48;default:return!0}else switch(this.slotPart){case T.Weapon:return this.data.inventory.equipWeaponUnlockedNum[this.heroKind].Value()<=this.loadoutSlot;case T.Armor:return this.data.inventory.equipArmorUnlockedNum[this.heroKind].Value()<=this.loadoutSlot-24;case T.Jewelry:return this.data.inventory.equipJewelryUnlockedNum[this.heroKind].Value()<=this.loadoutSlot-48;default:return!0}}SetMasteryEffect(t){if(this.kind!=g.Nothing)for(let s=0;s<this.globalInfo.levelMaxEffects.length;s++){if(this.globalInfo.levelMaxEffects[s].kind==0)continue;const a=this.SetEffect(this.data,t,this.globalInfo.levelMaxEffects[s].kind,()=>this.globalInfo.levelMaxEffects[s].EffectValue(0),()=>this.globalInfo.levels[s].isMaxed);Array.isArray(a)?this.isEffectRegistered.push(...a):this.isEffectRegistered.push(a)}}SetEffectBase(t){if(this.kind!=g.Nothing){for(let s=0;s<this.globalInfo.effects.length;s++){const a=this.SetEffect(this.data,t,this.globalInfo.effects[s].kind,()=>this.OriginalEffectValue(s),()=>!this.isDisabled());Array.isArray(a)?this.isEffectRegistered.push(...a):this.isEffectRegistered.push(a)}for(let s=0;s<this.optionEffects.length;s++)if(this.optionEffects[s].kind!=0){const a=this.SetEffect(this.data,t,this.optionEffects[s].kind,()=>this.optionEffects[s].effectValue,()=>!this.isDisabled());Array.isArray(a)?this.isEffectRegistered.push(...a):this.isEffectRegistered.push(a)}}}OriginalEffectValue(t){return this.globalInfo.effects[t].EffectValue(this.Level(),1+this.forgeEffects[5].EffectValue())}OriginalEffectIncrementPerLevel(t){return this.globalInfo.effects[t].baseValue()*(1+this.forgeEffects[5].EffectValue())}Level(){return this.globalInfo.TotalLevel()+this.forgeEffects[6].EffectValue()}HasEnchantedEffect(){if(this.optionNum>0)return!0;if(this.totalOptionNum.Value()<1)return!1;for(let t=0;t<this.optionEffects.length;t++)if(this.optionEffects[t].kind!=r.Nothing)return!0;return!1}RequiredLevel(t,s){return s?t?this.requiredGradeWithoutForge:this.requiredGrade:t?this.requiredLevelWithoutForge:this.requiredLevel}get isSetItem(){return this.globalInfo.setKind!=0&&this.globalInfo.setKind!=null}EffectMultiplierFromSetItem(t){if(!this.isSetItem||this.isSetItem==null)return 1;switch(this.data.inventory.SetItemEquippedNum(this.globalInfo.setKind,t)){case 2:return 1.05;case 3:return 1.1;case 4:return 1.15;case 5:return 1.2;case 6:return 1.25;case 7:return 1.35;case 8:return 1.5;default:return 1}}EffectValue(t,s){let a=t*this.EffectMultiplierFromSetItem(s)*(1+this.forgeEffects[3].EffectValue());return this.globalInfo.isArtifact?this.data.equipment.effectMultiplierModifierForArtifact.Value()>0&&(a*=this.data.equipment.ArtifactEffectMultiplier()):a*=this.data.equipment.EffectMultiplier(),a<0&&(a*=Math.max(0,1-this.forgeEffects[4].EffectValue())),a}CalculateRequiredLevel(){let t=0;this.globalInfo.isArtifact&&(t=this.globalInfo.requiredAbilities[0].requiredValue);for(let a=0;a<this.optionEffects.length;a++)this.optionEffects[a].isAfter&&(t+=this.optionEffects[a].RequiredLevelIncrement());this.requiredGradeWithoutForge=Math.max(0,t),this.globalInfo.isArtifact&&(t-=this.forgeEffects[0].EffectValue()),this.requiredGrade=Math.max(0,t);let s=0;this.globalInfo.isArtifact||(s=this.globalInfo.requiredAbilities[0].requiredValue);for(let a=0;a<this.optionEffects.length;a++)this.optionEffects[a].isAfter||(s+=this.optionEffects[a].RequiredLevelIncrement());this.requiredLevelWithoutForge=Math.max(0,s),this.globalInfo.isArtifact||(s-=this.forgeEffects[0].EffectValue()),this.requiredLevel=Math.max(0,s)}Copy(t){switch(t){case Ss.OptionEffect:return this.optionEffects.map(s=>s.Copy());case Ss.ForgeEffects:return this.forgeEffects.map(s=>s.Copy());case Ss.Equipment:return{kind:this.kind,optionEffects:this.optionEffects.map(s=>s.Copy()),forgeEffects:this.forgeEffects.map(s=>s.Copy())};default:return null}}Paste(t,s){switch(t){case Ss.Equipment:this.optionEffects.map((a,u)=>a.Paste(s.optionEffects[u])),this.kind=s.kind,this.forgeEffects.map((a,u)=>a.Paste(s.forgeEffects[u])),this.data.inventory.UpdateSetItemEquippedNumHero(this.heroKind);break;case Ss.OptionEffect:this.optionEffects.map((a,u)=>a.Paste(s[u]));break;case Ss.ForgeEffects:this.forgeEffects.map((a,u)=>a.Paste(s[u]));break}}SlotString(){if(this.slotId<520)return`Inventory tab ${Math.floor(this.slotId/52)+1} position ${this.slotId}`;const t=this.slotPart==T.Weapon?this.loadoutSlot:this.slotPart==T.Armor?this.loadoutSlot-24:this.loadoutSlot-48;return`${E[this.heroKind]} Loadout ${this.loadout+1} - ${T[this.slotPart]} position ${t+1}`}FindMaxEnchantDPS(t){hg(this.data.battle.Enemy(),this,t)}}class Sg{constructor(t,s){c(this,"data");c(this,"slotId");c(this,"effectRegister",[]);this.data=t,this.slotId=s}get id(){return this.data.source.potionId[this.slotId]}get kind(){return this.data.source.potionKinds[this.id]}set kind(t){this.data.source.potionKinds[this.id]=t,this.Start()}get slot(){return this.slotId<260?0:(this.slotId-260-this.heroKind*6)%6}get stack(){return this.data.source.potionStackNums[this.id]}set stack(t){this.data.source.potionStackNums[this.id]=Math.min(30,t)}get level(){return this.data.potion.GlobalInfo(this.kind).level}get type(){return this.data.potion.GlobalInfo(this.kind).type}get heroKind(){if(this.slotId>=260&&this.slotId<266)return E.Warrior;if(this.slotId>=266&&this.slotId<272)return E.Wizard;if(this.slotId>=272&&this.slotId<278)return E.Angel;if(this.slotId>=278&&this.slotId<284)return E.Thief;if(this.slotId>=284&&this.slotId<290)return E.Archer;if(this.slotId>=290&&this.slotId<296)return E.Tamer}get effectValue(){return this.data.potion.GlobalInfo(this.kind).type==be.Talisman?this.data.potion.GlobalInfo(this.kind).effectValue*this.stack:this.data.potion.GlobalInfo(this.kind).effectValue}UnregisterEffects(){this.effectRegister.forEach(t=>{t()}),this.effectRegister=[]}Start(){if(this.UnregisterEffects(),!(this.slotId<260||this.kind==0)&&this.data.potion.GlobalInfo(this.kind).SetEffect!=null&&!this.isDisabled()){const t=this.data.potion.GlobalInfo(this.kind).SetEffect(this.heroKind,()=>this.stack);Array.isArray(t)?this.effectRegister.push(...t):this.effectRegister.push(t)}}isDisabled(){return this.slotId<260||!this.data.source.isActiveBattle[this.heroKind]?!0:this.data.source.isSuperDungeon&&this.heroKind==this.data.source.currentHero?this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.Value()<=this.slot:this.data.inventory.equipPotionUnlockedNum[this.heroKind].Value()<=this.slot}}var Ct;class Ag{constructor(t){Ht(this,Ct,void 0);c(this,"setItemEquippedNums",Array(H.EquipmentSetKind));c(this,"equipmentSlots",Array(ga.allEquipmentSlotId));c(this,"potionSlots",Array(ga.allPotionSlotId));c(this,"equipInventoryUnlockedNum");c(this,"equipWeaponUnlockedNum",Array(H.HeroKind));c(this,"equipArmorUnlockedNum",Array(H.HeroKind));c(this,"equipJewelryUnlockedNum",Array(H.HeroKind));c(this,"enchantUnlockedNum");c(this,"potionUnlockedNum");c(this,"equipPotionUnlockedNum",Array(H.HeroKind));Vt(this,Ct,t);for(let s=0;s<H.EquipmentSetKind;s++)this.setItemEquippedNums[s]=new Array(H.HeroKind).fill(0);this.SetUnlockedNum()}SetUnlockedNum(){this.equipInventoryUnlockedNum=new x(new l(n.Base,i.Add,()=>26)),this.equipInventoryUnlockedNum.maxValue=()=>ga.equipmentInventorySlotNum,this.enchantUnlockedNum=new x(new l(n.Base,i.Add,()=>6)),this.potionUnlockedNum=new x(new l(n.Base,i.Add,()=>6));for(let t=0;t<H.HeroKind;t++)this.equipWeaponUnlockedNum[t]=new x(new l(n.Base,i.Add,()=>1)),this.equipArmorUnlockedNum[t]=new x(new l(n.Base,i.Add,()=>1)),this.equipJewelryUnlockedNum[t]=new x(new l(n.Base,i.Add,()=>1)),this.equipPotionUnlockedNum[t]=new x(new l(n.Base,i.Add,()=>1))}Start(){for(let t=0;t<this.equipmentSlots.length;t++)this.equipmentSlots[t]=new Mg(b(this,Ct),t),this.equipmentSlots[t].Start();for(let t=0;t<this.potionSlots.length;t++)this.potionSlots[t]=new Sg(b(this,Ct),t),this.potionSlots[t].Start();for(let t=0;t<H.HeroKind;t++)this.UpdateSetItemEquippedNumHero(t)}Update(){this.equipmentSlots.forEach((t,s)=>{t.IsEquipped()?t.Start():t.IsEffectRegisteredClear()});for(let t=260;t<this.potionSlots.length;t++)this.potionSlots[t].Start();for(let t=0;t<H.HeroKind;t++)this.UpdateSetItemEquippedNumHero(t)}getHeroBySlotId(t){if(t>=520&&t<1240)return E.Warrior;if(t>=1240&&t<1960)return E.Wizard;if(t>=1960&&t<2680)return E.Angel;if(t>=2680&&t<3400)return E.Thief;if(t>=3400&&t<4120)return E.Archer;if(t>=4120&&t<4840)return E.Tamer}getPartBySlotId(t){const s=this.getHeroBySlotId(t),a=t-this.getOffset(s);return a<24?T.Weapon:a>=24&&a<48?T.Armor:T.Jewelry}getSetPart(t=E.Warrior,s=T.Weapon){let a=this.getOffset(t)+this.getPartOffset(s);return this.equipmentSlots.slice(a,a+24)}getPotionOffset(t){switch(t){case E.Warrior:return 260;case E.Wizard:return 266;case E.Angel:return 272;case E.Thief:return 278;case E.Archer:return 284;case E.Tamer:return 290;default:return 260}}getPotion(t){const s=this.getPotionOffset(t);return this.potionSlots.slice(s,s+6)}getLoadout(t){return{Weapon:this.getSetPart(t,T.Weapon),Armor:this.getSetPart(t,T.Armor),Jewelry:this.getSetPart(t,T.Jewelry),Utility:this.getPotion(t)}}getPartOffset(t){switch(t){case T.Weapon:return 0;case T.Armor:return 24;case T.Jewelry:return 48;default:return 0}}SetItemEquippedNum(t,s){return this.setItemEquippedNums[t][s]}UpdateSetItemEquippedNum(t,s){let a=0,u=this.getOffset(s),o=u+72;for(let M=0;M<b(this,Ct).equipment.setItemArray[t].length;M++){const D=b(this,Ct).equipment.setItemArray[t][M];for(let k=u;k<o;k++)if(this.equipmentSlots[k].globalInfo.kind==D&&this.equipmentSlots[k].IsEquipped()&&!this.equipmentSlots[k].isDisabled()){a++;break}}this.setItemEquippedNums[t][s]=a}UpdateSetItemEquippedNumHero(t){for(let s=0;s<H.EquipmentSetKind;s++)this.UpdateSetItemEquippedNum(s,t)}getOffset(t){switch(t){case E.Warrior:return 520+b(this,Ct).source.equipmentLoadoutIds[t]*72;case E.Wizard:return 1240+b(this,Ct).source.equipmentLoadoutIds[t]*72;case E.Angel:return 1960+b(this,Ct).source.equipmentLoadoutIds[t]*72;case E.Thief:return 2680+b(this,Ct).source.equipmentLoadoutIds[t]*72;case E.Archer:return 3400+b(this,Ct).source.equipmentLoadoutIds[t]*72;case E.Tamer:return 4120+b(this,Ct).source.equipmentLoadoutIds[t]*72;default:return 0}}CopyCurrentLoadout(){let t=[];const s=520+b(this,Ct).source.equipmentLoadoutIds[b(this,Ct).source.currentHero]*72+b(this,Ct).source.currentHero*720;for(let a=s;a<s+72;a++)t.push(b(this,Ct).inventory.equipmentSlots[a].Copy(Ss.Equipment));return t}PasteLoadout(t){let s=0;const a=520+b(this,Ct).source.equipmentLoadoutIds[b(this,Ct).source.currentHero]*72+b(this,Ct).source.currentHero*720;for(let u=a;u<a+72;u++){const o=this.equipmentSlots[u];b(this,Ct).source.equipmentKinds[o.id]=t[s].kind,o.optionEffects.forEach((M,D)=>{M.SetKind(t[s].optionEffects[D].kind),M.SetEffectValue(t[s].optionEffects[D].effectValue),M.SetLevel(t[s].optionEffects[D].level)}),o.forgeEffects.forEach((M,D)=>{M.SetEffectValue(t[s].forgeEffects[D].effectValue)}),s++}this.Update()}}Ct=new WeakMap;class bg{constructor(t){c(this,"data");this.data=t}Start(){this.clearNum>5&&this.data.stats.SetEffectStats(A.ExpGain,new l(n.MissionMilestone,i.Add,()=>.2)),this.clearNum>10&&this.data.stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.MissionMilestone,i.Add,()=>.1)),this.clearNum>15&&this.data.town.SetEffectTownMatGain(new l(n.MissionMilestone,i.Add,()=>.5)),this.clearNum>20&&this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>10)),this.clearNum>25&&this.data.stats.SetEffectStats(A.ExpGain,new l(n.MissionMilestone,i.Add,()=>.3)),this.clearNum>30&&this.data.resource.goldCap.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.5)),this.clearNum>35&&this.data.stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.MissionMilestone,i.Add,()=>.2)),this.clearNum>40&&this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.5)),this.clearNum>45&&this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>10)),this.clearNum>50&&this.data.town.SetEffectTownMatGain(new l(n.MissionMilestone,i.Add,()=>.5)),this.clearNum>60&&this.data.stats.SetEffectResourceGain(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>70&&this.data.stats.GoldGain().RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.5)),this.clearNum>80&&this.data.stats.SetEffectStats(A.ExpGain,new l(n.MissionMilestone,i.Add,()=>.5)),this.clearNum>90&&this.data.monster.colorMaterialDropChance.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.5)),this.clearNum>120&&this.data.expedition.expGainMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>140&&this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>160&&this.data.expedition.rewardMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.25)),this.clearNum>180&&this.data.stats.SetEffectResourceGain(new l(n.MissionMilestone,i.Mul,()=>10)),this.clearNum>275&&this.data.stats.SetEffectStats(A.SkillProficiencyGain,new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>300&&this.data.resource.goldCap.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>325&&this.data.stats.GoldGain().RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>350&&this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.25)),this.clearNum>400&&this.data.blessingInfo.SetEffectMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>475&&this.data.stats.SetEffectResourceGain(new l(n.MissionMilestone,i.Mul,()=>500)),this.clearNum>550&&this.data.town.SetEffectLevelBonusForAllBuilding(new l(n.MissionMilestone,i.Add,()=>10)),this.clearNum>650&&this.data.resource.goldCap.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>5)),this.clearNum>750&&this.data.monster.loyaltyCap.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>100)),this.clearNum>900&&this.data.monster.petRankCap.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>50)),this.clearNum>1300&&this.data.stats.GoldGain().RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>2.5)),this.clearNum>1350&&this.data.town.SetEffectLevelBonusForAllBuilding(new l(n.MissionMilestone,i.Add,()=>10)),this.clearNum>1450&&this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>.25)),this.clearNum>1550&&this.data.resource.goldCap.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>7.5)),this.clearNum>1600&&this.data.alchemy.catalyst.essenceProductionDiminishing.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>-.3)),this.clearNum>1650&&this.data.expedition.expGainMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>1700&&this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Mul,()=>1)),this.clearNum>1800&&this.data.resource.slimeCoinInterest.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>.025)),this.clearNum>1900&&this.data.area.swarmScoreMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>.2)),this.clearNum>2100&&this.data.monster.loyaltyCap.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>100)),this.clearNum>2300&&this.data.town.SetEffectLevelBonusForAllBuilding(new l(n.MissionMilestone,i.Add,()=>10)),this.clearNum>2600&&this.data.alchemy.catalyst.essenceProductionDiminishing.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>-.2)),this.clearNum>2700&&this.data.resource.slimeCoinInterest.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>.05)),this.clearNum>2900&&this.data.area.swarmScoreMultiplier.RegisterMultiplier(new l(n.MissionMilestone,i.Add,()=>.3))}get clearNum(){return this.data.area.TotalClearedMissionNum()}}var ye;class Rg{constructor(t,s,a,u){Ht(this,ye,void 0);c(this,"globalInfo");c(this,"species");c(this,"color");c(this,"challengeMonsterKind",0);c(this,"unlockActiveEffectImprovement");c(this,"saveId");this.globalInfo=s,Vt(this,ye,t),this.species=a,this.color=u,this.species==O.ChallengeBoss&&(this.challengeMonsterKind=u),this.saveId=this.color+10*this.species+this.challengeMonsterKind}get level(){return b(this,ye).source.monsterPetLevels[this.saveId]}set level(t){b(this,ye).source.monsterPetLevels[this.saveId]=t}get rank(){return b(this,ye).source.monsterPetRanks[this.saveId]}set rank(t){b(this,ye).source.monsterPetRanks[this.saveId]=t}get loyalty(){return b(this,ye).source.monsterPetLoyalty[this.saveId]}set loyalty(t){b(this,ye).source.monsterPetLoyalty[this.saveId]=t}MonsterPet(t,s){this.globalInfo=t,this.species=O.ChallengeBoss,this.challengeMonsterKind=s}Start(){this.SetEffect()}IsUnlocked(){return this.rank>0}Level(){return this.level}MaxLevel(){return this.rank*10}MaxRank(){return b(this,ye).monster.petRankCap.Value()}get activeEffectKind(){return 0}get passiveEffectKind(){return this.species==O.ChallengeBoss||this.species==O.Mimic?0:ot.petPassiveEffectKinds[this.species][this.color]}SetEffect(){switch(this.passiveEffectKind){case F.ResourceGain:b(this,ye).stats.SetEffectResourceGain(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.PotionEffect:b(this,ye).potion.effectMultiplier.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.TamingPointGain:b(this,ye).stats.SetEffectStats(A.TamingPointGain,new l(n.Pet,i.Add,()=>this.effectValue));break;case F.GoldCap:b(this,ye).resource.goldCap.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.GoldGain:b(this,ye).stats.GoldGain().RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.ExpGain:b(this,ye).stats.SetEffectStats(A.ExpGain,new l(n.Pet,i.Add,()=>this.effectValue));break;case F.DoubleMaterialChance:break;case F.GoldGainOnDisassemblePotion:b(this,ye).potion.disassembleGoldGainMultiplier.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.DisassembleTownMatGain:b(this,ye).equipment.disassembleMultiplier.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.TownMatGainFromDungeonReward:b(this,ye).area.townMaterialDungeonRewardMultiplier.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.OilOfSlimeDropChance:b(this,ye).monster.speciesMaterialDropChance[0].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.EnchantedClothDropChance:b(this,ye).monster.speciesMaterialDropChance[1].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.SpiderSilkDropChance:b(this,ye).monster.speciesMaterialDropChance[2].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.BatWingDropChance:b(this,ye).monster.speciesMaterialDropChance[3].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.FairyDustDropChance:b(this,ye).monster.speciesMaterialDropChance[4].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.FoxTailDropChance:b(this,ye).monster.speciesMaterialDropChance[5].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.FishScalesDropChance:b(this,ye).monster.speciesMaterialDropChance[6].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.CarvedBranchDropChance:b(this,ye).monster.speciesMaterialDropChance[7].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.ThickFurDropChance:b(this,ye).monster.speciesMaterialDropChance[8].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.UnicornHornDropChance:b(this,ye).monster.speciesMaterialDropChance[9].RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.EquipProfGain:b(this,ye).stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.Pet,i.Add,()=>this.effectValue));break;case F.MysteriousWaterGain:b(this,ye).alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.ChestPortalOrbChance:b(this,ye).area.chestPortalOrbChance.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.SkillProfGain:b(this,ye).stats.SetEffectStats(A.SkillProficiencyGain,new l(n.Pet,i.Add,()=>this.effectValue));break;case F.TownMatGain:b(this,ye).town.SetEffectTownMatGain(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.ResearchPowerStone:b(this,ye).town.researchPower[0].RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.ResearchPowerCrystal:b(this,ye).town.researchPower[1].RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.ResearchPowerLeaf:b(this,ye).town.researchPower[2].RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.CatalystCriticalChance:b(this,ye).alchemy.catalyst.criticalChanceMultiplier.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.MysteriousWaterCap:b(this,ye).alchemy.maxMysteriousWaterExpandedCapNum.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.BlessingEffect:b(this,ye).blessingInfo.SetEffectMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.LoyaltyPointGain:for(let t=0;t<H.HeroKind;t++)b(this,ye).stats.heroes[t].loyaltyPoingGain.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.PetExpGain:for(let t=0;t<H.HeroKind;t++)b(this,ye).stats.heroes[t].petExpGainPerDefeat.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.ExpeditionExpGain:b(this,ye).expedition.expGainMultiplier.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.EssenceConversionRate:b(this,ye).alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new l(n.Pet,i.Add,()=>this.effectValue));break;case F.SlimeCoinEfficiency:b(this,ye).resource.slimeCoinEfficiency.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.SlimeCoinCap:b(this,ye).resource.slimeCoinCap.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.EquipmentEffect:b(this,ye).equipment.effectMultiplier.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break;case F.AlchemyPointGain:b(this,ye).alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new l(n.Pet,i.Mul,()=>this.effectValue));break}}get effectValue(){return Math.min(this.maxEffectValue,ot.PetPassiveEffectValue(this.passiveEffectKind,this.rank)*(1+this.loyalty/100)*b(this,ye).monster.petPassiveEffectMultiplier.Value())}get effectIncrementValue(){return(ot.PetPassiveEffectValue(this.passiveEffectKind,this.rank+1)-ot.PetPassiveEffectValue(this.passiveEffectKind,this.rank))*(1+this.loyalty/100)*b(this,ye).monster.petPassiveEffectMultiplier.Value()}get maxEffectValue(){return ot.PetPassiveEffectMaxValue(this.passiveEffectKind)}MaxTPGAmongHeroes(){return this.BaseTamingPointGainPerCapture()*b(this,ye).stats.MaxTPGAmongHeroes()}BaseTamingPointGainPerCapture(){return this.TPGByLevel()+this.TPGByDefeat()+this.TPGByCapture()}TPGByLevel(){return 1+.02*this.level}TPGByDefeat(){return Math.log2(1+this.globalInfo.DefeatedNum()/1e4)}TPGByCapture(){return Math.log2(1+this.globalInfo.CapturedNum()/1e4)}PassiveEffectString(){return $e.MonsterPetPassiveEffectString(this)}}ye=new WeakMap;var Ce;class ma{constructor(t,s,a){Ht(this,Ce,void 0);c(this,"pet");c(this,"isLogStats",Array(H.HeroKind));c(this,"species");c(this,"color");c(this,"challengeMonsterKind");Vt(this,Ce,t),this.species=s,this.color=a,s==O.ChallengeBoss&&(this.challengeMonsterKind=a),this.pet=new Rg(b(this,Ce),this,s,a)}Start(){this.pet.Start()}AttackElement(){return ot.monsterAttackElements[this.species][this.colorId]}Hp(t,s){if(this.color==vt.Metal)return ot.monsterStats[this.species][this.colorId][0]*t;let a=ot.monsterStats[this.species][this.colorId][0],u,o=a*(1+(t-1)/2+1*Math.pow(t/5,2)+2.5*Math.pow(t/10,3)+5*Math.pow(t/20,4)+25*Math.pow(t/40,5)+100*Math.pow(t/80,8)+1e3*Math.pow(t/120,10)+5e4*Math.pow(t/200,15)+25e4*Math.pow(t/300,20));return t<100&&(o*=.5+.5*t/100),t>=400&&(o*=Math.pow(3,(t-400)/100),t>=500&&(o*=Math.pow(5,(t-500)/100)),t>=600&&(o*=Math.pow(10,(t-600)/100)),this.species==O.ChallengeBoss&&(o*=Math.pow(5,(t-400)/100))),u=o*Math.pow(10,s/10),u}Mp(t,s){return 10}MAtk(t,s){if(this.color==vt.Metal)return ot.monsterStats[this.species][this.colorId][3]*t;let u=ot.monsterStats[this.species][this.colorId][3]*(1+t*.75+20*Math.pow(t/100,3)+100*Math.pow(t/250,5));return t>=400&&(u*=Math.pow(3,(t-400)/100)),t>=500&&(u*=Math.pow(5,(t-500)/100)),t>=1e3&&(u*=Math.pow(10,(t-1e3)/100)),u*Math.pow(2,s/10)}Atk(t,s){if(this.color==vt.Metal)return ot.monsterStats[this.species][this.colorId][2]*t;let a=ot.monsterStats[this.species][this.colorId][2],u;return u=a*(1+t*.75+20*Math.pow(t/100,3)+100*Math.pow(t/250,5)),t>=400&&(u*=Math.pow(3,(t-400)/100)),t>=500&&(u*=Math.pow(5,(t-500)/100)),t>=1e3&&(u*=Math.pow(10,(t-1e3)/100)),u*Math.pow(2,s/10)}Def(t,s){if(this.color==vt.Metal)return ot.monsterStats[this.species][this.colorId][4];let u=ot.monsterStats[this.species][this.colorId][4]*(t+10*Math.pow(t/100,3)+50*Math.pow(t/250,5));return t>=400&&(u*=Math.pow(2,(t-400)/100)),t>=1e3&&(u*=Math.pow(10,(t-1e3)/100)),u*Math.pow(2,s/10)}MDef(t,s){if(this.color==vt.Metal)return ot.monsterStats[this.species][this.colorId][5];let u=ot.monsterStats[this.species][this.colorId][5]*(t+10*Math.pow(t/100,3)+50*Math.pow(t/250,5));return t>=400&&(u*=Math.pow(2,(t-400)/100)),t>=1e3&&(u*=Math.pow(10,(t-1e3)/100)),u*Math.pow(2,s/10)}Spd(){return ot.monsterStats[this.species][this.colorId][6]}Fire(){return ot.monsterStats[this.species][this.colorId][7]}Ice(){return ot.monsterStats[this.species][this.colorId][8]}Thunder(){return ot.monsterStats[this.species][this.colorId][9]}Light(){return ot.monsterStats[this.species][this.colorId][10]}Dark(){return ot.monsterStats[this.species][this.colorId][11]}PhyCrit(t){return .01*Math.log2(1+t)}MagCrit(t){return .01*Math.log2(1+t)}CriticalDamage(){return 2}DebuffResistance(){if(this.species==O.ChallengeBoss)switch(this.challengeMonsterKind){case lt.Florzporb:return 0;case lt.Arachnetta:return .05;case lt.GuardianKor:return .1;case lt.Nostro:return .2;case lt.LadyEmelda:return .5;case lt.NariSune:return .9;case lt.Octobaddie:return .9999;case lt.Bananoon:return .99999;case lt.Glorbliorbus:return 1;case lt.DistortionSlime:return 1}return 0}Exp(t,s){let a=(25+3*(2*t+2*Math.pow(t/10,2)+5*Math.pow(t/50,3)+10*Math.pow(t/100,4)))*Math.pow(2,s/10)*ot.ColorFactor(this.color)*ot.SpeciesFactor(this.species);return t>=400&&(a*=Math.pow(2,(t-400)/100)),t>=500&&(a*=Math.pow(2,(t-500)/100)),t>=600&&(a*=Math.pow(2,(t-600)/100)),t>=700&&(a*=Math.pow(2,(t-700)/100)),t>=800&&(a*=Math.pow(2,(t-800)/100)),t>=900&&(a*=Math.pow(2,(t-900)/100)),a}Damage(t,s){return this.AttackElement()==C.Physical?this.Atk(t,s):this.MAtk(t,s)}get colorId(){return this.species==O.ChallengeBoss?this.challengeMonsterKind:this.color}MoveSpeed(t=0,s=0,a=!1,u=E.Warrior){return 1}DefeatedNumHero(t=!1,s){let a=this.color+10*s,u=s+10*this.challengeMonsterKind;switch(this.species){case O.Slime:return t?b(this,Ce).source.monsterMutantDefeatedNumsSlime[a]:b(this,Ce).source.monsterDefeatedNumsSlime[a];case O.MagicSlime:return t?b(this,Ce).source.monsterMutantDefeatedNumsMagicSlime[a]:b(this,Ce).source.monsterDefeatedNumsMagicSlime[a];case O.Spider:return t?b(this,Ce).source.monsterMutantDefeatedNumsSpider[a]:b(this,Ce).source.monsterDefeatedNumsSpider[a];case O.Bat:return t?b(this,Ce).source.monsterMutantDefeatedNumsBat[a]:b(this,Ce).source.monsterDefeatedNumsBat[a];case O.Fairy:return t?b(this,Ce).source.monsterMutantDefeatedNumsFairy[a]:b(this,Ce).source.monsterDefeatedNumsFairy[a];case O.Fox:return t?b(this,Ce).source.monsterMutantDefeatedNumsFox[a]:b(this,Ce).source.monsterDefeatedNumsFox[a];case O.DevilFish:return t?b(this,Ce).source.monsterMutantDefeatedNumsDevilFish[a]:b(this,Ce).source.monsterDefeatedNumsDevilFish[a];case O.Treant:return t?b(this,Ce).source.monsterMutantDefeatedNumsTreant[a]:b(this,Ce).source.monsterDefeatedNumsTreant[a];case O.FlameTiger:return t?b(this,Ce).source.monsterMutantDefeatedNumsFlameTiger[a]:b(this,Ce).source.monsterDefeatedNumsFlameTiger[a];case O.Unicorn:return t?b(this,Ce).source.monsterMutantDefeatedNumsUnicorn[a]:b(this,Ce).source.monsterDefeatedNumsUnicorn[a];case O.Mimic:return t?b(this,Ce).source.monsterMutantDefeatedNumsMimic[a]:b(this,Ce).source.monsterDefeatedNumsMimic[a];case O.ChallengeBoss:return t?b(this,Ce).source.monsterMutantDefeatedNumsChallenge[u]:b(this,Ce).source.monsterDefeatedNumsChallenge[u];default:return 0}}DefeatedNum(t=!1){let s=0;for(let a=0;a<H.HeroKind;++a)t?s+=this.DefeatedNumHero(!0,a):s+=this.DefeatedNumHero(!1,a);return s}CapturedNum(t=!1){let s=0;for(let a=0;a<H.HeroKind;++a)t?s+=this.CapturedNumHero(!0,a):s+=this.CapturedNumHero(!1,a);return s}CapturedNumHero(t=!1,s){let a=this.color+10*s,u=s+10*this.challengeMonsterKind;switch(this.species){case O.Slime:return t?b(this,Ce).source.monsterMutantCapturedNumsSlime[a]:b(this,Ce).source.monsterCapturedNumsSlime[a];case O.MagicSlime:return t?b(this,Ce).source.monsterMutantCapturedNumsMagicSlime[a]:b(this,Ce).source.monsterCapturedNumsMagicSlime[a];case O.Spider:return t?b(this,Ce).source.monsterMutantCapturedNumsSpider[a]:b(this,Ce).source.monsterCapturedNumsSpider[a];case O.Bat:return t?b(this,Ce).source.monsterMutantCapturedNumsBat[a]:b(this,Ce).source.monsterCapturedNumsBat[a];case O.Fairy:return t?b(this,Ce).source.monsterMutantCapturedNumsFairy[a]:b(this,Ce).source.monsterCapturedNumsFairy[a];case O.Fox:return t?b(this,Ce).source.monsterMutantCapturedNumsFox[a]:b(this,Ce).source.monsterCapturedNumsFox[a];case O.DevilFish:return t?b(this,Ce).source.monsterMutantCapturedNumsDevilFish[a]:b(this,Ce).source.monsterCapturedNumsDevilFish[a];case O.Treant:return t?b(this,Ce).source.monsterMutantCapturedNumsTreant[a]:b(this,Ce).source.monsterCapturedNumsTreant[a];case O.FlameTiger:return t?b(this,Ce).source.monsterMutantCapturedNumsFlameTiger[a]:b(this,Ce).source.monsterCapturedNumsFlameTiger[a];case O.Unicorn:return t?b(this,Ce).source.monsterMutantCapturedNumsUnicorn[a]:b(this,Ce).source.monsterCapturedNumsUnicorn[a];case O.Mimic:return t?b(this,Ce).source.monsterMutantCapturedNumsMimic[a]:b(this,Ce).source.monsterCapturedNumsMimic[a];case O.ChallengeBoss:return t?b(this,Ce).source.monsterMutantCapturedNumsChallenge[u]:b(this,Ce).source.monsterCapturedNumsChallenge[u];default:return 0}}MonsterName(){return this.species==O.ChallengeBoss?lt[this.challengeMonsterKind]:`${$e.MonsterSpeciesName(this.species)} ${vt[this.color]}`}}Ce=new WeakMap;class Dg{constructor(t){c(this,"data");c(this,"petActiveCap");c(this,"loyaltyCap");c(this,"petRankCap");c(this,"globalInformations",Array(H.MonsterSpecies));c(this,"monsterDefeatNumMultiplier");c(this,"globalInfoList",[]);c(this,"speciesMaterialDropChance",Array(H.MonsterSpecies));c(this,"colorMaterialDropChance");c(this,"trapNotConsumedChance",new x);c(this,"monsterCapturableLevel",Array(H.HeroKind));c(this,"doubleCaptureChance",Array(H.HeroKind));c(this,"captureTripleChance",Array(H.HeroKind));c(this,"petStatsMultiplier");c(this,"petPassiveEffectMultiplier");c(this,"isPetActive",Array(H.PetActiveEffectKind));c(this,"tempIsPetActive",Array(H.PetActiveEffectKind));c(this,"petRankMilestoneList",[]);c(this,"isLog",Array(H.HeroKind));c(this,"memoTotalPetRank");this.data=t,this.petRankCap=new x(new l(n.Base,i.Add,()=>50)),this.loyaltyCap=new x(new l(n.Base,i.Add,()=>100)),this.petActiveCap=new x(new l(n.Base,i.Add,()=>5)),this.monsterDefeatNumMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.petStatsMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.petPassiveEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.colorMaterialDropChance=new x(new l(n.Base,i.Add,()=>ot.colorDropChanceBase));for(let s=0;s<10;s++){this.globalInformations[s]=Array(H.MonsterColor);for(let a=0;a<this.globalInformations[s].length;a++)this.globalInformations[s][a]=new ma(this.data,s,a),this.globalInfoList.push(this.globalInformations[s][a])}this.globalInformations[10]=[],this.globalInformations[10][0]=new ma(this.data,O.Mimic,vt.Normal),this.globalInfoList.push(this.globalInformations[10][0]),this.globalInformations[11]=Array(H.ChallengeMonsterKind);for(let s=0;s<this.globalInformations[11].length;s++)this.globalInformations[11][s]=new ma(this.data,O.ChallengeBoss,s),this.globalInfoList.push(this.globalInformations[11][s]);for(let s=0;s<this.speciesMaterialDropChance.length;s++)this.speciesMaterialDropChance[s]=new x(new l(n.Base,i.Add,()=>ot.dropChanceBase));for(let s=0;s<this.captureTripleChance.length;s++)this.doubleCaptureChance[s]=new x,this.captureTripleChance[s]=new x}Start(){this.globalInfoList.forEach(t=>{t.Start()}),this.SetPetRankMilestone()}TotalPetRank(){if(this.memoTotalPetRank)return this.memoTotalPetRank;let t=0;for(let s=0;s<H.MonsterSpecies;s++)t+=this.TotalPetRankSpecies(s);return this.memoTotalPetRank=t,t}SetEffectSpeciesMaterialDropChance(t){for(let s=0;s<this.speciesMaterialDropChance.length;s++)this.speciesMaterialDropChance[s].RegisterMultiplier(t)}SetEffectDoubleCaptureChance(t){for(let s=0;s<this.doubleCaptureChance.length;s++)this.doubleCaptureChance[s].RegisterMultiplier(t)}SetEffectTripleCaptureChance(t){for(let s=0;s<this.captureTripleChance.length;s++)this.captureTripleChance[s].RegisterMultiplier(t)}TotalPetRankSpecies(t){let s=0;for(let a=0;a<this.globalInformations[t].length;a++)s+=this.globalInformations[t][a].pet.rank;return s}Monster(t,s){return this.GlobalInformation(t,s)}GlobalInformation(t,s){return this.globalInformations[t][s]}GlobalInformationChallengeBoss(t){return this.globalInformations[11][t]}isUnlocked(t){return()=>this.TotalPetRank()>t}SetPetRankMilestone(){this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(10))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(20))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(30))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>.15,this.isUnlocked(40))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(50))),this.colorMaterialDropChance.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(60))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(70))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>.25,this.isUnlocked(80))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(90))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(100))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(140))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(160))),this.colorMaterialDropChance.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(200))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>.25,this.isUnlocked(240))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>.75,this.isUnlocked(260))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.15,this.isUnlocked(300))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(320))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(340))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(360))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(400))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(440))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(480))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.2,this.isUnlocked(500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>1,this.isUnlocked(520))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.15,this.isUnlocked(540))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(560))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(580))),this.colorMaterialDropChance.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(600))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>.75,this.isUnlocked(700))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.2,this.isUnlocked(740))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(800))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(825))),this.colorMaterialDropChance.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(900))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>1,this.isUnlocked(950))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(975))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.25,this.isUnlocked(1e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>1.25,this.isUnlocked(1025))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.2,this.isUnlocked(1050))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(1075))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(1100))),this.colorMaterialDropChance.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(1200))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>1.25,this.isUnlocked(1250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.25,this.isUnlocked(1300))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(1350))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(1400))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(1450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.3,this.isUnlocked(1500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(1550))),this.SetEffectTripleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(1600))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(1700))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(1750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.3,this.isUnlocked(1800))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(1850))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(1900))),this.colorMaterialDropChance.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>.1,this.isUnlocked(1950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.35,this.isUnlocked(2e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>1.75,this.isUnlocked(2050))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1,this.isUnlocked(2100))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>1.75,this.isUnlocked(2250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.35,this.isUnlocked(2300))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.15,this.isUnlocked(2350))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.2,this.isUnlocked(2450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.4,this.isUnlocked(2500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>2,this.isUnlocked(2550))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1,this.isUnlocked(2600))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.15,this.isUnlocked(2650))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>2,this.isUnlocked(2750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.4,this.isUnlocked(2800))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(2850))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.45,this.isUnlocked(3e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>2.25,this.isUnlocked(3050))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1,this.isUnlocked(3100))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.15,this.isUnlocked(3150))),this.SetEffectTripleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(3200))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>2.25,this.isUnlocked(3250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.45,this.isUnlocked(3300))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.2,this.isUnlocked(3400))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.5,this.isUnlocked(3500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>2.5,this.isUnlocked(3550))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1,this.isUnlocked(3600))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.15,this.isUnlocked(3650))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>2.5,this.isUnlocked(3750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.5,this.isUnlocked(3800))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(3850))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.55,this.isUnlocked(4e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>2.75,this.isUnlocked(4050))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(4100))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.2,this.isUnlocked(4150))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>2.75,this.isUnlocked(4250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.65,this.isUnlocked(4300))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.2,this.isUnlocked(4400))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(4450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.6,this.isUnlocked(4500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>3,this.isUnlocked(4550))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(4600))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.2,this.isUnlocked(4650))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>3,this.isUnlocked(4750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>.9,this.isUnlocked(4800))),this.SetEffectTripleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.1,this.isUnlocked(4850))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(4900))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>.7,this.isUnlocked(5e3))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(5100))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>5,this.isUnlocked(5150))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>3.5,this.isUnlocked(5250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(5300))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.2,this.isUnlocked(5350))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(5400))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(5450))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>10,this.isUnlocked(5550))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>1.5,this.isUnlocked(5600))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>4,this.isUnlocked(5750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>5,this.isUnlocked(5800))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>2,this.isUnlocked(6e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>20,this.isUnlocked(6050))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>2,this.isUnlocked(6100))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>4.5,this.isUnlocked(6250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>15,this.isUnlocked(6300))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.25,this.isUnlocked(6350))),this.SetEffectTripleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.15,this.isUnlocked(6400))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(6450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>3,this.isUnlocked(6500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>30,this.isUnlocked(6550))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>2,this.isUnlocked(6600))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>5.5,this.isUnlocked(6750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>30,this.isUnlocked(6800))),this.SetEffectSpeciesMaterialDropChance(new l(n.PetRankMilestone,i.Mul,()=>.4,this.isUnlocked(6950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>5,this.isUnlocked(7e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>50,this.isUnlocked(7050))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>2,this.isUnlocked(7100))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>7,this.isUnlocked(7250))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>50,this.isUnlocked(7300))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.3,this.isUnlocked(7350))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(7450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>10,this.isUnlocked(7500))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>100,this.isUnlocked(7550))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>3,this.isUnlocked(7600))),this.data.stats.SetEffectPetEXPGain(new l(n.PetRankMilestone,i.Mul,()=>9,this.isUnlocked(7750))),this.data.stats.SetEffectLoyalityPointGain(new l(n.PetRankMilestone,i.Mul,()=>100,this.isUnlocked(7800))),this.SetEffectTripleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.2,this.isUnlocked(8e3))),this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.PetRankMilestone,i.Mul,()=>300,this.isUnlocked(8050))),this.petStatsMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Mul,()=>10,this.isUnlocked(8100))),this.petPassiveEffectMultiplier.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>15,this.isUnlocked(8200))),this.SetEffectDoubleCaptureChance(new l(n.PetRankMilestone,i.Add,()=>.35,this.isUnlocked(8350))),this.petActiveCap.RegisterMultiplier(new l(n.PetRankMilestone,i.Add,()=>1,this.isUnlocked(8450)))}}class kg{constructor(){c(this,"nitroCap");c(this,"maxNitroSpeed");this.nitroCap=new x(new l(n.Base,i.Add,()=>5e3)),this.maxNitroSpeed=new x(new l(n.Base,i.Add,()=>2)),this.nitroCap.numberType=Ze.Normal}}var Re=(e=>(e[e.Common=0]="Common",e[e.Uncommon=1]="Uncommon",e[e.Rare=2]="Rare",e[e.SuperRare=3]="SuperRare",e[e.Epic=4]="Epic",e))(Re||{});class st{constructor(t){c(this,"data");c(this,"kind",0);c(this,"type");this.data=t,this.SetInfo()}get talismanRarity(){return Re.Common}get level(){return this.data.source.potionLevels[this.kind]}set level(t){this.data.source.potionLevels[this.kind]=Math.min(this.type==be.Talisman?50:100,t)}EffectValue(t){return 0}IsActiveEffect(t,s){return!(!this.data.source.isActiveBattle[t]||s()==0||this.kind==0)}get effectValue(){return this.EffectValue(this.level)*this.data.potion.effectMultiplier.Value()}PassiveEffectValue(t){return this.EffectValue(t)*.01}ModifiedPassiveEffectValue(t){return this.PassiveEffectValue(t)*this.data.potion.talismanPassiveEffectMultiplier.Value()}get passiveEffectMaxValue(){return 0}get passiveEffectValue(){return this.passiveEffectMaxValue<=0?this.ModifiedPassiveEffectValue(this.disassembledNum):Math.min(this.passiveEffectMaxValue,this.ModifiedPassiveEffectValue(this.disassembledNum))}get cooltime(){return 0}SetInfo(){}get disassembledNum(){return this.data.source.potionDisassembledNums[this.kind]}set disassembledNum(t){this.data.source.potionDisassembledNums[this.kind]=t}get talismanDisassembleFragmentNumPerLevel(){return Math.pow(5,this.talismanRarity)}NameString(){return $e.PotionName(this.kind)}EffectValueString(){return $e.PotionEffect(this.kind,this.passiveEffectValue,!0)}}class Te extends st{constructor(){super(...arguments);c(this,"type",be.Talisman)}get talismanKind(){return B.AncientAngelsBadge}get effectValue(){return this.EffectValue(this.level)}SetInfo(){this.kind=this.talismanKind,this.SetPassiveEffect()}SetPassiveEffect(){}Cost(s){switch(this.talismanRarity){case Re.Common:return 9*s+Math.pow(s,2);case Re.Uncommon:return 99*s+Math.pow(s,3);case Re.Rare:return 999*s+Math.pow(s,4);case Re.SuperRare:return 9999*s+Math.pow(s,5);case Re.Epic:return 99999*s+Math.pow(s,10);default:return 1e13}}}class Eg extends Te{get talismanKind(){return B.AncientAngelsBadge}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Cg extends Te{get talismanKind(){return B.AncientArchersBadge}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.battles[t].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.WardedFury).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class yg extends Te{get talismanKind(){return B.AncientBatBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Bat).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Bat).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Pg extends Te{get talismanKind(){return B.AncientDevilfishBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.DevilFish).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.DevilFish).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class vg extends Te{get talismanKind(){return B.AncientFairyBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Fairy).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Fairy).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Bg extends Te{get talismanKind(){return B.AncientFlametigerBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.FlameTiger).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.FlameTiger).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Lg extends Te{get talismanKind(){return B.AncientFoxBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Fox).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Fox).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Tg extends Te{get talismanKind(){return B.AncientMagicslimeBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.MagicSlime).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.MagicSlime).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Gg extends Te{get talismanKind(){return B.AncientSlimeBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Slime).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Slime).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class xg extends Te{get talismanKind(){return B.AncientSpiderBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Spider).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Spider).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Fg extends Te{get talismanKind(){return B.AncientTamersBadge}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 10}EffectValue(t){return .05*t}PassiveEffectValue(t){return .001*t}SetPassiveEffect(){this.data.sdg.dungeonCoinGain.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.TamingPointGain).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Ig extends Te{get talismanKind(){return B.AncientThiefsBadge}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.battles[t].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.ArmoredFury).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Hg extends Te{get talismanKind(){return B.AncientTreantBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Treant).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Treant).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Vg extends Te{get talismanKind(){return B.AncientUnicornBadge}get talismanRarity(){return Re.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.Unicorn).RegisterMultiplier(new l(n.Talisman,i.After,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.Unicorn).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Ng extends Te{get talismanKind(){return B.AncientWarriorsBadge}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.ElementDamage(t,C.Physical).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class qg extends Te{get talismanKind(){return B.AncientWizardsBadge}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){this.data.stats.ElementDamage(t,C.Fire).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Ice).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Thunder).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Light).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Dark).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class _g extends Te{get talismanKind(){return B.AngelsBadge}get talismanRarity(){return Re.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[2].RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.SkillProficiencyGain).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Wg extends Te{get talismanKind(){return B.ArachnettaDoll}get talismanRarity(){return Re.Rare}EffectValue(t){return .01*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.resource.goldCap.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.baseAttackPoisonChance[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Ug extends Te{get talismanKind(){return B.ArchersBadge}get talismanRarity(){return Re.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[4].RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.CriticalDamage).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Og extends Te{get talismanKind(){return B.AscendedFromIEH1}get talismanRarity(){return Re.Epic}EffectValue(t){return .1*t}SetEffect(t,s){return this.data.stats.HeroStats(t,A.ExpGain).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class $g extends st{SetInfo(){this.kind=B.BasicElixirOfBrains,this.type=be.MagicalDamage}SetEffect(t,s){return[this.data.stats.ElementDamage(t,C.Fire).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Ice).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Thunder).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Light).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ElementDamage(t,C.Dark).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))]}EffectValue(t){return .2+.02*t}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class zg extends st{SetInfo(){this.kind=B.BasicElixirOfBrawn,this.type=be.PhysicalDamage}SetEffect(t,s){return this.data.stats.ElementDamage(t,C.Physical).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+.02*t}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Jg extends st{SetInfo(){this.kind=B.BasicElixirOfConcentration,this.type=be.MaxMP}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MP).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 20+10*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Xg extends st{SetInfo(){this.kind=B.BasicElixirOfFortitude,this.type=be.MaxHP}SetEffect(t,s){return this.data.stats.BasicStats(t,m.HP).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 50+25*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class jg extends st{SetInfo(){this.kind=B.BasicElixirOfUnderstanding,this.type=be.SkillProfGain}SetEffect(t,s){return this.data.stats.HeroStats(t,A.SkillProficiencyGain).RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+.005*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Yg extends Te{get talismanKind(){return B.BatBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.ATK,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.ATK).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Zg extends Te{get talismanKind(){return B.BerserkersStone}get talismanRarity(){return Re.SuperRare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .2*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,.001*t)}SetPassiveEffect(){this.data.equipment.effectMultiplier.RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MonsterDamage(t,O.ChallengeBoss).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Qg extends st{SetInfo(){this.kind=B.BlazingAuraDraught,this.type=be.Aura}SetEffect(t,s){return this.data.stats.DebuffChance(t,We.Knockback).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Kg extends st{SetInfo(){this.kind=B.BurningDefensePotion,this.type=be.ElementResistance}SetEffect(t,s){return this.data.stats.ElementResistance(t,C.Fire).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class em extends Te{get talismanKind(){return B.CertificateOfCompetence}get talismanRarity(){return Re.SuperRare}EffectValue(t){return .005*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.SetEffectStats(A.SkillProficiencyGain,new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.skillCooltimeReduction[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class tm extends st{SetInfo(){this.kind=B.ChilledHealthPotion,this.type=be.Health}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.5+.05*t)*this.data.potion.GlobalInfo(B.MinorHealthPotion).effectValue}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class sm extends st{SetInfo(){this.kind=B.ChilledRegenerationPoultice,this.type=be.HealthRegen}SetEffect(t,s){return this.data.stats.HpRegenerate(t).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.5+.05*t)*this.data.potion.GlobalInfo(B.MinorRegenerationPoultice).effectValue}AlchemyPointGain(t){return 6*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class im extends st{SetInfo(){this.kind=B.CoolHeadOintment,this.type=be.ExpGain}SetEffect(t,s){return this.data.stats.HeroStats(t,A.ExpGain).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.02}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class rm extends st{SetInfo(){this.kind=B.DarkRope,this.type=be.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class am extends Te{get talismanKind(){return B.DevilfishBadge}get talismanRarity(){return Re.Common}EffectValue(t){return 5e-4*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class nm extends st{SetInfo(){this.kind=B.ElectricDefensePotion,this.type=be.ElementResistance}SetEffect(t,s){return this.data.stats.ElementResistance(t,C.Thunder).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class lm extends Te{constructor(){super(...arguments);c(this,"passiveEffectNumberType",Ze.Normal)}get talismanKind(){return B.EnchantedAlembic}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 5}EffectValue(s){return .001*s}PassiveEffectValue(s){return Math.min(this.passiveEffectMaxValue,.001*s)}SetPassiveEffect(){this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(s,a){return this.data.potion.effectMultiplier.RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*a(),()=>this.IsActiveEffect(s,a)))}}class cm extends Te{get talismanKind(){return B.FairyBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.MATK,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MATK).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class om extends st{SetInfo(){this.kind=B.FierySlayersOil,this.type=be.SlayerOil}SetEffect(t,s){return this.data.stats.ElementSlayerDamage(t,C.Fire).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class um extends st{SetInfo(){this.kind=B.FireRope,this.type=be.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class hm extends Te{get talismanKind(){return B.FlametigerBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class fm extends Te{get talismanKind(){return B.FlorzporbDoll}get talismanRarity(){return Re.Rare}EffectValue(t){return .1*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.GoldGain().RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.baseAttackSlimeBall[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class pm extends Te{get talismanKind(){return B.FoxBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.MP,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MP).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class dm extends st{SetInfo(){this.kind=B.FrostyDefensePotion,this.type=be.ElementResistance}SetEffect(t,s){return this.data.stats.ElementResistance(t,C.Ice).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class gm extends st{SetInfo(){this.kind=B.FrostySlayersOil,this.type=be.SlayerOil}SetEffect(t,s){return this.data.stats.ElementSlayerDamage(t,C.Ice).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class mm extends Te{get talismanKind(){return B.GuardianKorDoll}get talismanRarity(){return Re.Rare}EffectValue(t){return .001*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.heroes[t].guardianKorInvalidDamageHpPercent.RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class wm extends Te{get talismanKind(){return B.GuildMembersEmblem}get talismanRarity(){return Re.SuperRare}get passiveEffectMaxValue(){return .99}EffectValue(t){return .05*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.guild.expRequirementReduction.RegisterMultiplier(new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.heroes[t].guildExpGain.RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Mm extends st{SetInfo(){this.kind=B.IceRope,this.type=be.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class Sm extends st{SetInfo(){this.kind=B.IcyAuraDraught,this.type=be.Aura}SetEffect(t,s){return this.data.stats.DebuffChance(t,We.SpdDown).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Am extends Te{get talismanKind(){return B.LadyEmeldaDoll}get talismanRarity(){return Re.Rare}EffectValue(t){return .025*t}PassiveEffectValue(t){return 1e-4*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.ElementAbsorption(t,C.Fire).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,C.Ice).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,C.Thunder).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,C.Light).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,C.Dark).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.ladyEmeldaEffectMultiplier[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class bm extends st{SetInfo(){this.kind=B.LightRope,this.type=be.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class Rm extends Te{get talismanKind(){return B.MagicslimeBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.MDEF,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.MDEF).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Dm extends Te{get talismanKind(){return B.MasonsTrowel}get talismanRarity(){return Re.SuperRare}get passiveEffectMaxValue(){return 2}EffectValue(t){return .1*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,.001*t)}SetPassiveEffect(){this.data.town.townLevelEffectMultiplier.RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.town.townMaterialGainMultiplier[t].RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class km extends st{SetInfo(){this.kind=B.MaterialMultiplierMist,this.type=be.MaterialGain}SetEffect(t,s){return this.data.stats.MaterialLootGain(t).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 1+.1*t}get effectValue(){return Math.floor(this.EffectValue(this.level)*this.data.potion.effectMultiplier.Value())}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Em extends st{SetInfo(){this.kind=B.MinorHealthPotion,this.type=be.Health}EffectValue(t){return 15+5*t}AlchemyPointGain(t){return 1*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Cm extends st{SetInfo(){this.kind=B.MinorManaRegenerationPoultice,this.type=be.ManaRegen}SetEffect(t,s){return this.data.stats.MpRegenerate(t).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 5+t}AlchemyPointGain(t){return 3*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class ym extends st{SetInfo(){this.kind=B.MinorRegenerationPoultice,this.type=be.HealthRegen}SetEffect(t,s){return this.data.stats.HpRegenerate(t).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return 1+.2*t}AlchemyPointGain(t){return 2*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Pm extends st{SetInfo(){this.kind=B.MinorResourcePoultice,this.type=be.ResourceGain}SetEffect(t,s){return[this.data.stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s))),this.data.stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))]}EffectValue(t){return .25+.05*t}AlchemyPointGain(t){return 1*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class vm extends Te{get talismanKind(){return B.NariSuneDoll}get talismanRarity(){return Re.Rare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .005*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,5e-4*t)}SetPassiveEffect(){this.data.area.largeSwarmChanceInsteadOfRegular.RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.skillRangeMultiplier[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Bm extends Te{get talismanKind(){return B.NostroDoll}get talismanRarity(){return Re.Rare}EffectValue(t){return .01*t}PassiveEffectValue(t){return 1e-4*t}SetPassiveEffect(){for(let t=0;t<H.HeroKind;t++)this.data.stats.ElementAbsorption(t,C.Physical).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.MpRegenerate(t).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s()*this.data.stats.BasicStats(t,m.MP).Value(),()=>this.IsActiveEffect(t,s)))}}class Lm extends Te{get talismanKind(){return B.OctobaddieDoll}get talismanRarity(){return Re.Rare}EffectValue(t){return 1/400*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.skill.skillEffectRangeMultiplier[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Tm extends st{SetInfo(){this.kind=B.ShockingSlayersOil,this.type=be.SlayerOil}SetEffect(t,s){return this.data.stats.ElementSlayerDamage(t,C.Thunder).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Gm extends st{SetInfo(){this.kind=B.SlickerShoeSolution,this.type=be.Move}SetEffect(t,s){return this.data.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.25+.005*t)*this.data.potion.GlobalInfo(B.SlickShoeSolution).effectValue}AlchemyPointGain(t){return 8*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class xm extends st{SetInfo(){this.kind=B.SlickShoeSolution,this.type=be.Move}SetEffect(t,s){return this.data.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .1+.001*t}AlchemyPointGain(t){return 3*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Fm extends st{SetInfo(){this.kind=B.SlightlyStickySalve,this.type=be.GoldGain}SetEffect(t,s){return this.data.stats.GoldGain().RegisterMultiplier(new l(n.Potion,i.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Im extends Te{get talismanKind(){return B.SlimeBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return 1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.HP,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.HP).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Hm extends Te{get talismanKind(){return B.SpiderBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.DEF,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.DEF).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Vm extends Te{get talismanKind(){return B.TamersBadge}get talismanRarity(){return Re.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .05*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[5].RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.ExpGain).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Nm extends Te{get talismanKind(){return B.ThiefsBadge}get talismanRarity(){return Re.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .001*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[3].RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.EquipmentDropChance).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class qm extends st{SetInfo(){this.kind=B.ThrowingNet,this.type=be.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class _m extends st{SetInfo(){this.kind=B.ThunderRope,this.type=be.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class Wm extends Te{get talismanKind(){return B.TrackersMap}get talismanRarity(){return Re.SuperRare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .5*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.area.epicSwarmChanceInsteadOfLarge.RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.area.clearCountBonusClass[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Um extends Te{get talismanKind(){return B.TrappersTag}get talismanRarity(){return Re.SuperRare}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.monster.captureTripleChance[t].RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Om extends Te{get talismanKind(){return B.TreantBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.ExpGain).RegisterMultiplier(new l(n.Talisman,i.Add,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class $m extends Te{get talismanKind(){return B.UnicornBadge}get talismanRarity(){return Re.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(m.SPD,new l(n.TalismanPassive,i.Add,()=>this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.BasicStats(t,m.SPD).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class zm extends Te{get talismanKind(){return B.WarriorsBadge}get talismanRarity(){return Re.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[0].RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.PhysCritChance).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}class Jm extends st{SetInfo(){this.kind=B.WhirlingAuraDraught,this.type=be.Aura}SetEffect(t,s){return this.data.stats.DebuffChance(t,We.Electric).RegisterMultiplier(new l(n.Potion,i.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,s)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class Xm extends Te{get talismanKind(){return B.WizardsBadge}get talismanRarity(){return Re.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[1].RegisterMultiplier(new l(n.TalismanPassive,i.Mul,()=>-this.passiveEffectValue))}SetEffect(t,s){return this.data.stats.HeroStats(t,A.MagCritChance).RegisterMultiplier(new l(n.Talisman,i.Mul,()=>this.effectValue*s(),()=>this.IsActiveEffect(t,s)))}}var te;class jm{constructor(t){Ht(this,te,void 0);c(this,"potions");c(this,"traps");c(this,"talismans");c(this,"globalInformations");c(this,"maxStackNum");c(this,"preventConsumeChance");c(this,"effectMultiplier");c(this,"talismanPassiveEffectMultiplier");c(this,"trapEffectMultiplier");c(this,"trapCooltimeReduction",Array(6));c(this,"disassembleGoldGainMultiplier");c(this,"potionMaxLevel");c(this,"availableQueue");Vt(this,te,t),this.maxStackNum=new x(new l(n.Base,i.Add,()=>10)),this.preventConsumeChance=new x(new l(n.Base,i.Add,()=>0)),this.effectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.talismanPassiveEffectMultiplier=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.trapCooltimeReduction.length;s++)this.trapCooltimeReduction[s]=new x(new l(n.Base,i.Add,()=>0),()=>10,()=>1),this.trapCooltimeReduction[s].RegisterMultiplier(new l(n.Base,i.Add,()=>10));this.trapEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.disassembleGoldGainMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.potionMaxLevel=new x(new l(n.Base,i.Add,()=>100)),this.availableQueue=new x}GlobalInfo(t){for(let s=0;s<this.globalInformations.length;s++)if(this.globalInformations[s].kind==t)return this.globalInformations[s];return this.globalInformations[0]}TalismanGlobalInfo(t){for(let s=0;s<this.talismans.length;s++)if(this.talismans[s].kind==t)return this.talismans[s]}Start(){this.potions=[new Em(b(this,te)),new ym(b(this,te)),new Pm(b(this,te)),new xm(b(this,te)),new Cm(b(this,te)),new km(b(this,te)),new zg(b(this,te)),new $g(b(this,te)),new Xg(b(this,te)),new Jg(b(this,te)),new jg(b(this,te)),new tm(b(this,te)),new sm(b(this,te)),new dm(b(this,te)),new Sm(b(this,te)),new Fm(b(this,te)),new Gm(b(this,te)),new im(b(this,te)),new gm(b(this,te)),new Kg(b(this,te)),new Qg(b(this,te)),new om(b(this,te)),new nm(b(this,te)),new Jm(b(this,te)),new Tm(b(this,te))],this.traps=[new qm(b(this,te)),new Mm(b(this,te)),new _m(b(this,te)),new um(b(this,te)),new bm(b(this,te)),new rm(b(this,te))],this.talismans=[new wm(b(this,te)),new em(b(this,te)),new Dm(b(this,te)),new lm(b(this,te)),new Wm(b(this,te)),new Zg(b(this,te)),new Um(b(this,te)),new fm(b(this,te)),new Wg(b(this,te)),new mm(b(this,te)),new Im(b(this,te)),new Rm(b(this,te)),new Hm(b(this,te)),new Yg(b(this,te)),new cm(b(this,te)),new pm(b(this,te)),new am(b(this,te)),new Om(b(this,te)),new hm(b(this,te)),new $m(b(this,te)),new Og(b(this,te)),new zm(b(this,te)),new Xm(b(this,te)),new _g(b(this,te)),new Nm(b(this,te)),new Ug(b(this,te)),new Vm(b(this,te)),new Bm(b(this,te)),new Am(b(this,te)),new vm(b(this,te)),new Lm(b(this,te)),new Ng(b(this,te)),new qg(b(this,te)),new Eg(b(this,te)),new Ig(b(this,te)),new Cg(b(this,te)),new Fg(b(this,te)),new Gg(b(this,te)),new Tg(b(this,te)),new xg(b(this,te)),new yg(b(this,te)),new vg(b(this,te)),new Lg(b(this,te)),new Pg(b(this,te)),new Hg(b(this,te)),new Bg(b(this,te)),new Vg(b(this,te))],this.globalInformations=[...this.potions,...this.traps,...this.talismans]}}te=new WeakMap;const Nt={baseStats:[[20,5,2,.5,0,0,0,.01,0,2,.001,200],[10,10,.5,2,0,0,0,0,.01,2,.001,150],[15,7.5,1.5,1.5,0,0,0,.005,.005,2,.001,250],[10,5,1,1,0,0,0,.05,.05,2,.0015,250],[10,10,1.5,1.5,0,0,0,.005,.005,2,.001,200],[20,10,1,1,0,0,0,.005,.005,2,.001,150]],cooperationEfficiency:[0,.2,.4,.55,.7,.8,.9],stats:[[20,5,1,.25,.5,.5,1,1e-4,0,0,1e-5,1],[10,10,.25,1,.15,.15,.5,0,1e-4,0,1e-5,.75],[15,7.5,.5,.5,.35,.35,1.5,5e-5,5e-5,0,1e-5,1.25],[10,5,.35,.35,.05,.05,2.5,2e-4,2e-4,0,1e-5,1.25],[10,10,.5,.5,.35,.35,1,1e-4,1e-4,0,1e-5,1],[20,10,.25,.25,.25,.25,1.5,5e-5,5e-5,0,1e-5,.75]],TitleEffectValue(e,t){function s(a,u){return{main:a,sub:u}}switch(e){case L.SkillMaster:return s(t,t*.1);case L.MonsterDistinguisher:return s(Math.min(1,t)*10*Math.pow(2,t),10*t);case L.EquipmentSlotWeapon:return s(t,0);case L.EquipmentSlotArmor:return s(t,0);case L.EquipmentSlotJewelry:return s(t,0);case L.PotionSlot:return s(t,0);case L.EquipmentProficiency:return s(t*.2,0);case L.PhysicalDamage:return s(t*.025,0);case L.FireDamage:return s(t*.025,0);case L.IceDamage:return s(t*.025,0);case L.ThunderDamage:return s(t*.025,0);case L.LightDamage:return s(t*.025,0);case L.DarkDamage:return s(t*.025,0);case L.Alchemist:return s(t*.025,0);case L.MetalHunter:return s(t,.25*t);case L.Survival:return s(.1*Math.min(1,t)+.1*t,0);case L.FireResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case L.IceResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case L.ThunderResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case L.LightResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case L.DarkResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case L.Cooperation:return s(Math.min(Nt.cooperationEfficiency[Math.min(t,6)],1),0);case L.DebuffResistance:return s(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case L.MoveSpeed:return s(t*.05,0);case L.BreakingTheLimit:return s(t,0);case L.Quester:return s(t,0);case L.ExplorerOfSD:return s(Math.min(1,t)*.1*Math.pow(2,t-1),.1*t);default:return s(0,0)}}};class Ge{constructor(t,s){c(this,"data");c(this,"questCtrl");c(this,"kind");c(this,"type");c(this,"heroKind");c(this,"kindGlobal");c(this,"kindTitle");c(this,"kindGeneral");c(this,"kindDaily");c(this,"globalQuestType");c(this,"rewardExpMultiplier");c(this,"rebirthPointGainMultiplier");c(this,"rewardTitleKind");c(this,"rewardTitleLevel");switch(this.data=t,this.kind=s.kind,this.questCtrl=t.quest,s.kind){case de.Global:this.globalQuestType=s.globalQuestType,this.kindGlobal=s.kindGlobal;break;case de.Title:this.kindTitle=s.kindTitle,this.heroKind=s.heroKind,this.rewardTitleKind=this.getTitleKind(),this.rewardTitleLevel=this.getTitleLevel();break}}getTitleKind(){switch(this.kindTitle){case S.EquipmentSlotWeapon1:case S.EquipmentSlotWeapon2:case S.EquipmentSlotWeapon3:case S.EquipmentSlotWeapon4:case S.EquipmentSlotWeapon5:case S.EquipmentSlotWeapon6:return L.EquipmentSlotWeapon;case S.EquipmentSlotArmor1:case S.EquipmentSlotArmor2:case S.EquipmentSlotArmor3:case S.EquipmentSlotArmor4:case S.EquipmentSlotArmor5:case S.EquipmentSlotArmor6:return L.EquipmentSlotArmor;case S.EquipmentSlotJewelry1:case S.EquipmentSlotJewelry2:case S.EquipmentSlotJewelry3:case S.EquipmentSlotJewelry4:case S.EquipmentSlotJewelry5:case S.EquipmentSlotJewelry6:return L.EquipmentSlotJewelry;case S.Alchemist1:case S.Alchemist2:case S.Alchemist3:case S.Alchemist4:case S.Alchemist5:return L.Alchemist;case S.DarkAttack1:case S.DarkAttack2:case S.DarkAttack3:case S.DarkAttack4:return L.DarkDamage;case S.LightAttack1:case S.LightAttack2:case S.LightAttack3:case S.LightAttack4:return L.LightDamage;case S.EquipmentProf1:case S.EquipmentProf2:case S.EquipmentProf3:case S.EquipmentProf4:case S.EquipmentProf5:return L.EquipmentProficiency;case S.DarkResistance1:case S.DarkResistance2:case S.DarkResistance3:case S.DarkResistance4:case S.DarkResistance5:return L.DarkResistance;case S.FireResistance1:case S.FireResistance2:case S.FireResistance3:case S.FireResistance4:case S.FireResistance5:return L.FireResistance;case S.ThunderResistance1:case S.ThunderResistance2:case S.ThunderResistance3:case S.ThunderResistance4:case S.ThunderResistance5:return L.ThunderResistance;case S.IceResistance1:case S.IceResistance2:case S.IceResistance3:case S.IceResistance4:case S.IceResistance5:return L.IceResistance;case S.LightResistance1:case S.LightResistance2:case S.LightResistance3:case S.LightResistance4:case S.LightResistance5:return L.LightResistance;case S.FireAttack1:case S.FireAttack2:case S.FireAttack3:case S.FireAttack4:return L.FireDamage;case S.IceAttack1:case S.IceAttack2:case S.IceAttack3:case S.IceAttack4:return L.IceDamage;case S.SkillMaster1:case S.SkillMaster2:case S.SkillMaster3:case S.SkillMaster4:return L.SkillMaster;case S.ThunderAttack1:case S.ThunderAttack2:case S.ThunderAttack3:case S.ThunderAttack4:return L.ThunderDamage;case S.PhysicalAttack1:case S.PhysicalAttack2:case S.PhysicalAttack3:case S.PhysicalAttack4:return L.PhysicalDamage;case S.PotionSlot1:case S.PotionSlot2:case S.PotionSlot3:return L.PotionSlot;case S.Cooperation1:case S.Cooperation2:case S.Cooperation3:return L.Cooperation;case S.Survival1:case S.Survival2:case S.Survival3:case S.Survival4:return L.Survival;case S.ExplorerOfSD1:case S.ExplorerOfSD2:case S.ExplorerOfSD3:case S.ExplorerOfSD4:case S.ExplorerOfSD5:case S.ExplorerOfSD6:case S.ExplorerOfSD7:case S.ExplorerOfSD8:case S.ExplorerOfSD9:case S.ExplorerOfSD10:case S.ExplorerOfSD11:case S.ExplorerOfSD12:case S.ExplorerOfSD13:case S.ExplorerOfSD14:case S.ExplorerOfSD15:return L.ExplorerOfSD;case S.MetalHunter1:case S.MetalHunter2:case S.MetalHunter3:case S.MetalHunter4:case S.MetalHunter5:case S.MetalHunter6:case S.MetalHunter7:case S.MetalHunter8:case S.MetalHunter9:return L.MetalHunter;case S.Porter1:case S.Porter2:case S.Porter3:case S.Porter4:case S.Porter5:case S.Porter6:return L.MoveSpeed;case S.Quester1:case S.Quester2:case S.Quester3:case S.Quester4:case S.Quester5:case S.Quester6:case S.Quester7:case S.Quester8:case S.Quester9:case S.Quester10:return L.Quester;case S.MonsterDistinguisher1:case S.MonsterDistinguisher2:case S.MonsterDistinguisher3:case S.MonsterDistinguisher4:case S.MonsterDistinguisher5:case S.MonsterDistinguisher6:case S.MonsterDistinguisher7:case S.MonsterDistinguisher8:return L.MonsterDistinguisher;default:return 0}}getTitleLevel(){switch(this.kindTitle){case S.EquipmentSlotWeapon1:case S.EquipmentSlotArmor1:case S.EquipmentSlotJewelry1:case S.Alchemist1:case S.ExplorerOfSD1:case S.EquipmentProf1:case S.DarkAttack1:case S.FireAttack1:case S.IceAttack1:case S.ThunderAttack1:case S.LightAttack1:case S.LightResistance1:case S.DarkResistance1:case S.FireResistance1:case S.ThunderResistance1:case S.IceResistance1:case S.PhysicalAttack1:case S.PotionSlot1:case S.SkillMaster1:case S.Survival1:case S.Cooperation1:case S.MetalHunter1:case S.Porter1:case S.Quester1:case S.MonsterDistinguisher1:return 1;case S.EquipmentSlotWeapon2:case S.EquipmentSlotArmor2:case S.EquipmentSlotJewelry2:case S.Alchemist2:case S.ExplorerOfSD2:case S.EquipmentProf2:case S.DarkAttack2:case S.FireAttack2:case S.IceAttack2:case S.ThunderAttack2:case S.LightAttack2:case S.LightResistance2:case S.DarkResistance2:case S.FireResistance2:case S.ThunderResistance2:case S.IceResistance2:case S.PhysicalAttack2:case S.PotionSlot2:case S.SkillMaster2:case S.Survival2:case S.Cooperation2:case S.MetalHunter2:case S.Porter2:case S.Quester2:case S.MonsterDistinguisher2:return 2;case S.EquipmentSlotWeapon3:case S.EquipmentSlotArmor3:case S.EquipmentSlotJewelry3:case S.Alchemist3:case S.ExplorerOfSD3:case S.EquipmentProf3:case S.DarkAttack3:case S.FireAttack3:case S.IceAttack3:case S.ThunderAttack3:case S.LightAttack3:case S.LightResistance3:case S.DarkResistance3:case S.FireResistance3:case S.ThunderResistance3:case S.IceResistance3:case S.PhysicalAttack3:case S.PotionSlot3:case S.SkillMaster3:case S.Survival3:case S.Cooperation3:case S.MetalHunter3:case S.Porter3:case S.Quester3:case S.MonsterDistinguisher3:return 3;case S.EquipmentSlotWeapon4:case S.EquipmentSlotArmor4:case S.EquipmentSlotJewelry4:case S.Alchemist4:case S.ExplorerOfSD4:case S.EquipmentProf4:case S.DarkAttack4:case S.FireAttack4:case S.IceAttack4:case S.ThunderAttack4:case S.LightAttack4:case S.LightResistance4:case S.DarkResistance4:case S.FireResistance4:case S.ThunderResistance4:case S.IceResistance4:case S.PhysicalAttack4:case S.SkillMaster4:case S.Survival4:case S.MetalHunter4:case S.Porter4:case S.Quester4:case S.MonsterDistinguisher4:return 4;case S.EquipmentSlotWeapon5:case S.EquipmentSlotArmor5:case S.EquipmentSlotJewelry5:case S.Alchemist5:case S.ExplorerOfSD5:case S.EquipmentProf5:case S.ThunderResistance5:case S.LightResistance5:case S.DarkResistance5:case S.FireResistance5:case S.IceResistance5:case S.MetalHunter5:case S.Porter5:case S.Quester5:case S.MonsterDistinguisher5:return 5;case S.EquipmentSlotWeapon6:case S.EquipmentSlotArmor6:case S.EquipmentSlotJewelry6:case S.ExplorerOfSD6:case S.MetalHunter6:case S.Porter6:case S.Quester6:case S.MonsterDistinguisher6:return 6;case S.ExplorerOfSD7:case S.MetalHunter7:case S.Quester7:case S.MonsterDistinguisher7:return 7;case S.ExplorerOfSD8:case S.MetalHunter8:case S.Quester8:case S.MonsterDistinguisher8:return 8;case S.ExplorerOfSD9:case S.MetalHunter9:case S.Quester9:return 9;case S.ExplorerOfSD10:case S.Quester10:return 10;case S.ExplorerOfSD11:return 11;case S.ExplorerOfSD12:return 12;case S.ExplorerOfSD13:return 13;case S.ExplorerOfSD14:return 14;case S.ExplorerOfSD15:return 15;default:return 0}}Start(){this.StartQuest(),this.SetRewardEffect()}SetRewardEffect(){switch(this.kindGlobal){case _.Nitro2:this.SetRewardNitro(1e3);break;case _.Nitro3:this.SetRewardNitro(2e3);break;case _.Nitro4:this.SetRewardNitro(3e3);break;case _.Nitro5:this.SetRewardNitro(4e3);break;case _.Nitro6:this.SetRewardNitro(5e3);break;case _.Nitro7:this.SetRewardNitro(6e3);break;case _.Nitro8:this.SetRewardNitro(7e3);break;case _.Capture1:this.SetRewardCapture(.1);break;case _.Capture2:this.SetRewardCapture(.2);break;case _.Capture3:this.SetRewardCapture(.3);break;case _.Capture4:this.SetRewardCapture(.4);break;case _.Capture5:this.SetRewardCapture(.5);break;case _.Alchemy1:this.SetReward(this.data.alchemy.catalyst.criticalChanceMultiplier,i.Mul,.25);break;case _.Alchemy2:this.SetReward(this.data.alchemy.maxMysteriousWaterExpandedCapNum,i.Add,100);break;case _.Alchemy3:this.SetReward(this.data.potion.potionMaxLevel,i.Add,25);break;case _.Alchemy4:this.SetReward(this.data.alchemy.catalyst.catalystLevelCap,i.Add,25);break;case _.Alchemy5:this.SetReward(this.data.alchemy.catalyst.catalystCostReduction,i.Add,.25);break;case _.Alchemy6:this.SetReward(this.data.alchemy.catalyst.criticalChanceMultiplier,i.Mul,.25),this.SetReward(this.data.alchemy.maxMysteriousWaterExpandedCapNum,i.Add,250);break;case _.Alchemy7:this.SetReward(this.data.potion.potionMaxLevel,i.Add,25),this.SetReward(this.data.alchemy.catalyst.catalystLevelCap,i.Add,25);break;case _.Alchemy8:this.SetReward(this.data.alchemy.alchemyPointGainMultiplier,i.Add,1),this.SetReward(this.data.alchemy.catalyst.catalystCostReduction,i.Add,.25);break;case _.Upgrade9:break;case _.Upgrade10:break;case _.Upgrade11:break;case _.Upgrade12:break;case _.Upgrade13:break;case _.Nitro9:this.SetRewardNitro(8e3);break;case _.Nitro10:this.SetRewardNitro(9e3);break;case _.Nitro11:this.SetRewardNitro(1e4);break;case _.Nitro12:this.SetRewardNitro(2e4);break;case _.Nitro13:this.SetRewardNitro(3e4);break;case _.Nitro14:this.SetRewardNitro(4e4);break;case _.Nitro15:this.SetRewardNitro(5e4);break;case _.Capture6:this.SetRewardCapture(.75);break;case _.Capture7:this.SetRewardCapture(1);break;case _.Capture8:this.SetRewardCapture(2);break;case _.Capture9:this.SetRewardCapture(3);break;case _.Capture10:this.SetRewardCapture(5);break;case _.Capture11:this.SetRewardCapture(10);break;case _.Capture12:this.SetRewardCapture(50);break;case _.Capture13:this.SetRewardCapture(100);break;case _.Capture14:this.SetRewardCapture(150);break;case _.Capture15:this.SetRewardCapture(250);break;case _.Capture16:this.SetRewardCapture(500);break;case _.SD2:for(let t=0;t<H.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,i.Mul,.1);break;case _.SD3:for(let t=0;t<H.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,i.Mul,.2);break;case _.SD5:for(let t=0;t<H.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,i.Mul,.3);break;case _.SD6:for(let t=0;t<H.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,i.Mul,.4);break;case _.SD8:for(let t=0;t<H.HeroKind;t++)this.SetReward(this.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier,i.Mul,.5);break;case _.Expedition:this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new l(n.Quest,i.Add,()=>1,()=>this.isCleared));break}}StartQuest(){}IsUnlocked(){return!0}get totalClearedNumGeneral(){return this.kind!=de.General?0:this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]}set totalClearedNumGeneral(t){this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]=t}get totalClearedNumGeneralThisAscension(){return this.kind!=de.General?0:this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]}set totalClearedNumGeneralThisAscension(t){this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]=t}get maxReachedClearedNumGeneral(){return this.kind!=de.General?0:this.data.source.maxReachedGeneralQuestClearedNums[this.kindGeneral]}set maxReachedClearedNumGeneral(t){this.data.source.maxReachedGeneralQuestClearedNums[this.kindGeneral]=t}get isPersistentUnlocked(){return this.kind==de.General&&this.data.source.isPersistentUnlockedQuestGeneral[this.kindGeneral]}set isPersistentUnlocked(t){this.data.source.isPersistentUnlockedQuestGeneral[this.kindGeneral]=t}get isClearedOnce(){return this.kind!=de.General||this.data.source.isClearedQuestGeneralOnce[this.kindGeneral]}set isClearedOnce(t){this.data.source.isClearedQuestGeneralOnce[this.kindGeneral]=t}get isCleared(){switch(this.kind){case de.Global:return this.data.source.isClearedQuestsGlobal[this.kindGlobal];case de.Title:switch(this.heroKind){case E.Warrior:return this.data.source.isClearedQuestsTitleWarrior[this.kindTitle];case E.Wizard:return this.data.source.isClearedQuestsTitleWizard[this.kindTitle];case E.Angel:return this.data.source.isClearedQuestsTitleAngel[this.kindTitle];case E.Thief:return this.data.source.isClearedQuestsTitleThief[this.kindTitle];case E.Archer:return this.data.source.isClearedQuestsTitleArcher[this.kindTitle];case E.Tamer:return this.data.source.isClearedQuestsTitleTamer[this.kindTitle]}default:return!1}}set isCleared(t){switch(this.kind){case de.Global:this.data.source.isClearedQuestsGlobal[this.kindGlobal]=t;break;case de.Title:switch(this.heroKind){case E.Warrior:this.data.source.isClearedQuestsTitleWarrior[this.kindTitle]=t;break;case E.Wizard:this.data.source.isClearedQuestsTitleWizard[this.kindTitle]=t;break;case E.Angel:this.data.source.isClearedQuestsTitleAngel[this.kindTitle]=t;break;case E.Thief:this.data.source.isClearedQuestsTitleThief[this.kindTitle]=t;break;case E.Archer:this.data.source.isClearedQuestsTitleArcher[this.kindTitle]=t;break;case E.Tamer:this.data.source.isClearedQuestsTitleTamer[this.kindTitle]=t;break}}}NameString(){return $e.Quest(this)}SetRewardCapture(t){this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.Quest,i.Mul,()=>t,()=>this.isCleared))}SetRewardNitro(t){this.data.nitro.nitroCap.RegisterMultiplier(new l(n.Quest,i.Add,()=>t,()=>this.isCleared))}SetReward(t,s,a){t.RegisterMultiplier(new l(n.Quest,s,()=>a,()=>this.isCleared))}}var xe=(e=>(e[e.Tutorial=0]="Tutorial",e[e.Upgrade=1]="Upgrade",e[e.Nitro=2]="Nitro",e[e.Capture=3]="Capture",e[e.Alchemy=4]="Alchemy",e))(xe||{});class Ym{constructor(t){c(this,"data");c(this,"globalQuestList",[]);c(this,"globalQuestListTutorial",[]);c(this,"globalQuestListUpgrade",[]);c(this,"globalQuestListNitro",[]);c(this,"globalQuestListCapture",[]);c(this,"globalQuestListAlchemy",[]);c(this,"dailyQuestList",[]);c(this,"titleQuestList",Array(H.HeroKind));c(this,"generalQuestList",Array(H.HeroKind));c(this,"globalQuests",[]);c(this,"dailyQuests");c(this,"titleQuests",Array(H.HeroKind).fill([]));c(this,"generalQuests");c(this,"portalOrbBonusFromDailyQuest");c(this,"sdRefreshTicketFromDailyQuest");c(this,"acceptableNum",Array(H.HeroKind));c(this,"quest");c(this,"generalQuestClearGain",Array(H.HeroKind));this.data=t;for(let s=0;s<this.acceptableNum.length;s++)this.acceptableNum[s]=new x(new l(n.Base,i.Add,()=>3));this.portalOrbBonusFromDailyQuest=new x,this.sdRefreshTicketFromDailyQuest=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.generalQuestClearGain.length;s++)this.generalQuestClearGain[s]=new x(new l(n.Base,i.Add,()=>1));this.globalQuestListTutorial.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Tutorial,kindGlobal:_.Expedition})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro1})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro2})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro3})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro4})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro5})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro6})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro7})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro8})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro9})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro10})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro11})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro12})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro13})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro14})),this.globalQuestListNitro.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Nitro,kindGlobal:_.Nitro15})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture1})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture2})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture3})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture4})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture5})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture6})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture7})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture8})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture9})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture10})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture11})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture12})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture13})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture14})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture15})),this.globalQuestListCapture.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Capture,kindGlobal:_.Capture16})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy1})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy2})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy3})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy4})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy5})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy6})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy7})),this.globalQuestListAlchemy.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Alchemy,kindGlobal:_.Alchemy8})),this.globalQuestList.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Tutorial,kindGlobal:_.SD2})),this.globalQuestList.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Tutorial,kindGlobal:_.SD3})),this.globalQuestList.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Tutorial,kindGlobal:_.SD5})),this.globalQuestList.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Tutorial,kindGlobal:_.SD6})),this.globalQuestList.push(new Ge(this.data,{kind:de.Global,globalQuestType:xe.Tutorial,kindGlobal:_.SD8})),this.globalQuests=[...this.globalQuestListNitro,...this.globalQuestListCapture,...this.globalQuestListAlchemy,...this.globalQuestList,...this.globalQuestListTutorial];for(let s=0;s<this.titleQuestList.length;s++){this.titleQuestList[s]=[];for(let a=0;a<H.QuestKindTitle;a++){const u=S[a];this.titleQuestList[s].push(new Ge(this.data,{kind:de.Title,kindTitle:S[u],heroKind:s}))}this.titleQuests=[...this.titleQuestList]}}Start(){this.SetTitleEffectAll();for(let t=0;t<this.globalQuests.length;t++)this.globalQuests[t].Start();for(let t=0;t<H.HeroKind;t++)for(let s=0;s<this.titleQuests[t].length;s++)this.titleQuests[t][s].Start()}TitleLevel(t,s){let a=0;for(let u=0;u<this.titleQuests[t].length;u++)this.titleQuests[t][u].rewardTitleKind==s&&this.titleQuests[t][u].isCleared&&this.titleQuests[t][u].rewardTitleLevel>a&&(a=this.titleQuests[t][u].rewardTitleLevel);return a}TitleEffectValue(t,s){return Nt.TitleEffectValue(s,this.TitleLevel(t,s))}SetTitleEffectAll(){for(let t=0;t<H.TitleKind;t++)this.SetTitleEffect(t)}SetTitleEffect(t){switch(t){case L.SkillMaster:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.SkillSlotNum(s).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.HeroStats(s,A.SkillProficiencyGain).RegisterMultiplier(u)}break;case L.MonsterDistinguisher:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.MonsterDistinguishMaxLevel(s).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.MonsterCaptureMaxLevelIncrement(s).RegisterMultiplier(u)}break;case L.EquipmentSlotWeapon:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipWeaponUnlockedNum[s].RegisterMultiplier(a)}break;case L.EquipmentSlotArmor:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipArmorUnlockedNum[s].RegisterMultiplier(a)}break;case L.EquipmentSlotJewelry:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipJewelryUnlockedNum[s].RegisterMultiplier(a)}break;case L.PotionSlot:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.inventory.equipPotionUnlockedNum[s].RegisterMultiplier(a)}break;case L.EquipmentProficiency:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.EquipmentProficiencyGain).RegisterMultiplier(a)}break;case L.PhysicalDamage:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,C.Physical).RegisterMultiplier(a)}break;case L.FireDamage:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,C.Fire).RegisterMultiplier(a)}break;case L.IceDamage:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,C.Ice).RegisterMultiplier(a)}break;case L.ThunderDamage:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,C.Thunder).RegisterMultiplier(a)}break;case L.LightDamage:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,C.Light).RegisterMultiplier(a)}break;case L.DarkDamage:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.ElementDamage(s,C.Dark).RegisterMultiplier(a)}break;case L.Alchemist:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(a)}break;case L.Survival:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>.5,()=>!1);this.data.stats.HeroStats(s,A.PhysCritChance).RegisterMultiplier(a),this.data.stats.HeroStats(s,A.MagCritChance).RegisterMultiplier(a)}break;case L.FireResistance:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.FireRes).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,C.Fire).RegisterMultiplier(u)}break;case L.IceResistance:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.IceRes).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,C.Ice).RegisterMultiplier(u)}break;case L.ThunderResistance:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.ThunderRes).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,C.Thunder).RegisterMultiplier(u)}break;case L.LightResistance:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.LightRes).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,C.Light).RegisterMultiplier(u)}break;case L.DarkResistance:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.DarkRes).RegisterMultiplier(a);const u=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).sub);this.data.stats.ElementInvalid(s,C.Dark).RegisterMultiplier(u)}break;case L.Cooperation:break;case L.DebuffResistance:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.DebuffRes).RegisterMultiplier(a)}break;case L.MoveSpeed:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.stats.HeroStats(s,A.MoveSpeed).RegisterMultiplier(a)}break;case L.Quester:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Add,()=>this.TitleEffectValue(s,t).main);this.generalQuestClearGain[s].RegisterMultiplier(a)}break;case L.ExplorerOfSD:for(let s=0;s<H.HeroKind;s++){const a=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).main);this.data.battles[s].superDungeonCtrl.damageMultiplier.RegisterMultiplier(a);const u=new l(n.Title,i.Mul,()=>this.TitleEffectValue(s,t).sub);this.data.superStats.Hero(s).fameGain.RegisterMultiplier(u)}break}}}const Na={tierHeroLevel:[100,200,300,500,750,1e3],Upgrade:(e,t)=>{switch(e){case V.ExpGain:return[50,50,!0,100,.25*t];case V.EQRequirement:return[75,75,!0,100,5*t];case V.QuestAcceptableNum:return[250,Math.pow(10,.2),!1,20,t];case V.BasicAtk:return[200,200,!0,50,.05*t];case V.BasicMAtk:return[200,200,!0,50,.05*t];case V.BasicHp:return[200,200,!0,50,.25*t];case V.BasicDef:return[200,200,!0,50,.05*t];case V.BasicMDef:return[200,200,!0,50,.05*t];case V.BasicMp:return[200,200,!0,50,.1*t];case V.StoneGain:return[100,100,!0,100,t];case V.CrystalGain:return[100,100,!0,100,t];case V.LeafGain:return[100,100,!0,100,t];case V.StoneGoldCap:return[100,100,!0,100,.05*t];case V.CrystalGoldCap:return[100,100,!0,100,.05*t];case V.LeafGoldCap:return[100,100,!0,100,.05*t];case V.SkillProfGain:return[100,100,!0,100,.25*t];case V.SkillRankCostReduction:return[100,100,!0,100,Math.pow(.75,t)];case V.ClassSkillSlot:return[1e4,100,!1,1,t];case V.ShareSkillPassive:return[2500,2,!1,10,t*.1];case V.T1ExpGainBoost:return[250,250,!0,100,.1*t];case V.T1RebirthPointGainBoost:return[500,500,!0,10,.1*t];case V.T1BasicAtkBoost:return[200,200,!0,50,.1*t];case V.T1BasicMAtkBoost:return[200,200,!0,50,.1*t];case V.T1BasicHpBoost:return[200,200,!0,50,.1*t];case V.T1BasicDefBoost:return[200,200,!0,50,.1*t];case V.T1BasicMDefBoost:return[200,200,!0,50,.1*t];case V.T1BasicMpBoost:return[200,200,!0,50,.1*t];case V.T1StoneGainBoost:return[100,100,!0,100,.2*t];case V.T1CrystalGainBoost:return[100,100,!0,100,.2*t];case V.T1LeafGainBoost:return[100,100,!0,100,.2*t];case V.T1StoneGoldCapBoost:return[100,100,!0,100,.05*t];case V.T1CrystalGoldCapBoost:return[100,100,!0,100,.05*t];case V.T1LeafGoldCapBoost:return[100,100,!0,100,.05*t];case V.EQProfGain:return[100,100,!0,100,.25*t];case V.EQLevelCap:return[5e3,10,!1,2,5*t];case V.EQWeaponSlot:return[250,5,!1,5,t];case V.EQArmorSlot:return[250,5,!1,5,t];case V.EQJewelrySlot:return[250,5,!1,5,t];case V.T2ExpGainBoost:return[250,250,!0,100,.1*t];case V.T2SkillProfGainBoost:return[250,250,!0,100,.1*t];case V.T2RebirthPointGainBoost:return[500,500,!0,10,.1*t];case V.T2BasicAtkBoost:return[200,200,!0,50,.1*t];case V.T2BasicMAtkBoost:return[200,200,!0,50,.1*t];case V.T2BasicHpBoost:return[200,200,!0,50,.1*t];case V.T2BasicDefBoost:return[200,200,!0,50,.1*t];case V.T2BasicMDefBoost:return[200,200,!0,50,.1*t];case V.T2BasicMpBoost:return[200,200,!0,50,.1*t];case V.T2StoneGainBoost:return[100,100,!0,100,.2*t];case V.T2CrystalGainBoost:return[100,100,!0,100,.2*t];case V.T2LeafGainBoost:return[100,100,!0,100,.2*t];case V.T2StoneGoldCapBoost:return[100,100,!0,100,.05*t];case V.T2CrystalGoldCapBoost:return[100,100,!0,100,.05*t];case V.T2LeafGoldCapBoost:return[100,100,!0,100,.05*t];default:return[1e4,100,!1,1,0]}}};var rt;class Ee{constructor(t,s){Ht(this,rt,void 0);c(this,"rebirth");c(this,"kind");c(this,"effectMultiFactor");c(this,"isGlobalEffect");this.rebirth=t,Vt(this,rt,t.data),this.kind=s,this.effectMultiFactor=new x(new l(n.Base,i.Add,()=>1))}get level(){switch(this.rebirth.heroKind){case E.Warrior:return b(this,rt).source.rebirthUpgradeLevelsWarrior[this.kind];case E.Wizard:return b(this,rt).source.rebirthUpgradeLevelsWizard[this.kind];case E.Angel:return b(this,rt).source.rebirthUpgradeLevelsAngel[this.kind];case E.Thief:return b(this,rt).source.rebirthUpgradeLevelsTamer[this.kind];case E.Archer:return b(this,rt).source.rebirthUpgradeLevelsArcher[this.kind];case E.Tamer:return b(this,rt).source.rebirthUpgradeLevelsTamer[this.kind];default:return 0}}get rebirthCtrl(){return b(this,rt).rebirth}get heroKind(){return this.rebirth.heroKind}Start(){this.SetEffect()}get effectValue(){return Na.Upgrade(this.kind,this.level)[4]*this.effectMultiFactor.Value()}SetEffect(){switch(this.kind){case V.ExpGain:b(this,rt).stats.HeroStats(this.heroKind,A.ExpGain).RegisterMultiplier(new l(n.Rebirth,i.Mul,()=>this.effectValue));break;case V.EQRequirement:b(this,rt).stats.LevelForEquipment(this.heroKind).RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.QuestAcceptableNum:break;case V.BasicAtk:b(this,rt).stats.SetEffectBasicStatsPerLevel(m.ATK,new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.BasicMAtk:b(this,rt).stats.SetEffectBasicStatsPerLevel(m.MATK,new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.BasicHp:b(this,rt).stats.SetEffectBasicStatsPerLevel(m.HP,new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.BasicDef:b(this,rt).stats.SetEffectBasicStatsPerLevel(m.DEF,new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.BasicMDef:b(this,rt).stats.SetEffectBasicStatsPerLevel(m.MDEF,new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.BasicMp:b(this,rt).stats.SetEffectBasicStatsPerLevel(m.MP,new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.StoneGain:b(this,rt).stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.Rebirth,i.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.CrystalGain:b(this,rt).stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.Rebirth,i.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.LeafGain:b(this,rt).stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.Rebirth,i.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.StoneGoldCap:this.isGlobalEffect=!0;break;case V.CrystalGoldCap:this.isGlobalEffect=!0;break;case V.LeafGoldCap:this.isGlobalEffect=!0;break;case V.SkillProfGain:b(this,rt).stats.HeroStats(this.heroKind,A.SkillProficiencyGain).RegisterMultiplier(new l(n.Rebirth,i.Mul,()=>this.effectValue));break;case V.SkillRankCostReduction:b(this,rt).skill.skillRankCostFactors[this.heroKind].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.ClassSkillSlot:b(this,rt).stats.SkillSlotNum(this.heroKind).RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.ShareSkillPassive:b(this,rt).skill.skillPassiveShareFactors[this.heroKind].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T1ExpGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.ExpGain).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T1RebirthPointGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).rebirthPointGainFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T1BasicAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.BasicAtk).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1BasicMAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.BasicMAtk).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1BasicHpBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.BasicHp).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1BasicDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.BasicDef).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1BasicMDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.BasicMDef).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1BasicMpBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.BasicMp).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1StoneGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.StoneGain).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1CrystalGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.CrystalGain).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1LeafGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.LeafGain).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1StoneGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.StoneGoldCap).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1CrystalGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.CrystalGoldCap).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T1LeafGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(V.LeafGoldCap).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.EQProfGain:b(this,rt).stats.HeroStats(this.heroKind,A.EquipmentProficiencyGain).RegisterMultiplier(new l(n.Rebirth,i.Mul,()=>this.effectValue));break;case V.EQLevelCap:b(this,rt).equipment.maxLevels[this.heroKind].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.EQWeaponSlot:b(this,rt).inventory.equipWeaponUnlockedNum[this.heroKind].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.EQArmorSlot:b(this,rt).inventory.equipArmorUnlockedNum[this.heroKind].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.EQJewelrySlot:b(this,rt).inventory.equipJewelryUnlockedNum[this.heroKind].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T2ExpGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1ExpGainBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T2SkillProfGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.SkillProfGain).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T2RebirthPointGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).rebirthPointGainFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue));break;case V.T2BasicAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1BasicAtkBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2BasicMAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1BasicMAtkBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2BasicHpBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1BasicHpBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2BasicDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1BasicDefBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2BasicMDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1BasicMDefBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2BasicMpBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1BasicMpBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2StoneGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1StoneGainBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2CrystalGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1CrystalGainBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2LeafGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1LeafGainBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2StoneGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1StoneGoldCapBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2CrystalGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1CrystalGoldCapBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case V.T2LeafGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(V.T1LeafGoldCapBoost).effectMultiFactor.RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break}}}rt=new WeakMap;class wa{constructor(t,s,a){c(this,"data");c(this,"rebirthCtrl");c(this,"additionalAbilityPoint");c(this,"bonusEffectFactorOneDownTier");c(this,"rebirthPointGainFactor");c(this,"rebirthPointKinds",[]);c(this,"heroKind");c(this,"tier");c(this,"rebirthPoint");c(this,"initRebirthPoint");c(this,"rebirthUpgrades");this.data=t,this.rebirthCtrl=this.data.rebirth,this.tier=s,this.heroKind=a,this.Awake()}Awake(){switch(this.additionalAbilityPoint=new x,this.additionalAbilityPoint.minValue=()=>0,this.bonusEffectFactorOneDownTier=new x,this.initRebirthPoint=new x,this.rebirthPointGainFactor=new x(new l(n.Base,i.Add,()=>1)),this.tier){case 0:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ee(this,V.ExpGain),this.rebirthUpgrades[1]=new Ee(this,V.EQRequirement),this.rebirthUpgrades[2]=new Ee(this,V.QuestAcceptableNum),this.heroKind){case E.Warrior:this.rebirthUpgrades[3]=new Ee(this,V.BasicAtk),this.rebirthUpgrades[4]=new Ee(this,V.StoneGain);return;case E.Wizard:this.rebirthUpgrades[3]=new Ee(this,V.BasicMAtk),this.rebirthUpgrades[4]=new Ee(this,V.CrystalGain);return;case E.Angel:this.rebirthUpgrades[3]=new Ee(this,V.BasicHp),this.rebirthUpgrades[4]=new Ee(this,V.LeafGain);return;case E.Thief:this.rebirthUpgrades[3]=new Ee(this,V.BasicDef),this.rebirthUpgrades[4]=new Ee(this,V.StoneGoldCap);return;case E.Archer:this.rebirthUpgrades[3]=new Ee(this,V.BasicMDef),this.rebirthUpgrades[4]=new Ee(this,V.CrystalGoldCap);return;case E.Tamer:this.rebirthUpgrades[3]=new Ee(this,V.BasicMp),this.rebirthUpgrades[4]=new Ee(this,V.LeafGoldCap);return;default:return}case 1:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ee(this,V.SkillProfGain),this.rebirthUpgrades[1]=new Ee(this,V.SkillRankCostReduction),this.rebirthUpgrades[2]=new Ee(this,V.ClassSkillSlot),this.rebirthUpgrades[3]=new Ee(this,V.ShareSkillPassive),this.rebirthUpgrades[4]=new Ee(this,V.T1ExpGainBoost),this.rebirthUpgrades[5]=new Ee(this,V.T1RebirthPointGainBoost),this.heroKind){case E.Warrior:this.rebirthUpgrades[6]=new Ee(this,V.T1BasicAtkBoost),this.rebirthUpgrades[7]=new Ee(this,V.T1StoneGainBoost);return;case E.Wizard:this.rebirthUpgrades[6]=new Ee(this,V.T1BasicMAtkBoost),this.rebirthUpgrades[7]=new Ee(this,V.T1CrystalGainBoost);return;case E.Angel:this.rebirthUpgrades[6]=new Ee(this,V.T1BasicHpBoost),this.rebirthUpgrades[7]=new Ee(this,V.T1LeafGainBoost);return;case E.Thief:this.rebirthUpgrades[6]=new Ee(this,V.T1BasicDefBoost),this.rebirthUpgrades[7]=new Ee(this,V.T1StoneGoldCapBoost);return;case E.Archer:this.rebirthUpgrades[6]=new Ee(this,V.T1BasicMDefBoost),this.rebirthUpgrades[7]=new Ee(this,V.T1CrystalGoldCapBoost);return;case E.Tamer:this.rebirthUpgrades[6]=new Ee(this,V.T1BasicMpBoost),this.rebirthUpgrades[7]=new Ee(this,V.T1LeafGoldCapBoost);return;default:return}case 2:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ee(this,V.EQProfGain),this.rebirthUpgrades[1]=new Ee(this,V.EQLevelCap),this.rebirthUpgrades[2]=new Ee(this,V.EQWeaponSlot),this.rebirthUpgrades[3]=new Ee(this,V.EQArmorSlot),this.rebirthUpgrades[4]=new Ee(this,V.EQJewelrySlot),this.rebirthUpgrades[5]=new Ee(this,V.T2ExpGainBoost),this.rebirthUpgrades[6]=new Ee(this,V.T2SkillProfGainBoost),this.rebirthUpgrades[7]=new Ee(this,V.T2RebirthPointGainBoost),this.heroKind){case E.Warrior:this.rebirthUpgrades[8]=new Ee(this,V.T2BasicAtkBoost),this.rebirthUpgrades[9]=new Ee(this,V.T2StoneGainBoost);return;case E.Wizard:this.rebirthUpgrades[8]=new Ee(this,V.T2BasicMAtkBoost),this.rebirthUpgrades[9]=new Ee(this,V.T2CrystalGainBoost);return;case E.Angel:this.rebirthUpgrades[8]=new Ee(this,V.T2BasicHpBoost),this.rebirthUpgrades[9]=new Ee(this,V.T2LeafGainBoost);return;case E.Thief:this.rebirthUpgrades[8]=new Ee(this,V.T2BasicDefBoost),this.rebirthUpgrades[9]=new Ee(this,V.T2StoneGoldCapBoost);return;case E.Archer:this.rebirthUpgrades[8]=new Ee(this,V.T2BasicMDefBoost),this.rebirthUpgrades[9]=new Ee(this,V.T2CrystalGoldCapBoost);return;case E.Tamer:this.rebirthUpgrades[8]=new Ee(this,V.T2BasicMpBoost),this.rebirthUpgrades[9]=new Ee(this,V.T2LeafGoldCapBoost);return;default:return}}}Start(){for(let t=0;t<this.rebirthUpgrades.length;t++)this.rebirthUpgrades[t].Start()}Upgrade(t){for(let s=0;s<this.rebirthUpgrades.length;s++)if(this.rebirthUpgrades[s].kind==t)return this.rebirthUpgrades[s];return null}GetBonus(){}}var Qs;class Zm{constructor(t){Ht(this,Qs,void 0);c(this,"rebirth",Array(H.HeroKind));c(this,"requiredHeroLevelReduction");c(this,"tier1AbilityPointBonusLevelCap");c(this,"tier2AbilityPointBonusLevelCap");Vt(this,Qs,t),this.requiredHeroLevelReduction=new x(new l(n.Base,i.Add,()=>0),()=>100,()=>0),this.tier1AbilityPointBonusLevelCap=new x(new l(n.Base,i.Add,()=>Na.tierHeroLevel[1])),this.tier2AbilityPointBonusLevelCap=new x(new l(n.Base,i.Add,()=>Na.tierHeroLevel[2]));for(let s=0;s<H.HeroKind;s++)this.rebirth[s]=[],this.rebirth[s][0]=new wa(b(this,Qs),0,s),this.rebirth[s][1]=new wa(b(this,Qs),1,s),this.rebirth[s][2]=new wa(b(this,Qs),2,s)}Start(){for(let t=0;t<this.rebirth.length;t++)for(let s=0;s<this.rebirth[t].length;s++)this.rebirth[t][s].Start()}Rebirth(t,s){return this.rebirth[t][s]}SetPointMultiplier(t){for(let s=0;s<this.rebirth.length;++s)this.rebirth[s][0].rebirthPointGainFactor.RegisterMultiplier(t),this.rebirth[s][1].rebirthPointGainFactor.RegisterMultiplier(t),this.rebirth[s][2].rebirthPointGainFactor.RegisterMultiplier(t)}get currentHero(){return this.rebirth[b(this,Qs).source.currentHero]}}Qs=new WeakMap;class Qm{constructor(){c(this,"goldCap");c(this,"slimeCoinCap");c(this,"slimeCoinEfficiency");c(this,"slimeCoinInterest");c(this,"resources",Array(H.ResourceKind));this.goldCap=new x(new l(n.Base,i.Add,()=>1e3)),this.slimeCoinCap=new x,this.slimeCoinEfficiency=new x,this.slimeCoinInterest=new x(new l(n.Base,i.Add,()=>0),()=>.5,()=>0);for(let t=0;t<this.resources.length;t++)this.resources[t]=1}HeroResourceKind(t){switch(t){case E.Warrior:return j.Stone;case E.Wizard:return j.Crystal;case E.Angel:return j.Leaf;case E.Thief:return j.Stone;case E.Archer:return j.Crystal;case E.Tamer:return j.Leaf;default:return j.Stone}}HeroResource(t){this.resources[this.HeroResourceKind(t)]}Resource(t){return this.resources[t]}}class Km{constructor(){c(this,"shopItemList",[]);c(this,"shop_MaterialList",[]);c(this,"shop_TrapList",[]);c(this,"shop_BlessingList",[]);c(this,"shop_TownMaterialList",[]);c(this,"materialStockNum");c(this,"trapStockNum");c(this,"blessingStockNum");c(this,"sellPriceRate");c(this,"restockTimesec");c(this,"restockNumMaterial");c(this,"restockNumTrap");c(this,"restockNumBlessing");c(this,"convertTownMaterialAmount");this.materialStockNum=new x(new l(n.Base,i.Add,()=>1)),this.trapStockNum=new x(new l(n.Base,i.Add,()=>20)),this.blessingStockNum=new x(new l(n.Base,i.Add,()=>1)),this.sellPriceRate=new x(new l(n.Base,i.Add,()=>.1)),this.restockTimesec=new x(new l(n.Base,i.Add,()=>600)),this.restockNumMaterial=new x(new l(n.Base,i.Add,()=>1)),this.restockNumTrap=new x(new l(n.Base,i.Add,()=>1)),this.restockNumBlessing=new x(new l(n.Base,i.Add,()=>1)),this.convertTownMaterialAmount=new x(new l(n.Base,i.Add,()=>1))}Start(){}}class Ii{constructor(t){c(this,"data");c(this,"skills",Array(H.SkillKindWarrior));c(this,"stances",[]);c(this,"heroKind");this.data=t}get currentStanceId(){return 0}}var p=(e=>(e[e.BasicStats=0]="BasicStats",e[e.HeroStats=1]="HeroStats",e[e.GlobalStats=2]="GlobalStats",e[e.Others=3]="Others",e))(p||{});class d{constructor(t,s,a,u,o,M){c(this,"data");c(this,"skill");c(this,"level");c(this,"requiredLevel");c(this,"effectKind");c(this,"multiplierType");c(this,"value");c(this,"kind");this.data=t.data,this.effectKind=a,this.skill=t,this.level=t.level,this.requiredLevel=s,this.kind=u,this.multiplierType=o,this.value=M,this.SetEffect()}IsActivated(){return this.IsEnoughLevel()}IsEnoughLevel(){return this.level>=this.requiredLevel}SetEffect(){switch(this.effectKind){case p.BasicStats:for(let s=0;s<H.HeroKind;s++){let a=new l(n.SkillPassive,this.multiplierType,()=>this.EffectValue(s),()=>this.IsActivated);this.data.stats.BasicStats(s,this.kind).RegisterMultiplier(a)}break;case p.HeroStats:for(let s=0;s<H.HeroKind;s++){let a=new l(n.SkillPassive,this.multiplierType,()=>this.EffectValue(s),()=>this.IsActivated);this.data.stats.HeroStats(s,this.kind).RegisterMultiplier(a)}break;case p.GlobalStats:let t=new l(n.SkillPassive,this.multiplierType,()=>this.value*this.data.skill.skillPassiveShareFactors[this.skill.heroKind].Value(),()=>this.IsActivated());this.data.stats.globalStats[this.kind].RegisterMultiplier(t);break}}EffectValue(t){let s=this.value;return t!=this.skill.heroKind&&(s*=this.data.skill.skillPassiveShareFactors[this.skill.heroKind].Value()),s}}const Os={skillFactors:[[[1,.02,1,.025,0,0,1.5,0,80,50,0,50,0,0,0,1,0,1],[2,.05,1,.05,0,0,1.25,0,80,50,0,50,0,0,0,1,0,1],[6.5,.125,0,0,10,1,1.25,1,80,50,0,50,0,0,0,2,0,2],[35,.1,0,0,25,2.5,1,2,80,120,0,120,0,0,0,4,.04,8],[550,1.5,10,.05,100,5,2.75,2,120,80,0,80,.5,1/400,.9,1,0,1],[500,.75,0,0,240,5,3,3,150,150,0,300,0,0,0,1,0,1],[2e3,4.5,0,0,500,7.5,4,4,120,80,0,80,.5,1/400,.9,1,0,1],[600,1,0,0,600,10,2,5,300,300,2,500,0,0,0,2,.02,4],[20,.05,10,.05,0,0,1.5,1,500,50,0,50,0,0,0,1,0,1],[60,.2,30,.25,20,1,1.5,2,80,80,0,80,.9,1e-4,.95,1,0,1]],[[1,.02,1,.025,0,0,1.5,0,100,50,0,50,0,0,0,1,0,1],[4,.1,3,.05,0,0,2,0,120,80,0,80,0,0,0,1,0,1],[6,.1,0,0,30,2,2.5,1,120,120,0,200,0,0,0,1,.01,3],[900,.75,0,0,360,10,3,3,200,150,1,300,0,0,0,1,.01,3],[30,.125,10,.1,0,0,1.5,2,150,80,0,80,.1,1/400,.9,1,0,1],[70,.2,10,.1,20,1,1.5,2,100,50,0,50,.1,.001,.5,1,0,1],[1e3,1,0,0,500,12.5,2.5,4,1e3,250,0,500,.25,1/400,1,1,0,1],[10,.025,25,.5,0,0,1,1,200,50,0,50,.2,.002,.5,1,0,1],[30,.05,10,1,30,2,1,2,200,50,0,50,.5,.002,1,2,0,2],[2e3,1.5,0,0,1250,50,3.5,5,200,100,0,100,.5,.001,1,1,.02,4]],[[2,.005,1,.025,0,0,.75,0,150,50,0,50,0,0,0,1,.02,5],[2,.005,1,.025,0,0,.75,0,150,50,0,50,0,0,0,1,.02,5],[15,.075,0,0,30,1.5,3.5,1,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,2.5,1,1,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,10,1,2,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,10,1,2,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,20,20,1,3,1e3,0,0,0,0,0,0,1,0,1],[.25,1e-4,0,0,250,25,1,4,1e3,0,0,0,0,0,0,1,0,1],[250,.2,0,0,240,2,2.5,2,200,200,0,400,.8,.001,.95,1,.02,5],[10,.01,0,0,500,50,1,5,1e3,0,0,0,0,0,0,1,0,1]],[[1,.01,1,.025,0,0,1,0,80,50,0,50,0,0,0,1,0,1],[2,3/400,2,.05,0,0,.75,0,80,50,0,50,.05,1/400,.9,1,.02,3],[35,.125,0,0,25,1.5,1,2,200,50,0,50,0,0,0,2,.01,4],[100,.2,0,0,35,2,1.25,2,80,50,0,50,0,0,0,1,0,1],[150,.25,0,0,250,3.75,2,4,200,50,0,50,0,0,0,2,.02,4],[4,.05,0,0,20,2,2,1,80,120,0,120,.5,.005,.9,1,0,1],[20,.1,5,.1,30,2,1.25,1,500,50,0,50,.2,1/400,.9,1,.02,4],[10,.1,0,0,10,.5,2.5,2,80,50,0,50,0,0,0,1,0,1],[300,.25,0,0,150,3,2,3,150,150,0,300,.25,1/400,.9,1,0,1],[2500,2.5,0,0,400,5,2.75,5,80,50,0,50,.05,5e-5,.2,1,0,1]],[[1,.02,1,.025,0,0,1.5,0,300,80,0,80,0,0,0,1,0,1],[2,.015,2,.05,0,0,1.25,0,300,100,0,100,0,0,0,1,.02,5],[45,.05,0,0,35,2.5,1.5,2,300,100,0,100,0,0,0,5,.02,10],[1250,2.5,0,0,500,10,2,5,500,100,0,100,0,0,0,1,0,1],[6,.05,0,0,20,2,1.75,1,300,100,.5,250,.25,1/400,.9,1,.01,3],[20,.1,5,.1,10,1,1,1,500,150,0,150,.25,1/400,.9,1,0,1],[85,.25,0,0,50,4,2.25,2,300,100,.5,250,.25,1/400,.9,1,.01,3],[80,.15,0,0,200,5,3,3,500,100,0,100,.25,1/400,.9,8,0,8],[40,.1,0,0,400,30,5,4,500,500,0,500,.25,1/400,.9,4,.02,8],[-.35,1e-5,0,0,200,20,1,2,1e3,0,0,0,0,0,0,1,0,1]],[[1,.01,1,1,0,0,1,0,300,50,0,50,0,0,0,1,0,1],[2,.015,2,.05,0,0,1,0,1e3,0,0,0,0,0,0,1,0,1],[40,.2,30,.25,20,2,1.5,2,1e3,0,0,0,0,0,0,1,0,1],[150,1,0,0,200,5,2,3,1e3,0,0,0,0,0,0,1,0,1],[20,.1,0,0,30,2.5,3.5,1,1e3,0,0,0,0,0,0,1,0,1],[.25,.001,0,0,250,25,5,2,1e3,0,0,0,0,0,0,1,0,1],[1,.01,0,0,250,25,1,2,1e3,0,0,0,0,0,0,1,0,1],[1.5,25e-5,0,0,500,50,1,4,1e3,0,0,0,0,0,0,1,0,1],[.1,25e-5,0,0,10,10,1,1,1e3,0,0,0,0,0,0,1,0,1],[200,2,0,0,500,5,5,5,300,50,0,50,0,0,0,1,0,1]]]};class me{constructor(t,s,a){c(this,"data");c(this,"heroKind");c(this,"id");c(this,"passiveEffectLists",[]);c(this,"throwSpeed",2e3);c(this,"attackLists",Array(H.HeroKind));c(this,"mp",Array(H.HeroKind));c(this,"tempDamage",Array(H.HeroKind));c(this,"interval",Array(H.HeroKind));c(this,"attackArray",Array(H.HeroKind));c(this,"tempElement");this.data=t,this.heroKind=s,this.id=a}get level(){switch(this.heroKind){case E.Warrior:return this.data.source.warriorSkillLevel[this.id];case E.Wizard:return this.data.source.wizardSkillLevel[this.id];case E.Angel:return this.data.source.angelSkillLevel[this.id];case E.Thief:return this.data.source.thiefSkillLevel[this.id];case E.Archer:return this.data.source.archerSkillLevel[this.id];case E.Tamer:return this.data.source.tamerSkillLevel[this.id];default:return 0}}get rank(){switch(this.heroKind){case E.Warrior:return this.data.source.warriorSkillRank[this.id];case E.Wizard:return this.data.source.wizardSkillRank[this.id];case E.Angel:return this.data.source.angelSkillRank[this.id];case E.Thief:return this.data.source.thiefSkillRank[this.id];case E.Archer:return this.data.source.archerSkillRank[this.id];case E.Tamer:return this.data.source.tamerSkillRank[this.id];default:return 0}}get classSkill(){return this.data.skill.classSkills[this.heroKind]}get element(){return C.Physical}get initDamage(){return Os.skillFactors[this.heroKind][this.id][0]}get incrementDamage(){return Os.skillFactors[this.heroKind][this.id][1]}get initMpGain(){return Os.skillFactors[this.heroKind][this.id][2]}get incrementMpGain(){return Os.skillFactors[this.heroKind][this.id][3]}get initInterval(){return Os.skillFactors[this.heroKind][this.id][6]}get initHitCount(){return Os.skillFactors[this.heroKind][this.id][15]}get incrementHitCount(){return Os.skillFactors[this.heroKind][this.id][16]}get maxHitCount(){return Os.skillFactors[this.heroKind][this.id][17]}get isLog(){return this.data.skill.isLog[this.heroKind]}IsEquipped(t){return!1}IsActiveBuff(t){return!0}get levelBonus(){return this.data.skill.skillLevelBonus[this.heroKind].Value()}Level(){return this.Rank()<=0?0:this.level+this.levelBonus}Rank(){return this.rank}IncrementDamagePerLevel(){return this.incrementDamage*this.Rank()}Damage(){return this.initDamage+this.IncrementDamagePerLevel()*this.Level()}Interval(){return this.initInterval*Math.max(.5,1-1e-4*this.Level())}IncrementMpGainPerLevel(){return this.incrementMpGain*this.Rank()}GainMp(){const t=this.initMpGain+this.IncrementMpGainPerLevel()*this.Level();return this.isLog?Math.log10(Math.max(1,t))*this.HitCount()*(1/Math.pow(.1,.8)):t}HitCount(){return Math.min(this.maxHitCount,this.initHitCount+this.incrementHitCount*this.level)+this.data.skill.extraSkillHitCount[this.heroKind].Value()}DamageOrigin(t,s=!1){return this.tempDamage[t.heroKind]=this.isLog?this.element!=C.Physical?Math.log10(Math.max(1,this.Damage()))+t.matk:Math.log10(Math.max(1,this.Damage()))+t.atk:this.element!=C.Physical?this.Damage()*t.matk:this.Damage()*t.atk,this.tempDamage[t.heroKind]*=this.data.skill.ladyEmeldaEffectMultiplier[t.heroKind].Value(),s?this.tempDamage[t.heroKind]*this.data.stats.ElementDamage(t.heroKind,this.element).Value():this.tempDamage[t.heroKind]}BuffPercent(){return this.initDamage+this.IncrementBuffPercentPerLevel()*this.Level()}IncrementBuffPercentPerLevel(){return this.incrementDamage*this.Rank()}CalculateInterval(t){return Math.max(.1,this.Interval()*this.IntervalModifier(t))}IntervalModifier(t){let s=t.spd;return s>1e7?s=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(9e5,.7)+Math.pow(9e6,.65)+Math.pow(s-1e7,.6):s>1e6?s=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(9e5,.7)+Math.pow(s-1e6,.65):s>1e5?s=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(s-1e5,.7):s>1e4?s=1e3+Math.pow(9e3,.9)+Math.pow(s-1e4,.8):s>1e3&&(s=1e3+Math.pow(s-1e3,.9)),Math.max(.1,1/h.getBaseLog(1.4+Math.max(0,s/5)/5e3,1.4)*Math.max(.5,1-this.data.skill.skillCooltimeReduction[t.heroKind].Value())/this.data.skill.skillCastSpeedModifier[t.heroKind].Value())}}var It=(e=>(e[e.Attack=0]="Attack",e[e.Buff=1]="Buff",e[e.Heal=2]="Heal",e[e.Order=3]="Order",e))(It||{}),hs=(e=>(e[e.Nothing=0]="Nothing",e[e.HpUp=1]="HpUp",e[e.AtkUp=2]="AtkUp",e[e.MatkUp=3]="MatkUp",e[e.DefMDefUp=4]="DefMDefUp",e[e.SpdUp=5]="SpdUp",e[e.MoveSpeedUp=6]="MoveSpeedUp",e[e.GoldUp=7]="GoldUp",e[e.SkillLevelUp=8]="SkillLevelUp",e))(hs||{});class ew extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,200)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.HP,i.Add,300)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.HP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,125,p.GlobalStats,tt.GoldGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.HP,i.Mul,.2)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.HpUp}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.HP).RegisterMultiplier(s);let a=new l(n.Buff,i.Add,()=>this.RegenValue,()=>this.IsActiveBuff(t));this.data.stats.HpRegenerate(t).RegisterMultiplier(a)}RegenValue(){return this.level<50?0:this.level<100?10:this.level<150?25:this.level<200?45:70}}class tw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.HeroStats,A.MoveSpeed,i.Mul,.05)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,30,p.HeroStats,A.MoveSpeed,i.Mul,.1)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.SPD,i.Add,150)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.SPD,i.Add,150)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.MoveSpeed,i.Mul,.15)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.SPD,i.Add,300)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.SPD,i.Add,350)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.SPD,i.Add,400)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,500)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.SpdUp}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.SPD).RegisterMultiplier(s);let a=new l(n.Buff,i.Mul,()=>this.MoveSpeedValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(a)}MoveSpeedValue(){return this.level>=200?.5:this.level>=150?.25:this.level>=100?.1:0}}class sw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.DEF,i.Add,15)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MDEF,i.Add,15)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MP,i.Add,200)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.HP,i.Add,300)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.HP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Heal}}class iw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.SkillLevelUp}SetBuff(t){let s=new l(n.Buff,i.Add,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.skill.skillLevelBonusFromHolyArch[t].RegisterMultiplier(s);let a=new l(n.Buff,i.Add,()=>this.DebuffResValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.DebuffRes).RegisterMultiplier(a)}DebuffResValue(){return this.level>=250?.7:this.level>=150?.45:this.level>=100?.25:this.level>=50?.1:0}get levelBonus(){return this.data.skill.skillLevelBonus[this.heroKind].Value()}BuffPercent(){return 20+this.IncrementBuffPercentPerLevel()*this.Level()}IncrementBuffPercentPerLevel(){return .1+.05*this.Rank()}}class rw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.MagCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Add,30)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.MagCritChance,i.Add,.1)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.MATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MATK,i.Add,125)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.MatkUp}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.MATK).RegisterMultiplier(s)}}class aw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,20)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.PhysCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.ATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.HP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.PhysCritChance,i.Add,.1)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.ATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.ATK,i.Add,135)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Mul,.6)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.AtkUp}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.ATK).RegisterMultiplier(s)}}class nw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.DEF,i.Mul,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MDEF,i.Mul,.05)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.HP,i.Add,2e3)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.DEF,i.Add,150)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MDEF,i.Add,150)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.HP,i.Mul,.15)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.DEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MDEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MP,i.Mul,.25)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Mul,.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.DefMDefUp}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,m.DEF).RegisterMultiplier(s),this.data.stats.BasicStats(t,m.MDEF).RegisterMultiplier(s);let a=new l(n.Buff,i.Add,()=>this.InvalidValue,()=>this.IsActiveBuff(t));this.data.stats.ElementInvalid(t,C.Physical).RegisterMultiplier(a)}InvalidValue(){return this.level>=200?.1:this.level>=100?.025:0}}class lw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.GlobalStats,tt.LeafGain,i.Mul,.1)),this.passiveEffectLists.push(new d(this,30,p.GlobalStats,tt.LeafGain,i.Mul,.2)),this.passiveEffectLists.push(new d(this,40,p.GlobalStats,tt.LeafGain,i.Mul,.3)),this.passiveEffectLists.push(new d(this,60,p.GlobalStats,tt.LeafGain,i.Mul,.4)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.SkillProficiencyGain,i.Add,.1)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.SkillProficiencyGain,i.Add,.2)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.SkillProficiencyGain,i.Add,.3)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.SkillProficiencyGain,i.Add,.4)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?We.Poison:We.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class cw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.MagCritChance,i.Add,.015)),this.passiveEffectLists.push(new d(this,60,p.HeroStats,A.MagCritChance,i.Add,.025)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.ExpGain,i.Add,.25)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.ExpGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.ExpGain,i.Add,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Light}}class ow extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MP,i.Add,100)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.MP,i.Add,150)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.125)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Light}get debuff(){return We.Knockback}}class uw extends Ii{constructor(s){super(s);c(this,"heroKind",E.Angel);this.skills[0]=new lw(this.data,E.Angel,0),this.skills[1]=new cw(this.data,E.Angel,1),this.skills[2]=new sw(this.data,E.Angel,2),this.skills[3]=new ew(this.data,E.Angel,3),this.skills[4]=new aw(this.data,E.Angel,4),this.skills[5]=new rw(this.data,E.Angel,5),this.skills[6]=new nw(this.data,E.Angel,6),this.skills[7]=new tw(this.data,E.Angel,7),this.skills[8]=new ow(this.data,E.Angel,8),this.skills[9]=new iw(this.data,E.Angel,9)}}class hw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.GlobalStats,tt.StoneGain,i.Mul,.1)),this.passiveEffectLists.push(new d(this,30,p.GlobalStats,tt.StoneGain,i.Mul,.2)),this.passiveEffectLists.push(new d(this,50,p.GlobalStats,tt.StoneGain,i.Mul,.3)),this.passiveEffectLists.push(new d(this,75,p.GlobalStats,tt.StoneGain,i.Mul,.4)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.SkillProficiencyGain,i.Add,.1)),this.passiveEffectLists.push(new d(this,150,p.HeroStats,A.SkillProficiencyGain,i.Add,.2)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.SkillProficiencyGain,i.Add,.3)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.SkillProficiencyGain,i.Add,.4)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?this.data.skill.baseAttackPoisonChance[this.heroKind].Value():this.classSkill.stances[3].effectValueBuff}Range(){return this.Range()}}class fw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,3)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.HP,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.HP,i.Add,150)),this.passiveEffectLists.push(new d(this,50,p.HeroStats,A.PhysCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.PhysCritChance,i.Add,.02)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.PhysCritChance,i.Add,.03)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.ATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class pw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.PhysCritChance,i.Add,.025)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.15)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,300)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class dw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.SPD,i.Add,20)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.SPD,i.Add,30)),this.passiveEffectLists.push(new d(this,100,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.075)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class gw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,20)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.ExpGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.ATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.ExpGain,i.Add,1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Add,100)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return We.AtkDown}ConsumeMp(){return this.level>=50?this.ConsumeMp()*.5:this.ConsumeMp()}}class mw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,20)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.MoveSpeed,i.Mul,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.MoveSpeed,i.Mul,.1)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Add,750)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.75)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Add,125)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,1.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}EffectRange(){return this.level>=150?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=50?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}Interval(){return this.level>=100?this.Interval()*.5:this.Interval()}ConsumeMp(){return this.level>=200?0:this.ConsumeMp()}}class ww extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,100)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.PhysCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.HP,i.Add,5e3)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.PhysCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.PhysCritChance,i.Add,.1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,3)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return We.MatkDown}Range(){return this.level>=100?this.Range()+30*this.data.skill.skillRangeMultiplier[this.heroKind].Value():this.Range()}EffectRange(){return this.level>=150?this.EffectRange()+170*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=30?this.EffectRange()+70*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}Interval(){return this.level>=200?this.Interval()*.75:this.Interval()}}class Mw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,100)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.SPD,i.Add,300)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,200)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class Sw extends me{constructor(s,a,u){super(s,a,u);c(this,"dushMeter");this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.DEF,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MDEF,i.Add,10)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MP,i.Add,150)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.DEF,i.Add,100)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MDEF,i.Add,100)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,160,p.BasicStats,m.DEF,i.Mul,.2)),this.passiveEffectLists.push(new d(this,180,p.BasicStats,m.MDEF,i.Mul,.2)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.HP,i.Add,1500)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}DamageBonusPermeter(){let s=0;return this.level>=50&&(s+=.5),this.level>=100&&(s+=.5),s}Damage(){return this.Damage()*(1+this.DamageBonusPermeter()*this.dushMeter)}}class Aw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.HP,i.Add,250)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.ExpGain,i.Add,.25)),this.passiveEffectLists.push(new d(this,25,p.BasicStats,m.MDEF,i.Add,40)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.DEF,i.Add,40)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.HP,i.Add,2500)),this.passiveEffectLists.push(new d(this,80,p.GlobalStats,tt.GoldGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MDEF,i.Add,100)),this.passiveEffectLists.push(new d(this,100,p.BasicStats,m.DEF,i.Add,100)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.MDEF,i.Mul,.3)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.DEF,i.Mul,.3)),this.passiveEffectLists.push(new d(this,160,p.BasicStats,m.MDEF,i.Add,150)),this.passiveEffectLists.push(new d(this,180,p.BasicStats,m.DEF,i.Add,150)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.HP,i.Mul,.3)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Mul,.5)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.HP,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return We.Knockback}}class bw extends Ii{constructor(s){super(s);c(this,"heroKind",E.Warrior);this.skills[0]=new hw(this.data,E.Warrior,0),this.skills[1]=new fw(this.data,E.Warrior,1),this.skills[2]=new dw(this.data,E.Warrior,2),this.skills[3]=new pw(this.data,E.Warrior,3),this.skills[4]=new gw(this.data,E.Warrior,4),this.skills[5]=new mw(this.data,E.Warrior,5),this.skills[6]=new ww(this.data,E.Warrior,6),this.skills[7]=new Mw(this.data,E.Warrior,7),this.skills[8]=new Sw(this.data,E.Warrior,8),this.skills[9]=new Aw(this.data,E.Warrior,9)}}class Rw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.DEF,i.Add,10)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MDEF,i.Add,10)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Add,150)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.ExpGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.ExpGain,i.Add,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Fire}}class Dw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,3)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.MagCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.DEF,i.Add,15)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MDEF,i.Add,15)),this.passiveEffectLists.push(new d(this,70,p.HeroStats,A.MagCritChance,i.Add,.02)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MP,i.Add,100)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.MagCritChance,i.Add,.03)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.MATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Add,30)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Fire}}class kw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,20,p.GlobalStats,tt.CrystalGain,i.Mul,.1)),this.passiveEffectLists.push(new d(this,30,p.GlobalStats,tt.CrystalGain,i.Mul,.2)),this.passiveEffectLists.push(new d(this,50,p.GlobalStats,tt.CrystalGain,i.Mul,.3)),this.passiveEffectLists.push(new d(this,75,p.GlobalStats,tt.CrystalGain,i.Mul,.4)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.SkillProficiencyGain,i.Add,.1)),this.passiveEffectLists.push(new d(this,150,p.HeroStats,A.SkillProficiencyGain,i.Add,.2)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.SkillProficiencyGain,i.Add,.3)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.SkillProficiencyGain,i.Add,.4)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?We.Poison:We.Nothing}get element(){return C.Fire}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class Ew extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,30)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.MagCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MATK,i.Mul,.2)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Add,200)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Mul,.75)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,1.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Fire}}class Cw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,25,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,100)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.HP,i.Add,300)),this.passiveEffectLists.push(new d(this,100,p.BasicStats,m.DEF,i.Mul,.05)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MDEF,i.Mul,.05)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.HP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.HP,i.Mul,.3)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.3)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.HP,i.Mul,.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Ice}get debuff(){return We.SpdDown}}class yw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,100)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MDEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.DEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Mul,.075)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.3)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MP,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Ice}get debuff(){return We.Stop}}class Pw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,100)),this.passiveEffectLists.push(new d(this,30,p.HeroStats,A.MagCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.MagCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.HP,i.Add,2e3)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.MagCritChance,i.Add,.1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Add,3e3)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,3)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}ConsumeMp(){return this.level>=200?this.ConsumeMp()*.5:this.ConsumeMp()}EffectRange(){return this.level>=100?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=50?this.EffectRange()+150*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=20?this.EffectRange()+50*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}get element(){return C.Ice}get debuff(){return We.SpdDown}}class vw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.SPD,i.Add,10)),this.passiveEffectLists.push(new d(this,30,p.HeroStats,A.MagCritChance,i.Add,.025)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.DEF,i.Add,25)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MDEF,i.Add,25)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.SPD,i.Add,20)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MATK,i.Add,30)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.MATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Thunder}get debuff(){return We.Electric}GainMp(){return this.level>=100?this.GainMp()*2:this.GainMp()}}class Bw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.SPD,i.Add,20)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.MoveSpeed,i.Mul,.05)),this.passiveEffectLists.push(new d(this,25,p.HeroStats,A.ExpGain,i.Add,.25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.MoveSpeed,i.Mul,.1)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,60,p.GlobalStats,tt.GoldGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,100,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Mul,.075)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,250)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}Interval(){return this.level>=150?this.Interval()*.5:this.Interval()}get element(){return C.Thunder}get debuff(){return We.Electric}}class Lw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,100)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MATK,i.Add,200)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Thunder}get debuff(){return We.Electric}}class Tw extends Ii{constructor(s){super(s);c(this,"heroKind",E.Wizard);this.skills[0]=new kw(this.data,E.Wizard,0),this.skills[1]=new Dw(this.data,E.Wizard,1),this.skills[2]=new Rw(this.data,E.Wizard,2),this.skills[3]=new Ew(this.data,E.Wizard,3),this.skills[4]=new Cw(this.data,E.Wizard,4),this.skills[5]=new yw(this.data,E.Wizard,5),this.skills[6]=new Pw(this.data,E.Wizard,6),this.skills[7]=new vw(this.data,E.Wizard,7),this.skills[8]=new Bw(this.data,E.Wizard,8),this.skills[9]=new Lw(this.data,E.Wizard,9)}}class Gw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,150)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.MagCritChance,i.Add,.025)),this.passiveEffectLists.push(new d(this,25,p.HeroStats,A.MagCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.MagCritChance,i.Add,.15)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MATK,i.Mul,1.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Dark}get debuff(){return We.Death}ThisSkillCriticalChance(){return Math.min(1,.25+1/400*this.Level())}}class xw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.GlobalStats,tt.StoneGain,i.Mul,.1)),this.passiveEffectLists.push(new d(this,30,p.GlobalStats,tt.StoneGain,i.Mul,.2)),this.passiveEffectLists.push(new d(this,50,p.GlobalStats,tt.StoneGain,i.Mul,.3)),this.passiveEffectLists.push(new d(this,75,p.GlobalStats,tt.StoneGain,i.Mul,.4)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.SkillProficiencyGain,i.Add,.1)),this.passiveEffectLists.push(new d(this,150,p.HeroStats,A.SkillProficiencyGain,i.Add,.2)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.SkillProficiencyGain,i.Add,.3)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.SkillProficiencyGain,i.Add,.4)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?We.Poison:We.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class Fw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.MagCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MATK,i.Add,75)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MATK,i.Add,125)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.HP,i.Add,1500)),this.passiveEffectLists.push(new d(this,100,p.BasicStats,m.SPD,i.Add,200)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Mul,.75)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.DEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MDEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Dark}get debuff(){return We.Knockback}EffectRange(){return this.level>=150?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level>=50?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}}class Iw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,20)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.ATK,i.Add,40)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,.075)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.ATK,i.Add,100)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class Hw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.SPD,i.Add,20)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.PhysCritChance,i.Add,.025)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.SPD,i.Add,50)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.ExpGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.PhysCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.ExpGain,i.Add,1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.SPD,i.Add,150)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,300)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Add,()=>this.CriticalValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.PhysCritChance).RegisterMultiplier(s)}EffectRange(){return this.level>=100?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}ThisSkillCriticalChance(){return Math.min(1,.25+1/400*this.Level())}CriticalValue(){let t=0;return this.level>=25&&(t+=.05),this.level>=50&&(t+=.05),this.level>=75&&(t+=.05),this.level>=150&&(t+=.1),t}}class Vw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MDEF,i.Add,20)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.ExpGain,i.Add,.25)),this.passiveEffectLists.push(new d(this,25,p.HeroStats,A.EquipmentDropChance,i.Add,5e-4)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.DEF,i.Add,20)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MDEF,i.Add,30)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.DEF,i.Add,30)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.HP,i.Add,300)),this.passiveEffectLists.push(new d(this,80,p.GlobalStats,tt.GoldGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MP,i.Add,250)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.EquipmentDropChance,i.Add,5e-4)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.HP,i.Mul,.2)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.EquipmentDropChance,i.Add,.001)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Mul,.3)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Dark}PilferChance(){let t=.05;return this.level>=60&&(t+=.05),this.level>=100&&(t+=.05),this.level>=150&&(t+=.1),this.level>=250&&(t+=.25),t}}class Nw extends me{constructor(s,a,u){super(s,a,u);c(this,"tempMul");this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.SPD,i.Add,10)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Add,10)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.SPD,i.Add,20)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MATK,i.Add,15)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.SPD,i.Add,30)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Dark}get debuff(){return We.Poison}Damage(){return this.tempMul=1,this.level>=50&&this.tempMul++,this.level>=100&&(this.tempMul+=2),this.level>=150&&(this.tempMul+=4),this.level>=200&&(this.tempMul+=8),this.Damage()*this.tempMul}}class qw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.SPD,i.Add,20)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.HeroStats,A.MagCritChance,i.Add,.025)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.MoveSpeed,i.Mul,.05)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MP,i.Add,150)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.MoveSpeed,i.Mul,.1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.SPD,i.Add,200)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Add,()=>this.CriticalValue,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.MagCritChance).RegisterMultiplier(s)}CriticalValue(){let t=0;return this.level>=75&&(t+=.05),this.level>=125&&(t+=.05),this.level>=175&&(t+=.05),this.level>=225&&(t+=.1),t}get element(){return C.Dark}get debuff(){return We.MdefDown}}class _w extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,100)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.PhysCritChance,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.SPD,i.Add,250)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.HP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.SPD,i.Add,500)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.PhysCritChance,i.Add,.15)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.SPD,i.Add,1e3)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,1.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class Ww extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,3)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.HP,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.PhysCritChance,i.Add,.005)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.PhysCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.PhysCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.ATK,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return We.DefDown}}class Uw extends Ii{constructor(s){super(s);c(this,"heroKind",E.Thief);this.skills[0]=new xw(this.data,E.Thief,0),this.skills[1]=new Ww(this.data,E.Thief,1),this.skills[2]=new Iw(this.data,E.Thief,2),this.skills[3]=new Hw(this.data,E.Thief,3),this.skills[4]=new _w(this.data,E.Thief,4),this.skills[5]=new Nw(this.data,E.Thief,5),this.skills[6]=new qw(this.data,E.Thief,6),this.skills[7]=new Vw(this.data,E.Thief,7),this.skills[8]=new Fw(this.data,E.Thief,8),this.skills[9]=new Gw(this.data,E.Thief,9)}}class Ow extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,20,p.GlobalStats,tt.CrystalGain,i.Mul,.1)),this.passiveEffectLists.push(new d(this,30,p.GlobalStats,tt.CrystalGain,i.Mul,.2)),this.passiveEffectLists.push(new d(this,50,p.GlobalStats,tt.CrystalGain,i.Mul,.3)),this.passiveEffectLists.push(new d(this,75,p.GlobalStats,tt.CrystalGain,i.Mul,.4)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.SkillProficiencyGain,i.Add,.1)),this.passiveEffectLists.push(new d(this,150,p.HeroStats,A.SkillProficiencyGain,i.Add,.2)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.SkillProficiencyGain,i.Add,.3)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.SkillProficiencyGain,i.Add,.4)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?We.Poison:We.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class $w extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.ATK,i.Add,10)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Add,15)),this.passiveEffectLists.push(new d(this,25,p.BasicStats,m.ATK,i.Add,20)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Add,25)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Add,30)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.ATK,i.Add,40)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.ExpGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,C.Physical).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=75&&(t+=.3),this.level>=175&&(t+=.5),t}}class zw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,30,p.HeroStats,A.FireRes,i.Add,.05)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MATK,i.Add,40)),this.passiveEffectLists.push(new d(this,50,p.HeroStats,A.MagCritChance,i.Add,.03)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.FireRes,i.Add,.15)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.MATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Add,200)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,C.Fire).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=75&&(t+=.3),this.level>=175&&(t+=.5),t}get element(){return C.Fire}get debuff(){return We.FireResDown}}class Jw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.HeroStats,A.MagCritChance,i.Add,.02)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.IceRes,i.Add,.05)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.MDEF,i.Add,30)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.DEF,i.Add,30)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.HP,i.Add,200)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MDEF,i.Add,40)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.DEF,i.Add,40)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.IceRes,i.Add,.15)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MDEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.DEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.HP,i.Mul,.15)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,C.Ice).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=100&&(t+=.3),this.level>=225&&(t+=.5),t}get element(){return C.Ice}get debuff(){return We.IceResDown}}class Xw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,100)),this.passiveEffectLists.push(new d(this,15,p.HeroStats,A.DarkRes,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.DarkRes,i.Add,.15)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MP,i.Mul,.5)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,3)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,C.Dark).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=5&&(t+=.2),this.level>=50&&(t+=.3),this.level>=100&&(t+=.5),t}get element(){return C.Dark}get debuff(){return We.DarkResDown}}class jw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.HP,i.Add,200)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.DEF,i.Add,30)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.MDEF,i.Add,30)),this.passiveEffectLists.push(new d(this,25,p.HeroStats,A.ExpGain,i.Add,.25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,200)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,80,p.GlobalStats,tt.GoldGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,100,p.BasicStats,m.MDEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.DEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.HP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,160,p.BasicStats,m.MP,i.Mul,.2)),this.passiveEffectLists.push(new d(this,180,p.BasicStats,m.HP,i.Mul,.2)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.ExpGain,i.Add,1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.SPD,i.Add,500)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.HP,i.Mul,.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.MoveSpeedUp}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.MoveSpeed).RegisterMultiplier(s)}}class Yw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.ATK,i.Add,50)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,100)),this.passiveEffectLists.push(new d(this,15,p.BasicStats,m.ATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Add,200)),this.passiveEffectLists.push(new d(this,25,p.BasicStats,m.ATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Mul,.75)),this.passiveEffectLists.push(new d(this,50,p.BasicStats,m.ATK,i.Mul,1)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.ATK,i.Mul,1.25)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.ATK,i.Mul,3)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class Zw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.ATK,i.Add,5)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MP,i.Add,25)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.PhysCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.PhysCritChance,i.Add,.02)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.PhysCritChance,i.Add,.03)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,.3)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}}class Qw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,20,p.HeroStats,A.LightRes,i.Add,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Add,50)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Add,200)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.HP,i.Add,1500)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.LightRes,i.Add,.15)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MATK,i.Mul,.75)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.DEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MDEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MATK,i.Mul,1.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,C.Light).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=10&&(t+=.2),this.level>=50&&(t+=.3),this.level>=150&&(t+=.5),t}get element(){return C.Light}get debuff(){return We.LightResDown}}class Kw extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Add,5)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Add,10)),this.passiveEffectLists.push(new d(this,40,p.HeroStats,A.ThunderRes,i.Add,.05)),this.passiveEffectLists.push(new d(this,50,p.HeroStats,A.MagCritChance,i.Add,.01)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MATK,i.Add,15)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MATK,i.Add,20)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Mul,.025)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.ThunderRes,i.Add,.15)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.DamageValue,()=>this.IsActiveBuff(t));this.data.stats.ElementDamage(t,C.Thunder).RegisterMultiplier(s)}DamageValue(){let t=0;return this.level>=20&&(t+=.2),this.level>=150&&(t+=.3),this.level>=250&&(t+=.5),t}get element(){return C.Thunder}get debuff(){return We.ThunderResDown}}class eM extends Ii{constructor(s){super(s);c(this,"heroKind",E.Archer);this.skills[0]=new Ow(this.data,E.Archer,0),this.skills[1]=new Zw(this.data,E.Archer,1),this.skills[2]=new $w(this.data,E.Archer,2),this.skills[3]=new Yw(this.data,E.Archer,3),this.skills[4]=new Kw(this.data,E.Archer,4),this.skills[5]=new Jw(this.data,E.Archer,5),this.skills[6]=new zw(this.data,E.Archer,6),this.skills[7]=new Qw(this.data,E.Archer,7),this.skills[8]=new Xw(this.data,E.Archer,8),this.skills[9]=new jw(this.data,E.Archer,9)}}class tM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MP,i.Add,250)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,50,p.HeroStats,A.MoveSpeed,i.Mul,.025)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.ATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MATK,i.Mul,.2)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.ATK,i.Mul,.2)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.MoveSpeed,i.Mul,.025)),this.passiveEffectLists.push(new d(this,110,p.BasicStats,m.ATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.MATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,130,p.BasicStats,m.ATK,i.Mul,.35)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.MATK,i.Mul,.35)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.MoveSpeed,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.Nothing}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].summonPetATKMATKMultiplier.RegisterMultiplier(s);let a=new l(n.Buff,i.Add,()=>this.CritChance,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.PetPhysCritChance).RegisterMultiplier(a),this.data.stats.HeroStats(t,A.PetMagCritChance).RegisterMultiplier(a)}CritChance(){return this.level>=200?.1:this.level>=150?.05:0}}class sM extends me{constructor(s,a,u){super(s,a,u);c(this,"tempMul");this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MP,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Mul,.01)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Mul,.01)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Add,200)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.ATK,i.Mul,.02)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MATK,i.Mul,.02)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.ATK,i.Mul,.03)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MATK,i.Mul,.03)),this.passiveEffectLists.push(new d(this,110,p.BasicStats,m.ATK,i.Mul,.04)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.MATK,i.Mul,.04)),this.passiveEffectLists.push(new d(this,130,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Order}EffectValue(){this.tempMul=this.level<250?this.level<200?this.level<150?this.level<100?this.level<50?1:2:4:8:16:48;let s=this.Damage()*this.tempMul;return this.isLog&&s>=1&&(s=1+Math.log10(s*100)/100),s}}class iM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,200)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MP,i.Add,100)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.HP,i.Add,300)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Add,150)),this.passiveEffectLists.push(new d(this,60,p.HeroStats,A.ExpGain,i.Add,.25)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,100,p.HeroStats,A.TamingPointGain,i.Mul,.25)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.ExpGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,175,p.GlobalStats,tt.GoldGain,i.Add,.5)),this.passiveEffectLists.push(new d(this,200,p.HeroStats,A.TamingPointGain,i.Mul,.75)),this.passiveEffectLists.push(new d(this,225,p.HeroStats,A.ExpGain,i.Add,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.Nothing}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].petExpGainPerDefeat.RegisterMultiplier(s);let a=new l(n.Buff,i.Mul,()=>this.LoyaltyGain,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].loyaltyPoingGain.RegisterMultiplier(a)}LoyaltyGain(){return this.level>=250?2:this.level>=150?1:this.level>=50?.5:0}}class rM extends me{constructor(s,a,u){super(s,a,u);c(this,"tempMul");this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.DEF,i.Add,50)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.MDEF,i.Add,50)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.DEF,i.Add,150)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MDEF,i.Add,150)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.DEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MDEF,i.Mul,.1)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.DEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MDEF,i.Mul,.15)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.DEF,i.Mul,.25)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.MDEF,i.Mul,.25)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.HP,i.Mul,.45)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Add,2e3)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.HP,i.Mul,1)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}EffectValue(){this.tempMul=this.level<200?this.level<100?this.level<50?1:2:4:8;let s=this.Damage()*this.tempMul;return this.isLog&&s>=1&&(s=1+Math.log10(s*100)/100),s}get type(){return It.Order}}class aM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.SPD,i.Add,100)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.SPD,i.Add,200)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.SPD,i.Add,300)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.ATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.MATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.SPD,i.Add,400)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.ATK,i.Mul,.6)),this.passiveEffectLists.push(new d(this,160,p.BasicStats,m.MATK,i.Mul,.6)),this.passiveEffectLists.push(new d(this,180,p.BasicStats,m.SPD,i.Add,500)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MATK,i.Mul,1.25)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.ATK,i.Mul,1.25)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.Nothing}SetBuff(t){let s=new l(n.Buff,i.Mul,()=>this.BuffPercent,()=>this.IsActiveBuff(t));this.data.stats.heroes[t].summonPetSPDMoveSpeedMultiplier.RegisterMultiplier(s);let a=new l(n.Buff,i.Add,()=>this.CritChance,()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,A.PetPhysCritChance).RegisterMultiplier(a),this.data.stats.HeroStats(t,A.PetMagCritChance).RegisterMultiplier(a)}CritChance(){return this.level>=250?.5:this.level>=100?.25:this.level>=50?.15:this.level>=30?.1:this.level>=10?.05:0}}class nM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,5,p.BasicStats,m.HP,i.Add,200)),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,75,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.MP,i.Mul,.25)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.MP,i.Mul,.35)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Mul,.45)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.MP,i.Mul,.65)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Buff}get buff(){return hs.Nothing}SetBuff(t){}IncrementBuffPercentPerLevel(){return this.incrementDamage}BuffPercent(){return Math.min(1,this.BuffPercent())}Chance(){return this.level>=200?1:this.level>=150?.8:this.level>=100?.6:this.level>=50?.4:.2}}class lM extends me{constructor(s,a,u){super(s,a,u);c(this,"tempMul");c(this,"isTry");this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.MATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.ATK,i.Mul,.05)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.ATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,70,p.BasicStats,m.MATK,i.Mul,.1)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.ATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,90,p.BasicStats,m.MATK,i.Mul,.15)),this.passiveEffectLists.push(new d(this,110,p.BasicStats,m.MATK,i.Mul,.2)),this.passiveEffectLists.push(new d(this,120,p.BasicStats,m.ATK,i.Mul,.2)),this.passiveEffectLists.push(new d(this,130,p.BasicStats,m.MATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,140,p.BasicStats,m.ATK,i.Mul,.25)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.MoveSpeed,i.Mul,.05)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,250,p.BasicStats,m.ATK,i.Mul,.5)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Order}EffectValue(){this.tempMul=this.level<200?this.level<150?this.level<100?this.level<50?1:2:4:8:16;let s=this.Damage()*this.tempMul;return this.isLog&&s>=1&&(s=1+Math.log10(s*100)/100),s}}class cM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,100)),this.passiveEffectLists.push(new d(this,20,p.GlobalStats,tt.LeafGain,i.Mul,.1)),this.passiveEffectLists.push(new d(this,30,p.GlobalStats,tt.LeafGain,i.Mul,.2)),this.passiveEffectLists.push(new d(this,40,p.GlobalStats,tt.LeafGain,i.Mul,.3)),this.passiveEffectLists.push(new d(this,50,p.GlobalStats,tt.LeafGain,i.Mul,.4)),this.passiveEffectLists.push(new d(this,75,p.HeroStats,A.SkillProficiencyGain,i.Add,.1)),this.passiveEffectLists.push(new d(this,125,p.HeroStats,A.SkillProficiencyGain,i.Add,.2)),this.passiveEffectLists.push(new d(this,150,p.BasicStats,m.HP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,175,p.HeroStats,A.SkillProficiencyGain,i.Add,.3)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.MP,i.Add,500)),this.passiveEffectLists.push(new d(this,250,p.HeroStats,A.SkillProficiencyGain,i.Add,.4)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get element(){return C.Light}SummonPetNum(){return this.level>=200?3:this.level>=100?2:1}SetBuff(t){return this.data.stats.heroes[t].summonPetSlot.RegisterMultiplier(new l(n.Skill,i.Add,()=>this.SummonPetNum,()=>this.IsEquipped(t)))}EffectValue(){let t=this.Damage();return this.isLog&&t>=1&&(t=1+Math.log10(t*100)/100),t}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?We.Poison:We.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class oM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,10,p.BasicStats,m.HP,i.Add,200)),this.passiveEffectLists.push(new d(this,20,p.BasicStats,m.HP,i.Add,500)),this.passiveEffectLists.push(new d(this,30,p.BasicStats,m.HP,i.Mul,.05)),this.passiveEffectLists.push(new d(this,40,p.BasicStats,m.HP,i.Add,1e3)),this.passiveEffectLists.push(new d(this,60,p.BasicStats,m.MP,i.Add,250)),this.passiveEffectLists.push(new d(this,80,p.BasicStats,m.HP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,125,p.BasicStats,m.HP,i.Mul,.15)),this.passiveEffectLists.push(new d(this,175,p.BasicStats,m.HP,i.Add,1500)),this.passiveEffectLists.push(new d(this,200,p.BasicStats,m.MP,i.Mul,.1)),this.passiveEffectLists.push(new d(this,225,p.BasicStats,m.HP,i.Mul,.25)),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Heal}}class uM extends me{constructor(t,s,a){super(t,s,a),this.passiveEffectLists.push(new d(this,500,p.HeroStats,A.SkillProficiencyGain,i.Add,1))}get type(){return It.Attack}get element(){return C.Light}TamingChance(){return Math.min(1,.005+5e-5*this.Level())}}class hM extends Ii{constructor(s){super(s);c(this,"heroKind",E.Tamer);this.skills[0]=new cM(this.data,E.Tamer,0),this.skills[1]=new sM(this.data,E.Tamer,1),this.skills[2]=new lM(this.data,E.Tamer,2),this.skills[3]=new rM(this.data,E.Tamer,3),this.skills[4]=new oM(this.data,E.Tamer,4),this.skills[5]=new nM(this.data,E.Tamer,5),this.skills[6]=new tM(this.data,E.Tamer,6),this.skills[7]=new aM(this.data,E.Tamer,7),this.skills[8]=new iM(this.data,E.Tamer,8),this.skills[9]=new uM(this.data,E.Tamer,9)}}var Ps;class fM{constructor(t){Ht(this,Ps,void 0);c(this,"ladyEmeldaEffectMultiplier",Array(H.HeroKind));c(this,"skillLevelBonus",Array(H.HeroKind));c(this,"skillLevelBonusValue",Array(H.HeroKind));c(this,"skillLevelBonusFromHolyArch",Array(H.HeroKind));c(this,"skillRankCostFactors",Array(H.HeroKind));c(this,"skillPassiveShareFactors",Array(H.HeroKind));c(this,"skillCooltimeReduction",Array(H.HeroKind));c(this,"skillCastSpeedModifier",Array(H.HeroKind));c(this,"skillRangeMultiplier",Array(H.HeroKind));c(this,"skillEffectRangeMultiplier",Array(H.HeroKind));c(this,"extraSkillHitCount",Array(H.HeroKind));c(this,"loadoutUnlockedNum");c(this,"globalSkillProfGainRate");c(this,"baseAttackPoisonChance",Array(H.HeroKind));c(this,"baseAttackSlimeBall",Array(H.HeroKind));c(this,"classSkills",Array(H.HeroKind));c(this,"isLog",Array(H.HeroKind));Vt(this,Ps,t);for(let s=0;s<this.skillRankCostFactors.length;s++)this.skillRankCostFactors[s]=new x(new l(n.Base,i.Add,()=>0),()=>1,()=>1e-100);for(let s=0;s<this.ladyEmeldaEffectMultiplier.length;s++)this.ladyEmeldaEffectMultiplier[s]=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.skillCooltimeReduction.length;s++)this.skillCooltimeReduction[s]=new x(new l(n.Base,i.Add,()=>0),()=>.5,()=>0);for(let s=0;s<this.skillCastSpeedModifier.length;s++)this.skillCastSpeedModifier[s]=new x(new l(n.Base,i.Add,()=>1),()=>10,()=>1);for(let s=0;s<this.skillRangeMultiplier.length;s++)this.skillRangeMultiplier[s]=new x(new l(n.Base,i.Add,()=>1)),this.skillEffectRangeMultiplier[s]=new x(new l(n.Base,i.Add,()=>1)),this.extraSkillHitCount[s]=new x(new l(n.Base,i.Add,()=>0),()=>500,()=>0);for(let s=0;s<this.skillLevelBonus.length;s++)this.skillLevelBonus[s]=new x(new l(n.Base,i.Add,()=>0),()=>1e9,()=>0),this.skillLevelBonusFromHolyArch[s]=new x,this.skillLevelBonus[s].numberType=Ze.Normal;for(let s=0;s<this.skillPassiveShareFactors.length;s++)this.skillPassiveShareFactors[s]=new x;for(let s=0;s<this.baseAttackPoisonChance.length;s++)this.baseAttackPoisonChance[s]=new x;for(let s=0;s<this.baseAttackSlimeBall.length;s++)this.baseAttackSlimeBall[s]=new x;this.globalSkillProfGainRate=new x,this.classSkills[0]=new bw(b(this,Ps)),this.classSkills[1]=new Tw(b(this,Ps)),this.classSkills[2]=new uw(b(this,Ps)),this.classSkills[3]=new Uw(b(this,Ps)),this.classSkills[4]=new eM(b(this,Ps)),this.classSkills[5]=new hM(b(this,Ps))}Skill(t,s){return this.classSkills[s].skills[t]}}Ps=new WeakMap;class pM{constructor(t,s,a){c(this,"data");c(this,"heroKind");c(this,"kind");this.data=t,this.heroKind=s,this.kind=a}get value(){switch(this.kind){case R.Vitality:return this.data.source.abilityPointsVitality[this.heroKind];case R.Strength:return this.data.source.abilityPointsStrength[this.heroKind];case R.Intelligence:return this.data.source.abilityPointsIntelligence[this.heroKind];case R.Agility:return this.data.source.abilityPointsAgility[this.heroKind];case R.Luck:return this.data.source.abilityPointsLuck[this.heroKind];default:return 0}}set value(t){switch(this.kind){case R.Vitality:this.data.source.abilityPointsVitality[this.heroKind]=t;break;case R.Strength:this.data.source.abilityPointsStrength[this.heroKind]=t;break;case R.Intelligence:this.data.source.abilityPointsIntelligence[this.heroKind]=t;break;case R.Agility:this.data.source.abilityPointsAgility[this.heroKind]=t;break;case R.Luck:this.data.source.abilityPointsLuck[this.heroKind]=t;break}}}class dM{constructor(t,s,a,u){c(this,"data");c(this,"heroKind");c(this,"kind");c(this,"point");c(this,"pointMultiplicativeMultiplier");this.data=t,this.heroKind=s,this.kind=a,this.pointMultiplicativeMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.point=new pM(this.data,s,a)}Point(){return Math.max(0,this.point.value*this.pointMultiplicativeMultiplier.Value())}}class gM{constructor(t,s){c(this,"data");c(this,"basicStats",Array(H.BasicStatsKind));c(this,"basicStatsPerLevel",Array(H.BasicStatsKind));c(this,"stats",Array(H.Stats));c(this,"optionEffectChance",Array(3));c(this,"hpRegenerate");c(this,"mpRegenerate");c(this,"skillSlotNum");c(this,"levelForEquipment");c(this,"monsterDamages",Array(H.MonsterSpecies));c(this,"elementDamages",Array(H.Element));c(this,"elementAbsoptions",Array(H.Element));c(this,"elementInvalids",Array(H.Element));c(this,"guardianKorInvalidDamageHpPercent",new x);c(this,"monsterDistinguishMaxLevel");c(this,"monsterCaptureMaxLevelIncrement");c(this,"guildExpGain");c(this,"movedDistance");c(this,"movedDistanceReset");c(this,"materialLootGain");c(this,"elementSlayerDamages",Array(H.Element));c(this,"debuffChances",Array(H.Debuff));c(this,"channeledMp");c(this,"summonPetSlot");c(this,"loyaltyPoingGain");c(this,"petExpGainPerDefeat");c(this,"summonPetATKMATKMultiplier");c(this,"summonPetSPDMoveSpeedMultiplier");c(this,"extraAfterDamage");c(this,"heroKind");c(this,"level");c(this,"exp");c(this,"abilities",Array(H.AbilityKind));c(this,"abilityPointLeft");this.data=t,this.heroKind=s,this.level=this.data.source.heroLevel[this.heroKind],this.abilityPointLeft=this.AbilityPointLeft(this.heroKind);for(let a=0;a<this.abilities.length;a++)this.abilities[a]=new dM(this.data,s,a,this.abilityPointLeft);this.SetStats()}AbilityPointLeft(t){return this.data.source.abilityPoints[t]}Ability(t){return this.abilities[t]}AbilityStats(t){let s=Nt.stats[this.heroKind][t];switch(t){case m.HP:s*=this.Ability(R.Vitality).Point();break;case m.MP:s*=(this.Ability(R.Agility).Point()+this.Ability(R.Intelligence).Point())/2;break;case m.ATK:s*=this.Ability(R.Strength).Point();break;case m.MATK:s*=this.Ability(R.Intelligence).Point();break;case m.DEF:s*=(this.Ability(R.Vitality).Point()+this.Ability(R.Strength).Point())/2;break;case m.MDEF:s*=(this.Ability(R.Vitality).Point()+this.Ability(R.Intelligence).Point())/2;break;case m.SPD:s*=this.Ability(R.Agility).Point();break}return s}Level(){return this.level}SetStats(){for(let t=0;t<this.basicStats.length;t++)this.basicStats[t]=new x(new l(n.Base,i.Add,()=>Nt.baseStats[this.heroKind][t])),this.basicStats[t].RegisterMultiplier(new l(n.Ability,i.Add,()=>this.AbilityStats(t))),this.basicStats[t].numberType=Ze.Normal,this.basicStatsPerLevel[t]=new x,this.basicStats[t].RegisterMultiplier(new l(n.Rebirth,i.Add,()=>this.basicStatsPerLevel[t].Value()*this.Level()));for(let t=0;t<this.stats.length;t++)this.stats[t]=new x;this.stats[0].maxValue=()=>.9,this.stats[1].maxValue=()=>.9,this.stats[2].maxValue=()=>.9,this.stats[3].maxValue=()=>.9,this.stats[4].maxValue=()=>.9,this.stats[0].minValue=()=>-1e100,this.stats[1].minValue=()=>-1e100,this.stats[2].minValue=()=>-1e100,this.stats[3].minValue=()=>-1e100,this.stats[4].minValue=()=>-1e100,this.stats[6].RegisterMultiplier(new l(n.Base,i.Add,()=>Nt.baseStats[this.heroKind][7])),this.stats[6].RegisterMultiplier(new l(n.Ability,i.Add,()=>Nt.stats[this.heroKind][7]*this.abilities[4].Point())),this.stats[7].RegisterMultiplier(new l(n.Base,i.Add,()=>Nt.baseStats[this.heroKind][8])),this.stats[7].RegisterMultiplier(new l(n.Ability,i.Add,()=>Nt.stats[this.heroKind][8]*this.abilities[4].Point())),this.stats[8].modifiers[0]=new l(n.Base,i.Add,()=>Nt.baseStats[this.heroKind][9]),this.stats[9].maxValue=()=>1,this.stats[9].RegisterMultiplier(new l(n.Base,i.Add,()=>Nt.baseStats[this.heroKind][10])),this.stats[9].RegisterMultiplier(new l(n.Ability,i.Add,()=>Nt.stats[this.heroKind][10]*Math.pow(this.abilities[4].Point(),2/3))),this.stats[10].RegisterMultiplier(new l(n.Base,i.Add,()=>Nt.baseStats[this.heroKind][11])),this.stats[10].RegisterMultiplier(new l(n.Ability,i.Add,()=>Nt.stats[this.heroKind][11]*Math.pow(this.abilities[3].Point(),2/3))),this.stats[10].minValue=()=>50,this.stats[10].numberType=Ze.Meter,this.stats[11].RegisterMultiplier(new l(n.Base,i.Add,()=>1)),this.stats[12].RegisterMultiplier(new l(n.Base,i.Add,()=>1)),this.stats[13].RegisterMultiplier(new l(n.Base,i.Add,()=>1)),this.stats[14].RegisterMultiplier(new l(n.Base,i.Add,()=>1)),this.stats[17].RegisterMultiplier(new l(n.Base,i.Add,()=>.025)),this.stats[18].RegisterMultiplier(new l(n.Base,i.Add,()=>.025)),this.stats[19].RegisterMultiplier(new l(n.Base,i.Add,()=>2)),this.stats[21].RegisterMultiplier(new l(n.Base,i.Add,()=>1));for(let t=0;t<this.optionEffectChance.length;t++)this.optionEffectChance[t]=new x(new l(n.Base,i.Add,()=>.01*Math.pow(.1,t))),this.optionEffectChance[t].maxValue=()=>1,this.optionEffectChance[t].RegisterMultiplier(new l(n.Ability,i.Add,()=>2e-4*Math.pow(.1,t*this.abilities[4].Point())));this.hpRegenerate=new x(new l(n.Base,i.Add,()=>0),()=>this.basicStats[0].Value(),()=>0),this.mpRegenerate=new x(new l(n.Base,i.Add,()=>0),()=>this.basicStats[1].Value(),()=>0),this.hpRegenerate.numberType=Ze.Normal,this.mpRegenerate.numberType=Ze.Normal,this.skillSlotNum=new x(new l(n.Base,i.Add,()=>1)),this.levelForEquipment=new x(new l(n.Base,i.Add,()=>this.Level()));for(let t=0;t<this.monsterDamages.length;t++)this.monsterDamages[t]=new x(new l(n.Base,i.Add,()=>1));for(let t=0;t<this.elementDamages.length;t++)this.elementDamages[t]=new x(new l(n.Base,i.Add,()=>1)),t==0?this.elementDamages[t].RegisterMultiplier(new l(n.ArmoredFury,i.Mul,()=>this.stats[15].Value()*Math.log2(Math.max(1,this.basicStats[4].Value())))):this.elementDamages[t].RegisterMultiplier(new l(n.WardedFury,i.Mul,()=>this.stats[16].Value()*Math.log2(Math.max(1,this.basicStats[5].Value()))));for(let t=0;t<this.elementAbsoptions.length;t++)this.elementAbsoptions[t]=new x(new l(n.Base,i.Add,()=>0),()=>.9,()=>0);for(let t=0;t<this.elementInvalids.length;t++)this.elementInvalids[t]=new x(new l(n.Base,i.Add,()=>0));this.guardianKorInvalidDamageHpPercent=new x,this.monsterDistinguishMaxLevel=new x,this.monsterCaptureMaxLevelIncrement=new x,this.materialLootGain=new x(new l(n.Base,i.Add,()=>1)),this.guildExpGain=new x(new l(n.Base,i.Add,()=>1));for(let t=0;t<this.debuffChances.length;t++)this.debuffChances[t]=new x;for(let t=0;t<this.elementSlayerDamages.length;t++)this.elementSlayerDamages[t]=new x;this.channeledMp=new x,this.loyaltyPoingGain=new x(new l(n.Base,i.Add,()=>1)),this.petExpGainPerDefeat=new x(new l(n.Base,i.Add,()=>1)),this.summonPetATKMATKMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.summonPetSPDMoveSpeedMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.extraAfterDamage=new x(new l(n.Base,i.Add,()=>0),()=>100,()=>0)}}class mM{constructor(t){c(this,"data");c(this,"heroLevelIncrementLimit");c(this,"globalStats",Array(H.GlobalStats));c(this,"globalSkillSlotNum");c(this,"heroes",Array(H.HeroKind));c(this,"memoMaxTPGAmongHeroes");c(this,"memoMaxPetEXPGainAmongHeroes");this.data=t;for(let s=0;s<this.heroes.length;s++)this.heroes[s]=new gM(this.data,s);for(let s=0;s<this.globalStats.length;s++)this.globalStats[s]=new x;this.globalStats[0].RegisterMultiplier(new l(n.Base,i.Add,()=>1)),this.globalStats[1].numberType=Ze.Normal,this.globalStats[2].numberType=Ze.Normal,this.globalStats[3].numberType=Ze.Normal,this.heroLevelIncrementLimit=new x(new l(n.Base,i.Add,()=>30))}get currentHero(){return this.heroes[this.data.source.currentHero]}GoldGain(){return this.globalStats[0]}ResourceGain(t){switch(t){case j.Stone:return this.globalStats[1];case j.Crystal:return this.globalStats[2];case j.Leaf:return this.globalStats[3];default:return this.globalStats[1]}}Hero(t){return this.heroes[t]}BasicStats(t,s){return this.heroes[t].basicStats[s]}SetEffectBasicStats(t,s){for(let a=0;a<this.heroes.length;a++)this.BasicStats(a,t).RegisterMultiplier(s)}SetEffectStats(t,s){for(let a=0;a<this.heroes.length;a++)this.HeroStats(a,t).RegisterMultiplier(s)}BasicStatsPerLevel(t,s){return this.heroes[t].basicStatsPerLevel[s]}SetEffectBasicStatsPerLevel(t,s){for(let a=0;a<this.heroes.length;a++)this.BasicStatsPerLevel(a,t).RegisterMultiplier(s)}HeroStats(t,s){return this.heroes[t].stats[s]}ModifiedExpGain(t,s){return this.HeroStats(t,A.ExpGain).Value()/(1+this.data.area.expBonuses[this.data.battle[t].areaBattle.CurrentArea().kind].Value())*(1+this.data.area.expBonuses[s].Value())}SetEffectResourceGain(t){for(let s=0;s<H.ResourceKind;s++)this.ResourceGain(s).RegisterMultiplier(t)}SetEffectGuildExp(t){for(let s=0;s<this.heroes.length;s++)this.heroes[s].guildExpGain.RegisterMultiplier(t)}SetEffectLoyalityPointGain(t){for(let s=0;s<this.heroes.length;s++)this.heroes[s].loyaltyPoingGain.RegisterMultiplier(t)}SetEffectPetEXPGain(t){for(let s=0;s<this.heroes.length;s++)this.heroes[s].petExpGainPerDefeat.RegisterMultiplier(t)}OptionEffectChance(t,s){return this.heroes[t].optionEffectChance[s]}ElementResistance(t,s){switch(s){case C.Physical:return;case C.Fire:return this.heroes[t].stats[0];case C.Ice:return this.heroes[t].stats[1];case C.Thunder:return this.heroes[t].stats[2];case C.Light:return this.heroes[t].stats[3];case C.Dark:return this.heroes[t].stats[4];default:return}}SetEffectElementResistance(t){for(let s=0;s<H.HeroKind;s++)this.ElementResistance(s,C.Fire).RegisterMultiplier(t),this.ElementResistance(s,C.Ice).RegisterMultiplier(t),this.ElementResistance(s,C.Thunder).RegisterMultiplier(t),this.ElementResistance(s,C.Light).RegisterMultiplier(t),this.ElementResistance(s,C.Dark).RegisterMultiplier(t)}HpRegenerate(t){return this.heroes[t].hpRegenerate}MpRegenerate(t){return this.heroes[t].mpRegenerate}SkillSlotNum(t){return this.heroes[t].skillSlotNum}LevelForEquipment(t){return this.heroes[t].levelForEquipment}MonsterDamage(t,s){return this.heroes[t].monsterDamages[s]}ElementDamage(t,s){return this.heroes[t].elementDamages[s]}SetEffectElementDamage(t,s){for(let a=0;a<this.heroes.length;a++)this.ElementDamage(a,t).RegisterMultiplier(s)}SetEffectMagicalDamage(t){this.SetEffectElementDamage(C.Fire,t),this.SetEffectElementDamage(C.Ice,t),this.SetEffectElementDamage(C.Thunder,t),this.SetEffectElementDamage(C.Light,t),this.SetEffectElementDamage(C.Dark,t)}ElementAbsorption(t,s){return this.heroes[t].elementAbsoptions[s]}ElementInvalid(t,s){return this.heroes[t].elementInvalids[s]}MonsterDistinguishMaxLevel(t){return this.heroes[t].monsterDistinguishMaxLevel}MonsterCaptureMaxLevelIncrement(t){return this.heroes[t].monsterCaptureMaxLevelIncrement}MaterialLootGain(t){return this.heroes[t].materialLootGain}DebuffChance(t,s){return this.heroes[t].debuffChances[s]}ElementSlayerDamage(t,s){return this.heroes[t].elementSlayerDamages[s]}Level(t){return this.heroes[t].Level()}MaxPetEXPGainAmongHeroes(){if(this.memoMaxPetEXPGainAmongHeroes)return this.memoMaxPetEXPGainAmongHeroes;let t=0;for(let s=0;s<H.HeroKind;++s){let a=this.Hero(s).petExpGainPerDefeat.Value();a>t&&this.data.source.isActiveBattle[s]&&(t=a)}return this.memoMaxPetEXPGainAmongHeroes=t,t}MaxTPGAmongHeroes(){if(this.memoMaxTPGAmongHeroes)return this.memoMaxTPGAmongHeroes;let t=0;for(let s=0;s<H.HeroKind;s++){let a=this.Hero(s).stats[A.TamingPointGain].Value();a>t&&this.data.source.isActiveBattle[s]&&(t=a)}return this.memoMaxTPGAmongHeroes=t,t}}class Xt{constructor(t){c(this,"data");this.data=t}Start(){return this.SetEffect()}get level(){return this.data.source.sdGemLevels[this.kind]}set level(t){this.data.source.sdGemLevels[this.kind]=Math.min(t,this.maxLevel)}get kind(){return et.Sunstone}get maxLevel(){return 10}RequiredExp(t){return 1e300}SetEffect(){}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 0}EffectValue(){return this.initEffectValue+this.effectIncrementPerLevel*this.level}NameString(){return $e.SDGemString(this.kind).name}EffectValueString(){return $e.SDGemString(this.kind,this.EffectValue()).description}}class wM extends Xt{get kind(){return et.Almandine}get maxLevel(){return 20}RequiredExp(t){return 864e6*Math.pow(10,t/10)}SetEffect(){return this.data.nitro.maxNitroSpeed.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .1}}class MM extends Xt{get kind(){return et.Amber}get maxLevel(){return 100}RequiredExp(t){return(864e4+864e4*t)*Math.pow(10,t/50)}SetEffect(){return this.data.area.SetEffectDungeonClearCount(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class SM extends Xt{get kind(){return et.BlueTourmaline}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEQLevel.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class AM extends Xt{get kind(){return et.Carnelian}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEffectIncrement.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class bM extends Xt{get kind(){return et.Diamond}get maxLevel(){return 100}RequiredExp(t){return t>=63?864e8*(1+.1*(t-63)):(1728e4+1728e4*t)*Math.pow(2,t/10)}SetEffect(){return this.data.potion.talismanPassiveEffectMultiplier.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class RM extends Xt{get kind(){return et.Emerald}get maxLevel(){return 1e3}RequiredExp(t){return 864e5+864e5*t}SetEffect(){return this.data.sdg.powerupPermEffectMultiplier.RegisterMultiplier(new l(n.SDGemRitual,i.Mul,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class DM extends Xt{get kind(){return et.Hackmanite}get maxLevel(){return 300}RequiredExp(t){return t>=157?864e8*(1+.025*(t-157)):(10800+10800*t)*Math.pow(2,t/10)}SetEffect(){return this.data.expedition.lowerLimitTime.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>-this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 2}}class kM extends Xt{get kind(){return et.Heliodor}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){return this.data.town.researchEffectMultipliers[1].RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class EM extends Xt{get kind(){return et.Kunzite}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEQEffect.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .1}}class CM extends Xt{get kind(){return et.Morganite}get maxLevel(){return 500}RequiredExp(t){return t>=181?864e8*(1+.01*(t-181)):(1800+1800*t)*Math.pow(2,t/10)}SetEffect(){return this.data.stats.heroLevelIncrementLimit.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class yM extends Xt{get kind(){return et.Obsidian}get maxLevel(){return 1e3}RequiredExp(t){return t>=599?864e8*(1+.01*(t-599)):(36e3+36e3*t)*Math.pow(2,t/50)}SetEffect(){return this.data.monster.monsterDefeatNumMultiplier.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class PM extends Xt{get kind(){return et.Peridot}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){return this.data.town.researchEffectMultipliers[2].RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class vM extends Xt{get kind(){return et.Sunstone}get maxLevel(){return 1e3}RequiredExp(t){return t>=914?864e8*(1+.05*(t-914)):(300+300*t)*Math.pow(2,t/50)}SetEffect(){return this.data.stats.SetEffectGuildExp(new l(n.SDGemRitual,i.Mul,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class BM extends Xt{get kind(){return et.Tanzanite}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){this.data.town.researchEffectMultipliers[0].RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class LM extends Xt{get kind(){return et.Turquoise}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.expedition.rewardModifierPerHour.RegisterMultiplier(new l(n.SDGemRitual,i.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .001}}class TM{constructor(t){c(this,"data");c(this,"sdGemList",[]);c(this,"progressSpeedModifier");this.data=t,this.progressSpeedModifier=new x(new l(n.Base,i.Add,()=>1)),this.sdGemList.push(new vM(this.data)),this.sdGemList.push(new CM(this.data)),this.sdGemList.push(new BM(this.data)),this.sdGemList.push(new kM(this.data)),this.sdGemList.push(new PM(this.data)),this.sdGemList.push(new yM(this.data)),this.sdGemList.push(new DM(this.data)),this.sdGemList.push(new LM(this.data)),this.sdGemList.push(new EM(this.data)),this.sdGemList.push(new AM(this.data)),this.sdGemList.push(new SM(this.data)),this.sdGemList.push(new MM(this.data)),this.sdGemList.push(new bM(this.data)),this.sdGemList.push(new wM(this.data)),this.sdGemList.push(new RM(this.data))}Start(){for(let t=0;t<this.sdGemList.length;t++)this.sdGemList[t].Start()}Gem(t){for(let s=0;s<this.sdGemList.length;s++)if(this.sdGemList[s].kind==t)return this.sdGemList[s];return null}}class we{constructor(t){c(this,"sdgCtrl");c(this,"effectValue");this.sdgCtrl=t}get sdUpgradeCtrl(){return this.sdgCtrl.upgradeCtrl}get kind(){return $.MorePowerups}get level(){return this.sdgCtrl.data.source.superDungeonUpgradeLevels[this.kind]}set level(t){this.sdgCtrl.data.source.superDungeonUpgradeLevels[this.kind]=Math.min(t,this.maxLevel)}Start(){this.SetEffect()}SetEffect(){}get maxLevel(){return 1}Cost(t){return 1e300}TotalCost(){let t=0;for(let s=0;s<this.level;s++)t+=this.Cost(s);return t}ModifiedCost(t){return this.Cost(t)*this.sdUpgradeCtrl.costReduction.Value()}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 0}EffectValue(t=this.level){return this.initEffectValue+t*this.incrementEffectValuePerLevel}IsActive(){return!0}NameString(){return $e.SDUpgradeString(this.kind).name}EffectValueString(){const t=$e.SDUpgradeString(this.kind,this.EffectValue());return t.description+" "+t.value}}class GM extends we{get kind(){return $.AlchemyPointGainMul}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class xM extends we{get kind(){return $.ArmoredFuryMultiplier}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.ArmoredFury,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class FM extends we{get kind(){return $.ATKMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.ATK,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class IM extends we{get kind(){return $.AutoBuyPowerups}get isAutomation(){return!0}Cost(t){return 30*Math.pow(5,t)}get maxLevel(){return 5}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class HM extends we{get kind(){return $.AutoDodge}get isAutomation(){return!0}Cost(t){return 50}SetEffect(){}get maxLevel(){return 1}}class VM extends we{get kind(){return $.AutoLeaveAndRetry}get isAutomation(){return!0}Cost(t){return 20}SetEffect(){}get maxLevel(){return 1}}class NM extends we{get kind(){return $.AutoProgress}get isAutomation(){return!0}Cost(t){return 10}get maxLevel(){return 1}}class qM extends we{get kind(){return $.AutoUseRefreshTicket}get isAutomation(){return!0}Cost(t){return 100}get maxLevel(){return 1}}class _M extends we{get kind(){return $.BoostStartGoodRNG}Cost(t){return 1e5}get maxLevel(){return 1}}class WM extends we{get kind(){return $.CriticalDamageMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.CriticalDamage,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class UM extends we{get kind(){return $.CrystalGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(j.Crystal).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class OM extends we{get kind(){return $.CrystalResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[1].RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class $M extends we{constructor(){super(...arguments);c(this,"ó")}get kind(){return $.DamageToChallengeBossMultiplier}Cost(s){return(1e4+1e4*s)*Math.pow(2,s/5)}SetEffect(){for(let s=0;s<H.HeroKind;s++)this.sdgCtrl.data.stats.MonsterDamage(s,O.ChallengeBoss).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class zM extends we{get kind(){return $.DamageToRegularMonstersMultiplier}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.stats.MonsterDamage(t,O.Slime).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.MagicSlime).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.Spider).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.Bat).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.Fairy).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.Fox).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.DevilFish).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.Treant).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.FlameTiger).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,O.Unicorn).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class JM extends we{get kind(){return $.DebuffResistanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.DebuffRes,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class XM extends we{get kind(){return $.DEFMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.DEF,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class jM extends we{get kind(){return $.ElementResistanceMultiplier}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){this.sdgCtrl.data.stats.SetEffectStats(A.FireRes,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(A.IceRes,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(A.ThunderRes,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(A.LightRes,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(A.DarkRes,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class YM extends we{get kind(){return $.EquipmentProficiencyGainMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/15)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ZM extends we{get kind(){return $.FameGain}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/10)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.superStats.Hero(t).fameGain.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class QM extends we{get kind(){return $.FlexibleDodge}get isAutomation(){return!0}Cost(t){return 5}SetEffect(){}get maxLevel(){return 1}}class KM extends we{get kind(){return $.GoldCap}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.resource.goldCap.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class eS extends we{get kind(){return $.GoldGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.GoldGain().RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class tS extends we{get kind(){return $.GuildEXPGainMul}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/5)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectGuildExp(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .001}}class sS extends we{get kind(){return $.HeroExpGainMul}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.ExpGain,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}}class iS extends we{get kind(){return $.HPMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.HP,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class rS extends we{get kind(){return $.LeafGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(j.Leaf).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class aS extends we{get kind(){return $.LeafResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[2].RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class nS extends we{get kind(){return $.LeaveAndRetry}get isAutomation(){return!0}Cost(t){return 1}get maxLevel(){return 1}}class lS extends we{get kind(){return $.LoyaltyPointGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectLoyalityPointGain(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class cS extends we{get kind(){return $.MagicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.MagCritChance,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class oS extends we{get kind(){return $.MagicalDamageMultiplier}Cost(t){return(1500+1500*t)*Math.pow(2,t/10)}SetEffect(){this.sdgCtrl.data.stats.SetEffectElementDamage(C.Fire,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(C.Ice,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(C.Thunder,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(C.Light,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(C.Dark,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class uS extends we{get kind(){return $.MATKMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.MATK,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class hS extends we{get kind(){return $.MDEFMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.MDEF,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class fS extends we{get kind(){return $.MorePowerups}Cost(t){return 100*Math.pow(1e3,t)}SetEffect(){return this.sdgCtrl.powerupShowNum.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue()))}get maxLevel(){return 3}get initEffectValue(){return 2}get incrementEffectValuePerLevel(){return 1}}class pS extends we{get kind(){return $.MPMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.MP,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class dS extends we{get kind(){return $.PetCriticalDamageMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.PetCriticalDamage,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class gS extends we{get kind(){return $.PetDebuffResistanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.PetDebuffResistance,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class mS extends we{get kind(){return $.PetEXPGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectPetEXPGain(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class wS extends we{get kind(){return $.PetMagicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.PetMagCritChance,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class MS extends we{get kind(){return $.PetPhysicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.PetPhysCritChance,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class SS extends we{get kind(){return $.PhysicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.PhysCritChance,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class AS extends we{get kind(){return $.PhysicalDamageMultiplier}Cost(t){return(1500+1500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectElementDamage(C.Physical,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class bS extends we{get kind(){return $.PowerupFilterSlot}get isAutomation(){return!0}Cost(t){return 10*Math.pow(3,t)}SetEffect(){return this.sdgCtrl.powerupFilterSlot.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue()))}get maxLevel(){return 5}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class RS extends we{get kind(){return $.SDArmoredFury}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDUpgrade1]}}class DS extends we{get kind(){return $.SDChallengeBossDamageCutMultiplier}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDUpgrade1]}}class kS extends we{get kind(){return $.SDChallengeBossDamageMultiplier}Cost(t){return(50+50*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDUpgrade1]}}class ES extends we{get kind(){return $.SDDamageCutMultiplier}Cost(t){return(20+20*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDUpgrade1]}}class CS extends we{get kind(){return $.SDDamageMultiplier}Cost(t){return(10+10*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDUpgrade1]}}class yS extends we{get kind(){return $.SDDungeonCoinBoostStart}Cost(t){return(500+500*t)*Math.pow(2,t/5)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.initialDungeonCoin.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 5}}class PS extends we{get kind(){return $.SDMPGainEveryFloor}Cost(t){return(200+200*t)*Math.pow(2,t/5)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.mpChargePercentEveryFloor.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue()))}get maxLevel(){return 100}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}}class vS extends we{get kind(){return $.SDPowerupBoostStart}Cost(t){return 5e4}SetEffect(){}get maxLevel(){return 1}}class BS extends we{get kind(){return $.SDUpgreadeSuperQueue}get isAutomation(){return!0}Cost(t){return 40*Math.pow(5,t)}SetEffect(){return this.sdUpgradeCtrl.availableSuperQueue.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue()))}get maxLevel(){return 3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class LS extends we{get kind(){return $.SDWardedFury}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<H.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.SDUpgrade,i.Add,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+dt.RemoveSDUpgrade1]}}class TS extends we{get kind(){return $.SkillProficiencyGainMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/15)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.SkillProficiencyGain,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class GS extends we{get kind(){return $.SlimeCoinCap}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.resource.slimeCoinCap.RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class xS extends we{get kind(){return $.SPDMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(m.SPD,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class FS extends we{get kind(){return $.StoneGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(j.Stone).RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class IS extends we{get kind(){return $.StoneResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[0].RegisterMultiplier(new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class HS extends we{get kind(){return $.TamingPointGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.TamingPointGain,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class VS extends we{get kind(){return $.WardedFuryMultiplier}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(A.WardedFury,new l(n.SDUpgrade,i.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class NS{constructor(t){c(this,"sdgCtrl");c(this,"automationList",[]);c(this,"upgrade1ist",[]);c(this,"upgrade2ist",[]);c(this,"upgrade3ist",[]);c(this,"upgrade4ist",[]);c(this,"upgradeList",[]);c(this,"upgradeListArray",[]);c(this,"costReduction");c(this,"availableSuperQueue");this.sdgCtrl=t,this.availableSuperQueue=new x,this.SetUpgrade(),this.costReduction=new x(new l(n.Base,i.Add,()=>0),()=>.99,null)}SetUpgrade(){this.automationList.push(new nS(this.sdgCtrl)),this.automationList.push(new NM(this.sdgCtrl)),this.automationList.push(new VM(this.sdgCtrl)),this.automationList.push(new IM(this.sdgCtrl)),this.automationList.push(new qM(this.sdgCtrl)),this.automationList.push(new bS(this.sdgCtrl)),this.automationList.push(new QM(this.sdgCtrl)),this.automationList.push(new HM(this.sdgCtrl)),this.automationList.push(new BS(this.sdgCtrl)),this.upgrade1ist.push(new CS(this.sdgCtrl)),this.upgrade1ist.push(new ES(this.sdgCtrl)),this.upgrade1ist.push(new kS(this.sdgCtrl)),this.upgrade1ist.push(new DS(this.sdgCtrl)),this.upgrade1ist.push(new RS(this.sdgCtrl)),this.upgrade1ist.push(new LS(this.sdgCtrl)),this.upgrade1ist.push(new fS(this.sdgCtrl)),this.upgrade1ist.push(new PS(this.sdgCtrl)),this.upgrade1ist.push(new yS(this.sdgCtrl)),this.upgrade1ist.push(new vS(this.sdgCtrl)),this.upgrade1ist.push(new _M(this.sdgCtrl)),this.upgrade1ist.push(new ZM(this.sdgCtrl)),this.upgrade2ist.push(new sS(this.sdgCtrl)),this.upgrade2ist.push(new KM(this.sdgCtrl)),this.upgrade2ist.push(new eS(this.sdgCtrl)),this.upgrade2ist.push(new FS(this.sdgCtrl)),this.upgrade2ist.push(new UM(this.sdgCtrl)),this.upgrade2ist.push(new rS(this.sdgCtrl)),this.upgrade2ist.push(new GS(this.sdgCtrl)),this.upgrade3ist.push(new iS(this.sdgCtrl)),this.upgrade3ist.push(new pS(this.sdgCtrl)),this.upgrade3ist.push(new FM(this.sdgCtrl)),this.upgrade3ist.push(new uS(this.sdgCtrl)),this.upgrade3ist.push(new XM(this.sdgCtrl)),this.upgrade3ist.push(new hS(this.sdgCtrl)),this.upgrade3ist.push(new xS(this.sdgCtrl)),this.upgrade3ist.push(new SS(this.sdgCtrl)),this.upgrade3ist.push(new cS(this.sdgCtrl)),this.upgrade3ist.push(new WM(this.sdgCtrl)),this.upgrade3ist.push(new AS(this.sdgCtrl)),this.upgrade3ist.push(new oS(this.sdgCtrl)),this.upgrade3ist.push(new xM(this.sdgCtrl)),this.upgrade3ist.push(new VS(this.sdgCtrl)),this.upgrade3ist.push(new jM(this.sdgCtrl)),this.upgrade3ist.push(new JM(this.sdgCtrl)),this.upgrade3ist.push(new MS(this.sdgCtrl)),this.upgrade3ist.push(new wS(this.sdgCtrl)),this.upgrade3ist.push(new dS(this.sdgCtrl)),this.upgrade3ist.push(new gS(this.sdgCtrl)),this.upgrade4ist.push(new zM(this.sdgCtrl)),this.upgrade4ist.push(new $M(this.sdgCtrl)),this.upgrade4ist.push(new TS(this.sdgCtrl)),this.upgrade4ist.push(new YM(this.sdgCtrl)),this.upgrade4ist.push(new tS(this.sdgCtrl)),this.upgrade4ist.push(new HS(this.sdgCtrl)),this.upgrade4ist.push(new mS(this.sdgCtrl)),this.upgrade4ist.push(new lS(this.sdgCtrl)),this.upgrade4ist.push(new GM(this.sdgCtrl)),this.upgrade4ist.push(new IS(this.sdgCtrl)),this.upgrade4ist.push(new OM(this.sdgCtrl)),this.upgrade4ist.push(new aS(this.sdgCtrl)),this.upgradeList=[...this.automationList,...this.upgrade1ist,...this.upgrade2ist,...this.upgrade3ist,...this.upgrade4ist],this.upgradeListArray[0]=this.automationList,this.upgradeListArray[1]=this.upgrade1ist,this.upgradeListArray[2]=this.upgrade2ist,this.upgradeListArray[3]=this.upgrade3ist,this.upgradeListArray[4]=this.upgrade4ist}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start()}Upgrade(t){for(let s=0;s<this.upgradeList.length;s++)if(this.upgradeList[s].kind==t)return this.upgradeList[s];return this.upgradeList[0]}}class qS{constructor(t,s){c(this,"data");c(this,"id");this.data=t,this.id=s}get sdgCtrl(){return this.data.sdg}get purchasedNum(){return this.data.source.superDungeonShopPurchasedNums[this.id]}set purchasedNum(t){this.data.source.superDungeonShopPurchasedNums[this.id]=Math.min(this.maxLevel,t)}get effectValue(){return this.EffectValue(this.purchasedNum)}get maxLevel(){return 1}Start(){this.SetEffect()}SetEffect(){}RubyCost(t){return 1}EffectValue(t){return t}NameString(){return $e.SDShopNameString(this.id)}EffectValueString(){return $e.SDShopEffectValueString(this.id,this.EffectValue(this.purchasedNum),this.EffectValue(1),this.data.equipment.ArtifactEffectMultiplier())}}class Ns extends qS{constructor(t,s){super(t,s)}EffectValue(t){return t}get effectValue(){return this.EffectValue(this.purchasedNum)}get maxLevel(){return 1}}var lr;class _S extends Ns{constructor(s,a){super(s,a);Ht(this,lr,void 0);Vt(this,lr,s)}RubyCost(s){return 5+s*5}get maxLevel(){return 1e3}EffectValue(s){return .001*s}SetEffect(){return b(this,lr).equipment.effectMultiplierModifierForArtifact.RegisterMultiplier(new l(n.SDShop,i.Add,()=>this.effectValue))}}lr=new WeakMap;var cr;class WS extends Ns{constructor(s,a){super(s,a);Ht(this,cr,void 0);Vt(this,cr,s)}RubyCost(s){return 5}get maxLevel(){return 1e3}EffectValue(s){return .1*s}SetEffect(){return b(this,cr).resource.goldCap.RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue))}}cr=new WeakMap;class US extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 5}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.GoldGain().RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue))}}class OS extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .01*t}SetEffect(){return this.data.stats.SetEffectGuildExp(new l(n.SDShop,i.Mul,()=>this.effectValue))}}class $S extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.SetEffectLoyalityPointGain(new l(n.SDShop,i.Mul,()=>this.effectValue))}}class zS extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .2*t}SetEffect(){this.data.town.researchPower[0].RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue)),this.data.town.researchPower[1].RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue)),this.data.town.researchPower[2].RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue))}}class JS extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .05*t}SetEffect(){return this.data.challenge.sdStatRewardMultiplier.RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue))}}class XS extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 5}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.resource.slimeCoinCap.RegisterMultiplier(new l(n.SDShop,i.Mul,()=>this.effectValue))}}class jS extends Ns{constructor(t,s){super(t,s)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.SDShop,i.Mul,()=>this.effectValue))}}class YS{constructor(t){c(this,"data");c(this,"itemList",[]);c(this,"itemStatBonusList",[]);c(this,"rubyConverterPieceOfRubyCost");c(this,"pieceOfRubyConverterPieceOfRubyGain");this.data=t,this.rubyConverterPieceOfRubyCost=new x(new l(n.Base,i.Add,()=>5e4)),this.pieceOfRubyConverterPieceOfRubyGain=new x(new l(n.Base,i.Add,()=>5e3))}Start(){this.SetItem();for(let t=0;t<this.itemList.length;t++)this.itemList[t].Start()}SetItem(){this.itemStatBonusList.push(new _S(this.data,27)),this.itemStatBonusList.push(new JS(this.data,57)),this.itemStatBonusList.push(new WS(this.data,58)),this.itemStatBonusList.push(new US(this.data,59)),this.itemStatBonusList.push(new XS(this.data,60)),this.itemStatBonusList.push(new OS(this.data,61)),this.itemStatBonusList.push(new jS(this.data,62)),this.itemStatBonusList.push(new $S(this.data,63)),this.itemStatBonusList.push(new zS(this.data,64)),this.itemList=[...this.itemStatBonusList]}Item(t){for(let s=0;s<this.itemList.length;s++)if(this.itemList[s].id==t)return this.itemList[s];return null}}class ZS{constructor(t){c(this,"data");this.data=t}Total(){return this.data.source.maxModifierCleareds.reduce((t,s)=>t+s,0)}Start(){this.SetModifierMilestones()}isCleared(t){return this.Total()>=t}SetModifierMilestones(){this.data.sdg.upgradeCtrl.availableSuperQueue.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(10))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(30))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(60))),this.data.sdg.powerupFilterLoadoutSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(100))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(110))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(130))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(150))),this.data.sdg.lootGainOnDie.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>.25,()=>this.isCleared(170))),this.data.sdg.PowerupEffectMultiplier(ae.DamageMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(180))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(240))),this.data.sdg.powerupMaxRank.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>25,()=>this.isCleared(300))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(320))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(360))),this.data.sdg.PowerupEffectMultiplier(ae.PhysicalDamage).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(400))),this.data.sdg.PowerupEffectMultiplier(ae.MagicalDamage).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(420))),this.data.sdg.modifierLoadoutSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(440))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(480))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(500))),this.data.sdg.PowerupEffectMultiplier(ae.CriticalDamage).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(550))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(600))),this.data.sdg.PowerupEffectMultiplier(ae.PhysicalCriticalChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(625))),this.data.sdg.PowerupEffectMultiplier(ae.MagicalCriticalChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(650))),this.data.sdg.PowerupEffectMultiplier(ae.DamageMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(675))),this.data.sdg.PowerupEffectMultiplier(ae.ChallengeBossDamageMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(700))),this.data.sdg.powerupMaxRank.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>25,()=>this.isCleared(725))),this.data.sdg.PowerupEffectMultiplier(ae.DamageCutMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(825))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(875))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(900))),this.data.sdg.PowerupEffectMultiplier(ae.DungeonCoinGain).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(925))),this.data.sdg.upgradeCtrl.availableSuperQueue.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(950))),this.data.sdg.PowerupEffectMultiplier(ae.ChallengeBossDamageMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(975))),this.data.quest.sdRefreshTicketFromDailyQuest.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(1e3))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(1025))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(1050))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(1075))),this.data.sdg.PowerupEffectMultiplier(ae.FameGain).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(1100))),this.data.sdg.PowerupEffectMultiplier(ae.PhysicalAbsorption).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(1125))),this.data.sdg.PowerupEffectMultiplier(ae.MagicalAbsorption).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(1150))),this.data.sdg.PowerupEffectMultiplier(ae.SkillCastSpeed).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(1175))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(1225))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(1275))),this.data.sdg.PowerupEffectMultiplier(ae.SkillHitCount).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(1300))),this.data.sdg.PowerupEffectMultiplier(ae.ExtraAfterDamage).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(1325))),this.data.sdg.PowerupEffectMultiplier(ae.PhysicalDamage).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1350))),this.data.sdg.PowerupEffectMultiplier(ae.MagicalDamage).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1375))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(1425))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(1475))),this.data.sdg.PowerupEffectMultiplier(ae.PhysicalCriticalChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1550))),this.data.sdg.PowerupEffectMultiplier(ae.MagicalCriticalChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1575))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(1600))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>500,()=>this.isCleared(1625))),this.data.sdg.PowerupEffectMultiplier(ae.DungeonCoinGain).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1650))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>-1e3,()=>this.isCleared(1675))),this.data.sdg.PowerupEffectMultiplier(ae.FameGain).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1750))),this.data.sdg.PowerupEffectMultiplier(ae.DamageCutMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.3,()=>this.isCleared(1850))),this.data.sdg.PowerupEffectMultiplier(ae.DamageMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.5,()=>this.isCleared(1900))),this.data.sdg.PowerupEffectMultiplier(ae.EquipmentDropChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.2,()=>this.isCleared(2100))),this.data.sdg.PowerupEffectMultiplier(ae.ChallengeBossDamageMultiplier).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.5,()=>this.isCleared(2200))),this.data.sdg.PowerupEffectMultiplier(ae.PhysicalCriticalChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.5,()=>this.isCleared(2250))),this.data.sdg.PowerupEffectMultiplier(ae.MagicalCriticalChance).RegisterMultiplier(new l(n.SDModifierMilestone,i.Mul,()=>.5,()=>this.isCleared(2300))),this.data.quest.sdRefreshTicketFromDailyQuest.RegisterMultiplier(new l(n.SDModifierMilestone,i.Add,()=>1,()=>this.isCleared(3e3)))}}class QS{constructor(t){c(this,"data");c(this,"dungeonCoinGain");c(this,"dungeonCoinBonus");c(this,"powerupShowNum");c(this,"dodgeTimesec");c(this,"additionalTimeLimit");c(this,"lootGainOnDie");c(this,"modifierMilestoneCtrl");c(this,"modifierLoadoutSlot");c(this,"shopCtrl");c(this,"sdGemRitualCtrl");c(this,"powerupMaxRank");c(this,"powerupFilterSlot");c(this,"powerupFilterLoadoutSlot");c(this,"powerupEffectMultiplier",Array(H.SuperDungeonPowerupKind));c(this,"powerupPermEffectMultiplier");c(this,"autoBuyPowerupsTimesEveryFloor");c(this,"upgradeCtrl");this.data=t,this.dungeonCoinGain=new x(new l(n.Base,i.Add,()=>1)),this.dungeonCoinBonus=new x,this.dodgeTimesec=new x(new l(n.Base,i.Add,()=>10)),this.powerupShowNum=new x(new l(n.Base,i.Add,()=>1),()=>5,()=>2),this.autoBuyPowerupsTimesEveryFloor=new x,this.additionalTimeLimit=new x,this.lootGainOnDie=new x,this.powerupMaxRank=new x(new l(n.Base,i.Add,()=>50)),this.powerupFilterSlot=new x,this.powerupFilterLoadoutSlot=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.powerupEffectMultiplier.length;s++)this.powerupEffectMultiplier[s]=new x(new l(n.Base,i.Add,()=>1));this.powerupPermEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.upgradeCtrl=new NS(this),this.shopCtrl=new YS(this.data),this.sdGemRitualCtrl=new TM(this.data),this.modifierMilestoneCtrl=new ZS(this.data),this.modifierLoadoutSlot=new x(new l(n.Base,i.Add,()=>1))}SetPowerupGlobalEffect(){for(let t=0;t<H.SuperDungeonPowerupKind;t++)this.data.battle.superDungeonCtrl.powerupList[t].SetGlobalEffect()}Start(){this.shopCtrl.Start(),this.upgradeCtrl.Start(),this.sdGemRitualCtrl.Start(),this.SetPowerupGlobalEffect(),this.modifierMilestoneCtrl.Start()}PowerupEffectMultiplier(t){return this.powerupEffectMultiplier[t]}SetEffectSDDamageMultiplier(t){for(let s=0;s<H.HeroKind;s++)this.data.battles[s].superDungeonCtrl.damageMultiplier.RegisterMultiplier(t)}SetEffectSDDamageCutMultiplier(t){for(let s=0;s<H.HeroKind;s++)this.data.battles[s].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(t)}SetEffectSDChallengeBossDamageMultiplier(t){for(let s=0;s<H.HeroKind;s++)this.data.battles[s].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(t)}SetEffectSDChallengeBossDamageCutMultiplier(t){for(let s=0;s<H.HeroKind;s++)this.data.battles[s].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(t)}SetEffectSDArmoredFuryMultiplier(t){for(let s=0;s<H.HeroKind;s++)this.data.battles[s].superDungeonCtrl.armoredFury.RegisterMultiplier(t)}SetEffectSDWardedFuryMultiplier(t){for(let s=0;s<H.HeroKind;s++)this.data.battles[s].superDungeonCtrl.wardedFury.RegisterMultiplier(t)}}class KS{constructor(t,s,a){c(this,"data");c(this,"heroKind");c(this,"kind");this.data=t,this.heroKind=s,this.kind=a}get value(){switch(this.kind){case R.Vitality:return this.data.source.superAbilityPointsVitality[this.heroKind];case R.Strength:return this.data.source.superAbilityPointsStrength[this.heroKind];case R.Intelligence:return this.data.source.superAbilityPointsIntelligence[this.heroKind];case R.Agility:return this.data.source.superAbilityPointsAgility[this.heroKind];case R.Luck:return this.data.source.superAbilityPointsLuck[this.heroKind];default:return 0}}Point(){return this.value}}class e1{constructor(t,s){c(this,"data");c(this,"heroKind");c(this,"superAbilities",Array(H.AbilityKind));c(this,"fameGain");c(this,"timecountSec");this.data=t,this.heroKind=s,this.fameGain=new x(new l(n.Base,i.Add,()=>1));for(let a=0;a<this.superAbilities.length;a++)this.superAbilities[a]=new KS(this.data,s,a)}get grade(){return this.data.source.heroGrade[this.heroKind]}Start(){this.SetStats(),this.SetGradeMilestone()}SuperAbility(t){return this.superAbilities[t]}SetStats(){for(let t=0;t<H.BasicStatsKind;t++)this.SetBasicStats(t);this.data.stats.HeroStats(this.heroKind,A.PhysCritChance).RegisterMultiplier(new l(n.SuperAbility,i.Mul,()=>.01*this.SuperAbility(R.Luck).Point())),this.data.stats.HeroStats(this.heroKind,A.PhysCritChance).RegisterMultiplier(new l(n.SuperAbility,i.After,()=>Nt.stats[this.heroKind][7]*this.SuperAbility(R.Luck).Point())),this.data.stats.HeroStats(this.heroKind,A.MagCritChance).RegisterMultiplier(new l(n.SuperAbility,i.Mul,()=>.01*this.SuperAbility(R.Luck).Point())),this.data.stats.HeroStats(this.heroKind,A.MagCritChance).RegisterMultiplier(new l(n.SuperAbility,i.After,()=>Nt.stats[this.heroKind][8]*this.SuperAbility(R.Luck).Point())),this.data.stats.HeroStats(this.heroKind,A.CriticalDamage).RegisterMultiplier(new l(n.SuperAbility,i.Mul,()=>.01*(this.SuperAbility(R.Agility).Point()+this.SuperAbility(R.Luck).Point())/2)),this.data.stats.HeroStats(this.heroKind,A.CriticalDamage).RegisterMultiplier(new l(n.SuperAbility,i.After,()=>1e-4*(this.SuperAbility(R.Agility).Point()+this.SuperAbility(R.Luck).Point())/2)),this.data.stats.HeroStats(this.heroKind,A.MoveSpeed).RegisterMultiplier(new l(n.SuperAbility,i.Mul,()=>.01*this.SuperAbility(R.Agility).Point())),this.data.stats.HeroStats(this.heroKind,A.MoveSpeed).RegisterMultiplier(new l(n.SuperAbility,i.After,()=>Nt.stats[this.heroKind][11]*Math.pow(this.SuperAbility(R.Agility).Point(),2/3)))}SetBasicStats(t){let s=new l(n.SuperAbility,i.Mul,()=>this.BasicStatsIncrementMul(t));this.data.stats.BasicStats(this.heroKind,t).RegisterMultiplier(s);let a=new l(n.SuperAbility,i.After,()=>this.BasicStatsIncrementAfter(t));this.data.stats.BasicStats(this.heroKind,t).RegisterMultiplier(a)}BasicStatsIncrementBase(t){switch(t){case m.HP:return this.SuperAbility(R.Vitality).Point();case m.MP:return this.SuperAbility(R.Agility).Point()+this.SuperAbility(R.Intelligence).Point();case m.ATK:return this.SuperAbility(R.Strength).Point();case m.MATK:return this.SuperAbility(R.Intelligence).Point();case m.DEF:return(this.SuperAbility(R.Vitality).Point()+this.SuperAbility(R.Strength).Point())/2;case m.MDEF:return(this.SuperAbility(R.Vitality).Point()+this.SuperAbility(R.Intelligence).Point())/2;case m.SPD:return this.SuperAbility(R.Agility).Point();default:return 0}}BasicStatsIncrementMul(t){return this.BasicStatsIncrementBase(t)*.01}BasicStatsIncrementAfter(t){return this.BasicStatsIncrementBase(t)*Nt.stats[this.heroKind][t]}SetGradeMilestone(){this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=10)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=20)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.2,()=>this.grade>=30)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=40)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.2,()=>this.grade>=50)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=60)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.2,()=>this.grade>=70)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=80)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.3,()=>this.grade>=90)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=100)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.3,()=>this.grade>=110)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=120)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.3,()=>this.grade>=130)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=140)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.4,()=>this.grade>=150)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.4,()=>this.grade>=160)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.4,()=>this.grade>=170)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.1,()=>this.grade>=180)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.1,()=>this.grade>=190)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.1,()=>this.grade>=200)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=210)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.5,()=>this.grade>=220)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.5,()=>this.grade>=230)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.5,()=>this.grade>=240)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.2,()=>this.grade>=250)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.2,()=>this.grade>=260)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.2,()=>this.grade>=270)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=280)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.6,()=>this.grade>=290)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.6,()=>this.grade>=300)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.6,()=>this.grade>=310)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.3,()=>this.grade>=320)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.3,()=>this.grade>=330)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.3,()=>this.grade>=340)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=350)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.7,()=>this.grade>=360)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.7,()=>this.grade>=370)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.7,()=>this.grade>=380)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.4,()=>this.grade>=390)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.4,()=>this.grade>=400)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.4,()=>this.grade>=410)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=420)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.8,()=>this.grade>=430)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.8,()=>this.grade>=440)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.8,()=>this.grade>=450)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.5,()=>this.grade>=460)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.5,()=>this.grade>=470)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.5,()=>this.grade>=480)),this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=490)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.9,()=>this.grade>=500)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.9,()=>this.grade>=510)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.9,()=>this.grade>=520)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.6,()=>this.grade>=530)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.6,()=>this.grade>=540)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.6,()=>this.grade>=550)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=560)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1,()=>this.grade>=570)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1,()=>this.grade>=580)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1,()=>this.grade>=590)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.7,()=>this.grade>=600)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.7,()=>this.grade>=610)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.7,()=>this.grade>=620)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=630)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1.25,()=>this.grade>=640)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1.25,()=>this.grade>=650)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1.25,()=>this.grade>=660)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.8,()=>this.grade>=670)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.8,()=>this.grade>=680)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.8,()=>this.grade>=690)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=700)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1.5,()=>this.grade>=710)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1.5,()=>this.grade>=720)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1.5,()=>this.grade>=730)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.9,()=>this.grade>=740)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.9,()=>this.grade>=750)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>.9,()=>this.grade>=760)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=770)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>2,()=>this.grade>=780)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>2,()=>this.grade>=790)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>2,()=>this.grade>=800)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1,()=>this.grade>=810)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1,()=>this.grade>=820)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new l(n.GradeMilestone,i.Mul,()=>1,()=>this.grade>=830)),this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.RegisterMultiplier(new l(n.GradeMilestone,i.Add,()=>1,()=>this.grade>=840))}}class t1{constructor(t){c(this,"data");c(this,"heroes",Array(H.HeroKind));this.data=t;for(let s=0;s<this.heroes.length;s++)this.heroes[s]=new e1(this.data,s)}Start(){for(let t=0;t<this.heroes.length;t++)this.heroes[t].Start()}Hero(t){return this.heroes[t]}get currentHero(){return this.heroes[this.data.source.currentHero]}}class Ma{constructor(t,s){c(this,"data");c(this,"building");c(this,"kind");c(this,"townCtrl");this.data=t.data,this.townCtrl=t.townCtrl,this.building=t,this.kind=s,this.SetResearch()}get level(){switch(this.kind){case j.Stone:return this.data.source.buildingResearchLevelsStone[this.building.kind];case j.Crystal:return this.data.source.buildingResearchLevelsCrystal[this.building.kind];case j.Leaf:return this.data.source.buildingResearchLevelsLeaf[this.building.kind];default:return 0}}set level(t){switch(this.kind){case j.Stone:this.data.source.buildingResearchLevelsStone[this.building.kind]=Math.min(this.building.Level(),t);break;case j.Crystal:this.data.source.buildingResearchLevelsCrystal[this.building.kind]=Math.min(this.building.Level(),t);break;case j.Leaf:this.data.source.buildingResearchLevelsLeaf[this.building.kind]=Math.min(this.building.Level(),t);break}}get effectValue(){const t=[[.1,.05,.0075],[0,.0075,1],[.01,.01,5],[2,.05,.0075],[.025,5,1],[2e-5,1,.02],[.001,1,.02],[0,.025,.025],[.05,.05,.05],[],[],[.01,.05,.1]],s=this.level*t[this.building.kind][this.kind]*this.townCtrl.researchEffectMultipliers[this.kind].Value();return this.building.kind==se.Cartographer&&this.kind==j.Crystal||this.building.kind==se.Blacksmith&&this.kind==j.Leaf||this.building.kind==se.StatueOfHeroes&&this.kind==j.Leaf?Math.min(.9,s):this.building.kind==se.Temple&&this.kind==j.Leaf?Math.min(100,s):this.building.kind==se.Blacksmith&&this.kind==j.Crystal?Math.min(10,s):this.building.kind==se.Blacksmith&&this.kind==j.Stone?Math.min(250,s):s}SetResearch(){switch(this.building.kind){case se.AdventuringParty:switch(this.kind){case j.Stone:this.data.expedition.rewardMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Crystal:this.data.expedition.expGainMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Leaf:this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break}break;case se.AlchemistsHut:switch(this.kind){case j.Stone:this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Crystal:this.data.alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Leaf:this.data.alchemy.maxMysteriousWaterExpandedCapNum.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break}break;case se.ArcaneResearcher:switch(this.kind){case j.Stone:this.townCtrl.researchPower[0].RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Crystal:this.townCtrl.researchPower[1].RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Leaf:this.townCtrl.researchPower[2].RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break}break;case se.Blacksmith:switch(this.kind){case j.Stone:this.data.equipment.autoDisassembleAvailableNum.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Crystal:this.data.equipment.disassembleMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Leaf:this.data.craft.costReduction.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break}break;case se.Cartographer:switch(this.kind){case j.Stone:break;case j.Crystal:this.data.area.areaDebuffReduction.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Leaf:this.data.area.townMaterialGainBonus.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break}break;case se.MysticArena:switch(this.kind){case j.Stone:this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Crystal:this.data.challenge.permanentRewardMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Leaf:this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break}break;case se.Trapper:switch(this.kind){case j.Stone:this.data.monster.colorMaterialDropChance.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Crystal:this.data.shop.restockNumTrap.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Leaf:this.data.stats.SetEffectStats(A.TamingPointGain,new l(n.TownResearch,i.Mul,()=>this.effectValue));break}break;case se.Temple:switch(this.kind){case j.Stone:this.data.blessingInfo.SetEffectMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Crystal:this.data.blessingInfo.duration.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Leaf:this.data.rebirth.requiredHeroLevelReduction.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break}break;case se.StatueOfHeroes:switch(this.kind){case j.Stone:this.data.stats.SetEffectResourceGain(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Crystal:this.data.resource.goldCap.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break;case j.Leaf:this.townCtrl.levelCostReduction.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break}break;case se.SlimeBank:switch(this.kind){case j.Stone:this.data.resource.slimeCoinInterest.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Crystal:this.data.shop.restockNumMaterial.RegisterMultiplier(new l(n.TownResearch,i.Add,()=>this.effectValue));break;case j.Leaf:this.data.resource.slimeCoinCap.RegisterMultiplier(new l(n.TownResearch,i.Mul,()=>this.effectValue));break}break}}EffectValueString(){switch(this.building.kind){case se.StatueOfHeroes:switch(this.kind){case j.Stone:return`Resource Gain ${h.percent(this.effectValue)}`;case j.Crystal:return`Gold Cap ${h.percent(this.effectValue)}`;case j.Leaf:return`Reduce the cost of all building levels by ${h.percent(this.effectValue)}`}case se.AlchemistsHut:switch(this.kind){case j.Stone:return`Mysterious Water Gain ${h.tDigit(this.effectValue)} / sec`;case j.Crystal:return`Essence Conversion Rate ${h.percent(this.effectValue)}`;case j.Leaf:return`Max Mysterious Water Cap ${h.tDigit(this.effectValue,0)}`}case se.Cartographer:switch(this.kind){case j.Stone:return`Dungeon's Time Limit ${h.tDigit(this.effectValue)} sec`;case j.Crystal:return`Reduce Field Debuff effect by ${h.percent(this.effectValue)}`;case j.Leaf:return`Town Material Gain from clearing areas ${h.tDigit(this.effectValue,0)}`}case se.AdventuringParty:switch(this.kind){case j.Stone:return`Expedition Reward Amount ${h.percent(this.effectValue)}`;case j.Crystal:return`Expedition EXP Gain ${h.percent(this.effectValue)}`;case j.Leaf:return`Expedition Pet EXP Gain ${h.percent(this.effectValue)}`}case se.Blacksmith:switch(this.kind){case j.Stone:return`Auto-Disassemble EQ Slot ${h.tDigit(this.effectValue,0)}`;case j.Crystal:return`Material Gain on Disassembling EQ ${h.percent(this.effectValue)}`;case j.Leaf:return`Reduce the cost of crafting by ${h.percent(this.effectValue)}`}case se.Temple:switch(this.kind){case j.Stone:return`Blessing Effect ${h.percent(this.effectValue)}`;case j.Crystal:return`Blessing's duration ${h.tDigit(this.effectValue,0)} sec`;case j.Leaf:return`Rebirth's level requirements -${h.tDigit(this.effectValue,0)}`}case se.SlimeBank:switch(this.kind){case j.Stone:return`Grants interest on currently held Slime Coin every 10 minutes : ${h.percent(this.effectValue)}`;case j.Crystal:return`Restock amount of materials in Shop ${h.tDigit(this.effectValue,0)}`;case j.Leaf:return`Multiply Slime Coin Cap by ${h.percent(this.effectValue+1)}`}case se.MysticArena:switch(this.kind){case j.Stone:return`Equipment Inventory Slot ${h.tDigit(this.effectValue,0)}`;case j.Crystal:return`Multiply Handicapped Challenge's Passive Stats Reward by ${h.percent(this.effectValue+1)}`;case j.Leaf:return`Alchemy Point Gain ${h.percent(this.effectValue)}`}case se.ArcaneResearcher:switch(this.kind){case j.Stone:return`Stone Research Power ${h.percent(this.effectValue)}`;case j.Crystal:return`Crystal Research Power ${h.percent(this.effectValue)}`;case j.Leaf:return`Leaf Research Power ${h.percent(this.effectValue)}`}case se.Tavern:return"-";case se.Dojo:return"-";case se.Trapper:switch(this.kind){case j.Stone:return`Rare Material Drop Chance ${h.percent(this.effectValue,4)}`;case j.Crystal:return`Restock amount of traps in Shop ${h.tDigit(this.effectValue,0)}`;case j.Leaf:return`Multiply Taming Point Gain by ${h.percent(this.effectValue+1)}`}default:return"Not Implemented"}}}class ls{constructor(t,s){c(this,"data");c(this,"townCtrl");c(this,"kind");c(this,"rank");c(this,"level");c(this,"levelBonus");c(this,"research",[]);this.data=t,this.kind=s,this.level=this.data.source.buildingLevels,this.townCtrl=this.data.town,this.levelBonus=new x,this.research[0]=new Ma(this,j.Stone),this.research[1]=new Ma(this,j.Crystal),this.research[2]=new Ma(this,j.Leaf),this.SetEffect()}NameString(){return $e.BuildingString(this.kind)}Rank(){return this.rank.value}Level(){return this.level[this.kind]+this.levelBonus.Value()}MaxLevel(t){return 20*t}EffectValue(){switch(this.kind){case se.AdventuringParty:return this.Level()*.005*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case se.AlchemistsHut:return this.Level()*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case se.ArcaneResearcher:return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case se.Blacksmith:return this.Level()*.005*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value();case se.Cartographer:return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value();case se.MysticArena:return this.Level()*.025*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value();case se.Trapper:return this.Level()*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value();case se.Temple:return this.Level()*.01*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value();case se.StatueOfHeroes:return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value();case se.SlimeBank:return this.Level()*.01*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value();default:return 0}}EffectValueString(){let t=this.EffectValue();return(this.kind==se.Blacksmith||this.kind==se.AdventuringParty)&&t++,$e.BuildingEffectString(this.kind,t)}SetCost(){}SetEffect(){switch(this.kind){case se.AdventuringParty:this.data.expedition.speedMultiplier.RegisterMultiplier(new l(n.Town,i.Add,()=>this.EffectValue()));break;case se.Blacksmith:this.data.equipment.effectMultiplier.RegisterMultiplier(new l(n.Town,i.Add,()=>this.EffectValue()));break;case se.MysticArena:for(let t=0;t<H.HeroKind;t++)this.data.stats.MonsterDamage(t,O.ChallengeBoss).RegisterMultiplier(new l(n.Town,i.Mul,()=>this.EffectValue()));break;case se.Temple:this.data.rebirth.SetPointMultiplier(new l(n.Town,i.Add,()=>this.EffectValue()));break}}}class s1{constructor(t){c(this,"data");c(this,"maxRank");c(this,"townMaterials",[]);c(this,"townMaterialGainMultiplier",Array(H.HeroKind));c(this,"townLevelEffectMultiplier");c(this,"townLevelEffectMultipliers",Array(H.ResourceKind));c(this,"levelCostReduction");c(this,"buildings",[]);c(this,"researchPower",Array(H.ResourceKind));c(this,"maxResearchNum");c(this,"researchEffectMultipliers",Array(H.ResourceKind));this.data=t;for(let s=0;s<this.townMaterialGainMultiplier.length;s++)this.townMaterialGainMultiplier[s]=new x;this.maxResearchNum=new x(new l(n.Base,i.Add,()=>1)),this.townLevelEffectMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.maxRank=new x,this.levelCostReduction=new x(new l(n.Base,i.Add,()=>0),()=>.9,()=>0);for(let s=0;s<this.researchPower.length;s++)this.researchPower[s]=new x(new l(n.Base,i.Add,()=>Math.log10(10+this.data.resource.Resource(s))),()=>1e20,()=>1),this.researchPower[s].numberType=Ze.Normal,this.researchEffectMultipliers[s]=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<H.ResourceKind;s++)this.townLevelEffectMultipliers[s]=new x(new l(n.Base,i.Add,()=>1))}Start(){this.buildings[0]=new ls(this.data,se.StatueOfHeroes),this.buildings[3]=new ls(this.data,se.Blacksmith),this.buildings[1]=new ls(this.data,se.Cartographer),this.buildings[9]=new ls(this.data,se.Tavern),this.buildings[4]=new ls(this.data,se.Temple),this.buildings[10]=new ls(this.data,se.Dojo),this.buildings[5]=new ls(this.data,se.Trapper),this.buildings[7]=new ls(this.data,se.MysticArena),this.buildings[6]=new ls(this.data,se.SlimeBank),this.buildings[8]=new ls(this.data,se.ArcaneResearcher),this.buildings[2]=new ls(this.data,se.AlchemistsHut),this.buildings[11]=new ls(this.data,se.AdventuringParty)}SetEffectTownMatGain(t){for(let s=0;s<this.townMaterialGainMultiplier.length;s++)this.townMaterialGainMultiplier[s].RegisterMultiplier(t)}TotalBuildingLevel(){let t=0;for(let s=0;s<this.buildings.length;s++)t+=this.buildings[s].Level();return t}SetEffectLevelBonusForAllBuilding(t){for(let s=0;s<this.buildings.length;s++)this.buildings[s].levelBonus.RegisterMultiplier(t)}MaxTownMaterialGainMultiplier(){let t=0;for(let s=0;s<this.townMaterialGainMultiplier.length;++s)this.townMaterialGainMultiplier[s].Value()>t&&this.data.source.isActiveBattle[s]&&(t=this.townMaterialGainMultiplier[s].Value());return t}}var ys=(e=>(e[e.Resource=0]="Resource",e[e.BasicStats=1]="BasicStats",e[e.GoldGain=2]="GoldGain",e[e.ExpGain=3]="ExpGain",e[e.GoldCap=4]="GoldCap",e[e.SlimeBank=5]="SlimeBank",e[e.EquipmentInventory=6]="EquipmentInventory",e))(ys||{}),ji=(e=>(e[e.SlimeCoinCap=0]="SlimeCoinCap",e[e.SlimeCoinEfficiency=1]="SlimeCoinEfficiency",e[e.UpgradeCostReduction=2]="UpgradeCostReduction",e[e.ResourceBooster=3]="ResourceBooster",e[e.StatsBooster=4]="StatsBooster",e[e.GoldCapBooster=5]="GoldCapBooster",e[e.MysteriousWaterGain=6]="MysteriousWaterGain",e[e.MaterialFinder=7]="MaterialFinder",e[e.ShopTimer=8]="ShopTimer",e[e.ResearchPower=9]="ResearchPower",e[e.SPD=10]="SPD",e[e.FireRes=11]="FireRes",e[e.IceRes=12]="IceRes",e[e.ThunderRes=13]="ThunderRes",e[e.LightRes=14]="LightRes",e[e.DarkRes=15]="DarkRes",e[e.DebuffRes=16]="DebuffRes",e[e.SkillProf=17]="SkillProf",e[e.EquipmentProf=18]="EquipmentProf",e[e.CritDamage=19]="CritDamage",e[e.GoldGain=20]="GoldGain",e[e.SlimeCoinCap2=21]="SlimeCoinCap2",e))(ji||{});class i1{constructor(t,s,a=0){c(this,"data");c(this,"id");c(this,"kind");c(this,"slimebankKind");this.data=t,this.kind=s,this.slimebankKind=a}get level(){switch(this.kind){case ys.SlimeBank:return this.data.source.upgradeLevelsSlimebank[this.slimebankKind];default:return 0}}get resource(){return j.Stone}Start(){switch(this.kind){case ys.SlimeBank:switch(this.slimebankKind){case ji.CritDamage:this.data.stats.SetEffectStats(A.CriticalDamage,new l(n.Upgrade,i.Add,()=>this.EffectValue()));break}break}}Set(){}CostModifier(){return(1-+(this.kind!=ys.SlimeBank)*this.data.upgrade.costReduction.Value())*(1-+(this.kind!=ys.SlimeBank)*this.data.upgrade.costReductionFromGuildAbility.Value())*(1-+(this.kind!=ys.SlimeBank)*this.data.upgrade.costReductionFromGuildSuperAbility.Value())*(1-+(this.kind!=ys.SlimeBank)*this.data.upgrade.costReductionFromMissionMilestone.Value())*(1-this.data.upgrade.costReductionFromWA.Value())}Cost(t){switch(this.kind){case ys.SlimeBank:switch(this.slimebankKind){case ji.CritDamage:return 5e4*Math.pow(1.1,t);default:return 0}default:return 0}}EffectValue(){switch(this.kind){case ys.SlimeBank:switch(this.slimebankKind){case ji.CritDamage:return .025*this.level;default:return 0}default:return 0}}IsUnlocked(){}Name(){return""}Description(){return""}SetUnlockCondition(){}}var or;class r1{constructor(t){Ht(this,or,void 0);c(this,"upgrades");c(this,"goldGainUpgrade");c(this,"expGainUpgrade");c(this,"equipmentInventoryUpgrade");c(this,"generalUpgradeList",[]);c(this,"sb1ist",[]);c(this,"sb2ist",[]);c(this,"sb3ist",[]);c(this,"slimebankUpgradeList",[]);c(this,"upgradeList",[]);c(this,"costReduction");c(this,"costReductionFromGuildAbility");c(this,"costReductionFromGuildSuperAbility");c(this,"costReductionFromWA");c(this,"costReductionFromMissionMilestone");c(this,"resourceMultiplier");c(this,"statsMultiplier");c(this,"goldcapMultiplier");c(this,"goldcapMultipliers",Array(H.ResourceKind));c(this,"resourceCostIncrementPerLevelReduction");c(this,"resourceGainTierFactor");c(this,"availableQueue");c(this,"tempCheapestCost");c(this,"tempCheapestid");c(this,"tempCost");Vt(this,or,t),this.costReduction=new x(new l(n.Base,i.Add,()=>0),()=>.99,()=>0),this.costReductionFromGuildAbility=new x(new l(n.Base,i.Add,()=>0),()=>.99,()=>0),this.costReductionFromGuildSuperAbility=new x(new l(n.Base,i.Add,()=>0),()=>.99,()=>0),this.costReductionFromWA=new x(new l(n.Base,i.Add,()=>0),()=>.99,()=>0),this.costReductionFromMissionMilestone=new x(new l(n.Base,i.Add,()=>0),()=>.99,()=>0),this.resourceMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.statsMultiplier=new x(new l(n.Base,i.Add,()=>1)),this.goldcapMultiplier=new x(new l(n.Base,i.Add,()=>1));for(let s=0;s<this.goldcapMultipliers.length;s++)this.goldcapMultipliers[s]=new x(new l(n.Base,i.Add,()=>1));this.resourceCostIncrementPerLevelReduction=new x(new l(n.Base,i.Add,()=>0),()=>.9,()=>0),this.resourceGainTierFactor=new x(new l(n.Base,i.Add,()=>0),()=>5,()=>0),this.sb3ist.push(new i1(b(this,or),ys.SlimeBank,ji.CritDamage)),this.upgradeList=[...this.sb3ist],this.availableQueue=new x}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start()}Upgrade(t,s){return this.upgrades[t][s]}SlimeBankUpgrade(t){for(let s=0;s<this.slimebankUpgradeList.length;s++)if(this.slimebankUpgradeList[s].slimebankKind==t)return this.slimebankUpgradeList[s];return this.slimebankUpgradeList[0]}TotalLevel(t){let s=0;for(let a=0;a<this.upgrades[t].length;a++)s+=this.upgrades[t][a].level;return s}}or=new WeakMap;var bt=(e=>(e[e.TownBuldingLevel=0]="TownBuldingLevel",e[e.MissionClearNum=1]="MissionClearNum",e[e.UpgradeLevel=2]="UpgradeLevel",e[e.MoveDistance=3]="MoveDistance",e[e.DictionaryPoint=4]="DictionaryPoint",e[e.DisassembleEquipment=5]="DisassembleEquipment",e[e.RebirthPointGainTier1=6]="RebirthPointGainTier1",e[e.RebirthPointGainTier2=7]="RebirthPointGainTier2",e))(bt||{}),os;class $s{constructor(t,s){Ht(this,os,void 0);c(this,"kind");Vt(this,os,t),this.kind=s}get maxLevelReached(){return b(this,os).source.ascensionMilestoneLevelReached}get currentPassiveEffectValue(){return this.PassiveEffectValue(this.maxLevelReached[this.kind])}Start(){this.SetEffect()}PassiveEffectValue(t){switch(this.kind){case bt.TownBuldingLevel:return .1*t*Math.pow(2,(t-1)/9);case bt.MissionClearNum:return t*.5;case bt.DictionaryPoint:return .1*t*Math.pow(2,(t-1)/9);case bt.DisassembleEquipment:return .2*t*Math.pow(2,(t-1)/9);case bt.MoveDistance:return .01*Math.pow(t,2);case bt.UpgradeLevel:return Math.max(0,Math.pow(2,t)-1);case bt.RebirthPointGainTier1:return .1*t*Math.pow(2,(t-1)/9);case bt.RebirthPointGainTier2:return .1*t*Math.pow(2,(t-1)/9);default:return 0}}SetEffect(){switch(this.kind){case bt.TownBuldingLevel:b(this,os).town.townLevelEffectMultiplier.RegisterMultiplier(new l(n.Ascension,i.Add,()=>this.currentPassiveEffectValue));break;case bt.MissionClearNum:b(this,os).area.townMaterialGainPerDifficultyMultiplier.RegisterMultiplier(new l(n.Ascension,i.Add,()=>this.currentPassiveEffectValue));break;case bt.DictionaryPoint:b(this,os).equipment.dictionaryUpgradeEffectMultiplier.RegisterMultiplier(new l(n.Ascension,i.Add,()=>this.currentPassiveEffectValue));break;case bt.DisassembleEquipment:b(this,os).stats.SetEffectStats(A.EquipmentProficiencyGain,new l(n.Ascension,i.Mul,()=>this.currentPassiveEffectValue));break;case bt.MoveDistance:b(this,os).stats.SetEffectStats(A.MoveSpeed,new l(n.Ascension,i.Mul,()=>this.currentPassiveEffectValue));break;case bt.RebirthPointGainTier1:for(let t=0;t<H.HeroKind;t++)b(this,os).rebirth.Rebirth(t,0).rebirthPointGainFactor.RegisterMultiplier(new l(n.Ascension,i.Mul,()=>this.currentPassiveEffectValue));break;case bt.RebirthPointGainTier2:for(let t=0;t<H.HeroKind;t++)b(this,os).rebirth.Rebirth(t,1).rebirthPointGainFactor.RegisterMultiplier(new l(n.Ascension,i.Mul,()=>this.currentPassiveEffectValue));break}}}os=new WeakMap;class a1{constructor(t){c(this,"milestoneList",[]);this.milestoneList.push(new $s(t,bt.TownBuldingLevel)),this.milestoneList.push(new $s(t,bt.MissionClearNum)),this.milestoneList.push(new $s(t,bt.UpgradeLevel)),this.milestoneList.push(new $s(t,bt.MoveDistance)),this.milestoneList.push(new $s(t,bt.DictionaryPoint)),this.milestoneList.push(new $s(t,bt.DisassembleEquipment)),this.milestoneList.push(new $s(t,bt.RebirthPointGainTier1)),this.milestoneList.push(new $s(t,bt.RebirthPointGainTier2))}Start(){this.milestoneList.forEach(t=>{t.Start()})}}class n1{constructor(t){c(this,"data");c(this,"worldAscensions",[]);this.data=t,this.worldAscensions.push(new a1(t))}Start(){for(let t=0;t<this.worldAscensions.length;t++)this.worldAscensions[t].Start()}}class Yc{constructor(t){c(this,"source");c(this,"ascension");c(this,"skill");c(this,"potion");c(this,"alchemy");c(this,"epicStore");c(this,"expedition");c(this,"town");c(this,"stats");c(this,"area");c(this,"battles",Array(H.HeroKind));c(this,"superStats");c(this,"guild");c(this,"monster");c(this,"resource");c(this,"equipment");c(this,"craft");c(this,"quest");c(this,"inventory");c(this,"challenge");c(this,"shop");c(this,"rebirth");c(this,"blessingInfo");c(this,"mission");c(this,"sdg");c(this,"nitro");c(this,"upgrade");c(this,"requireUpdate",$t(!1));this.source=t,this.guild=new cg(this),this.potion=new jm(this),this.challenge=new Z0(this),this.rebirth=new Zm(this),this.alchemy=new Ud,this.shop=new Km,this.craft=new Q0,this.blessingInfo=new Y0(this),this.town=new s1(this),this.resource=new Qm,this.area=new Od(this),this.ascension=new n1(this),this.mission=new bg(this),this.stats=new mM(this),this.expedition=new lg(this),this.inventory=new Ag(this),this.equipment=new rg(this),this.monster=new Dg(this),this.sdg=new QS(this),this.nitro=new kg,this.superStats=new t1(this),this.quest=new Ym(this),this.skill=new fM(this),this.epicStore=new K0(this),this.upgrade=new r1(this);for(let s=0;s<this.battles.length;s++)this.battles[s]=new X0(this,s);this.Start()}get battle(){return this.battles[this.source.currentHero]}Start(){this.challenge.Start(),this.expedition.Start(),this.potion.Start(),this.town.Start(),this.ascension.Start(),this.mission.Start(),this.guild.Start(),this.monster.Start(),this.sdg.Start(),this.superStats.Start();for(let t=0;t<this.battles.length;t++)this.battles[t].Start();this.quest.Start(),this.rebirth.Start(),this.upgrade.Start(),this.epicStore.Start(),this.blessingInfo.Start(),this.equipment.Start(),this.inventory.Start(),this.SuperDungeonToggle()}load(){console.log("data manual load")}save(){console.log("data manual save")}SuperDungeonToggle(){for(let t=0;t<H.HeroKind;t++){const s=this.source.isSuperDungeon;this.skill.isLog[t]=s,this.skill.skillLevelBonus[t].isLog=s,this.skill.skillRangeMultiplier[t].isLog=s,this.skill.skillEffectRangeMultiplier[t].isLog=s,this.stats.heroes[t].stats[5].isLog=s,this.stats.heroes[t].stats[6].isLog=s,this.stats.heroes[t].stats[7].isLog=s,this.stats.heroes[t].stats[8].isLog=s,this.stats.heroes[t].stats[9].isLog=s,this.stats.heroes[t].stats[10].isLog=s,this.stats.heroes[t].hpRegenerate.isLog=s,this.stats.heroes[t].mpRegenerate.isLog=s;for(let a=0;a<H.BasicStatsKind;a++)this.stats.heroes[t].basicStats[a].isLog=s;for(let a=0;a<H.Element;a++)this.stats.heroes[t].elementDamages[a].isLog=s;for(let a=0;a<H.Element-1;a++)this.stats.heroes[t].stats[a].isLog=s;for(let a=0;a<H.Element;a++)this.stats.heroes[t].elementAbsoptions[a].isLog=s;for(let a=0;a<H.Element;a++)this.stats.heroes[t].elementInvalids[a].isLog=s;for(let a=0;a<H.MonsterSpecies;a++)this.stats.heroes[t].monsterDamages[a].isLog=s}}Update(){this.requireUpdate.value=!1}}const Al="SaveFileSnapshot",l1=new Lc,c1=un(Al,{state:()=>Bc(Al,l1,localStorage,{mergeDefaults:!0})}),o1=td({history:ep()}),pr=kh(xd),u1=Ph();pr.use(o1);pr.use(u1);const h1=c1(),Zc=new Yc(xa()),Qc=new Yc(h1),Kc=new qd(Zc,Qc);globalThis.Game=Kc;globalThis.SaveFileData=Zc;globalThis.SaveFileSnapshot=Qc;pr.config.performance=!0;pr.provide("game",Kc);pr.mount("#app");export{hr as $,Xh as A,p1 as B,Or as C,T as D,H as E,Rt as F,N as G,E as H,re as I,S1 as J,M1 as K,$e as L,w1 as M,Ss as N,g as O,be as P,B as Q,d1 as R,m1 as S,vt as T,h as U,nd as V,Jt as W,hu as X,Dc as Y,Ir as Z,Mi as _,yt as a,ac as a0,Sc as a1,yr as a2,m as a3,C as a4,O as a5,Tt as a6,n as a7,Ze as a8,un as a9,Bc as aa,Le as b,Wt as c,ai as d,kt as e,g1 as f,ec as g,Fs as h,Cr as i,is as j,Ms as k,Br as l,Ws as m,yp as n,wt as o,Kl as p,A1 as q,Fr as r,ss as s,Bs as t,ve as u,Mh as v,Zt as w,Ut as x,r as y,$t as z};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["./changelog-hLl4dYxc.js","./changelog-8I7vM4p5.css","./index-xyFVRzJN.js","./RouteChildren-yhI0c4yW.js","./ability-2e7YT5FJ.js","./AppInput.vue_vue_type_script_setup_true_lang-eIVomfAe.js","./challange-yJ--DYlp.js","./index-zsXNhkZB.js","./index-uNzt9chd.js","./town-8bwbG0b3.js","./drop-chance-oiADQRGN.js","./global-HeDfZFTx.js","./drop-chance-aixyGiu3.css","./equipment-dDg6xsg4.js","./MultiplierInformation-Ys3C7rJ3.js","./MultiplierInformation-XqnBNkmz.css","./equipment-MDJFcNr3.css","./expedition-6VZaTtQc.js","./expedition-HQW1Ea4Q.css","./guild-zOp1e16w.js","./help-09Ab-pBh.js","./help-y1hLxe0l.css","./ruby-shard-I6r4OsUz.js","./talisman-Uq1NvT4j.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
