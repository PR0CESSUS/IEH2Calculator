var $h=Object.defineProperty;var Uh=(e,t,i)=>t in e?$h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var o=(e,t,i)=>(Uh(e,typeof t!="symbol"?t+"":t,i),i),sn=(e,t,i)=>{if(!t.has(e))throw TypeError("Cannot "+i)};var fe=(e,t,i)=>(sn(e,t,"read from private field"),i?i.call(e):t.get(e)),Ks=(e,t,i)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,i)},ei=(e,t,i,r)=>(sn(e,t,"write to private field"),r?r.call(e,i):t.set(e,i),i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const h of document.querySelectorAll('link[rel="modulepreload"]'))r(h);new MutationObserver(h=>{for(const c of h)if(c.type==="childList")for(const m of c.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&r(m)}).observe(document,{childList:!0,subtree:!0});function i(h){const c={};return h.integrity&&(c.integrity=h.integrity),h.referrerPolicy&&(c.referrerPolicy=h.referrerPolicy),h.crossOrigin==="use-credentials"?c.credentials="include":h.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(h){if(h.ep)return;h.ep=!0;const c=i(h);fetch(h.href,c)}})();/**
* @vue/shared v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function wl(e,t){const i=new Set(e.split(","));return t?r=>i.has(r.toLowerCase()):r=>i.has(r)}const It={},Qi=[],Ts=()=>{},Oh=()=>!1,Sr=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&(e.charCodeAt(2)>122||e.charCodeAt(2)<97),kl=e=>e.startsWith("onUpdate:"),is=Object.assign,Al=(e,t)=>{const i=e.indexOf(t);i>-1&&e.splice(i,1)},zh=Object.prototype.hasOwnProperty,Et=(e,t)=>zh.call(e,t),$e=Array.isArray,Yi=e=>Na(e)==="[object Map]",na=e=>Na(e)==="[object Set]",an=e=>Na(e)==="[object Date]",rt=e=>typeof e=="function",Kt=e=>typeof e=="string",Ri=e=>typeof e=="symbol",Ht=e=>e!==null&&typeof e=="object",hu=e=>(Ht(e)||rt(e))&&rt(e.then)&&rt(e.catch),cu=Object.prototype.toString,Na=e=>cu.call(e),Jh=e=>Na(e).slice(8,-1),ou=e=>Na(e)==="[object Object]",Rl=e=>Kt(e)&&e!=="NaN"&&e[0]!=="-"&&""+parseInt(e,10)===e,ir=wl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),mr=e=>{const t=Object.create(null);return i=>t[i]||(t[i]=e(i))},jh=/-(\w)/g,Ns=mr(e=>e.replace(jh,(t,i)=>i?i.toUpperCase():"")),Xh=/\B([A-Z])/g,Li=mr(e=>e.replace(Xh,"-$1").toLowerCase()),Mr=mr(e=>e.charAt(0).toUpperCase()+e.slice(1)),Fr=mr(e=>e?`on${Mr(e)}`:""),Qs=(e,t)=>!Object.is(e,t),ar=(e,t)=>{for(let i=0;i<e.length;i++)e[i](t)},ur=(e,t,i)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:i})},Pa=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let rn;const fu=()=>rn||(rn=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Cl(e){if($e(e)){const t={};for(let i=0;i<e.length;i++){const r=e[i],h=Kt(r)?Kh(r):Cl(r);if(h)for(const c in h)t[c]=h[c]}return t}else if(Kt(e)||Ht(e))return e}const Qh=/;(?![^(]*\))/g,Yh=/:([^]+)/,Zh=/\/\*[^]*?\*\//g;function Kh(e){const t={};return e.replace(Zh,"").split(Qh).forEach(i=>{if(i){const r=i.split(Yh);r.length>1&&(t[r[0].trim()]=r[1].trim())}}),t}function mt(e){let t="";if(Kt(e))t=e;else if($e(e))for(let i=0;i<e.length;i++){const r=mt(e[i]);r&&(t+=r+" ")}else if(Ht(e))for(const i in e)e[i]&&(t+=i+" ");return t.trim()}const ec="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",tc=wl(ec);function pu(e){return!!e||e===""}function sc(e,t){if(e.length!==t.length)return!1;let i=!0;for(let r=0;i&&r<e.length;r++)i=ea(e[r],t[r]);return i}function ea(e,t){if(e===t)return!0;let i=an(e),r=an(t);if(i||r)return i&&r?e.getTime()===t.getTime():!1;if(i=Ri(e),r=Ri(t),i||r)return e===t;if(i=$e(e),r=$e(t),i||r)return i&&r?sc(e,t):!1;if(i=Ht(e),r=Ht(t),i||r){if(!i||!r)return!1;const h=Object.keys(e).length,c=Object.keys(t).length;if(h!==c)return!1;for(const m in e){const w=e.hasOwnProperty(m),k=t.hasOwnProperty(m);if(w&&!k||!w&&k||!ea(e[m],t[m]))return!1}}return String(e)===String(t)}function Ll(e,t){return e.findIndex(i=>ea(i,t))}const T=e=>Kt(e)?e:e==null?"":$e(e)||Ht(e)&&(e.toString===cu||!rt(e.toString))?JSON.stringify(e,du,2):String(e),du=(e,t)=>t&&t.__v_isRef?du(e,t.value):Yi(t)?{[`Map(${t.size})`]:[...t.entries()].reduce((i,[r,h],c)=>(i[_r(r,c)+" =>"]=h,i),{})}:na(t)?{[`Set(${t.size})`]:[...t.values()].map(i=>_r(i))}:Ri(t)?_r(t):Ht(t)&&!$e(t)&&!ou(t)?String(t):t,_r=(e,t="")=>{var i;return Ri(e)?`Symbol(${(i=e.description)!=null?i:t})`:e};/**
* @vue/reactivity v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let vs;class gu{constructor(t=!1){this.detached=t,this._active=!0,this.effects=[],this.cleanups=[],this.parent=vs,!t&&vs&&(this.index=(vs.scopes||(vs.scopes=[])).push(this)-1)}get active(){return this._active}run(t){if(this._active){const i=vs;try{return vs=this,t()}finally{vs=i}}}on(){vs=this}off(){vs=this.parent}stop(t){if(this._active){let i,r;for(i=0,r=this.effects.length;i<r;i++)this.effects[i].stop();for(i=0,r=this.cleanups.length;i<r;i++)this.cleanups[i]();if(this.scopes)for(i=0,r=this.scopes.length;i<r;i++)this.scopes[i].stop(!0);if(!this.detached&&this.parent&&!t){const h=this.parent.scopes.pop();h&&h!==this&&(this.parent.scopes[this.index]=h,h.index=this.index)}this.parent=void 0,this._active=!1}}}function Su(e){return new gu(e)}function ic(e,t=vs){t&&t.active&&t.effects.push(e)}function Pl(){return vs}function mu(e){vs&&vs.cleanups.push(e)}let Vi;class Dl{constructor(t,i,r,h){this.fn=t,this.trigger=i,this.scheduler=r,this.active=!0,this.deps=[],this._dirtyLevel=2,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,ic(this,h)}get dirty(){if(this._dirtyLevel===1){Ni();for(let t=0;t<this._depsLength;t++){const i=this.deps[t];if(i.computed&&(ac(i.computed),this._dirtyLevel>=2))break}this._dirtyLevel<2&&(this._dirtyLevel=0),Wi()}return this._dirtyLevel>=2}set dirty(t){this._dirtyLevel=t?2:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let t=vi,i=Vi;try{return vi=!0,Vi=this,this._runnings++,ln(this),this.fn()}finally{nn(this),this._runnings--,Vi=i,vi=t}}stop(){var t;this.active&&(ln(this),nn(this),(t=this.onStop)==null||t.call(this),this.active=!1)}}function ac(e){return e.value}function ln(e){e._trackId++,e._depsLength=0}function nn(e){if(e.deps&&e.deps.length>e._depsLength){for(let t=e._depsLength;t<e.deps.length;t++)Mu(e.deps[t],e);e.deps.length=e._depsLength}}function Mu(e,t){const i=e.get(t);i!==void 0&&t._trackId!==i&&(e.delete(t),e.size===0&&e.cleanup())}let vi=!0,el=0;const Eu=[];function Ni(){Eu.push(vi),vi=!1}function Wi(){const e=Eu.pop();vi=e===void 0?!0:e}function yl(){el++}function bl(){for(el--;!el&&tl.length;)tl.shift()()}function vu(e,t,i){if(t.get(e)!==e._trackId){t.set(e,e._trackId);const r=e.deps[e._depsLength];r!==t?(r&&Mu(r,e),e.deps[e._depsLength++]=t):e._depsLength++}}const tl=[];function wu(e,t,i){yl();for(const r of e.keys())if(r._dirtyLevel<t&&e.get(r)===r._trackId){const h=r._dirtyLevel;r._dirtyLevel=t,h===0&&(r._shouldSchedule=!0,r.trigger())}ku(e),bl()}function ku(e){for(const t of e.keys())t.scheduler&&t._shouldSchedule&&(!t._runnings||t.allowRecurse)&&e.get(t)===t._trackId&&(t._shouldSchedule=!1,tl.push(t.scheduler))}const Au=(e,t)=>{const i=new Map;return i.cleanup=e,i.computed=t,i},hr=new WeakMap,Hi=Symbol(""),sl=Symbol("");function Ss(e,t,i){if(vi&&Vi){let r=hr.get(e);r||hr.set(e,r=new Map);let h=r.get(i);h||r.set(i,h=Au(()=>r.delete(i))),vu(Vi,h)}}function si(e,t,i,r,h,c){const m=hr.get(e);if(!m)return;let w=[];if(t==="clear")w=[...m.values()];else if(i==="length"&&$e(e)){const k=Number(r);m.forEach((P,D)=>{(D==="length"||!Ri(D)&&D>=k)&&w.push(P)})}else switch(i!==void 0&&w.push(m.get(i)),t){case"add":$e(e)?Rl(i)&&w.push(m.get("length")):(w.push(m.get(Hi)),Yi(e)&&w.push(m.get(sl)));break;case"delete":$e(e)||(w.push(m.get(Hi)),Yi(e)&&w.push(m.get(sl)));break;case"set":Yi(e)&&w.push(m.get(Hi));break}yl();for(const k of w)k&&wu(k,2);bl()}function rc(e,t){var i;return(i=hr.get(e))==null?void 0:i.get(t)}const lc=wl("__proto__,__v_isRef,__isVue"),Ru=new Set(Object.getOwnPropertyNames(Symbol).filter(e=>e!=="arguments"&&e!=="caller").map(e=>Symbol[e]).filter(Ri)),un=nc();function nc(){const e={};return["includes","indexOf","lastIndexOf"].forEach(t=>{e[t]=function(...i){const r=vt(this);for(let c=0,m=this.length;c<m;c++)Ss(r,"get",c+"");const h=r[t](...i);return h===-1||h===!1?r[t](...i.map(vt)):h}}),["push","pop","shift","unshift","splice"].forEach(t=>{e[t]=function(...i){Ni(),yl();const r=vt(this)[t].apply(this,i);return bl(),Wi(),r}}),e}function uc(e){const t=vt(this);return Ss(t,"has",e),t.hasOwnProperty(e)}class Cu{constructor(t=!1,i=!1){this._isReadonly=t,this._shallow=i}get(t,i,r){const h=this._isReadonly,c=this._shallow;if(i==="__v_isReactive")return!h;if(i==="__v_isReadonly")return h;if(i==="__v_isShallow")return c;if(i==="__v_raw")return r===(h?c?wc:yu:c?Du:Pu).get(t)||Object.getPrototypeOf(t)===Object.getPrototypeOf(r)?t:void 0;const m=$e(t);if(!h){if(m&&Et(un,i))return Reflect.get(un,i,r);if(i==="hasOwnProperty")return uc}const w=Reflect.get(t,i,r);return(Ri(i)?Ru.has(i):lc(i))||(h||Ss(t,"get",i),c)?w:Xt(w)?m&&Rl(i)?w:w.value:Ht(w)?h?Bl(w):ua(w):w}}class Lu extends Cu{constructor(t=!1){super(!1,t)}set(t,i,r,h){let c=t[i];if(!this._shallow){const k=ta(c);if(!cr(r)&&!ta(r)&&(c=vt(c),r=vt(r)),!$e(t)&&Xt(c)&&!Xt(r))return k?!1:(c.value=r,!0)}const m=$e(t)&&Rl(i)?Number(i)<t.length:Et(t,i),w=Reflect.set(t,i,r,h);return t===vt(h)&&(m?Qs(r,c)&&si(t,"set",i,r):si(t,"add",i,r)),w}deleteProperty(t,i){const r=Et(t,i);t[i];const h=Reflect.deleteProperty(t,i);return h&&r&&si(t,"delete",i,void 0),h}has(t,i){const r=Reflect.has(t,i);return(!Ri(i)||!Ru.has(i))&&Ss(t,"has",i),r}ownKeys(t){return Ss(t,"iterate",$e(t)?"length":Hi),Reflect.ownKeys(t)}}class hc extends Cu{constructor(t=!1){super(!0,t)}set(t,i){return!0}deleteProperty(t,i){return!0}}const cc=new Lu,oc=new hc,fc=new Lu(!0),Tl=e=>e,Er=e=>Reflect.getPrototypeOf(e);function ja(e,t,i=!1,r=!1){e=e.__v_raw;const h=vt(e),c=vt(t);i||(Qs(t,c)&&Ss(h,"get",t),Ss(h,"get",c));const{has:m}=Er(h),w=r?Tl:i?Fl:Da;if(m.call(h,t))return w(e.get(t));if(m.call(h,c))return w(e.get(c));e!==h&&e.get(t)}function Xa(e,t=!1){const i=this.__v_raw,r=vt(i),h=vt(e);return t||(Qs(e,h)&&Ss(r,"has",e),Ss(r,"has",h)),e===h?i.has(e):i.has(e)||i.has(h)}function Qa(e,t=!1){return e=e.__v_raw,!t&&Ss(vt(e),"iterate",Hi),Reflect.get(e,"size",e)}function hn(e){e=vt(e);const t=vt(this);return Er(t).has.call(t,e)||(t.add(e),si(t,"add",e,e)),this}function cn(e,t){t=vt(t);const i=vt(this),{has:r,get:h}=Er(i);let c=r.call(i,e);c||(e=vt(e),c=r.call(i,e));const m=h.call(i,e);return i.set(e,t),c?Qs(t,m)&&si(i,"set",e,t):si(i,"add",e,t),this}function on(e){const t=vt(this),{has:i,get:r}=Er(t);let h=i.call(t,e);h||(e=vt(e),h=i.call(t,e)),r&&r.call(t,e);const c=t.delete(e);return h&&si(t,"delete",e,void 0),c}function fn(){const e=vt(this),t=e.size!==0,i=e.clear();return t&&si(e,"clear",void 0,void 0),i}function Ya(e,t){return function(r,h){const c=this,m=c.__v_raw,w=vt(m),k=t?Tl:e?Fl:Da;return!e&&Ss(w,"iterate",Hi),m.forEach((P,D)=>r.call(h,k(P),k(D),c))}}function Za(e,t,i){return function(...r){const h=this.__v_raw,c=vt(h),m=Yi(c),w=e==="entries"||e===Symbol.iterator&&m,k=e==="keys"&&m,P=h[e](...r),D=i?Tl:t?Fl:Da;return!t&&Ss(c,"iterate",k?sl:Hi),{next(){const{value:N,done:z}=P.next();return z?{value:N,done:z}:{value:w?[D(N[0]),D(N[1])]:D(N),done:z}},[Symbol.iterator](){return this}}}}function hi(e){return function(...t){return e==="delete"?!1:e==="clear"?void 0:this}}function pc(){const e={get(c){return ja(this,c)},get size(){return Qa(this)},has:Xa,add:hn,set:cn,delete:on,clear:fn,forEach:Ya(!1,!1)},t={get(c){return ja(this,c,!1,!0)},get size(){return Qa(this)},has:Xa,add:hn,set:cn,delete:on,clear:fn,forEach:Ya(!1,!0)},i={get(c){return ja(this,c,!0)},get size(){return Qa(this,!0)},has(c){return Xa.call(this,c,!0)},add:hi("add"),set:hi("set"),delete:hi("delete"),clear:hi("clear"),forEach:Ya(!0,!1)},r={get(c){return ja(this,c,!0,!0)},get size(){return Qa(this,!0)},has(c){return Xa.call(this,c,!0)},add:hi("add"),set:hi("set"),delete:hi("delete"),clear:hi("clear"),forEach:Ya(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(c=>{e[c]=Za(c,!1,!1),i[c]=Za(c,!0,!1),t[c]=Za(c,!1,!0),r[c]=Za(c,!0,!0)}),[e,i,t,r]}const[dc,gc,Sc,mc]=pc();function Gl(e,t){const i=t?e?mc:Sc:e?gc:dc;return(r,h,c)=>h==="__v_isReactive"?!e:h==="__v_isReadonly"?e:h==="__v_raw"?r:Reflect.get(Et(i,h)&&h in r?i:r,h,c)}const Mc={get:Gl(!1,!1)},Ec={get:Gl(!1,!0)},vc={get:Gl(!0,!1)},Pu=new WeakMap,Du=new WeakMap,yu=new WeakMap,wc=new WeakMap;function kc(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ac(e){return e.__v_skip||!Object.isExtensible(e)?0:kc(Jh(e))}function ua(e){return ta(e)?e:xl(e,!1,cc,Mc,Pu)}function bu(e){return xl(e,!1,fc,Ec,Du)}function Bl(e){return xl(e,!0,oc,vc,yu)}function xl(e,t,i,r,h){if(!Ht(e)||e.__v_raw&&!(t&&e.__v_isReactive))return e;const c=h.get(e);if(c)return c;const m=Ac(e);if(m===0)return e;const w=new Proxy(e,m===2?r:i);return h.set(e,w),w}function wi(e){return ta(e)?wi(e.__v_raw):!!(e&&e.__v_isReactive)}function ta(e){return!!(e&&e.__v_isReadonly)}function cr(e){return!!(e&&e.__v_isShallow)}function Tu(e){return wi(e)||ta(e)}function vt(e){const t=e&&e.__v_raw;return t?vt(t):e}function vr(e){return ur(e,"__v_skip",!0),e}const Da=e=>Ht(e)?ua(e):e,Fl=e=>Ht(e)?Bl(e):e;class Gu{constructor(t,i,r,h){this._setter=i,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new Dl(()=>t(this._value),()=>Ea(this,1),()=>this.dep&&ku(this.dep)),this.effect.computed=this,this.effect.active=this._cacheable=!h,this.__v_isReadonly=r}get value(){const t=vt(this);return(!t._cacheable||t.effect.dirty)&&Qs(t._value,t._value=t.effect.run())&&Ea(t,2),_l(t),t.effect._dirtyLevel>=1&&Ea(t,1),t._value}set value(t){this._setter(t)}get _dirty(){return this.effect.dirty}set _dirty(t){this.effect.dirty=t}}function Rc(e,t,i=!1){let r,h;const c=rt(e);return c?(r=e,h=Ts):(r=e.get,h=e.set),new Gu(r,h,c||!h,i)}function _l(e){vi&&Vi&&(e=vt(e),vu(Vi,e.dep||(e.dep=Au(()=>e.dep=void 0,e instanceof Gu?e:void 0))))}function Ea(e,t=2,i){e=vt(e);const r=e.dep;r&&wu(r,t)}function Xt(e){return!!(e&&e.__v_isRef===!0)}function nt(e){return xu(e,!1)}function Bu(e){return xu(e,!0)}function xu(e,t){return Xt(e)?e:new Cc(e,t)}class Cc{constructor(t,i){this.__v_isShallow=i,this.dep=void 0,this.__v_isRef=!0,this._rawValue=i?t:vt(t),this._value=i?t:Da(t)}get value(){return _l(this),this._value}set value(t){const i=this.__v_isShallow||cr(t)||ta(t);t=i?t:vt(t),Qs(t,this._rawValue)&&(this._rawValue=t,this._value=i?t:Da(t),Ea(this,2))}}function A(e){return Xt(e)?e.value:e}const Lc={get:(e,t,i)=>A(Reflect.get(e,t,i)),set:(e,t,i,r)=>{const h=e[t];return Xt(h)&&!Xt(i)?(h.value=i,!0):Reflect.set(e,t,i,r)}};function Fu(e){return wi(e)?e:new Proxy(e,Lc)}class Pc{constructor(t){this.dep=void 0,this.__v_isRef=!0;const{get:i,set:r}=t(()=>_l(this),()=>Ea(this));this._get=i,this._set=r}get value(){return this._get()}set value(t){this._set(t)}}function Dc(e){return new Pc(e)}function yc(e){const t=$e(e)?new Array(e.length):{};for(const i in e)t[i]=Tc(e,i);return t}class bc{constructor(t,i,r){this._object=t,this._key=i,this._defaultValue=r,this.__v_isRef=!0}get value(){const t=this._object[this._key];return t===void 0?this._defaultValue:t}set value(t){this._object[this._key]=t}get dep(){return rc(vt(this._object),this._key)}}function Tc(e,t,i){const r=e[t];return Xt(r)?r:new bc(e,t,i)}/**
* @vue/runtime-core v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function ki(e,t,i,r){let h;try{h=r?e(...r):e()}catch(c){wr(c,t,i)}return h}function qs(e,t,i,r){if(rt(e)){const c=ki(e,t,i,r);return c&&hu(c)&&c.catch(m=>{wr(m,t,i)}),c}const h=[];for(let c=0;c<e.length;c++)h.push(qs(e[c],t,i,r));return h}function wr(e,t,i,r=!0){const h=t?t.vnode:null;if(t){let c=t.parent;const m=t.proxy,w=`https://vuejs.org/error-reference/#runtime-${i}`;for(;c;){const P=c.ec;if(P){for(let D=0;D<P.length;D++)if(P[D](e,m,w)===!1)return}c=c.parent}const k=t.appContext.config.errorHandler;if(k){ki(k,null,10,[e,m,w]);return}}Gc(e,i,h,r)}function Gc(e,t,i,r=!0){console.error(e)}let ya=!1,il=!1;const cs=[];let Xs=0;const Zi=[];let di=null,_i=0;const _u=Promise.resolve();let Il=null;function ha(e){const t=Il||_u;return e?t.then(this?e.bind(this):e):t}function Bc(e){let t=Xs+1,i=cs.length;for(;t<i;){const r=t+i>>>1,h=cs[r],c=ba(h);c<e||c===e&&h.pre?t=r+1:i=r}return t}function Vl(e){(!cs.length||!cs.includes(e,ya&&e.allowRecurse?Xs+1:Xs))&&(e.id==null?cs.push(e):cs.splice(Bc(e.id),0,e),Iu())}function Iu(){!ya&&!il&&(il=!0,Il=_u.then(Hu))}function xc(e){const t=cs.indexOf(e);t>Xs&&cs.splice(t,1)}function Fc(e){$e(e)?Zi.push(...e):(!di||!di.includes(e,e.allowRecurse?_i+1:_i))&&Zi.push(e),Iu()}function pn(e,t,i=ya?Xs+1:0){for(;i<cs.length;i++){const r=cs[i];if(r&&r.pre){if(e&&r.id!==e.uid)continue;cs.splice(i,1),i--,r()}}}function Vu(e){if(Zi.length){const t=[...new Set(Zi)].sort((i,r)=>ba(i)-ba(r));if(Zi.length=0,di){di.push(...t);return}for(di=t,_i=0;_i<di.length;_i++)di[_i]();di=null,_i=0}}const ba=e=>e.id==null?1/0:e.id,_c=(e,t)=>{const i=ba(e)-ba(t);if(i===0){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return i};function Hu(e){il=!1,ya=!0,cs.sort(_c);try{for(Xs=0;Xs<cs.length;Xs++){const t=cs[Xs];t&&t.active!==!1&&ki(t,null,14)}}finally{Xs=0,cs.length=0,Vu(),ya=!1,Il=null,(cs.length||Zi.length)&&Hu()}}function Ic(e,t,...i){if(e.isUnmounted)return;const r=e.vnode.props||It;let h=i;const c=t.startsWith("update:"),m=c&&t.slice(7);if(m&&m in r){const D=`${m==="modelValue"?"model":m}Modifiers`,{number:N,trim:z}=r[D]||It;z&&(h=i.map(te=>Kt(te)?te.trim():te)),N&&(h=i.map(Pa))}let w,k=r[w=Fr(t)]||r[w=Fr(Ns(t))];!k&&c&&(k=r[w=Fr(Li(t))]),k&&qs(k,e,6,h);const P=r[w+"Once"];if(P){if(!e.emitted)e.emitted={};else if(e.emitted[w])return;e.emitted[w]=!0,qs(P,e,6,h)}}function qu(e,t,i=!1){const r=t.emitsCache,h=r.get(e);if(h!==void 0)return h;const c=e.emits;let m={},w=!1;if(!rt(e)){const k=P=>{const D=qu(P,t,!0);D&&(w=!0,is(m,D))};!i&&t.mixins.length&&t.mixins.forEach(k),e.extends&&k(e.extends),e.mixins&&e.mixins.forEach(k)}return!c&&!w?(Ht(e)&&r.set(e,null),null):($e(c)?c.forEach(k=>m[k]=null):is(m,c),Ht(e)&&r.set(e,m),m)}function kr(e,t){return!e||!Sr(t)?!1:(t=t.slice(2).replace(/Once$/,""),Et(e,t[0].toLowerCase()+t.slice(1))||Et(e,Li(t))||Et(e,t))}let Yt=null,Ar=null;function or(e){const t=Yt;return Yt=e,Ar=e&&e.type.__scopeId||null,t}function ws(e){Ar=e}function ks(){Ar=null}function Ee(e,t=Yt,i){if(!t||e._n)return e;const r=(...h)=>{r._d&&An(-1);const c=or(t);let m;try{m=e(...h)}finally{or(c),r._d&&An(1)}return m};return r._n=!0,r._c=!0,r._d=!0,r}function Ir(e){const{type:t,vnode:i,proxy:r,withProxy:h,props:c,propsOptions:[m],slots:w,attrs:k,emit:P,render:D,renderCache:N,data:z,setupState:te,ctx:ie,inheritAttrs:pe}=e;let Me,Pe;const He=or(e);try{if(i.shapeFlag&4){const ct=h||r,ot=ct;Me=js(D.call(ot,ct,N,c,te,z,ie)),Pe=k}else{const ct=t;Me=js(ct.length>1?ct(c,{attrs:k,slots:w,emit:P}):ct(c,null)),Pe=t.props?k:Vc(k)}}catch(ct){Aa.length=0,wr(ct,e,1),Me=ee(Ci)}let Xe=Me;if(Pe&&pe!==!1){const ct=Object.keys(Pe),{shapeFlag:ot}=Xe;ct.length&&ot&7&&(m&&ct.some(kl)&&(Pe=Hc(Pe,m)),Xe=sa(Xe,Pe))}return i.dirs&&(Xe=sa(Xe),Xe.dirs=Xe.dirs?Xe.dirs.concat(i.dirs):i.dirs),i.transition&&(Xe.transition=i.transition),Me=Xe,or(He),Me}const Vc=e=>{let t;for(const i in e)(i==="class"||i==="style"||Sr(i))&&((t||(t={}))[i]=e[i]);return t},Hc=(e,t)=>{const i={};for(const r in e)(!kl(r)||!(r.slice(9)in t))&&(i[r]=e[r]);return i};function qc(e,t,i){const{props:r,children:h,component:c}=e,{props:m,children:w,patchFlag:k}=t,P=c.emitsOptions;if(t.dirs||t.transition)return!0;if(i&&k>=0){if(k&1024)return!0;if(k&16)return r?dn(r,m,P):!!m;if(k&8){const D=t.dynamicProps;for(let N=0;N<D.length;N++){const z=D[N];if(m[z]!==r[z]&&!kr(P,z))return!0}}}else return(h||w)&&(!w||!w.$stable)?!0:r===m?!1:r?m?dn(r,m,P):!0:!!m;return!1}function dn(e,t,i){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let h=0;h<r.length;h++){const c=r[h];if(t[c]!==e[c]&&!kr(i,c))return!0}return!1}function Nc({vnode:e,parent:t},i){for(;t;){const r=t.subTree;if(r.suspense&&r.suspense.activeBranch===e&&(r.el=e.el),r===e)(e=t.vnode).el=i,t=t.parent;else break}}const Nu="components";function xt(e,t){return $c(Nu,e,!0,t)||e}const Wc=Symbol.for("v-ndc");function $c(e,t,i=!0,r=!1){const h=Yt||ss;if(h){const c=h.type;if(e===Nu){const w=Io(c,!1);if(w&&(w===t||w===Ns(t)||w===Mr(Ns(t))))return c}const m=gn(h[e]||c[e],t)||gn(h.appContext[e],t);return!m&&r?c:m}}function gn(e,t){return e&&(e[t]||e[Ns(t)]||e[Mr(Ns(t))])}const Uc=e=>e.__isSuspense;function Oc(e,t){t&&t.pendingBranch?$e(e)?t.effects.push(...e):t.effects.push(e):Fc(e)}const zc=Symbol.for("v-scx"),Jc=()=>Ve(zc);function jc(e,t){return Hl(e,null,{flush:"sync"})}const Ka={};function as(e,t,i){return Hl(e,t,i)}function Hl(e,t,{immediate:i,deep:r,flush:h,once:c,onTrack:m,onTrigger:w}=It){if(t&&c){const Qe=t;t=(...Ut)=>{Qe(...Ut),ot()}}const k=ss,P=Qe=>r===!0?Qe:Ii(Qe,r===!1?1:void 0);let D,N=!1,z=!1;if(Xt(e)?(D=()=>e.value,N=cr(e)):wi(e)?(D=()=>P(e),N=!0):$e(e)?(z=!0,N=e.some(Qe=>wi(Qe)||cr(Qe)),D=()=>e.map(Qe=>{if(Xt(Qe))return Qe.value;if(wi(Qe))return P(Qe);if(rt(Qe))return ki(Qe,k,2)})):rt(e)?t?D=()=>ki(e,k,2):D=()=>(te&&te(),qs(e,k,3,[ie])):D=Ts,t&&r){const Qe=D;D=()=>Ii(Qe())}let te,ie=Qe=>{te=Xe.onStop=()=>{ki(Qe,k,4),te=Xe.onStop=void 0}},pe;if(Dr)if(ie=Ts,t?i&&qs(t,k,3,[D(),z?[]:void 0,ie]):D(),h==="sync"){const Qe=Jc();pe=Qe.__watcherHandles||(Qe.__watcherHandles=[])}else return Ts;let Me=z?new Array(e.length).fill(Ka):Ka;const Pe=()=>{if(!(!Xe.active||!Xe.dirty))if(t){const Qe=Xe.run();(r||N||(z?Qe.some((Ut,ut)=>Qs(Ut,Me[ut])):Qs(Qe,Me)))&&(te&&te(),qs(t,k,3,[Qe,Me===Ka?void 0:z&&Me[0]===Ka?[]:Me,ie]),Me=Qe)}else Xe.run()};Pe.allowRecurse=!!t;let He;h==="sync"?He=Pe:h==="post"?He=()=>ds(Pe,k&&k.suspense):(Pe.pre=!0,k&&(Pe.id=k.uid),He=()=>Vl(Pe));const Xe=new Dl(D,Ts,He),ct=Pl(),ot=()=>{Xe.stop(),ct&&Al(ct.effects,Xe)};return t?i?Pe():Me=Xe.run():h==="post"?ds(Xe.run.bind(Xe),k&&k.suspense):Xe.run(),pe&&pe.push(ot),ot}function Xc(e,t,i){const r=this.proxy,h=Kt(e)?e.includes(".")?Wu(r,e):()=>r[e]:e.bind(r,r);let c;rt(t)?c=t:(c=t.handler,i=t);const m=Wa(this),w=Hl(h,c.bind(r),i);return m(),w}function Wu(e,t){const i=t.split(".");return()=>{let r=e;for(let h=0;h<i.length&&r;h++)r=r[i[h]];return r}}function Ii(e,t,i=0,r){if(!Ht(e)||e.__v_skip)return e;if(t&&t>0){if(i>=t)return e;i++}if(r=r||new Set,r.has(e))return e;if(r.add(e),Xt(e))Ii(e.value,t,i,r);else if($e(e))for(let h=0;h<e.length;h++)Ii(e[h],t,i,r);else if(na(e)||Yi(e))e.forEach(h=>{Ii(h,t,i,r)});else if(ou(e))for(const h in e)Ii(e[h],t,i,r);return e}function Le(e,t){if(Yt===null)return e;const i=yr(Yt)||Yt.proxy,r=e.dirs||(e.dirs=[]);for(let h=0;h<t.length;h++){let[c,m,w,k=It]=t[h];c&&(rt(c)&&(c={mounted:c,updated:c}),c.deep&&Ii(m),r.push({dir:c,instance:i,value:m,oldValue:void 0,arg:w,modifiers:k}))}return e}function Ti(e,t,i,r){const h=e.dirs,c=t&&t.dirs;for(let m=0;m<h.length;m++){const w=h[m];c&&(w.oldValue=c[m].value);let k=w.dir[r];k&&(Ni(),qs(k,i,8,[e.el,w,e,t]),Wi())}}/*! #__NO_SIDE_EFFECTS__ */function oe(e,t){return rt(e)?is({name:e.name},t,{setup:e}):e}const va=e=>!!e.type.__asyncLoader,$u=e=>e.type.__isKeepAlive;function Qc(e,t){Uu(e,"a",t)}function Yc(e,t){Uu(e,"da",t)}function Uu(e,t,i=ss){const r=e.__wdc||(e.__wdc=()=>{let h=i;for(;h;){if(h.isDeactivated)return;h=h.parent}return e()});if(Rr(t,r,i),i){let h=i.parent;for(;h&&h.parent;)$u(h.parent.vnode)&&Zc(r,t,i,h),h=h.parent}}function Zc(e,t,i,r){const h=Rr(t,e,r,!0);zu(()=>{Al(r[t],h)},i)}function Rr(e,t,i=ss,r=!1){if(i){const h=i[e]||(i[e]=[]),c=t.__weh||(t.__weh=(...m)=>{if(i.isUnmounted)return;Ni();const w=Wa(i),k=qs(t,i,e,m);return w(),Wi(),k});return r?h.unshift(c):h.push(c),c}}const ai=e=>(t,i=ss)=>(!Dr||e==="sp")&&Rr(e,(...r)=>t(...r),i),Ou=ai("bm"),Cr=ai("m"),Kc=ai("bu"),eo=ai("u"),to=ai("bum"),zu=ai("um"),so=ai("sp"),io=ai("rtg"),ao=ai("rtc");function ro(e,t=ss){Rr("ec",e,t)}function he(e,t,i,r){let h;const c=i&&i[r];if($e(e)||Kt(e)){h=new Array(e.length);for(let m=0,w=e.length;m<w;m++)h[m]=t(e[m],m,void 0,c&&c[m])}else if(typeof e=="number"){h=new Array(e);for(let m=0;m<e;m++)h[m]=t(m+1,m,void 0,c&&c[m])}else if(Ht(e))if(e[Symbol.iterator])h=Array.from(e,(m,w)=>t(m,w,void 0,c&&c[w]));else{const m=Object.keys(e);h=new Array(m.length);for(let w=0,k=m.length;w<k;w++){const P=m[w];h[w]=t(e[P],P,w,c&&c[w])}}else h=[];return i&&(i[r]=h),h}function ql(e,t){for(let i=0;i<t.length;i++){const r=t[i];if($e(r))for(let h=0;h<r.length;h++)e[r[h].name]=r[h].fn;else r&&(e[r.name]=r.key?(...h)=>{const c=r.fn(...h);return c&&(c.key=r.key),c}:r.fn)}return e}function Ws(e,t,i={},r,h){if(Yt.isCE||Yt.parent&&va(Yt.parent)&&Yt.parent.isCE)return t!=="default"&&(i.name=t),ee("slot",i,r&&r());let c=e[t];c&&c._c&&(c._d=!1),b();const m=c&&Ju(c(i)),w=lt(K,{key:i.key||m&&m.key||`_${t}`},m||(r?r():[]),m&&e._===1?64:-2);return!h&&w.scopeId&&(w.slotScopeIds=[w.scopeId+"-s"]),c&&c._c&&(c._d=!0),w}function Ju(e){return e.some(t=>dr(t)?!(t.type===Ci||t.type===K&&!Ju(t.children)):!0)?e:null}const al=e=>e?lh(e)?yr(e)||e.proxy:al(e.parent):null,wa=is(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>al(e.parent),$root:e=>al(e.root),$emit:e=>e.emit,$options:e=>Nl(e),$forceUpdate:e=>e.f||(e.f=()=>{e.effect.dirty=!0,Vl(e.update)}),$nextTick:e=>e.n||(e.n=ha.bind(e.proxy)),$watch:e=>Xc.bind(e)}),Vr=(e,t)=>e!==It&&!e.__isScriptSetup&&Et(e,t),lo={get({_:e},t){const{ctx:i,setupState:r,data:h,props:c,accessCache:m,type:w,appContext:k}=e;let P;if(t[0]!=="$"){const te=m[t];if(te!==void 0)switch(te){case 1:return r[t];case 2:return h[t];case 4:return i[t];case 3:return c[t]}else{if(Vr(r,t))return m[t]=1,r[t];if(h!==It&&Et(h,t))return m[t]=2,h[t];if((P=e.propsOptions[0])&&Et(P,t))return m[t]=3,c[t];if(i!==It&&Et(i,t))return m[t]=4,i[t];rl&&(m[t]=0)}}const D=wa[t];let N,z;if(D)return t==="$attrs"&&Ss(e,"get",t),D(e);if((N=w.__cssModules)&&(N=N[t]))return N;if(i!==It&&Et(i,t))return m[t]=4,i[t];if(z=k.config.globalProperties,Et(z,t))return z[t]},set({_:e},t,i){const{data:r,setupState:h,ctx:c}=e;return Vr(h,t)?(h[t]=i,!0):r!==It&&Et(r,t)?(r[t]=i,!0):Et(e.props,t)||t[0]==="$"&&t.slice(1)in e?!1:(c[t]=i,!0)},has({_:{data:e,setupState:t,accessCache:i,ctx:r,appContext:h,propsOptions:c}},m){let w;return!!i[m]||e!==It&&Et(e,m)||Vr(t,m)||(w=c[0])&&Et(w,m)||Et(r,m)||Et(wa,m)||Et(h.config.globalProperties,m)},defineProperty(e,t,i){return i.get!=null?e._.accessCache[t]=0:Et(i,"value")&&this.set(e,t,i.value,null),Reflect.defineProperty(e,t,i)}};function fr(e){return $e(e)?e.reduce((t,i)=>(t[i]=null,t),{}):e}function ju(e,t){return!e||!t?e||t:$e(e)&&$e(t)?e.concat(t):is({},fr(e),fr(t))}let rl=!0;function no(e){const t=Nl(e),i=e.proxy,r=e.ctx;rl=!1,t.beforeCreate&&Sn(t.beforeCreate,e,"bc");const{data:h,computed:c,methods:m,watch:w,provide:k,inject:P,created:D,beforeMount:N,mounted:z,beforeUpdate:te,updated:ie,activated:pe,deactivated:Me,beforeDestroy:Pe,beforeUnmount:He,destroyed:Xe,unmounted:ct,render:ot,renderTracked:Qe,renderTriggered:Ut,errorCaptured:ut,serverPrefetch:Be,expose:dt,inheritAttrs:Nt,components:ms,directives:Rs,filters:bi}=t;if(P&&uo(P,r,null),m)for(const Tt in m){const Lt=m[Tt];rt(Lt)&&(r[Tt]=Lt.bind(i))}if(h){const Tt=h.call(i,i);Ht(Tt)&&(e.data=ua(Tt))}if(rl=!0,c)for(const Tt in c){const Lt=c[Tt],Zs=rt(Lt)?Lt.bind(i,i):rt(Lt.get)?Lt.get.bind(i,i):Ts,ui=!rt(Lt)&&rt(Lt.set)?Lt.set.bind(i):Ts,Us=Vt({get:Zs,set:ui});Object.defineProperty(r,Tt,{enumerable:!0,configurable:!0,get:()=>Us.value,set:ps=>Us.value=ps})}if(w)for(const Tt in w)Xu(w[Tt],r,i,Tt);if(k){const Tt=rt(k)?k.call(i):k;Reflect.ownKeys(Tt).forEach(Lt=>{ka(Lt,Tt[Lt])})}D&&Sn(D,e,"c");function Ct(Tt,Lt){$e(Lt)?Lt.forEach(Zs=>Tt(Zs.bind(i))):Lt&&Tt(Lt.bind(i))}if(Ct(Ou,N),Ct(Cr,z),Ct(Kc,te),Ct(eo,ie),Ct(Qc,pe),Ct(Yc,Me),Ct(ro,ut),Ct(ao,Qe),Ct(io,Ut),Ct(to,He),Ct(zu,ct),Ct(so,Be),$e(dt))if(dt.length){const Tt=e.exposed||(e.exposed={});dt.forEach(Lt=>{Object.defineProperty(Tt,Lt,{get:()=>i[Lt],set:Zs=>i[Lt]=Zs})})}else e.exposed||(e.exposed={});ot&&e.render===Ts&&(e.render=ot),Nt!=null&&(e.inheritAttrs=Nt),ms&&(e.components=ms),Rs&&(e.directives=Rs)}function uo(e,t,i=Ts){$e(e)&&(e=ll(e));for(const r in e){const h=e[r];let c;Ht(h)?"default"in h?c=Ve(h.from||r,h.default,!0):c=Ve(h.from||r):c=Ve(h),Xt(c)?Object.defineProperty(t,r,{enumerable:!0,configurable:!0,get:()=>c.value,set:m=>c.value=m}):t[r]=c}}function Sn(e,t,i){qs($e(e)?e.map(r=>r.bind(t.proxy)):e.bind(t.proxy),t,i)}function Xu(e,t,i,r){const h=r.includes(".")?Wu(i,r):()=>i[r];if(Kt(e)){const c=t[e];rt(c)&&as(h,c)}else if(rt(e))as(h,e.bind(i));else if(Ht(e))if($e(e))e.forEach(c=>Xu(c,t,i,r));else{const c=rt(e.handler)?e.handler.bind(i):t[e.handler];rt(c)&&as(h,c,e)}}function Nl(e){const t=e.type,{mixins:i,extends:r}=t,{mixins:h,optionsCache:c,config:{optionMergeStrategies:m}}=e.appContext,w=c.get(t);let k;return w?k=w:!h.length&&!i&&!r?k=t:(k={},h.length&&h.forEach(P=>pr(k,P,m,!0)),pr(k,t,m)),Ht(t)&&c.set(t,k),k}function pr(e,t,i,r=!1){const{mixins:h,extends:c}=t;c&&pr(e,c,i,!0),h&&h.forEach(m=>pr(e,m,i,!0));for(const m in t)if(!(r&&m==="expose")){const w=ho[m]||i&&i[m];e[m]=w?w(e[m],t[m]):t[m]}return e}const ho={data:mn,props:Mn,emits:Mn,methods:Ma,computed:Ma,beforeCreate:os,created:os,beforeMount:os,mounted:os,beforeUpdate:os,updated:os,beforeDestroy:os,beforeUnmount:os,destroyed:os,unmounted:os,activated:os,deactivated:os,errorCaptured:os,serverPrefetch:os,components:Ma,directives:Ma,watch:oo,provide:mn,inject:co};function mn(e,t){return t?e?function(){return is(rt(e)?e.call(this,this):e,rt(t)?t.call(this,this):t)}:t:e}function co(e,t){return Ma(ll(e),ll(t))}function ll(e){if($e(e)){const t={};for(let i=0;i<e.length;i++)t[e[i]]=e[i];return t}return e}function os(e,t){return e?[...new Set([].concat(e,t))]:t}function Ma(e,t){return e?is(Object.create(null),e,t):t}function Mn(e,t){return e?$e(e)&&$e(t)?[...new Set([...e,...t])]:is(Object.create(null),fr(e),fr(t??{})):t}function oo(e,t){if(!e)return t;if(!t)return e;const i=is(Object.create(null),e);for(const r in t)i[r]=os(e[r],t[r]);return i}function Qu(){return{app:null,config:{isNativeTag:Oh,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let fo=0;function po(e,t){return function(r,h=null){rt(r)||(r=is({},r)),h!=null&&!Ht(h)&&(h=null);const c=Qu(),m=new WeakSet;let w=!1;const k=c.app={_uid:fo++,_component:r,_props:h,_container:null,_context:c,_instance:null,version:Ho,get config(){return c.config},set config(P){},use(P,...D){return m.has(P)||(P&&rt(P.install)?(m.add(P),P.install(k,...D)):rt(P)&&(m.add(P),P(k,...D))),k},mixin(P){return c.mixins.includes(P)||c.mixins.push(P),k},component(P,D){return D?(c.components[P]=D,k):c.components[P]},directive(P,D){return D?(c.directives[P]=D,k):c.directives[P]},mount(P,D,N){if(!w){const z=ee(r,h);return z.appContext=c,N===!0?N="svg":N===!1&&(N=void 0),D&&t?t(z,P):e(z,P,N),w=!0,k._container=P,P.__vue_app__=k,yr(z.component)||z.component.proxy}},unmount(){w&&(e(null,k._container),delete k._container.__vue_app__)},provide(P,D){return c.provides[P]=D,k},runWithContext(P){Ta=k;try{return P()}finally{Ta=null}}};return k}}let Ta=null;function ka(e,t){if(ss){let i=ss.provides;const r=ss.parent&&ss.parent.provides;r===i&&(i=ss.provides=Object.create(r)),i[e]=t}}function Ve(e,t,i=!1){const r=ss||Yt;if(r||Ta){const h=r?r.parent==null?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides:Ta._context.provides;if(h&&e in h)return h[e];if(arguments.length>1)return i&&rt(t)?t.call(r&&r.proxy):t}}function go(){return!!(ss||Yt||Ta)}function So(e,t,i,r=!1){const h={},c={};ur(c,Pr,1),e.propsDefaults=Object.create(null),Yu(e,t,h,c);for(const m in e.propsOptions[0])m in h||(h[m]=void 0);i?e.props=r?h:bu(h):e.type.props?e.props=h:e.props=c,e.attrs=c}function mo(e,t,i,r){const{props:h,attrs:c,vnode:{patchFlag:m}}=e,w=vt(h),[k]=e.propsOptions;let P=!1;if((r||m>0)&&!(m&16)){if(m&8){const D=e.vnode.dynamicProps;for(let N=0;N<D.length;N++){let z=D[N];if(kr(e.emitsOptions,z))continue;const te=t[z];if(k)if(Et(c,z))te!==c[z]&&(c[z]=te,P=!0);else{const ie=Ns(z);h[ie]=nl(k,w,ie,te,e,!1)}else te!==c[z]&&(c[z]=te,P=!0)}}}else{Yu(e,t,h,c)&&(P=!0);let D;for(const N in w)(!t||!Et(t,N)&&((D=Li(N))===N||!Et(t,D)))&&(k?i&&(i[N]!==void 0||i[D]!==void 0)&&(h[N]=nl(k,w,N,void 0,e,!0)):delete h[N]);if(c!==w)for(const N in c)(!t||!Et(t,N))&&(delete c[N],P=!0)}P&&si(e,"set","$attrs")}function Yu(e,t,i,r){const[h,c]=e.propsOptions;let m=!1,w;if(t)for(let k in t){if(ir(k))continue;const P=t[k];let D;h&&Et(h,D=Ns(k))?!c||!c.includes(D)?i[D]=P:(w||(w={}))[D]=P:kr(e.emitsOptions,k)||(!(k in r)||P!==r[k])&&(r[k]=P,m=!0)}if(c){const k=vt(i),P=w||It;for(let D=0;D<c.length;D++){const N=c[D];i[N]=nl(h,k,N,P[N],e,!Et(P,N))}}return m}function nl(e,t,i,r,h,c){const m=e[i];if(m!=null){const w=Et(m,"default");if(w&&r===void 0){const k=m.default;if(m.type!==Function&&!m.skipFactory&&rt(k)){const{propsDefaults:P}=h;if(i in P)r=P[i];else{const D=Wa(h);r=P[i]=k.call(null,t),D()}}else r=k}m[0]&&(c&&!w?r=!1:m[1]&&(r===""||r===Li(i))&&(r=!0))}return r}function Zu(e,t,i=!1){const r=t.propsCache,h=r.get(e);if(h)return h;const c=e.props,m={},w=[];let k=!1;if(!rt(e)){const D=N=>{k=!0;const[z,te]=Zu(N,t,!0);is(m,z),te&&w.push(...te)};!i&&t.mixins.length&&t.mixins.forEach(D),e.extends&&D(e.extends),e.mixins&&e.mixins.forEach(D)}if(!c&&!k)return Ht(e)&&r.set(e,Qi),Qi;if($e(c))for(let D=0;D<c.length;D++){const N=Ns(c[D]);En(N)&&(m[N]=It)}else if(c)for(const D in c){const N=Ns(D);if(En(N)){const z=c[D],te=m[N]=$e(z)||rt(z)?{type:z}:is({},z);if(te){const ie=kn(Boolean,te.type),pe=kn(String,te.type);te[0]=ie>-1,te[1]=pe<0||ie<pe,(ie>-1||Et(te,"default"))&&w.push(N)}}}const P=[m,w];return Ht(e)&&r.set(e,P),P}function En(e){return e[0]!=="$"}function vn(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:e===null?"null":""}function wn(e,t){return vn(e)===vn(t)}function kn(e,t){return $e(t)?t.findIndex(i=>wn(i,e)):rt(t)&&wn(t,e)?0:-1}const Ku=e=>e[0]==="_"||e==="$stable",Wl=e=>$e(e)?e.map(js):[js(e)],Mo=(e,t,i)=>{if(t._n)return t;const r=Ee((...h)=>Wl(t(...h)),i);return r._c=!1,r},eh=(e,t,i)=>{const r=e._ctx;for(const h in e){if(Ku(h))continue;const c=e[h];if(rt(c))t[h]=Mo(h,c,r);else if(c!=null){const m=Wl(c);t[h]=()=>m}}},th=(e,t)=>{const i=Wl(t);e.slots.default=()=>i},Eo=(e,t)=>{if(e.vnode.shapeFlag&32){const i=t._;i?(e.slots=vt(t),ur(t,"_",i)):eh(t,e.slots={})}else e.slots={},t&&th(e,t);ur(e.slots,Pr,1)},vo=(e,t,i)=>{const{vnode:r,slots:h}=e;let c=!0,m=It;if(r.shapeFlag&32){const w=t._;w?i&&w===1?c=!1:(is(h,t),!i&&w===1&&delete h._):(c=!t.$stable,eh(t,h)),m=t}else t&&(th(e,t),m={default:1});if(c)for(const w in h)!Ku(w)&&m[w]==null&&delete h[w]};function ul(e,t,i,r,h=!1){if($e(e)){e.forEach((z,te)=>ul(z,t&&($e(t)?t[te]:t),i,r,h));return}if(va(r)&&!h)return;const c=r.shapeFlag&4?yr(r.component)||r.component.proxy:r.el,m=h?null:c,{i:w,r:k}=e,P=t&&t.r,D=w.refs===It?w.refs={}:w.refs,N=w.setupState;if(P!=null&&P!==k&&(Kt(P)?(D[P]=null,Et(N,P)&&(N[P]=null)):Xt(P)&&(P.value=null)),rt(k))ki(k,w,12,[m,D]);else{const z=Kt(k),te=Xt(k),ie=e.f;if(z||te){const pe=()=>{if(ie){const Me=z?Et(N,k)?N[k]:D[k]:k.value;h?$e(Me)&&Al(Me,c):$e(Me)?Me.includes(c)||Me.push(c):z?(D[k]=[c],Et(N,k)&&(N[k]=D[k])):(k.value=[c],e.k&&(D[e.k]=k.value))}else z?(D[k]=m,Et(N,k)&&(N[k]=m)):te&&(k.value=m,e.k&&(D[e.k]=m))};h||ie?pe():(pe.id=-1,ds(pe,i))}}}const ds=Oc;function wo(e){return ko(e)}function ko(e,t){const i=fu();i.__VUE__=!0;const{insert:r,remove:h,patchProp:c,createElement:m,createText:w,createComment:k,setText:P,setElementText:D,parentNode:N,nextSibling:z,setScopeId:te=Ts,insertStaticContent:ie}=e,pe=(I,U,ae,ue=null,le=null,ge=null,Ce=void 0,de=null,ve=!!U.dynamicChildren)=>{if(I===U)return;I&&!ga(I,U)&&(ue=ne(I),ps(I,le,ge,!0),I=null),U.patchFlag===-2&&(ve=!1,U.dynamicChildren=null);const{type:ce,ref:Te,shapeFlag:Je}=U;switch(ce){case Lr:Me(I,U,ae,ue);break;case Ci:Pe(I,U,ae,ue);break;case qr:I==null&&He(U,ae,ue,Ce);break;case K:ms(I,U,ae,ue,le,ge,Ce,de,ve);break;default:Je&1?ot(I,U,ae,ue,le,ge,Ce,de,ve):Je&6?Rs(I,U,ae,ue,le,ge,Ce,de,ve):(Je&64||Je&128)&&ce.process(I,U,ae,ue,le,ge,Ce,de,ve,Ie)}Te!=null&&le&&ul(Te,I&&I.ref,ge,U||I,!U)},Me=(I,U,ae,ue)=>{if(I==null)r(U.el=w(U.children),ae,ue);else{const le=U.el=I.el;U.children!==I.children&&P(le,U.children)}},Pe=(I,U,ae,ue)=>{I==null?r(U.el=k(U.children||""),ae,ue):U.el=I.el},He=(I,U,ae,ue)=>{[I.el,I.anchor]=ie(I.children,U,ae,ue,I.el,I.anchor)},Xe=({el:I,anchor:U},ae,ue)=>{let le;for(;I&&I!==U;)le=z(I),r(I,ae,ue),I=le;r(U,ae,ue)},ct=({el:I,anchor:U})=>{let ae;for(;I&&I!==U;)ae=z(I),h(I),I=ae;h(U)},ot=(I,U,ae,ue,le,ge,Ce,de,ve)=>{U.type==="svg"?Ce="svg":U.type==="math"&&(Ce="mathml"),I==null?Qe(U,ae,ue,le,ge,Ce,de,ve):Be(I,U,le,ge,Ce,de,ve)},Qe=(I,U,ae,ue,le,ge,Ce,de)=>{let ve,ce;const{props:Te,shapeFlag:Je,transition:Ne,dirs:st}=I;if(ve=I.el=m(I.type,ge,Te&&Te.is,Te),Je&8?D(ve,I.children):Je&16&&ut(I.children,ve,null,ue,le,Hr(I,ge),Ce,de),st&&Ti(I,null,ue,"created"),Ut(ve,I,I.scopeId,Ce,ue),Te){for(const Gt in Te)Gt!=="value"&&!ir(Gt)&&c(ve,Gt,null,Te[Gt],ge,I.children,ue,le,ls);"value"in Te&&c(ve,"value",null,Te.value,ge),(ce=Te.onVnodeBeforeMount)&&zs(ce,ue,I)}st&&Ti(I,null,ue,"beforeMount");const pt=Ao(le,Ne);pt&&Ne.beforeEnter(ve),r(ve,U,ae),((ce=Te&&Te.onVnodeMounted)||pt||st)&&ds(()=>{ce&&zs(ce,ue,I),pt&&Ne.enter(ve),st&&Ti(I,null,ue,"mounted")},le)},Ut=(I,U,ae,ue,le)=>{if(ae&&te(I,ae),ue)for(let ge=0;ge<ue.length;ge++)te(I,ue[ge]);if(le){let ge=le.subTree;if(U===ge){const Ce=le.vnode;Ut(I,Ce,Ce.scopeId,Ce.slotScopeIds,le.parent)}}},ut=(I,U,ae,ue,le,ge,Ce,de,ve=0)=>{for(let ce=ve;ce<I.length;ce++){const Te=I[ce]=de?gi(I[ce]):js(I[ce]);pe(null,Te,U,ae,ue,le,ge,Ce,de)}},Be=(I,U,ae,ue,le,ge,Ce)=>{const de=U.el=I.el;let{patchFlag:ve,dynamicChildren:ce,dirs:Te}=U;ve|=I.patchFlag&16;const Je=I.props||It,Ne=U.props||It;let st;if(ae&&Gi(ae,!1),(st=Ne.onVnodeBeforeUpdate)&&zs(st,ae,U,I),Te&&Ti(U,I,ae,"beforeUpdate"),ae&&Gi(ae,!0),ce?dt(I.dynamicChildren,ce,de,ae,ue,Hr(U,le),ge):Ce||Lt(I,U,de,null,ae,ue,Hr(U,le),ge,!1),ve>0){if(ve&16)Nt(de,U,Je,Ne,ae,ue,le);else if(ve&2&&Je.class!==Ne.class&&c(de,"class",null,Ne.class,le),ve&4&&c(de,"style",Je.style,Ne.style,le),ve&8){const pt=U.dynamicProps;for(let Gt=0;Gt<pt.length;Gt++){const $t=pt[Gt],es=Je[$t],Is=Ne[$t];(Is!==es||$t==="value")&&c(de,$t,es,Is,le,I.children,ae,ue,ls)}}ve&1&&I.children!==U.children&&D(de,U.children)}else!Ce&&ce==null&&Nt(de,U,Je,Ne,ae,ue,le);((st=Ne.onVnodeUpdated)||Te)&&ds(()=>{st&&zs(st,ae,U,I),Te&&Ti(U,I,ae,"updated")},ue)},dt=(I,U,ae,ue,le,ge,Ce)=>{for(let de=0;de<U.length;de++){const ve=I[de],ce=U[de],Te=ve.el&&(ve.type===K||!ga(ve,ce)||ve.shapeFlag&70)?N(ve.el):ae;pe(ve,ce,Te,null,ue,le,ge,Ce,!0)}},Nt=(I,U,ae,ue,le,ge,Ce)=>{if(ae!==ue){if(ae!==It)for(const de in ae)!ir(de)&&!(de in ue)&&c(I,de,ae[de],null,Ce,U.children,le,ge,ls);for(const de in ue){if(ir(de))continue;const ve=ue[de],ce=ae[de];ve!==ce&&de!=="value"&&c(I,de,ce,ve,Ce,U.children,le,ge,ls)}"value"in ue&&c(I,"value",ae.value,ue.value,Ce)}},ms=(I,U,ae,ue,le,ge,Ce,de,ve)=>{const ce=U.el=I?I.el:w(""),Te=U.anchor=I?I.anchor:w("");let{patchFlag:Je,dynamicChildren:Ne,slotScopeIds:st}=U;st&&(de=de?de.concat(st):st),I==null?(r(ce,ae,ue),r(Te,ae,ue),ut(U.children||[],ae,Te,le,ge,Ce,de,ve)):Je>0&&Je&64&&Ne&&I.dynamicChildren?(dt(I.dynamicChildren,Ne,ae,le,ge,Ce,de),(U.key!=null||le&&U===le.subTree)&&sh(I,U,!0)):Lt(I,U,ae,Te,le,ge,Ce,de,ve)},Rs=(I,U,ae,ue,le,ge,Ce,de,ve)=>{U.slotScopeIds=de,I==null?U.shapeFlag&512?le.ctx.activate(U,ae,ue,Ce,ve):bi(U,ae,ue,le,ge,Ce,ve):Cs(I,U,ve)},bi=(I,U,ae,ue,le,ge,Ce)=>{const de=I.component=Go(I,ue,le);if($u(I)&&(de.ctx.renderer=Ie),Bo(de),de.asyncDep){if(le&&le.registerDep(de,Ct),!I.el){const ve=de.subTree=ee(Ci);Pe(null,ve,U,ae)}}else Ct(de,I,U,ae,le,ge,Ce)},Cs=(I,U,ae)=>{const ue=U.component=I.component;if(qc(I,U,ae))if(ue.asyncDep&&!ue.asyncResolved){Tt(ue,U,ae);return}else ue.next=U,xc(ue.update),ue.effect.dirty=!0,ue.update();else U.el=I.el,ue.vnode=U},Ct=(I,U,ae,ue,le,ge,Ce)=>{const de=()=>{if(I.isMounted){let{next:Te,bu:Je,u:Ne,parent:st,vnode:pt}=I;{const zi=ih(I);if(zi){Te&&(Te.el=pt.el,Tt(I,Te,Ce)),zi.asyncDep.then(()=>{I.isUnmounted||de()});return}}let Gt=Te,$t;Gi(I,!1),Te?(Te.el=pt.el,Tt(I,Te,Ce)):Te=pt,Je&&ar(Je),($t=Te.props&&Te.props.onVnodeBeforeUpdate)&&zs($t,st,Te,pt),Gi(I,!0);const es=Ir(I),Is=I.subTree;I.subTree=es,pe(Is,es,N(Is.el),ne(Is),I,le,ge),Te.el=es.el,Gt===null&&Nc(I,es.el),Ne&&ds(Ne,le),($t=Te.props&&Te.props.onVnodeUpdated)&&ds(()=>zs($t,st,Te,pt),le)}else{let Te;const{el:Je,props:Ne}=U,{bm:st,m:pt,parent:Gt}=I,$t=va(U);if(Gi(I,!1),st&&ar(st),!$t&&(Te=Ne&&Ne.onVnodeBeforeMount)&&zs(Te,Gt,U),Gi(I,!0),Je&&Wt){const es=()=>{I.subTree=Ir(I),Wt(Je,I.subTree,I,le,null)};$t?U.type.__asyncLoader().then(()=>!I.isUnmounted&&es()):es()}else{const es=I.subTree=Ir(I);pe(null,es,ae,ue,I,le,ge),U.el=es.el}if(pt&&ds(pt,le),!$t&&(Te=Ne&&Ne.onVnodeMounted)){const es=U;ds(()=>zs(Te,Gt,es),le)}(U.shapeFlag&256||Gt&&va(Gt.vnode)&&Gt.vnode.shapeFlag&256)&&I.a&&ds(I.a,le),I.isMounted=!0,U=ae=ue=null}},ve=I.effect=new Dl(de,Ts,()=>Vl(ce),I.scope),ce=I.update=()=>{ve.dirty&&ve.run()};ce.id=I.uid,Gi(I,!0),ce()},Tt=(I,U,ae)=>{U.component=I;const ue=I.vnode.props;I.vnode=U,I.next=null,mo(I,U.props,ue,ae),vo(I,U.children,ae),Ni(),pn(I),Wi()},Lt=(I,U,ae,ue,le,ge,Ce,de,ve=!1)=>{const ce=I&&I.children,Te=I?I.shapeFlag:0,Je=U.children,{patchFlag:Ne,shapeFlag:st}=U;if(Ne>0){if(Ne&128){ui(ce,Je,ae,ue,le,ge,Ce,de,ve);return}else if(Ne&256){Zs(ce,Je,ae,ue,le,ge,Ce,de,ve);return}}st&8?(Te&16&&ls(ce,le,ge),Je!==ce&&D(ae,Je)):Te&16?st&16?ui(ce,Je,ae,ue,le,ge,Ce,de,ve):ls(ce,le,ge,!0):(Te&8&&D(ae,""),st&16&&ut(Je,ae,ue,le,ge,Ce,de,ve))},Zs=(I,U,ae,ue,le,ge,Ce,de,ve)=>{I=I||Qi,U=U||Qi;const ce=I.length,Te=U.length,Je=Math.min(ce,Te);let Ne;for(Ne=0;Ne<Je;Ne++){const st=U[Ne]=ve?gi(U[Ne]):js(U[Ne]);pe(I[Ne],st,ae,null,le,ge,Ce,de,ve)}ce>Te?ls(I,le,ge,!0,!1,Je):ut(U,ae,ue,le,ge,Ce,de,ve,Je)},ui=(I,U,ae,ue,le,ge,Ce,de,ve)=>{let ce=0;const Te=U.length;let Je=I.length-1,Ne=Te-1;for(;ce<=Je&&ce<=Ne;){const st=I[ce],pt=U[ce]=ve?gi(U[ce]):js(U[ce]);if(ga(st,pt))pe(st,pt,ae,null,le,ge,Ce,de,ve);else break;ce++}for(;ce<=Je&&ce<=Ne;){const st=I[Je],pt=U[Ne]=ve?gi(U[Ne]):js(U[Ne]);if(ga(st,pt))pe(st,pt,ae,null,le,ge,Ce,de,ve);else break;Je--,Ne--}if(ce>Je){if(ce<=Ne){const st=Ne+1,pt=st<Te?U[st].el:ue;for(;ce<=Ne;)pe(null,U[ce]=ve?gi(U[ce]):js(U[ce]),ae,pt,le,ge,Ce,de,ve),ce++}}else if(ce>Ne)for(;ce<=Je;)ps(I[ce],le,ge,!0),ce++;else{const st=ce,pt=ce,Gt=new Map;for(ce=pt;ce<=Ne;ce++){const Ms=U[ce]=ve?gi(U[ce]):js(U[ce]);Ms.key!=null&&Gt.set(Ms.key,ce)}let $t,es=0;const Is=Ne-pt+1;let zi=!1,Kl=0;const da=new Array(Is);for(ce=0;ce<Is;ce++)da[ce]=0;for(ce=st;ce<=Je;ce++){const Ms=I[ce];if(es>=Is){ps(Ms,le,ge,!0);continue}let Os;if(Ms.key!=null)Os=Gt.get(Ms.key);else for($t=pt;$t<=Ne;$t++)if(da[$t-pt]===0&&ga(Ms,U[$t])){Os=$t;break}Os===void 0?ps(Ms,le,ge,!0):(da[Os-pt]=ce+1,Os>=Kl?Kl=Os:zi=!0,pe(Ms,U[Os],ae,null,le,ge,Ce,de,ve),es++)}const en=zi?Ro(da):Qi;for($t=en.length-1,ce=Is-1;ce>=0;ce--){const Ms=pt+ce,Os=U[Ms],tn=Ms+1<Te?U[Ms+1].el:ue;da[ce]===0?pe(null,Os,ae,tn,le,ge,Ce,de,ve):zi&&($t<0||ce!==en[$t]?Us(Os,ae,tn,2):$t--)}}},Us=(I,U,ae,ue,le=null)=>{const{el:ge,type:Ce,transition:de,children:ve,shapeFlag:ce}=I;if(ce&6){Us(I.component.subTree,U,ae,ue);return}if(ce&128){I.suspense.move(U,ae,ue);return}if(ce&64){Ce.move(I,U,ae,Ie);return}if(Ce===K){r(ge,U,ae);for(let Je=0;Je<ve.length;Je++)Us(ve[Je],U,ae,ue);r(I.anchor,U,ae);return}if(Ce===qr){Xe(I,U,ae);return}if(ue!==2&&ce&1&&de)if(ue===0)de.beforeEnter(ge),r(ge,U,ae),ds(()=>de.enter(ge),le);else{const{leave:Je,delayLeave:Ne,afterLeave:st}=de,pt=()=>r(ge,U,ae),Gt=()=>{Je(ge,()=>{pt(),st&&st()})};Ne?Ne(ge,pt,Gt):Gt()}else r(ge,U,ae)},ps=(I,U,ae,ue=!1,le=!1)=>{const{type:ge,props:Ce,ref:de,children:ve,dynamicChildren:ce,shapeFlag:Te,patchFlag:Je,dirs:Ne}=I;if(de!=null&&ul(de,null,ae,I,!0),Te&256){U.ctx.deactivate(I);return}const st=Te&1&&Ne,pt=!va(I);let Gt;if(pt&&(Gt=Ce&&Ce.onVnodeBeforeUnmount)&&zs(Gt,U,I),Te&6)Ja(I.component,ae,ue);else{if(Te&128){I.suspense.unmount(ae,ue);return}st&&Ti(I,null,U,"beforeUnmount"),Te&64?I.type.remove(I,U,ae,le,Ie,ue):ce&&(ge!==K||Je>0&&Je&64)?ls(ce,U,ae,!1,!0):(ge===K&&Je&384||!le&&Te&16)&&ls(ve,U,ae),ue&&Ui(I)}(pt&&(Gt=Ce&&Ce.onVnodeUnmounted)||st)&&ds(()=>{Gt&&zs(Gt,U,I),st&&Ti(I,null,U,"unmounted")},ae)},Ui=I=>{const{type:U,el:ae,anchor:ue,transition:le}=I;if(U===K){Oi(ae,ue);return}if(U===qr){ct(I);return}const ge=()=>{h(ae),le&&!le.persisted&&le.afterLeave&&le.afterLeave()};if(I.shapeFlag&1&&le&&!le.persisted){const{leave:Ce,delayLeave:de}=le,ve=()=>Ce(ae,ge);de?de(I.el,ge,ve):ve()}else ge()},Oi=(I,U)=>{let ae;for(;I!==U;)ae=z(I),h(I),I=ae;h(U)},Ja=(I,U,ae)=>{const{bum:ue,scope:le,update:ge,subTree:Ce,um:de}=I;ue&&ar(ue),le.stop(),ge&&(ge.active=!1,ps(Ce,I,U,ae)),de&&ds(de,U),ds(()=>{I.isUnmounted=!0},U),U&&U.pendingBranch&&!U.isUnmounted&&I.asyncDep&&!I.asyncResolved&&I.suspenseId===U.pendingId&&(U.deps--,U.deps===0&&U.resolve())},ls=(I,U,ae,ue=!1,le=!1,ge=0)=>{for(let Ce=ge;Ce<I.length;Ce++)ps(I[Ce],U,ae,ue,le)},ne=I=>I.shapeFlag&6?ne(I.component.subTree):I.shapeFlag&128?I.suspense.next():z(I.anchor||I.el);let be=!1;const Re=(I,U,ae)=>{I==null?U._vnode&&ps(U._vnode,null,null,!0):pe(U._vnode||null,I,U,null,null,null,ae),be||(be=!0,pn(),Vu(),be=!1),U._vnode=I},Ie={p:pe,um:ps,m:Us,r:Ui,mt:bi,mc:ut,pc:Lt,pbc:dt,n:ne,o:e};let Pt,Wt;return t&&([Pt,Wt]=t(Ie)),{render:Re,hydrate:Pt,createApp:po(Re,Pt)}}function Hr({type:e,props:t},i){return i==="svg"&&e==="foreignObject"||i==="mathml"&&e==="annotation-xml"&&t&&t.encoding&&t.encoding.includes("html")?void 0:i}function Gi({effect:e,update:t},i){e.allowRecurse=t.allowRecurse=i}function Ao(e,t){return(!e||e&&!e.pendingBranch)&&t&&!t.persisted}function sh(e,t,i=!1){const r=e.children,h=t.children;if($e(r)&&$e(h))for(let c=0;c<r.length;c++){const m=r[c];let w=h[c];w.shapeFlag&1&&!w.dynamicChildren&&((w.patchFlag<=0||w.patchFlag===32)&&(w=h[c]=gi(h[c]),w.el=m.el),i||sh(m,w)),w.type===Lr&&(w.el=m.el)}}function Ro(e){const t=e.slice(),i=[0];let r,h,c,m,w;const k=e.length;for(r=0;r<k;r++){const P=e[r];if(P!==0){if(h=i[i.length-1],e[h]<P){t[r]=h,i.push(r);continue}for(c=0,m=i.length-1;c<m;)w=c+m>>1,e[i[w]]<P?c=w+1:m=w;P<e[i[c]]&&(c>0&&(t[r]=i[c-1]),i[c]=r)}}for(c=i.length,m=i[c-1];c-- >0;)i[c]=m,m=t[m];return i}function ih(e){const t=e.subTree.component;if(t)return t.asyncDep&&!t.asyncResolved?t:ih(t)}const Co=e=>e.__isTeleport,K=Symbol.for("v-fgt"),Lr=Symbol.for("v-txt"),Ci=Symbol.for("v-cmt"),qr=Symbol.for("v-stc"),Aa=[];let Hs=null;function b(e=!1){Aa.push(Hs=e?null:[])}function Lo(){Aa.pop(),Hs=Aa[Aa.length-1]||null}let Ga=1;function An(e){Ga+=e}function ah(e){return e.dynamicChildren=Ga>0?Hs||Qi:null,Lo(),Ga>0&&Hs&&Hs.push(e),e}function B(e,t,i,r,h,c){return ah(g(e,t,i,r,h,c,!0))}function lt(e,t,i,r,h){return ah(ee(e,t,i,r,h,!0))}function dr(e){return e?e.__v_isVNode===!0:!1}function ga(e,t){return e.type===t.type&&e.key===t.key}const Pr="__vInternal",rh=({key:e})=>e??null,rr=({ref:e,ref_key:t,ref_for:i})=>(typeof e=="number"&&(e=""+e),e!=null?Kt(e)||Xt(e)||rt(e)?{i:Yt,r:e,k:t,f:!!i}:e:null);function g(e,t=null,i=null,r=0,h=null,c=e===K?0:1,m=!1,w=!1){const k={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&rh(t),ref:t&&rr(t),scopeId:Ar,slotScopeIds:null,children:i,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:c,patchFlag:r,dynamicProps:h,dynamicChildren:null,appContext:null,ctx:Yt};return w?($l(k,i),c&128&&e.normalize(k)):i&&(k.shapeFlag|=Kt(i)?8:16),Ga>0&&!m&&Hs&&(k.patchFlag>0||c&6)&&k.patchFlag!==32&&Hs.push(k),k}const ee=Po;function Po(e,t=null,i=null,r=0,h=null,c=!1){if((!e||e===Wc)&&(e=Ci),dr(e)){const w=sa(e,t,!0);return i&&$l(w,i),Ga>0&&!c&&Hs&&(w.shapeFlag&6?Hs[Hs.indexOf(e)]=w:Hs.push(w)),w.patchFlag|=-2,w}if(Vo(e)&&(e=e.__vccOpts),t){t=Do(t);let{class:w,style:k}=t;w&&!Kt(w)&&(t.class=mt(w)),Ht(k)&&(Tu(k)&&!$e(k)&&(k=is({},k)),t.style=Cl(k))}const m=Kt(e)?1:Uc(e)?128:Co(e)?64:Ht(e)?4:rt(e)?2:0;return g(e,t,i,r,h,m,c,!0)}function Do(e){return e?Tu(e)||Pr in e?is({},e):e:null}function sa(e,t,i=!1){const{props:r,ref:h,patchFlag:c,children:m}=e,w=t?yo(r||{},t):r;return{__v_isVNode:!0,__v_skip:!0,type:e.type,props:w,key:w&&rh(w),ref:t&&t.ref?i&&h?$e(h)?h.concat(rr(t)):[h,rr(t)]:rr(t):h,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:m,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==K?c===-1?16:c|16:c,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&sa(e.ssContent),ssFallback:e.ssFallback&&sa(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce}}function j(e=" ",t=0){return ee(Lr,null,e,t)}function ft(e="",t=!1){return t?(b(),lt(Ci,null,e)):ee(Ci,null,e)}function js(e){return e==null||typeof e=="boolean"?ee(Ci):$e(e)?ee(K,null,e.slice()):typeof e=="object"?gi(e):ee(Lr,null,String(e))}function gi(e){return e.el===null&&e.patchFlag!==-1||e.memo?e:sa(e)}function $l(e,t){let i=0;const{shapeFlag:r}=e;if(t==null)t=null;else if($e(t))i=16;else if(typeof t=="object")if(r&65){const h=t.default;h&&(h._c&&(h._d=!1),$l(e,h()),h._c&&(h._d=!0));return}else{i=32;const h=t._;!h&&!(Pr in t)?t._ctx=Yt:h===3&&Yt&&(Yt.slots._===1?t._=1:(t._=2,e.patchFlag|=1024))}else rt(t)?(t={default:t,_ctx:Yt},i=32):(t=String(t),r&64?(i=16,t=[j(t)]):i=8);e.children=t,e.shapeFlag|=i}function yo(...e){const t={};for(let i=0;i<e.length;i++){const r=e[i];for(const h in r)if(h==="class")t.class!==r.class&&(t.class=mt([t.class,r.class]));else if(h==="style")t.style=Cl([t.style,r.style]);else if(Sr(h)){const c=t[h],m=r[h];m&&c!==m&&!($e(c)&&c.includes(m))&&(t[h]=c?[].concat(c,m):m)}else h!==""&&(t[h]=r[h])}return t}function zs(e,t,i,r=null){qs(e,t,7,[i,r])}const bo=Qu();let To=0;function Go(e,t,i){const r=e.type,h=(t?t.appContext:e.appContext)||bo,c={uid:To++,vnode:e,type:r,parent:t,appContext:h,root:null,next:null,subTree:null,effect:null,update:null,scope:new gu(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(h.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Zu(r,h),emitsOptions:qu(r,h),emit:null,emitted:null,propsDefaults:It,inheritAttrs:r.inheritAttrs,ctx:It,data:It,props:It,attrs:It,slots:It,refs:It,setupState:It,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:i,suspenseId:i?i.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return c.ctx={_:c},c.root=t?t.root:c,c.emit=Ic.bind(null,c),e.ce&&e.ce(c),c}let ss=null;const Ul=()=>ss||Yt;let gr,hl;{const e=fu(),t=(i,r)=>{let h;return(h=e[i])||(h=e[i]=[]),h.push(r),c=>{h.length>1?h.forEach(m=>m(c)):h[0](c)}};gr=t("__VUE_INSTANCE_SETTERS__",i=>ss=i),hl=t("__VUE_SSR_SETTERS__",i=>Dr=i)}const Wa=e=>{const t=ss;return gr(e),e.scope.on(),()=>{e.scope.off(),gr(t)}},Rn=()=>{ss&&ss.scope.off(),gr(null)};function lh(e){return e.vnode.shapeFlag&4}let Dr=!1;function Bo(e,t=!1){t&&hl(t);const{props:i,children:r}=e.vnode,h=lh(e);So(e,i,h,t),Eo(e,r);const c=h?xo(e,t):void 0;return t&&hl(!1),c}function xo(e,t){const i=e.type;e.accessCache=Object.create(null),e.proxy=vr(new Proxy(e.ctx,lo));const{setup:r}=i;if(r){const h=e.setupContext=r.length>1?_o(e):null,c=Wa(e);Ni();const m=ki(r,e,0,[e.props,h]);if(Wi(),c(),hu(m)){if(m.then(Rn,Rn),t)return m.then(w=>{Cn(e,w,t)}).catch(w=>{wr(w,e,0)});e.asyncDep=m}else Cn(e,m,t)}else nh(e,t)}function Cn(e,t,i){rt(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:Ht(t)&&(e.setupState=Fu(t)),nh(e,i)}let Ln;function nh(e,t,i){const r=e.type;if(!e.render){if(!t&&Ln&&!r.render){const h=r.template||Nl(e).template;if(h){const{isCustomElement:c,compilerOptions:m}=e.appContext.config,{delimiters:w,compilerOptions:k}=r,P=is(is({isCustomElement:c,delimiters:w},m),k);r.render=Ln(h,P)}}e.render=r.render||Ts}{const h=Wa(e);Ni();try{no(e)}finally{Wi(),h()}}}function Fo(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,i){return Ss(e,"get","$attrs"),t[i]}}))}function _o(e){const t=i=>{e.exposed=i||{}};return{get attrs(){return Fo(e)},slots:e.slots,emit:e.emit,expose:t}}function yr(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy(Fu(vr(e.exposed)),{get(t,i){if(i in t)return t[i];if(i in wa)return wa[i](e)},has(t,i){return i in t||i in wa}}))}function Io(e,t=!0){return rt(e)?e.displayName||e.name:e.name||t&&e.__name}function Vo(e){return rt(e)&&"__vccOpts"in e}const Vt=(e,t)=>Rc(e,t,Dr);function uh(e,t,i=It){const r=Ul(),h=Ns(t),c=Li(t),m=Dc((k,P)=>{let D;return jc(()=>{const N=e[t];Qs(D,N)&&(D=N,P())}),{get(){return k(),i.get?i.get(D):D},set(N){const z=r.vnode.props;!(z&&(t in z||h in z||c in z)&&(`onUpdate:${t}`in z||`onUpdate:${h}`in z||`onUpdate:${c}`in z))&&Qs(N,D)&&(D=N,P()),r.emit(`update:${t}`,i.set?i.set(N):N)}}}),w=t==="modelValue"?"modelModifiers":`${t}Modifiers`;return m[Symbol.iterator]=()=>{let k=0;return{next(){return k<2?{value:k++?e[w]||{}:m,done:!1}:{done:!0}}}},m}function hh(e,t,i){const r=arguments.length;return r===2?Ht(t)&&!$e(t)?dr(t)?ee(e,null,[t]):ee(e,t):ee(e,null,t):(r>3?i=Array.prototype.slice.call(arguments,2):r===3&&dr(i)&&(i=[i]),ee(e,t,i))}const Ho="3.4.15";/**
* @vue/runtime-dom v3.4.15
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const qo="http://www.w3.org/2000/svg",No="http://www.w3.org/1998/Math/MathML",Si=typeof document<"u"?document:null,Pn=Si&&Si.createElement("template"),Wo={insert:(e,t,i)=>{t.insertBefore(e,i||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,i,r)=>{const h=t==="svg"?Si.createElementNS(qo,e):t==="mathml"?Si.createElementNS(No,e):Si.createElement(e,i?{is:i}:void 0);return e==="select"&&r&&r.multiple!=null&&h.setAttribute("multiple",r.multiple),h},createText:e=>Si.createTextNode(e),createComment:e=>Si.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>Si.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,i,r,h,c){const m=i?i.previousSibling:t.lastChild;if(h&&(h===c||h.nextSibling))for(;t.insertBefore(h.cloneNode(!0),i),!(h===c||!(h=h.nextSibling)););else{Pn.innerHTML=r==="svg"?`<svg>${e}</svg>`:r==="mathml"?`<math>${e}</math>`:e;const w=Pn.content;if(r==="svg"||r==="mathml"){const k=w.firstChild;for(;k.firstChild;)w.appendChild(k.firstChild);w.removeChild(k)}t.insertBefore(w,i)}return[m?m.nextSibling:t.firstChild,i?i.previousSibling:t.lastChild]}},$o=Symbol("_vtc");function Uo(e,t,i){const r=e[$o];r&&(t=(t?[t,...r]:[...r]).join(" ")),t==null?e.removeAttribute("class"):i?e.setAttribute("class",t):e.className=t}const Ol=Symbol("_vod"),$a={beforeMount(e,{value:t},{transition:i}){e[Ol]=e.style.display==="none"?"":e.style.display,i&&t?i.beforeEnter(e):Sa(e,t)},mounted(e,{value:t},{transition:i}){i&&t&&i.enter(e)},updated(e,{value:t,oldValue:i},{transition:r}){!t!=!i&&(r?t?(r.beforeEnter(e),Sa(e,!0),r.enter(e)):r.leave(e,()=>{Sa(e,!1)}):Sa(e,t))},beforeUnmount(e,{value:t}){Sa(e,t)}};function Sa(e,t){e.style.display=t?e[Ol]:"none"}const Oo=Symbol("");function zo(e,t,i){const r=e.style,h=r.display,c=Kt(i);if(i&&!c){if(t&&!Kt(t))for(const m in t)i[m]==null&&cl(r,m,"");for(const m in i)cl(r,m,i[m])}else if(c){if(t!==i){const m=r[Oo];m&&(i+=";"+m),r.cssText=i}}else t&&e.removeAttribute("style");Ol in e&&(r.display=h)}const Dn=/\s*!important$/;function cl(e,t,i){if($e(i))i.forEach(r=>cl(e,t,r));else if(i==null&&(i=""),t.startsWith("--"))e.setProperty(t,i);else{const r=Jo(e,t);Dn.test(i)?e.setProperty(Li(r),i.replace(Dn,""),"important"):e[r]=i}}const yn=["Webkit","Moz","ms"],Nr={};function Jo(e,t){const i=Nr[t];if(i)return i;let r=Ns(t);if(r!=="filter"&&r in e)return Nr[t]=r;r=Mr(r);for(let h=0;h<yn.length;h++){const c=yn[h]+r;if(c in e)return Nr[t]=c}return t}const bn="http://www.w3.org/1999/xlink";function jo(e,t,i,r,h){if(r&&t.startsWith("xlink:"))i==null?e.removeAttributeNS(bn,t.slice(6,t.length)):e.setAttributeNS(bn,t,i);else{const c=tc(t);i==null||c&&!pu(i)?e.removeAttribute(t):e.setAttribute(t,c?"":i)}}function Xo(e,t,i,r,h,c,m){if(t==="innerHTML"||t==="textContent"){r&&m(r,h,c),e[t]=i??"";return}const w=e.tagName;if(t==="value"&&w!=="PROGRESS"&&!w.includes("-")){e._value=i;const P=w==="OPTION"?e.getAttribute("value"):e.value,D=i??"";P!==D&&(e.value=D),i==null&&e.removeAttribute(t);return}let k=!1;if(i===""||i==null){const P=typeof e[t];P==="boolean"?i=pu(i):i==null&&P==="string"?(i="",k=!0):P==="number"&&(i=0,k=!0)}try{e[t]=i}catch{}k&&e.removeAttribute(t)}function Mi(e,t,i,r){e.addEventListener(t,i,r)}function Qo(e,t,i,r){e.removeEventListener(t,i,r)}const Tn=Symbol("_vei");function Yo(e,t,i,r,h=null){const c=e[Tn]||(e[Tn]={}),m=c[t];if(r&&m)m.value=r;else{const[w,k]=Zo(t);if(r){const P=c[t]=tf(r,h);Mi(e,w,P,k)}else m&&(Qo(e,w,m,k),c[t]=void 0)}}const Gn=/(?:Once|Passive|Capture)$/;function Zo(e){let t;if(Gn.test(e)){t={};let r;for(;r=e.match(Gn);)e=e.slice(0,e.length-r[0].length),t[r[0].toLowerCase()]=!0}return[e[2]===":"?e.slice(3):Li(e.slice(2)),t]}let Wr=0;const Ko=Promise.resolve(),ef=()=>Wr||(Ko.then(()=>Wr=0),Wr=Date.now());function tf(e,t){const i=r=>{if(!r._vts)r._vts=Date.now();else if(r._vts<=i.attached)return;qs(sf(r,i.value),t,5,[r])};return i.value=e,i.attached=ef(),i}function sf(e,t){if($e(t)){const i=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{i.call(e),e._stopped=!0},t.map(r=>h=>!h._stopped&&r&&r(h))}else return t}const Bn=e=>e.charCodeAt(0)===111&&e.charCodeAt(1)===110&&e.charCodeAt(2)>96&&e.charCodeAt(2)<123,af=(e,t,i,r,h,c,m,w,k)=>{const P=h==="svg";t==="class"?Uo(e,r,P):t==="style"?zo(e,i,r):Sr(t)?kl(t)||Yo(e,t,i,r,m):(t[0]==="."?(t=t.slice(1),!0):t[0]==="^"?(t=t.slice(1),!1):rf(e,t,r,P))?Xo(e,t,r,c,m,w,k):(t==="true-value"?e._trueValue=r:t==="false-value"&&(e._falseValue=r),jo(e,t,r,P))};function rf(e,t,i,r){if(r)return!!(t==="innerHTML"||t==="textContent"||t in e&&Bn(t)&&rt(i));if(t==="spellcheck"||t==="draggable"||t==="translate"||t==="form"||t==="list"&&e.tagName==="INPUT"||t==="type"&&e.tagName==="TEXTAREA")return!1;if(t==="width"||t==="height"){const h=e.tagName;if(h==="IMG"||h==="VIDEO"||h==="CANVAS"||h==="SOURCE")return!1}return Bn(t)&&Kt(i)?!1:t in e}const ia=e=>{const t=e.props["onUpdate:modelValue"]||!1;return $e(t)?i=>ar(t,i):t};function lf(e){e.target.composing=!0}function xn(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const ii=Symbol("_assign"),tt={created(e,{modifiers:{lazy:t,trim:i,number:r}},h){e[ii]=ia(h);const c=r||h.props&&h.props.type==="number";Mi(e,t?"change":"input",m=>{if(m.target.composing)return;let w=e.value;i&&(w=w.trim()),c&&(w=Pa(w)),e[ii](w)}),i&&Mi(e,"change",()=>{e.value=e.value.trim()}),t||(Mi(e,"compositionstart",lf),Mi(e,"compositionend",xn),Mi(e,"change",xn))},mounted(e,{value:t}){e.value=t??""},beforeUpdate(e,{value:t,modifiers:{lazy:i,trim:r,number:h}},c){if(e[ii]=ia(c),e.composing)return;const m=h||e.type==="number"?Pa(e.value):e.value,w=t??"";m!==w&&(document.activeElement===e&&e.type!=="range"&&(i||r&&e.value.trim()===w)||(e.value=w))}},us={deep:!0,created(e,t,i){e[ii]=ia(i),Mi(e,"change",()=>{const r=e._modelValue,h=Ba(e),c=e.checked,m=e[ii];if($e(r)){const w=Ll(r,h),k=w!==-1;if(c&&!k)m(r.concat(h));else if(!c&&k){const P=[...r];P.splice(w,1),m(P)}}else if(na(r)){const w=new Set(r);c?w.add(h):w.delete(h),m(w)}else m(ch(e,c))})},mounted:Fn,beforeUpdate(e,t,i){e[ii]=ia(i),Fn(e,t,i)}};function Fn(e,{value:t,oldValue:i},r){e._modelValue=t,$e(t)?e.checked=Ll(t,r.props.value)>-1:na(t)?e.checked=t.has(r.props.value):t!==i&&(e.checked=ea(t,ch(e,!0)))}const aa={deep:!0,created(e,{value:t,modifiers:{number:i}},r){const h=na(t);Mi(e,"change",()=>{const c=Array.prototype.filter.call(e.options,m=>m.selected).map(m=>i?Pa(Ba(m)):Ba(m));e[ii](e.multiple?h?new Set(c):c:c[0]),e._assigning=!0,ha(()=>{e._assigning=!1})}),e[ii]=ia(r)},mounted(e,{value:t,oldValue:i,modifiers:{number:r}}){_n(e,t,i,r)},beforeUpdate(e,t,i){e[ii]=ia(i)},updated(e,{value:t,oldValue:i,modifiers:{number:r}}){e._assigning||_n(e,t,i,r)}};function _n(e,t,i,r){const h=e.multiple,c=$e(t);if(!(h&&!c&&!na(t))&&!(c&&ea(t,i))){for(let m=0,w=e.options.length;m<w;m++){const k=e.options[m],P=Ba(k);if(h)if(c){const D=typeof P;D==="string"||D==="number"?k.selected=t.includes(r?Pa(P):P):k.selected=Ll(t,P)>-1}else k.selected=t.has(P);else if(ea(Ba(k),t)){e.selectedIndex!==m&&(e.selectedIndex=m);return}}!h&&e.selectedIndex!==-1&&(e.selectedIndex=-1)}}function Ba(e){return"_value"in e?e._value:e.value}function ch(e,t){const i=t?"_trueValue":"_falseValue";return i in e?e[i]:t}const nf=["ctrl","shift","alt","meta"],uf={stop:e=>e.stopPropagation(),prevent:e=>e.preventDefault(),self:e=>e.target!==e.currentTarget,ctrl:e=>!e.ctrlKey,shift:e=>!e.shiftKey,alt:e=>!e.altKey,meta:e=>!e.metaKey,left:e=>"button"in e&&e.button!==0,middle:e=>"button"in e&&e.button!==1,right:e=>"button"in e&&e.button!==2,exact:(e,t)=>nf.some(i=>e[`${i}Key`]&&!t.includes(i))},In=(e,t)=>{const i=e._withMods||(e._withMods={}),r=t.join(".");return i[r]||(i[r]=(h,...c)=>{for(let m=0;m<t.length;m++){const w=uf[t[m]];if(w&&w(h,t))return}return e(h,...c)})},hf={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},Vn=(e,t)=>{const i=e._withKeys||(e._withKeys={}),r=t.join(".");return i[r]||(i[r]=h=>{if(!("key"in h))return;const c=Li(h.key);if(t.some(m=>m===c||hf[m]===c))return e(h)})},cf=is({patchProp:af},Wo);let Hn;function of(){return Hn||(Hn=wo(cf))}const ff=(...e)=>{const t=of().createApp(...e),{mount:i}=t;return t.mount=r=>{const h=df(r);if(!h)return;const c=t._component;!rt(c)&&!c.render&&!c.template&&(c.template=h.innerHTML),h.innerHTML="";const m=i(h,!1,pf(h));return h instanceof Element&&(h.removeAttribute("v-cloak"),h.setAttribute("data-v-app","")),m},t};function pf(e){if(e instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&e instanceof MathMLElement)return"mathml"}function df(e){return Kt(e)?document.querySelector(e):e}var gf=!1;/*!
 * pinia v2.1.7
 * (c) 2023 Eduardo San Martin Morote
 * @license MIT
 */let oh;const br=e=>oh=e,fh=Symbol();function ol(e){return e&&typeof e=="object"&&Object.prototype.toString.call(e)==="[object Object]"&&typeof e.toJSON!="function"}var Ra;(function(e){e.direct="direct",e.patchObject="patch object",e.patchFunction="patch function"})(Ra||(Ra={}));function Sf(){const e=Su(!0),t=e.run(()=>nt({}));let i=[],r=[];const h=vr({install(c){br(h),h._a=c,c.provide(fh,h),c.config.globalProperties.$pinia=h,r.forEach(m=>i.push(m)),r=[]},use(c){return!this._a&&!gf?r.push(c):i.push(c),this},_p:i,_a:null,_e:e,_s:new Map,state:t});return h}const ph=()=>{};function qn(e,t,i,r=ph){e.push(t);const h=()=>{const c=e.indexOf(t);c>-1&&(e.splice(c,1),r())};return!i&&Pl()&&mu(h),h}function Ji(e,...t){e.slice().forEach(i=>{i(...t)})}const mf=e=>e();function fl(e,t){e instanceof Map&&t instanceof Map&&t.forEach((i,r)=>e.set(r,i)),e instanceof Set&&t instanceof Set&&t.forEach(e.add,e);for(const i in t){if(!t.hasOwnProperty(i))continue;const r=t[i],h=e[i];ol(h)&&ol(r)&&e.hasOwnProperty(i)&&!Xt(r)&&!wi(r)?e[i]=fl(h,r):e[i]=r}return e}const Mf=Symbol();function Ef(e){return!ol(e)||!e.hasOwnProperty(Mf)}const{assign:pi}=Object;function vf(e){return!!(Xt(e)&&e.effect)}function wf(e,t,i,r){const{state:h,actions:c,getters:m}=t,w=i.state.value[e];let k;function P(){w||(i.state.value[e]=h?h():{});const D=yc(i.state.value[e]);return pi(D,c,Object.keys(m||{}).reduce((N,z)=>(N[z]=vr(Vt(()=>{br(i);const te=i._s.get(e);return m[z].call(te,te)})),N),{}))}return k=dh(e,P,t,i,r,!0),k}function dh(e,t,i={},r,h,c){let m;const w=pi({actions:{}},i),k={deep:!0};let P,D,N=[],z=[],te;const ie=r.state.value[e];!c&&!ie&&(r.state.value[e]={}),nt({});let pe;function Me(ut){let Be;P=D=!1,typeof ut=="function"?(ut(r.state.value[e]),Be={type:Ra.patchFunction,storeId:e,events:te}):(fl(r.state.value[e],ut),Be={type:Ra.patchObject,payload:ut,storeId:e,events:te});const dt=pe=Symbol();ha().then(()=>{pe===dt&&(P=!0)}),D=!0,Ji(N,Be,r.state.value[e])}const Pe=c?function(){const{state:Be}=i,dt=Be?Be():{};this.$patch(Nt=>{pi(Nt,dt)})}:ph;function He(){m.stop(),N=[],z=[],r._s.delete(e)}function Xe(ut,Be){return function(){br(r);const dt=Array.from(arguments),Nt=[],ms=[];function Rs(Ct){Nt.push(Ct)}function bi(Ct){ms.push(Ct)}Ji(z,{args:dt,name:ut,store:ot,after:Rs,onError:bi});let Cs;try{Cs=Be.apply(this&&this.$id===e?this:ot,dt)}catch(Ct){throw Ji(ms,Ct),Ct}return Cs instanceof Promise?Cs.then(Ct=>(Ji(Nt,Ct),Ct)).catch(Ct=>(Ji(ms,Ct),Promise.reject(Ct))):(Ji(Nt,Cs),Cs)}}const ct={_p:r,$id:e,$onAction:qn.bind(null,z),$patch:Me,$reset:Pe,$subscribe(ut,Be={}){const dt=qn(N,ut,Be.detached,()=>Nt()),Nt=m.run(()=>as(()=>r.state.value[e],ms=>{(Be.flush==="sync"?D:P)&&ut({storeId:e,type:Ra.direct,events:te},ms)},pi({},k,Be)));return dt},$dispose:He},ot=ua(ct);r._s.set(e,ot);const Ut=(r._a&&r._a.runWithContext||mf)(()=>r._e.run(()=>(m=Su()).run(t)));for(const ut in Ut){const Be=Ut[ut];if(Xt(Be)&&!vf(Be)||wi(Be))c||(ie&&Ef(Be)&&(Xt(Be)?Be.value=ie[ut]:fl(Be,ie[ut])),r.state.value[e][ut]=Be);else if(typeof Be=="function"){const dt=Xe(ut,Be);Ut[ut]=dt,w.actions[ut]=Be}}return pi(ot,Ut),pi(vt(ot),Ut),Object.defineProperty(ot,"$state",{get:()=>r.state.value[e],set:ut=>{Me(Be=>{pi(Be,ut)})}}),r._p.forEach(ut=>{pi(ot,m.run(()=>ut({store:ot,app:r._a,pinia:r,options:w})))}),ie&&c&&i.hydrate&&i.hydrate(ot.$state,ie),P=!0,D=!0,ot}function Tr(e,t,i){let r,h;const c=typeof t=="function";typeof e=="string"?(r=e,h=c?i:t):(h=e,r=e.id);function m(w,k){const P=go();return w=w||(P?Ve(fh,null):null),w&&br(w),w=oh,w._s.has(r)||(c?dh(r,t,h,w):wf(r,h,w)),w._s.get(r)}return m.$id=r,m}const kf="ieh2calculator",Af="Calculator for Incremental Epic Hero 2",Rf="0.1.38",Cf="module",Lf={dev:"vite",build:"vue-tsc && vite build",preview:"vite preview",testbuild:"vue-tsc && vite build",generate:"npm --no-git-tag-version version patch && npx tsx build/generateChangelog.ts"},Pf={type:"git",url:"git+https://github.com/PR0CESSUS/IEH2Calculator.git"},Df=["IEH2","Incremental","Epic","Hero","Calculator"],yf="Processus",bf="ISC",Tf={url:"https://github.com/PR0CESSUS/IEH2Calculator/issues"},Gf="https://github.com/PR0CESSUS/IEH2Calculator#readme",Bf={"@vueuse/core":"^10.7.2",pinia:"^2.1.7",vue:"^3.3.11","vue-router":"^4.2.5"},xf={"@vitejs/plugin-vue":"^4.5.2","rollup-plugin-visualizer":"^5.12.0",typescript:"^5.2.2","unplugin-vue-router":"^0.8.5",vite:"^5.0.8","vue-tsc":"^1.8.25"},pl={name:kf,description:Af,private:!0,version:Rf,type:Cf,scripts:Lf,repository:Pf,keywords:Df,author:yf,license:bf,bugs:Tf,homepage:Gf,dependencies:Bf,devDependencies:xf};var Bt=(e=>(e[e.Nothing=0]="Nothing",e[e.Equipment=1]="Equipment",e[e.OptionEffect=2]="OptionEffect",e[e.ForgeEffects=3]="ForgeEffects",e[e.EquipmentLoadout=4]="EquipmentLoadout",e[e.Debug=5]="Debug",e))(Bt||{});const gh=Tr("clipboard",()=>{const e=nt(),t=nt(Bt.Nothing);return{data:e,type:t}}),Ff=oe({__name:"Clipboard",setup(e){const t=gh();return(i,r)=>Le((b(),B("div",null,"Clipboard "+T(A(Bt)[A(t).type])+" "+T(A(t).type==A(Bt).Debug?A(t).data:""),513)),[[$a,A(t).type!=A(Bt).Nothing]])}}),Ft=(e,t)=>{const i=e.__vccOpts||e;for(const[r,h]of t)i[r]=h;return i},_f=Ft(Ff,[["__scopeId","data-v-18e4f3fc"]]);function If(e){return Pl()?(mu(e),!0):!1}function zl(e){return typeof e=="function"?e():A(e)}const Vf=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const Hf=Object.prototype.toString,qf=e=>Hf.call(e)==="[object Object]",Nf=()=>{};function Wf(e,t){function i(...r){return new Promise((h,c)=>{Promise.resolve(e(()=>t.apply(this,r),{fn:t,thisArg:this,args:r})).then(h).catch(c)})}return i}const Sh=e=>e();function $f(e=Sh){const t=nt(!0);function i(){t.value=!1}function r(){t.value=!0}const h=(...c)=>{t.value&&e(...c)};return{isActive:Bl(t),pause:i,resume:r,eventFilter:h}}function Uf(e){return e||Ul()}function Of(e,t,i={}){const{eventFilter:r=Sh,...h}=i;return as(e,Wf(r,t),h)}function zf(e,t,i={}){const{eventFilter:r,...h}=i,{eventFilter:c,pause:m,resume:w,isActive:k}=$f(r);return{stop:Of(e,t,{...h,eventFilter:c}),pause:m,resume:w,isActive:k}}function Jf(e,t=!0,i){Uf()?Cr(e,i):t?e():ha(e)}function jf(e){var t;const i=zl(e);return(t=i==null?void 0:i.$el)!=null?t:i}const dl=Vf?window:void 0;function gl(...e){let t,i,r,h;if(typeof e[0]=="string"||Array.isArray(e[0])?([i,r,h]=e,t=dl):[t,i,r,h]=e,!t)return Nf;Array.isArray(i)||(i=[i]),Array.isArray(r)||(r=[r]);const c=[],m=()=>{c.forEach(D=>D()),c.length=0},w=(D,N,z,te)=>(D.addEventListener(N,z,te),()=>D.removeEventListener(N,z,te)),k=as(()=>[jf(t),zl(h)],([D,N])=>{if(m(),!D)return;const z=qf(N)?{...N}:N;c.push(...i.flatMap(te=>r.map(ie=>w(D,te,ie,z))))},{immediate:!0,flush:"post"}),P=()=>{k(),m()};return If(P),P}const er=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},tr="__vueuse_ssr_handlers__",Xf=Qf();function Qf(){return tr in er||(er[tr]=er[tr]||{}),er[tr]}function Yf(e,t){return Xf[e]||t}function Zf(e){return e==null?"any":e instanceof Set?"set":e instanceof Map?"map":e instanceof Date?"date":typeof e=="boolean"?"boolean":typeof e=="string"?"string":typeof e=="object"?"object":Number.isNaN(e)?"any":"number"}const Kf={boolean:{read:e=>e==="true",write:e=>String(e)},object:{read:e=>JSON.parse(e),write:e=>JSON.stringify(e)},number:{read:e=>Number.parseFloat(e),write:e=>String(e)},any:{read:e=>e,write:e=>String(e)},string:{read:e=>e,write:e=>String(e)},map:{read:e=>new Map(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e.entries()))},set:{read:e=>new Set(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e))},date:{read:e=>new Date(e),write:e=>e.toISOString()}},Nn="vueuse-storage";function Jl(e,t,i,r={}){var h;const{flush:c="pre",deep:m=!0,listenToStorageChanges:w=!0,writeDefaults:k=!0,mergeDefaults:P=!1,shallow:D,window:N=dl,eventFilter:z,onError:te=Be=>{console.error(Be)},initOnMounted:ie}=r,pe=(D?Bu:nt)(typeof t=="function"?t():t);if(!i)try{i=Yf("getDefaultStorage",()=>{var Be;return(Be=dl)==null?void 0:Be.localStorage})()}catch(Be){te(Be)}if(!i)return pe;const Me=zl(t),Pe=Zf(Me),He=(h=r.serializer)!=null?h:Kf[Pe],{pause:Xe,resume:ct}=zf(pe,()=>ot(pe.value),{flush:c,deep:m,eventFilter:z});return N&&w&&Jf(()=>{gl(N,"storage",ut),gl(N,Nn,Ut),ie&&ut()}),ie||ut(),pe;function ot(Be){try{if(Be==null)i.removeItem(e);else{const dt=He.write(Be),Nt=i.getItem(e);Nt!==dt&&(i.setItem(e,dt),N&&N.dispatchEvent(new CustomEvent(Nn,{detail:{key:e,oldValue:Nt,newValue:dt,storageArea:i}})))}}catch(dt){te(dt)}}function Qe(Be){const dt=Be?Be.newValue:i.getItem(e);if(dt==null)return k&&Me!=null&&i.setItem(e,He.write(Me)),Me;if(!Be&&P){const Nt=He.read(dt);return typeof P=="function"?P(Nt,Me):Pe==="object"&&!Array.isArray(Nt)?{...Me,...Nt}:Nt}else return typeof dt!="string"?dt:He.read(dt)}function Ut(Be){ut(Be.detail)}function ut(Be){if(!(Be&&Be.storageArea!==i)){if(Be&&Be.key==null){pe.value=Me;return}if(!(Be&&Be.key!==e)){Xe();try{(Be==null?void 0:Be.newValue)!==He.write(pe.value)&&(pe.value=Qe(Be))}catch(dt){te(dt)}finally{Be?ha(ct):ct()}}}}}var R=(e=>(e[e.Warrior=0]="Warrior",e[e.Wizard=1]="Wizard",e[e.Angel=2]="Angel",e[e.Thief=3]="Thief",e[e.Archer=4]="Archer",e[e.Tamer=5]="Tamer",e))(R||{}),mh=(e=>(e[e.SlimeVillage=0]="SlimeVillage",e[e.MagicSlimeCity=1]="MagicSlimeCity",e[e.SpiderMaze=2]="SpiderMaze",e[e.BatCave=3]="BatCave",e[e.FairyGarden=4]="FairyGarden",e[e.FoxShrine=5]="FoxShrine",e[e.DevilFishLake=6]="DevilFishLake",e[e.TreantDarkForest=7]="TreantDarkForest",e[e.FlameTigerVolcano=8]="FlameTigerVolcano",e[e.UnicornIsland=9]="UnicornIsland",e))(mh||{}),Y=(e=>(e[e.Stone=0]="Stone",e[e.Crystal=1]="Crystal",e[e.Leaf=2]="Leaf",e))(Y||{}),ke=(e=>(e[e.GoldGain=0]="GoldGain",e[e.StoneGain=1]="StoneGain",e[e.CrystalGain=2]="CrystalGain",e[e.LeafGain=3]="LeafGain",e))(ke||{}),d=(e=>(e[e.HP=0]="HP",e[e.MP=1]="MP",e[e.ATK=2]="ATK",e[e.MATK=3]="MATK",e[e.DEF=4]="DEF",e[e.MDEF=5]="MDEF",e[e.SPD=6]="SPD",e))(d||{}),se=(e=>(e[e.Slime=0]="Slime",e[e.MagicSlime=1]="MagicSlime",e[e.Spider=2]="Spider",e[e.Bat=3]="Bat",e[e.Fairy=4]="Fairy",e[e.Fox=5]="Fox",e[e.DevilFish=6]="DevilFish",e[e.Treant=7]="Treant",e[e.FlameTiger=8]="FlameTiger",e[e.Unicorn=9]="Unicorn",e[e.Mimic=10]="Mimic",e[e.ChallengeBoss=11]="ChallengeBoss",e))(se||{}),Dt=(e=>(e[e.Florzporb=0]="Florzporb",e[e.Arachnetta=1]="Arachnetta",e[e.GuardianKor=2]="GuardianKor",e[e.Nostro=3]="Nostro",e[e.LadyEmelda=4]="LadyEmelda",e[e.NariSune=5]="NariSune",e[e.Octobaddie=6]="Octobaddie",e[e.Bananoon=7]="Bananoon",e[e.Glorbliorbus=8]="Glorbliorbus",e[e.DistortionSlime=9]="DistortionSlime",e))(Dt||{}),At=(e=>(e[e.Normal=0]="Normal",e[e.Blue=1]="Blue",e[e.Yellow=2]="Yellow",e[e.Red=3]="Red",e[e.Green=4]="Green",e[e.Purple=5]="Purple",e[e.Boss=6]="Boss",e[e.Metal=7]="Metal",e))(At||{}),Mh=(e=>(e[e.None=0]="None",e[e.GetResource=1]="GetResource",e[e.GetMaterial=2]="GetMaterial",e[e.GetEquipment=3]="GetEquipment",e[e.DisassembleEquipment=4]="DisassembleEquipment",e[e.DisassemblePotion=5]="DisassemblePotion",e[e.UpgradeQueue=6]="UpgradeQueue",e[e.ExpandMysteriousWaterCap=7]="ExpandMysteriousWaterCap",e[e.AlchemyQueue=8]="AlchemyQueue",e[e.EquipPotion=9]="EquipPotion",e[e.Capture=10]="Capture",e[e.RebirthTier1=11]="RebirthTier1",e[e.RebirthTier2=12]="RebirthTier2",e[e.RebirthTier3=13]="RebirthTier3",e[e.RebirthTier4=14]="RebirthTier4",e[e.RebirthTier5=15]="RebirthTier5",e[e.RebirthTier6=16]="RebirthTier6",e[e.BuyShopMaterialSlime=17]="BuyShopMaterialSlime",e[e.BuyShopMaterialMagicSlime=18]="BuyShopMaterialMagicSlime",e[e.BuyShopMaterialSpider=19]="BuyShopMaterialSpider",e[e.BuyShopMaterialBat=20]="BuyShopMaterialBat",e[e.BuyShopMaterialFairy=21]="BuyShopMaterialFairy",e[e.BuyShopMaterialFox=22]="BuyShopMaterialFox",e[e.BuyShopMaterialDevilfish=23]="BuyShopMaterialDevilfish",e[e.BuyShopMaterialTreant=24]="BuyShopMaterialTreant",e[e.BuyShopMaterialFlametiger=25]="BuyShopMaterialFlametiger",e[e.BuyShopMaterialUnicorn=26]="BuyShopMaterialUnicorn",e[e.BuyShopTrapNormal=27]="BuyShopTrapNormal",e[e.BuyShopTrapIce=28]="BuyShopTrapIce",e[e.BuyShopTrapThunder=29]="BuyShopTrapThunder",e[e.BuyShopTrapFire=30]="BuyShopTrapFire",e[e.BuyShopTrapLight=31]="BuyShopTrapLight",e[e.BuyShopTrapDark=32]="BuyShopTrapDark",e[e.RetryDungeon=33]="RetryDungeon",e[e.OpenChest=34]="OpenChest",e[e.SkillRankUp=35]="SkillRankUp",e[e.SmartSlimeCoins=36]="SmartSlimeCoins",e[e.TownLevelUp=37]="TownLevelUp",e[e.RebirthUpgradeEXP=38]="RebirthUpgradeEXP",e[e.EquipNonMaxedEQ=39]="EquipNonMaxedEQ",e[e.AutoCraftDisassembleEQ=40]="AutoCraftDisassembleEQ",e[e.DisassembleTalismanCommon=41]="DisassembleTalismanCommon",e[e.BuyBlessing=42]="BuyBlessing",e[e.AutoExpedition=43]="AutoExpedition",e[e.AutoEquipTrap=44]="AutoEquipTrap",e[e.AutoUseProfScroll=45]="AutoUseProfScroll",e[e.AutoSwitchTownResearch=46]="AutoSwitchTownResearch",e[e.ClearLowerDifAreaMission=47]="ClearLowerDifAreaMission",e[e.AutoAlchemiseForNito=48]="AutoAlchemiseForNito",e[e.AutoBuyGuildAbility=49]="AutoBuyGuildAbility",e))(Mh||{}),y=(e=>(e[e.Vitality=0]="Vitality",e[e.Strength=1]="Strength",e[e.Intelligence=2]="Intelligence",e[e.Agility=3]="Agility",e[e.Luck=4]="Luck",e))(y||{}),v=(e=>(e[e.FireRes=0]="FireRes",e[e.IceRes=1]="IceRes",e[e.ThunderRes=2]="ThunderRes",e[e.LightRes=3]="LightRes",e[e.DarkRes=4]="DarkRes",e[e.DebuffRes=5]="DebuffRes",e[e.PhysCritChance=6]="PhysCritChance",e[e.MagCritChance=7]="MagCritChance",e[e.CriticalDamage=8]="CriticalDamage",e[e.EquipmentDropChance=9]="EquipmentDropChance",e[e.MoveSpeed=10]="MoveSpeed",e[e.SkillProficiencyGain=11]="SkillProficiencyGain",e[e.EquipmentProficiencyGain=12]="EquipmentProficiencyGain",e[e.TamingPointGain=13]="TamingPointGain",e[e.ExpGain=14]="ExpGain",e[e.ArmoredFury=15]="ArmoredFury",e[e.WardedFury=16]="WardedFury",e[e.PetPhysCritChance=17]="PetPhysCritChance",e[e.PetMagCritChance=18]="PetMagCritChance",e[e.PetCriticalDamage=19]="PetCriticalDamage",e[e.PetDebuffResistance=20]="PetDebuffResistance",e[e.ArtifactProficiencyGain=21]="ArtifactProficiencyGain",e))(v||{}),F=(e=>(e[e.Physical=0]="Physical",e[e.Fire=1]="Fire",e[e.Ice=2]="Ice",e[e.Thunder=3]="Thunder",e[e.Light=4]="Light",e[e.Dark=5]="Dark",e))(F||{}),Ot=(e=>(e[e.StoneGain=0]="StoneGain",e[e.CrystalGain=1]="CrystalGain",e[e.LeafGain=2]="LeafGain",e[e.GuildExpGain=3]="GuildExpGain",e[e.EquipmentInventory=4]="EquipmentInventory",e[e.EnchantInventory=5]="EnchantInventory",e[e.PotionInventory=6]="PotionInventory",e[e.MysteriousWater=7]="MysteriousWater",e[e.SkillProficiency=8]="SkillProficiency",e[e.GlobalSkillSlot=9]="GlobalSkillSlot",e[e.GoldCap=10]="GoldCap",e[e.GoldGain=11]="GoldGain",e[e.Trapping=12]="Trapping",e[e.UpgradeCost=13]="UpgradeCost",e[e.PhysicalAbsorption=14]="PhysicalAbsorption",e[e.MagicalAbsoption=15]="MagicalAbsoption",e[e.ExpGain=16]="ExpGain",e[e.EquipmentProficiency=17]="EquipmentProficiency",e[e.MaterialDrop=18]="MaterialDrop",e[e.NitroCap=19]="NitroCap",e))(Ot||{}),we=(e=>(e[e.Nothing=0]="Nothing",e[e.Slime=1]="Slime",e[e.Magicslime=2]="Magicslime",e[e.Spider=3]="Spider",e[e.Bat=4]="Bat",e[e.Fairy=5]="Fairy",e[e.Fox=6]="Fox",e[e.Devilfish=7]="Devilfish",e[e.Treant=8]="Treant",e[e.Flametiger=9]="Flametiger",e[e.Unicorn=10]="Unicorn",e))(we||{}),E=(e=>(e[e.Nothing=0]="Nothing",e[e.DullSword=1]="DullSword",e[e.BrittleStaff=2]="BrittleStaff",e[e.FlimsyWing=3]="FlimsyWing",e[e.WornDart=4]="WornDart",e[e.SmallBow=5]="SmallBow",e[e.WoodenRecorder=6]="WoodenRecorder",e[e.OldCloak=7]="OldCloak",e[e.BlueHat=8]="BlueHat",e[e.OrangeHat=9]="OrangeHat",e[e.TShirt=10]="TShirt",e[e.ClothGlove=11]="ClothGlove",e[e.BlueTShirt=12]="BlueTShirt",e[e.OrangeTShirt=13]="OrangeTShirt",e[e.ClothBelt=14]="ClothBelt",e[e.ClothShoes=15]="ClothShoes",e[e.IronRing=16]="IronRing",e[e.PearlEarring=17]="PearlEarring",e[e.FireBrooch=18]="FireBrooch",e[e.IceBrooch=19]="IceBrooch",e[e.ThunderBrooch=20]="ThunderBrooch",e[e.LightBrooch=21]="LightBrooch",e[e.DarkBrooch=22]="DarkBrooch",e[e.WoodenShield=23]="WoodenShield",e[e.LongSword=24]="LongSword",e[e.LongStaff=25]="LongStaff",e[e.WarmWing=26]="WarmWing",e[e.DualDagger=27]="DualDagger",e[e.ReinforcedBow=28]="ReinforcedBow",e[e.Flute=29]="Flute",e[e.FireStaff=30]="FireStaff",e[e.IceStaff=31]="IceStaff",e[e.ThunderStaff=32]="ThunderStaff",e[e.LeatherBelt=33]="LeatherBelt",e[e.LeatherShoes=34]="LeatherShoes",e[e.WarmCloak=35]="WarmCloak",e[e.LeatherArmor=36]="LeatherArmor",e[e.LeatherGlove=37]="LeatherGlove",e[e.LeatherShield=38]="LeatherShield",e[e.FireRing=39]="FireRing",e[e.IceRing=40]="IceRing",e[e.ThunderRing=41]="ThunderRing",e[e.LightRing=42]="LightRing",e[e.DarkRing=43]="DarkRing",e[e.EnhancedFireBrooch=44]="EnhancedFireBrooch",e[e.EnhancedIceBrooch=45]="EnhancedIceBrooch",e[e.EnhancedThunderBrooch=46]="EnhancedThunderBrooch",e[e.EnhancedLightBrooch=47]="EnhancedLightBrooch",e[e.EnhancedDarkBrooch=48]="EnhancedDarkBrooch",e[e.BattleSword=49]="BattleSword",e[e.BattleStaff=50]="BattleStaff",e[e.BattleWing=51]="BattleWing",e[e.BattleDagger=52]="BattleDagger",e[e.BattleBow=53]="BattleBow",e[e.BattleRecorder=54]="BattleRecorder",e[e.SlimeSword=55]="SlimeSword",e[e.SlimeGlove=56]="SlimeGlove",e[e.SlimeRing=57]="SlimeRing",e[e.SlimeBelt=58]="SlimeBelt",e[e.SlimePincenez=59]="SlimePincenez",e[e.SlimeWing=60]="SlimeWing",e[e.SlimePoncho=61]="SlimePoncho",e[e.SlimeDart=62]="SlimeDart",e[e.MagicSlimeStick=63]="MagicSlimeStick",e[e.MagicSlimeHat=64]="MagicSlimeHat",e[e.MagicSlimeBow=65]="MagicSlimeBow",e[e.MagicSlimeShoes=66]="MagicSlimeShoes",e[e.MagicSlimeRecorder=67]="MagicSlimeRecorder",e[e.MagicSlimeEarring=68]="MagicSlimeEarring",e[e.MagicSlimeBalloon=69]="MagicSlimeBalloon",e[e.MagicSlimeSkirt=70]="MagicSlimeSkirt",e[e.SpiderHat=71]="SpiderHat",e[e.SpiderSkirt=72]="SpiderSkirt",e[e.SpiderSuit=73]="SpiderSuit",e[e.SpiderDagger=74]="SpiderDagger",e[e.SpiderWing=75]="SpiderWing",e[e.SpiderCatchingNet=76]="SpiderCatchingNet",e[e.SpiderStick=77]="SpiderStick",e[e.SpiderFoldingFan=78]="SpiderFoldingFan",e[e.BatRing=79]="BatRing",e[e.BatShoes=80]="BatShoes",e[e.BatSword=81]="BatSword",e[e.BatHat=82]="BatHat",e[e.BatRecorder=83]="BatRecorder",e[e.BatBow=84]="BatBow",e[e.BatMascaradeMask=85]="BatMascaradeMask",e[e.BatCloak=86]="BatCloak",e[e.BronzeShoulder=87]="BronzeShoulder",e[e.BattleRing=88]="BattleRing",e[e.Halo=89]="Halo",e[e.IronShoulder=90]="IronShoulder",e[e.StrengthRing=91]="StrengthRing",e[e.GoldenRing=92]="GoldenRing",e[e.GoldenFireRing=93]="GoldenFireRing",e[e.GoldenIceRing=94]="GoldenIceRing",e[e.GoldenThunderRing=95]="GoldenThunderRing",e[e.GoldenLightRing=96]="GoldenLightRing",e[e.GoldenDarkRing=97]="GoldenDarkRing",e[e.IronBelt=98]="IronBelt",e[e.IronShoes=99]="IronShoes",e[e.CopperArmor=100]="CopperArmor",e[e.IronGlove=101]="IronGlove",e[e.TowerShield=102]="TowerShield",e[e.FireTowerShield=103]="FireTowerShield",e[e.IceTowerShield=104]="IceTowerShield",e[e.ThunderTowerShield=105]="ThunderTowerShield",e[e.LightTowerShield=106]="LightTowerShield",e[e.DarkTowerShield=107]="DarkTowerShield",e[e.SavageRing=108]="SavageRing",e[e.SpellboundFireBrooch=109]="SpellboundFireBrooch",e[e.SpellboundIceBrooch=110]="SpellboundIceBrooch",e[e.SpellboundThunderBrooch=111]="SpellboundThunderBrooch",e[e.SpellboundLightBrooch=112]="SpellboundLightBrooch",e[e.SpellboundDarkBrooch=113]="SpellboundDarkBrooch",e[e.CopperHelm=114]="CopperHelm",e[e.BattleHelm=115]="BattleHelm",e[e.WizardHelm=116]="WizardHelm",e[e.LargeSword=117]="LargeSword",e[e.LargeStaff=118]="LargeStaff",e[e.LargeWing=119]="LargeWing",e[e.LargeDagger=120]="LargeDagger",e[e.LargeBow=121]="LargeBow",e[e.LargeOcarina=122]="LargeOcarina",e[e.FairyClothes=123]="FairyClothes",e[e.FairyStaff=124]="FairyStaff",e[e.FairyBoots=125]="FairyBoots",e[e.FairyGlove=126]="FairyGlove",e[e.FairyBrooch=127]="FairyBrooch",e[e.FairyLamp=128]="FairyLamp",e[e.FairyWing=129]="FairyWing",e[e.FairyShuriken=130]="FairyShuriken",e[e.FoxKanzashi=131]="FoxKanzashi",e[e.FoxLoincloth=132]="FoxLoincloth",e[e.FoxMask=133]="FoxMask",e[e.FoxHamayayumi=134]="FoxHamayayumi",e[e.FoxHat=135]="FoxHat",e[e.FoxCoat=136]="FoxCoat",e[e.FoxBoot=137]="FoxBoot",e[e.FoxEma=138]="FoxEma",e[e.DevilfishSword=139]="DevilfishSword",e[e.DevilfishWing=140]="DevilfishWing",e[e.DevilfishRecorder=141]="DevilfishRecorder",e[e.DevilfishArmor=142]="DevilfishArmor",e[e.DevilfishScarf=143]="DevilfishScarf",e[e.DevilfishGill=144]="DevilfishGill",e[e.DevilfishPendant=145]="DevilfishPendant",e[e.DevilfishRing=146]="DevilfishRing",e[e.TreantAmulet=147]="TreantAmulet",e[e.TreantHagoita=148]="TreantHagoita",e[e.TreantChoppingBoard=149]="TreantChoppingBoard",e[e.TreantDagger=150]="TreantDagger",e[e.TreantHaniwa=151]="TreantHaniwa",e[e.TreantKokeshi=152]="TreantKokeshi",e[e.TreantLamp=153]="TreantLamp",e[e.TreantLunchbox=154]="TreantLunchbox",e[e.FlametigerPortableHotSpring=155]="FlametigerPortableHotSpring",e[e.FlametigerVolcanicShield=156]="FlametigerVolcanicShield",e[e.FlametigerStripedBriefs=157]="FlametigerStripedBriefs",e[e.TorchOfEverburningFlametiger=158]="TorchOfEverburningFlametiger",e[e.FlametigerCostume=159]="FlametigerCostume",e[e.RingOfFlametigersWrath=160]="RingOfFlametigersWrath",e[e.EndlessBowlOfSpicyFlametigerRamen=161]="EndlessBowlOfSpicyFlametigerRamen",e[e.ScreenOfTheSneakyFlametiger=162]="ScreenOfTheSneakyFlametiger",e[e.ModifiedSword=163]="ModifiedSword",e[e.ModifiedStaff=164]="ModifiedStaff",e[e.ModifiedWing=165]="ModifiedWing",e[e.ModifiedDart=166]="ModifiedDart",e[e.ModifiedBow=167]="ModifiedBow",e[e.ModifiedRecorder=168]="ModifiedRecorder",e[e.AncientCloak=169]="AncientCloak",e[e.AncientBelt=170]="AncientBelt",e[e.AncientShoes=171]="AncientShoes",e[e.AncientRing=172]="AncientRing",e[e.AncientEarring=173]="AncientEarring",e))(E||{}),V=(e=>(e[e.Weapon=0]="Weapon",e[e.Armor=1]="Armor",e[e.Jewelry=2]="Jewelry",e))(V||{}),H=(e=>(e[e.Nothing=0]="Nothing",e[e.MinorHealthPotion=1]="MinorHealthPotion",e[e.MinorRegenerationPoultice=2]="MinorRegenerationPoultice",e[e.MinorResourcePoultice=3]="MinorResourcePoultice",e[e.SlickShoeSolution=4]="SlickShoeSolution",e[e.MinorManaRegenerationPoultice=5]="MinorManaRegenerationPoultice",e[e.MaterialMultiplierMist=6]="MaterialMultiplierMist",e[e.BasicElixirOfBrawn=7]="BasicElixirOfBrawn",e[e.BasicElixirOfBrains=8]="BasicElixirOfBrains",e[e.BasicElixirOfFortitude=9]="BasicElixirOfFortitude",e[e.BasicElixirOfConcentration=10]="BasicElixirOfConcentration",e[e.BasicElixirOfUnderstanding=11]="BasicElixirOfUnderstanding",e[e.ChilledHealthPotion=12]="ChilledHealthPotion",e[e.ChilledRegenerationPoultice=13]="ChilledRegenerationPoultice",e[e.FrostyDefensePotion=14]="FrostyDefensePotion",e[e.IcyAuraDraught=15]="IcyAuraDraught",e[e.SlightlyStickySalve=16]="SlightlyStickySalve",e[e.SlickerShoeSolution=17]="SlickerShoeSolution",e[e.CoolHeadOintment=18]="CoolHeadOintment",e[e.FrostySlayersOil=19]="FrostySlayersOil",e[e.BurningDefensePotion=20]="BurningDefensePotion",e[e.BlazingAuraDraught=21]="BlazingAuraDraught",e[e.FierySlayersOil=22]="FierySlayersOil",e[e.ElectricDefensePotion=23]="ElectricDefensePotion",e[e.WhirlingAuraDraught=24]="WhirlingAuraDraught",e[e.ShockingSlayersOil=25]="ShockingSlayersOil",e[e.ThrowingNet=26]="ThrowingNet",e[e.IceRope=27]="IceRope",e[e.ThunderRope=28]="ThunderRope",e[e.FireRope=29]="FireRope",e[e.LightRope=30]="LightRope",e[e.DarkRope=31]="DarkRope",e[e.GuildMembersEmblem=32]="GuildMembersEmblem",e[e.CertificateOfCompetence=33]="CertificateOfCompetence",e[e.MasonsTrowel=34]="MasonsTrowel",e[e.EnchantedAlembic=35]="EnchantedAlembic",e[e.TrackersMap=36]="TrackersMap",e[e.BerserkersStone=37]="BerserkersStone",e[e.TrappersTag=38]="TrappersTag",e[e.HitanDoll=39]="HitanDoll",e[e.RingoldDoll=40]="RingoldDoll",e[e.NuttyDoll=41]="NuttyDoll",e[e.MorkylDoll=42]="MorkylDoll",e[e.FlorzporbDoll=43]="FlorzporbDoll",e[e.ArachnettaDoll=44]="ArachnettaDoll",e[e.GuardianKorDoll=45]="GuardianKorDoll",e[e.SlimeBadge=46]="SlimeBadge",e[e.MagicslimeBadge=47]="MagicslimeBadge",e[e.SpiderBadge=48]="SpiderBadge",e[e.BatBadge=49]="BatBadge",e[e.FairyBadge=50]="FairyBadge",e[e.FoxBadge=51]="FoxBadge",e[e.DevilfishBadge=52]="DevilfishBadge",e[e.TreantBadge=53]="TreantBadge",e[e.FlametigerBadge=54]="FlametigerBadge",e[e.UnicornBadge=55]="UnicornBadge",e[e.AscendedFromIEH1=56]="AscendedFromIEH1",e[e.WarriorsBadge=57]="WarriorsBadge",e[e.WizardsBadge=58]="WizardsBadge",e[e.AngelsBadge=59]="AngelsBadge",e[e.ThiefsBadge=60]="ThiefsBadge",e[e.ArchersBadge=61]="ArchersBadge",e[e.TamersBadge=62]="TamersBadge",e[e.NostroDoll=63]="NostroDoll",e[e.LadyEmeldaDoll=64]="LadyEmeldaDoll",e[e.NariSuneDoll=65]="NariSuneDoll",e[e.OctobaddieDoll=66]="OctobaddieDoll",e[e.BananoonDoll=67]="BananoonDoll",e[e.GlorbliorbusDoll=68]="GlorbliorbusDoll",e[e.DistortionSlimeDoll=69]="DistortionSlimeDoll",e[e.AncientSlimeBadge=70]="AncientSlimeBadge",e[e.AncientMagicslimeBadge=71]="AncientMagicslimeBadge",e[e.AncientSpiderBadge=72]="AncientSpiderBadge",e[e.AncientBatBadge=73]="AncientBatBadge",e[e.AncientFairyBadge=74]="AncientFairyBadge",e[e.AncientFoxBadge=75]="AncientFoxBadge",e[e.AncientDevilfishBadge=76]="AncientDevilfishBadge",e[e.AncientTreantBadge=77]="AncientTreantBadge",e[e.AncientFlametigerBadge=78]="AncientFlametigerBadge",e[e.AncientUnicornBadge=79]="AncientUnicornBadge",e[e.AncientWarriorsBadge=80]="AncientWarriorsBadge",e[e.AncientWizardsBadge=81]="AncientWizardsBadge",e[e.AncientAngelsBadge=82]="AncientAngelsBadge",e[e.AncientThiefsBadge=83]="AncientThiefsBadge",e[e.AncientArchersBadge=84]="AncientArchersBadge",e[e.AncientTamersBadge=85]="AncientTamersBadge",e))(H||{}),Ae=(e=>(e[e.Heal=0]="Heal",e[e.TimeLimit=1]="TimeLimit",e[e.DamageMultiplier=2]="DamageMultiplier",e[e.DamageCutMultiplier=3]="DamageCutMultiplier",e[e.RestoreDodgeTimesec=4]="RestoreDodgeTimesec",e[e.DodgeHeal=5]="DodgeHeal",e[e.DungeonCoinGain=6]="DungeonCoinGain",e[e.FameGain=7]="FameGain",e[e.SkillCastSpeed=8]="SkillCastSpeed",e[e.PhysicalCriticalChance=9]="PhysicalCriticalChance",e[e.MagicalCriticalChance=10]="MagicalCriticalChance",e[e.CriticalDamage=11]="CriticalDamage",e[e.MoveSpeed=12]="MoveSpeed",e[e.PhysicalDamage=13]="PhysicalDamage",e[e.MagicalDamage=14]="MagicalDamage",e[e.PhysicalAbsorption=15]="PhysicalAbsorption",e[e.MagicalAbsorption=16]="MagicalAbsorption",e[e.SkillHitCount=17]="SkillHitCount",e[e.ExtraAfterDamage=18]="ExtraAfterDamage",e[e.EquipmentDropChance=19]="EquipmentDropChance",e[e.ChallengeBossDamageMultiplier=20]="ChallengeBossDamageMultiplier",e))(Ae||{}),n=(e=>(e[e.Base=0]="Base",e[e.Ability=1]="Ability",e[e.SuperAbility=2]="SuperAbility",e[e.SPD=3]="SPD",e[e.Title=4]="Title",e[e.Quest=5]="Quest",e[e.Skill=6]="Skill",e[e.ChanneledSkill=7]="ChanneledSkill",e[e.SkillPassive=8]="SkillPassive",e[e.Stance=9]="Stance",e[e.Upgrade=10]="Upgrade",e[e.Town=11]="Town",e[e.TownResearch=12]="TownResearch",e[e.Equipment=13]="Equipment",e[e.ArmoredFury=14]="ArmoredFury",e[e.WardedFury=15]="WardedFury",e[e.Dictionary=16]="Dictionary",e[e.Alchemy=17]="Alchemy",e[e.AlchemyExpand=18]="AlchemyExpand",e[e.Potion=19]="Potion",e[e.Pet=20]="Pet",e[e.PetRankMilestone=21]="PetRankMilestone",e[e.Guild=22]="Guild",e[e.GuildSuperAbility=23]="GuildSuperAbility",e[e.Rebirth=24]="Rebirth",e[e.Challenge=25]="Challenge",e[e.SuperDungeon=26]="SuperDungeon",e[e.DungeonItem=27]="DungeonItem",e[e.DungeonItemPermanent=28]="DungeonItemPermanent",e[e.SDUpgrade=29]="SDUpgrade",e[e.SDShop=30]="SDShop",e[e.SDModifier=31]="SDModifier",e[e.SDModifierMilestone=32]="SDModifierMilestone",e[e.SDGemRitual=33]="SDGemRitual",e[e.GradeMilestone=34]="GradeMilestone",e[e.Expedition=35]="Expedition",e[e.ExpeditionMilestone=36]="ExpeditionMilestone",e[e.MissionMilestone=37]="MissionMilestone",e[e.AreaPrestige=38]="AreaPrestige",e[e.Ascension=39]="Ascension",e[e.AreaDebuff=40]="AreaDebuff",e[e.FieldCurse=41]="FieldCurse",e[e.Blessing=42]="Blessing",e[e.Buff=43]="Buff",e[e.Debuff=44]="Debuff",e[e.Talisman=45]="Talisman",e[e.TalismanPassive=46]="TalismanPassive",e[e.Achievement=47]="Achievement",e[e.EpicStore=48]="EpicStore",e[e.DLC=49]="DLC",e))(n||{}),q=(e=>(e[e.SkillMaster=0]="SkillMaster",e[e.MonsterDistinguisher=1]="MonsterDistinguisher",e[e.EquipmentSlotWeapon=2]="EquipmentSlotWeapon",e[e.EquipmentSlotArmor=3]="EquipmentSlotArmor",e[e.EquipmentSlotJewelry=4]="EquipmentSlotJewelry",e[e.PotionSlot=5]="PotionSlot",e[e.EquipmentProficiency=6]="EquipmentProficiency",e[e.PhysicalDamage=7]="PhysicalDamage",e[e.FireDamage=8]="FireDamage",e[e.IceDamage=9]="IceDamage",e[e.ThunderDamage=10]="ThunderDamage",e[e.LightDamage=11]="LightDamage",e[e.DarkDamage=12]="DarkDamage",e[e.Alchemist=13]="Alchemist",e[e.MetalHunter=14]="MetalHunter",e[e.Survival=15]="Survival",e[e.FireResistance=16]="FireResistance",e[e.IceResistance=17]="IceResistance",e[e.ThunderResistance=18]="ThunderResistance",e[e.LightResistance=19]="LightResistance",e[e.DarkResistance=20]="DarkResistance",e[e.Cooperation=21]="Cooperation",e[e.DebuffResistance=22]="DebuffResistance",e[e.MoveSpeed=23]="MoveSpeed",e[e.BreakingTheLimit=24]="BreakingTheLimit",e[e.Quester=25]="Quester",e[e.ExplorerOfSD=26]="ExplorerOfSD",e))(q||{}),Es=(e=>(e[e.SwordAttack=0]="SwordAttack",e[e.Slash=1]="Slash",e[e.DoubleSlash=2]="DoubleSlash",e[e.SonicSlash=3]="SonicSlash",e[e.SwingDown=4]="SwingDown",e[e.SwingAround=5]="SwingAround",e[e.ChargeSwing=6]="ChargeSwing",e[e.FanSwing=7]="FanSwing",e[e.ShieldAttack=8]="ShieldAttack",e[e.KnockingShot=9]="KnockingShot",e))(Es||{}),l=(e=>(e[e.Nothing=0]="Nothing",e[e.HPAdder=1]="HPAdder",e[e.MPAdder=2]="MPAdder",e[e.ATKAdder=3]="ATKAdder",e[e.MATKAdder=4]="MATKAdder",e[e.DEFAdder=5]="DEFAdder",e[e.MDEFAdder=6]="MDEFAdder",e[e.SPDAdder=7]="SPDAdder",e[e.HPMultiplier=8]="HPMultiplier",e[e.MPMultiplier=9]="MPMultiplier",e[e.ATKMultiplier=10]="ATKMultiplier",e[e.MATKMultiplier=11]="MATKMultiplier",e[e.DEFMultiplier=12]="DEFMultiplier",e[e.MDEFMultiplier=13]="MDEFMultiplier",e[e.ATKPropotion=14]="ATKPropotion",e[e.MATKPropotion=15]="MATKPropotion",e[e.DEFPropotion=16]="DEFPropotion",e[e.MDEFPropotion=17]="MDEFPropotion",e[e.FireResistance=18]="FireResistance",e[e.IceResistance=19]="IceResistance",e[e.ThunderResistance=20]="ThunderResistance",e[e.LightResistance=21]="LightResistance",e[e.DarkResistance=22]="DarkResistance",e[e.PhysicalAbsorption=23]="PhysicalAbsorption",e[e.FireAbsorption=24]="FireAbsorption",e[e.IceAbsorption=25]="IceAbsorption",e[e.ThunderAbsorption=26]="ThunderAbsorption",e[e.LightAbsorption=27]="LightAbsorption",e[e.DarkAbsorption=28]="DarkAbsorption",e[e.DebuffResistance=29]="DebuffResistance",e[e.EquipmentDropChance=30]="EquipmentDropChance",e[e.SlimeDropChance=31]="SlimeDropChance",e[e.MagicSlimeDropChance=32]="MagicSlimeDropChance",e[e.SpiderDropChance=33]="SpiderDropChance",e[e.BatDropChance=34]="BatDropChance",e[e.FairyDropChance=35]="FairyDropChance",e[e.FoxDropChance=36]="FoxDropChance",e[e.DevilFishDropChance=37]="DevilFishDropChance",e[e.TreantDropChance=38]="TreantDropChance",e[e.FlameTigerDropChance=39]="FlameTigerDropChance",e[e.UnicornDropChance=40]="UnicornDropChance",e[e.ColorMaterialDropChance=41]="ColorMaterialDropChance",e[e.PhysicalCritical=42]="PhysicalCritical",e[e.MagicalCritical=43]="MagicalCritical",e[e.EXPGain=44]="EXPGain",e[e.SkillProficiency=45]="SkillProficiency",e[e.EquipmentProficiency=46]="EquipmentProficiency",e[e.MoveSpeedMultiplier=47]="MoveSpeedMultiplier",e[e.GoldGain=48]="GoldGain",e[e.StoneGain=49]="StoneGain",e[e.CrystalGain=50]="CrystalGain",e[e.LeafGain=51]="LeafGain",e[e.WarriorSkillLevel=52]="WarriorSkillLevel",e[e.WizardSkillLevel=53]="WizardSkillLevel",e[e.AngelSkillLevel=54]="AngelSkillLevel",e[e.ThiefSkillLevel=55]="ThiefSkillLevel",e[e.ArcherSkillLevel=56]="ArcherSkillLevel",e[e.TamerSkillLevel=57]="TamerSkillLevel",e[e.AllSkillLevel=58]="AllSkillLevel",e[e.SlimeKnowledge=59]="SlimeKnowledge",e[e.MagicSlimeKnowledge=60]="MagicSlimeKnowledge",e[e.SpiderKnowledge=61]="SpiderKnowledge",e[e.BatKnowledge=62]="BatKnowledge",e[e.FairyKnowledge=63]="FairyKnowledge",e[e.FoxKnowledge=64]="FoxKnowledge",e[e.DevilFishKnowledge=65]="DevilFishKnowledge",e[e.TreantKnowledge=66]="TreantKnowledge",e[e.FlameTigerKnowledge=67]="FlameTigerKnowledge",e[e.UnicornKnowledge=68]="UnicornKnowledge",e[e.PhysicalDamage=69]="PhysicalDamage",e[e.FireDamage=70]="FireDamage",e[e.IceDamage=71]="IceDamage",e[e.ThunderDamage=72]="ThunderDamage",e[e.LightDamage=73]="LightDamage",e[e.DarkDamage=74]="DarkDamage",e[e.HpRegen=75]="HpRegen",e[e.MpRegen=76]="MpRegen",e[e.TamingPoint=77]="TamingPoint",e[e.WarriorSkillRange=78]="WarriorSkillRange",e[e.WizardSkillRange=79]="WizardSkillRange",e[e.AngelSkillRange=80]="AngelSkillRange",e[e.ThiefSkillRange=81]="ThiefSkillRange",e[e.ArcherSkillRange=82]="ArcherSkillRange",e[e.TamerSkillRange=83]="TamerSkillRange",e[e.TownMatGain=84]="TownMatGain",e[e.TownMatAreaClearGain=85]="TownMatAreaClearGain",e[e.RebirthPointGain1=86]="RebirthPointGain1",e[e.RebirthPointGain2=87]="RebirthPointGain2",e[e.RebirthPointGain3=88]="RebirthPointGain3",e[e.CriticalDamage=89]="CriticalDamage",e[e.BlessingEffect=90]="BlessingEffect",e[e.MoveSpeedAdder=91]="MoveSpeedAdder",e[e.PetEXPGain=92]="PetEXPGain",e[e.LoyaltyPointGain=93]="LoyaltyPointGain",e[e.CatalystDoubleCriticalChance=94]="CatalystDoubleCriticalChance",e[e.WarriorSkillEffectRange=95]="WarriorSkillEffectRange",e[e.WizardSkillEffectRange=96]="WizardSkillEffectRange",e[e.AngelSkillEffectRange=97]="AngelSkillEffectRange",e[e.ThiefSkillEffectRange=98]="ThiefSkillEffectRange",e[e.ArcherSkillEffectRange=99]="ArcherSkillEffectRange",e[e.TamerSkillEffectRange=100]="TamerSkillEffectRange",e[e.HpRegenMultiplier=101]="HpRegenMultiplier",e[e.MpRegenMultiplier=102]="MpRegenMultiplier",e[e.ArmoredFury=103]="ArmoredFury",e[e.WardedFury=104]="WardedFury",e[e.PetPhysicalCriticalChance=105]="PetPhysicalCriticalChance",e[e.PetMagicalCriticalChance=106]="PetMagicalCriticalChance",e[e.PetCriticalDamage=107]="PetCriticalDamage",e[e.PetDebuffResistance=108]="PetDebuffResistance",e[e.StoneTownResearchPower=109]="StoneTownResearchPower",e[e.CrystalTownResearchPower=110]="CrystalTownResearchPower",e[e.LeafTownResearchPower=111]="LeafTownResearchPower",e[e.GuildEXPGain=112]="GuildEXPGain",e[e.SPDMultiplier=113]="SPDMultiplier",e[e.CriticalDamageMultiplier=114]="CriticalDamageMultiplier",e[e.SkillProficiencyMultiplier=115]="SkillProficiencyMultiplier",e[e.EquipmentProficiencyMultiplier=116]="EquipmentProficiencyMultiplier",e[e.EXPGainMultiplier=117]="EXPGainMultiplier",e[e.GoldGainMultiplier=118]="GoldGainMultiplier",e[e.PhysicalDamageMultiplier=119]="PhysicalDamageMultiplier",e[e.FireDamageMultiplier=120]="FireDamageMultiplier",e[e.IceDamageMultiplier=121]="IceDamageMultiplier",e[e.ThunderDamageMultiplier=122]="ThunderDamageMultiplier",e[e.LightDamageMultiplier=123]="LightDamageMultiplier",e[e.DarkDamageMultiplier=124]="DarkDamageMultiplier",e[e.TamingPointMultiplier=125]="TamingPointMultiplier",e[e.PetEXPGainMultiplier=126]="PetEXPGainMultiplier",e[e.LoyaltyPointGainMultiplier=127]="LoyaltyPointGainMultiplier",e[e.BlessingEffectMultiplier=128]="BlessingEffectMultiplier",e[e.PhysicalCriticalMultiplier=129]="PhysicalCriticalMultiplier",e[e.MagicalCriticalMultiplier=130]="MagicalCriticalMultiplier",e[e.ChallengeBossKnowledge=131]="ChallengeBossKnowledge",e[e.HPAfter=132]="HPAfter",e[e.MPAfter=133]="MPAfter",e[e.ATKAfter=134]="ATKAfter",e[e.MATKAfter=135]="MATKAfter",e[e.DEFAfter=136]="DEFAfter",e[e.MDEFAfter=137]="MDEFAfter",e[e.SPDAfter=138]="SPDAfter",e[e.MoveSpeedAfter=139]="MoveSpeedAfter",e[e.PhysicalCriticalAfter=140]="PhysicalCriticalAfter",e[e.MagicalCriticalAfter=141]="MagicalCriticalAfter",e[e.CriticalDamageAfter=142]="CriticalDamageAfter",e[e.DebuffResistanceAfter=143]="DebuffResistanceAfter",e[e.PhysicalDamageAfter=144]="PhysicalDamageAfter",e[e.FireDamageAfter=145]="FireDamageAfter",e[e.IceDamageAfter=146]="IceDamageAfter",e[e.ThunderDamageAfter=147]="ThunderDamageAfter",e[e.LightDamageAfter=148]="LightDamageAfter",e[e.DarkDamageAfter=149]="DarkDamageAfter",e[e.FireResistanceAfter=150]="FireResistanceAfter",e[e.IceResistanceAfter=151]="IceResistanceAfter",e[e.ThunderResistanceAfter=152]="ThunderResistanceAfter",e[e.LightResistanceAfter=153]="LightResistanceAfter",e[e.DarkResistanceAfter=154]="DarkResistanceAfter",e[e.SlimeKnowledgeAfter=155]="SlimeKnowledgeAfter",e[e.MagicSlimeKnowledgeAfter=156]="MagicSlimeKnowledgeAfter",e[e.SpiderKnowledgeAfter=157]="SpiderKnowledgeAfter",e[e.BatKnowledgeAfter=158]="BatKnowledgeAfter",e[e.FairyKnowledgeAfter=159]="FairyKnowledgeAfter",e[e.FoxKnowledgeAfter=160]="FoxKnowledgeAfter",e[e.DevilFishKnowledgeAfter=161]="DevilFishKnowledgeAfter",e[e.TreantKnowledgeAfter=162]="TreantKnowledgeAfter",e[e.FlameTigerKnowledgeAfter=163]="FlameTigerKnowledgeAfter",e[e.UnicornKnowledgeAfter=164]="UnicornKnowledgeAfter",e[e.ChallengeBossKnowledgeAfter=165]="ChallengeBossKnowledgeAfter",e[e.SDDamageMultiplier=166]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=167]="SDDamageCutMultiplier",e[e.FameGain=168]="FameGain",e[e.DungeonCoinGain=169]="DungeonCoinGain",e[e.ExtraAfterDamage=170]="ExtraAfterDamage",e))(l||{}),Z=(e=>(e[e.ExpGain=0]="ExpGain",e[e.EQRequirement=1]="EQRequirement",e[e.QuestAcceptableNum=2]="QuestAcceptableNum",e[e.BasicAtk=3]="BasicAtk",e[e.BasicMAtk=4]="BasicMAtk",e[e.BasicHp=5]="BasicHp",e[e.BasicDef=6]="BasicDef",e[e.BasicMDef=7]="BasicMDef",e[e.BasicMp=8]="BasicMp",e[e.StoneGain=9]="StoneGain",e[e.CrystalGain=10]="CrystalGain",e[e.LeafGain=11]="LeafGain",e[e.StoneGoldCap=12]="StoneGoldCap",e[e.CrystalGoldCap=13]="CrystalGoldCap",e[e.LeafGoldCap=14]="LeafGoldCap",e[e.SkillProfGain=15]="SkillProfGain",e[e.SkillRankCostReduction=16]="SkillRankCostReduction",e[e.ClassSkillSlot=17]="ClassSkillSlot",e[e.ShareSkillPassive=18]="ShareSkillPassive",e[e.T1ExpGainBoost=19]="T1ExpGainBoost",e[e.T1RebirthPointGainBoost=20]="T1RebirthPointGainBoost",e[e.T1BasicAtkBoost=21]="T1BasicAtkBoost",e[e.T1BasicMAtkBoost=22]="T1BasicMAtkBoost",e[e.T1BasicHpBoost=23]="T1BasicHpBoost",e[e.T1BasicDefBoost=24]="T1BasicDefBoost",e[e.T1BasicMDefBoost=25]="T1BasicMDefBoost",e[e.T1BasicMpBoost=26]="T1BasicMpBoost",e[e.T1StoneGainBoost=27]="T1StoneGainBoost",e[e.T1CrystalGainBoost=28]="T1CrystalGainBoost",e[e.T1LeafGainBoost=29]="T1LeafGainBoost",e[e.T1StoneGoldCapBoost=30]="T1StoneGoldCapBoost",e[e.T1CrystalGoldCapBoost=31]="T1CrystalGoldCapBoost",e[e.T1LeafGoldCapBoost=32]="T1LeafGoldCapBoost",e[e.EQProfGain=33]="EQProfGain",e[e.EQLevelCap=34]="EQLevelCap",e[e.EQWeaponSlot=35]="EQWeaponSlot",e[e.EQArmorSlot=36]="EQArmorSlot",e[e.EQJewelrySlot=37]="EQJewelrySlot",e[e.T2ExpGainBoost=38]="T2ExpGainBoost",e[e.T2SkillProfGainBoost=39]="T2SkillProfGainBoost",e[e.T2RebirthPointGainBoost=40]="T2RebirthPointGainBoost",e[e.T2BasicAtkBoost=41]="T2BasicAtkBoost",e[e.T2BasicMAtkBoost=42]="T2BasicMAtkBoost",e[e.T2BasicHpBoost=43]="T2BasicHpBoost",e[e.T2BasicDefBoost=44]="T2BasicDefBoost",e[e.T2BasicMDefBoost=45]="T2BasicMDefBoost",e[e.T2BasicMpBoost=46]="T2BasicMpBoost",e[e.T2StoneGainBoost=47]="T2StoneGainBoost",e[e.T2CrystalGainBoost=48]="T2CrystalGainBoost",e[e.T2LeafGainBoost=49]="T2LeafGainBoost",e[e.T2StoneGoldCapBoost=50]="T2StoneGoldCapBoost",e[e.T2CrystalGoldCapBoost=51]="T2CrystalGoldCapBoost",e[e.T2LeafGoldCapBoost=52]="T2LeafGoldCapBoost",e))(Z||{}),_e=(e=>(e[e.ReduceRequiredHeroLevel=0]="ReduceRequiredHeroLevel",e[e.ReduceRequiredAbility=1]="ReduceRequiredAbility",e[e.IncreaseProficiencyGain=2]="IncreaseProficiencyGain",e[e.IncreaseEffect=3]="IncreaseEffect",e[e.PurifyCurseEffect=4]="PurifyCurseEffect",e[e.IncreaseEffectIncrement=5]="IncreaseEffectIncrement",e[e.EqLevel=6]="EqLevel",e))(_e||{}),wt=(e=>(e[e.EquipmentProficiencyGainWarrior=0]="EquipmentProficiencyGainWarrior",e[e.EquipmentProficiencyGainWizard=1]="EquipmentProficiencyGainWizard",e[e.EquipmentProficiencyGainAngel=2]="EquipmentProficiencyGainAngel",e[e.EquipmentProficiencyGainThief=3]="EquipmentProficiencyGainThief",e[e.EquipmentProficiencyGainArcher=4]="EquipmentProficiencyGainArcher",e[e.EquipmentProficiencyGainTamer=5]="EquipmentProficiencyGainTamer",e[e.EquipmentDropChance=6]="EquipmentDropChance",e[e.EnchantedEffectChance1=7]="EnchantedEffectChance1",e[e.EnchantedEffectChance2=8]="EnchantedEffectChance2",e[e.EnchantedEffectChance3=9]="EnchantedEffectChance3",e))(wt||{}),at=(e=>(e[e.Nothing=0]="Nothing",e[e.AtkDown=1]="AtkDown",e[e.MatkDown=2]="MatkDown",e[e.DefDown=3]="DefDown",e[e.MdefDown=4]="MdefDown",e[e.SpdDown=5]="SpdDown",e[e.Stop=6]="Stop",e[e.Electric=7]="Electric",e[e.Poison=8]="Poison",e[e.Death=9]="Death",e[e.Knockback=10]="Knockback",e[e.FireResDown=11]="FireResDown",e[e.IceResDown=12]="IceResDown",e[e.ThunderResDown=13]="ThunderResDown",e[e.LightResDown=14]="LightResDown",e[e.DarkResDown=15]="DarkResDown",e[e.Gravity=16]="Gravity",e[e.MaxMPDown=17]="MaxMPDown",e[e.MPAspiration=18]="MPAspiration",e))(at||{}),je=(e=>(e[e.RaidFlorzporb100=0]="RaidFlorzporb100",e[e.SoloFlorzporb100=1]="SoloFlorzporb100",e[e.RaidArachnetta150=2]="RaidArachnetta150",e[e.SoloArachnetta150=3]="SoloArachnetta150",e[e.RaidGuardianKor200=4]="RaidGuardianKor200",e[e.SoloGuardianKor200=5]="SoloGuardianKor200",e[e.HCArena1=6]="HCArena1",e[e.HCFlorzporb100=7]="HCFlorzporb100",e[e.HCArachnetta150=8]="HCArachnetta150",e[e.HCGuardianKor200=9]="HCGuardianKor200",e[e.HCArena2=10]="HCArena2",e[e.RaidNostro250=11]="RaidNostro250",e[e.SoloNostro250=12]="SoloNostro250",e[e.HCNostro250=13]="HCNostro250",e[e.RaidLadyEmelda300=14]="RaidLadyEmelda300",e[e.SoloLadyEmelda300=15]="SoloLadyEmelda300",e[e.HCLadyEmelda300=16]="HCLadyEmelda300",e[e.RaidNariSune350=17]="RaidNariSune350",e[e.SoloNariSune350=18]="SoloNariSune350",e[e.HCNariSune350=19]="HCNariSune350",e[e.RaidOctobaddie400=20]="RaidOctobaddie400",e[e.SoloOctobaddie400=21]="SoloOctobaddie400",e[e.HCOctobaddie400=22]="HCOctobaddie400",e[e.RaidBananoon450=23]="RaidBananoon450",e[e.SoloBananoon450=24]="SoloBananoon450",e[e.HCBananoon450=25]="HCBananoon450",e[e.RaidGlorbliorbus500=26]="RaidGlorbliorbus500",e[e.SoloGlorbliorbus500=27]="SoloGlorbliorbus500",e[e.HCGlorbliorbus500=28]="HCGlorbliorbus500",e[e.RaidDistortionSlime550=29]="RaidDistortionSlime550",e[e.SoloDistortionSlime550=30]="SoloDistortionSlime550",e[e.HCDistortionSlime550=31]="HCDistortionSlime550",e[e.RaidFlorzporb200=32]="RaidFlorzporb200",e[e.SoloFlorzporb200=33]="SoloFlorzporb200",e[e.HCFlorzporb200=34]="HCFlorzporb200",e[e.RaidFlorzporb300=35]="RaidFlorzporb300",e[e.SoloFlorzporb300=36]="SoloFlorzporb300",e[e.HCFlorzporb300=37]="HCFlorzporb300",e[e.RaidArachnetta250=38]="RaidArachnetta250",e[e.SoloArachnetta250=39]="SoloArachnetta250",e[e.HCArachnetta250=40]="HCArachnetta250",e[e.RaidArachnetta350=41]="RaidArachnetta350",e[e.SoloArachnetta350=42]="SoloArachnetta350",e[e.HCArachnetta350=43]="HCArachnetta350",e[e.RaidGuardianKor300=44]="RaidGuardianKor300",e[e.SoloGuardianKor300=45]="SoloGuardianKor300",e[e.HCGuardianKor300=46]="HCGuardianKor300",e[e.RaidGuardianKor400=47]="RaidGuardianKor400",e[e.SoloGuardianKor400=48]="SoloGuardianKor400",e[e.HCGuardianKor400=49]="HCGuardianKor400",e[e.RaidNostro350=50]="RaidNostro350",e[e.SoloNostro350=51]="SoloNostro350",e[e.HCNostro350=52]="HCNostro350",e[e.RaidNostro450=53]="RaidNostro450",e[e.SoloNostro450=54]="SoloNostro450",e[e.HCNostro450=55]="HCNostro450",e[e.HCArena3=56]="HCArena3",e[e.HCArena4=57]="HCArena4",e[e.HCArena5=58]="HCArena5",e[e.HCArena6=59]="HCArena6",e[e.HCArena7=60]="HCArena7",e[e.HCArena8=61]="HCArena8",e[e.HCArena9=62]="HCArena9",e[e.HCArena10=63]="HCArena10",e[e.RaidFlorzporb400=64]="RaidFlorzporb400",e[e.SoloFlorzporb400=65]="SoloFlorzporb400",e[e.HCFlorzporb400=66]="HCFlorzporb400",e[e.RaidArachnetta450=67]="RaidArachnetta450",e[e.SoloArachnetta450=68]="SoloArachnetta450",e[e.HCArachnetta450=69]="HCArachnetta450",e[e.RaidGuardianKor500=70]="RaidGuardianKor500",e[e.SoloGuardianKor500=71]="SoloGuardianKor500",e[e.HCGuardianKor500=72]="HCGuardianKor500",e[e.RaidNostro550=73]="RaidNostro550",e[e.SoloNostro550=74]="SoloNostro550",e[e.HCNostro550=75]="HCNostro550",e[e.RaidLadyEmelda400=76]="RaidLadyEmelda400",e[e.SoloLadyEmelda400=77]="SoloLadyEmelda400",e[e.HCLadyEmelda400=78]="HCLadyEmelda400",e[e.RaidLadyEmelda500=79]="RaidLadyEmelda500",e[e.SoloLadyEmelda500=80]="SoloLadyEmelda500",e[e.HCLadyEmelda500=81]="HCLadyEmelda500",e[e.RaidLadyEmelda600=82]="RaidLadyEmelda600",e[e.SoloLadyEmelda600=83]="SoloLadyEmelda600",e[e.HCLadyEmelda600=84]="HCLadyEmelda600",e[e.RaidNariSune450=85]="RaidNariSune450",e[e.SoloNariSune450=86]="SoloNariSune450",e[e.HCNariSune450=87]="HCNariSune450",e[e.RaidNariSune550=88]="RaidNariSune550",e[e.SoloNariSune550=89]="SoloNariSune550",e[e.HCNariSune550=90]="HCNariSune550",e[e.RaidNariSune650=91]="RaidNariSune650",e[e.SoloNariSune650=92]="SoloNariSune650",e[e.HCNariSune650=93]="HCNariSune650",e[e.SDSlime=94]="SDSlime",e[e.RaidOctobaddie500=95]="RaidOctobaddie500",e[e.SoloOctobaddie500=96]="SoloOctobaddie500",e[e.HCOctobaddie500=97]="HCOctobaddie500",e[e.RaidOctobaddie600=98]="RaidOctobaddie600",e[e.SoloOctobaddie600=99]="SoloOctobaddie600",e[e.HCOctobaddie600=100]="HCOctobaddie600",e[e.RaidOctobaddie700=101]="RaidOctobaddie700",e[e.SoloOctobaddie700=102]="SoloOctobaddie700",e[e.HCOctobaddie700=103]="HCOctobaddie700",e[e.SDSpider=104]="SDSpider",e[e.SDBatTreant=105]="SDBatTreant",e[e.SDFairyFlametiger=106]="SDFairyFlametiger",e[e.SDSlimeMslime=107]="SDSlimeMslime",e[e.RaidFlorzporb500=108]="RaidFlorzporb500",e[e.SoloFlorzporb500=109]="SoloFlorzporb500",e[e.HCFlorzporb500=110]="HCFlorzporb500",e[e.RaidArachnetta550=111]="RaidArachnetta550",e[e.SoloArachnetta550=112]="SoloArachnetta550",e[e.HCArachnetta550=113]="HCArachnetta550",e[e.RaidGuardianKor600=114]="RaidGuardianKor600",e[e.SoloGuardianKor600=115]="SoloGuardianKor600",e[e.HCGuardianKor600=116]="HCGuardianKor600",e[e.RaidNostro650=117]="RaidNostro650",e[e.SoloNostro650=118]="SoloNostro650",e[e.HCNostro650=119]="HCNostro650",e[e.RaidLadyEmelda700=120]="RaidLadyEmelda700",e[e.SoloLadyEmelda700=121]="SoloLadyEmelda700",e[e.HCLadyEmelda700=122]="HCLadyEmelda700",e[e.RaidNariSune750=123]="RaidNariSune750",e[e.SoloNariSune750=124]="SoloNariSune750",e[e.HCNariSune750=125]="HCNariSune750",e[e.RaidOctobaddie800=126]="RaidOctobaddie800",e[e.SoloOctobaddie800=127]="SoloOctobaddie800",e[e.HCOctobaddie800=128]="HCOctobaddie800",e[e.UTMontblango=129]="UTMontblango",e))(je||{}),L=(e=>(e[e.SkillMaster1=0]="SkillMaster1",e[e.SkillMaster2=1]="SkillMaster2",e[e.SkillMaster3=2]="SkillMaster3",e[e.SkillMaster4=3]="SkillMaster4",e[e.MonsterDistinguisher1=4]="MonsterDistinguisher1",e[e.MonsterDistinguisher2=5]="MonsterDistinguisher2",e[e.MonsterDistinguisher3=6]="MonsterDistinguisher3",e[e.MonsterDistinguisher4=7]="MonsterDistinguisher4",e[e.MonsterDistinguisher5=8]="MonsterDistinguisher5",e[e.MonsterDistinguisher6=9]="MonsterDistinguisher6",e[e.EquipmentSlotWeapon1=10]="EquipmentSlotWeapon1",e[e.EquipmentSlotWeapon2=11]="EquipmentSlotWeapon2",e[e.EquipmentSlotWeapon3=12]="EquipmentSlotWeapon3",e[e.EquipmentSlotWeapon4=13]="EquipmentSlotWeapon4",e[e.EquipmentSlotWeapon5=14]="EquipmentSlotWeapon5",e[e.EquipmentSlotWeapon6=15]="EquipmentSlotWeapon6",e[e.EquipmentSlotArmor1=16]="EquipmentSlotArmor1",e[e.EquipmentSlotArmor2=17]="EquipmentSlotArmor2",e[e.EquipmentSlotArmor3=18]="EquipmentSlotArmor3",e[e.EquipmentSlotArmor4=19]="EquipmentSlotArmor4",e[e.EquipmentSlotArmor5=20]="EquipmentSlotArmor5",e[e.EquipmentSlotArmor6=21]="EquipmentSlotArmor6",e[e.EquipmentSlotJewelry1=22]="EquipmentSlotJewelry1",e[e.EquipmentSlotJewelry2=23]="EquipmentSlotJewelry2",e[e.EquipmentSlotJewelry3=24]="EquipmentSlotJewelry3",e[e.EquipmentSlotJewelry4=25]="EquipmentSlotJewelry4",e[e.EquipmentSlotJewelry5=26]="EquipmentSlotJewelry5",e[e.EquipmentSlotJewelry6=27]="EquipmentSlotJewelry6",e[e.PotionSlot1=28]="PotionSlot1",e[e.PotionSlot2=29]="PotionSlot2",e[e.PotionSlot3=30]="PotionSlot3",e[e.PhysicalAttack1=31]="PhysicalAttack1",e[e.PhysicalAttack2=32]="PhysicalAttack2",e[e.PhysicalAttack3=33]="PhysicalAttack3",e[e.PhysicalAttack4=34]="PhysicalAttack4",e[e.FireAttack1=35]="FireAttack1",e[e.FireAttack2=36]="FireAttack2",e[e.FireAttack3=37]="FireAttack3",e[e.FireAttack4=38]="FireAttack4",e[e.IceAttack1=39]="IceAttack1",e[e.IceAttack2=40]="IceAttack2",e[e.IceAttack3=41]="IceAttack3",e[e.IceAttack4=42]="IceAttack4",e[e.ThunderAttack1=43]="ThunderAttack1",e[e.ThunderAttack2=44]="ThunderAttack2",e[e.ThunderAttack3=45]="ThunderAttack3",e[e.ThunderAttack4=46]="ThunderAttack4",e[e.LightAttack1=47]="LightAttack1",e[e.LightAttack2=48]="LightAttack2",e[e.LightAttack3=49]="LightAttack3",e[e.LightAttack4=50]="LightAttack4",e[e.DarkAttack1=51]="DarkAttack1",e[e.DarkAttack2=52]="DarkAttack2",e[e.DarkAttack3=53]="DarkAttack3",e[e.DarkAttack4=54]="DarkAttack4",e[e.Porter1=55]="Porter1",e[e.Porter2=56]="Porter2",e[e.Porter3=57]="Porter3",e[e.Porter4=58]="Porter4",e[e.Porter5=59]="Porter5",e[e.Porter6=60]="Porter6",e[e.Alchemist1=61]="Alchemist1",e[e.Alchemist2=62]="Alchemist2",e[e.Alchemist3=63]="Alchemist3",e[e.Alchemist4=64]="Alchemist4",e[e.Alchemist5=65]="Alchemist5",e[e.EquipmentProf1=66]="EquipmentProf1",e[e.EquipmentProf2=67]="EquipmentProf2",e[e.EquipmentProf3=68]="EquipmentProf3",e[e.EquipmentProf4=69]="EquipmentProf4",e[e.EquipmentProf5=70]="EquipmentProf5",e[e.MetalHunter1=71]="MetalHunter1",e[e.MetalHunter2=72]="MetalHunter2",e[e.MetalHunter3=73]="MetalHunter3",e[e.MetalHunter4=74]="MetalHunter4",e[e.FireResistance1=75]="FireResistance1",e[e.FireResistance2=76]="FireResistance2",e[e.FireResistance3=77]="FireResistance3",e[e.FireResistance4=78]="FireResistance4",e[e.FireResistance5=79]="FireResistance5",e[e.IceResistance1=80]="IceResistance1",e[e.IceResistance2=81]="IceResistance2",e[e.IceResistance3=82]="IceResistance3",e[e.IceResistance4=83]="IceResistance4",e[e.IceResistance5=84]="IceResistance5",e[e.ThunderResistance1=85]="ThunderResistance1",e[e.ThunderResistance2=86]="ThunderResistance2",e[e.ThunderResistance3=87]="ThunderResistance3",e[e.ThunderResistance4=88]="ThunderResistance4",e[e.ThunderResistance5=89]="ThunderResistance5",e[e.LightResistance1=90]="LightResistance1",e[e.LightResistance2=91]="LightResistance2",e[e.LightResistance3=92]="LightResistance3",e[e.LightResistance4=93]="LightResistance4",e[e.LightResistance5=94]="LightResistance5",e[e.DarkResistance1=95]="DarkResistance1",e[e.DarkResistance2=96]="DarkResistance2",e[e.DarkResistance3=97]="DarkResistance3",e[e.DarkResistance4=98]="DarkResistance4",e[e.DarkResistance5=99]="DarkResistance5",e[e.Survival1=100]="Survival1",e[e.Survival2=101]="Survival2",e[e.Survival3=102]="Survival3",e[e.Survival4=103]="Survival4",e[e.Cooperation1=104]="Cooperation1",e[e.Cooperation2=105]="Cooperation2",e[e.Cooperation3=106]="Cooperation3",e[e.Quester1=107]="Quester1",e[e.Quester2=108]="Quester2",e[e.Quester3=109]="Quester3",e[e.Quester4=110]="Quester4",e[e.Quester5=111]="Quester5",e[e.Quester6=112]="Quester6",e[e.Quester7=113]="Quester7",e[e.Quester8=114]="Quester8",e[e.Quester9=115]="Quester9",e[e.Quester10=116]="Quester10",e[e.MonsterDistinguisher7=117]="MonsterDistinguisher7",e[e.MonsterDistinguisher8=118]="MonsterDistinguisher8",e[e.MetalHunter5=119]="MetalHunter5",e[e.MetalHunter6=120]="MetalHunter6",e[e.MetalHunter7=121]="MetalHunter7",e[e.MetalHunter8=122]="MetalHunter8",e[e.MetalHunter9=123]="MetalHunter9",e[e.ExplorerOfSD1=124]="ExplorerOfSD1",e[e.ExplorerOfSD2=125]="ExplorerOfSD2",e[e.ExplorerOfSD3=126]="ExplorerOfSD3",e[e.ExplorerOfSD4=127]="ExplorerOfSD4",e[e.ExplorerOfSD5=128]="ExplorerOfSD5",e[e.ExplorerOfSD6=129]="ExplorerOfSD6",e[e.ExplorerOfSD7=130]="ExplorerOfSD7",e[e.ExplorerOfSD8=131]="ExplorerOfSD8",e[e.ExplorerOfSD9=132]="ExplorerOfSD9",e[e.ExplorerOfSD10=133]="ExplorerOfSD10",e[e.ExplorerOfSD11=134]="ExplorerOfSD11",e[e.ExplorerOfSD12=135]="ExplorerOfSD12",e[e.ExplorerOfSD13=136]="ExplorerOfSD13",e[e.ExplorerOfSD14=137]="ExplorerOfSD14",e[e.ExplorerOfSD15=138]="ExplorerOfSD15",e))(L||{}),gs=(e=>(e[e.DPS=0]="DPS",e[e.SkillProficiency=1]="SkillProficiency",e[e.TPG=2]="TPG",e[e.LPG=3]="LPG",e))(gs||{});const W={HeroKind:Object.entries(R).length/2,AreaKind:Object.entries(mh).length/2,ResourceKind:Object.entries(Y).length/2,GlobalStats:Object.entries(ke).length/2,Stats:Object.entries(v).length/2,BasicStatsKind:Object.entries(d).length/2,ChallengeMonsterKind:Object.entries(Dt).length/2,MonsterSpecies:Object.entries(se).length/2,MonsterColor:Object.entries(At).length/2,Element:Object.entries(F).length/2,PetActiveEffectKind:Object.entries(Mh).length/2,GuildAbilityKind:Object.entries(Ot).length/2,AbilityKind:Object.entries(y).length/2,EquipmentSetKind:Object.entries(we).length/2,EquipmentKind:Object.entries(E).length/2,EquipmentPart:Object.entries(V).length/2,SuperDungeonPowerupKind:Object.entries(Ae).length/2,PotionKind:Object.entries(H).length/2,MultiplierKind:Object.entries(n).length/2,TitleKind:Object.entries(q).length/2,SkillKindWarrior:Object.entries(Es).length/2,EquipmentEffectKind:Object.entries(l).length/2,RebirthUpgradeKind:Object.entries(Z).length/2,EquipmentForgeEffectKind:Object.entries(_e).length/2,DictionaryUpgradeKind:Object.entries(wt).length/2,Debuff:Object.entries(at).length/2,ChallengeKind:Object.entries(je).length/2,QuestKindTitle:Object.entries(L).length/2,EquipmentEffectOptimizerKind:Object.entries(gs).length/2};class Eh{constructor(){o(this,"isSuperDungeon",!1);o(this,"isBlessing",!1);o(this,"superDungeonPowerupLevels",Array(21).fill(0));o(this,"superDungeonPowerupIsActive",!1);o(this,"enemyLevel",1);o(this,"enemyColor",0);o(this,"enemySpecies",0);o(this,"enemyChallenge",0);o(this,"ascendTime");o(this,"currentAreaKind",Array(6).fill(0));o(this,"currentAreaId",Array(6).fill(0));o(this,"isActiveBattle",Array(6).fill(!1));o(this,"blessingDurationLefts");o(this,"monsterDefeatedNumsSlime",Array(60).fill(0));o(this,"monsterDefeatedNumsMagicSlime",Array(60).fill(0));o(this,"monsterDefeatedNumsSpider",Array(60).fill(0));o(this,"monsterDefeatedNumsBat",Array(60).fill(0));o(this,"monsterDefeatedNumsFairy",Array(60).fill(0));o(this,"monsterDefeatedNumsFox",Array(60).fill(0));o(this,"monsterDefeatedNumsDevilFish",Array(60).fill(0));o(this,"monsterDefeatedNumsTreant",Array(60).fill(0));o(this,"monsterDefeatedNumsFlameTiger",Array(60).fill(0));o(this,"monsterDefeatedNumsUnicorn",Array(60).fill(0));o(this,"monsterDefeatedNumsMimic",Array(60).fill(0));o(this,"monsterDefeatedNumsChallenge",Array(100).fill(0));o(this,"monsterCapturedNumsSlime",Array(60).fill(0));o(this,"monsterCapturedNumsMagicSlime",Array(60).fill(0));o(this,"monsterCapturedNumsSpider",Array(60).fill(0));o(this,"monsterCapturedNumsBat",Array(60).fill(0));o(this,"monsterCapturedNumsFairy",Array(60).fill(0));o(this,"monsterCapturedNumsFox",Array(60).fill(0));o(this,"monsterCapturedNumsDevilFish",Array(60).fill(0));o(this,"monsterCapturedNumsTreant",Array(60).fill(0));o(this,"monsterCapturedNumsFlameTiger",Array(60).fill(0));o(this,"monsterCapturedNumsUnicorn",Array(60).fill(0));o(this,"monsterCapturedNumsMimic",Array(60).fill(0));o(this,"monsterCapturedNumsChallenge",Array(100).fill(0));o(this,"monsterMutantDefeatedNumsSlime",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsMagicSlime",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsSpider",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsBat",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsFairy",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsFox",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsDevilFish",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsTreant",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsFlameTiger",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsUnicorn",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsMimic",Array(60).fill(0));o(this,"monsterMutantDefeatedNumsChallenge",Array(100).fill(0));o(this,"monsterMutantCapturedNumsSlime",Array(60).fill(0));o(this,"monsterMutantCapturedNumsMagicSlime",Array(60).fill(0));o(this,"monsterMutantCapturedNumsSpider",Array(60).fill(0));o(this,"monsterMutantCapturedNumsBat",Array(60).fill(0));o(this,"monsterMutantCapturedNumsFairy",Array(60).fill(0));o(this,"monsterMutantCapturedNumsFox",Array(60).fill(0));o(this,"monsterMutantCapturedNumsDevilFish",Array(60).fill(0));o(this,"monsterMutantCapturedNumsTreant",Array(60).fill(0));o(this,"monsterMutantCapturedNumsFlameTiger",Array(60).fill(0));o(this,"monsterMutantCapturedNumsUnicorn",Array(60).fill(0));o(this,"monsterMutantCapturedNumsMimic",Array(60).fill(0));o(this,"monsterMutantCapturedNumsChallenge",Array(100).fill(0));o(this,"summonSpecies");o(this,"summonColor");o(this,"isSetSummonPet");o(this,"materials");o(this,"movedDistance");o(this,"movedDistancePet");o(this,"heroLevel",Array(6).fill(0));o(this,"heroExp");o(this,"abilityPoints",Array(6).fill(0));o(this,"abilityPointsVitality",Array(6).fill(0));o(this,"abilityPointsStrength",Array(6).fill(0));o(this,"abilityPointsIntelligence",Array(6).fill(0));o(this,"abilityPointsAgility",Array(6).fill(0));o(this,"abilityPointsLuck",Array(6).fill(0));o(this,"combatRangeId");o(this,"superAbilityPoint",Array(6).fill(0));o(this,"heroFame",Array(6).fill(0));o(this,"heroGrade",Array(6).fill(0));o(this,"superAbilityPointsVitality",Array(6).fill(0));o(this,"superAbilityPointsStrength",Array(6).fill(0));o(this,"superAbilityPointsIntelligence",Array(6).fill(0));o(this,"superAbilityPointsAgility",Array(6).fill(0));o(this,"superAbilityPointsLuck",Array(6).fill(0));o(this,"currentAreaLevelsSlime",Array(20).fill(0));o(this,"currentAreaLevelsMagicSlime",Array(20).fill(0));o(this,"currentAreaLevelsSpider",Array(20).fill(0));o(this,"currentAreaLevelsBat",Array(20).fill(0));o(this,"currentAreaLevelsFairy",Array(20).fill(0));o(this,"currentAreaLevelsFox",Array(20).fill(0));o(this,"currentAreaLevelsDevilFish",Array(20).fill(0));o(this,"currentAreaLevelsTreant",Array(20).fill(0));o(this,"currentAreaLevelsFlameTiger",Array(20).fill(0));o(this,"currentAreaLevelsUnicorn",Array(20).fill(0));o(this,"areaIsReceivedFirstRewardSlime");o(this,"areaIsReceivedFirstRewardMagicSlime");o(this,"areaIsReceivedFirstRewardSpider");o(this,"areaIsReceivedFirstRewardBat");o(this,"areaIsReceivedFirstRewardFairy");o(this,"areaIsReceivedFirstRewardFox");o(this,"areaIsReceivedFirstRewardDevilFish");o(this,"areaIsReceivedFirstRewardTreant");o(this,"areaIsReceivedFirstRewardFlameTiger");o(this,"areaIsReceivedFirstRewardUnicorn");o(this,"areaCompleteNumsSlime");o(this,"areaCompleteNumsMagicSlime");o(this,"areaCompleteNumsSpider");o(this,"areaCompleteNumsBat");o(this,"areaCompleteNumsFairy");o(this,"areaCompleteNumsFox");o(this,"areaCompleteNumsDevilFish");o(this,"areaCompleteNumsTreant");o(this,"areaCompleteNumsFlameTiger");o(this,"areaCompleteNumsUnicorn");o(this,"areaBestTimesSlime");o(this,"areaBestTimesMagicSlime");o(this,"areaBestTimesSpider");o(this,"areaBestTimesBat");o(this,"areaBestTimesFairy");o(this,"areaBestTimesFox");o(this,"areaBestTimesDevilFish");o(this,"areaBestTimesTreant");o(this,"areaBestTimesFlameTiger");o(this,"areaBestTimesUnicorn");o(this,"areaBestGoldsSlime");o(this,"areaBestGoldsMagicSlime");o(this,"areaBestGoldsSpider");o(this,"areaBestGoldsBat");o(this,"areaBestGoldsFairy");o(this,"areaBestGoldsFox");o(this,"areaBestGoldsDevilFish");o(this,"areaBestGoldsTreant");o(this,"areaBestGoldsFlameTiger");o(this,"areaBestGoldsUnicorn");o(this,"areaBestExpsSlime");o(this,"areaBestExpsMagicSlime");o(this,"areaBestExpsSpider");o(this,"areaBestExpsBat");o(this,"areaBestExpsFairy");o(this,"areaBestExpsFox");o(this,"areaBestExpsDevilFish");o(this,"areaBestExpsTreant");o(this,"areaBestExpsFlameTiger");o(this,"areaBestExpsUnicorn");o(this,"areaPrestigePointsSlime");o(this,"areaPrestigePointsMagicSlime");o(this,"areaPrestigePointsSpider");o(this,"areaPrestigePointsBat");o(this,"areaPrestigePointsFairy");o(this,"areaPrestigePointsFox");o(this,"areaPrestigePointsDevilFish");o(this,"areaPrestigePointsTreant");o(this,"areaPrestigePointsFlameTiger");o(this,"areaPrestigePointsUnicorn");o(this,"areaPrestigeUpgradeLevelsSlime");o(this,"areaPrestigeUpgradeLevelsMagicSlime");o(this,"areaPrestigeUpgradeLevelsSpider");o(this,"areaPrestigeUpgradeLevelsBat");o(this,"areaPrestigeUpgradeLevelsFairy");o(this,"areaPrestigeUpgradeLevelsFox");o(this,"areaPrestigeUpgradeLevelsDevilFish");o(this,"areaPrestigeUpgradeLevelsTreant");o(this,"areaPrestigeUpgradeLevelsFlameTiger");o(this,"areaPrestigeUpgradeLevelsUnicorn");o(this,"areaPrestigeResetNumsSlime");o(this,"areaPrestigeResetNumsMagicSlime");o(this,"areaPrestigeResetNumsSpider");o(this,"areaPrestigeResetNumsBat");o(this,"areaPrestigeResetNumsFairy");o(this,"areaPrestigeResetNumsFox");o(this,"areaPrestigeResetNumsDevilFish");o(this,"areaPrestigeResetNumsTreant");o(this,"areaPrestigeResetNumsFlameTiger");o(this,"areaPrestigeResetNumsUnicorn");o(this,"isClearedMission",Array(1e4).fill(!1));o(this,"isClearedChallenge",Array(W.ChallengeKind*10).fill(!1));o(this,"isReceivedRewardsChallenge",Array(W.ChallengeKind*10).fill(!1));o(this,"accomplishedFirstTimesChallenge");o(this,"accomplishedTimesChallenge");o(this,"accomplishedBestTimesChallenge");o(this,"superDungeonMaxFloorsReached",Array(100).fill(0));o(this,"dungeonCoin",0);o(this,"topaz",0);o(this,"ruby",0);o(this,"pieceOfRuby",0);o(this,"motherStone",0);o(this,"entryCostRefreshTicket",0);o(this,"superDungeonPowerupIsUnlocked",Array(21).fill(!1));o(this,"superDungeonPowerupPurchasedNums",Array(21).fill(0));o(this,"superDungeonPowerupRanks",Array(21).fill(0));o(this,"superDungeonShopPurchasedNums",Array(200).fill(0));o(this,"superDungeonUpgradeLevels",Array(61).fill(0));o(this,"superDungeonUpgradeIsSuperQueued",Array(61).fill(!1));o(this,"equipmentKinds",Array(6e3).fill(0));o(this,"equipmentOptionNums");o(this,"equipmentIsLocked");o(this,"dictionaryUpgradePoint");o(this,"dictionaryUpgradeLevels",Array(10).fill(0));o(this,"enchantKinds");o(this,"enchantEffectKinds");o(this,"enchantEffectLevels");o(this,"enchantForgeEffectKinds");o(this,"enchantEffectValues");o(this,"enchantIsLocked");o(this,"equipment1stForgeValues",Array(5300).fill(0));o(this,"equipment2ndForgeValues",Array(5300).fill(0));o(this,"equipment3rdForgeValues",Array(5300).fill(0));o(this,"equipment4thForgeValues",Array(5300).fill(0));o(this,"equipment5thForgeValues",Array(5300).fill(0));o(this,"equipment6thForgeValues",Array(5300).fill(0));o(this,"equipment7thForgeValues",Array(5300).fill(0));o(this,"equipmentLevelsWarrior",Array(174).fill(0));o(this,"equipmentLevelsWizard",Array(174).fill(0));o(this,"equipmentLevelsAngel",Array(174).fill(0));o(this,"equipmentLevelsThief",Array(174).fill(0));o(this,"equipmentLevelsArcher",Array(174).fill(0));o(this,"equipmentLevelsTamer",Array(174).fill(0));o(this,"equipmentProficiencyWarrior");o(this,"equipmentProficiencyWizard");o(this,"equipmentProficiencyAngel");o(this,"equipmentProficiencyThief");o(this,"equipmentProficiencyArcher");o(this,"equipmentProficiencyTamer");o(this,"equipmentIsMaxedWarrior",Array(174).fill(!1));o(this,"equipmentIsMaxedWizard",Array(174).fill(!1));o(this,"equipmentIsMaxedAngel",Array(174).fill(!1));o(this,"equipmentIsMaxedThief",Array(174).fill(!1));o(this,"equipmentIsMaxedArcher",Array(174).fill(!1));o(this,"equipmentIsMaxedTamer",Array(174).fill(!1));o(this,"equipmentIsAutoDisassemble");o(this,"equipmentIsAutoProficiency");o(this,"disassembledEquipmentNums");o(this,"townMatGainFromdisassemble");o(this,"equipment1stOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment2ndOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment3rdOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment4thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment5thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment6thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment7thOptionEffectKinds",Array(6e3).fill(0));o(this,"equipment1stOptionLevels",Array(6e3).fill(0));o(this,"equipment2ndOptionLevels",Array(6e3).fill(0));o(this,"equipment3rdOptionLevels",Array(6e3).fill(0));o(this,"equipment4thOptionLevels",Array(6e3).fill(0));o(this,"equipment5thOptionLevels",Array(6e3).fill(0));o(this,"equipment6thOptionLevels",Array(6e3).fill(0));o(this,"equipment7thOptionLevels",Array(6e3).fill(0));o(this,"equipment1stOptionEffectValues",Array(6e3).fill(0));o(this,"equipment2ndOptionEffectValues",Array(6e3).fill(0));o(this,"equipment3rdOptionEffectValues",Array(6e3).fill(0));o(this,"equipment4thOptionEffectValues",Array(6e3).fill(0));o(this,"equipment5thOptionEffectValues",Array(6e3).fill(0));o(this,"equipment6thOptionEffectValues",Array(6e3).fill(0));o(this,"equipment7thOptionEffectValues",Array(6e3).fill(0));o(this,"equipmentId",Array(6e3).fill(0));o(this,"enchantId");o(this,"potionId",Array(296).fill(0));o(this,"potionKinds",Array(296).fill(0));o(this,"potionStackNums",Array(296).fill(0));o(this,"potionIsLocked");o(this,"potionLevels",Array(86).fill(0));o(this,"potionProductedNums");o(this,"potionDisassembledNums",Array(86).fill(0));o(this,"guildLevel",0);o(this,"guildExp",0);o(this,"guildAbilityPoint");o(this,"guildAbilityLevels",Array(20).fill(0));o(this,"accomplishedFirstTimesGuildLevel");o(this,"accomplishedTimesGuildLevel");o(this,"accomplishedBestTimesGuildLevel");o(this,"guildGrade",0);o(this,"guildFame",0);o(this,"guildSuperAbilityPoint",0);o(this,"guildSuperAbilityLevels",Array(13).fill(0));o(this,"alchemyPoint");o(this,"mysteriousWater",0);o(this,"mysteriousWaterProgress");o(this,"mysteriousWaterExpandedCapNum",0);o(this,"alchemyUpgradeLevels",Array(10).fill(0));o(this,"catalystLevels",Array(8).fill(0));o(this,"isEquippedCatarysts",Array(8).fill(!1));o(this,"essenceWaterPerSecs",Array(16).fill(0));o(this,"essenceProgresses");o(this,"craftEnchantScrollLevels");o(this,"essences");o(this,"totalGeneralQuestClearedNum");o(this,"totalGeneralQuestClearedNums");o(this,"generalQuestClearNumsPerClass");o(this,"isClearedQuestGeneralOnce");o(this,"isPersistentUnlockedQuestGeneral");o(this,"isClearedQuestsGlobal",Array(79).fill(!1));o(this,"isClearedQuestsTitleWarrior",Array(139).fill(!1));o(this,"isClearedQuestsTitleWizard",Array(139).fill(!1));o(this,"isClearedQuestsTitleAngel",Array(139).fill(!1));o(this,"isClearedQuestsTitleThief",Array(139).fill(!1));o(this,"isClearedQuestsTitleArcher",Array(139).fill(!1));o(this,"isClearedQuestsTitleTamer",Array(139).fill(!1));o(this,"isClearedQuestsGeneralWarrior");o(this,"isClearedQuestsGeneralWizard");o(this,"isClearedQuestsGeneralAngel");o(this,"isClearedQuestsGeneralThief");o(this,"isClearedQuestsGeneralArcher");o(this,"isClearedQuestsGeneralTamer");o(this,"isAcceptedQuestsGlobal");o(this,"isAcceptedQuestsTitleWarrior");o(this,"isAcceptedQuestsTitleWizard");o(this,"isAcceptedQuestsTitleAngel");o(this,"isAcceptedQuestsTitleThief");o(this,"isAcceptedQuestsTitleArcher");o(this,"isAcceptedQuestsTitleTamer");o(this,"isAcceptedQuestsGeneralWarrior");o(this,"isAcceptedQuestsGeneralWizard");o(this,"isAcceptedQuestsGeneralAngel");o(this,"isAcceptedQuestsGeneralThief");o(this,"isAcceptedQuestsGeneralArcher");o(this,"isAcceptedQuestsGeneralTamer");o(this,"initDefeatedNumQuestsGlobal");o(this,"initDefeatedNumQuestsTitleWarrior");o(this,"initDefeatedNumQuestsTitleWizard");o(this,"initDefeatedNumQuestsTitleAngel");o(this,"initDefeatedNumQuestsTitleThief");o(this,"initDefeatedNumQuestsTitleArcher");o(this,"initDefeatedNumQuestsTitleTamer");o(this,"initDefeatedNumQuestsGeneralWarrior");o(this,"initDefeatedNumQuestsGeneralWizard");o(this,"initDefeatedNumQuestsGeneralAngel");o(this,"initDefeatedNumQuestsGeneralThief");o(this,"initDefeatedNumQuestsGeneralArcher");o(this,"initDefeatedNumQuestsGeneralTamer");o(this,"initCompletedAreaNumQuestsTitleWarrior");o(this,"initCompletedAreaNumQuestsTitleWizard");o(this,"initCompletedAreaNumQuestsTitleAngel");o(this,"initCompletedAreaNumQuestsTitleThief");o(this,"initCompletedAreaNumQuestsTitleArcher");o(this,"initCompletedAreaNumQuestsTitleTamer");o(this,"initCompletedAreaNumQuestsGeneralWarrior");o(this,"initCompletedAreaNumQuestsGeneralWizard");o(this,"initCompletedAreaNumQuestsGeneralAngel");o(this,"initCompletedAreaNumQuestsGeneralThief");o(this,"initCompletedAreaNumQuestsGeneralArcher");o(this,"initCompletedAreaNumQuestsGeneralTamer");o(this,"initMovedDistanceQuestTitle");o(this,"initPhysicalSkillTriggeredNumQuestTitle");o(this,"initFireSkillTriggeredNumQuestTitle");o(this,"initIceSkillTriggeredNumQuestTitle");o(this,"initThunderSkillTriggeredNumQuestTitle");o(this,"initLightSkillTriggeredNumQuestTitle");o(this,"initDarkSkillTriggeredNumQuestTitle");o(this,"survivalNumQuestTitle");o(this,"sdMobDefeatedNums",Array(6).fill(0));o(this,"rebirthMaxHeroLevels");o(this,"rebirthNumsWarrior");o(this,"rebirthNumsWizard");o(this,"rebirthNumsAngel");o(this,"rebirthNumsThief");o(this,"rebirthNumsArcher");o(this,"rebirthNumsTamer");o(this,"rebirthPlayTimesWarrior");o(this,"rebirthPlayTimesWizard");o(this,"rebirthPlayTimesAngel");o(this,"rebirthPlayTimesThief");o(this,"rebirthPlayTimesArcher");o(this,"rebirthPlayTimesTamer");o(this,"rebirthMaxHeroLevelsWarrior");o(this,"rebirthMaxHeroLevelsWizard");o(this,"rebirthMaxHeroLevelsAngel");o(this,"rebirthMaxHeroLevelsThief");o(this,"rebirthMaxHeroLevelsArcher");o(this,"rebirthMaxHeroLevelsTamer");o(this,"rebirthPointsWarrior");o(this,"rebirthPointsWizard");o(this,"rebirthPointsAngel");o(this,"rebirthPointsThief");o(this,"rebirthPointsArcher");o(this,"rebirthPointsTamer");o(this,"rebirthUpgradeLevelsWarrior",Array(53).fill(0));o(this,"rebirthUpgradeLevelsWizard",Array(53).fill(0));o(this,"rebirthUpgradeLevelsAngel",Array(53).fill(0));o(this,"rebirthUpgradeLevelsThief",Array(53).fill(0));o(this,"rebirthUpgradeLevelsArcher",Array(53).fill(0));o(this,"rebirthUpgradeLevelsTamer",Array(53).fill(0));o(this,"purchasedNumMaterials");o(this,"purchasedNumTraps");o(this,"purchasedNumBlessing");o(this,"purchasedNumTownMaterials");o(this,"shopRestockTimecount");o(this,"isAutoBuyBlessings");o(this,"warriorSkillLevel",Array(10).fill(0));o(this,"wizardSkillLevel",Array(10).fill(0));o(this,"angelSkillLevel",Array(10).fill(0));o(this,"thiefSkillLevel",Array(10).fill(0));o(this,"archerSkillLevel",Array(10).fill(0));o(this,"tamerSkillLevel",Array(10).fill(0));o(this,"warriorMaxReachedSkillLevel",Array(10).fill(0));o(this,"wizardMaxReachedSkillLevel",Array(10).fill(0));o(this,"angelMaxReachedSkillLevel",Array(10).fill(0));o(this,"thiefMaxReachedSkillLevel",Array(10).fill(0));o(this,"archerMaxReachedSkillLevel",Array(10).fill(0));o(this,"tamerMaxReachedSkillLevel",Array(10).fill(0));o(this,"warriorSkillRank",Array(10).fill(0));o(this,"wizardSkillRank",Array(10).fill(0));o(this,"angelSkillRank",Array(10).fill(0));o(this,"thiefSkillRank",Array(10).fill(0));o(this,"archerSkillRank",Array(10).fill(0));o(this,"tamerSkillRank",Array(10).fill(0));o(this,"warriorSkillProficiency");o(this,"wizardSkillProficiency");o(this,"angelSkillProficiency");o(this,"thiefSkillProficiency");o(this,"archerSkillProficiency");o(this,"tamerSkillProficiency");o(this,"currentStanceId",Array(6).fill(0));o(this,"isEquippedWarriorSkillForWarrior",Array(150).fill(!1));o(this,"isEquippedWizardSkillForWarrior",Array(150).fill(!1));o(this,"isEquippedAngelSkillForWarrior",Array(150).fill(!1));o(this,"isEquippedThiefSkillForWarrior",Array(150).fill(!1));o(this,"isEquippedArcherSkillForWarrior",Array(150).fill(!1));o(this,"isEquippedTamerSkillForWarrior",Array(150).fill(!1));o(this,"isEquippedWarriorSkillForWizard",Array(150).fill(!1));o(this,"isEquippedWizardSkillForWizard",Array(150).fill(!1));o(this,"isEquippedAngelSkillForWizard",Array(150).fill(!1));o(this,"isEquippedThiefSkillForWizard",Array(150).fill(!1));o(this,"isEquippedArcherSkillForWizard",Array(150).fill(!1));o(this,"isEquippedTamerSkillForWizard",Array(150).fill(!1));o(this,"isEquippedWarriorSkillForAngel",Array(150).fill(!1));o(this,"isEquippedWizardSkillForAngel",Array(150).fill(!1));o(this,"isEquippedAngelSkillForAngel",Array(150).fill(!1));o(this,"isEquippedThiefSkillForAngel",Array(150).fill(!1));o(this,"isEquippedArcherSkillForAngel",Array(150).fill(!1));o(this,"isEquippedTamerSkillForAngel",Array(150).fill(!1));o(this,"isEquippedWarriorSkillForThief",Array(150).fill(!1));o(this,"isEquippedWizardSkillForThief",Array(150).fill(!1));o(this,"isEquippedAngelSkillForThief",Array(150).fill(!1));o(this,"isEquippedThiefSkillForThief",Array(150).fill(!1));o(this,"isEquippedArcherSkillForThief",Array(150).fill(!1));o(this,"isEquippedTamerSkillForThief",Array(150).fill(!1));o(this,"isEquippedWarriorSkillForArcher",Array(150).fill(!1));o(this,"isEquippedWizardSkillForArcher",Array(150).fill(!1));o(this,"isEquippedAngelSkillForArcher",Array(150).fill(!1));o(this,"isEquippedThiefSkillForArcher",Array(150).fill(!1));o(this,"isEquippedArcherSkillForArcher",Array(150).fill(!1));o(this,"isEquippedTamerSkillForArcher",Array(150).fill(!1));o(this,"isEquippedWarriorSkillForTamer",Array(150).fill(!1));o(this,"isEquippedWizardSkillForTamer",Array(150).fill(!1));o(this,"isEquippedAngelSkillForTamer",Array(150).fill(!1));o(this,"isEquippedThiefSkillForTamer",Array(150).fill(!1));o(this,"isEquippedArcherSkillForTamer",Array(150).fill(!1));o(this,"isEquippedTamerSkillForTamer",Array(150).fill(!1));o(this,"buildingLevels",Array(12).fill(0));o(this,"buildingRanks");o(this,"buildingResearchLevelsStone",Array(12).fill(0));o(this,"buildingResearchLevelsCrystal",Array(12).fill(0));o(this,"buildingResearchLevelsLeaf",Array(12).fill(0));o(this,"buildingResearchExpsStone");o(this,"buildingResearchExpsCrystal");o(this,"buildingResearchExpsLeaf");o(this,"IsBuildingResearchStone");o(this,"IsBuildingResearchCrystal");o(this,"IsBuildingResearchLeaf");o(this,"accomplishedFirstTimesBuilding");o(this,"accomplishedTimesBuilding");o(this,"accomplishedBestTimesBuilding");o(this,"townMaterials");o(this,"upgradeLevelsResource",Array(20).fill(0));o(this,"upgradeLevelsBasicStats",Array(7).fill(0));o(this,"upgradeLevelsGoldGain",0);o(this,"upgradeLevelsExpGain",0);o(this,"upgradeLevelsEquipmentInventory",0);o(this,"upgradeLevelsGoldCap",Array(3).fill(0));o(this,"upgradeLevelsSlimebank",Array(22).fill(0));o(this,"gold");o(this,"slimeCoin");o(this,"resources");o(this,"playtimes");o(this,"playtimesRealTime");o(this,"multibuyId");o(this,"version");o(this,"allTime",0);o(this,"allTimeRealtime");o(this,"allTimeWorldAscension");o(this,"lastDailyTime");o(this,"wasd");o(this,"isGotAchievements",Array(441).fill(!1));o(this,"isGotAchievementRewards",Array(441).fill(!1));o(this,"achievementPlaytimes");o(this,"monsterMilk");o(this,"monsterPetRanks",Array(130).fill(0));o(this,"monsterPetLevels",Array(130).fill(0));o(this,"monsterPetExps");o(this,"monsterPetLoyalty",Array(130).fill(0));o(this,"monsterPetLoyaltyExp");o(this,"monsterPetTamingPoints");o(this,"monsterPetIsActives");o(this,"openedChestNum");o(this,"totalMovedDistance");o(this,"totalMovedDistancePet");o(this,"maxHeroLevelReached");o(this,"physicalTriggeredNum");o(this,"fireTriggeredNum");o(this,"iceTriggeredNum");o(this,"thunderTriggeredNum");o(this,"lightTriggeredNum");o(this,"darkTriggeredNum");o(this,"persistentSkillSlotNum",Array(6).fill(0));o(this,"persistentGlobalSkillSlotNum",0);o(this,"maxHeroGradeReached",Array(6).fill(0));o(this,"areaIsUnlockedOnceSlime");o(this,"areaIsUnlockedOnceMagicslime");o(this,"areaIsUnlockedOnceSpider");o(this,"areaIsUnlockedOnceBat");o(this,"areaIsUnlockedOnceFairy");o(this,"areaIsUnlockedOnceFox");o(this,"areaIsUnlockedOnceDevilfish");o(this,"areaIsUnlockedOnceTreant");o(this,"areaIsUnlockedOnceFlametiger");o(this,"areaIsUnlockedOnceUnicorn");o(this,"portalOrbNum");o(this,"currentSDRun",0);o(this,"currentSDRunFailed",0);o(this,"totalSDRun",0);o(this,"totalSDRunFailed",0);o(this,"swarmClearedNum");o(this,"swarmBestScores");o(this,"ascensionNum");o(this,"ascensionPlayTime");o(this,"ascensionPoints");o(this,"bestAscensionPlayTime");o(this,"accomplishedFirstTimeAscension");o(this,"accomplishedTimeAscension");o(this,"accomplishedBestTimeAscension");o(this,"ascensionMilestoneLevelReached",Array(8).fill(0));o(this,"isGotRewardWAAccomplishments");o(this,"worldAscensionUpgradeLevels",Array(10).fill(0));o(this,"sdGemLevels",Array(15).fill(0));o(this,"sdGemExps",Array(15).fill(0));o(this,"sdGemMotherStoneAssigned",Array(15).fill(0));o(this,"modifierLoadoutId",Array(200).fill(0));o(this,"isActiveSdModifiers",Array(4e3).fill(!1));o(this,"maxModifierCleareds",Array(200).fill(0));o(this,"sdModifierValues",Array(4e3).fill(0));o(this,"totalDungeonCoinGained",0);o(this,"totalPermanentDungeonCoinGained",0);o(this,"totalTopazGained",0);o(this,"totalRubyGained",0);o(this,"totalPieceOfRubyGained",0);o(this,"totalMotherStoneGained",0);o(this,"totalEntryCostRefreshTicketGained",0);o(this,"totalEntryCostRefreshTicketUsed",0);o(this,"totalDodgeNum",0);o(this,"regularChestRNG");o(this,"regularChestRNGUsedIdNum");o(this,"isReceivedRegularChestToday",!1);o(this,"epicCoin");o(this,"epicCoinConsumed");o(this,"epicStorePurchasedNum",Array(75).fill(0));o(this,"inAppPurchasedNum",Array(10).fill(0));o(this,"inAppPurchasedNum_ver01020101",Array(10).fill(0));o(this,"totalEquipmentGained");o(this,"pieceOfRubyGainFromDisassemble",0);o(this,"equipmentIsGotOnce");o(this,"equipmentLoadoutIds",Array(6).fill(0));o(this,"potionQueues");o(this,"potionIsSuperQueues");o(this,"isDisassembleTalismans");o(this,"isStartedExpedition");o(this,"expeditionProgress");o(this,"expeditionTimeId",Array(20).fill(0));o(this,"expeditionMovedDistance");o(this,"expeditionPetSpecies",Array(100).fill(0));o(this,"expeditionPetColors",Array(100).fill(0));o(this,"expeditionPetIsSet",Array(100).fill(!1));o(this,"expeditionKinds",Array(100).fill(0));o(this,"expeditionLevels",Array(7).fill(0));o(this,"expeditionExps",Array(7).fill(0));o(this,"expeditionCompletedNums");o(this,"expeditionTimes");o(this,"maxGuildLevel",0);o(this,"maxGuildGrade",0);o(this,"autoTargetGuildAbilityLevels",Array(20).fill(0));o(this,"talismanFragement");o(this,"totalAlchemyPointGained");o(this,"isOnAMWA");o(this,"amwaIsEquippedCatalysts");o(this,"amwaSavedEssenceWaterPerSecs");o(this,"dailyQuestRarities");o(this,"dailyQuestMonsterSpecies");o(this,"dailyQuestAreaKind");o(this,"dailyQuestAreaId");o(this,"isClearedQuestsDaily");o(this,"isAcceptedQuestsDaily");o(this,"initDefeatedNumQuestsDaily");o(this,"initCompletedAreaNumQuestsDaily");o(this,"maxReachedGeneralQuestClearedNums");o(this,"isFavoriteQuestWarrior");o(this,"isFavoriteQuestWizard");o(this,"isFavoriteQuestAngel");o(this,"isFavoriteQuestThief");o(this,"isFavoriteQuestArcher");o(this,"isFavoriteQuestTamer");o(this,"questingAreaKinds");o(this,"questingAreaIds");o(this,"questingAreaIsDungeon");o(this,"isGotFirstEQ");o(this,"totalRebirthNums",Array(100).fill(0));o(this,"bestRebirthPlaytimes");o(this,"isAutoRebirthOns");o(this,"autoRebirthLevels");o(this,"autoRebirthPoints");o(this,"autoRebirthTiers");o(this,"favoriteAreaKinds");o(this,"favoriteAreaIds");o(this,"isBestExpSecAreas");o(this,"isLazyQuestingMode");o(this,"isAutoAbilityPointPresets");o(this,"autoAbilityPointPresetsVIT");o(this,"autoAbilityPointPresetsSTR");o(this,"autoAbilityPointPresetsINT");o(this,"autoAbilityPointPresetsAGI");o(this,"autoAbilityPointPresetsLUK");o(this,"autoAbilityPointMaxVIT");o(this,"autoAbilityPointMaxSTR");o(this,"autoAbilityPointMaxINT");o(this,"autoAbilityPointMaxAGI");o(this,"autoAbilityPointMaxLUK");o(this,"accomplishedFirstTimesRebirth");o(this,"accomplishedTimesRebirth");o(this,"accomplishedBestTimesRebirth");o(this,"warriorSkillTriggeredNum",Array(10).fill(0));o(this,"wizardSkillTriggeredNum",Array(10).fill(0));o(this,"angelSkillTriggeredNum",Array(10).fill(0));o(this,"thiefSkillTriggeredNum",Array(10).fill(0));o(this,"archerSkillTriggeredNum",Array(10).fill(0));o(this,"tamerSkillTriggeredNum",Array(10).fill(0));o(this,"skillLoadoutIds",Array(6).fill(0));o(this,"maxBuildingLevelsReached",Array(12).fill(0));o(this,"maxBuildingRanksReached",Array(12).fill(0));o(this,"upgradeQueuesResource");o(this,"upgradeQueuesBasicStats");o(this,"upgradeQueuesGoldGain");o(this,"upgradeQueueExpGain");o(this,"upgradeQueuesEquipmentInventory");o(this,"upgradeQueuesGoldCap");o(this,"upgradeQueuesSlimebank");o(this,"upgradeIsSuperQueuesResource");o(this,"upgradeIsSuperQueuesBasicStats");o(this,"upgradeIsSuperQueuesGoldGain");o(this,"upgradeIsSuperQueueExpGain");o(this,"upgradeIsSuperQueueEquipmentInventory");o(this,"upgradeIsSuperQueuesGoldCap");o(this,"upgradeIsSuperQueuesSlimebank");o(this,"nitro");o(this,"nitroConsumed");o(this,"nitroSpeed",0);o(this,"totalGold");o(this,"totalStone");o(this,"totalCrystal");o(this,"totalLeaf");o(this,"totalSlimeCoin");o(this,"isDlcStarterPack");o(this,"isDlcNitroPack");o(this,"isDlcGlobalSkillSlotPack");o(this,"isDlcInventorySlotPack");o(this,"currentHero",0);o(this,"isAlphaSave",!1);o(this,"multibuyNums");o(this,"isShowQuickAccess");o(this,"autoAreaProgressionTargetClearNums");o(this,"isReceivedBonusCodes");o(this,"isEnchantFilter");o(this,"enchantFilterLevel");o(this,"isSlotNumEnchantFilter");o(this,"slotNumEnchantFilter");o(this,"checkedIEH1Achievement");o(this,"receivedIEH1Achievement");o(this,"isReceivedIEH1DLCIEH2SupportPack",!1);o(this,"isScrollFilter");o(this,"isPowerupFilter",Array(160).fill(!1));o(this,"powerupFilterPurchaseLimit",Array(160).fill(0));o(this,"powerupFilterLoadoutId",Array(6).fill(0));o(this,"SDAutoLeaveAndRetryTargetFloor",0);o(this,"SDAutoLeaveAndRetryTargetEntryCost",0);o(this,"SDAutoProgressionTargetFloor",0);o(this,"SDAutoUseRefreshTicketTargetEntryCost",0);o(this,"SDAutoBuyPurchaseNum",0);o(this,"currentTutorialArrow");o(this,"equipmentOptionNums1");o(this,"equipmentOptionNums2");o(this,"equipmentOptionNums3");o(this,"equipmentOptionNums4");o(this,"equipmentOptionNums5");o(this,"equipmentOptionNums6");o(this,"equipmentIsLocked1");o(this,"equipmentIsLocked2");o(this,"equipmentIsLocked3");o(this,"equipmentIsLocked4");o(this,"equipmentIsLocked5");o(this,"equipmentIsLocked6");o(this,"globalSkillOrdersWarrior0");o(this,"globalSkillOrdersWarrior1");o(this,"globalSkillOrdersWarrior2");o(this,"globalSkillOrdersWarrior3");o(this,"globalSkillOrdersWarrior4");o(this,"globalSkillOrdersWizard0");o(this,"globalSkillOrdersWizard1");o(this,"globalSkillOrdersWizard2");o(this,"globalSkillOrdersWizard3");o(this,"globalSkillOrdersWizard4");o(this,"globalSkillOrdersAngel0");o(this,"globalSkillOrdersAngel1");o(this,"globalSkillOrdersAngel2");o(this,"globalSkillOrdersAngel3");o(this,"globalSkillOrdersAngel4");o(this,"globalSkillOrdersThief0");o(this,"globalSkillOrdersThief1");o(this,"globalSkillOrdersThief2");o(this,"globalSkillOrdersThief3");o(this,"globalSkillOrdersThief4");o(this,"globalSkillOrdersArcher0");o(this,"globalSkillOrdersArcher1");o(this,"globalSkillOrdersArcher2");o(this,"globalSkillOrdersArcher3");o(this,"globalSkillOrdersArcher4");o(this,"globalSkillOrdersTamer0");o(this,"globalSkillOrdersTamer1");o(this,"globalSkillOrdersTamer2");o(this,"globalSkillOrdersTamer3");o(this,"globalSkillOrdersTamer4");o(this,"classSkillOrdersWarrior0");o(this,"classSkillOrdersWarrior1");o(this,"classSkillOrdersWarrior2");o(this,"classSkillOrdersWarrior3");o(this,"classSkillOrdersWarrior4");o(this,"classSkillOrdersWizard0");o(this,"classSkillOrdersWizard1");o(this,"classSkillOrdersWizard2");o(this,"classSkillOrdersWizard3");o(this,"classSkillOrdersWizard4");o(this,"classSkillOrdersAngel0");o(this,"classSkillOrdersAngel1");o(this,"classSkillOrdersAngel2");o(this,"classSkillOrdersAngel3");o(this,"classSkillOrdersAngel4");o(this,"classSkillOrdersThief0");o(this,"classSkillOrdersThief1");o(this,"classSkillOrdersThief2");o(this,"classSkillOrdersThief3");o(this,"classSkillOrdersThief4");o(this,"classSkillOrdersArcher0");o(this,"classSkillOrdersArcher1");o(this,"classSkillOrdersArcher2");o(this,"classSkillOrdersArcher3");o(this,"classSkillOrdersArcher4");o(this,"classSkillOrdersTamer0");o(this,"classSkillOrdersTamer1");o(this,"classSkillOrdersTamer2");o(this,"classSkillOrdersTamer3");o(this,"classSkillOrdersTamer4")}}const Wn="SaveFileData",ep=new Eh,Sl=Tr(Wn,{state:()=>Jl(Wn,ep,localStorage,{mergeDefaults:!0})});var bt=(e=>(e[e.MobLv=0]="MobLv",e[e.ReducePowerup=1]="ReducePowerup",e[e.ReduceSkillSlot=2]="ReduceSkillSlot",e[e.MobFullCast=3]="MobFullCast",e[e.DodgeDrainSpeed2x=4]="DodgeDrainSpeed2x",e[e.DodgeDrainPerDodge=5]="DodgeDrainPerDodge",e[e.DisableMove=6]="DisableMove",e[e.DungeonCoinFixed1=7]="DungeonCoinFixed1",e[e.RemoveSDPowerupPassives=8]="RemoveSDPowerupPassives",e[e.RemoveEquipmentEffectBonuses=9]="RemoveEquipmentEffectBonuses",e[e.DisablePowerupFilter=10]="DisablePowerupFilter",e[e.StartWith5PercentOfMaxHP=11]="StartWith5PercentOfMaxHP",e[e.DrainHPPerSec=12]="DrainHPPerSec",e[e.SwapATKWithDEF=13]="SwapATKWithDEF",e[e.SDDamage=14]="SDDamage",e[e.SDChallengeBossDamage=15]="SDChallengeBossDamage",e[e.RemoveSDUpgrade1=16]="RemoveSDUpgrade1",e[e.ReducePowerupEffect=17]="ReducePowerupEffect",e[e.MonsterExplode=18]="MonsterExplode",e[e.MPRegen=19]="MPRegen",e[e.FameGain=20]="FameGain",e[e.ArtifactChance=21]="ArtifactChance",e[e.SDEnchantChance=22]="SDEnchantChance",e))(bt||{});const tp={};function sp(e,t){const i=xt("RouterLink");return b(),B(K,null,[ee(i,{to:"/"},{default:Ee(()=>[j("IEH2Calculator")]),_:1}),(b(!0),B(K,null,he(e.$route.matched,r=>(b(),B(K,null,[r.meta.default?ft("",!0):(b(),B(K,{key:0},[j(" / "),ee(i,{to:e.$route.matched[e.$route.matched.length-1].children.length&&!e.$route.path.includes("/")?e.$route.path+"/"+r.path:r.path},{default:Ee(()=>[j(T(r.meta.name),1)]),_:2},1032,["to"])],64))],64))),256))],64)}const ip=Ft(tp,[["render",sp],["__scopeId","data-v-e99558f1"]]),ap=oe({__name:"AppDropdown",setup(e){const t=nt(!1),i=nt(!1),r=Vt(()=>t.value||i.value),h=nt(),c=m=>{if(h.value.textContent=="")return;i.value=!0;const w=m.target.getBoundingClientRect();h.value.style.left=`${w.right}px`,h.value.style.top=`${w.top}px`};return(m,w)=>(b(),B("div",null,[g("div",{class:"trigger",onMouseenter:w[0]||(w[0]=k=>c(k)),onMouseleave:w[1]||(w[1]=k=>i.value=!1)},[Ws(m.$slots,"trigger",{},void 0,!0)],32),Le(g("div",{class:"tooltip",ref_key:"content",ref:h,onMouseenter:w[2]||(w[2]=k=>t.value=!0),onMouseleave:w[3]||(w[3]=k=>t.value=!1)},[Ws(m.$slots,"content",{},void 0,!0)],544),[[$a,r.value]])]))}}),$n=Ft(ap,[["__scopeId","data-v-03e81e43"]]),rp={},lp=g("br",null,null,-1);function np(e,t){return b(),B(K,null,[j(" Website is using data from save file to operate in full capacity but it is not required."),lp,j(" It also uses browser localStorage mechanism to store data. You can use Hard Reset button to clear it. ")],64)}const up=Ft(rp,[["render",np]]),hp=oe({__name:"changelog",setup(e){return(t,i)=>{const r=xt("router-view");return b(),lt(r)}}});function ca(e=!1){const i=bh().getRoutes(),r=Th(),m=i.filter(w=>w.path==r.path).filter(w=>w.children.length)[0].children;return e?m:m.filter(w=>{var k;return!((k=w.meta)!=null&&k.default)})}const cp=g("h1",null,"Versions",-1),op=oe({__name:"index",setup(e){const t=ca().reverse();return(i,r)=>{const h=xt("RouterLink");return b(),B(K,null,[cp,g("ul",null,[(b(!0),B(K,null,he(A(t),c=>(b(),B("li",null,[ee(h,{to:i.$route.name+c.path},{default:Ee(()=>[j(T(c.meta.name),1)]),_:2},1032,["to"])]))),256))])],64)}}}),fp={meta:{name:"noname",default:!0}};/*!
  * vue-router v4.3.0
  * (c) 2024 Eduardo San Martin Morote
  * @license MIT
  */const ji=typeof document<"u";function pp(e){return e.__esModule||e[Symbol.toStringTag]==="Module"}const yt=Object.assign;function $r(e,t){const i={};for(const r in t){const h=t[r];i[r]=$s(h)?h.map(e):e(h)}return i}const Ca=()=>{},$s=Array.isArray,vh=/#/g,dp=/&/g,gp=/\//g,Sp=/=/g,mp=/\?/g,wh=/\+/g,Mp=/%5B/g,Ep=/%5D/g,kh=/%5E/g,vp=/%60/g,Ah=/%7B/g,wp=/%7C/g,Rh=/%7D/g,kp=/%20/g;function jl(e){return encodeURI(""+e).replace(wp,"|").replace(Mp,"[").replace(Ep,"]")}function Ap(e){return jl(e).replace(Ah,"{").replace(Rh,"}").replace(kh,"^")}function ml(e){return jl(e).replace(wh,"%2B").replace(kp,"+").replace(vh,"%23").replace(dp,"%26").replace(vp,"`").replace(Ah,"{").replace(Rh,"}").replace(kh,"^")}function Rp(e){return ml(e).replace(Sp,"%3D")}function Cp(e){return jl(e).replace(vh,"%23").replace(mp,"%3F")}function Lp(e){return e==null?"":Cp(e).replace(gp,"%2F")}function xa(e){try{return decodeURIComponent(""+e)}catch{}return""+e}const Pp=/\/$/,Dp=e=>e.replace(Pp,"");function Ur(e,t,i="/"){let r,h={},c="",m="";const w=t.indexOf("#");let k=t.indexOf("?");return w<k&&w>=0&&(k=-1),k>-1&&(r=t.slice(0,k),c=t.slice(k+1,w>-1?w:t.length),h=e(c)),w>-1&&(r=r||t.slice(0,w),m=t.slice(w,t.length)),r=Gp(r??t,i),{fullPath:r+(c&&"?")+c+m,path:r,query:h,hash:xa(m)}}function yp(e,t){const i=t.query?e(t.query):"";return t.path+(i&&"?")+i+(t.hash||"")}function Un(e,t){return!t||!e.toLowerCase().startsWith(t.toLowerCase())?e:e.slice(t.length)||"/"}function bp(e,t,i){const r=t.matched.length-1,h=i.matched.length-1;return r>-1&&r===h&&ra(t.matched[r],i.matched[h])&&Ch(t.params,i.params)&&e(t.query)===e(i.query)&&t.hash===i.hash}function ra(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function Ch(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const i in e)if(!Tp(e[i],t[i]))return!1;return!0}function Tp(e,t){return $s(e)?On(e,t):$s(t)?On(t,e):e===t}function On(e,t){return $s(t)?e.length===t.length&&e.every((i,r)=>i===t[r]):e.length===1&&e[0]===t}function Gp(e,t){if(e.startsWith("/"))return e;if(!e)return t;const i=t.split("/"),r=e.split("/"),h=r[r.length-1];(h===".."||h===".")&&r.push("");let c=i.length-1,m,w;for(m=0;m<r.length;m++)if(w=r[m],w!==".")if(w==="..")c>1&&c--;else break;return i.slice(0,c).join("/")+"/"+r.slice(m).join("/")}var Fa;(function(e){e.pop="pop",e.push="push"})(Fa||(Fa={}));var La;(function(e){e.back="back",e.forward="forward",e.unknown=""})(La||(La={}));function Bp(e){if(!e)if(ji){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return e[0]!=="/"&&e[0]!=="#"&&(e="/"+e),Dp(e)}const xp=/^[^#]+#/;function Fp(e,t){return e.replace(xp,"#")+t}function _p(e,t){const i=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{behavior:t.behavior,left:r.left-i.left-(t.left||0),top:r.top-i.top-(t.top||0)}}const Gr=()=>({left:window.scrollX,top:window.scrollY});function Ip(e){let t;if("el"in e){const i=e.el,r=typeof i=="string"&&i.startsWith("#"),h=typeof i=="string"?r?document.getElementById(i.slice(1)):document.querySelector(i):i;if(!h)return;t=_p(h,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(t.left!=null?t.left:window.scrollX,t.top!=null?t.top:window.scrollY)}function zn(e,t){return(history.state?history.state.position-t:-1)+e}const Ml=new Map;function Vp(e,t){Ml.set(e,t)}function Hp(e){const t=Ml.get(e);return Ml.delete(e),t}let qp=()=>location.protocol+"//"+location.host;function Lh(e,t){const{pathname:i,search:r,hash:h}=t,c=e.indexOf("#");if(c>-1){let w=h.includes(e.slice(c))?e.slice(c).length:1,k=h.slice(w);return k[0]!=="/"&&(k="/"+k),Un(k,"")}return Un(i,e)+r+h}function Np(e,t,i,r){let h=[],c=[],m=null;const w=({state:z})=>{const te=Lh(e,location),ie=i.value,pe=t.value;let Me=0;if(z){if(i.value=te,t.value=z,m&&m===ie){m=null;return}Me=pe?z.position-pe.position:0}else r(te);h.forEach(Pe=>{Pe(i.value,ie,{delta:Me,type:Fa.pop,direction:Me?Me>0?La.forward:La.back:La.unknown})})};function k(){m=i.value}function P(z){h.push(z);const te=()=>{const ie=h.indexOf(z);ie>-1&&h.splice(ie,1)};return c.push(te),te}function D(){const{history:z}=window;z.state&&z.replaceState(yt({},z.state,{scroll:Gr()}),"")}function N(){for(const z of c)z();c=[],window.removeEventListener("popstate",w),window.removeEventListener("beforeunload",D)}return window.addEventListener("popstate",w),window.addEventListener("beforeunload",D,{passive:!0}),{pauseListeners:k,listen:P,destroy:N}}function Jn(e,t,i,r=!1,h=!1){return{back:e,current:t,forward:i,replaced:r,position:window.history.length,scroll:h?Gr():null}}function Wp(e){const{history:t,location:i}=window,r={value:Lh(e,i)},h={value:t.state};h.value||c(r.value,{back:null,current:r.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0);function c(k,P,D){const N=e.indexOf("#"),z=N>-1?(i.host&&document.querySelector("base")?e:e.slice(N))+k:qp()+e+k;try{t[D?"replaceState":"pushState"](P,"",z),h.value=P}catch(te){console.error(te),i[D?"replace":"assign"](z)}}function m(k,P){const D=yt({},t.state,Jn(h.value.back,k,h.value.forward,!0),P,{position:h.value.position});c(k,D,!0),r.value=k}function w(k,P){const D=yt({},h.value,t.state,{forward:k,scroll:Gr()});c(D.current,D,!0);const N=yt({},Jn(r.value,k,null),{position:D.position+1},P);c(k,N,!1),r.value=k}return{location:r,state:h,push:w,replace:m}}function $p(e){e=Bp(e);const t=Wp(e),i=Np(e,t.state,t.location,t.replace);function r(c,m=!0){m||i.pauseListeners(),history.go(c)}const h=yt({location:"",base:e,go:r,createHref:Fp.bind(null,e)},t,i);return Object.defineProperty(h,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(h,"state",{enumerable:!0,get:()=>t.state.value}),h}function Up(e){return e=location.host?e||location.pathname+location.search:"",e.includes("#")||(e+="#"),$p(e)}function Op(e){return typeof e=="string"||e&&typeof e=="object"}function Ph(e){return typeof e=="string"||typeof e=="symbol"}const ci={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},Dh=Symbol("");var jn;(function(e){e[e.aborted=4]="aborted",e[e.cancelled=8]="cancelled",e[e.duplicated=16]="duplicated"})(jn||(jn={}));function la(e,t){return yt(new Error,{type:e,[Dh]:!0},t)}function ti(e,t){return e instanceof Error&&Dh in e&&(t==null||!!(e.type&t))}const Xn="[^/]+?",zp={sensitive:!1,strict:!1,start:!0,end:!0},Jp=/[.+*?^${}()[\]/\\]/g;function jp(e,t){const i=yt({},zp,t),r=[];let h=i.start?"^":"";const c=[];for(const P of e){const D=P.length?[]:[90];i.strict&&!P.length&&(h+="/");for(let N=0;N<P.length;N++){const z=P[N];let te=40+(i.sensitive?.25:0);if(z.type===0)N||(h+="/"),h+=z.value.replace(Jp,"\\$&"),te+=40;else if(z.type===1){const{value:ie,repeatable:pe,optional:Me,regexp:Pe}=z;c.push({name:ie,repeatable:pe,optional:Me});const He=Pe||Xn;if(He!==Xn){te+=10;try{new RegExp(`(${He})`)}catch(ct){throw new Error(`Invalid custom RegExp for param "${ie}" (${He}): `+ct.message)}}let Xe=pe?`((?:${He})(?:/(?:${He}))*)`:`(${He})`;N||(Xe=Me&&P.length<2?`(?:/${Xe})`:"/"+Xe),Me&&(Xe+="?"),h+=Xe,te+=20,Me&&(te+=-8),pe&&(te+=-20),He===".*"&&(te+=-50)}D.push(te)}r.push(D)}if(i.strict&&i.end){const P=r.length-1;r[P][r[P].length-1]+=.7000000000000001}i.strict||(h+="/?"),i.end?h+="$":i.strict&&(h+="(?:/|$)");const m=new RegExp(h,i.sensitive?"":"i");function w(P){const D=P.match(m),N={};if(!D)return null;for(let z=1;z<D.length;z++){const te=D[z]||"",ie=c[z-1];N[ie.name]=te&&ie.repeatable?te.split("/"):te}return N}function k(P){let D="",N=!1;for(const z of e){(!N||!D.endsWith("/"))&&(D+="/"),N=!1;for(const te of z)if(te.type===0)D+=te.value;else if(te.type===1){const{value:ie,repeatable:pe,optional:Me}=te,Pe=ie in P?P[ie]:"";if($s(Pe)&&!pe)throw new Error(`Provided param "${ie}" is an array but it is not repeatable (* or + modifiers)`);const He=$s(Pe)?Pe.join("/"):Pe;if(!He)if(Me)z.length<2&&(D.endsWith("/")?D=D.slice(0,-1):N=!0);else throw new Error(`Missing required param "${ie}"`);D+=He}}return D||"/"}return{re:m,score:r,keys:c,parse:w,stringify:k}}function Xp(e,t){let i=0;for(;i<e.length&&i<t.length;){const r=t[i]-e[i];if(r)return r;i++}return e.length<t.length?e.length===1&&e[0]===80?-1:1:e.length>t.length?t.length===1&&t[0]===80?1:-1:0}function Qp(e,t){let i=0;const r=e.score,h=t.score;for(;i<r.length&&i<h.length;){const c=Xp(r[i],h[i]);if(c)return c;i++}if(Math.abs(h.length-r.length)===1){if(Qn(r))return 1;if(Qn(h))return-1}return h.length-r.length}function Qn(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const Yp={type:0,value:""},Zp=/[a-zA-Z0-9_]/;function Kp(e){if(!e)return[[]];if(e==="/")return[[Yp]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(te){throw new Error(`ERR (${i})/"${P}": ${te}`)}let i=0,r=i;const h=[];let c;function m(){c&&h.push(c),c=[]}let w=0,k,P="",D="";function N(){P&&(i===0?c.push({type:0,value:P}):i===1||i===2||i===3?(c.length>1&&(k==="*"||k==="+")&&t(`A repeatable param (${P}) must be alone in its segment. eg: '/:ids+.`),c.push({type:1,value:P,regexp:D,repeatable:k==="*"||k==="+",optional:k==="*"||k==="?"})):t("Invalid state to consume buffer"),P="")}function z(){P+=k}for(;w<e.length;){if(k=e[w++],k==="\\"&&i!==2){r=i,i=4;continue}switch(i){case 0:k==="/"?(P&&N(),m()):k===":"?(N(),i=1):z();break;case 4:z(),i=r;break;case 1:k==="("?i=2:Zp.test(k)?z():(N(),i=0,k!=="*"&&k!=="?"&&k!=="+"&&w--);break;case 2:k===")"?D[D.length-1]=="\\"?D=D.slice(0,-1)+k:i=3:D+=k;break;case 3:N(),i=0,k!=="*"&&k!=="?"&&k!=="+"&&w--,D="";break;default:t("Unknown state");break}}return i===2&&t(`Unfinished custom RegExp for param "${P}"`),N(),m(),h}function ed(e,t,i){const r=jp(Kp(e.path),i),h=yt(r,{record:e,parent:t,children:[],alias:[]});return t&&!h.record.aliasOf==!t.record.aliasOf&&t.children.push(h),h}function td(e,t){const i=[],r=new Map;t=Kn({strict:!1,end:!0,sensitive:!1},t);function h(D){return r.get(D)}function c(D,N,z){const te=!z,ie=sd(D);ie.aliasOf=z&&z.record;const pe=Kn(t,D),Me=[ie];if("alias"in D){const Xe=typeof D.alias=="string"?[D.alias]:D.alias;for(const ct of Xe)Me.push(yt({},ie,{components:z?z.record.components:ie.components,path:ct,aliasOf:z?z.record:ie}))}let Pe,He;for(const Xe of Me){const{path:ct}=Xe;if(N&&ct[0]!=="/"){const ot=N.record.path,Qe=ot[ot.length-1]==="/"?"":"/";Xe.path=N.record.path+(ct&&Qe+ct)}if(Pe=ed(Xe,N,pe),z?z.alias.push(Pe):(He=He||Pe,He!==Pe&&He.alias.push(Pe),te&&D.name&&!Zn(Pe)&&m(D.name)),ie.children){const ot=ie.children;for(let Qe=0;Qe<ot.length;Qe++)c(ot[Qe],Pe,z&&z.children[Qe])}z=z||Pe,(Pe.record.components&&Object.keys(Pe.record.components).length||Pe.record.name||Pe.record.redirect)&&k(Pe)}return He?()=>{m(He)}:Ca}function m(D){if(Ph(D)){const N=r.get(D);N&&(r.delete(D),i.splice(i.indexOf(N),1),N.children.forEach(m),N.alias.forEach(m))}else{const N=i.indexOf(D);N>-1&&(i.splice(N,1),D.record.name&&r.delete(D.record.name),D.children.forEach(m),D.alias.forEach(m))}}function w(){return i}function k(D){let N=0;for(;N<i.length&&Qp(D,i[N])>=0&&(D.record.path!==i[N].record.path||!yh(D,i[N]));)N++;i.splice(N,0,D),D.record.name&&!Zn(D)&&r.set(D.record.name,D)}function P(D,N){let z,te={},ie,pe;if("name"in D&&D.name){if(z=r.get(D.name),!z)throw la(1,{location:D});pe=z.record.name,te=yt(Yn(N.params,z.keys.filter(He=>!He.optional).concat(z.parent?z.parent.keys.filter(He=>He.optional):[]).map(He=>He.name)),D.params&&Yn(D.params,z.keys.map(He=>He.name))),ie=z.stringify(te)}else if(D.path!=null)ie=D.path,z=i.find(He=>He.re.test(ie)),z&&(te=z.parse(ie),pe=z.record.name);else{if(z=N.name?r.get(N.name):i.find(He=>He.re.test(N.path)),!z)throw la(1,{location:D,currentLocation:N});pe=z.record.name,te=yt({},N.params,D.params),ie=z.stringify(te)}const Me=[];let Pe=z;for(;Pe;)Me.unshift(Pe.record),Pe=Pe.parent;return{name:pe,path:ie,params:te,matched:Me,meta:ad(Me)}}return e.forEach(D=>c(D)),{addRoute:c,resolve:P,removeRoute:m,getRoutes:w,getRecordMatcher:h}}function Yn(e,t){const i={};for(const r of t)r in e&&(i[r]=e[r]);return i}function sd(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:id(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function id(e){const t={},i=e.props||!1;if("component"in e)t.default=i;else for(const r in e.components)t[r]=typeof i=="object"?i[r]:i;return t}function Zn(e){for(;e;){if(e.record.aliasOf)return!0;e=e.parent}return!1}function ad(e){return e.reduce((t,i)=>yt(t,i.meta),{})}function Kn(e,t){const i={};for(const r in e)i[r]=r in t?t[r]:e[r];return i}function yh(e,t){return t.children.some(i=>i===e||yh(e,i))}function rd(e){const t={};if(e===""||e==="?")return t;const r=(e[0]==="?"?e.slice(1):e).split("&");for(let h=0;h<r.length;++h){const c=r[h].replace(wh," "),m=c.indexOf("="),w=xa(m<0?c:c.slice(0,m)),k=m<0?null:xa(c.slice(m+1));if(w in t){let P=t[w];$s(P)||(P=t[w]=[P]),P.push(k)}else t[w]=k}return t}function eu(e){let t="";for(let i in e){const r=e[i];if(i=Rp(i),r==null){r!==void 0&&(t+=(t.length?"&":"")+i);continue}($s(r)?r.map(c=>c&&ml(c)):[r&&ml(r)]).forEach(c=>{c!==void 0&&(t+=(t.length?"&":"")+i,c!=null&&(t+="="+c))})}return t}function ld(e){const t={};for(const i in e){const r=e[i];r!==void 0&&(t[i]=$s(r)?r.map(h=>h==null?null:""+h):r==null?r:""+r)}return t}const nd=Symbol(""),tu=Symbol(""),Br=Symbol(""),Xl=Symbol(""),El=Symbol("");function ma(){let e=[];function t(r){return e.push(r),()=>{const h=e.indexOf(r);h>-1&&e.splice(h,1)}}function i(){e=[]}return{add:t,list:()=>e.slice(),reset:i}}function mi(e,t,i,r,h,c=m=>m()){const m=r&&(r.enterCallbacks[h]=r.enterCallbacks[h]||[]);return()=>new Promise((w,k)=>{const P=z=>{z===!1?k(la(4,{from:i,to:t})):z instanceof Error?k(z):Op(z)?k(la(2,{from:t,to:z})):(m&&r.enterCallbacks[h]===m&&typeof z=="function"&&m.push(z),w())},D=c(()=>e.call(r&&r.instances[h],t,i,P));let N=Promise.resolve(D);e.length<3&&(N=N.then(P)),N.catch(z=>k(z))})}function Or(e,t,i,r,h=c=>c()){const c=[];for(const m of e)for(const w in m.components){let k=m.components[w];if(!(t!=="beforeRouteEnter"&&!m.instances[w]))if(ud(k)){const D=(k.__vccOpts||k)[t];D&&c.push(mi(D,i,r,m,w,h))}else{let P=k();c.push(()=>P.then(D=>{if(!D)return Promise.reject(new Error(`Couldn't resolve component "${w}" at "${m.path}"`));const N=pp(D)?D.default:D;m.components[w]=N;const te=(N.__vccOpts||N)[t];return te&&mi(te,i,r,m,w,h)()}))}}return c}function ud(e){return typeof e=="object"||"displayName"in e||"props"in e||"__vccOpts"in e}function su(e){const t=Ve(Br),i=Ve(Xl),r=Vt(()=>t.resolve(A(e.to))),h=Vt(()=>{const{matched:k}=r.value,{length:P}=k,D=k[P-1],N=i.matched;if(!D||!N.length)return-1;const z=N.findIndex(ra.bind(null,D));if(z>-1)return z;const te=iu(k[P-2]);return P>1&&iu(D)===te&&N[N.length-1].path!==te?N.findIndex(ra.bind(null,k[P-2])):z}),c=Vt(()=>h.value>-1&&fd(i.params,r.value.params)),m=Vt(()=>h.value>-1&&h.value===i.matched.length-1&&Ch(i.params,r.value.params));function w(k={}){return od(k)?t[A(e.replace)?"replace":"push"](A(e.to)).catch(Ca):Promise.resolve()}return{route:r,href:Vt(()=>r.value.href),isActive:c,isExactActive:m,navigate:w}}const hd=oe({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:su,setup(e,{slots:t}){const i=ua(su(e)),{options:r}=Ve(Br),h=Vt(()=>({[au(e.activeClass,r.linkActiveClass,"router-link-active")]:i.isActive,[au(e.exactActiveClass,r.linkExactActiveClass,"router-link-exact-active")]:i.isExactActive}));return()=>{const c=t.default&&t.default(i);return e.custom?c:hh("a",{"aria-current":i.isExactActive?e.ariaCurrentValue:null,href:i.href,onClick:i.navigate,class:h.value},c)}}}),cd=hd;function od(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&!(e.button!==void 0&&e.button!==0)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function fd(e,t){for(const i in t){const r=t[i],h=e[i];if(typeof r=="string"){if(r!==h)return!1}else if(!$s(h)||h.length!==r.length||r.some((c,m)=>c!==h[m]))return!1}return!0}function iu(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const au=(e,t,i)=>e??t??i,pd=oe({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:i}){const r=Ve(El),h=Vt(()=>e.route||r.value),c=Ve(tu,0),m=Vt(()=>{let P=A(c);const{matched:D}=h.value;let N;for(;(N=D[P])&&!N.components;)P++;return P}),w=Vt(()=>h.value.matched[m.value]);ka(tu,Vt(()=>m.value+1)),ka(nd,w),ka(El,h);const k=nt();return as(()=>[k.value,w.value,e.name],([P,D,N],[z,te,ie])=>{D&&(D.instances[N]=P,te&&te!==D&&P&&P===z&&(D.leaveGuards.size||(D.leaveGuards=te.leaveGuards),D.updateGuards.size||(D.updateGuards=te.updateGuards))),P&&D&&(!te||!ra(D,te)||!z)&&(D.enterCallbacks[N]||[]).forEach(pe=>pe(P))},{flush:"post"}),()=>{const P=h.value,D=e.name,N=w.value,z=N&&N.components[D];if(!z)return ru(i.default,{Component:z,route:P});const te=N.props[D],ie=te?te===!0?P.params:typeof te=="function"?te(P):te:null,Me=hh(z,yt({},ie,t,{onVnodeUnmounted:Pe=>{Pe.component.isUnmounted&&(N.instances[D]=null)},ref:k}));return ru(i.default,{Component:Me,route:P})||Me}}});function ru(e,t){if(!e)return null;const i=e(t);return i.length===1?i[0]:i}const dd=pd;function gd(e){const t=td(e.routes,e),i=e.parseQuery||rd,r=e.stringifyQuery||eu,h=e.history,c=ma(),m=ma(),w=ma(),k=Bu(ci);let P=ci;ji&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const D=$r.bind(null,ne=>""+ne),N=$r.bind(null,Lp),z=$r.bind(null,xa);function te(ne,be){let Re,Ie;return Ph(ne)?(Re=t.getRecordMatcher(ne),Ie=be):Ie=ne,t.addRoute(Ie,Re)}function ie(ne){const be=t.getRecordMatcher(ne);be&&t.removeRoute(be)}function pe(){return t.getRoutes().map(ne=>ne.record)}function Me(ne){return!!t.getRecordMatcher(ne)}function Pe(ne,be){if(be=yt({},be||k.value),typeof ne=="string"){const U=Ur(i,ne,be.path),ae=t.resolve({path:U.path},be),ue=h.createHref(U.fullPath);return yt(U,ae,{params:z(ae.params),hash:xa(U.hash),redirectedFrom:void 0,href:ue})}let Re;if(ne.path!=null)Re=yt({},ne,{path:Ur(i,ne.path,be.path).path});else{const U=yt({},ne.params);for(const ae in U)U[ae]==null&&delete U[ae];Re=yt({},ne,{params:N(U)}),be.params=N(be.params)}const Ie=t.resolve(Re,be),Pt=ne.hash||"";Ie.params=D(z(Ie.params));const Wt=yp(r,yt({},ne,{hash:Ap(Pt),path:Ie.path})),I=h.createHref(Wt);return yt({fullPath:Wt,hash:Pt,query:r===eu?ld(ne.query):ne.query||{}},Ie,{redirectedFrom:void 0,href:I})}function He(ne){return typeof ne=="string"?Ur(i,ne,k.value.path):yt({},ne)}function Xe(ne,be){if(P!==ne)return la(8,{from:be,to:ne})}function ct(ne){return Ut(ne)}function ot(ne){return ct(yt(He(ne),{replace:!0}))}function Qe(ne){const be=ne.matched[ne.matched.length-1];if(be&&be.redirect){const{redirect:Re}=be;let Ie=typeof Re=="function"?Re(ne):Re;return typeof Ie=="string"&&(Ie=Ie.includes("?")||Ie.includes("#")?Ie=He(Ie):{path:Ie},Ie.params={}),yt({query:ne.query,hash:ne.hash,params:Ie.path!=null?{}:ne.params},Ie)}}function Ut(ne,be){const Re=P=Pe(ne),Ie=k.value,Pt=ne.state,Wt=ne.force,I=ne.replace===!0,U=Qe(Re);if(U)return Ut(yt(He(U),{state:typeof U=="object"?yt({},Pt,U.state):Pt,force:Wt,replace:I}),be||Re);const ae=Re;ae.redirectedFrom=be;let ue;return!Wt&&bp(r,Ie,Re)&&(ue=la(16,{to:ae,from:Ie}),Us(Ie,Ie,!0,!1)),(ue?Promise.resolve(ue):dt(ae,Ie)).catch(le=>ti(le)?ti(le,2)?le:ui(le):Lt(le,ae,Ie)).then(le=>{if(le){if(ti(le,2))return Ut(yt({replace:I},He(le.to),{state:typeof le.to=="object"?yt({},Pt,le.to.state):Pt,force:Wt}),be||ae)}else le=ms(ae,Ie,!0,I,Pt);return Nt(ae,Ie,le),le})}function ut(ne,be){const Re=Xe(ne,be);return Re?Promise.reject(Re):Promise.resolve()}function Be(ne){const be=Oi.values().next().value;return be&&typeof be.runWithContext=="function"?be.runWithContext(ne):ne()}function dt(ne,be){let Re;const[Ie,Pt,Wt]=Sd(ne,be);Re=Or(Ie.reverse(),"beforeRouteLeave",ne,be);for(const U of Ie)U.leaveGuards.forEach(ae=>{Re.push(mi(ae,ne,be))});const I=ut.bind(null,ne,be);return Re.push(I),ls(Re).then(()=>{Re=[];for(const U of c.list())Re.push(mi(U,ne,be));return Re.push(I),ls(Re)}).then(()=>{Re=Or(Pt,"beforeRouteUpdate",ne,be);for(const U of Pt)U.updateGuards.forEach(ae=>{Re.push(mi(ae,ne,be))});return Re.push(I),ls(Re)}).then(()=>{Re=[];for(const U of Wt)if(U.beforeEnter)if($s(U.beforeEnter))for(const ae of U.beforeEnter)Re.push(mi(ae,ne,be));else Re.push(mi(U.beforeEnter,ne,be));return Re.push(I),ls(Re)}).then(()=>(ne.matched.forEach(U=>U.enterCallbacks={}),Re=Or(Wt,"beforeRouteEnter",ne,be,Be),Re.push(I),ls(Re))).then(()=>{Re=[];for(const U of m.list())Re.push(mi(U,ne,be));return Re.push(I),ls(Re)}).catch(U=>ti(U,8)?U:Promise.reject(U))}function Nt(ne,be,Re){w.list().forEach(Ie=>Be(()=>Ie(ne,be,Re)))}function ms(ne,be,Re,Ie,Pt){const Wt=Xe(ne,be);if(Wt)return Wt;const I=be===ci,U=ji?history.state:{};Re&&(Ie||I?h.replace(ne.fullPath,yt({scroll:I&&U&&U.scroll},Pt)):h.push(ne.fullPath,Pt)),k.value=ne,Us(ne,be,Re,I),ui()}let Rs;function bi(){Rs||(Rs=h.listen((ne,be,Re)=>{if(!Ja.listening)return;const Ie=Pe(ne),Pt=Qe(Ie);if(Pt){Ut(yt(Pt,{replace:!0}),Ie).catch(Ca);return}P=Ie;const Wt=k.value;ji&&Vp(zn(Wt.fullPath,Re.delta),Gr()),dt(Ie,Wt).catch(I=>ti(I,12)?I:ti(I,2)?(Ut(I.to,Ie).then(U=>{ti(U,20)&&!Re.delta&&Re.type===Fa.pop&&h.go(-1,!1)}).catch(Ca),Promise.reject()):(Re.delta&&h.go(-Re.delta,!1),Lt(I,Ie,Wt))).then(I=>{I=I||ms(Ie,Wt,!1),I&&(Re.delta&&!ti(I,8)?h.go(-Re.delta,!1):Re.type===Fa.pop&&ti(I,20)&&h.go(-1,!1)),Nt(Ie,Wt,I)}).catch(Ca)}))}let Cs=ma(),Ct=ma(),Tt;function Lt(ne,be,Re){ui(ne);const Ie=Ct.list();return Ie.length?Ie.forEach(Pt=>Pt(ne,be,Re)):console.error(ne),Promise.reject(ne)}function Zs(){return Tt&&k.value!==ci?Promise.resolve():new Promise((ne,be)=>{Cs.add([ne,be])})}function ui(ne){return Tt||(Tt=!ne,bi(),Cs.list().forEach(([be,Re])=>ne?Re(ne):be()),Cs.reset()),ne}function Us(ne,be,Re,Ie){const{scrollBehavior:Pt}=e;if(!ji||!Pt)return Promise.resolve();const Wt=!Re&&Hp(zn(ne.fullPath,0))||(Ie||!Re)&&history.state&&history.state.scroll||null;return ha().then(()=>Pt(ne,be,Wt)).then(I=>I&&Ip(I)).catch(I=>Lt(I,ne,be))}const ps=ne=>h.go(ne);let Ui;const Oi=new Set,Ja={currentRoute:k,listening:!0,addRoute:te,removeRoute:ie,hasRoute:Me,getRoutes:pe,resolve:Pe,options:e,push:ct,replace:ot,go:ps,back:()=>ps(-1),forward:()=>ps(1),beforeEach:c.add,beforeResolve:m.add,afterEach:w.add,onError:Ct.add,isReady:Zs,install(ne){const be=this;ne.component("RouterLink",cd),ne.component("RouterView",dd),ne.config.globalProperties.$router=be,Object.defineProperty(ne.config.globalProperties,"$route",{enumerable:!0,get:()=>A(k)}),ji&&!Ui&&k.value===ci&&(Ui=!0,ct(h.location).catch(Pt=>{}));const Re={};for(const Pt in ci)Object.defineProperty(Re,Pt,{get:()=>k.value[Pt],enumerable:!0});ne.provide(Br,be),ne.provide(Xl,bu(Re)),ne.provide(El,k);const Ie=ne.unmount;Oi.add(ne),ne.unmount=function(){Oi.delete(ne),Oi.size<1&&(P=ci,Rs&&Rs(),Rs=null,k.value=ci,Ui=!1,Tt=!1),Ie()}}};function ls(ne){return ne.reduce((be,Re)=>be.then(()=>Be(Re)),Promise.resolve())}return Ja}function Sd(e,t){const i=[],r=[],h=[],c=Math.max(t.matched.length,e.matched.length);for(let m=0;m<c;m++){const w=t.matched[m];w&&(e.matched.find(P=>ra(P,w))?r.push(w):i.push(w));const k=e.matched[m];k&&(t.matched.find(P=>ra(P,k))||h.push(k))}return[i,r,h]}function bh(){return Ve(Br)}function Th(){return Ve(Xl)}function Ge(e,...t){return t.reduce((i,r)=>{const h=Object.assign({},i.meta,r.meta),c=[].concat(i.alias||[],r.alias||[]);return Object.assign(i,r),i.meta=h,i.alias=c,i},e)}const md=g("h2",null,"Version 0.1.15",-1),Md=g("ul",null,[g("li",null,"Moved Enchanter Finder page to Equipment page under magnifying glass button"),g("li",null,"Changed Heroes select html element to hero eye images"),g("li",null,"Changed Equipment Breakdown style")],-1),Ed=oe({__name:"0.1.15",setup(e){return(t,i)=>(b(),B(K,null,[md,Md],64))}}),vd={meta:{name:"0.1.15"}},wd=g("h2",null,"Version 0.1.16",-1),kd=g("ul",null,[g("li",null,"Image path fix")],-1),Ad=oe({__name:"0.1.16",setup(e){return(t,i)=>(b(),B(K,null,[wd,kd],64))}}),Rd={meta:{name:"0.1.16"}},Cd=g("h2",null,"Version 0.1.18",-1),Ld=g("li",null,"Some changes to skill breakdown layout plus added percentage comparison from snapshot",-1),Pd=oe({__name:"0.1.18",setup(e){return(t,i)=>{const r=xt("router-link");return b(),B(K,null,[Cd,g("ul",null,[Ld,g("li",null,[j("Extended "),ee(r,{to:"/data/super-dungeon/upgrade"},{default:Ee(()=>[j("Super Dungeon Upgrade")]),_:1}),j(" to all upgrades")])])],64)}}}),Dd={meta:{name:"0.1.18"}},yd=g("h2",null,"Version 0.1.20",-1),bd=oe({__name:"0.1.20",setup(e){return(t,i)=>{const r=xt("router-link");return b(),B(K,null,[yd,g("ul",null,[g("li",null,[j("Added "),ee(r,{to:"/data/ability"},{default:Ee(()=>[j("Ability")]),_:1}),j(" to Data page")]),g("li",null,[j("Added "),ee(r,{to:"/data/quest"},{default:Ee(()=>[j("Quest")]),_:1}),j(" to Data page")])])],64)}}}),Td={meta:{name:"0.1.20"}},Gd=g("h2",null,"Version 0.1.21",-1),Bd=oe({__name:"0.1.21",setup(e){return(t,i)=>{const r=xt("router-link");return b(),B(K,null,[Gd,g("ul",null,[g("li",null,[j("Added "),ee(r,{to:"/data/town"},{default:Ee(()=>[j("Town")]),_:1}),j(" to Data page")])])],64)}}}),xd={meta:{name:"0.1.21"}},Fd=g("h2",null,"Version 0.1.23",-1),_d=g("li",null,"Added reward per sec (yellow value in front) to expedition breakdown",-1),Id=g("li",null,"Added submenu to Data link",-1),Vd=g("li",null,"Changed breadcrumb component",-1),Hd=g("li",null,"Fixed stats showing as green/red in Stats panel after changing enchanements, pesky rounding!",-1),qd=oe({__name:"0.1.23",setup(e){return(t,i)=>{const r=xt("router-link");return b(),B(K,null,[Fd,g("ul",null,[g("li",null,[j("Added Hackmanite and Turquoise input to "),ee(r,{to:"/expedition"},{default:Ee(()=>[j("Expedition")]),_:1}),j(" for easier comparision")]),_d,g("li",null,[j("Added "),ee(r,{to:"/help#findMaxDPS"},{default:Ee(()=>[j("Find MAX DPS")]),_:1}),j(" button to equipment edit window")]),g("li",null,[j("Added "),ee(r,{to:"/data/challange"},{default:Ee(()=>[j("Challange")]),_:1}),j(" to Data page")]),Id,Vd,Hd])],64)}}}),Nd={meta:{name:"0.1.23"}},Wd=g("h2",null,"Version 0.1.25",-1),$d=g("ul",null,[g("li",null,"Fixed broken quest link")],-1),Ud=oe({__name:"0.1.25",setup(e){return(t,i)=>(b(),B(K,null,[Wd,$d],64))}}),Od={meta:{name:"0.1.25"}},zd=g("h2",null,"Version 0.1.26",-1),Jd=g("ul",null,[g("li",null,"Added submenu to some elements in data menu"),g("li",null,[j("Added plugin "),g("a",{href:"https://uvr.esm.is/",target:"_blank"},"Unplugin Vue Router"),j(" to site for File based routing and typed routes")])],-1),jd=oe({__name:"0.1.26",setup(e){return(t,i)=>(b(),B(K,null,[zd,Jd],64))}}),Xd={meta:{name:"0.1.26"}},Qd=g("h2",null,"Version 0.1.27",-1),Yd=g("ul",null,[g("li",null,"Added log button in top navigation for showing details about Find MAX DPS function")],-1),Zd=oe({__name:"0.1.27",setup(e){return(t,i)=>(b(),B(K,null,[Qd,Yd],64))}}),Kd={meta:{name:"0.1.27"}},e0=g("h2",null,"Version 0.1.28",-1),t0=g("ul",null,[g("li",null,"Added process for generating changelog files before build so version number won't be increased on failed build"),g("li",null,"Added new expedition times"),g("li",null,"Added Dojo"),g("li",null,"Added overcap bonuses to Town buildings"),g("li",null,"Changed Extra After Damage cap")],-1),s0=[e0,t0],i0=oe({__name:"0.1.28",setup(e){return(t,i)=>(b(),B("div",null,s0))}}),a0={meta:{name:"0.1.28"}},r0=g("h2",null,"0.1.29",-1),l0=g("li",null,"Added new global quests",-1),n0=g("li",null,"Added overcap bonuses to pets",-1),u0=g("li",null,"Changed area mission milestone EXP Gain and Equipment Proficiency Gain to multiplier instead of addition",-1),h0=g("li",null,"Changed from additive to multiplicative for Skill Proficiency Gain from pet effect, slime bank upgrade and skill master title",-1),c0=g("li",null,"Some changes to skill system to reflect Alpha version",-1),o0=oe({__name:"0.1.29",setup(e){return(t,i)=>{const r=xt("RouterLink");return b(),B(K,null,[r0,g("ul",null,[g("li",null,[j("Revamped "),ee(r,{to:"/data/challenge"},{default:Ee(()=>[j("Challange")]),_:1}),j(" page")]),l0,n0,u0,h0,c0])],64)}}}),f0={meta:{name:"0.1.29"}},p0=g("h2",null,"0.1.30",-1),d0=g("ul",null,[g("li",null,"Changed router splitting every route into chunks. It produce single file now"),g("li",null,"Added collapse component to Challenge data so it doesn't take so much space")],-1),g0=oe({__name:"0.1.30",setup(e){return(t,i)=>(b(),B(K,null,[p0,d0],64))}}),S0={meta:{name:"0.1.30"}},m0=g("h2",null,"0.1.31",-1),M0=g("li",null,"Added exclamation mark to changelog if calculator was updated",-1),E0=oe({__name:"0.1.31",setup(e){return(t,i)=>{const r=xt("RouterLink");return b(),B(K,null,[m0,g("ul",null,[g("li",null,[j("Added "),ee(r,{to:"/data/achievement"},{default:Ee(()=>[j("Achievement")]),_:1}),j(" page")]),M0])],64)}}}),v0={meta:{name:"0.1.31"}},w0=g("h2",null,"0.1.32",-1),k0=g("li",null,"Added new skill passives",-1),A0=oe({__name:"0.1.32",setup(e){return(t,i)=>{const r=xt("RouterLink");return b(),B(K,null,[w0,g("ul",null,[g("li",null,[j("Added "),ee(r,{to:"/data/skill"},{default:Ee(()=>[j("Skill")]),_:1}),j(" page")]),k0])],64)}}}),R0={meta:{name:"0.1.32"}},C0=g("h2",null,"0.1.33",-1),L0=g("ul",null,[g("li",null,"Added Skill passives for Archer and Tamer"),g("li",null,"Added new area mission milestones"),g("li",null,"Added new pet rank milestones")],-1),P0=oe({__name:"0.1.33",setup(e){return(t,i)=>(b(),B(K,null,[C0,L0],64))}}),D0={meta:{name:"0.1.33"}},y0=g("h2",null,"0.1.34",-1),b0=g("li",null,"Added missing ascension multipliers",-1),T0=oe({__name:"0.1.34",setup(e){return(t,i)=>{const r=xt("RouterLink");return b(),B(K,null,[y0,g("ul",null,[b0,g("li",null,[j("Added "),ee(r,{to:"/data/upgrade"},{default:Ee(()=>[j("Upgrade")]),_:1}),j(" page")])])],64)}}}),G0={meta:{name:"0.1.34"}},B0=g("h2",null,"0.1.35",-1),x0=g("li",null,"Added inputs for level for each class in Equipment Edit",-1),F0=g("li",null,[j("Added button for adding forge effect to every item in loadout in Equipment Breakdown popup "),g("button",{class:"blue small",title:"Equipment Breakdown"},"☰")],-1),_0=g("li",null,"Added button Clear Loadout in Equipment Breakdown popup",-1),I0=oe({__name:"0.1.35",setup(e){return(t,i)=>{const r=xt("RouterLink");return b(),B(K,null,[B0,g("ul",null,[x0,F0,_0,g("li",null,[j("Added "),ee(r,{to:"/data/ascension"},{default:Ee(()=>[j("Ascension")]),_:1}),j(" page")])])],64)}}}),V0={meta:{name:"0.1.35"}},H0=g("h2",null,"0.1.36",-1),q0=g("ul",null,[g("li",null,"Added Utility items to Equipment Breakdown"),g("li",null,"Added Loadout Export / Import function to Equipment Breakdown"),g("li",null,"Added Mass Enchantements Addition function to Equipment Breakdown")],-1),N0=oe({__name:"0.1.36",setup(e){return(t,i)=>(b(),B(K,null,[H0,q0],64))}}),W0={meta:{name:"0.1.36"}},$0=g("h2",null,"0.1.37",-1),U0=g("ul",null,[g("li",null,"Added new expedition times"),g("li",null,"Added partialy Find Best Enchantements function")],-1),O0=oe({__name:"0.1.37",setup(e){return(t,i)=>(b(),B(K,null,[$0,U0],64))}}),z0={meta:{name:"0.1.37"}},J0=g("h2",null,"0.1.38",-1),j0=g("ul",null,[g("li",null,"Added new bundle expedition slot"),g("li",null,"Fixed bonus from skill level milestone"),g("li",null,"Added equipable skill passive bonuses")],-1),X0=oe({__name:"0.1.38",setup(e){return(t,i)=>(b(),B(K,null,[J0,j0],64))}}),Q0={meta:{name:"0.1.38"}},Y0={meta:{name:"Changelog",root:!0,submenu:!1,version:!0}},Z0=oe({__name:"data",setup(e){return(t,i)=>{const r=xt("router-view");return b(),lt(r)}}}),K0=oe({__name:"index",setup(e){const t=ca();return(i,r)=>{const h=xt("RouterLink");return b(),B("ul",null,[(b(!0),B(K,null,he(A(t),c=>(b(),B("li",null,[ee(h,{to:i.$route.name+c.path},{default:Ee(()=>[j(T(c.meta.name),1)]),_:2},1032,["to"])]))),256))])}}}),eg={meta:{name:"noname",default:!0}};class tg{constructor(){o(this,"list",[])}new(t,i=!1){return this.list.push(t),i?t:`data-endpoint="${t}"`}}var gt=(e=>(e[e.Normal=0]="Normal",e[e.Percent=1]="Percent",e[e.Meter=2]="Meter",e[e.TimeDhms=3]="TimeDhms",e))(gt||{});function Gh(e,t=!0){e=parseInt(e);let i=Math.floor(e/(3600*24)),r=Math.floor(e%(3600*24)/3600),h=Math.floor(e%3600/60),c=Math.floor(e%60);return r<10&&(r="0"+r),h<10&&(h="0"+h),c<10&&(c="0"+c),i==0&&r==0?`${h}m${c}s`:i==0?`${r}h${h}m${c}s`:t?`${i}d ${r}:${h}:${c}`:`${i}d${r}h${h}m${c}s`}function sr(e,t=2,i=null){if(e==null)switch(i){case gt.Normal:return"0%";case gt.Meter:return"0m / sec";default:return"0"}e=parseFloat(e);let r=0,h=!1;return i==gt.TimeDhms?Gh(e):(i==gt.Meter&&(e/=100),i==gt.Percent&&(e*=100),e<0&&(e*=-1,h=!0),e<=1e4?r=e.toFixed(t):e<1e6?r=(e/1e3).toFixed(t)+"K":e<1e9?r=(e/1e6).toFixed(t)+"M":e<1e12?r=(e/1e9).toFixed(t)+"B":e<1e15?r=(e/1e12).toFixed(t)+"T":r=e.toExponential(t),i==gt.Meter?r+"m / sec":(h&&(r.slice(0,1),r="-"+r),i==gt.Percent&&(r+="%"),r.toString()))}function sg(e){if(e instanceof String&&e.includes("e+")||e>=1e15)return e;if(e=e.toString(),e=e.replace(/,/g,"."),/^\d*\.?\d+$/.test(e))return parseFloat(e);{const t=/(.*)(\D)$/gm;e=e.toLowerCase(),e=e.replace(/ /g,""),e=t.exec(e);let i=0;return e[2]=="t"?i=e[1]*1e3**4:e[2]=="b"?i=e[1]*1e3**3:e[2]=="m"?i=e[1]*1e3**2:e[2]=="k"&&(i=e[1]*1e3**1),parseFloat(i)}}const ig=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,ag=/\\(\\)?/g;function Bh(e){let t=[];return e.charCodeAt(0)===46&&t.push(""),e.replace(ig,function(i,r,h,c){t.push(h?c.replace(ag,"$1"):r||i)}),t}function rg(e,t){const i=Bh(t);for(let r=0;r<i.length;r++)if(i[r].includes("(")){const h=i[r].replace(/(\w+)\((.*?)\)/gm,"$1"),c=i[r].replace(/(\w+)\((.*?)\)/gm,"$2");e=e[h](c)}else i[r]&&(e=e[i[r]]);return e}const f={convertTo:sr,convertFrom:sg,tDigit:(e,t=2)=>sr(e,t,gt.Normal),percent:(e,t=2)=>sr(e,t,gt.Percent),meter:(e,t=2)=>sr(e,t,gt.Meter),secondsToDhms:Gh,getBaseLog:(e,t)=>Math.log(e)/Math.log(t),Endpoint:tg,stringToPath:Bh,get:rg},lg=["size"],ng=["size"],_t=oe({__name:"AppInput",props:ju({size:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(e){const t=e,[i,r]=uh(e,"modelValue",{set(c){return r.convert?f.convertFrom(c):c},get(c){return r.convert?f.convertTo(c):c}}),h=nt(t.size?t.size:8);return(c,m)=>Object.keys(A(r)).length?Le((b(),B("input",{key:0,name:"input",type:"text",size:h.value,"onUpdate:modelValue":m[0]||(m[0]=w=>Xt(i)?i.value=w:null)},null,8,lg)),[[tt,A(i),void 0,{lazy:!0}]]):Le((b(),B("input",{key:1,name:"input",type:"text",size:h.value,"onUpdate:modelValue":m[1]||(m[1]=w=>Xt(i)?i.value=w:null)},null,8,ng)),[[tt,A(i),void 0,{lazy:!0,number:!0}]])}}),ug=g("tr",null,[g("th",null,"Hero"),g("th",null,"VIT"),g("th",null,"STR"),g("th",null,"INT"),g("th",null,"AGI"),g("th",null,"LUK")],-1),hg=g("tr",null,[g("th",null,"Hero"),g("th",null,"SD VIT"),g("th",null,"SD STR"),g("th",null,"SD INT"),g("th",null,"SD AGI"),g("th",null,"SD LUK")],-1),cg=oe({__name:"ability",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[g("table",null,[ug,(b(!0),B(K,null,he(A(t).data.stats.heroes,h=>(b(),B("tr",null,[g("td",null,T(A(R)[h.heroKind]),1),g("td",null,[ee(_t,{modelValue:h.abilities[0].point.value,"onUpdate:modelValue":c=>h.abilities[0].point.value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.abilities[1].point.value,"onUpdate:modelValue":c=>h.abilities[1].point.value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.abilities[2].point.value,"onUpdate:modelValue":c=>h.abilities[2].point.value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.abilities[3].point.value,"onUpdate:modelValue":c=>h.abilities[3].point.value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.abilities[4].point.value,"onUpdate:modelValue":c=>h.abilities[4].point.value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])])]))),256))]),g("table",null,[hg,(b(!0),B(K,null,he(A(t).data.superStats.heroes,h=>(b(),B("tr",null,[g("td",null,T(A(R)[h.heroKind]),1),g("td",null,[ee(_t,{modelValue:h.superAbilities[0].value,"onUpdate:modelValue":c=>h.superAbilities[0].value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.superAbilities[1].value,"onUpdate:modelValue":c=>h.superAbilities[1].value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.superAbilities[2].value,"onUpdate:modelValue":c=>h.superAbilities[2].value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.superAbilities[3].value,"onUpdate:modelValue":c=>h.superAbilities[3].value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,[ee(_t,{modelValue:h.superAbilities[4].value,"onUpdate:modelValue":c=>h.superAbilities[4].value=c,modelModifiers:{convert:!0}},null,8,["modelValue","onUpdate:modelValue"])])]))),256))])],64))}}),og={meta:{name:"Ability"}},fg=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Rank"),g("th",null,"Loyalty"),g("th",null,"Effect")],-1),pg=["onUpdate:modelValue"],dg=oe({__name:"achievement",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[fg,(b(!0),B(K,null,he(A(t).data.achievement.achievementList,h=>(b(),B("tr",null,[g("td",{class:mt({green:h.isGotReward,orange:h.isCleared&&!h.isGotReward})},T(h.NameString()),3),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":c=>h.isGotReward=c,name:"achievement.isGotAchievementRewards"},null,8,pg),[[us,h.isGotReward,void 0,{lazy:!0}]])]),g("td",null,T(h.RewardString()),1)]))),256))]))}}),gg={meta:{name:"Achievement",submenu:!1}},Sg=g("h3",null,"Milestones",-1),mg=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),Mg=["onUpdate:modelValue"],Eg=g("h3",null,"Upgrades",-1),vg=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),wg=["onUpdate:modelValue"],kg=oe({__name:"ascension",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[Sg,g("table",null,[mg,(b(!0),B(K,null,he(A(t).data.ascension.worldAscensions[0].milestoneList,h=>(b(),B("tr",null,[g("td",null,T(h.Name()),1),g("td",null,[Le(g("input",{type:"text","onUpdate:modelValue":c=>h.maxLevelReached=c,name:"milestone.maxLevelReached",size:"4"},null,8,Mg),[[tt,h.maxLevelReached,void 0,{lazy:!0}]])]),g("td",null,T(h.EffectString()),1)]))),256))]),Eg,g("table",null,[vg,(b(!0),B(K,null,he(A(t).data.ascension.worldAscensions[0].upgradeList,h=>(b(),B("tr",null,[g("td",null,T(h.Name()),1),g("td",null,[Le(g("input",{type:"text","onUpdate:modelValue":c=>h.level=c,name:"upgrade.level",size:"4"},null,8,wg),[[tt,h.level,void 0,{lazy:!0}]])]),g("td",null,T(h.EffectString()),1)]))),256))])],64))}}),Ag={meta:{name:"Ascension",submenu:!1}},Rg=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Rank"),g("th",null,"Loyalty"),g("th",null,"Effect")],-1),Cg=["onUpdate:modelValue"],Lg=["onUpdate:modelValue"],Pg=["onUpdate:modelValue"],Dg={class:"summary"},yg=g("td",null,"Total:",-1),bg=g("td",null,null,-1),Tg=oe({__name:"bestiary",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[Rg,(b(!0),B(K,null,he(A(t).data.monster.globalInfoList,h=>(b(),B("tr",null,[g("td",null,T(h.MonsterName()),1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.pet.level=c,name:"monster.pet.level"},null,8,Cg),[[tt,h.pet.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.pet.rank=c,name:"monster.pet.rank"},null,8,Lg),[[tt,h.pet.rank,void 0,{lazy:!0,number:!0}]])]),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.pet.loyalty=c,name:"monster.pet.loyalty"},null,8,Pg),[[tt,h.pet.loyalty,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.pet.PassiveEffectString()),1)]))),256)),g("tr",Dg,[yg,bg,g("td",null,T(A(t).data.monster.TotalPetRank()),1)])]))}}),Gg={meta:{name:"Bestiary"}},Bg=oe({__name:"challenge",setup(e){return(t,i)=>{const r=xt("RouterView");return b(),lt(r)}}}),xg=oe({__name:"index",setup(e){const t=ca();return(i,r)=>{const h=xt("RouterLink");return b(),B("ul",null,[(b(!0),B(K,null,he(A(t),c=>(b(),B("li",null,[ee(h,{to:i.$route.name+c.path},{default:Ee(()=>{var m;return[j(T((m=c.meta)==null?void 0:m.name),1)]}),_:2},1032,["to"])]))),256))])}}}),Fg={meta:{name:"noname",default:!0}},_g=oe({__name:"AppCollapse",setup(e){const t=nt(!1);return(i,r)=>(b(),B("div",null,[g("span",{onClick:r[0]||(r[0]=h=>t.value=!t.value),class:"trigger"},[Ws(i.$slots,"trigger",{},void 0,!0)]),Le(g("div",null,[Ws(i.$slots,"content",{},()=>[j("content")],!0)],512),[[$a,t.value]])]))}}),ri=Ft(_g,[["__scopeId","data-v-d7fc5274"]]),Ig=g("tr",null,[g("th",null,"Name"),g("th",null,"Done"),g("th",null,"Effect")],-1),Vg=["checked","onChange"],Hg=oe({__name:"handicap",setup(e){const t=Ve("game");return(i,r)=>(b(!0),B(K,null,he(A(t).data.challenge.handicapList,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString()),1)]),content:Ee(()=>[g("table",null,[Ig,(b(),B(K,null,he(6,(c,m)=>g("tr",null,[g("td",null,T(A(R)[m]),1),g("td",null,[g("input",{type:"checkbox",checked:h.IsReceivedRewardClass(m),onChange:w=>h.SetReceivedRewardClass(m,w.target.checked)},null,40,Vg)]),g("td",null,T(h.ClassExclusiveRewardString()[m]),1)])),64))])]),_:2},1024))),256))}}),qg={meta:{name:"Handicap"}},Ng=g("tr",null,[g("th",null,"Name"),g("th",null,"Done"),g("th",null,"Effect")],-1),Wg=["checked","onChange"],$g=oe({__name:"solo",setup(e){const t=Ve("game");return(i,r)=>(b(!0),B(K,null,he(A(t).data.challenge.solobossList,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString()),1)]),content:Ee(()=>[g("table",null,[Ng,(b(),B(K,null,he(6,(c,m)=>g("tr",null,[g("td",null,T(A(R)[m]),1),g("td",null,[g("input",{type:"checkbox",checked:h.IsReceivedRewardClass(m),onChange:w=>h.SetReceivedRewardClass(m,w.target.checked)},null,40,Wg)]),g("td",null,T(h.ClassExclusiveRewardString()[m]),1)])),64))])]),_:2},1024))),256))}}),Ug={meta:{name:"Solo"}},Og=g("tr",null,[g("th",null,"Name"),g("th",null,"Done"),g("th",null,"Modifier"),g("th",null,"Effect")],-1),zg=["checked","onChange"],Jg=g("hr",null,null,-1),jg=oe({__name:"superdungeon",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[(b(!0),B(K,null,he(A(t).data.challenge.superdungeonList,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString()),1)]),content:Ee(()=>[g("table",null,[Og,(b(),B(K,null,he(6,(c,m)=>g("tr",null,[g("td",null,T(A(R)[m]),1),g("td",null,[g("input",{type:"checkbox",checked:h.IsReceivedRewardClass(m),onChange:w=>h.SetReceivedRewardClass(m,w.target.checked)},null,40,zg)]),g("td",null,[ee(_t,{modelValue:A(t).data.source.maxModifierCleareds[m+10*h.sdId],"onUpdate:modelValue":w=>A(t).data.source.maxModifierCleareds[m+10*h.sdId]=w},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,T(h.FloorRewardString(m)),1)])),64))])]),_:2},1024))),256)),Jg,j(" Total Modifier: "+T(A(t).data.sdg.modifierMilestoneCtrl.Total()),1)],64))}}),Xg={meta:{name:"Super Dungeon"}},Qg={meta:{name:"Challange"}},Yg=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Passive Effect"),g("th",null,"Exp"),g("th",null,"Total Exp")],-1),Zg=["onUpdate:modelValue"],Kg=g("td",null,null,-1),eS=g("td",null,null,-1),tS=g("td",null,null,-1),sS=g("td",null,null,-1),iS=oe({__name:"expedition",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[Yg,(b(!0),B(K,null,he(A(t).data.expedition.globalInfoList,h=>(b(),B("tr",null,[g("td",null,T(h.NameString())+": "+T(),1),g("td",null,[Le(g("input",{type:"text",size:"8","onUpdate:modelValue":c=>h.level=c,name:"expedition.level"},null,8,Zg),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1),g("td",null,T(A(f).tDigit(h.exp,3))+" / "+T(A(f).tDigit(h.RequiredExp(h.level),3)),1),g("td",null,T(A(f).tDigit(h.TotalExp(),3)),1)]))),256)),g("tr",null,[Kg,eS,tS,sS,g("td",null,T(A(f).tDigit(A(t).data.expedition.TotalExp(),3)),1)])]))}}),aS={meta:{name:"Expedition"}},rS=g("tr",null,[g("th",null,"Hero"),g("th",null,"Status")],-1),lS=oe({__name:"guild",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[rS,(b(!0),B(K,null,he(A(t).data.source.isActiveBattle,(h,c)=>(b(),B("tr",null,[g("td",null,T(A(R)[c])+":",1),g("td",null,T(h?A(t).data.source.currentHero==c?"active":"passive":"inactive"),1)]))),256))]))}}),nS={meta:{name:"Guild"}},uS=oe({__name:"quest",setup(e){return(t,i)=>{const r=xt("router-view");return b(),lt(r)}}}),hS=oe({__name:"index",setup(e){const t=ca();return(i,r)=>{const h=xt("RouterLink");return b(),B("ul",null,[(b(!0),B(K,null,he(A(t),c=>(b(),B("li",null,[ee(h,{to:i.$route.name+c.path},{default:Ee(()=>{var m;return[j(T((m=c.meta)==null?void 0:m.name),1)]}),_:2},1032,["to"])]))),256))])}}}),cS={meta:{name:"noname",default:!0}},oS=g("tr",null,[g("th",null,"Global Quest"),g("th",null,"Completed")],-1),fS=["onUpdate:modelValue"],pS=oe({__name:"global",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[oS,(b(!0),B(K,null,he(A(t).data.quest.globalQuests,h=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":c=>h.isCleared=c},null,8,fS),[[us,h.isCleared]])])]))),256))]))}}),dS={meta:{name:"Global"}},gS=g("tr",null,[g("th",null,"Title Quest"),g("th",null,"Warrior"),g("th",null,"Wizard"),g("th",null,"Angel"),g("th",null,"Thief"),g("th",null,"Archer"),g("th",null,"Tamer")],-1),SS=["onUpdate:modelValue"],mS=["onUpdate:modelValue"],MS=["onUpdate:modelValue"],ES=["onUpdate:modelValue"],vS=["onUpdate:modelValue"],wS=["onUpdate:modelValue"],kS=oe({__name:"title",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[gS,(b(!0),B(K,null,he(A(t).data.quest.titleQuestList[0],(h,c)=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":m=>A(t).data.quest.titleQuestList[0][c].isCleared=m},null,8,SS),[[us,A(t).data.quest.titleQuestList[0][c].isCleared]])]),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":m=>A(t).data.quest.titleQuestList[1][c].isCleared=m},null,8,mS),[[us,A(t).data.quest.titleQuestList[1][c].isCleared]])]),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":m=>A(t).data.quest.titleQuestList[2][c].isCleared=m},null,8,MS),[[us,A(t).data.quest.titleQuestList[2][c].isCleared]])]),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":m=>A(t).data.quest.titleQuestList[3][c].isCleared=m},null,8,ES),[[us,A(t).data.quest.titleQuestList[3][c].isCleared]])]),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":m=>A(t).data.quest.titleQuestList[4][c].isCleared=m},null,8,vS),[[us,A(t).data.quest.titleQuestList[4][c].isCleared]])]),g("td",null,[Le(g("input",{type:"checkbox","onUpdate:modelValue":m=>A(t).data.quest.titleQuestList[5][c].isCleared=m},null,8,wS),[[us,A(t).data.quest.titleQuestList[5][c].isCleared]])])]))),256))]))}}),AS={meta:{name:"Title"}},RS={meta:{name:"Quest"}},CS=oe({__name:"skill",setup(e){return(t,i)=>{const r=xt("router-view");return b(),lt(r)}}}),LS=oe({__name:"index",setup(e){const t=ca();return(i,r)=>{const h=xt("RouterLink");return b(),B("ul",null,[(b(!0),B(K,null,he(A(t),c=>(b(),B("li",null,[ee(h,{to:i.$route.name+c.path},{default:Ee(()=>{var m;return[j(T((m=c.meta)==null?void 0:m.name),1)]}),_:2},1032,["to"])]))),256))])}}}),PS={meta:{name:"noname",default:!0}},DS=g("hr",null,null,-1),yS={class:"green"},bS={class:"orange"},TS=g("h5",null,"Passive Effects",-1),GS=oe({__name:"angel",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Total Level: "+T(A(t).data.skill.classSkills[2].MaxReachedTotalLevel())+" || Damage Multiplier: "+T(A(t).data.skill.classSkills[2].DamageMultiplierEffectValueString())+" ",1),DS,(b(!0),B(K,null,he(A(t).data.skill.classSkills[2].skills,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString())+" ",1),g("span",yS,"Lv "+T(h.level.value),1),j(),g("span",bS,"< Rank "+T(h.rank)+" >",1)]),content:Ee(()=>[j(" Level: "),ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c},null,8,["modelValue","onUpdate:modelValue"]),TS,(b(!0),B(K,null,he(h.passiveEffectLists,c=>(b(),B("p",{class:mt({green:c.IsEnoughLevel()})},T(c.requiredLevel)+" "+T(c.description()),3))),256))]),_:2},1024))),256))],64))}}),BS={meta:{name:"Angel"}},xS=g("hr",null,null,-1),FS={class:"green"},_S={class:"orange"},IS=g("h5",null,"Passive Effects",-1),VS=oe({__name:"archer",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Total Level: "+T(A(t).data.skill.classSkills[4].MaxReachedTotalLevel())+" || Damage Multiplier: "+T(A(t).data.skill.classSkills[4].DamageMultiplierEffectValueString())+" ",1),xS,(b(!0),B(K,null,he(A(t).data.skill.classSkills[4].skills,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString())+" ",1),g("span",FS,"Lv "+T(h.level.value),1),j(),g("span",_S,"< Rank "+T(h.rank)+" >",1)]),content:Ee(()=>[j(" Level: "),ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c},null,8,["modelValue","onUpdate:modelValue"]),IS,(b(!0),B(K,null,he(h.passiveEffectLists,c=>(b(),B("p",{class:mt({green:c.IsEnoughLevel()})},T(c.requiredLevel)+" "+T(c.description()),3))),256))]),_:2},1024))),256))],64))}}),HS={meta:{name:"Archer"}},qS=g("hr",null,null,-1),NS={class:"green"},WS={class:"orange"},$S=g("h5",null,"Passive Effects",-1),US=oe({__name:"tamer",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Total Level: "+T(A(t).data.skill.classSkills[5].MaxReachedTotalLevel())+" || Damage Multiplier: "+T(A(t).data.skill.classSkills[5].DamageMultiplierEffectValueString())+" ",1),qS,(b(!0),B(K,null,he(A(t).data.skill.classSkills[5].skills,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString())+" ",1),g("span",NS,"Lv "+T(h.level.value),1),j(),g("span",WS,"< Rank "+T(h.rank)+" >",1)]),content:Ee(()=>[j(" Level: "),ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c},null,8,["modelValue","onUpdate:modelValue"]),$S,(b(!0),B(K,null,he(h.passiveEffectLists,c=>(b(),B("p",{class:mt({green:c.IsEnoughLevel()})},T(c.requiredLevel)+" "+T(c.description()),3))),256))]),_:2},1024))),256))],64))}}),OS={meta:{name:"Tamer"}},zS=g("hr",null,null,-1),JS={class:"green"},jS={class:"orange"},XS=g("h5",null,"Passive Effects",-1),QS=oe({__name:"thief",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Total Level: "+T(A(t).data.skill.classSkills[3].MaxReachedTotalLevel())+" || Damage Multiplier: "+T(A(t).data.skill.classSkills[3].DamageMultiplierEffectValueString())+" ",1),zS,(b(!0),B(K,null,he(A(t).data.skill.classSkills[3].skills,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString())+" ",1),g("span",JS,"Lv "+T(h.level.value),1),j(),g("span",jS,"< Rank "+T(h.rank)+" >",1)]),content:Ee(()=>[j(" Level: "),ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c},null,8,["modelValue","onUpdate:modelValue"]),XS,(b(!0),B(K,null,he(h.passiveEffectLists,c=>(b(),B("p",{class:mt({green:c.IsEnoughLevel()})},T(c.requiredLevel)+" "+T(c.description()),3))),256))]),_:2},1024))),256))],64))}}),YS={meta:{name:"Thief"}},ZS=g("hr",null,null,-1),KS={class:"green"},em={class:"orange"},tm=g("h5",null,"Passive Effects",-1),sm=oe({__name:"warrior",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Total Level: "+T(A(t).data.skill.classSkills[0].MaxReachedTotalLevel())+" || Damage Multiplier: "+T(A(t).data.skill.classSkills[0].DamageMultiplierEffectValueString())+" ",1),ZS,(b(!0),B(K,null,he(A(t).data.skill.classSkills[0].skills,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString())+" ",1),g("span",KS,"Lv "+T(h.level.value),1),j(),g("span",em,"< Rank "+T(h.rank)+" >",1)]),content:Ee(()=>[j(" Level: "),ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c},null,8,["modelValue","onUpdate:modelValue"]),tm,(b(!0),B(K,null,he(h.passiveEffectLists,c=>(b(),B("p",{class:mt({green:c.IsEnoughLevel()})},T(c.requiredLevel)+" "+T(c.description()),3))),256))]),_:2},1024))),256))],64))}}),im={meta:{name:"Warrior"}},am=g("hr",null,null,-1),rm={class:"green"},lm={class:"orange"},nm=g("h5",null,"Passive Effects",-1),um=oe({__name:"wizard",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Total Level: "+T(A(t).data.skill.classSkills[1].MaxReachedTotalLevel())+" || Damage Multiplier: "+T(A(t).data.skill.classSkills[1].DamageMultiplierEffectValueString())+" ",1),am,(b(!0),B(K,null,he(A(t).data.skill.classSkills[1].skills,h=>(b(),lt(ri,null,{trigger:Ee(()=>[j(T(h.NameString())+" ",1),g("span",rm,"Lv "+T(h.level.value),1),j(),g("span",lm,"< Rank "+T(h.rank)+" >",1)]),content:Ee(()=>[j(" Level: "),ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c},null,8,["modelValue","onUpdate:modelValue"]),nm,(b(!0),B(K,null,he(h.passiveEffectLists,c=>(b(),B("p",{class:mt({green:c.IsEnoughLevel()})},T(c.requiredLevel)+" "+T(c.description()),3))),256))]),_:2},1024))),256))],64))}}),hm={meta:{name:"Wizard"}},cm={meta:{name:"Skill"}},om=oe({__name:"super-dungeon",setup(e){return(t,i)=>{const r=xt("router-view");return b(),lt(r)}}}),fm=oe({__name:"index",setup(e){const t=ca();return(i,r)=>{const h=xt("RouterLink");return b(),B("ul",null,[(b(!0),B(K,null,he(A(t),c=>(b(),B("li",null,[ee(h,{to:i.$route.name+c.path},{default:Ee(()=>{var m;return[j(T((m=c.meta)==null?void 0:m.name),1)]}),_:2},1032,["to"])]))),256))])}}}),pm={meta:{name:"noname",default:!0}},dm=g("tr",null,[g("th",null,"Name"),g("th",null,"Rank"),g("th",null,"Purchased"),g("th",null,"Level"),g("th",null,"Topaz"),g("th",null,"Passive Effect")],-1),gm=["onUpdate:modelValue"],Sm=["onUpdate:modelValue"],mm=["onUpdate:modelValue"],Mm=g("td",null,null,-1),Em=g("td",null,null,-1),vm=g("td",null,null,-1),wm=g("td",null,null,-1),km=oe({__name:"powerup",setup(e){const t=Ve("game"),i=Vt(()=>{let r=0;return t.data.sdg.upgradeCtrl.automationList.forEach(h=>{r+=h.TotalCost()}),t.data.battle.superDungeonCtrl.powerupList.forEach(h=>{r+=h.TotalRankCost()}),r});return(r,h)=>(b(),B("table",null,[dm,(b(!0),B(K,null,he(A(t).data.battle.superDungeonCtrl.powerupList,c=>(b(),B("tr",null,[g("td",null,T(c.NameString())+":",1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":m=>c.rank=m,name:"powerup.rank"},null,8,gm),[[tt,c.rank,void 0,{lazy:!0,number:!0}]])]),g("td",null,[Le(g("input",{type:"text",size:"10","onUpdate:modelValue":m=>c.purchasedNum=m,name:"powerup.purchasedNum"},null,8,Sm),[[tt,c.purchasedNum,void 0,{lazy:!0,number:!0}]])]),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":m=>c.level=m,name:"powerup.level"},null,8,mm),[[tt,c.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(c.TotalRankCost()),1),g("td",null,T(c.EffectValueString()),1)]))),256)),g("tr",null,[Mm,Em,vm,wm,g("td",null,T(i.value),1)])]))}}),Am={meta:{name:"Powerup"}},Rm=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),Cm=["onUpdate:modelValue"],Lm=oe({__name:"ritual",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[Rm,(b(!0),B(K,null,he(A(t).data.sdg.sdGemRitualCtrl.sdGemList,h=>(b(),B("tr",null,[g("td",null,T(h.NameString())+":",1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.level=c,name:"ritual.level"},null,8,Cm),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256))]))}}),Pm={meta:{name:"Ritual"}},Dm=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),ym=["onUpdate:modelValue"],bm=oe({__name:"ruby-shop",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[Dm,(b(!0),B(K,null,he(A(t).data.sdg.shopCtrl.itemStatBonusList,h=>(b(),B("tr",null,[g("td",null,T(h.NameString())+":",1),g("td",null,[Le(g("input",{type:"text",size:"8","onUpdate:modelValue":c=>h.purchasedNum=c,name:"upgrade.purchasedNum"},null,8,ym),[[tt,h.purchasedNum,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256))]))}}),Tm={meta:{name:"Ruby Shop"}},Gm=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),Bm=g("tr",{class:"heading"},[g("td",null,"Automations")],-1),xm=["onUpdate:modelValue"],Fm=g("tr",{class:"heading"},[g("td",null,"Upgrade 1")],-1),_m=["onUpdate:modelValue"],Im=g("tr",{class:"heading"},[g("td",null,"Upgrade 2")],-1),Vm=["onUpdate:modelValue"],Hm=g("tr",{class:"heading"},[g("td",null,"Upgrade 3")],-1),qm=["onUpdate:modelValue"],Nm=g("tr",{class:"heading"},[g("td",null,"Upgrade 4")],-1),Wm=["onUpdate:modelValue"],$m=oe({__name:"upgrade",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[Gm,Bm,(b(!0),B(K,null,he(A(t).data.sdg.upgradeCtrl.automationList,h=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.level=c,name:"upgradeLevel"},null,8,xm),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256)),Fm,(b(!0),B(K,null,he(A(t).data.sdg.upgradeCtrl.upgrade1ist,h=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.level=c,name:"upgradeLevel"},null,8,_m),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256)),Im,(b(!0),B(K,null,he(A(t).data.sdg.upgradeCtrl.upgrade2ist,h=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.level=c,name:"upgradeLevel"},null,8,Vm),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256)),Hm,(b(!0),B(K,null,he(A(t).data.sdg.upgradeCtrl.upgrade3ist,h=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.level=c,name:"upgradeLevel"},null,8,qm),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256)),Nm,(b(!0),B(K,null,he(A(t).data.sdg.upgradeCtrl.upgrade4ist,h=>(b(),B("tr",null,[g("td",null,T(h.NameString()),1),g("td",null,[Le(g("input",{type:"text",size:"6","onUpdate:modelValue":c=>h.level=c,name:"upgradeLevel"},null,8,Wm),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256))]))}}),Um={meta:{name:"Upgrade"}},Om={meta:{name:"Super Dungeon"}},zm=g("tr",null,[g("th",null,"Name"),g("th",null,"Disassambled"),g("th",null,"Level"),g("th",null,"Passive Effect")],-1),Jm=["onUpdate:modelValue"],jm=["onUpdate:modelValue"],Xm=oe({__name:"talisman",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[zm,(b(!0),B(K,null,he(A(t).data.potion.talismans,h=>(b(),B("tr",null,[g("td",null,T(h.NameString())+":",1),g("td",null,[Le(g("input",{type:"text",size:"12","onUpdate:modelValue":c=>h.disassembledNum=c,name:"talisman.disassembledNum"},null,8,Jm),[[tt,h.disassembledNum,void 0,{lazy:!0,number:!0}]])]),g("td",null,[Le(g("input",{type:"text",size:"5","onUpdate:modelValue":c=>h.level=c,name:"talisman.level"},null,8,jm),[[tt,h.level,void 0,{lazy:!0,number:!0}]])]),g("td",null,T(h.EffectValueString()),1)]))),256))]))}}),Qm={meta:{name:"Talisman"}},Ym=g("div",{style:{display:"flex"}},null,-1),Zm=g("tr",null,[g("th",null,"Building Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),Km={class:"summary"},e1={class:"green",style:{"padding-right":"5px"}},t1=g("td",null,"-Stone",-1),s1=g("td",null,"-Crystal",-1),i1=g("td",null,"-Leaf",-1),a1=oe({__name:"town",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[Ym,g("table",null,[Zm,(b(!0),B(K,null,he(A(t).data.town.buildings,h=>(b(),B(K,null,[g("tr",Km,[g("td",null,T(h.NameString()),1),g("td",e1,T(h.level[h.kind])+" + "+T(h.levelBonus.Value()),1),g("td",null,T(h.EffectValueString()),1)]),g("tr",null,[t1,g("td",null,[ee(_t,{modelValue:h.research[0].level,"onUpdate:modelValue":c=>h.research[0].level=c,size:4},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,T(h.ResearchEffectString(0)),1)]),g("tr",null,[s1,g("td",null,[ee(_t,{modelValue:h.research[1].level,"onUpdate:modelValue":c=>h.research[1].level=c,size:4},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,T(h.ResearchEffectString(1)),1)]),g("tr",null,[i1,g("td",null,[ee(_t,{modelValue:h.research[2].level,"onUpdate:modelValue":c=>h.research[2].level=c,size:4},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,T(h.ResearchEffectString(2)),1)])],64))),256))])],64))}}),r1={meta:{name:"Town"}},l1=g("tr",null,[g("th",null,"Name"),g("th",null,"Level"),g("th",null,"Effect")],-1),n1=oe({__name:"upgrade",setup(e){const t=Ve("game");return(i,r)=>(b(),B("table",null,[l1,(b(!0),B(K,null,he(A(t).data.upgrade.slimebankUpgradeList,h=>(b(),B("tr",null,[g("td",null,T(h.Name()),1),g("td",null,[ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c,size:21},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,T(h.Description())+" "+T(h.EffectString()),1)]))),256)),(b(!0),B(K,null,he(A(t).data.upgrade.generalUpgradeList,h=>(b(),B("tr",null,[g("td",null,T(h.Name()),1),g("td",null,[ee(_t,{modelValue:h.level.value,"onUpdate:modelValue":c=>h.level.value=c,size:21},null,8,["modelValue","onUpdate:modelValue"])]),g("td",null,T(h.Description())+" "+T(h.EffectString()),1)]))),256))]))}}),u1={meta:{name:"Upgrade"}},h1={meta:{name:"Data",root:!0,submenu:!0}};var Q=(e=>(e[e.Common=0]="Common",e[e.Uncommon=1]="Uncommon",e[e.Rare=2]="Rare",e[e.SuperRare=3]="SuperRare",e[e.Epic=4]="Epic",e))(Q||{});const zt={maxOptionEffectNum:7,maxForgeEffectNum:7,maxLevelForEachHero:10,areaUniqueDropChanceBase:1e-5,Rarity(e){switch(e){case E.Nothing:return Q.Common;case E.DullSword:return Q.Common;case E.BrittleStaff:return Q.Common;case E.FlimsyWing:return Q.Common;case E.WornDart:return Q.Common;case E.SmallBow:return Q.Common;case E.WoodenRecorder:return Q.Common;case E.OldCloak:return Q.Common;case E.BlueHat:return Q.Common;case E.OrangeHat:return Q.Common;case E.TShirt:return Q.Common;case E.ClothGlove:return Q.Common;case E.BlueTShirt:return Q.Common;case E.OrangeTShirt:return Q.Common;case E.ClothBelt:return Q.Common;case E.ClothShoes:return Q.Common;case E.IronRing:return Q.Common;case E.PearlEarring:return Q.Common;case E.FireBrooch:return Q.Common;case E.IceBrooch:return Q.Common;case E.ThunderBrooch:return Q.Common;case E.LightBrooch:return Q.Common;case E.DarkBrooch:return Q.Common;case E.WoodenShield:return Q.Common;case E.LongSword:return Q.Uncommon;case E.LongStaff:return Q.Uncommon;case E.WarmWing:return Q.Uncommon;case E.DualDagger:return Q.Uncommon;case E.ReinforcedBow:return Q.Uncommon;case E.Flute:return Q.Uncommon;case E.FireStaff:return Q.Uncommon;case E.IceStaff:return Q.Uncommon;case E.ThunderStaff:return Q.Uncommon;case E.LeatherBelt:return Q.Uncommon;case E.LeatherShoes:return Q.Uncommon;case E.WarmCloak:return Q.Uncommon;case E.LeatherArmor:return Q.Uncommon;case E.LeatherGlove:return Q.Uncommon;case E.LeatherShield:return Q.Uncommon;case E.FireRing:return Q.Common;case E.IceRing:return Q.Common;case E.ThunderRing:return Q.Common;case E.LightRing:return Q.Common;case E.DarkRing:return Q.Common;case E.EnhancedFireBrooch:return Q.Uncommon;case E.EnhancedIceBrooch:return Q.Uncommon;case E.EnhancedThunderBrooch:return Q.Uncommon;case E.EnhancedLightBrooch:return Q.Uncommon;case E.EnhancedDarkBrooch:return Q.Uncommon;case E.BattleSword:return Q.Uncommon;case E.BattleStaff:return Q.Uncommon;case E.BattleWing:return Q.Uncommon;case E.BattleDagger:return Q.Uncommon;case E.BattleBow:return Q.Uncommon;case E.BattleRecorder:return Q.Uncommon;case E.SlimeSword:return Q.Rare;case E.SlimeGlove:return Q.Rare;case E.SlimeRing:return Q.Rare;case E.SlimeBelt:return Q.Rare;case E.SlimePincenez:return Q.Rare;case E.SlimeWing:return Q.Rare;case E.SlimePoncho:return Q.Rare;case E.SlimeDart:return Q.Rare;case E.MagicSlimeStick:return Q.Rare;case E.MagicSlimeHat:return Q.Rare;case E.MagicSlimeBow:return Q.Rare;case E.MagicSlimeShoes:return Q.Rare;case E.MagicSlimeRecorder:return Q.Rare;case E.MagicSlimeEarring:return Q.Rare;case E.MagicSlimeBalloon:return Q.Rare;case E.MagicSlimeSkirt:return Q.Rare;case E.SpiderHat:return Q.Rare;case E.SpiderSkirt:return Q.Rare;case E.SpiderSuit:return Q.Rare;case E.SpiderDagger:return Q.Rare;case E.SpiderWing:return Q.Rare;case E.SpiderCatchingNet:return Q.Rare;case E.SpiderStick:return Q.Rare;case E.SpiderFoldingFan:return Q.Rare;case E.BatRing:return Q.Rare;case E.BatShoes:return Q.Rare;case E.BatSword:return Q.Rare;case E.BatHat:return Q.Rare;case E.BatRecorder:return Q.Rare;case E.BatBow:return Q.Rare;case E.BatMascaradeMask:return Q.Rare;case E.BatCloak:return Q.Rare;case E.BronzeShoulder:return Q.Common;case E.BattleRing:return Q.Common;case E.Halo:return Q.Common;case E.IronShoulder:return Q.Uncommon;case E.StrengthRing:return Q.Uncommon;case E.GoldenRing:return Q.Uncommon;case E.GoldenFireRing:return Q.Uncommon;case E.GoldenIceRing:return Q.Uncommon;case E.GoldenThunderRing:return Q.Uncommon;case E.GoldenLightRing:return Q.Uncommon;case E.GoldenDarkRing:return Q.Uncommon;case E.IronBelt:return Q.Uncommon;case E.IronShoes:return Q.Uncommon;case E.CopperArmor:return Q.Uncommon;case E.IronGlove:return Q.Uncommon;case E.TowerShield:return Q.Uncommon;case E.FireTowerShield:return Q.Uncommon;case E.IceTowerShield:return Q.Uncommon;case E.ThunderTowerShield:return Q.Uncommon;case E.LightTowerShield:return Q.Uncommon;case E.DarkTowerShield:return Q.Uncommon;case E.SavageRing:return Q.Uncommon;case E.SpellboundFireBrooch:return Q.Uncommon;case E.SpellboundIceBrooch:return Q.Uncommon;case E.SpellboundThunderBrooch:return Q.Uncommon;case E.SpellboundLightBrooch:return Q.Uncommon;case E.SpellboundDarkBrooch:return Q.Uncommon;case E.CopperHelm:return Q.Uncommon;case E.BattleHelm:return Q.Uncommon;case E.WizardHelm:return Q.Uncommon;case E.LargeSword:return Q.Uncommon;case E.LargeStaff:return Q.Uncommon;case E.LargeWing:return Q.Uncommon;case E.LargeDagger:return Q.Uncommon;case E.LargeBow:return Q.Uncommon;case E.LargeOcarina:return Q.Uncommon;case E.FairyClothes:return Q.SuperRare;case E.FairyStaff:return Q.SuperRare;case E.FairyBoots:return Q.SuperRare;case E.FairyGlove:return Q.SuperRare;case E.FairyBrooch:return Q.SuperRare;case E.FairyLamp:return Q.SuperRare;case E.FairyWing:return Q.SuperRare;case E.FairyShuriken:return Q.SuperRare;case E.FoxKanzashi:return Q.SuperRare;case E.FoxLoincloth:return Q.SuperRare;case E.FoxMask:return Q.SuperRare;case E.FoxHamayayumi:return Q.SuperRare;case E.FoxHat:return Q.SuperRare;case E.FoxCoat:return Q.SuperRare;case E.FoxBoot:return Q.SuperRare;case E.FoxEma:return Q.SuperRare;case E.DevilfishSword:return Q.SuperRare;case E.DevilfishWing:return Q.SuperRare;case E.DevilfishRecorder:return Q.SuperRare;case E.DevilfishArmor:return Q.SuperRare;case E.DevilfishScarf:return Q.SuperRare;case E.DevilfishGill:return Q.SuperRare;case E.DevilfishPendant:return Q.SuperRare;case E.DevilfishRing:return Q.SuperRare;case E.TreantAmulet:return Q.SuperRare;case E.TreantHagoita:return Q.SuperRare;case E.TreantChoppingBoard:return Q.SuperRare;case E.TreantDagger:return Q.SuperRare;case E.TreantHaniwa:return Q.SuperRare;case E.TreantKokeshi:return Q.SuperRare;case E.TreantLamp:return Q.SuperRare;case E.TreantLunchbox:return Q.SuperRare;case E.FlametigerPortableHotSpring:return Q.Epic;case E.FlametigerVolcanicShield:return Q.Epic;case E.FlametigerStripedBriefs:return Q.Epic;case E.TorchOfEverburningFlametiger:return Q.Epic;case E.FlametigerCostume:return Q.Epic;case E.RingOfFlametigersWrath:return Q.Epic;case E.EndlessBowlOfSpicyFlametigerRamen:return Q.Epic;case E.ScreenOfTheSneakyFlametiger:return Q.Epic;case E.ModifiedSword:return Q.Rare;case E.ModifiedStaff:return Q.Rare;case E.ModifiedWing:return Q.Rare;case E.ModifiedDart:return Q.Rare;case E.ModifiedBow:return Q.Rare;case E.ModifiedRecorder:return Q.Rare;case E.AncientCloak:return Q.Rare;case E.AncientBelt:return Q.Rare;case E.AncientShoes:return Q.Rare;case E.AncientRing:return Q.Rare;case E.AncientEarring:return Q.Rare;default:return Q.Common}},Part(e){switch(e){case E.Nothing:return V.Weapon;case E.DullSword:return V.Weapon;case E.BrittleStaff:return V.Weapon;case E.FlimsyWing:return V.Weapon;case E.WornDart:return V.Weapon;case E.SmallBow:return V.Weapon;case E.WoodenRecorder:return V.Weapon;case E.OldCloak:return V.Armor;case E.BlueHat:return V.Armor;case E.OrangeHat:return V.Armor;case E.TShirt:return V.Armor;case E.ClothGlove:return V.Armor;case E.BlueTShirt:return V.Armor;case E.OrangeTShirt:return V.Armor;case E.ClothBelt:return V.Armor;case E.ClothShoes:return V.Armor;case E.IronRing:return V.Jewelry;case E.PearlEarring:return V.Jewelry;case E.FireBrooch:return V.Jewelry;case E.IceBrooch:return V.Jewelry;case E.ThunderBrooch:return V.Jewelry;case E.LightBrooch:return V.Jewelry;case E.DarkBrooch:return V.Jewelry;case E.WoodenShield:return V.Armor;case E.LongSword:return V.Weapon;case E.LongStaff:return V.Weapon;case E.WarmWing:return V.Weapon;case E.DualDagger:return V.Weapon;case E.ReinforcedBow:return V.Weapon;case E.Flute:return V.Weapon;case E.FireStaff:return V.Weapon;case E.IceStaff:return V.Weapon;case E.ThunderStaff:return V.Weapon;case E.LeatherBelt:return V.Armor;case E.LeatherShoes:return V.Armor;case E.WarmCloak:return V.Armor;case E.LeatherArmor:return V.Armor;case E.LeatherGlove:return V.Armor;case E.LeatherShield:return V.Armor;case E.FireRing:return V.Jewelry;case E.IceRing:return V.Jewelry;case E.ThunderRing:return V.Jewelry;case E.LightRing:return V.Jewelry;case E.DarkRing:return V.Jewelry;case E.EnhancedFireBrooch:return V.Jewelry;case E.EnhancedIceBrooch:return V.Jewelry;case E.EnhancedThunderBrooch:return V.Jewelry;case E.EnhancedLightBrooch:return V.Jewelry;case E.EnhancedDarkBrooch:return V.Jewelry;case E.BattleSword:return V.Weapon;case E.BattleStaff:return V.Weapon;case E.BattleWing:return V.Weapon;case E.BattleDagger:return V.Weapon;case E.BattleBow:return V.Weapon;case E.BattleRecorder:return V.Weapon;case E.SlimeSword:return V.Weapon;case E.SlimeGlove:return V.Armor;case E.SlimeRing:return V.Jewelry;case E.SlimeBelt:return V.Armor;case E.SlimePincenez:return V.Jewelry;case E.SlimeWing:return V.Weapon;case E.SlimePoncho:return V.Armor;case E.SlimeDart:return V.Weapon;case E.MagicSlimeStick:return V.Weapon;case E.MagicSlimeHat:return V.Armor;case E.MagicSlimeBow:return V.Weapon;case E.MagicSlimeShoes:return V.Armor;case E.MagicSlimeRecorder:return V.Weapon;case E.MagicSlimeEarring:return V.Jewelry;case E.MagicSlimeBalloon:return V.Jewelry;case E.MagicSlimeSkirt:return V.Armor;case E.SpiderHat:return V.Armor;case E.SpiderSkirt:return V.Armor;case E.SpiderSuit:return V.Armor;case E.SpiderDagger:return V.Weapon;case E.SpiderWing:return V.Weapon;case E.SpiderCatchingNet:return V.Weapon;case E.SpiderStick:return V.Weapon;case E.SpiderFoldingFan:return V.Jewelry;case E.BatRing:return V.Jewelry;case E.BatShoes:return V.Armor;case E.BatSword:return V.Weapon;case E.BatHat:return V.Armor;case E.BatRecorder:return V.Weapon;case E.BatBow:return V.Weapon;case E.BatMascaradeMask:return V.Jewelry;case E.BatCloak:return V.Armor;case E.BronzeShoulder:return V.Armor;case E.BattleRing:return V.Jewelry;case E.Halo:return V.Jewelry;case E.IronShoulder:return V.Armor;case E.StrengthRing:return V.Jewelry;case E.GoldenRing:return V.Jewelry;case E.GoldenFireRing:return V.Jewelry;case E.GoldenIceRing:return V.Jewelry;case E.GoldenThunderRing:return V.Jewelry;case E.GoldenLightRing:return V.Jewelry;case E.GoldenDarkRing:return V.Jewelry;case E.IronBelt:return V.Armor;case E.IronShoes:return V.Armor;case E.CopperArmor:return V.Armor;case E.IronGlove:return V.Armor;case E.TowerShield:return V.Armor;case E.FireTowerShield:return V.Armor;case E.IceTowerShield:return V.Armor;case E.ThunderTowerShield:return V.Armor;case E.LightTowerShield:return V.Armor;case E.DarkTowerShield:return V.Armor;case E.SavageRing:return V.Jewelry;case E.SpellboundFireBrooch:return V.Jewelry;case E.SpellboundIceBrooch:return V.Jewelry;case E.SpellboundThunderBrooch:return V.Jewelry;case E.SpellboundLightBrooch:return V.Jewelry;case E.SpellboundDarkBrooch:return V.Jewelry;case E.CopperHelm:return V.Armor;case E.BattleHelm:return V.Armor;case E.WizardHelm:return V.Armor;case E.LargeSword:return V.Weapon;case E.LargeStaff:return V.Weapon;case E.LargeWing:return V.Weapon;case E.LargeDagger:return V.Weapon;case E.LargeBow:return V.Weapon;case E.LargeOcarina:return V.Weapon;case E.FairyClothes:return V.Armor;case E.FairyStaff:return V.Weapon;case E.FairyBoots:return V.Armor;case E.FairyGlove:return V.Armor;case E.FairyBrooch:return V.Jewelry;case E.FairyLamp:return V.Jewelry;case E.FairyWing:return V.Weapon;case E.FairyShuriken:return V.Weapon;case E.FoxKanzashi:return V.Jewelry;case E.FoxLoincloth:return V.Armor;case E.FoxMask:return V.Jewelry;case E.FoxHamayayumi:return V.Weapon;case E.FoxHat:return V.Armor;case E.FoxCoat:return V.Armor;case E.FoxBoot:return V.Armor;case E.FoxEma:return V.Jewelry;case E.DevilfishSword:return V.Weapon;case E.DevilfishWing:return V.Weapon;case E.DevilfishRecorder:return V.Weapon;case E.DevilfishArmor:return V.Armor;case E.DevilfishScarf:return V.Armor;case E.DevilfishGill:return V.Jewelry;case E.DevilfishPendant:return V.Jewelry;case E.DevilfishRing:return V.Jewelry;case E.TreantAmulet:return V.Jewelry;case E.TreantHagoita:return V.Weapon;case E.TreantChoppingBoard:return V.Armor;case E.TreantDagger:return V.Weapon;case E.TreantHaniwa:return V.Armor;case E.TreantKokeshi:return V.Jewelry;case E.TreantLamp:return V.Jewelry;case E.TreantLunchbox:return V.Jewelry;case E.FlametigerPortableHotSpring:return V.Jewelry;case E.FlametigerVolcanicShield:return V.Weapon;case E.FlametigerStripedBriefs:return V.Armor;case E.TorchOfEverburningFlametiger:return V.Weapon;case E.FlametigerCostume:return V.Armor;case E.RingOfFlametigersWrath:return V.Weapon;case E.EndlessBowlOfSpicyFlametigerRamen:return V.Jewelry;case E.ScreenOfTheSneakyFlametiger:return V.Jewelry;case E.ModifiedSword:return V.Weapon;case E.ModifiedStaff:return V.Weapon;case E.ModifiedWing:return V.Weapon;case E.ModifiedDart:return V.Weapon;case E.ModifiedBow:return V.Weapon;case E.ModifiedRecorder:return V.Weapon;case E.AncientCloak:return V.Armor;case E.AncientBelt:return V.Armor;case E.AncientShoes:return V.Armor;case E.AncientRing:return V.Jewelry;case E.AncientEarring:return V.Jewelry;default:return V.Weapon}},RarityFactor(e){switch(e){case l.Nothing:return 1;case l.HPAdder:return 1;case l.MPAdder:return 1;case l.ATKAdder:return 1;case l.MATKAdder:return 1;case l.DEFAdder:return 1;case l.MDEFAdder:return 1;case l.SPDAdder:return 5;case l.HPMultiplier:return 5;case l.MPMultiplier:return 5;case l.ATKMultiplier:return 5;case l.MATKMultiplier:return 5;case l.DEFMultiplier:return 5;case l.MDEFMultiplier:return 5;case l.ATKPropotion:return 3;case l.MATKPropotion:return 3;case l.DEFPropotion:return 3;case l.MDEFPropotion:return 3;case l.FireResistance:return 2;case l.IceResistance:return 2;case l.ThunderResistance:return 2;case l.LightResistance:return 2;case l.DarkResistance:return 2;case l.PhysicalAbsorption:return 4;case l.FireAbsorption:return 4;case l.IceAbsorption:return 4;case l.ThunderAbsorption:return 4;case l.LightAbsorption:return 4;case l.DarkAbsorption:return 4;case l.DebuffResistance:return 3;case l.EquipmentDropChance:return 10;case l.SlimeDropChance:return 10;case l.MagicSlimeDropChance:return 20;case l.SpiderDropChance:return 30;case l.BatDropChance:return 40;case l.FairyDropChance:return 50;case l.FoxDropChance:return 60;case l.DevilFishDropChance:return 70;case l.TreantDropChance:return 80;case l.FlameTigerDropChance:return 90;case l.UnicornDropChance:return 100;case l.ColorMaterialDropChance:return 10;case l.PhysicalCritical:return 2;case l.MagicalCritical:return 2;case l.EXPGain:return 10;case l.SkillProficiency:return 10;case l.EquipmentProficiency:return 10;case l.MoveSpeedMultiplier:return 10;case l.GoldGain:return 5;case l.StoneGain:return 2;case l.CrystalGain:return 2;case l.LeafGain:return 2;case l.WarriorSkillLevel:return 4;case l.WizardSkillLevel:return 4;case l.AngelSkillLevel:return 4;case l.ThiefSkillLevel:return 4;case l.ArcherSkillLevel:return 4;case l.TamerSkillLevel:return 4;case l.AllSkillLevel:return 5;case l.SlimeKnowledge:return 10;case l.MagicSlimeKnowledge:return 20;case l.SpiderKnowledge:return 30;case l.BatKnowledge:return 40;case l.FairyKnowledge:return 50;case l.FoxKnowledge:return 60;case l.DevilFishKnowledge:return 70;case l.TreantKnowledge:return 80;case l.FlameTigerKnowledge:return 90;case l.UnicornKnowledge:return 100;case l.PhysicalDamage:return 5;case l.FireDamage:return 5;case l.IceDamage:return 5;case l.ThunderDamage:return 5;case l.LightDamage:return 5;case l.DarkDamage:return 5;case l.HpRegen:return 10;case l.MpRegen:return 10;case l.TamingPoint:return 10;case l.WarriorSkillRange:return 200;case l.WizardSkillRange:return 200;case l.AngelSkillRange:return 200;case l.ThiefSkillRange:return 200;case l.ArcherSkillRange:return 200;case l.TamerSkillRange:return 200;case l.TownMatGain:return 100;case l.TownMatAreaClearGain:return 100;case l.RebirthPointGain1:return 100;case l.RebirthPointGain2:return 100;case l.RebirthPointGain3:return 100;case l.CriticalDamage:return 10;case l.BlessingEffect:return 100;case l.MoveSpeedAdder:return 3;case l.PetEXPGain:return 10;case l.LoyaltyPointGain:return 10;case l.CatalystDoubleCriticalChance:return 100;case l.WarriorSkillEffectRange:return 400;case l.WizardSkillEffectRange:return 400;case l.AngelSkillEffectRange:return 400;case l.ThiefSkillEffectRange:return 400;case l.ArcherSkillEffectRange:return 400;case l.TamerSkillEffectRange:return 400;case l.HpRegenMultiplier:return 200;case l.MpRegenMultiplier:return 250;case l.ArmoredFury:return 500;case l.WardedFury:return 500;case l.PetPhysicalCriticalChance:return 60;case l.PetMagicalCriticalChance:return 60;case l.PetCriticalDamage:return 80;case l.PetDebuffResistance:return 100;case l.StoneTownResearchPower:return 400;case l.CrystalTownResearchPower:return 400;case l.LeafTownResearchPower:return 400;case l.GuildEXPGain:return 800;case l.SPDMultiplier:return 400;case l.CriticalDamageMultiplier:return 250;case l.SkillProficiencyMultiplier:return 200;case l.EquipmentProficiencyMultiplier:return 300;case l.EXPGainMultiplier:return 200;case l.GoldGainMultiplier:return 200;case l.PhysicalDamageMultiplier:return 200;case l.FireDamageMultiplier:return 200;case l.IceDamageMultiplier:return 200;case l.ThunderDamageMultiplier:return 200;case l.LightDamageMultiplier:return 200;case l.DarkDamageMultiplier:return 200;case l.TamingPointMultiplier:return 200;case l.PetEXPGainMultiplier:return 200;case l.LoyaltyPointGainMultiplier:return 300;case l.BlessingEffectMultiplier:return 400;case l.PhysicalCriticalMultiplier:return 60;case l.MagicalCriticalMultiplier:return 60;case l.ChallengeBossKnowledge:return 1e3;case l.HPAfter:return 10;case l.MPAfter:return 10;case l.ATKAfter:return 10;case l.MATKAfter:return 10;case l.DEFAfter:return 10;case l.MDEFAfter:return 10;case l.SPDAfter:return 10;case l.MoveSpeedAfter:return 50;case l.PhysicalCriticalAfter:return 40;case l.MagicalCriticalAfter:return 40;case l.CriticalDamageAfter:return 50;case l.DebuffResistanceAfter:return 30;case l.PhysicalDamageAfter:return 60;case l.FireDamageAfter:return 60;case l.IceDamageAfter:return 60;case l.ThunderDamageAfter:return 60;case l.LightDamageAfter:return 60;case l.DarkDamageAfter:return 60;case l.FireResistanceAfter:return 20;case l.IceResistanceAfter:return 20;case l.ThunderResistanceAfter:return 20;case l.LightResistanceAfter:return 20;case l.DarkResistanceAfter:return 20;case l.SlimeKnowledgeAfter:return 20;case l.MagicSlimeKnowledgeAfter:return 40;case l.SpiderKnowledgeAfter:return 60;case l.BatKnowledgeAfter:return 80;case l.FairyKnowledgeAfter:return 100;case l.FoxKnowledgeAfter:return 120;case l.DevilFishKnowledgeAfter:return 140;case l.TreantKnowledgeAfter:return 160;case l.FlameTigerKnowledgeAfter:return 180;case l.UnicornKnowledgeAfter:return 200;case l.ChallengeBossKnowledgeAfter:return 250;case l.SDDamageMultiplier:return 100;case l.SDDamageCutMultiplier:return 100;case l.FameGain:return 800;case l.DungeonCoinGain:return 1e3;case l.ExtraAfterDamage:return 1e3;default:return 1e3}},MaxLevel(e){switch(e){case l.HPAdder:return 10;case l.MPAdder:return 10;case l.ATKAdder:return 10;case l.MATKAdder:return 10;case l.DEFAdder:return 10;case l.MDEFAdder:return 10;case l.SPDAdder:return 10;case l.HPMultiplier:return 5;case l.MPMultiplier:return 5;case l.ATKMultiplier:return 5;case l.MATKMultiplier:return 5;case l.DEFMultiplier:return 5;case l.MDEFMultiplier:return 5;case l.ATKPropotion:return 5;case l.MATKPropotion:return 5;case l.DEFPropotion:return 5;case l.MDEFPropotion:return 5;case l.FireResistance:return 10;case l.IceResistance:return 10;case l.ThunderResistance:return 10;case l.LightResistance:return 10;case l.DarkResistance:return 10;case l.PhysicalAbsorption:return 2;case l.FireAbsorption:return 2;case l.IceAbsorption:return 2;case l.ThunderAbsorption:return 2;case l.LightAbsorption:return 2;case l.DarkAbsorption:return 2;case l.DebuffResistance:return 5;case l.EquipmentDropChance:return 10;case l.SlimeDropChance:return 10;case l.MagicSlimeDropChance:return 10;case l.SpiderDropChance:return 10;case l.BatDropChance:return 10;case l.FairyDropChance:return 10;case l.FoxDropChance:return 10;case l.DevilFishDropChance:return 10;case l.TreantDropChance:return 10;case l.FlameTigerDropChance:return 10;case l.UnicornDropChance:return 10;case l.ColorMaterialDropChance:return 10;case l.PhysicalCritical:return 2;case l.MagicalCritical:return 2;case l.EXPGain:return 10;case l.SkillProficiency:return 10;case l.EquipmentProficiency:return 10;case l.MoveSpeedMultiplier:return 10;case l.GoldGain:return 5;case l.StoneGain:return 10;case l.CrystalGain:return 10;case l.LeafGain:return 10;case l.WarriorSkillLevel:return 10;case l.WizardSkillLevel:return 10;case l.AngelSkillLevel:return 10;case l.ThiefSkillLevel:return 10;case l.ArcherSkillLevel:return 10;case l.TamerSkillLevel:return 10;case l.AllSkillLevel:return 10;case l.SlimeKnowledge:return 10;case l.MagicSlimeKnowledge:return 10;case l.SpiderKnowledge:return 10;case l.BatKnowledge:return 10;case l.FairyKnowledge:return 10;case l.FoxKnowledge:return 10;case l.DevilFishKnowledge:return 10;case l.TreantKnowledge:return 10;case l.FlameTigerKnowledge:return 10;case l.UnicornKnowledge:return 10;case l.PhysicalDamage:return 10;case l.FireDamage:return 10;case l.IceDamage:return 10;case l.ThunderDamage:return 10;case l.LightDamage:return 10;case l.DarkDamage:return 10;case l.HpRegen:return 5;case l.MpRegen:return 5;case l.TamingPoint:return 10;case l.WarriorSkillRange:return 2;case l.WizardSkillRange:return 2;case l.AngelSkillRange:return 2;case l.ThiefSkillRange:return 2;case l.ArcherSkillRange:return 2;case l.TamerSkillRange:return 2;case l.TownMatGain:return 10;case l.TownMatAreaClearGain:return 10;case l.RebirthPointGain1:return 10;case l.RebirthPointGain2:return 10;case l.RebirthPointGain3:return 10;case l.CriticalDamage:return 2;case l.BlessingEffect:return 10;case l.MoveSpeedAdder:return 10;case l.PetEXPGain:return 10;case l.LoyaltyPointGain:return 10;case l.CatalystDoubleCriticalChance:return 10;case l.WarriorSkillEffectRange:return 2;case l.WizardSkillEffectRange:return 2;case l.AngelSkillEffectRange:return 2;case l.ThiefSkillEffectRange:return 2;case l.ArcherSkillEffectRange:return 2;case l.TamerSkillEffectRange:return 2;case l.HpRegenMultiplier:return 5;case l.MpRegenMultiplier:return 5;case l.ArmoredFury:return 10;case l.WardedFury:return 10;case l.PetPhysicalCriticalChance:return 2;case l.PetMagicalCriticalChance:return 2;case l.PetCriticalDamage:return 2;case l.PetDebuffResistance:return 5;case l.StoneTownResearchPower:return 10;case l.CrystalTownResearchPower:return 10;case l.LeafTownResearchPower:return 10;case l.GuildEXPGain:return 10;case l.SPDMultiplier:return 5;case l.CriticalDamageMultiplier:return 5;case l.SkillProficiencyMultiplier:return 5;case l.EquipmentProficiencyMultiplier:return 5;case l.EXPGainMultiplier:return 5;case l.GoldGainMultiplier:return 5;case l.PhysicalDamageMultiplier:return 5;case l.FireDamageMultiplier:return 5;case l.IceDamageMultiplier:return 5;case l.ThunderDamageMultiplier:return 5;case l.LightDamageMultiplier:return 5;case l.DarkDamageMultiplier:return 5;case l.TamingPointMultiplier:return 5;case l.PetEXPGainMultiplier:return 5;case l.LoyaltyPointGainMultiplier:return 5;case l.BlessingEffectMultiplier:return 5;case l.PhysicalCriticalMultiplier:return 2;case l.MagicalCriticalMultiplier:return 2;case l.ChallengeBossKnowledge:return 10;case l.HPAfter:return 10;case l.MPAfter:return 10;case l.ATKAfter:return 10;case l.MATKAfter:return 10;case l.DEFAfter:return 10;case l.MDEFAfter:return 10;case l.SPDAfter:return 10;case l.MoveSpeedAfter:return 10;case l.PhysicalCriticalAfter:return 10;case l.MagicalCriticalAfter:return 10;case l.CriticalDamageAfter:return 10;case l.DebuffResistanceAfter:return 10;case l.PhysicalDamageAfter:return 10;case l.FireDamageAfter:return 10;case l.IceDamageAfter:return 10;case l.ThunderDamageAfter:return 10;case l.LightDamageAfter:return 10;case l.DarkDamageAfter:return 10;case l.FireResistanceAfter:return 10;case l.IceResistanceAfter:return 10;case l.ThunderResistanceAfter:return 10;case l.LightResistanceAfter:return 10;case l.DarkResistanceAfter:return 10;case l.SlimeKnowledgeAfter:return 10;case l.MagicSlimeKnowledgeAfter:return 10;case l.SpiderKnowledgeAfter:return 10;case l.BatKnowledgeAfter:return 10;case l.FairyKnowledgeAfter:return 10;case l.FoxKnowledgeAfter:return 10;case l.DevilFishKnowledgeAfter:return 10;case l.TreantKnowledgeAfter:return 10;case l.FlameTigerKnowledgeAfter:return 10;case l.UnicornKnowledgeAfter:return 10;case l.ChallengeBossKnowledgeAfter:return 10;case l.SDDamageMultiplier:return 10;case l.SDDamageCutMultiplier:return 10;case l.FameGain:return 10;case l.DungeonCoinGain:return 10;case l.ExtraAfterDamage:return 10;default:return 2}},EffectCalculation(e,t){switch(e){case l.HPAdder:return 10*Math.pow(t,2);case l.MPAdder:return 5*Math.pow(t,2);case l.ATKAdder:return Math.pow(t,2);case l.MATKAdder:return Math.pow(t,2);case l.DEFAdder:return Math.pow(t,2);case l.MDEFAdder:return Math.pow(t,2);case l.SPDAdder:return Math.pow(t,2);case l.HPMultiplier:return .5*t*(t+1)/100;case l.MPMultiplier:return .5*t*(t+1)/100;case l.ATKMultiplier:return .5*t*(t+1)/100;case l.MATKMultiplier:return .5*t*(t+1)/100;case l.DEFMultiplier:return .5*t*(t+1)/100;case l.MDEFMultiplier:return .5*t*(t+1)/100;case l.ATKPropotion:return 10*t/100;case l.MATKPropotion:return 10*t/100;case l.DEFPropotion:return 10*t/100;case l.MDEFPropotion:return 10*t/100;case l.FireResistance:return 2*t/100;case l.IceResistance:return 2*t/100;case l.ThunderResistance:return 2*t/100;case l.LightResistance:return 2*t/100;case l.DarkResistance:return 2*t/100;case l.PhysicalAbsorption:return Math.pow(t,2)/100;case l.FireAbsorption:return Math.pow(t,2)/100;case l.IceAbsorption:return Math.pow(t,2)/100;case l.ThunderAbsorption:return Math.pow(t,2)/100;case l.LightAbsorption:return Math.pow(t,2)/100;case l.DarkAbsorption:return Math.pow(t,2)/100;case l.DebuffResistance:return 5*t/100;case l.EquipmentDropChance:return 1e-4*t*(t+1)/100;case l.SlimeDropChance:return .01*t*(t+1)/100;case l.MagicSlimeDropChance:return .01*t*(t+1)/100;case l.SpiderDropChance:return .01*t*(t+1)/100;case l.BatDropChance:return .01*t*(t+1)/100;case l.FairyDropChance:return .01*t*(t+1)/100;case l.FoxDropChance:return .01*t*(t+1)/100;case l.DevilFishDropChance:return .01*t*(t+1)/100;case l.TreantDropChance:return .01*t*(t+1)/100;case l.FlameTigerDropChance:return .01*t*(t+1)/100;case l.UnicornDropChance:return .01*t*(t+1)/100;case l.ColorMaterialDropChance:return 1e-4*t*(t+1)/100;case l.PhysicalCritical:return 3*t/100;case l.MagicalCritical:return 3*t/100;case l.EXPGain:return 1*t*(t+1)/100;case l.SkillProficiency:return .5*t*(t+1)/100;case l.EquipmentProficiency:return .25*t*(t+1)/100;case l.MoveSpeedMultiplier:return .1*t*(t+1)/100;case l.GoldGain:return t*(t+1)/100;case l.StoneGain:return 5*Math.pow(t,2)/100;case l.CrystalGain:return 5*Math.pow(t,2)/100;case l.LeafGain:return 5*Math.pow(t,2)/100;case l.WarriorSkillLevel:return 2*t;case l.WizardSkillLevel:return 2*t;case l.AngelSkillLevel:return 2*t;case l.ThiefSkillLevel:return 2*t;case l.ArcherSkillLevel:return 2*t;case l.TamerSkillLevel:return 2*t;case l.AllSkillLevel:return t;case l.SlimeKnowledge:return .5*t*(t+1)/100;case l.MagicSlimeKnowledge:return .5*t*(t+1)/100;case l.SpiderKnowledge:return .5*t*(t+1)/100;case l.BatKnowledge:return .5*t*(t+1)/100;case l.FairyKnowledge:return .5*t*(t+1)/100;case l.FoxKnowledge:return .5*t*(t+1)/100;case l.DevilFishKnowledge:return .5*t*(t+1)/100;case l.TreantKnowledge:return .5*t*(t+1)/100;case l.FlameTigerKnowledge:return .5*t*(t+1)/100;case l.UnicornKnowledge:return .5*t*(t+1)/100;case l.PhysicalDamage:return .5*t*(t+1)/100;case l.FireDamage:return .5*t*(t+1)/100;case l.IceDamage:return .5*t*(t+1)/100;case l.ThunderDamage:return .5*t*(t+1)/100;case l.LightDamage:return .5*t*(t+1)/100;case l.DarkDamage:return .5*t*(t+1)/100;case l.HpRegen:return 10*t;case l.MpRegen:return 10*t*(t+1);case l.TamingPoint:return .05*t;case l.WarriorSkillRange:return .002*t;case l.WizardSkillRange:return .002*t;case l.AngelSkillRange:return .002*t;case l.ThiefSkillRange:return .002*t;case l.ArcherSkillRange:return .002*t;case l.TamerSkillRange:return .002*t;case l.TownMatGain:return .01*t;case l.TownMatAreaClearGain:return t;case l.RebirthPointGain1:return .01*t;case l.RebirthPointGain2:return .01*t;case l.RebirthPointGain3:return .01*t;case l.CriticalDamage:return 5*t*(t+1)/100;case l.BlessingEffect:return .01*t;case l.MoveSpeedAdder:return t*(t+1)/2;case l.PetEXPGain:return .05*t;case l.LoyaltyPointGain:return .05*t;case l.CatalystDoubleCriticalChance:return .005*t;case l.WarriorSkillEffectRange:return .002*t;case l.WizardSkillEffectRange:return .002*t;case l.AngelSkillEffectRange:return .002*t;case l.ThiefSkillEffectRange:return .002*t;case l.ArcherSkillEffectRange:return .002*t;case l.TamerSkillEffectRange:return .002*t;case l.HpRegenMultiplier:return .005*t*(t+1)*.01;case l.MpRegenMultiplier:return .005*t*(t+1)*.01;case l.ArmoredFury:return .1*t*.01;case l.WardedFury:return .1*t*.01;case l.PetPhysicalCriticalChance:return 3*t*.01;case l.PetMagicalCriticalChance:return 3*t*.01;case l.PetCriticalDamage:return 5*t*(t+1)*.01;case l.PetDebuffResistance:return 5*t*.01;case l.StoneTownResearchPower:return .025*t*(t+1)*.01;case l.CrystalTownResearchPower:return .025*t*(t+1)*.01;case l.LeafTownResearchPower:return .025*t*(t+1)*.01;case l.GuildEXPGain:return .002*t*(t+1)*.01;case l.SPDMultiplier:return .5*t*(t+1)/100;case l.CriticalDamageMultiplier:return .5*t*(t+1)/100;case l.SkillProficiencyMultiplier:return .5*t*(t+1)/100;case l.EquipmentProficiencyMultiplier:return .25*t*(t+1)/100;case l.EXPGainMultiplier:return .25*t*(t+1)/100;case l.GoldGainMultiplier:return .25*t*(t+1)/100;case l.PhysicalDamageMultiplier:return .25*t*(t+1)/100;case l.FireDamageMultiplier:return .25*t*(t+1)/100;case l.IceDamageMultiplier:return .25*t*(t+1)/100;case l.ThunderDamageMultiplier:return .25*t*(t+1)/100;case l.LightDamageMultiplier:return .25*t*(t+1)/100;case l.DarkDamageMultiplier:return .25*t*(t+1)/100;case l.TamingPointMultiplier:return .5*t*(t+1)/100;case l.PetEXPGainMultiplier:return .5*t*(t+1)/100;case l.LoyaltyPointGainMultiplier:return .5*t*(t+1)/100;case l.BlessingEffectMultiplier:return .05*t*(t+1)/100;case l.PhysicalCriticalMultiplier:return 2*t/100;case l.MagicalCriticalMultiplier:return 2*t/100;case l.ChallengeBossKnowledge:return .2*t*(t+1)/100;case l.HPAfter:return 12.5*t*(t+1);case l.MPAfter:return 10*t*(t+1);case l.ATKAfter:return 5*t*(t+1);case l.MATKAfter:return 5*t*(t+1);case l.DEFAfter:return 5*t*(t+1);case l.MDEFAfter:return 5*t*(t+1);case l.SPDAfter:return 5*t*(t+1);case l.MoveSpeedAfter:return .5*t*(t+1);case l.PhysicalCriticalAfter:return .1*t*.01;case l.MagicalCriticalAfter:return .1*t*.01;case l.CriticalDamageAfter:return t*(t+1)*.01;case l.DebuffResistanceAfter:return .1*t*.01;case l.PhysicalDamageAfter:return 10*t*(t+1)*.01;case l.FireDamageAfter:return 10*t*(t+1)*.01;case l.IceDamageAfter:return 10*t*(t+1)*.01;case l.ThunderDamageAfter:return 10*t*(t+1)*.01;case l.LightDamageAfter:return 10*t*(t+1)*.01;case l.DarkDamageAfter:return 10*t*(t+1)*.01;case l.FireResistanceAfter:return .1*t*.01;case l.IceResistanceAfter:return .1*t*.01;case l.ThunderResistanceAfter:return .1*t*.01;case l.LightResistanceAfter:return .1*t*.01;case l.DarkResistanceAfter:return .1*t*.01;case l.SlimeKnowledgeAfter:return 10*t*(t+1)*.01;case l.MagicSlimeKnowledgeAfter:return 10*t*(t+1)*.01;case l.SpiderKnowledgeAfter:return 10*t*(t+1)*.01;case l.BatKnowledgeAfter:return 10*t*(t+1)*.01;case l.FairyKnowledgeAfter:return 10*t*(t+1)*.01;case l.FoxKnowledgeAfter:return 10*t*(t+1)*.01;case l.DevilFishKnowledgeAfter:return 10*t*(t+1)*.01;case l.TreantKnowledgeAfter:return 10*t*(t+1)*.01;case l.FlameTigerKnowledgeAfter:return 10*t*(t+1)*.01;case l.UnicornKnowledgeAfter:return 10*t*(t+1)*.01;case l.ChallengeBossKnowledgeAfter:return 10*t*(t+1)*.01;case l.SDDamageMultiplier:return 2.5*t*(t+1)*.01;case l.SDDamageCutMultiplier:return 2.5*t*(t+1)*.01;case l.FameGain:return .1*t*(t+1)*.01;case l.DungeonCoinGain:return .01*t*(t+1)*.01;case l.ExtraAfterDamage:return .01*t*(t+1)*.01;default:return 0}},RequiredLevelIncrement(e,t){return e==l.Nothing?0:Math.floor(25/this.MaxLevel(e))*t*this.RarityFactor(e)},IsAfter(e){switch(e){case l.HPAfter:return!0;case l.MPAfter:return!0;case l.ATKAfter:return!0;case l.MATKAfter:return!0;case l.DEFAfter:return!0;case l.MDEFAfter:return!0;case l.SPDAfter:return!0;case l.MoveSpeedAfter:return!0;case l.PhysicalCriticalAfter:return!0;case l.MagicalCriticalAfter:return!0;case l.CriticalDamageAfter:return!0;case l.DebuffResistanceAfter:return!0;case l.PhysicalDamageAfter:return!0;case l.FireDamageAfter:return!0;case l.IceDamageAfter:return!0;case l.ThunderDamageAfter:return!0;case l.LightDamageAfter:return!0;case l.DarkDamageAfter:return!0;case l.FireResistanceAfter:return!0;case l.IceResistanceAfter:return!0;case l.ThunderResistanceAfter:return!0;case l.LightResistanceAfter:return!0;case l.DarkResistanceAfter:return!0;case l.SlimeKnowledgeAfter:return!0;case l.MagicSlimeKnowledgeAfter:return!0;case l.SpiderKnowledgeAfter:return!0;case l.BatKnowledgeAfter:return!0;case l.FairyKnowledgeAfter:return!0;case l.FoxKnowledgeAfter:return!0;case l.DevilFishKnowledgeAfter:return!0;case l.TreantKnowledgeAfter:return!0;case l.FlameTigerKnowledgeAfter:return!0;case l.UnicornKnowledgeAfter:return!0;case l.ChallengeBossKnowledgeAfter:return!0;case l.SDDamageMultiplier:return!0;case l.SDDamageCutMultiplier:return!0;case l.FameGain:return!0;case l.DungeonCoinGain:return!0;case l.ExtraAfterDamage:return!0;default:return!1}},MaxEffectValue(e){switch(e){case _e.IncreaseProficiencyGain:return 100;case _e.IncreaseEffect:return 10;case _e.PurifyCurseEffect:return 1;case _e.IncreaseEffectIncrement:return 1;case _e.EqLevel:return 100;default:return 1e9}}},zr="GlobalStore",c1={version:"0.0.0",heroStatsTabSelected:0,rubyShard:{ticket:0,failure:0,dungeon:0,modifier:0,floor:100},dropChance:{level:0,sdchance:1},guild:{targetLevel:0,expPerHour:0},talisman:{perWA:Array(47).fill(0)},expedition:{playtime:0}},Pi=Tr(zr,{state:()=>Jl(zr,c1,localStorage,{mergeDefaults:!0}),actions:{set(e){console.log(e)},increment(){this.count++},checkVersion(){const[e,t,i]=this.version.split("."),[r,h,c]=pl.version.split(".");return e<r||t<h||i<c},updateVersion(){this.version=pl.version},Save(){localStorage.setItem(zr,JSON.stringify(this))}}}),o1=oe({__name:"drop-chance",setup(e){const t=Pi().dropChance;function i(){const r=t.level,h=t.sdchance;let c=[],m=[];for(let k=0;k<W.EquipmentEffectKind;k++){let P=k,D=0;r>=zt.RequiredLevelIncrement(P,1)&&(D=zt.IsAfter(P)?h/zt.RarityFactor(P):10/zt.RarityFactor(P)),m.push(D)}let w=0;for(let k=0;k<m.length;k++)w+=m[k];for(let k=0;k<m.length;k++)m[k]*=1/w,c.push({kind:l[k],chance:m[k]});return c}return(r,h)=>(b(),B(K,null,[j(" Mob Level: "),Le(g("input",{"onUpdate:modelValue":h[0]||(h[0]=c=>A(t).level=c)},null,512),[[tt,A(t).level,void 0,{number:!0}]]),j(" SD Enchant Chance: "),Le(g("input",{"onUpdate:modelValue":h[1]||(h[1]=c=>A(t).sdchance=c)},null,512),[[tt,A(t).sdchance,void 0,{number:!0}]]),j(" (value from 1 - 2) "),g("table",null,[(b(!0),B(K,null,he(i(),c=>(b(),B("tr",null,[g("td",null,T(c.kind),1),g("td",null,T(A(f).percent(c.chance,5)),1)]))),256))])],64))}}),f1=Ft(o1,[["__scopeId","data-v-6519a2ab"]]),p1={meta:{name:"Drop Chance",root:!0}};function d1(e){switch(e){case l.Nothing:return"Enchant Slot";case l.HPAdder:return"HP Adder";case l.MPAdder:return"MP Adder";case l.ATKAdder:return"ATK Adder";case l.MATKAdder:return"MATK Adder";case l.DEFAdder:return"DEF Adder";case l.MDEFAdder:return"MDEF Adder";case l.SPDAdder:return"SPD Adder";case l.HPMultiplier:return"HP Multiplier";case l.MPMultiplier:return"MP Multiplier";case l.ATKMultiplier:return"ATK Multiplier";case l.MATKMultiplier:return"MATK Multiplier";case l.DEFMultiplier:return"DEF Multiplier";case l.MDEFMultiplier:return"MDEF Multiplier";case l.ATKPropotion:return"ATK Proportion";case l.MATKPropotion:return"MATK Proportion";case l.DEFPropotion:return"DEF Proportion";case l.MDEFPropotion:return"MDEF Proportion";case l.FireResistance:return"Fire Resistance";case l.IceResistance:return"Ice Resistance";case l.ThunderResistance:return"Thunder Resistance";case l.LightResistance:return"Light Resistance";case l.DarkResistance:return"Dark Resistance";case l.PhysicalAbsorption:return"Physical Absorption";case l.FireAbsorption:return"Fire Absorption";case l.IceAbsorption:return"Ice Absorption";case l.ThunderAbsorption:return"Thunder Absorption";case l.LightAbsorption:return"Light Absorption";case l.DarkAbsorption:return"Dark Absorption";case l.DebuffResistance:return"Debuff Resistance";case l.EquipmentDropChance:return"Equipment Drop";case l.SlimeDropChance:return"Slime Drop";case l.MagicSlimeDropChance:return"Magicslime Drop";case l.SpiderDropChance:return"Spider Drop";case l.BatDropChance:return"Bat Drop";case l.FairyDropChance:return"Fairy Drop";case l.FoxDropChance:return"Fox Drop";case l.DevilFishDropChance:return"Devilfish Drop";case l.TreantDropChance:return"Treant Drop";case l.FlameTigerDropChance:return"Flametiger Drop";case l.UnicornDropChance:return"Unicorn Drop";case l.ColorMaterialDropChance:return"Rare Material Drop";case l.PhysicalCritical:return"Physical Critical";case l.MagicalCritical:return"Magical Critical";case l.EXPGain:return"EXP Gain";case l.SkillProficiency:return"Skill Proficiency";case l.EquipmentProficiency:return"Equipment Proficiency";case l.MoveSpeedMultiplier:return"Move Speed Multiplier";case l.GoldGain:return"Gold Gain";case l.StoneGain:return"Stone Gain";case l.CrystalGain:return"Crystal Gain";case l.LeafGain:return"Leaf Gain";case l.WarriorSkillLevel:return"Warrior Skill";case l.WizardSkillLevel:return"Wizard Skill";case l.AngelSkillLevel:return"Angel Skill";case l.ThiefSkillLevel:return"Thief Skill";case l.ArcherSkillLevel:return"Archer Skill";case l.TamerSkillLevel:return"Tamer Skill";case l.AllSkillLevel:return"All Skill";case l.SlimeKnowledge:return"Slime Knowledge";case l.MagicSlimeKnowledge:return"Magicslime Knowledge";case l.SpiderKnowledge:return"Spider Knowledge";case l.BatKnowledge:return"Bat Knowledge";case l.FairyKnowledge:return"Fairy Knowledge";case l.FoxKnowledge:return"Fox Knowledge";case l.DevilFishKnowledge:return"Devilfish Knowledge";case l.TreantKnowledge:return"Treant Knowledge";case l.FlameTigerKnowledge:return"Flametiger Knowledge";case l.UnicornKnowledge:return"Unicorn Knowledge";case l.PhysicalDamage:return"Physical Damage";case l.FireDamage:return"Fire Damage";case l.IceDamage:return"Ice Damage";case l.ThunderDamage:return"Thunder Damage";case l.LightDamage:return"Light Damage";case l.DarkDamage:return"Dark Damage";case l.HpRegen:return"HP Regeneration";case l.MpRegen:return"MP Regeneration";case l.TamingPoint:return"Taming Point";case l.WarriorSkillRange:return"Warrior Skill Range";case l.WizardSkillRange:return"Wizard Skill Range";case l.AngelSkillRange:return"Angel Skill Range";case l.ThiefSkillRange:return"Thief Skill Range";case l.ArcherSkillRange:return"Archer Skill Range";case l.TamerSkillRange:return"Tamer Skill Range";case l.TownMatGain:return"Town Material Gain";case l.TownMatAreaClearGain:return"Area Town Material";case l.RebirthPointGain1:return"Tier 1 Rebirth PoGain";case l.RebirthPointGain2:return"Tier 2 Rebirth PoGain";case l.RebirthPointGain3:return"Tier 3 Rebirth PoGain";case l.CriticalDamage:return"Critical Damage";case l.BlessingEffect:return"Blessing Effect";case l.MoveSpeedAdder:return"Move Speed Adder";case l.PetEXPGain:return"Pet EXP Gain";case l.LoyaltyPointGain:return"Loyalty Point Gain";case l.CatalystDoubleCriticalChance:return"Catalyst Double Critical";case l.WarriorSkillEffectRange:return"Warrior Area of Effect";case l.WizardSkillEffectRange:return"Wizard Area of Effect";case l.AngelSkillEffectRange:return"Angel Area of Effect";case l.ThiefSkillEffectRange:return"Thief Area of Effect";case l.ArcherSkillEffectRange:return"Archer Area of Effect";case l.TamerSkillEffectRange:return"Tamer Area of Effect";case l.HpRegenMultiplier:return"HP Regen Multiplier";case l.MpRegenMultiplier:return"MP Regen Multiplier";case l.ArmoredFury:return"Armored Fury";case l.WardedFury:return"Warded Fury";case l.PetPhysicalCriticalChance:return"Pet Physical Critical Chance";case l.PetMagicalCriticalChance:return"Pet Magical Critical Chance";case l.PetCriticalDamage:return"Pet Critical Damage";case l.PetDebuffResistance:return"Pet Debuff Resistance";case l.StoneTownResearchPower:return"Stone Research Power";case l.CrystalTownResearchPower:return"Crystal Research Power";case l.LeafTownResearchPower:return"Leaf Research Power";case l.GuildEXPGain:return"Guild EXP Gain";case l.SPDMultiplier:return"SPD Multiplier";case l.CriticalDamageMultiplier:return"Critical Damage Multiplier";case l.SkillProficiencyMultiplier:return"Skill Proficiency Multiplier";case l.EquipmentProficiencyMultiplier:return"Equipment Proficiency Multiplier";case l.EXPGainMultiplier:return"EXP Gain Multiplier";case l.GoldGainMultiplier:return"Gold Gain Multiplier";case l.PhysicalDamageMultiplier:return"Physical Damage Multiplier";case l.FireDamageMultiplier:return"Fire Damage Multiplier";case l.IceDamageMultiplier:return"Ice Damage Multiplier";case l.ThunderDamageMultiplier:return"Thunder Damage Multiplier";case l.LightDamageMultiplier:return"Light Damage Multiplier";case l.DarkDamageMultiplier:return"Dark Damage Multiplier";case l.TamingPointMultiplier:return"Taming Point Multiplier";case l.PetEXPGainMultiplier:return"Pet EXP Gain Multiplier";case l.LoyaltyPointGainMultiplier:return"Loyalty Point Gain Multiplier";case l.BlessingEffectMultiplier:return"Blessing Effect Multiplier";case l.PhysicalCriticalMultiplier:return"Physical Critical Multiplier";case l.MagicalCriticalMultiplier:return"Magical Critical Multiplier";case l.ChallengeBossKnowledge:return"Challenge Boss Knowledge";case l.HPAfter:return"HP After";case l.MPAfter:return"MP After";case l.ATKAfter:return"ATK After";case l.MATKAfter:return"MATK After";case l.DEFAfter:return"DEF After";case l.MDEFAfter:return"MDEF After";case l.SPDAfter:return"SPD After";case l.MoveSpeedAfter:return"Move Speed After";case l.PhysicalCriticalAfter:return"Physical Critical After";case l.MagicalCriticalAfter:return"Magical Critical After";case l.CriticalDamageAfter:return"Critical Damage After";case l.DebuffResistanceAfter:return"Debuff Resistance After";case l.PhysicalDamageAfter:return"Physical Damage After";case l.FireDamageAfter:return"Fire Damage After";case l.IceDamageAfter:return"Ice Damage After";case l.ThunderDamageAfter:return"Thunder Damage After";case l.LightDamageAfter:return"Light Damage After";case l.DarkDamageAfter:return"Dark Damage After";case l.FireResistanceAfter:return"Fire Resistance After";case l.IceResistanceAfter:return"Ice Resistance After";case l.ThunderResistanceAfter:return"Thunder Resistance After";case l.LightResistanceAfter:return"Light Resistance After";case l.DarkResistanceAfter:return"Dark Resistance After";case l.SlimeKnowledgeAfter:return"Slime Knowledge After";case l.MagicSlimeKnowledgeAfter:return"Magicslime Knowledge After";case l.SpiderKnowledgeAfter:return"Spider Knowledge After";case l.BatKnowledgeAfter:return"Bat Knowledge After";case l.FairyKnowledgeAfter:return"Fairy Knowledge After";case l.FoxKnowledgeAfter:return"Fox Knowledge After";case l.DevilFishKnowledgeAfter:return"Devilfish Knowledge After";case l.TreantKnowledgeAfter:return"Treant Knowledge After";case l.FlameTigerKnowledgeAfter:return"Flametiger Knowledge After";case l.UnicornKnowledgeAfter:return"Unicorn Knowledge After";case l.ChallengeBossKnowledgeAfter:return"Challenge Boss Knowledge After";case l.SDDamageMultiplier:return"SD Damage Multiplier";case l.SDDamageCutMultiplier:return"SD Damage Cut Multiplier";case l.FameGain:return"Fame Gain";case l.DungeonCoinGain:return"Dungeon Coin Gain";case l.ExtraAfterDamage:return"Extra After Damage";default:return e}}function g1(e){switch(e){case E.Nothing:return"Nothing";case E.DullSword:return"Dull Sword";case E.BrittleStaff:return"Brittle Staff";case E.FlimsyWing:return"Flimsy Wing";case E.WornDart:return"Worn Dart";case E.SmallBow:return"Small Bow";case E.WoodenRecorder:return"Wooden Recorder";case E.OldCloak:return"Old Cloak";case E.BlueHat:return"Blue Hat";case E.OrangeHat:return"Orange Hat";case E.TShirt:return"T-shirt";case E.ClothGlove:return"Cloth Gloves";case E.BlueTShirt:return"Blue T-shirt";case E.OrangeTShirt:return"Orange T-shirt";case E.ClothBelt:return"Cloth Belt";case E.ClothShoes:return"Cloth Shoes";case E.IronRing:return"Iron Ring";case E.PearlEarring:return"Pearl Earring";case E.FireBrooch:return"Fire Brooch";case E.IceBrooch:return"Ice Brooch";case E.ThunderBrooch:return"Thunder Brooch";case E.LightBrooch:return"Light Brooch";case E.DarkBrooch:return"Dark Brooch";case E.WoodenShield:return"Wooden Shield";case E.LongSword:return"Long Sword";case E.LongStaff:return"Long Staff";case E.WarmWing:return"Warm Wing";case E.DualDagger:return"Dual Dagger";case E.ReinforcedBow:return"Reinforced Bow";case E.Flute:return"Flute";case E.FireStaff:return"Fire Staff";case E.IceStaff:return"Ice Staff";case E.ThunderStaff:return"Thunder Staff";case E.LeatherBelt:return"Leather Belt";case E.LeatherShoes:return"Leather Shoes";case E.WarmCloak:return"Warm Cloak";case E.LeatherArmor:return"Leather Armor";case E.LeatherGlove:return"Leather Gloves";case E.LeatherShield:return"Leather Shield";case E.FireRing:return"Fire Ring";case E.IceRing:return"Ice Ring";case E.ThunderRing:return"Thunder Ring";case E.LightRing:return"Light Ring";case E.DarkRing:return"Dark Ring";case E.EnhancedFireBrooch:return"Enhanced Fire Brooch";case E.EnhancedIceBrooch:return"Enhanced Ice Brooch";case E.EnhancedThunderBrooch:return"Enhanced Thunder Brooch";case E.EnhancedLightBrooch:return"Enhanced Light Brooch";case E.EnhancedDarkBrooch:return"Enhanced Dark Brooch";case E.BattleSword:return"Battle Sword";case E.BattleStaff:return"Battle Staff";case E.BattleWing:return"Battle Wing";case E.BattleDagger:return"Battle Dagger";case E.BattleBow:return"Battle Bow";case E.BattleRecorder:return"Battle Flute";case E.SlimeSword:return"Slime Sword";case E.SlimeGlove:return"Slime Gloves";case E.SlimeRing:return"Slime Ring";case E.SlimeBelt:return"Slime Belt";case E.SlimePincenez:return"Slime Pince-nez";case E.SlimeWing:return"Slime Wing";case E.SlimePoncho:return"Slime Poncho";case E.SlimeDart:return"Slime Dart";case E.MagicSlimeStick:return"Magicslime Stick";case E.MagicSlimeHat:return"Magicslime Hat";case E.MagicSlimeBow:return"Magicslime Bow";case E.MagicSlimeShoes:return"Magicslime Shoes";case E.MagicSlimeRecorder:return"Magicslime Recorder";case E.MagicSlimeEarring:return"Magicslime Earring";case E.MagicSlimeBalloon:return"Magicslime Balloon";case E.MagicSlimeSkirt:return"Magicslime Skirt";case E.SpiderHat:return"Spider Hat";case E.SpiderSkirt:return"Spider Skirt";case E.SpiderSuit:return"Spider Suit";case E.SpiderDagger:return"Spider Dagger";case E.SpiderWing:return"Spider Wing";case E.SpiderCatchingNet:return"Spider Catching Net";case E.SpiderStick:return"Spider Stick";case E.SpiderFoldingFan:return"Spider Folding Fan";case E.BatRing:return"Bat Ring";case E.BatShoes:return"Bat Shoes";case E.BatSword:return"Bat Sword";case E.BatHat:return"Bat Helm";case E.BatRecorder:return"Bat Recorder";case E.BatBow:return"Bat Bow";case E.BatMascaradeMask:return"Bat Mascarade Mask";case E.BatCloak:return"Bat Cloak";case E.BronzeShoulder:return"Bronze Spaulder";case E.BattleRing:return"Battle Ring";case E.Halo:return"Halo";case E.IronShoulder:return"Iron Spaulder";case E.StrengthRing:return"Strength Ring";case E.GoldenRing:return"Golden Ring";case E.GoldenFireRing:return"Golden Fire Ring";case E.GoldenIceRing:return"Golden Ice Ring";case E.GoldenThunderRing:return"Golden Thunder Ring";case E.GoldenLightRing:return"Golden Light Ring";case E.GoldenDarkRing:return"Golden Dark Ring";case E.IronBelt:return"Iron Belt";case E.IronShoes:return"Iron Sabatons";case E.CopperArmor:return"Copper Armor";case E.IronGlove:return"Iron Gloves";case E.TowerShield:return"Tower Shield";case E.FireTowerShield:return"Fire Tower Shield";case E.IceTowerShield:return"Ice Tower Shield";case E.ThunderTowerShield:return"Thunder Tower Shield";case E.LightTowerShield:return"Light Tower Shield";case E.DarkTowerShield:return"Dark Tower Shield";case E.SavageRing:return"Savage Ring";case E.SpellboundFireBrooch:return"Spellbound Fire Brooch";case E.SpellboundIceBrooch:return"Spellbound Ice Brooch";case E.SpellboundThunderBrooch:return"Spellbound Thunder Brooch";case E.SpellboundLightBrooch:return"Spellbound Light Brooch";case E.SpellboundDarkBrooch:return"Spellbound Dark Brooch";case E.CopperHelm:return"Leather Hood";case E.BattleHelm:return"Battle Helm";case E.WizardHelm:return"Wizard Hood";case E.LargeSword:return"Large Sword";case E.LargeStaff:return"Large Staff";case E.LargeWing:return"Large Wing";case E.LargeDagger:return"Large Dagger";case E.LargeBow:return"Large Bow";case E.LargeOcarina:return"Large Ocarina";case E.FairyClothes:return"Fairy Clothes";case E.FairyStaff:return"Fairy Staff";case E.FairyBoots:return"Fairy Boots";case E.FairyGlove:return"Fairy Gloves";case E.FairyBrooch:return"Fairy Brooch";case E.FairyLamp:return"Fairy Lamp";case E.FairyWing:return"Fairy Wing";case E.FairyShuriken:return"Fairy Shuriken";case E.FoxKanzashi:return"Fox Kanzashi";case E.FoxLoincloth:return"Fox Loincloth";case E.FoxMask:return"Fox Mask";case E.FoxHamayayumi:return"Fox Hamaya-yumi";case E.FoxHat:return"Fox Hat";case E.FoxCoat:return"Fox Coat";case E.FoxBoot:return"Fox Boots";case E.FoxEma:return"Fox Ema";case E.DevilfishSword:return"Devilfish Sword";case E.DevilfishWing:return"Devilfish Wing";case E.DevilfishRecorder:return"Devilfish Recorder";case E.DevilfishArmor:return"Devilfish Armor";case E.DevilfishScarf:return"Devilfish Scarf";case E.DevilfishGill:return"Devilfish Gill";case E.DevilfishPendant:return"Devilfish Pendant";case E.DevilfishRing:return"Devilfish Ring";case E.TreantAmulet:return"Treant Amulet";case E.TreantHagoita:return"Treant Hagoita";case E.TreantChoppingBoard:return"Treant Chopping Board";case E.TreantDagger:return"Treant Dagger";case E.TreantHaniwa:return"Treant Haniwa";case E.TreantKokeshi:return"Treant Kokeshi";case E.TreantLamp:return"Treant Lamp";case E.TreantLunchbox:return"Treant Lunchbox";case E.FlametigerPortableHotSpring:return"Flametiger Portable Hot Spring";case E.FlametigerVolcanicShield:return"Flametiger Volcanic Shield";case E.FlametigerStripedBriefs:return"Flametiger-Striped Briefs";case E.TorchOfEverburningFlametiger:return"Torch of Everburning Flametiger";case E.FlametigerCostume:return"Flametiger Costume";case E.RingOfFlametigersWrath:return"Ring of the Flametiger's Wrath";case E.EndlessBowlOfSpicyFlametigerRamen:return"Endless Bowl of Spicy Flametiger Ramen";case E.ScreenOfTheSneakyFlametiger:return"Screen of the Sneaky Flametiger";case E.ModifiedSword:return"Ancient Sword";case E.ModifiedStaff:return"Ancient Staff";case E.ModifiedWing:return"Ancient Wing";case E.ModifiedDart:return"Ancient Dart";case E.ModifiedBow:return"Ancient Bow";case E.ModifiedRecorder:return"Ancient Recorder";case E.AncientCloak:return"Ancient Cloak";case E.AncientBelt:return"Ancient Belt";case E.AncientShoes:return"Ancient Shoes";case E.AncientRing:return"Ancient Ring";case E.AncientEarring:return"Ancient Earring";default:return e}}function S1(e){switch(e){case n.Base:return"Base";case n.Ability:return"Ability";case n.SuperAbility:return"Super Ability";case n.SPD:return"SPD";case n.Title:return"Title";case n.Quest:return"Quest";case n.Skill:return"Skill";case n.ChanneledSkill:return"Channeled Skill";case n.SkillPassive:return"Skill Passive";case n.Stance:return"Stance";case n.Upgrade:return"Upgrade";case n.Town:return"Town";case n.TownResearch:return"Town Research";case n.Equipment:return"Equipment";case n.ArmoredFury:return"Armored Fury";case n.WardedFury:return"Warded Fury";case n.Dictionary:return"Dictionary";case n.Alchemy:return"Alchemy Upgrade";case n.AlchemyExpand:return"Expand Cap";case n.Potion:return"Potion";case n.Pet:return"Pet";case n.PetRankMilestone:return"Pet Rank Milestone";case n.Guild:return"Guild Ability";case n.GuildSuperAbility:return"Guild Super Ability";case n.Rebirth:return"Rebirth";case n.Challenge:return"Challenge";case n.SuperDungeon:return"Super Dungeon";case n.DungeonItem:return"SD Powerup";case n.DungeonItemPermanent:return"SD Powerup (Permanent)";case n.SDUpgrade:return"SD Upgrade";case n.SDShop:return"SD Ruby Shop";case n.SDModifier:return"SD Modifier";case n.SDModifierMilestone:return"SD Modifier Milestone";case n.SDGemRitual:return"SD Gem Ritual";case n.GradeMilestone:return"Grade Milestone";case n.Expedition:return"Expedition";case n.ExpeditionMilestone:return"Expedition Milestone";case n.MissionMilestone:return"Mission Milestone";case n.AreaPrestige:return"Area Prestige";case n.Ascension:return"World Ascension";case n.AreaDebuff:return"Field Debuff";case n.FieldCurse:return"Field Curse";case n.Blessing:return"Blessing";case n.Buff:return"Skill Buff";case n.Debuff:return"Debuff";case n.Talisman:return"Talisman";case n.TalismanPassive:return"Talisman Passive";case n.Achievement:return"Achievement";case n.EpicStore:return"Epic Store";case n.DLC:return"Steam DLC";default:return e}}var re=(e=>(e[e.MorePowerups=0]="MorePowerups",e[e.FlexibleDodge=1]="FlexibleDodge",e[e.LeaveAndRetry=2]="LeaveAndRetry",e[e.AutoDodge=3]="AutoDodge",e[e.AutoLeaveAndRetry=4]="AutoLeaveAndRetry",e[e.SDDamageMultiplier=5]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=6]="SDDamageCutMultiplier",e[e.FameGain=7]="FameGain",e[e.SDMPGainEveryFloor=8]="SDMPGainEveryFloor",e[e.SDDungeonCoinBoostStart=9]="SDDungeonCoinBoostStart",e[e.SDPowerupBoostStart=10]="SDPowerupBoostStart",e[e.AutoProgress=11]="AutoProgress",e[e.AutoBuyPowerups=12]="AutoBuyPowerups",e[e.AutoUseRefreshTicket=13]="AutoUseRefreshTicket",e[e.SDChallengeBossDamageMultiplier=14]="SDChallengeBossDamageMultiplier",e[e.GoldCap=15]="GoldCap",e[e.SlimeCoinCap=16]="SlimeCoinCap",e[e.HPMultiplier=17]="HPMultiplier",e[e.MPMultiplier=18]="MPMultiplier",e[e.ATKMultiplier=19]="ATKMultiplier",e[e.MATKMultiplier=20]="MATKMultiplier",e[e.DEFMultiplier=21]="DEFMultiplier",e[e.MDEFMultiplier=22]="MDEFMultiplier",e[e.SPDMultiplier=23]="SPDMultiplier",e[e.PhysicalCriticalChanceMul=24]="PhysicalCriticalChanceMul",e[e.MagicalCriticalChanceMul=25]="MagicalCriticalChanceMul",e[e.CriticalDamageMul=26]="CriticalDamageMul",e[e.DebuffResistanceMul=27]="DebuffResistanceMul",e[e.PetPhysicalCriticalChanceMul=28]="PetPhysicalCriticalChanceMul",e[e.PetMagicalCriticalChanceMul=29]="PetMagicalCriticalChanceMul",e[e.PetCriticalDamageMul=30]="PetCriticalDamageMul",e[e.PetDebuffResistanceMul=31]="PetDebuffResistanceMul",e[e.ElementResistanceMultiplier=32]="ElementResistanceMultiplier",e[e.PhysicalDamageMultiplier=33]="PhysicalDamageMultiplier",e[e.MagicalDamageMultiplier=34]="MagicalDamageMultiplier",e[e.ArmoredFuryMultiplier=35]="ArmoredFuryMultiplier",e[e.WardedFuryMultiplier=36]="WardedFuryMultiplier",e[e.DamageToRegularMonstersMultiplier=37]="DamageToRegularMonstersMultiplier",e[e.DamageToChallengeBossMultiplier=38]="DamageToChallengeBossMultiplier",e[e.HeroExpGainMul=39]="HeroExpGainMul",e[e.GoldGainMul=40]="GoldGainMul",e[e.StoneGainMul=41]="StoneGainMul",e[e.CrystalGainMul=42]="CrystalGainMul",e[e.LeafGainMul=43]="LeafGainMul",e[e.SkillProficiencyGainMul=44]="SkillProficiencyGainMul",e[e.EquipmentProficiencyGainMul=45]="EquipmentProficiencyGainMul",e[e.GuildEXPGainMul=46]="GuildEXPGainMul",e[e.TownMatGainMul=47]="TownMatGainMul",e[e.TamingPointGainMul=48]="TamingPointGainMul",e[e.PetEXPGainMul=49]="PetEXPGainMul",e[e.LoyaltyPointGainMul=50]="LoyaltyPointGainMul",e[e.AlchemyPointGainMul=51]="AlchemyPointGainMul",e[e.StoneResearchPowerMul=52]="StoneResearchPowerMul",e[e.CrystalResearchPowerMul=53]="CrystalResearchPowerMul",e[e.LeafResearchPowerMul=54]="LeafResearchPowerMul",e[e.SDUpgreadeSuperQueue=55]="SDUpgreadeSuperQueue",e[e.SDArmoredFury=56]="SDArmoredFury",e[e.SDWardedFury=57]="SDWardedFury",e[e.PowerupFilterSlot=58]="PowerupFilterSlot",e[e.SDChallengeBossDamageCutMultiplier=59]="SDChallengeBossDamageCutMultiplier",e[e.BoostStartGoodRNG=60]="BoostStartGoodRNG",e))(re||{});function m1(e,t=0){let i="",r="",h="";switch(e){case re.MorePowerups:i="More Powerups",r="Increases the amount of powerups every floor",h=f.tDigit(t,0)+" powerups appear in the Safe Zone every floor";break;case re.FlexibleDodge:i="Flexible Dodge",r="Enables you to keep casting skills and moving during Dodge",h="";break;case re.LeaveAndRetry:i="Leave & Retry",r='Unlocks the "Leave & Retry" button that enables you start the current Super Dungeon as soon as you leave it',h="";break;case re.AutoDodge:i="Auto Dodge",r='Unlocks the "Auto Dodge" toggle in SD Options tab that automatically keeps holding down the Dodge button until the available dodge time is gone',h="";break;case re.AutoLeaveAndRetry:i="Auto Leave & Retry",r="Unlocks the toggle in SD Options tab that automatically clicks Leave & Retry button when you reach a certain floor with the entry cost less than a certain amount",h="";break;case re.SDDamageMultiplier:i="SD Damage Multiplier",r="Multiplies SD Damage Multiplier",h="by "+f.percent(t+1);break;case re.SDDamageCutMultiplier:i="SD Damage Cut Multiplier",r="Multiplies SD Damage Cut Multiplier",h="by "+f.percent(t+1);break;case re.FameGain:i="Fame Gain",r="Multiplies Fame Gain",h="by "+f.percent(t+1);break;case re.SDMPGainEveryFloor:i="Boost-Start of MP",r="",h="Gains "+f.percent(t)+" of Max MP when you visit every floor";break;case re.SDDungeonCoinBoostStart:i="Boost-Start of Dungeon Coin",r="",h="Starts a Super Dungeon run with "+f.tDigit(t,0)+" Dungeon Coins";break;case re.SDPowerupBoostStart:i="Boost-Start of Powerups",r="Starts a Super Dungeon run with random powerups to purchase at B1F Safe Zone",h="";break;case re.AutoProgress:i="Auto Progression",r='Unlocks the "Auto Progression" toggle in SD Options tab that automatically keeps going to the next floor up to a certain floor',h="";break;case re.AutoBuyPowerups:i="Auto Buy Powerups",r='Unlocks the "Auto Buy Powerups" toggle in SD Options tab that automatically buys powerups randomly',h="Buys random powerups "+f.percent(t)+" times every floor";break;case re.AutoUseRefreshTicket:i="Auto Use Refresh Tickets",r='Unlocks the "Auto Use Refresh Tickets" toggle in SD Options tab that automatically uses an Entry Cost Refresh Ticket when the entry cost exceeds a certain amount',h="";break;case re.SDChallengeBossDamageMultiplier:i="SD Challenge Boss Damage Multiplier",r="Multiplies SD Challenge Boss Damage Multiplier",h="by "+f.percent(t+1);break;case re.GoldCap:i="Gold Cap",r="Multiplies Gold Cap",h="by "+f.percent(t);break;case re.SlimeCoinCap:i="Slime Coin Cap",r="Multiplies Slime Coin Cap",h="by "+f.percent(t);break;case re.HPMultiplier:i="HP Multiplier",r="Multiplies HP",h="by "+f.percent(t);break;case re.MPMultiplier:i="MP Multiplier",r="Multiplies MP",h="by "+f.percent(t);break;case re.ATKMultiplier:i="ATK Multiplier",r="Multiplies ATK",h="by "+f.percent(t);break;case re.MATKMultiplier:i="MATK Multiplier",r="Multiplies MATK",h="by "+f.percent(t);break;case re.DEFMultiplier:i="DEF Multiplier",r="Multiplies DEF",h="by "+f.percent(t);break;case re.MDEFMultiplier:i="MDEF Multiplier",r="Multiplies MDEF",h="by "+f.percent(t);break;case re.SPDMultiplier:i="SPD Multiplier",r="Multiplies SPD",h="by "+f.percent(t);break;case re.PhysicalCriticalChanceMul:i=this.Stat(v.PhysCritChance)+" Multiplier",r="Multiplies "+this.Stat(v.PhysCritChance),h="by "+f.percent(t);break;case re.MagicalCriticalChanceMul:i=this.Stat(v.MagCritChance)+" Multiplier",r="Multiplies "+this.Stat(v.MagCritChance),h="by "+f.percent(t);break;case re.CriticalDamageMul:i=this.Stat(v.CriticalDamage)+" Multiplier",r="Multiplies "+this.Stat(v.CriticalDamage),h="by "+f.percent(t);break;case re.DebuffResistanceMul:i=this.Stat(v.DebuffRes)+" Multiplier",r="Multiplies "+this.Stat(v.DebuffRes),h="by "+f.percent(t);break;case re.PetPhysicalCriticalChanceMul:i=this.Stat(v.PetPhysCritChance)+" Multiplier",r="Multiplies "+this.Stat(v.PetPhysCritChance),h="by "+f.percent(t);break;case re.PetMagicalCriticalChanceMul:i=this.Stat(v.PetMagCritChance)+" Multiplier",r="Multiplies "+this.Stat(v.PetMagCritChance),h="by "+f.percent(t);break;case re.PetCriticalDamageMul:i=this.Stat(v.PetCriticalDamage)+" Multiplier",r="Multiplies "+this.Stat(v.PetCriticalDamage),h="by "+f.percent(t);break;case re.PetDebuffResistanceMul:i=this.Stat(v.PetDebuffResistance)+" Multiplier",r="Multiplies "+this.Stat(v.PetDebuffResistance),h="by "+f.percent(t);break;case re.ElementResistanceMultiplier:i="Element Resistance Multiplier",r="Multiplies All Resistance",h="by "+f.percent(t);break;case re.PhysicalDamageMultiplier:i="Physical Damage Multiplier",r="Multiplies Physical Damage",h="by "+f.percent(t);break;case re.MagicalDamageMultiplier:i="Magical Damage Multiplier",r="Multiplies Magical Damage",h="by "+f.percent(t);break;case re.ArmoredFuryMultiplier:i=this.Stat(v.ArmoredFury)+" Multiplier",r="Multiplies "+this.Stat(v.ArmoredFury),h="by "+f.percent(t);break;case re.WardedFuryMultiplier:i=this.Stat(v.WardedFury)+" Multiplier",r="Multiplies "+this.Stat(v.WardedFury),h="by "+f.percent(t);break;case re.DamageToRegularMonstersMultiplier:i="Damage to Regular Monsters",r="Multiplies Damage to Regular Monsters",h="by "+f.percent(t);break;case re.DamageToChallengeBossMultiplier:i="Damage to Challenge Boss",r="Multiplies Damage to Challenge Boss",h="by "+f.percent(t);break;case re.HeroExpGainMul:i="Hero EXP Gain",r="Multiplies Hero EXP Gain",h="by "+f.percent(t);break;case re.GoldGainMul:i="Gold Gain",r="Multiplies Gold Gain",h="by "+f.percent(t);break;case re.StoneGainMul:i="Stone Gain",r="Multiplies Stone Gain",h="by "+f.percent(t);break;case re.CrystalGainMul:i="Crystal Gain",r="Multiplies Crystal Gain",h="by "+f.percent(t);break;case re.LeafGainMul:i="Leaf Gain",r="Multiplies Leaf Gain",h="by "+f.percent(t);break;case re.SkillProficiencyGainMul:i=this.Stat(v.SkillProficiencyGain),r="Multiplies "+this.Stat(v.SkillProficiencyGain),h="by "+f.percent(t);break;case re.EquipmentProficiencyGainMul:i=this.Stat(v.EquipmentProficiencyGain),r="Multiplies "+this.Stat(v.EquipmentProficiencyGain),h="by "+f.percent(t);break;case re.GuildEXPGainMul:i="Guild EXP Gain",r="Multiplies Guild EXP Gain",h="by "+f.percent(t);break;case re.TownMatGainMul:i="Town Material Gain",r="Multiplies Town Material Gain",h="by "+f.percent(t);break;case re.TamingPointGainMul:i=this.Stat(v.TamingPointGain),r="Multiplies "+this.Stat(v.TamingPointGain),h="by "+f.percent(t);break;case re.PetEXPGainMul:i="Pet EXP Gain",r="Multiplies Pet EXP Gain",h="by "+f.percent(t);break;case re.LoyaltyPointGainMul:i="Loyalty Point Gain",r="Multiplies Loyalty Point Gain",h="by "+f.percent(t);break;case re.AlchemyPointGainMul:i="Alchemy Point Gain",r="Multiplies Alchemy Point Gain",h="by "+f.percent(t);break;case re.StoneResearchPowerMul:i="Stone Research Power",r="Multiplies Stone Research Power",h="by "+f.percent(t);break;case re.CrystalResearchPowerMul:i="Crystal Research Power",r="Multiplies Crystal Research Power",h="by "+f.percent(t);break;case re.LeafResearchPowerMul:i="Leaf Research Power",r="Multiplies Leaf Research Power",h="by "+f.percent(t);break;case re.SDUpgreadeSuperQueue:i="SD Upgrade Super Queue",r="SD Upgrade Available Super Queue",h="+ "+f.tDigit(t,0);break;case re.SDArmoredFury:i="SD Armored Fury",r="Increases SD Armored Fury",h="by "+f.percent(t);break;case re.SDWardedFury:i="SD Warded Fury",r="Increases SD Warded Fury",h="by "+f.percent(t);break;case re.PowerupFilterSlot:i="Powerup Filter Slot",r="Increase Powerup Filter Slot",h="by "+f.tDigit(t,0);break;case re.SDChallengeBossDamageCutMultiplier:i="SD Challenge Boss Damage Cut Multiplier",r="Multiplies SD Challenge Boss Damage Cut Multiplier",h="by "+f.percent(t+1);break;case re.BoostStartGoodRNG:i="Boost-Start of RNGesus's Favour",r="The Powerup [SD Damage Multiplier] will always show up at B1F Safe Zone",h="";break}return{name:i,description:r,value:h}}function M1(e){switch(e){case 27:return"Artifact Effect";case 57:return"SD Max Floor Reward Multiplier";case 58:return"Gold Cap";case 59:return"Gold Gain";case 60:return"Slime Coin Cap";case 61:return"Guild EXP Gain";case 62:return"Taming Point Gain";case 63:return"Loyalty Point Gain";case 64:return"Town Research Power";default:return e}}function E1(e,t=0,i=0,r=0){switch(e){case 27:return f.percent(t)+' of "Equipment Effect" stats applies to Artifacts  ( + '+f.percent(i)+` / Lv )
- Current Equipment Effect for Artifacts : `+f.percent(r);case 57:return"Multiplies the SD Max Floor Reached Reward by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 58:return"Multiplies Gold Cap by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 59:return"Multiplies Gold Gain by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 60:return"Multiplies Slime Coin Cap by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 61:return"Multiplies Guild EXP Gain by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 62:return"Multiplies Taming Point Gain by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 63:return"Multiplies Loyalty Point Gain by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";case 64:return"Multiplies Town Research Power by "+f.percent(t)+"  ( + "+f.percent(i)+" / Lv )";default:return f.percent(t)}}var kt=(e=>(e[e.Sunstone=0]="Sunstone",e[e.Morganite=1]="Morganite",e[e.Tanzanite=2]="Tanzanite",e[e.Heliodor=3]="Heliodor",e[e.Peridot=4]="Peridot",e[e.Obsidian=5]="Obsidian",e[e.Amber=6]="Amber",e[e.Hackmanite=7]="Hackmanite",e[e.Turquoise=8]="Turquoise",e[e.Kunzite=9]="Kunzite",e[e.Carnelian=10]="Carnelian",e[e.BlueTourmaline=11]="BlueTourmaline",e[e.Diamond=12]="Diamond",e[e.Almandine=13]="Almandine",e[e.Emerald=14]="Emerald",e))(kt||{});function v1(e,t=0){let i,r;switch(e){case kt.Sunstone:i="Sunstone",r="Multiplies Guild EXP Gain by "+f.percent(t+1);break;case kt.Morganite:i="Morganite",r="Expands the limit of Hero Level increment at once (default: Lv+30) by "+f.tDigit(t,0);break;case kt.Tanzanite:i="Tanzanite",r="Multiplies Stone Town Research Effect by "+f.percent(t);break;case kt.Heliodor:i="Heliodor",r="Multiplies Crystal Town Research Effect by "+f.percent(t);break;case kt.Peridot:i="Peridot",r="Multiplies Leaf Town Research Effect by "+f.percent(t);break;case kt.Obsidian:i="Obsidian",r="Increases Monster Defeated # gain per defeat by "+f.tDigit(t,0);break;case kt.Amber:i="Amber",r="Increases Dungeon Clear # and Clear Reward by "+f.tDigit(t,0);break;case kt.Hackmanite:i="Hackmanite",r="Lowers the expedition minimum time (default: 15m) by "+f.secondsToDhms(t);break;case kt.Turquoise:i="Turquoise",r="Reduce the efficiency penalty of longer expeditions - Current : [Hour]^"+f.tDigit(.85+t,3);break;case kt.Kunzite:i="Kunzite",r="Expand the cap of Forging Effect [Equipment Effect +%] by "+f.percent(t);break;case kt.Carnelian:i="Carnelian",r="Expand the cap of Forging Effect [Effect Incement / Lv +%] by "+f.percent(t);break;case kt.BlueTourmaline:i="Blue Tourmaline",r="Expand the cap of Forging Effect [Equipment Level +] by "+f.tDigit(t,0);break;case kt.Diamond:i="Diamond",r="Multiplies Talisman Passive Effect by "+f.percent(t+1);break;case kt.Almandine:i="Almandine",r="Nitro Speed + "+f.tDigit(t,1)+"x";break;case kt.Emerald:i="Emerald",r="Multiplies SD Powerups Permanent Effect by "+f.percent(t+1);break;default:i=e,r="";break}return{name:i,description:r}}function w1(e){switch(e){case H.MinorHealthPotion:return"Minor Health Potion";case H.MinorRegenerationPoultice:return"Minor Regeneration Poultice";case H.MinorResourcePoultice:return"Minor Resource Poultice";case H.SlickShoeSolution:return"Slick Shoe Solution";case H.MinorManaRegenerationPoultice:return"Minor Mana Regeneration Poultice";case H.MaterialMultiplierMist:return"Material Multiplier Mist";case H.BasicElixirOfBrawn:return"Basic Elixir of Brawn";case H.BasicElixirOfBrains:return"Basic Elixir of Brains";case H.BasicElixirOfFortitude:return"Basic Elixir of Fortitude";case H.BasicElixirOfConcentration:return"Basic Elixir of Concentration";case H.BasicElixirOfUnderstanding:return"Basic Elixir of Understanding";case H.ChilledHealthPotion:return"Chilled Health Potion";case H.ChilledRegenerationPoultice:return"Chilled Regeneration Poultice";case H.FrostyDefensePotion:return"Frosty Defense Potion";case H.IcyAuraDraught:return"Ice Aura Draught";case H.SlightlyStickySalve:return"Slightly Sticky Salve";case H.SlickerShoeSolution:return"Slicker Shoe Solution";case H.CoolHeadOintment:return"Cool Head Ointment";case H.FrostySlayersOil:return"Frosty Slayer's Oil";case H.BurningDefensePotion:return"Burning Defense Potion";case H.BlazingAuraDraught:return"Blazing Aura Draught";case H.FierySlayersOil:return"Fiery Slayer's Oil";case H.ElectricDefensePotion:return"Electric Defense Potion";case H.WhirlingAuraDraught:return"Whirling Aura Draught";case H.ShockingSlayersOil:return"Shocking Slayer's Oil";case H.ThrowingNet:return"Throwing Net";case H.IceRope:return"Ice Net";case H.ThunderRope:return"Thunder Net";case H.FireRope:return"Fire Net";case H.LightRope:return"Light Net";case H.DarkRope:return"Dark Net";case H.GuildMembersEmblem:return"Guild Member's Emblem";case H.CertificateOfCompetence:return"Certificate of Competence";case H.MasonsTrowel:return"Mason's Trowel";case H.EnchantedAlembic:return"Enchanted Alembic";case H.TrackersMap:return"Tracker's Map";case H.BerserkersStone:return"Berserker's Stone";case H.TrappersTag:return"Trapper's Tag";case H.FlorzporbDoll:return"Florzporb Doll";case H.ArachnettaDoll:return"Arachnetta Doll";case H.GuardianKorDoll:return"Guardian Kor Doll";case H.SlimeBadge:return"Slime Badge";case H.MagicslimeBadge:return"Magicslime Badge";case H.SpiderBadge:return"Spider Badge";case H.BatBadge:return"Bat Badge";case H.FairyBadge:return"Fairy Badge";case H.FoxBadge:return"Fox Badge";case H.DevilfishBadge:return"Devilfish Badge";case H.TreantBadge:return"Treant Badge";case H.FlametigerBadge:return"Flametiger Badge";case H.UnicornBadge:return"Unicorn Badge";case H.AscendedFromIEH1:return"Proof of Ascension from IEH1";case H.WarriorsBadge:return"Warrior's Badge";case H.WizardsBadge:return"Wizard's Badge";case H.AngelsBadge:return"Angel's Badge";case H.ThiefsBadge:return"Thief's Badge";case H.ArchersBadge:return"Archer's Badge";case H.TamersBadge:return"Tamer's Badge";case H.NostroDoll:return"Nostro Doll";case H.LadyEmeldaDoll:return"Lady Emelda Doll";case H.NariSuneDoll:return"Nari Sune Doll";case H.OctobaddieDoll:return"Octobaddie Doll";case H.BananoonDoll:return"Bananoon Doll";case H.GlorbliorbusDoll:return"Glorbliorbus Doll";case H.DistortionSlimeDoll:return"Gankyū Doll";case H.AncientSlimeBadge:return"Ancient Slime Badge";case H.AncientMagicslimeBadge:return"Ancient Magicslime Badge";case H.AncientSpiderBadge:return"Ancient Spider Badge";case H.AncientBatBadge:return"Ancient Bat Badge";case H.AncientFairyBadge:return"Ancient Fairy Badge";case H.AncientFoxBadge:return"Ancient Fox Badge";case H.AncientDevilfishBadge:return"Ancient Devilfish Badge";case H.AncientTreantBadge:return"Ancient Treant Badge";case H.AncientFlametigerBadge:return"Ancient Flametiger Badge";case H.AncientUnicornBadge:return"Ancient Unicorn Badge";case H.AncientWarriorsBadge:return"Ancient Warrior's Badge";case H.AncientWizardsBadge:return"Ancient Wizard's Badge";case H.AncientAngelsBadge:return"Ancient Angel's Badge";case H.AncientThiefsBadge:return"Ancient Thief's Badge";case H.AncientArchersBadge:return"Ancient Archer's Badge";case H.AncientTamersBadge:return"Ancient Tamer's Badge";default:return H[e]}}var it=(e=>(e[e.Brick=0]="Brick",e[e.Log=1]="Log",e[e.Shard=2]="Shard",e[e.PetRank=3]="PetRank",e[e.Equipment=4]="Equipment",e[e.PetExp=5]="PetExp",e[e.WalkDistance=6]="WalkDistance",e))(it||{});function k1(e,t=""){let i="",r="",h="",c="";switch(e.kind){case it.Brick:i="Manufacturing Bricks",h=`Town Brick Buildings' level effect + ${f.percent(e.EffectValue())} ( + ${f.percent(e.passiveEffectValueIncrementPerLevel)} / Lv )`;break;case it.Log:i="Logging Trees",h="Town Log Buildings' level effect + "+f.percent(e.EffectValue())+"  ( + "+f.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case it.Shard:i="Gathering Shards",h="Town Shard Buildings' level effect + "+f.percent(e.EffectValue())+"  ( + "+f.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case it.PetRank:i="Capturing Monsters",h="Multiply Taming Point Gain by "+f.percent(1+e.EffectValue())+"  ( + "+f.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",c=t+"'s Taming Point";break;case it.Equipment:i="Training Equipment",h="Multiply Equipment Proficiency Gain by "+f.percent(1+e.EffectValue())+"  ( + "+f.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )";break;case it.PetExp:i="Field Training",h="Multiply Pet EXP Gain from any expeditions by "+f.percent(1+e.EffectValue())+"  ( + "+f.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",c=t+"'s Pet EXP";break;case it.WalkDistance:i="Marathon Race",h="Walked Distance Gain from expeditions + "+f.percent(e.EffectValue())+"  ( + "+f.percent(e.passiveEffectValueIncrementPerLevel)+" / Lv )",c=t+" Walked Distance";break}return{name:i,effect:r,passive:h,reward:c}}function A1(e,t=""){switch(e){case 0:return"The Slime Hideout";case 1:return"The Spider Underground Apartment";case 2:return"The Darkest Forest";case 3:return"The Burning Garden";case 4:return"The Kor Lecture Hall";default:return t}}function R1(e,t,i,r){switch(e){case _e.ReduceRequiredHeroLevel:return r?"Required Hero Grade of this equipment - "+f.tDigit(t):"Required Hero Level of this equipment - "+f.tDigit(t)+" (Max: "+f.tDigit(i)+")";case _e.ReduceRequiredAbility:return r?"Required Super Ability Point of this equipment - "+f.tDigit(t):"Required Ability Point of this equipment - "+f.tDigit(t)+" (Max: "+f.tDigit(i)+")";case _e.IncreaseProficiencyGain:return"Proficiency Gain of this equipment + "+f.percent(t)+" (Max: "+f.percent(i)+")";case _e.IncreaseEffect:return"This equipment's effect + "+f.percent(t)+" (Max: "+f.percent(i)+")";case _e.PurifyCurseEffect:return"Decrease this equipment's current negative effects by "+f.percent(t)+" (Max: "+f.percent(i)+")";case _e.IncreaseEffectIncrement:return"This equipment's effect increment per level + "+f.percent(t)+" (Max: "+f.percent(i)+")";case _e.EqLevel:return"This equipment's level + "+f.tDigit(t)+" (Max: "+f.tDigit(i)+")";default:return _e[e]}}function C1(e,t=!1){switch(e){case _e.ReduceRequiredHeroLevel:return t?"Hero Grade":"Hero Level";case _e.ReduceRequiredAbility:return t?"Required Super Ability":"Required Ability";case _e.IncreaseProficiencyGain:return"Proficiency Gain ";case _e.IncreaseEffect:return"Equipment Effect";case _e.PurifyCurseEffect:return"Purify of Cursed Effect";case _e.IncreaseEffectIncrement:return"Effect Increment / Lv";case _e.EqLevel:return"Equipment Level";default:return e}}var Ye=(e=>(e[e.MonsterFluid=0]="MonsterFluid",e[e.FlameShard=1]="FlameShard",e[e.FrostShard=2]="FrostShard",e[e.LightningShard=3]="LightningShard",e[e.NatureShard=4]="NatureShard",e[e.PoisonShard=5]="PoisonShard",e[e.BlackPearl=6]="BlackPearl",e[e.OilOfSlime=7]="OilOfSlime",e[e.EnchantedCloth=8]="EnchantedCloth",e[e.SpiderSilk=9]="SpiderSilk",e[e.BatWing=10]="BatWing",e[e.FairyDust=11]="FairyDust",e[e.FoxTail=12]="FoxTail",e[e.FishScales=13]="FishScales",e[e.CarvedBranch=14]="CarvedBranch",e[e.ThickFur=15]="ThickFur",e[e.UnicornHorn=16]="UnicornHorn",e[e.SlimeBall=17]="SlimeBall",e[e.ManaSeed=18]="ManaSeed",e[e.UnmeltingIce=19]="UnmeltingIce",e[e.EternalFlame=20]="EternalFlame",e[e.AncientBattery=21]="AncientBattery",e[e.Ectoplasm=22]="Ectoplasm",e[e.Stardust=23]="Stardust",e[e.VoidEgg=24]="VoidEgg",e[e.EnchantedShard=25]="EnchantedShard",e))(Ye||{});function L1(e){switch(e){case Ye.MonsterFluid:return"Monster Fluid";case Ye.FlameShard:return"Flame Shard";case Ye.FrostShard:return"Frost Shard";case Ye.LightningShard:return"Lightning Shard";case Ye.NatureShard:return"Nature Shard";case Ye.PoisonShard:return"Poison Shard";case Ye.BlackPearl:return"Black Pearl";case Ye.OilOfSlime:return"Oil of Slime";case Ye.EnchantedCloth:return"Magical Cloth";case Ye.SpiderSilk:return"Spider Silk";case Ye.BatWing:return"Bat Wing";case Ye.FairyDust:return"Fairy Dust";case Ye.FoxTail:return"Fox Tail";case Ye.FishScales:return"Fish Scales";case Ye.CarvedBranch:return"Carved Branch";case Ye.ThickFur:return"Thick Fur";case Ye.UnicornHorn:return"Unicorn Horn";case Ye.SlimeBall:return"Slime Ball";case Ye.ManaSeed:return"Mana Seed";case Ye.UnmeltingIce:return"Unmelting Ice";case Ye.EternalFlame:return"Eternal Flame";case Ye.AncientBattery:return"Ancient Battery";case Ye.Ectoplasm:return"Ectoplasm";case Ye.Stardust:return"Stardust";case Ye.VoidEgg:return"Void Egg";case Ye.EnchantedShard:return"Enchanted Shard";default:return e}}function P1(e,t,i=!1,r=0,h=!1){let c;switch(e){case l.Nothing:if(h)return"";c=i?"Enchant Slot + "+f.tDigit(t):"[Enchant Available]";break;case l.HPAdder:if(h)return f.tDigit(t,1);if(c="HP + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MPAdder:if(h)return f.tDigit(t,1);if(c="MP + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.ATKAdder:if(h)return f.tDigit(t,1);if(c="ATK + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MATKAdder:if(h)return f.tDigit(t,1);if(c="MATK + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.DEFAdder:if(h)return f.tDigit(t,1);if(c="DEF + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MDEFAdder:if(h)return f.tDigit(t,1);if(c="MDEF + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.SPDAdder:if(h)return f.tDigit(t,1);if(t<0){if(c="SPD <span class='red'>"+f.tDigit(t,1)+"</span>",r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break}if(c="SPD + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.HPMultiplier:if(h)return f.percent(t);if(c="HP + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MPMultiplier:if(h)return f.percent(t);if(t<0){if(c="MP <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break}if(c="MP + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ATKMultiplier:if(h)return f.percent(t);if(t<0){if(c="ATK <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break}if(c="ATK + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MATKMultiplier:if(h)return f.percent(t);if(t<0){if(c="MATK <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break}if(c="MATK + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DEFMultiplier:if(h)return f.percent(t);if(t<0){if(c="DEF <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break}if(c="DEF + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MDEFMultiplier:if(h)return f.percent(t);if(t<0){if(c="MDEF <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break}if(c="MDEF + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ATKPropotion:if(h)return f.percent(t);if(c="ATK + "+f.percent(t)+" of Hero Level",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MATKPropotion:if(h)return f.percent(t);if(c="MATK + "+f.percent(t)+" of Hero Level",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DEFPropotion:if(h)return f.percent(t);if(c="DEF + "+f.percent(t)+" of Hero Level",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MDEFPropotion:if(h)return f.percent(t);if(c="MDEF + "+f.percent(t)+" of Hero Level",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FireResistance:if(h)return f.percent(t);if(c="Fire Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.IceResistance:if(h)return f.percent(t);if(c="Ice Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ThunderResistance:if(h)return f.percent(t);if(c="Thunder Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LightResistance:if(h)return f.percent(t);if(c="Light Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DarkResistance:if(h)return f.percent(t);if(c="Dark Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.PhysicalAbsorption:if(h)return f.percent(t);if(c="Physical Absorption + "+f.percent(t)+" of received damage",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FireAbsorption:if(h)return f.percent(t);if(c="Fire Absorption + "+f.percent(t)+" of received damage",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.IceAbsorption:if(h)return f.percent(t);if(c="Ice Absorption + "+f.percent(t)+" of received damage",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ThunderAbsorption:if(h)return f.percent(t);if(c="Thunder Absorption + "+f.percent(t)+" of received damage",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LightAbsorption:if(h)return f.percent(t);if(c="Light Absorption + "+f.percent(t)+" of received damage",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DarkAbsorption:if(h)return f.percent(t);if(c="Dark Absorption + "+f.percent(t)+" of received damage",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DebuffResistance:if(h)return f.percent(t);if(c=t>=0?"Debuff Resistance + "+f.percent(t):"Debuff Resistance <span class='red'> "+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.EquipmentDropChance:if(h)return f.percent(t,4);if(c="Equipment Drop Chance + "+f.percent(t,4),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.SlimeDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.OilOfSlime)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.MagicSlimeDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.EnchantedCloth)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.SpiderDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.SpiderSilk)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.BatDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.BatWing)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.FairyDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.FairyDust)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.FoxDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.FoxTail)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.DevilFishDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.FishScales)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.TreantDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.CarvedBranch)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.FlameTigerDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.ThickFur)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.UnicornDropChance:if(h)return f.percent(t,3);if(c=M.Material(Ye.UnicornHorn)+" Drop Chance (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.ColorMaterialDropChance:if(h)return f.percent(t,4);if(c="Rare Material Drop Chance (Global) + "+f.percent(t,4),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.PhysicalCritical:if(h)return f.percent(t);if(c="Physical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MagicalCritical:if(h)return f.percent(t);if(c="Magical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.EXPGain:if(h)return f.percent(t);if(c=t>=0?"EXP Gain + "+f.percent(t):"EXP Gain <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.SkillProficiency:if(h)return f.percent(t);if(c=t>=0?"Skill Proficiency Gain + "+f.percent(t):"Skill Proficiency Gain <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.EquipmentProficiency:if(h)return f.percent(t);if(c=t>=0?"Equipment Proficiency Gain + "+f.percent(t):"Equipment Proficiency Gain <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MoveSpeedMultiplier:if(h)return f.percent(t);if(t<0){if(c="Move Speed <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break}if(c="Move Speed + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.GoldGain:if(h)return f.percent(t);if(c=t>=0?"Gold Gain (Global) + "+f.percent(t):"Gold Gain (Global) <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.StoneGain:if(h)return f.percent(t);if(c="Stone Gain (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.CrystalGain:if(h)return f.percent(t);if(c="Crystal Gain (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LeafGain:if(h)return f.percent(t);if(c="Leaf Gain (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.WarriorSkillLevel:if(h)return f.tDigit(t,1);if(c="Warrior Skill Level (Global) + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.WizardSkillLevel:if(h)return f.tDigit(t,1);if(c="Wizard Skill Level (Global) + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.AngelSkillLevel:if(h)return f.tDigit(t,1);if(c="Angel Skill Level (Global) + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.ThiefSkillLevel:if(h)return f.tDigit(t,1);if(c="Thief Skill Level (Global) + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.ArcherSkillLevel:if(h)return f.tDigit(t,1);if(c="Archer Skill Level (Global) + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.TamerSkillLevel:if(h)return f.tDigit(t,1);if(c="Tamer Skill Level (Global) + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.AllSkillLevel:if(h)return f.tDigit(t,1);if(c=t>=0?"All Skill Level (Global) + "+f.tDigit(t,1):"All Skill Level (Global) <span class='red'>"+f.tDigit(t,1)+"</span>",r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.SlimeKnowledge:if(h)return f.percent(t);if(c="Damage to Slime + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MagicSlimeKnowledge:if(h)return f.percent(t);if(c="Damage to Magicslime + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.SpiderKnowledge:if(h)return f.percent(t);if(c="Damage to Spider + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.BatKnowledge:if(h)return f.percent(t);if(c="Damage to Bat + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FairyKnowledge:if(h)return f.percent(t);if(c="Damage to Fairy + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FoxKnowledge:if(h)return f.percent(t);if(c="Damage to Fox + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DevilFishKnowledge:if(h)return f.percent(t);if(c="Damage to Devilfish + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.TreantKnowledge:if(h)return f.percent(t);if(c="Damage to Treant + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FlameTigerKnowledge:if(h)return f.percent(t);if(c="Damage to Flametiger + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.UnicornKnowledge:if(h)return f.percent(t);if(c="Damage to Unicorn + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.PhysicalDamage:if(h)return f.percent(t);if(c="Physical Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FireDamage:if(h)return f.percent(t);if(c="Fire Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.IceDamage:if(h)return f.percent(t);if(c="Ice Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ThunderDamage:if(h)return f.percent(t);if(c="Thunder Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LightDamage:if(h)return f.percent(t);if(c="Light Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DarkDamage:if(h)return f.percent(t);if(c="Dark Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.HpRegen:if(h)return f.tDigit(t,2);if(c="HP Regeneration + "+f.tDigit(t,2)+" / sec",r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MpRegen:if(h)return f.tDigit(t,2);if(c="MP Regeneration + "+f.tDigit(t,2)+" / sec",r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.TamingPoint:if(h)return f.percent(t);if(c=t>=0?"Taming Point Gain + "+f.percent(t):"Taming Point Gain <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.WarriorSkillRange:if(h)return f.percent(t,3);if(c="Warrior's Class Skills Range (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.WizardSkillRange:if(h)return f.percent(t,3);if(c="Wizard's Class Skills Range (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.AngelSkillRange:if(h)return f.percent(t,3);if(c="Angel's Class Skills Range (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.ThiefSkillRange:if(h)return f.percent(t,3);if(c="Thief's Class Skills Range (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.ArcherSkillRange:if(h)return f.percent(t,3);if(c="Archer's Class Skills Range (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.TamerSkillRange:if(h)return f.percent(t,3);if(c="Tamer's Class Skills Range (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.TownMatGain:if(h)return f.percent(t);if(c="Town Material Gain + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.TownMatAreaClearGain:if(h)return f.tDigit(t,1);if(c="Town Material Gain from Area Clear + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.RebirthPointGain1:if(h)return f.percent(t);if(c="Tier 1 Rebirth Point Gain + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.RebirthPointGain2:if(h)return f.percent(t);if(c="Tier 2 Rebirth Point Gain + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.RebirthPointGain3:if(h)return f.percent(t);if(c="Tier 3 Rebirth Point Gain + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.CriticalDamage:if(h)return f.percent(t);if(c="Critical Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.BlessingEffect:if(h)return f.percent(t);if(c="Blessing Effect + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MoveSpeedAdder:if(h)return f.meter(t);if(c=t>=0?"Move Speed + "+f.meter(t):"Move Speed <span class='red'>"+f.meter(t)+"</span>",r>0){c=c+" ( + "+f.meter(r)+" / Lv )";break}break;case l.PetEXPGain:if(h)return f.percent(t);if(c="Pet EXP Gain + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LoyaltyPointGain:if(h)return f.percent(t);if(c=t>=0?"Loyalty Point Gain + "+f.percent(t):"Loyalty Point Gain <span class='red'>"+f.percent(t)+"</span>",r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.CatalystDoubleCriticalChance:if(h)return f.percent(t);if(c="Catalyst Double Critical Chance (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.WarriorSkillEffectRange:if(h)return f.percent(t,3);if(c="Warrior's Class Skills Area of Effect (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.WizardSkillEffectRange:if(h)return f.percent(t,3);if(c="Wizard's Class Skills Area of Effect (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.AngelSkillEffectRange:if(h)return f.percent(t,3);if(c="Angel's Class Skills Area of Effect (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.ThiefSkillEffectRange:if(h)return f.percent(t,3);if(c="Thief's Class Skills Area of Effect (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.ArcherSkillEffectRange:if(h)return f.percent(t,3);if(c="Archer's Class Skills Area of Effect (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.TamerSkillEffectRange:if(h)return f.percent(t,3);if(c="Tamer's Class Skills Area of Effect (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.HpRegenMultiplier:if(h)return f.percent(t,3);if(c="HP Regeneration / sec + "+f.percent(t,3)+" of Max HP",r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.MpRegenMultiplier:if(h)return f.percent(t,3);if(c="MP Regeneration / sec + "+f.percent(t,3)+" of Max MP",r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.ArmoredFury:if(h)return f.percent(t,3);if(c="Armored Fury + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.WardedFury:if(h)return f.percent(t,3);if(c="Warded Fury + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.PetPhysicalCriticalChance:if(h)return f.percent(t);if(c="Pet Physical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.PetMagicalCriticalChance:if(h)return f.percent(t);if(c="Pet Magical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.PetCriticalDamage:if(h)return f.percent(t);if(c="Pet Critical Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.PetDebuffResistance:if(h)return f.percent(t);if(c="Pet Debuff Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.StoneTownResearchPower:if(h)return f.percent(t);if(c="Stone Research Power (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.CrystalTownResearchPower:if(h)return f.percent(t);if(c="Crystal Research Power (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LeafTownResearchPower:if(h)return f.percent(t);if(c="Leaf Research Power (Global) + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.GuildEXPGain:if(h)return f.percent(t,3);if(c="Guild EXP Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.SPDMultiplier:if(h)return f.percent(t,3);if(c="SPD + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.CriticalDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Critical Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.SkillProficiencyMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Skill Proficiency Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.EquipmentProficiencyMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Equipment Proficiency Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.EXPGainMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative EXP Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.GoldGainMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Gold Gain (Global) + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.PhysicalDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Physical Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.FireDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Fire Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.IceDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Ice Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.ThunderDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Thunder Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.LightDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Light Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.DarkDamageMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Dark Damage + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.TamingPointMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Taming Point Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.PetEXPGainMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Pet EXP Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.LoyaltyPointGainMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Loyalty Point Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.BlessingEffectMultiplier:if(h)return f.percent(t,3);if(c="Multiplicative Blessing Effect + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.PhysicalCriticalMultiplier:if(h)return f.percent(t);if(c="Multiplicative Physical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MagicalCriticalMultiplier:if(h)return f.percent(t);if(c="Multiplicative Magical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ChallengeBossKnowledge:if(h)return f.percent(t);if(c="Damage to Challenge Boss + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.HPAfter:if(h)return f.tDigit(t,1);if(c="After HP + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MPAfter:if(h)return f.tDigit(t,1);if(c="After MP + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.ATKAfter:if(h)return f.tDigit(t,1);if(c="After ATK + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MATKAfter:if(h)return f.tDigit(t,1);if(c="After MATK + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.DEFAfter:if(h)return f.tDigit(t,1);if(c="After DEF + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MDEFAfter:if(h)return f.tDigit(t,1);if(c="After MDEF + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.SPDAfter:if(h)return f.tDigit(t,1);if(c="After SPD + "+f.tDigit(t,1),r>0){c=c+" ( + "+f.tDigit(r,2)+" / Lv )";break}break;case l.MoveSpeedAfter:if(h)return f.meter(t);if(c="After Move Speed + "+f.meter(t)+" / sec",r>0){c=c+" ( + "+f.meter(r)+" / Lv )";break}break;case l.PhysicalCriticalAfter:if(h)return f.percent(t);if(c="After Physical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MagicalCriticalAfter:if(h)return f.percent(t);if(c="After Magical Critical Chance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.CriticalDamageAfter:if(h)return f.percent(t);if(c="After Critical Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DebuffResistanceAfter:if(h)return f.percent(t);if(c="After Debuff Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.PhysicalDamageAfter:if(h)return f.percent(t);if(c="After Physical Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FireDamageAfter:if(h)return f.percent(t);if(c="After Fire Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.IceDamageAfter:if(h)return f.percent(t);if(c="After Ice Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ThunderDamageAfter:if(h)return f.percent(t);if(c="After Thunder Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LightDamageAfter:if(h)return f.percent(t);if(c="After Light Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DarkDamageAfter:if(h)return f.percent(t);if(c="After Dark Damage + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FireResistanceAfter:if(h)return f.percent(t);if(c="After Fire Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.IceResistanceAfter:if(h)return f.percent(t);if(c="After Ice Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ThunderResistanceAfter:if(h)return f.percent(t);if(c="After Thunder Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.LightResistanceAfter:if(h)return f.percent(t);if(c="After Light Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DarkResistanceAfter:if(h)return f.percent(t);if(c="After Dark Resistance + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.SlimeKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Slime + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.MagicSlimeKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Magicslime + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.SpiderKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Spider + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.BatKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Bat + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FairyKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Fairy + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FoxKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Fox + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.DevilFishKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Devilfish + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.TreantKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Treant + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FlameTigerKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Flametiger + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.UnicornKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Unicorn + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.ChallengeBossKnowledgeAfter:if(h)return f.percent(t);if(c="After Damage to Challenge Boss + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.SDDamageMultiplier:if(h)return f.percent(t);if(c="SD Damage Multiplier + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.SDDamageCutMultiplier:if(h)return f.percent(t);if(c="SD Damage Cut Multiplier + "+f.percent(t),r>0){c=c+" ( + "+f.percent(r)+" / Lv )";break}break;case l.FameGain:if(h)return f.percent(t);if(c="Fame Gain + "+f.percent(t,3),r>0){c=c+" ( + "+f.percent(r,3)+" / Lv )";break}break;case l.DungeonCoinGain:if(h)return f.percent(t);if(c="Dungeon Coin Gain + "+f.percent(t,4),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;case l.ExtraAfterDamage:if(h)return f.percent(t);if(c="Extra After Damage + "+f.percent(t,4),r>0){c=c+" ( + "+f.percent(r,4)+" / Lv )";break}break;default:if(h)return f.tDigit(t);c=e+" + "+f.tDigit(t);break}return c}function D1(e,t,i=!1){switch(e){case H.MinorHealthPotion:return"Restores HP + "+f.tDigit(t);case H.MinorRegenerationPoultice:return"HP Regenerate + "+f.tDigit(t,2)+" / sec";case H.MinorResourcePoultice:return"Resource Gain (Global) + "+f.percent(t);case H.SlickShoeSolution:return"Move Speed + "+f.percent(t);case H.MinorManaRegenerationPoultice:return"MP Regenerate + "+f.tDigit(t,2)+" / sec";case H.MaterialMultiplierMist:return"Increases dropped amount of materials by "+f.tDigit(t);case H.BasicElixirOfBrawn:return"Physical Damage + "+f.percent(t);case H.BasicElixirOfBrains:return"Magical Damage + "+f.percent(t);case H.BasicElixirOfFortitude:return"HP + "+f.tDigit(t);case H.BasicElixirOfConcentration:return"MP + "+f.tDigit(t);case H.BasicElixirOfUnderstanding:return"Skill Proficiency Gain + "+f.percent(t);case H.ChilledHealthPotion:return"Restores HP + "+f.tDigit(t);case H.ChilledRegenerationPoultice:return"HP Regenerate + "+f.tDigit(t,2)+" / sec";case H.FrostyDefensePotion:return"Ice Resistance + "+f.percent(t);case H.IcyAuraDraught:return"Generates an aura of cold around hero that has "+f.percent(t)+" chance every second to give monsters SPD Down debuff";case H.SlightlyStickySalve:return"Gold Gain (Global) + "+f.percent(t);case H.SlickerShoeSolution:return"Move Speed + "+f.percent(t);case H.CoolHeadOintment:return"EXP Gain + "+f.percent(t);case H.FrostySlayersOil:return"Changes skills' damage type to Ice and adds extra "+f.percent(t)+" ice damage";case H.BurningDefensePotion:return"Fire Resistance + "+f.percent(t);case H.BlazingAuraDraught:return"Generates an aura of fire around hero that has "+f.percent(t)+" chance every second to knockback monsters";case H.FierySlayersOil:return"Changes skills' damage type to Fire and adds extra "+f.percent(t)+" fire damage";case H.ElectricDefensePotion:return"Thunder Resistance + "+f.percent(t);case H.WhirlingAuraDraught:return"Generates an aura of thunder around hero that has "+f.percent(t)+" chance every second to give monsters Electric debuff";case H.ShockingSlayersOil:return"Changes skills' damage type to Thunder and adds extra "+f.percent(t)+" thunder damage";case H.ThrowingNet:return"Right-click to capture Normal Type monsters";case H.IceRope:return"Right-click to capture Blue Type monsters";case H.ThunderRope:return"Right-click to capture Yellow Type monsters";case H.FireRope:return"Right-click to capture Red Type monsters";case H.LightRope:return"Right-click to capture Green Type monsters";case H.DarkRope:return"Right-click to capture Purple Type monsters";case H.GuildMembersEmblem:return i?"Reduces Guild EXP requirement to level by "+f.percent(t):"Multiplies Guild EXP Gain by "+f.percent(1+t);case H.CertificateOfCompetence:return i?"Multiplies Skill Proficiency Gain by "+f.percent(1+t):"Reduces Skill's Cast Time by "+f.percent(t);case H.MasonsTrowel:return i?"Increases Town Building's level effect by "+f.percent(t):"Increases Town Material Gain by "+f.percent(t);case H.EnchantedAlembic:return i?"Mysterious Water Gain + "+f.tDigit(t)+" / sec":"Potion Effect (Global) + "+f.percent(t);case H.TrackersMap:return i?"Epic Swarm Chance + "+f.percent(t)+" instead of Large Swarm":"Increases Area Clear # and Clear Reward by "+f.tDigit(t,1);case H.BerserkersStone:return i?"Equipment Effect + "+f.percent(t):"Multiplicative Damage to Challenge Boss by "+f.percent(t);case H.TrappersTag:return i?"Multiplies Taming Point Gain by "+f.percent(1+t):"Triple Capture Chance + "+f.percent(t);case H.FlorzporbDoll:return i?"Multiplies Gold Gain by "+f.percent(1+t):"Gives additional Slime Ball attack to Base Attack Skill with "+f.percent(t)+" damage";case H.ArachnettaDoll:return i?"Gold Cap + "+f.percent(t):"Gives Poison debuff to Base Attack Skill with "+f.percent(Math.min(1,t))+" chance";case H.GuardianKorDoll:return i?"Multiplies Equipment Proficiency Gain by "+f.percent(1+t):"If damage taken "+f.percent(Math.min(.25,t))+" or less of HP, nullifies it (Max:25%)";case H.SlimeBadge:return i?"HP + "+f.tDigit(t,1):"HP + "+f.percent(t);case H.MagicslimeBadge:return i?"MDEF + "+f.tDigit(t,1):"MDEF + "+f.percent(t);case H.SpiderBadge:return i?"DEF + "+f.tDigit(t,1):"DEF + "+f.percent(t);case H.BatBadge:return i?"ATK + "+f.tDigit(t,1):"ATK + "+f.percent(t);case H.FairyBadge:return i?"MATK + "+f.tDigit(t,1):"MATK + "+f.percent(t);case H.FoxBadge:return i?"MP + "+f.tDigit(t,1):"MP + "+f.percent(t);case H.DevilfishBadge:return i?"Stone Gain + "+f.percent(t):"Move Speed + "+f.percent(t);case H.TreantBadge:return i?"Crystal Gain + "+f.percent(t):"EXP Gain + "+f.percent(t);case H.FlametigerBadge:return i?"Leaf Gain + "+f.percent(t):"Equipment Proficiency Gain + "+f.percent(t);case H.UnicornBadge:return i?"SPD + "+f.tDigit(t,1):"SPD + "+f.percent(t);case H.AscendedFromIEH1:return i?"Nothing":"Multiplies EXP Gain by "+f.percent(1+t);case H.WarriorsBadge:return i?"Reduces Warrior's Skill Rank Cost by "+f.percent(t):"Multiplies Physical Critical Chance by "+f.percent(1+t);case H.WizardsBadge:return i?"Reduces Wizard's Skill Rank Cost by "+f.percent(t):"Multiplies Magical Critical Chance by "+f.percent(1+t);case H.AngelsBadge:return i?"Reduces Angel's Skill Rank Cost by "+f.percent(t):"Multiplies Skill Proficiency Gain by "+f.percent(1+t);case H.ThiefsBadge:return i?"Reduces Thief's Skill Rank Cost by "+f.percent(t):"Multiplies Equipment Drop Chance by "+f.percent(1+t);case H.ArchersBadge:return i?"Reduces Archer's Skill Rank Cost by "+f.percent(t):"Multiplies Critical Damage by "+f.percent(1+t);case H.TamersBadge:return i?"Reduces Tamer's Skill Rank Cost by "+f.percent(t):"Multiplies Pet EXP Gain by "+f.percent(1+t);case H.NostroDoll:return i?"Physical Absorption + "+f.percent(t):"Increase MP Regeneration / sec by "+f.percent(t)+" of Max MP";case H.LadyEmeldaDoll:return i?"Magical Absorption + "+f.percent(t):"Damage-Type Skill's damage + "+f.percent(t)+" along with its MP Consumption increasing + "+f.percent(4*t);case H.NariSuneDoll:return i?"Large Swarm Chance + "+f.percent(t)+" instead of Regular Swarm":"Skill's Range + "+f.percent(t);case H.OctobaddieDoll:return i?"Slime Coin Gain + "+f.percent(t):"Skill's Area of Effect + "+f.percent(t);case H.AncientSlimeBadge:return i?"After Damage to Slime + "+f.percent(t):"Multiplicative Damage to Slime + "+f.percent(t);case H.AncientMagicslimeBadge:return i?"After Damage to Magicslime + "+f.percent(t):"Multiplicative Damage to Magicslime + "+f.percent(t);case H.AncientSpiderBadge:return i?"After Damage to Spider + "+f.percent(t):"Multiplicative Damage to Spider + "+f.percent(t);case H.AncientBatBadge:return i?"After Damage to Bat + "+f.percent(t):"Multiplicative Damage to Bat + "+f.percent(t);case H.AncientFairyBadge:return i?"After Damage to Fairy + "+f.percent(t):"Multiplicative Damage to Fairy + "+f.percent(t);case H.AncientFoxBadge:return i?"After Damage to Fox + "+f.percent(t):"Multiplicative Damage to Fox + "+f.percent(t);case H.AncientDevilfishBadge:return i?"After Damage to Devilfish + "+f.percent(t):"Multiplicative Damage to Devilfish + "+f.percent(t);case H.AncientTreantBadge:return i?"After Damage to Treant + "+f.percent(t):"Multiplicative Damage to Treant + "+f.percent(t);case H.AncientFlametigerBadge:return i?"After Damage to Flametiger + "+f.percent(t):"Multiplicative Damage to Flametiger + "+f.percent(t);case H.AncientUnicornBadge:return i?"After Damage to Unicorn + "+f.percent(t):"Multiplicative Damage to Unicorn + "+f.percent(t);case H.AncientWarriorsBadge:return i?"SD Damage Multiplier + "+f.percent(t):"Multiplies Physical Damage by "+f.percent(1+t);case H.AncientWizardsBadge:return i?"SD Challenge Boss Damage Multiplier "+f.percent(t):"Multiplies Magical Damage by "+f.percent(1+t);case H.AncientAngelsBadge:return i?"SD Damage Cut Multiplier + "+f.percent(t):"Multiplies Equipment Proficiency Gain by "+f.percent(1+t);case H.AncientThiefsBadge:return i?"SD Armored Fury + "+f.percent(t):"Multiplies Armored Fury by "+f.percent(1+t);case H.AncientArchersBadge:return i?"SD Warded Fury + "+f.percent(t):"Multiplies Warded Fury by "+f.percent(1+t);case H.AncientTamersBadge:return i?"Dungeon Coin Gain + "+f.percent(t):"Multiplies Taming Point Gain by "+f.percent(1+t);default:return"Nothing"}}var qe=(e=>(e[e.Nothing=0]="Nothing",e[e.Health=1]="Health",e[e.HealthRegen=2]="HealthRegen",e[e.ResourceGain=3]="ResourceGain",e[e.Move=4]="Move",e[e.Mana=5]="Mana",e[e.ManaRegen=6]="ManaRegen",e[e.MaterialGain=7]="MaterialGain",e[e.PhysicalDamage=8]="PhysicalDamage",e[e.MagicalDamage=9]="MagicalDamage",e[e.MaxHP=10]="MaxHP",e[e.MaxMP=11]="MaxMP",e[e.SkillProfGain=12]="SkillProfGain",e[e.ElementResistance=13]="ElementResistance",e[e.Aura=14]="Aura",e[e.GoldGain=15]="GoldGain",e[e.ExpGain=16]="ExpGain",e[e.SlayerOil=17]="SlayerOil",e[e.Trap=18]="Trap",e[e.Talisman=19]="Talisman",e))(qe||{});function y1(e){switch(e){case qe.Health:return"Health";case qe.HealthRegen:return"Health Regen";case qe.ResourceGain:return"Resource";case qe.Move:return"Move";case qe.Mana:return"Mana";case qe.ManaRegen:return"Mana Regen";case qe.MaterialGain:return"Material";case qe.PhysicalDamage:return"Physical Damage";case qe.MagicalDamage:return"Magical Damage";case qe.MaxHP:return"Max HP";case qe.MaxMP:return"Max MP";case qe.SkillProfGain:return"Skill Proficiency";case qe.ElementResistance:return"Element Resistance";case qe.Aura:return"Aura";case qe.GoldGain:return"Gold";case qe.ExpGain:return"EXP";case qe.SlayerOil:return"Slayer Oil";case qe.Trap:return"Trap";case qe.Talisman:return"Talisman";default:return"Nothing"}}var Ls=(e=>(e[e.WingAttack=0]="WingAttack",e[e.WingShoot=1]="WingShoot",e[e.Heal=2]="Heal",e[e.GodBless=3]="GodBless",e[e.MuscleInflation=4]="MuscleInflation",e[e.MagicImpact=5]="MagicImpact",e[e.ProtectWall=6]="ProtectWall",e[e.Haste=7]="Haste",e[e.WingStorm=8]="WingStorm",e[e.HolyArch=9]="HolyArch",e))(Ls||{});function b1(e){switch(e){case Ls.WingAttack:return"Wing Attack";case Ls.WingShoot:return"Wing Shoot";case Ls.Heal:return"Heal";case Ls.GodBless:return"God Bless";case Ls.MuscleInflation:return"Muscle Inflation";case Ls.MagicImpact:return"Magic Impact";case Ls.ProtectWall:return"Protect Wall";case Ls.Haste:return"Haste";case Ls.WingStorm:return"Wing Storm";case Ls.HolyArch:return"Holy Arch";default:return e}}var Ps=(e=>(e[e.ArrowAttak=0]="ArrowAttak",e[e.PiercingArrow=1]="PiercingArrow",e[e.BurstArrow=2]="BurstArrow",e[e.Multishot=3]="Multishot",e[e.ShockArrow=4]="ShockArrow",e[e.FrozenArrow=5]="FrozenArrow",e[e.ExplodingArrow=6]="ExplodingArrow",e[e.ShiningArrow=7]="ShiningArrow",e[e.GravityArrow=8]="GravityArrow",e[e.Kiting=9]="Kiting",e))(Ps||{});function T1(e){switch(e){case Ps.ArrowAttak:return"Arrow Attack";case Ps.PiercingArrow:return"Piercing Arrow";case Ps.BurstArrow:return"Burst Arrow";case Ps.Multishot:return"Multishot";case Ps.ShockArrow:return"Shock Arrow";case Ps.FrozenArrow:return"Frozen Arrow";case Ps.ExplodingArrow:return"Exploding Arrow";case Ps.ShiningArrow:return"Shining Arrow";case Ps.GravityArrow:return"Gravity Arrow";case Ps.Kiting:return"Kiting";default:return e}}var Ds=(e=>(e[e.SonnetAttack=0]="SonnetAttack",e[e.AttackingOrder=1]="AttackingOrder",e[e.RushOrder=2]="RushOrder",e[e.DefensiveOrder=3]="DefensiveOrder",e[e.SoothingBallad=4]="SoothingBallad",e[e.OdeOfFriendship=5]="OdeOfFriendship",e[e.AnthemOfEnthusiasm=6]="AnthemOfEnthusiasm",e[e.FeedChilli=7]="FeedChilli",e[e.BreedingKnowledge=8]="BreedingKnowledge",e[e.TuneOfTotalTaming=9]="TuneOfTotalTaming",e))(Ds||{});function G1(e){switch(e){case Ds.SonnetAttack:return"Sonnet Attack";case Ds.AttackingOrder:return"Attacking Order";case Ds.RushOrder:return"Rush Order";case Ds.DefensiveOrder:return"Defensive Order";case Ds.SoothingBallad:return"Soothing Ballad";case Ds.OdeOfFriendship:return"Ode of Friendship";case Ds.AnthemOfEnthusiasm:return"Anthem of Enthusiasm";case Ds.FeedChilli:return"Feed Chilli";case Ds.BreedingKnowledge:return"Breeding Knowledge";case Ds.TuneOfTotalTaming:return"Tune of Total Taming";default:return e}}var ys=(e=>(e[e.DaggerAttack=0]="DaggerAttack",e[e.Stab=1]="Stab",e[e.KnifeToss=2]="KnifeToss",e[e.LuckyBlow=3]="LuckyBlow",e[e.SpreadToss=4]="SpreadToss",e[e.ShadowStrike=5]="ShadowStrike",e[e.SneakyStrike=6]="SneakyStrike",e[e.Pilfer=7]="Pilfer",e[e.DarkWield=8]="DarkWield",e[e.Assassination=9]="Assassination",e))(ys||{});function B1(e){switch(e){case ys.DaggerAttack:return"Dagger Attack";case ys.Stab:return"Stab";case ys.KnifeToss:return"Knife Toss";case ys.LuckyBlow:return"Lucky Blow";case ys.SpreadToss:return"Spread Toss";case ys.ShadowStrike:return"Shadow Strike";case ys.SneakyStrike:return"Sneaky Strike";case ys.Pilfer:return"Pilfer";case ys.DarkWield:return"Dark Wield";case ys.Assassination:return"Assassination";default:return e}}function x1(e){switch(e){case Es.SwordAttack:return"Sword Attack";case Es.Slash:return"Slash";case Es.DoubleSlash:return"Double Slash";case Es.SonicSlash:return"Sonic Slash";case Es.SwingDown:return"Swing Down";case Es.SwingAround:return"Swing Around";case Es.ChargeSwing:return"Charge Swing";case Es.FanSwing:return"Fan Swing";case Es.ShieldAttack:return"Shield Charge";case Es.KnockingShot:return"Knocking Shot";default:return e}}var bs=(e=>(e[e.StaffAttack=0]="StaffAttack",e[e.FireBolt=1]="FireBolt",e[e.FireStorm=2]="FireStorm",e[e.MeteorStrike=3]="MeteorStrike",e[e.IceBolt=4]="IceBolt",e[e.ChillingTouch=5]="ChillingTouch",e[e.Blizzard=6]="Blizzard",e[e.ThunderBolt=7]="ThunderBolt",e[e.DoubleThunderBolt=8]="DoubleThunderBolt",e[e.LightningThunder=9]="LightningThunder",e))(bs||{});function F1(e){switch(e){case bs.StaffAttack:return"Staff Attack";case bs.FireBolt:return"Fire Bolt";case bs.FireStorm:return"Fire Storm";case bs.MeteorStrike:return"Meteor Strike";case bs.IceBolt:return"Ice Bolt";case bs.ChillingTouch:return"Chilling Touch";case bs.Blizzard:return"Blizzard";case bs.ThunderBolt:return"Thunder Bolt";case bs.DoubleThunderBolt:return"Double Thunder Bolt";case bs.LightningThunder:return"Lightning Thunder";default:return e}}function _1(e,t){switch(e){case R.Warrior:return x1(t);case R.Wizard:return F1(t);case R.Angel:return b1(t);case R.Thief:return B1(t);case R.Archer:return T1(t);case R.Tamer:return G1(t);default:return""}}function I1(e,t=0,i=0){let r="",h="",c="";switch(e){case Ae.Heal:r="Heal",h=`Restores ${t} of Max every: HP floor ( + ${i} / Rank )`,c=`HP After + ${f.tDigit(t)}`;break;case Ae.TimeLimit:r="Time Expansion",h=`SD Time Limit + ${t} ( + ${i} / Rank )`,c=`Initial SD Time Limit + ${f.secondsToDhms(t)}`;break;case Ae.DamageMultiplier:r="SD Damage Multiplier",h=`SD Damage Multiplier + ${t} ( + ${i} / Rank )`,c=`Multiplicative SD Damage Multiplier + ${f.percent(t)}`;break;case Ae.DamageCutMultiplier:r="SD Damage Cut Multiplier",h=`SD Damage Cut Multiplier + ${t} ( + ${i} / Rank )`,c=`Multiplicative SD Damage Cut Multiplier + ${f.percent(t)}`;break;case Ae.RestoreDodgeTimesec:r="Dodge Time",h=`Restores ${t} sec available dodge every floor ( + ${i} / Rank )`,c=`Initial available dodge + ${f.tDigit(t,0)} sec`;break;case Ae.DodgeHeal:r="Dodge Heal",h=`Restores ${t} of Max every: HP time dodge is successful ( + ${i} / Rank )`,c=`MP After + ${f.tDigit(t)}`;break;case Ae.DungeonCoinGain:r="Dungeon Coin Gain",h=`Extra Dungeon per: Coin defeat + ${t} ( + ${i} / Rank )`,c=`Dungeon Coin Gain + ${f.percent(t)}`;break;case Ae.FameGain:r="Fame Gain",h=`Fame Gain + ${t} ( + ${i} / Rank )`,c=`Fame Gain + ${f.percent(t)}`;break;case Ae.SkillCastSpeed:r="Skill Cast Speed",h=`Skill Cast Speed + ${t} ( + ${i} / Rank )`,c=`SPD After + ${f.tDigit(t)}`;break;case Ae.PhysicalCriticalChance:r="Physical Critical Chance",h=`Physical Critical Chance After + ${t} ( + ${i} / Rank )`,c=`Physical Critical Chance After + ${f.percent(t)}`;break;case Ae.MagicalCriticalChance:r="Magical Critical Chance",h=`Magical Critical Chance After + ${t} ( + ${i} / Rank )`,c=`Magical Critical Chance After + ${f.percent(t)}`;break;case Ae.CriticalDamage:r="Critical Damage",h=`Critical Damage After + ${t} ( + ${i} / Rank )`,c=`Multiplicative Critical Damage + ${f.percent(t)}`;break;case Ae.MoveSpeed:r="Move Speed",h=`Move Speed After + ${t} / sec ( + ${i} / Rank )`,c=`Move Speed After + ${t} / sec`;break;case Ae.PhysicalDamage:r="Physical Damage",h=`Physical Damage After + ${t} ( + ${i} / Rank )`,c=`ATK After + ${f.tDigit(t)}`;break;case Ae.MagicalDamage:r="Magical Damage",h=`Magical Damage After + ${t} ( + ${i} / Rank )`,c=`MATK After + ${f.tDigit(t)}`;break;case Ae.PhysicalAbsorption:r="Physical Absorption",h=`Physical Absorption After + ${t} ( + ${i} / Rank )`,c=`DEF After + ${f.tDigit(t)}`;break;case Ae.MagicalAbsorption:r="Magical Absorption",h=`Magical Absorption After + ${t} ( + ${i} / Rank )`,c=`MDEF After + ${f.tDigit(t)}`;break;case Ae.SkillHitCount:r="Skill Hit Count",h=`Skill Hit Count + ${t} ( + ${i} / Rank )`,c=`Skill Level After + ${f.tDigit(t)}`;break;case Ae.ExtraAfterDamage:r="Extra After Damage",h=`Extra After Damage + ${t} ( + ${i} / Rank )`,c=`Extra After Damage + ${f.percent(t)}`;break;case Ae.EquipmentDropChance:r="Equipment Drop Chance",h=`Equipment Drop Chance After + ${t} ( + ${i} / Rank )`,c=`Artifact Proficiency Gain + ${f.percent(t)}`;break;case Ae.ChallengeBossDamageMultiplier:r="SD Challenge Boss Damage Multiplier",h=`SD Challenge Boss Damage Multiplier + ${t} ( + ${i} / Rank )`,c=`Multiplicative SD Challenge Boss Damage Multiplier + ${f.percent(t)}`;break}return{name:r,active:h,passive:c}}var Ke=(e=>(e[e.MudBrick=0]="MudBrick",e[e.LimestoneBrick=1]="LimestoneBrick",e[e.MarbleBrick=2]="MarbleBrick",e[e.GraniteBrick=3]="GraniteBrick",e[e.BasaltBrick=4]="BasaltBrick",e[e.PineLog=5]="PineLog",e[e.MapleLog=6]="MapleLog",e[e.AshLog=7]="AshLog",e[e.MahoganyLog=8]="MahoganyLog",e[e.RosewoodLog=9]="RosewoodLog",e[e.JasperShard=10]="JasperShard",e[e.OpalShard=11]="OpalShard",e[e.OnyxShard=12]="OnyxShard",e[e.JadeShard=13]="JadeShard",e[e.SapphireShard=14]="SapphireShard",e))(Ke||{});function V1(e){switch(e){case Ke.MudBrick:return"Mud Brick";case Ke.LimestoneBrick:return"Limestone Brick";case Ke.MarbleBrick:return"Marble Brick";case Ke.GraniteBrick:return"Granite Brick";case Ke.BasaltBrick:return"Basalt Brick";case Ke.PineLog:return"Pine Log";case Ke.MapleLog:return"Maple Log";case Ke.AshLog:return"Ash Log";case Ke.MahoganyLog:return"Mahogany Log";case Ke.RosewoodLog:return"Rosewood Log";case Ke.JasperShard:return"Jasper Shard";case Ke.OpalShard:return"Opal Shard";case Ke.OnyxShard:return"Onyx Shard";case Ke.JadeShard:return"Jade Shard";case Ke.SapphireShard:return"Sapphire Shard";default:return e}}function H1(e){switch(e){case se.Slime:return"Slime";case se.MagicSlime:return"Magicslime";case se.Spider:return"Spider";case se.Bat:return"Bat";case se.Fairy:return"Fairy";case se.Fox:return"Fox";case se.DevilFish:return"Devilfish";case se.Treant:return"Treant";case se.FlameTiger:return"Flametiger";case se.Unicorn:return"Unicorn";case se.Mimic:return"Mimic";case se.ChallengeBoss:return"Challenge Boss";default:return e}}var O=(e=>(e[e.Nothing=0]="Nothing",e[e.ResourceGain=1]="ResourceGain",e[e.PotionEffect=2]="PotionEffect",e[e.TamingPointGain=3]="TamingPointGain",e[e.GoldCap=4]="GoldCap",e[e.GoldGain=5]="GoldGain",e[e.ExpGain=6]="ExpGain",e[e.DoubleMaterialChance=7]="DoubleMaterialChance",e[e.GoldGainOnDisassemblePotion=8]="GoldGainOnDisassemblePotion",e[e.DisassembleTownMatGain=9]="DisassembleTownMatGain",e[e.TownMatGainFromDungeonReward=10]="TownMatGainFromDungeonReward",e[e.OilOfSlimeDropChance=11]="OilOfSlimeDropChance",e[e.EnchantedClothDropChance=12]="EnchantedClothDropChance",e[e.SpiderSilkDropChance=13]="SpiderSilkDropChance",e[e.BatWingDropChance=14]="BatWingDropChance",e[e.FairyDustDropChance=15]="FairyDustDropChance",e[e.FoxTailDropChance=16]="FoxTailDropChance",e[e.FishScalesDropChance=17]="FishScalesDropChance",e[e.CarvedBranchDropChance=18]="CarvedBranchDropChance",e[e.ThickFurDropChance=19]="ThickFurDropChance",e[e.UnicornHornDropChance=20]="UnicornHornDropChance",e[e.EquipProfGain=21]="EquipProfGain",e[e.MysteriousWaterGain=22]="MysteriousWaterGain",e[e.ChestPortalOrbChance=23]="ChestPortalOrbChance",e[e.SkillProfGain=24]="SkillProfGain",e[e.TownMatGain=25]="TownMatGain",e[e.ResearchPowerStone=26]="ResearchPowerStone",e[e.ResearchPowerCrystal=27]="ResearchPowerCrystal",e[e.ResearchPowerLeaf=28]="ResearchPowerLeaf",e[e.CatalystCriticalChance=29]="CatalystCriticalChance",e[e.MysteriousWaterCap=30]="MysteriousWaterCap",e[e.BlessingEffect=31]="BlessingEffect",e[e.LoyaltyPointGain=32]="LoyaltyPointGain",e[e.PetExpGain=33]="PetExpGain",e[e.ExpeditionExpGain=34]="ExpeditionExpGain",e[e.EssenceConversionRate=35]="EssenceConversionRate",e[e.SlimeCoinEfficiency=36]="SlimeCoinEfficiency",e[e.SlimeCoinCap=37]="SlimeCoinCap",e[e.EquipmentEffect=38]="EquipmentEffect",e[e.AlchemyPointGain=39]="AlchemyPointGain",e))(O||{});function q1(e){switch(e.passiveEffectKind){case O.Nothing:return"Stay tuned for future updates!";case O.ResourceGain:return"Resource Gain + "+f.percent(e.effectValue);case O.PotionEffect:return"Potion Effect + "+f.percent(e.effectValue);case O.TamingPointGain:return"Taming Point Gain + "+f.percent(e.effectValue);case O.GoldCap:return"Multiply Gold Cap by "+f.percent(1+e.effectValue);case O.GoldGain:return"Gold Gain + "+f.percent(e.effectValue);case O.ExpGain:return"EXP Gain + "+f.percent(e.effectValue);case O.DoubleMaterialChance:return"Lucky Material Chance for Doubled Material Gain : "+f.percent(e.effectValue);case O.GoldGainOnDisassemblePotion:return"Gold Gain on Disassembling Potions + "+f.percent(e.effectValue);case O.DisassembleTownMatGain:return"Town Material Gain on Disassembling Equipment + "+f.percent(e.effectValue);case O.TownMatGainFromDungeonReward:return"Town Material Gain from Dungeon Reward + "+f.percent(e.effectValue);case O.OilOfSlimeDropChance:return this.Material(Ye.OilOfSlime)+" Drop Chance + "+f.percent(e.effectValue,3);case O.EnchantedClothDropChance:return this.Material(Ye.EnchantedCloth)+" Drop Chance + "+f.percent(e.effectValue,3);case O.SpiderSilkDropChance:return this.Material(Ye.SpiderSilk)+" Drop Chance + "+f.percent(e.effectValue,3);case O.BatWingDropChance:return this.Material(Ye.BatWing)+" Drop Chance + "+f.percent(e.effectValue,3);case O.FairyDustDropChance:return this.Material(Ye.FairyDust)+" Drop Chance + "+f.percent(e.effectValue,3);case O.FoxTailDropChance:return this.Material(Ye.FoxTail)+" Drop Chance + "+f.percent(e.effectValue,3);case O.FishScalesDropChance:return this.Material(Ye.FishScales)+" Drop Chance + "+f.percent(e.effectValue,3);case O.CarvedBranchDropChance:return this.Material(Ye.CarvedBranch)+" Drop Chance + "+f.percent(e.effectValue,3);case O.ThickFurDropChance:return this.Material(Ye.ThickFur)+" Drop Chance + "+f.percent(e.effectValue,3);case O.UnicornHornDropChance:return this.Material(Ye.UnicornHorn)+" Drop Chance + "+f.percent(e.effectValue,3);case O.EquipProfGain:return"Equipment Proficiency Gain + "+f.percent(e.effectValue);case O.MysteriousWaterGain:return"Mysterious Water Gain + "+f.tDigit(e.effectValue,3)+" / sec ";case O.ChestPortalOrbChance:return"Finding Portal Orb from Chest Chance : "+f.percent(e.effectValue,4);case O.SkillProfGain:return"Skill Proficiency Gain + "+f.percent(e.effectValue);case O.TownMatGain:return"Multiply Town Material Gain by "+f.percent(1+e.effectValue);case O.ResearchPowerStone:return"Stone Research Power + "+f.percent(e.effectValue);case O.ResearchPowerCrystal:return"Crystal Research Power + "+f.percent(e.effectValue);case O.ResearchPowerLeaf:return"Leaf Research Power + "+f.percent(e.effectValue);case O.CatalystCriticalChance:return"Multiplies Critical Chance of Catalyst by "+f.percent(1+e.effectValue);case O.MysteriousWaterCap:return"Max Mysterious Water Cap + "+f.tDigit(e.effectValue);case O.BlessingEffect:return"Blessing Effect + "+f.percent(e.effectValue);case O.LoyaltyPointGain:return"Loyalty Point Gain + "+f.percent(e.effectValue);case O.PetExpGain:return"Pet EXP Gain + "+f.percent(e.effectValue);case O.ExpeditionExpGain:return"Expedition EXP Gain + "+f.percent(e.effectValue);case O.EssenceConversionRate:return"Essence Conversion Rate + "+f.percent(e.effectValue);case O.SlimeCoinEfficiency:return"Multiplies Slime Coin Gain by "+f.percent(1+e.effectValue);case O.SlimeCoinCap:return"Multiplies Slime Coin Cap by "+f.percent(1+e.effectValue);case O.EquipmentEffect:return"Multiplies Equipment Effect by "+f.percent(1+e.effectValue);case O.AlchemyPointGain:return"Alchemy Point Gain + "+f.percent(e.effectValue);default:return""}}var De=(e=>(e[e.Nothing2=0]="Nothing2",e[e.GoldGain2=1]="GoldGain2",e[e.TamingPointGain2=2]="TamingPointGain2",e[e.RareMatChanceForBlueSlime2=3]="RareMatChanceForBlueSlime2",e[e.RareMatChance2=4]="RareMatChance2",e[e.ChestPortalOrbNumber2=5]="ChestPortalOrbNumber2",e))(De||{});function N1(e){switch(e.passiveEffectKind2){case De.GoldGain2:return" Gold Gain Multiplier + "+f.percent(e.effectValue2);case De.TamingPointGain2:return" Taming Point Gain Multiplier + "+f.percent(e.effectValue2);case De.RareMatChanceForBlueSlime2:return" Rare Material Drop Chance + "+f.percent(e.effectValue2);case De.RareMatChance2:return" Rare Material Drop Chance + "+f.percent(e.effectValue2);case De.ChestPortalOrbNumber2:return" Max Portal Orbs in Chests + "+f.tDigit(Math.floor(e.effectValue2));default:return""}}function W1(e){switch(e){case v.FireRes:return"Fire Resistance";case v.IceRes:return"Ice Resistance";case v.ThunderRes:return"Thunder Resistance";case v.LightRes:return"Light Resistance";case v.DarkRes:return"Dark Resistance";case v.DebuffRes:return"Debuff Resistance";case v.PhysCritChance:return"Physical Critical Chance";case v.MagCritChance:return"Magical Critical Chance";case v.CriticalDamage:return"Critical Damage";case v.EquipmentDropChance:return"Equipment Drop Chance";case v.MoveSpeed:return"Move Speed";case v.SkillProficiencyGain:return"Skill Proficiency Gain";case v.EquipmentProficiencyGain:return"Equipment Proficiency Gain";case v.TamingPointGain:return"Taming Point Gain";case v.ExpGain:return"EXP Gain";case v.ArmoredFury:return"Armored Fury";case v.WardedFury:return"Warded Fury";case v.PetPhysCritChance:return"Pet Base Physical Critical Chance";case v.PetMagCritChance:return"Pet Base Magical Critical Chance";case v.PetCriticalDamage:return"Pet Base Critical Damage";case v.PetDebuffResistance:return"Pet Debuff Resistance";case v.ArtifactProficiencyGain:return"Artifact Proficiency Gain"}}var ye=(e=>(e[e.Global=0]="Global",e[e.Daily=1]="Daily",e[e.Title=2]="Title",e[e.General=3]="General",e))(ye||{}),X=(e=>(e[e.AbilityVIT=0]="AbilityVIT",e[e.ClearGeneralQuest=1]="ClearGeneralQuest",e[e.ClearTitleQuest=2]="ClearTitleQuest",e[e.UpgradeResource=3]="UpgradeResource",e[e.Equip=4]="Equip",e[e.Alchemy=5]="Alchemy",e[e.Guild=6]="Guild",e[e.Town=7]="Town",e[e.Research=8]="Research",e[e.Rebirth=9]="Rebirth",e[e.Challenge=10]="Challenge",e[e.Expedition=11]="Expedition",e[e.WorldAscension=12]="WorldAscension",e[e.AreaPrestige=13]="AreaPrestige",e[e.Upgrade1=14]="Upgrade1",e[e.Upgrade2=15]="Upgrade2",e[e.Upgrade3=16]="Upgrade3",e[e.Upgrade4=17]="Upgrade4",e[e.Upgrade5=18]="Upgrade5",e[e.Upgrade6=19]="Upgrade6",e[e.Upgrade7=20]="Upgrade7",e[e.Upgrade8=21]="Upgrade8",e[e.Nitro1=22]="Nitro1",e[e.Nitro2=23]="Nitro2",e[e.Nitro3=24]="Nitro3",e[e.Nitro4=25]="Nitro4",e[e.Nitro5=26]="Nitro5",e[e.Nitro6=27]="Nitro6",e[e.Nitro7=28]="Nitro7",e[e.Nitro8=29]="Nitro8",e[e.Capture1=30]="Capture1",e[e.Capture2=31]="Capture2",e[e.Capture3=32]="Capture3",e[e.Capture4=33]="Capture4",e[e.Capture5=34]="Capture5",e[e.Alchemy1=35]="Alchemy1",e[e.Alchemy2=36]="Alchemy2",e[e.Alchemy3=37]="Alchemy3",e[e.Alchemy4=38]="Alchemy4",e[e.Alchemy5=39]="Alchemy5",e[e.Alchemy6=40]="Alchemy6",e[e.Alchemy7=41]="Alchemy7",e[e.Alchemy8=42]="Alchemy8",e[e.Upgrade9=43]="Upgrade9",e[e.Upgrade10=44]="Upgrade10",e[e.Upgrade11=45]="Upgrade11",e[e.Upgrade12=46]="Upgrade12",e[e.Upgrade13=47]="Upgrade13",e[e.Nitro9=48]="Nitro9",e[e.Nitro10=49]="Nitro10",e[e.Nitro11=50]="Nitro11",e[e.Nitro12=51]="Nitro12",e[e.Nitro13=52]="Nitro13",e[e.Nitro14=53]="Nitro14",e[e.Nitro15=54]="Nitro15",e[e.Capture6=55]="Capture6",e[e.Capture7=56]="Capture7",e[e.Capture8=57]="Capture8",e[e.Capture9=58]="Capture9",e[e.Capture10=59]="Capture10",e[e.Capture11=60]="Capture11",e[e.Capture12=61]="Capture12",e[e.Upgrade14=62]="Upgrade14",e[e.Upgrade15=63]="Upgrade15",e[e.Upgrade16=64]="Upgrade16",e[e.Upgrade17=65]="Upgrade17",e[e.Upgrade18=66]="Upgrade18",e[e.Capture13=67]="Capture13",e[e.Capture14=68]="Capture14",e[e.Capture15=69]="Capture15",e[e.Capture16=70]="Capture16",e[e.SD1=71]="SD1",e[e.SD2=72]="SD2",e[e.SD3=73]="SD3",e[e.SD4=74]="SD4",e[e.SD5=75]="SD5",e[e.SD6=76]="SD6",e[e.SD7=77]="SD7",e[e.SD8=78]="SD8",e[e.Nitro16=79]="Nitro16",e[e.Nitro17=80]="Nitro17",e[e.Nitro18=81]="Nitro18",e[e.Nitro19=82]="Nitro19",e[e.Capture17=83]="Capture17",e[e.Capture18=84]="Capture18",e))(X||{});function $1(e){const t=e.kind,i=e.kindGlobal,r=e.kindTitle;switch(t){case ye.Global:switch(i){case X.AbilityVIT:return"Tutorial 1 : Basic Training";case X.ClearGeneralQuest:return"Tutorial 2 : General Quest";case X.ClearTitleQuest:return"Tutorial 3 : Title Quest";case X.UpgradeResource:return"Tutorial 4 : Upgrade";case X.Equip:return"Tutorial 5 : Equipment";case X.Alchemy:return"Tutorial 6 : Alchemy";case X.Guild:return"Tutorial 7 : Guild";case X.Town:return"Tutorial 8 : Town";case X.Research:return"Tutorial 9 : Town Research";case X.Rebirth:return"Tutorial 10 : Rebirth";case X.Challenge:return"Tutorial 11 : Challenge";case X.Expedition:return"Tutorial 12 : Expedition";case X.WorldAscension:return"Tutorial 13 : World Ascension";case X.AreaPrestige:return"Tutorial 14 : Area Prestige";case X.Upgrade1:return"To Further Stage 1";case X.Upgrade2:return"To Further Stage 2";case X.Upgrade3:return"To Further Stage 3";case X.Upgrade4:return"To Further Stage 4";case X.Upgrade5:return"To Further Stage 5";case X.Upgrade6:return"To Further Stage 6";case X.Upgrade7:return"To Further Stage 7";case X.Upgrade8:return"To Further Stage 8";case X.Nitro1:return"How to be a Nitro Booster Geek 1";case X.Nitro2:return"How to be a Nitro Booster Geek 2";case X.Nitro3:return"How to be a Nitro Booster Geek 3";case X.Nitro4:return"How to be a Nitro Booster Geek 4";case X.Nitro5:return"How to be a Nitro Booster Geek 5";case X.Nitro6:return"How to be a Nitro Booster Geek 6";case X.Nitro7:return"How to be a Nitro Booster Geek 7";case X.Nitro8:return"How to be a Nitro Booster Geek 8";case X.Nitro9:return"How to be a Nitro Booster Geek 9";case X.Nitro10:return"How to be a Nitro Booster Geek 10";case X.Nitro11:return"How to be a Nitro Booster Geek 11";case X.Nitro12:return"How to be a Nitro Booster Geek 12";case X.Nitro13:return"How to be a Nitro Booster Geek 13";case X.Nitro14:return"How to be a Nitro Booster Geek 14";case X.Nitro15:return"How to be a Nitro Booster Geek 15";case X.Nitro16:return"How to be a Nitro Booster Geek 16";case X.Nitro17:return"How to be a Nitro Booster Geek 17";case X.Nitro18:return"How to be a Nitro Booster Geek 18";case X.Nitro19:return"How to be a Nitro Booster Geek 19";case X.Alchemy1:return"The Road of Alchemy 1";case X.Alchemy2:return"The Road of Alchemy 2";case X.Alchemy3:return"The Road of Alchemy 3";case X.Alchemy4:return"The Road of Alchemy 4";case X.Alchemy5:return"The Road of Alchemy 5";case X.Alchemy6:return"The Road of Alchemy 6";case X.Alchemy7:return"The Road of Alchemy 7";case X.Alchemy8:return"The Road of Alchemy 8";case X.Upgrade9:return"To Further Stage 9";case X.Upgrade10:return"To Further Stage 10";case X.Upgrade11:return"To Further Stage 11";case X.Upgrade12:return"To Further Stage 12";case X.Upgrade13:return"To Further Stage 13";case X.Upgrade14:return"To Further Stage 14";case X.Upgrade15:return"To Further Stage 15";case X.Upgrade16:return"To Further Stage 16";case X.Upgrade17:return"To Further Stage 17";case X.Upgrade18:return"To Further Stage 18";case X.Capture1:return"Capturing Monsters 1";case X.Capture2:return"Capturing Monsters 2";case X.Capture3:return"Capturing Monsters 3";case X.Capture4:return"Capturing Monsters 4";case X.Capture5:return"Capturing Monsters 5";case X.Capture6:return"Capturing Monsters 6";case X.Capture7:return"Capturing Monsters 7";case X.Capture8:return"Capturing Monsters 8";case X.Capture9:return"Capturing Monsters 9";case X.Capture10:return"Capturing Monsters 10";case X.Capture11:return"Capturing Monsters 11";case X.Capture12:return"Capturing Monsters 12";case X.Capture13:return"Capturing Monsters 13";case X.Capture14:return"Capturing Monsters 14";case X.Capture15:return"Capturing Monsters 15";case X.Capture16:return"Capturing Monsters 16";case X.Capture17:return"Capturing Monsters 17";case X.Capture18:return"Capturing Monsters 18";case X.SD1:return"Super Dungeon 1";case X.SD2:return"Super Dungeon 2";case X.SD3:return"Super Dungeon 3";case X.SD4:return"Super Dungeon 4";case X.SD5:return"Super Dungeon 5";case X.SD6:return"Super Dungeon 6";case X.SD7:return"Super Dungeon 7";case X.SD8:return"Super Dungeon 8"}break;case ye.Daily:break;case ye.Title:switch(r){case L.SkillMaster1:return this.Title(q.SkillMaster)+" 1";case L.SkillMaster2:return this.Title(q.SkillMaster)+" 2";case L.SkillMaster3:return this.Title(q.SkillMaster)+" 3";case L.SkillMaster4:return this.Title(q.SkillMaster)+" 4";case L.MonsterDistinguisher1:return this.Title(q.MonsterDistinguisher)+" 1";case L.MonsterDistinguisher2:return this.Title(q.MonsterDistinguisher)+" 2";case L.MonsterDistinguisher3:return this.Title(q.MonsterDistinguisher)+" 3";case L.MonsterDistinguisher4:return this.Title(q.MonsterDistinguisher)+" 4";case L.MonsterDistinguisher5:return this.Title(q.MonsterDistinguisher)+" 5";case L.MonsterDistinguisher6:return this.Title(q.MonsterDistinguisher)+" 6";case L.EquipmentSlotWeapon1:return this.Title(q.EquipmentSlotWeapon)+" 1";case L.EquipmentSlotWeapon2:return this.Title(q.EquipmentSlotWeapon)+" 2";case L.EquipmentSlotWeapon3:return this.Title(q.EquipmentSlotWeapon)+" 3";case L.EquipmentSlotWeapon4:return this.Title(q.EquipmentSlotWeapon)+" 4";case L.EquipmentSlotWeapon5:return this.Title(q.EquipmentSlotWeapon)+" 5";case L.EquipmentSlotWeapon6:return this.Title(q.EquipmentSlotWeapon)+" 6";case L.EquipmentSlotArmor1:return this.Title(q.EquipmentSlotArmor)+" 1";case L.EquipmentSlotArmor2:return this.Title(q.EquipmentSlotArmor)+" 2";case L.EquipmentSlotArmor3:return this.Title(q.EquipmentSlotArmor)+" 3";case L.EquipmentSlotArmor4:return this.Title(q.EquipmentSlotArmor)+" 4";case L.EquipmentSlotArmor5:return this.Title(q.EquipmentSlotArmor)+" 5";case L.EquipmentSlotArmor6:return this.Title(q.EquipmentSlotArmor)+" 6";case L.EquipmentSlotJewelry1:return this.Title(q.EquipmentSlotJewelry)+" 1";case L.EquipmentSlotJewelry2:return this.Title(q.EquipmentSlotJewelry)+" 2";case L.EquipmentSlotJewelry3:return this.Title(q.EquipmentSlotJewelry)+" 3";case L.EquipmentSlotJewelry4:return this.Title(q.EquipmentSlotJewelry)+" 4";case L.EquipmentSlotJewelry5:return this.Title(q.EquipmentSlotJewelry)+" 5";case L.EquipmentSlotJewelry6:return this.Title(q.EquipmentSlotJewelry)+" 6";case L.PotionSlot1:return this.Title(q.PotionSlot)+" 1";case L.PotionSlot2:return this.Title(q.PotionSlot)+" 2";case L.PotionSlot3:return this.Title(q.PotionSlot)+" 3";case L.PhysicalAttack1:return this.Title(q.PhysicalDamage)+" 1";case L.PhysicalAttack2:return this.Title(q.PhysicalDamage)+" 2";case L.PhysicalAttack3:return this.Title(q.PhysicalDamage)+" 3";case L.PhysicalAttack4:return this.Title(q.PhysicalDamage)+" 4";case L.FireAttack1:return this.Title(q.FireDamage)+" 1";case L.FireAttack2:return this.Title(q.FireDamage)+" 2";case L.FireAttack3:return this.Title(q.FireDamage)+" 3";case L.FireAttack4:return this.Title(q.FireDamage)+" 4";case L.IceAttack1:return this.Title(q.IceDamage)+" 1";case L.IceAttack2:return this.Title(q.IceDamage)+" 2";case L.IceAttack3:return this.Title(q.IceDamage)+" 3";case L.IceAttack4:return this.Title(q.IceDamage)+" 4";case L.ThunderAttack1:return this.Title(q.ThunderDamage)+" 1";case L.ThunderAttack2:return this.Title(q.ThunderDamage)+" 2";case L.ThunderAttack3:return this.Title(q.ThunderDamage)+" 3";case L.ThunderAttack4:return this.Title(q.ThunderDamage)+" 4";case L.LightAttack1:return this.Title(q.LightDamage)+" 1";case L.LightAttack2:return this.Title(q.LightDamage)+" 2";case L.LightAttack3:return this.Title(q.LightDamage)+" 3";case L.LightAttack4:return this.Title(q.LightDamage)+" 4";case L.DarkAttack1:return this.Title(q.DarkDamage)+" 1";case L.DarkAttack2:return this.Title(q.DarkDamage)+" 2";case L.DarkAttack3:return this.Title(q.DarkDamage)+" 3";case L.DarkAttack4:return this.Title(q.DarkDamage)+" 4";case L.Porter1:return"The Great Race 1";case L.Porter2:return"The Great Race 2";case L.Porter3:return"The Great Race 3";case L.Porter4:return"The Great Race 4";case L.Porter5:return"The Great Race 5";case L.Porter6:return"The Great Race 6";case L.Alchemist1:return this.Title(q.Alchemist)+" 1";case L.Alchemist2:return this.Title(q.Alchemist)+" 2";case L.Alchemist3:return this.Title(q.Alchemist)+" 3";case L.Alchemist4:return this.Title(q.Alchemist)+" 4";case L.Alchemist5:return this.Title(q.Alchemist)+" 5";case L.EquipmentProf1:return this.Title(q.EquipmentProficiency)+" 1";case L.EquipmentProf2:return this.Title(q.EquipmentProficiency)+" 2";case L.EquipmentProf3:return this.Title(q.EquipmentProficiency)+" 3";case L.EquipmentProf4:return this.Title(q.EquipmentProficiency)+" 4";case L.EquipmentProf5:return this.Title(q.EquipmentProficiency)+" 5";case L.MetalHunter1:return this.Title(q.MetalHunter)+" 1";case L.MetalHunter2:return this.Title(q.MetalHunter)+" 2";case L.MetalHunter3:return this.Title(q.MetalHunter)+" 3";case L.MetalHunter4:return this.Title(q.MetalHunter)+" 4";case L.FireResistance1:return this.Title(q.FireResistance)+" 1";case L.FireResistance2:return this.Title(q.FireResistance)+" 2";case L.FireResistance3:return this.Title(q.FireResistance)+" 3";case L.FireResistance4:return this.Title(q.FireResistance)+" 4";case L.FireResistance5:return this.Title(q.FireResistance)+" 5";case L.IceResistance1:return this.Title(q.IceResistance)+" 1";case L.IceResistance2:return this.Title(q.IceResistance)+" 2";case L.IceResistance3:return this.Title(q.IceResistance)+" 3";case L.IceResistance4:return this.Title(q.IceResistance)+" 4";case L.IceResistance5:return this.Title(q.IceResistance)+" 5";case L.ThunderResistance1:return this.Title(q.ThunderResistance)+" 1";case L.ThunderResistance2:return this.Title(q.ThunderResistance)+" 2";case L.ThunderResistance3:return this.Title(q.ThunderResistance)+" 3";case L.ThunderResistance4:return this.Title(q.ThunderResistance)+" 4";case L.ThunderResistance5:return this.Title(q.ThunderResistance)+" 5";case L.LightResistance1:return this.Title(q.LightResistance)+" 1";case L.LightResistance2:return this.Title(q.LightResistance)+" 2";case L.LightResistance3:return this.Title(q.LightResistance)+" 3";case L.LightResistance4:return this.Title(q.LightResistance)+" 4";case L.LightResistance5:return this.Title(q.LightResistance)+" 5";case L.DarkResistance1:return this.Title(q.DarkResistance)+" 1";case L.DarkResistance2:return this.Title(q.DarkResistance)+" 2";case L.DarkResistance3:return this.Title(q.DarkResistance)+" 3";case L.DarkResistance4:return this.Title(q.DarkResistance)+" 4";case L.DarkResistance5:return this.Title(q.DarkResistance)+" 5";case L.Survival1:return this.Title(q.Survival)+" 1";case L.Survival2:return this.Title(q.Survival)+" 2";case L.Survival3:return this.Title(q.Survival)+" 3";case L.Survival4:return this.Title(q.Survival)+" 4";case L.Cooperation1:return this.Title(q.Cooperation)+" 1";case L.Cooperation2:return this.Title(q.Cooperation)+" 2";case L.Cooperation3:return this.Title(q.Cooperation)+" 3";case L.Quester1:return this.Title(q.Quester)+" 1";case L.Quester2:return this.Title(q.Quester)+" 2";case L.Quester3:return this.Title(q.Quester)+" 3";case L.Quester4:return this.Title(q.Quester)+" 4";case L.Quester5:return this.Title(q.Quester)+" 5";case L.Quester6:return this.Title(q.Quester)+" 6";case L.Quester7:return this.Title(q.Quester)+" 7";case L.Quester8:return this.Title(q.Quester)+" 8";case L.Quester9:return this.Title(q.Quester)+" 9";case L.Quester10:return this.Title(q.Quester)+" 10";case L.MonsterDistinguisher7:return this.Title(q.MonsterDistinguisher)+" 7";case L.MonsterDistinguisher8:return this.Title(q.MonsterDistinguisher)+" 8";case L.MetalHunter5:return this.Title(q.MetalHunter)+" 5";case L.MetalHunter6:return this.Title(q.MetalHunter)+" 6";case L.MetalHunter7:return this.Title(q.MetalHunter)+" 7";case L.MetalHunter8:return this.Title(q.MetalHunter)+" 8";case L.MetalHunter9:return this.Title(q.MetalHunter)+" 9";case L.ExplorerOfSD1:return this.Title(q.ExplorerOfSD)+" 1";case L.ExplorerOfSD2:return this.Title(q.ExplorerOfSD)+" 2";case L.ExplorerOfSD3:return this.Title(q.ExplorerOfSD)+" 3";case L.ExplorerOfSD4:return this.Title(q.ExplorerOfSD)+" 4";case L.ExplorerOfSD5:return this.Title(q.ExplorerOfSD)+" 5";case L.ExplorerOfSD6:return this.Title(q.ExplorerOfSD)+" 6";case L.ExplorerOfSD7:return this.Title(q.ExplorerOfSD)+" 7";case L.ExplorerOfSD8:return this.Title(q.ExplorerOfSD)+" 8";case L.ExplorerOfSD9:return this.Title(q.ExplorerOfSD)+" 9";case L.ExplorerOfSD10:return this.Title(q.ExplorerOfSD)+" 10";case L.ExplorerOfSD11:return this.Title(q.ExplorerOfSD)+" 11";case L.ExplorerOfSD12:return this.Title(q.ExplorerOfSD)+" 12";case L.ExplorerOfSD13:return this.Title(q.ExplorerOfSD)+" 13";case L.ExplorerOfSD14:return this.Title(q.ExplorerOfSD)+" 14";case L.ExplorerOfSD15:return this.Title(q.ExplorerOfSD)+" 15"}break;case ye.General:break}return"not found"}function U1(e){switch(e){case q.SkillMaster:return"Class Master";case q.MonsterDistinguisher:return"Monster Study";case q.EquipmentSlotWeapon:return"Apprentice of Weapon";case q.EquipmentSlotArmor:return"Apprentice of Armor";case q.EquipmentSlotJewelry:return"Apprentice of Jewelry";case q.PotionSlot:return"Apprentice of Potion";case q.EquipmentProficiency:return"Equipment Master";case q.PhysicalDamage:return"Master of Physical Attacks";case q.FireDamage:return"Master of Fire Attacks";case q.IceDamage:return"Master of Ice Attacks";case q.ThunderDamage:return"Master of Thunder Attacks";case q.LightDamage:return"Master of Light Attacks";case q.DarkDamage:return"Master of Dark Attacks";case q.Alchemist:return"Alchemist";case q.MetalHunter:return"Metal Hunter";case q.Survival:return"Survival";case q.FireResistance:return"Fire Soul";case q.IceResistance:return"Ice Soul";case q.ThunderResistance:return"Thunder Soul";case q.LightResistance:return"Light Soul";case q.DarkResistance:return"Dark Soul";case q.Cooperation:return"Proof of Rebirth";case q.DebuffResistance:return"Holy Guard";case q.MoveSpeed:return"Racer";case q.BreakingTheLimit:return"Breaking The Limit";case q.Quester:return"Quester";case q.ExplorerOfSD:return"Explorer of Super Dungeon";default:return"Not Implemented"}}var ht=(e=>(e[e.StatueOfHeroes=0]="StatueOfHeroes",e[e.Cartographer=1]="Cartographer",e[e.AlchemistsHut=2]="AlchemistsHut",e[e.Blacksmith=3]="Blacksmith",e[e.Temple=4]="Temple",e[e.Trapper=5]="Trapper",e[e.SlimeBank=6]="SlimeBank",e[e.MysticArena=7]="MysticArena",e[e.ArcaneResearcher=8]="ArcaneResearcher",e[e.Tavern=9]="Tavern",e[e.Dojo=10]="Dojo",e[e.AdventuringParty=11]="AdventuringParty",e))(ht||{});function O1(e){switch(e){case ht.StatueOfHeroes:return"Statue of Heroes";case ht.AlchemistsHut:return"Alchemist's Hut";case ht.Cartographer:return"Cartographer";case ht.AdventuringParty:return"Adventuring Party";case ht.Blacksmith:return"Blacksmith";case ht.Temple:return"Temple";case ht.SlimeBank:return"Slime Bank";case ht.MysticArena:return"Mystic Arena";case ht.ArcaneResearcher:return"Arcane Researcher";case ht.Tavern:return"Tavern";case ht.Dojo:return"Dojo";case ht.Trapper:return"Trapper";default:return"Not Implemented"}}function z1(e,t){switch(e){case ht.StatueOfHeroes:return`EXP Gain ${f.percent(t)}`;case ht.AlchemistsHut:return`Shop Material's Max Stock # ${f.tDigit(t,0)}`;case ht.Cartographer:return`Gold Gain ${f.percent(t)}`;case ht.AdventuringParty:return`Multiply Expedition Speed by ${f.percent(t)}`;case ht.Blacksmith:return`Multiply Equipment's Effect by ${f.percent(t)}`;case ht.Temple:return`Rebirth Point Gain ${f.percent(t)}`;case ht.SlimeBank:return`Slime Coin Gain ${f.percent(t)}`;case ht.MysticArena:return`Damage to Challenge Boss ${f.percent(t)}`;case ht.ArcaneResearcher:return`Multiply Research Power by ${f.percent(t)}`;case ht.Tavern:return"Not Implemented";case ht.Dojo:return`Multiply Skill Proficiency Gain by ${f.percent(t)}`;case ht.Trapper:return`Capturable Monster Max Lv : ${f.tDigit(t,0)}`;default:return"Not Implemented"}}function J1(e){switch(e){case Dt.Florzporb:return"Florzporb";case Dt.Arachnetta:return"Arachnetta";case Dt.GuardianKor:return"Guardian Kor";case Dt.Nostro:return"Nostro";case Dt.LadyEmelda:return"Lady Emelda";case Dt.NariSune:return"Nari Sune";case Dt.Octobaddie:return"Octobaddie";case Dt.Bananoon:return"Bananoon";case Dt.Glorbliorbus:return"Glorbliorbus";case Dt.DistortionSlime:return"Gankyū";default:return"Not Implemented"}}function j1(e,t=0,i=""){switch(e){case 0:return"Complete all the tutorial quests";case 1:return"Unlock Wizard";case 2:return"Unlock Angel";case 3:return"Unlock Thief";case 4:return"Unlock Archer";case 5:return"Unlock Tamer";case 6:return"Consume "+f.tDigit(t)+" nitro in total";case 7:return"Capture "+f.tDigit(t)+" monsters in total";case 8:return"Open "+f.tDigit(t)+" Treasure Chest(s)";case 9:return"Defeat "+f.tDigit(t)+" Mimic(s)";case 10:return"Vanquish "+f.tDigit(t)+" swarm(s)";case 11:return"Walk around the earth ["+i+" meters]";case 12:return"Walk around the earth twice ["+i+" meters]";case 13:return"Walk around the earth 3 times ["+i+" meters]";case 14:return"Walk around the earth 5 times ["+i+" meters]";case 15:return"Walk to the moon ["+i+" meters]";case 16:return"Walk to the moon and back ["+i+" meters]";case 17:return"Walk to the sun ["+i+" meters]";case 18:return"Spend "+f.tDigit(t)+" Epic Coin";case 19:return"Unlock "+i;case 20:return"Gain all "+i+" Set Unique Equipment";case 21:return"Gain "+i+" Gold in total";case 22:return"Gain "+i+" Stone in total";case 23:return"Gain "+i+" Crystal in total";case 24:return"Gain "+i+" Leaf in total";case 25:return"Reach Guild Level "+f.tDigit(t);case 26:return"Clear Raid Boss Battle ["+i+"]";case 27:return"Reach total Potion level "+f.tDigit(t);case 28:return"Gain "+i+" Alchemy Points in total";case 29:return"Gain "+f.tDigit(t)+" Equipment in total";case 30:return"Have "+f.tDigit(t)+" Weapon Equipment Slot of "+i;case 31:return"Have "+f.tDigit(t)+" Armor Equipment Slot of "+i;case 32:return"Have "+f.tDigit(t)+" Jewelry Equipment Slot of "+i;case 33:return"Have "+f.tDigit(t)+" Utility Equipment Slot of "+i;case 34:return"Have "+f.tDigit(t)+" Class Skill Slot of "+i;case 35:return"Have 8 Global Class Skill Slot";case 36:return"Perform Tier "+f.tDigit(t)+" Rebirth of "+i;case 37:return"Perform Tier "+f.tDigit(t)+" World Ascension";case 38:return"Play IEH2 for "+f.tDigit(t)+" day(s) playtime";case 39:return"Play IEH2 for "+f.tDigit(t)+" week(s) playtime";case 40:return"Play IEH2 for "+f.tDigit(t)+" month(s) playtime";case 41:return"Play IEH2 for "+f.tDigit(t)+" year(s) playtime";case 42:return"Walk to the sirius [8.6 light years]";case 43:return"Walk to the edge of the universe [13.8 Bill light years]";case 44:return"Total Skill Trigger #"+f.tDigit(t);case 45:return"TOTAL CLEARED # ";case 46:return"Total Clear Bonus : Gold Gain ";case 47:return" ( + 1% / clear )";case 48:return"Achievements";default:return""}}function X1(e,t=""){switch(e){case 0:return"Available Class Skill Slot + "+t;case 1:return"Available Weapon Equipment Slot + "+t;case 2:return"Available Armor Equipment Slot + "+t;case 3:return"Available Jewelry Equipment Slot + "+t;case 4:return"Available Utility Equipment Slot + "+t;case 5:return"SD Damage Multiplier + "+t;case 6:return"SD Damage Cut Multiplier + "+t;case 7:return"SD Challenge Boss Damage Multiplier + "+t;case 8:return"SD Challenge Boss Damage Cut Multiplier + "+t;case 9:return"SD Armored Fury + "+t;case 10:return"SD Warded Fury + "+t;default:return t}}function Q1(e,t=0){switch(e){case 0:return"This skill's Hit Count + 1";case 1:return"+"+f.percent(t)+" Physical Critical Chance (Add) while this skill is equipped";case 2:return"Enables a penetrating attack for this skill";case 3:return"This skill's damage";case 4:return"+"+f.percent(t)+" Magical Critical Chance (Add) while this skill is equipped";case 5:return"Steal Chance";case 6:return"This skill's Area of Effect + ";case 7:return"Placeholder";case 8:return"This skill's critical chance : ";case 9:return"Disappear briefly and reappear at the furthest monster to deal damage";case 10:return" chance to steal a loot material every trigger";case 11:return"Steal more 1 material while this skill is equipped";case 12:return"+"+f.percent(t)+" Physical Critical Chance (Mul) while this skill is equipped";case 13:return"+"+f.percent(t)+" Magical Critical Chance (Mul) while this skill is equipped";default:return""}}function Y1(e,t=0){switch(e){case 0:return"This skill fires an additional projectile";case 1:return"25% chance to double Heal Point every trigger";case 2:return"25% chance to cure debuffs every trigger";case 3:return"5% chance to additionally restore 10% of Max HP";case 4:return"0.5% chance to Full Heal every trigger";case 5:return"HP Regeneration + "+f.tDigit(t,1)+" / sec while this skill is equipped";case 6:return"+"+f.percent(t)+" Physical Nullified Chance while this skill is equipped";case 7:return"Move Speed + "+f.percent(t)+" while this skill is equipped";case 8:return"This skill's damage + 50% per dash meter";case 9:return"This skill's Area of Effect + ";case 10:return"This skill's Hit Count + 1";case 11:return"This skill's Cast Time -25%";case 12:return"Placeholder";case 13:return"+"+f.percent(t)+" Debuff Resistance while this skill is equipped";case 14:return"HP Regeneration + "+f.tDigit(t,1)+" / sec (After) while this skill is equipped";case 15:return"HP + "+f.tDigit(t,1)+" (After) while this skill is equipped";case 16:return"ATK + "+f.tDigit(t,1)+" (After) while this skill is equipped";case 17:return"MATK + "+f.tDigit(t,1)+" (After) while this skill is equipped";case 18:return"SD Damage Multiplier + "+f.percent(t,1)+" (Mul) while this skill is equipped";case 19:return"+"+f.percent(t)+" Magical Nullified Chance while this skill is equipped";case 20:return"increase Hero's skill +"+f.tDigit(t,1)+" without increase MPConsumption while this skill is equipped";case 21:return"This skill's Hit Count + "+f.tDigit(t);case 22:return"This skill's Cast Time -"+f.percent(t,0);default:return""}}function Z1(e){switch(e){case 0:return"This skill's Hit Count + 1";case 1:return"This skill's MP Consumption -50%";case 2:return"This skill's Area of Effect + ";case 3:return"This skill's Cast Time -50%";case 4:return"Remove this skill's MP Consumption";case 5:return"This skill's Range + ";case 6:return"This skill's Cast Time -25%";case 7:return"Placeholder";case 8:return"This skill's damage + 50% per dash meter";case 9:return"Makes a running dash toward the target monster to attack.";case 10:return"This skill's cast time starts at full on area start";default:return""}}function K1(e,t=0){switch(e){case 0:return"This skill's Hit Count + 1";case 1:return"+"+f.percent(t)+" Physical Damage while this skill is equipped";case 2:return"Enables a penetrating attack for this skill";case 3:return"Placeholder";case 4:return"Shoot multiple arrows that target all the monsters in the field";case 5:return"+"+f.percent(t)+" Thunder Damage while this skill is equipped";case 6:return"+"+f.percent(t)+" Ice Damage while this skill is equipped";case 7:return"Strike a penetrating ice arrow at the furthest monster";case 8:return"+"+f.percent(t)+" Fire Damage while this skill is equipped";case 9:return"+"+f.percent(t)+" Light Damage while this skill is equipped";case 10:return"+"+f.percent(t)+" Dark Damage while this skill is equipped";case 11:return"Shoots an arrow at the center that pulls all monsters on screen toward it";case 12:return"Circle the edge of the field to move out of melee range of monsters with a movement penalty during Auto Move mode";default:return""}}function eM(e){switch(e){case 0:return"This skill's Area of Effect + ";case 1:return"This skill's Hit Count + 1";case 2:return"This skill's Area of Effect + ";case 3:return"This skill's MP Consumption -50%";case 4:return"This skill's MP Gain + 100%";case 5:return"This skill's Cast Time -50%";case 6:return"Placeholder";default:return""}}function tM(e,t=0){switch(e){case 0:return"+"+f.tDigit(t)+" Pet Summon Slot while this skill is equipped";case 1:return`Enables to summon pets
- Pet's Basic Attack Damage Multiplier : `;case 2:return"Multiplies this skill's Damage Multiplier by ";case 3:return`Gives the summoned pets an attack order regardless their cooldown
- Pet's Attack Damage Multiplier : `;case 4:return`Gives the summoned pets an order to let them rush to random monsters
- Pet's Attack Damage Multiplier : `;case 5:return`Gives the summoned pets an order to let them come back to the hero and attack the closest monster to the hero
- Pet's Attack Damage Multiplier : `;case 6:return"25% chance to double Heal Point every trigger";case 7:return"25% chance to cure debuffs every trigger";case 8:return"5% chance to additionally restore 10% of Max HP";case 9:return"0.5% chance to Full Heal every trigger";case 10:return"Restore the summoned pets' HP";case 11:return"This skill's chance effect + ";case 12:return" chance that each summoned pet randomly uses a skill that the hero equips every ";case 13:return`
- Pets use no MP to trigger a skill regardless its cooldown`;case 14:return`
- Skill Proficiency Gain Rate by the pet use : `;case 15:return"+"+f.percent(t)+" Pet's Critical Chance while this skill is equipped";case 16:return"The summoned pet's ATK & MATK : + ";case 17:return"+"+f.percent(t)+" Pet's Critical Chance while this skill is equipped";case 18:return"The summoned pet's Attack Speed & Move Speed : + ";case 19:return"+"+f.percent(t)+" Loyalty Point Gain while this skill is equipped";case 20:return"Pet EXP Gain : + ";case 21:return"Placeholder";case 22:return" chance to capture the target monster without traps every trigger ( + ";case 23:return`
- To capture, the color trap must be unlocked in Shop with enough capturable level`;case 24:return"Attempts to capture all monsters of the same color as the target in the AOE";case 25:return"Priority is given to capturing monsters of the color of the equipped traps";case 26:return"+"+f.percent(t)+" Taming Point Gain while this skill is equipped";case 27:return"+"+f.percent(t)+" chance to double Capture while this skill is equipped";case 28:return"+"+f.percent(t)+" chance to Triple Capture while this skill is equipped";default:return""}}function sM(e,t=""){switch(e){case 0:return t+" hour(s)";case 1:return`<size=24>BONUS CODE</size>
Please enter the bonus code here.`;case 2:return"You cannot equip the same Talisman.";case 3:return"You cannot equip the same Trap.";case 4:return"You cannot equip the same type.";case 5:return"Tier "+t;case 6:return"Non-"+t;case 7:return"Total Realtime Played";case 8:return"Total Time Played";case 9:return"Quit Background Mode";case 10:return"Start "+t;case 11:return"Sold Out";case 12:return t+" Drop Chance";case 13:return"Switching to "+t;case 14:return"Current Progress";case 15:return"Select order";case 16:return"Apply";case 17:return"Skill Cast Speed";case 18:return"Input a name for "+t;case 19:return t+" while this skill is equipped";case 20:return"Poison Damage";case 21:return"Skill Level Milestone ["+t+"]";case 22:return"Total highest Skill levels reached";case 23:return"Damage-type skill's damage : <color=green>"+t+"x</color> ( 2x per Lv 100 )";case 24:return"2x per Lv 50";case 25:return"Artifact Gain Chance";case 26:return"SD Enchant Gain Chance";case 27:return"Right click to select this hero to swap current equipment from.";case 28:return"Right click to swap "+t+"'s current equipment for this hero's current equipment.";default:return t}}function iM(e){switch(e){case ke.StoneGain:return"Stone Gain";case ke.CrystalGain:return"Crystal Gain";case ke.LeafGain:return"Leaf Gain";case ke.GoldGain:return"Gold Gain";default:return"Not Implemented"}}function aM(e,t=""){switch(e){case 0:return"Taming Point Gain + "+t;case 1:return"Loyalty Point Gain + "+t;case 2:return"Pet EXP Gain + "+t;case 3:return"Pet Stats + "+t;case 4:return"Pet Passive Effect + "+t;case 5:return"Double Capture Chance + "+t;case 6:return"Triple Capture Chance + "+t;case 7:return"Improves Pet Active Effect of "+t;case 8:return"Common Material Drop Chance + "+t+" (Multiplicative)";case 9:return"Rare Material Drop Chance + "+t+" (Multiplicative)";case 10:return"Active Pet Slot + "+t;case 11:return"Pets can be summoned and sent on Expeditions simultaneously";case 12:return"Pets can be summoned by multiple Heroes simultaneously";default:return""}}function rM(e,t=""){switch(e){case 0:return"Unlocks 1 Expedition Team";case 1:return"Expedition Milestone Lv 10";case 2:return"Unlocks a new Distant Expedition";case 3:return"Unlocks 1 Expedition Team";case 4:return"Expedition Milestone Lv 20";case 5:return"Unlocks a new Distant Expedition";case 6:return"Unlocks 1 Expedition Team";case 7:return"Expedition Milestone Lv 50";case 8:return"Unlocks a new Distant Expedition";case 9:return"Expedition Milestone Lv 75";case 10:return"Unlocks a new Distant Expedition";case 11:return"Expedition Pets persist on WA (only 1st slot until WA1 Accomp #65)";case 12:return"Expedition progress persists on WA (requires WA1 Accomp #65)";case 13:return"Expedition Passive Effect + 25%";case 14:return"Expedition Speed + 25%";case 15:return"Expedition [Field Training] Passive Effect + "+t;case 16:return"Expedition EXP Gain + "+t;case 17:return"Expedition Reward + "+t;case 18:return"Expedition Passive Effect + "+t;case 19:return"Expedition Speed + "+t;case 20:return"Pet Stats + "+t;case 21:return"Gold Cap + "+t;default:return""}}var et=(e=>(e[e.SlimeCoinCap=0]="SlimeCoinCap",e[e.SlimeCoinEfficiency=1]="SlimeCoinEfficiency",e[e.UpgradeCostReduction=2]="UpgradeCostReduction",e[e.ResourceBooster=3]="ResourceBooster",e[e.StatsBooster=4]="StatsBooster",e[e.GoldCapBooster=5]="GoldCapBooster",e[e.MysteriousWaterGain=6]="MysteriousWaterGain",e[e.MaterialFinder=7]="MaterialFinder",e[e.ShopTimer=8]="ShopTimer",e[e.ResearchPower=9]="ResearchPower",e[e.SPD=10]="SPD",e[e.FireRes=11]="FireRes",e[e.IceRes=12]="IceRes",e[e.ThunderRes=13]="ThunderRes",e[e.LightRes=14]="LightRes",e[e.DarkRes=15]="DarkRes",e[e.DebuffRes=16]="DebuffRes",e[e.SkillProf=17]="SkillProf",e[e.EquipmentProf=18]="EquipmentProf",e[e.CritDamage=19]="CritDamage",e[e.GoldGain=20]="GoldGain",e[e.SlimeCoinCap2=21]="SlimeCoinCap2",e))(et||{});function lM(e){let t="",i="",r="";switch(e.slimebankKind){case et.SlimeCoinCap:t="Slime Coin Cap 1",i="Increases Slime Coin Cap",r=`+ ${f.tDigit(e.EffectValue())}`;break;case et.SlimeCoinEfficiency:t="Slime Coin Efficiency",i="Increases Slime Coin Gain per overflowed Gold ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.UpgradeCostReduction:t="Upgrade Tab Cost Reduction",i="Reduces General Upgrade's cost",r="by "+f.percent(e.EffectValue());break;case et.ResourceBooster:t="Resource Booster",i="Increases Resource Upgrade's effect",r=`+ ${f.percent(e.EffectValue())}`;break;case et.StatsBooster:t="Stats Booster",i="Increases Stats Upgrade's effect",r=`+ ${f.percent(e.EffectValue())}`;break;case et.GoldCapBooster:t="Gold Cap Booster",i="Multiply Gold Cap Upgrade's effect",r="by "+f.percent(1+e.EffectValue());break;case et.MysteriousWaterGain:t="Mysterious Water Gain",i="Increases Mysterious Water Gain",r=`+ ${f.tDigit(e.EffectValue(),3)}`;break;case et.MaterialFinder:t="Material Finder",i="Multiplies Common Material Drop Chance",r="by "+f.percent(1+e.EffectValue());break;case et.ShopTimer:t="Shop Timer Reduction",i="Decreases Shop's restock timer",r="by "+f.tDigit(e.EffectValue())+" sec";break;case et.ResearchPower:t="Town Research Booster",i="Multiplies Town Research Power ",r="by "+f.percent(1+e.EffectValue());break;case et.SPD:i="Increases SPD ",r=`+ ${f.tDigit(e.EffectValue())}`;break;case et.FireRes:i="Increases Fire Resistance ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.IceRes:i="Increases Ice Resistance ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.ThunderRes:i="Increases Thunder Resistance ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.LightRes:i="Increases Light Resistance ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.DarkRes:i="Increases Dark Resistance ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.DebuffRes:i="Increases Debuff Resistance ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.SkillProf:i="Increases Skill Proficiency Gain ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.EquipmentProf:i="Increases Equipment Proficiency Gain ",r=`+ ${f.percent(e.EffectValue())}`;break;case et.CritDamage:t="Critical Damage",i="Increases Critical Damage ",r=f.percent(e.EffectValue())+" of normal damage";break;case et.GoldGain:t="Gold Gain",i="Multiplies Gold Gain",r="by "+f.percent(1+e.EffectValue());break;case et.SlimeCoinCap2:t="Slime Coin Cap 2",i="Multiplies Slime Coin Cap",r="by "+f.percent(1+e.EffectValue());break}return{name:t,description:i,effect:r}}var rs=(e=>(e[e.TownBuldingLevel=0]="TownBuldingLevel",e[e.MissionClearNum=1]="MissionClearNum",e[e.UpgradeLevel=2]="UpgradeLevel",e[e.MoveDistance=3]="MoveDistance",e[e.DictionaryPoint=4]="DictionaryPoint",e[e.DisassembleEquipment=5]="DisassembleEquipment",e[e.RebirthPointGainTier1=6]="RebirthPointGainTier1",e[e.RebirthPointGainTier2=7]="RebirthPointGainTier2",e))(rs||{});function nM(e,t=0,i=0){let r="",h="",c="";switch(e.kind){case rs.TownBuldingLevel:r="Raise the Town",h="Total levels of Town Buildings",c="Town Building's level effect + "+f.percent(t);break;case rs.MissionClearNum:r="Map Milestoner",h="Area Missions completed this ascension #",c="Town Material reward per Area Difficulty + "+f.percent(t);break;case rs.UpgradeLevel:r="Very Resourceful",h="Total levels of Resource Upgrades",c="Resource Gain + "+f.percent(t);break;case rs.MoveDistance:r="Walk the World",h="Total Walked Distance (meters)",c="Move Speed + "+f.percent(t);break;case rs.DictionaryPoint:r="Polished Equipper",h="Total Dictionary Points gained",c="Dictionary Upgrade effect + "+f.percent(t);break;case rs.DisassembleEquipment:r="Pro Disassembler",h="Total Town Material Gained from disassembling Equipment",c="Equipment Proficiency Gain + "+f.percent(t);break;case rs.RebirthPointGainTier1:r="Rebirther 1",h="Total Tier 1 Rebirth Points gained",c="Tier 1 Rebirth Point Gain + "+f.percent(t);break;case rs.RebirthPointGainTier2:r="Rebirther 2",h="Total Tier 2 Rebirth Points gained",c="Tier 2 Rebirth Point Gain + "+f.percent(t);break}return{name:r,effect:c,requirement:h}}var jt=(e=>(e[e.GuildExpGain=0]="GuildExpGain",e[e.AreaClearCount=1]="AreaClearCount",e[e.ActiveHero=2]="ActiveHero",e[e.SkillProfGain=3]="SkillProfGain",e[e.PreRebirthTier1=4]="PreRebirthTier1",e[e.PreRebirthTier2=5]="PreRebirthTier2",e[e.RebirthTier1BonusCap=6]="RebirthTier1BonusCap",e[e.RebirthTier2BonusCap=7]="RebirthTier2BonusCap",e[e.PointGainBonus=8]="PointGainBonus",e[e.NitroSpeed=9]="NitroSpeed",e))(jt||{});function uM(e,t=0){let i="",r="";switch(e.kind){case jt.GuildExpGain:i="Guild EXP Booster",r="Multiplies Guild EXP Gain by "+f.percent(1+t);break;case jt.AreaClearCount:i="Area Booster",r="Increases Area Clear # and Clear Reward by "+f.tDigit(t,0);break;case jt.ActiveHero:i="Active Hero Slot Expansion",r="Increases activable Hero slot by "+f.tDigit(t,0);break;case jt.SkillProfGain:i="Skill Proficiency Boost",r="Increases Skill Proficiency Gain by "+f.percent(t);break;case jt.PreRebirthTier1:i="Pre-Rebirth Tier 1",r="Adds free Rebirth Tier 1 Point + "+f.tDigit(t)+" at the start of a new WA";break;case jt.PreRebirthTier2:i="Pre-Rebirth Tier 2",r="Adds free Rebirth Tier 2 Point + "+f.tDigit(t)+" at the start of a new WA";break;case jt.RebirthTier1BonusCap:i="Rebirth Tier 1 Bonus Expansion",r="Increases the level cap for Tier 1 Rebirth Bonus Ability Points by Lv "+f.tDigit(t);break;case jt.RebirthTier2BonusCap:i="Rebirth Tier 2 Bonus Expansion",r="Increases the level cap for Tier 2 Rebirth Bonus Ability Points by Lv "+f.tDigit(t);break;case jt.PointGainBonus:i="WA Milestone Point Efficiency",r="Increases the point gain per level of WA Milestones by "+f.tDigit(t);break;case jt.NitroSpeed:i="Nitro Improvements",r="Nitro Speed + "+f.tDigit(t,1)+"x";break}return{name:i,effect:r}}function hM(e){switch(e){case gs.DPS:return"DPS";case gs.SkillProficiency:return"Skill Proficiency Gain";case gs.TPG:return"Taming Point Gain";case gs.LPG:return"Loyalty Point Gain";default:return"Not Implemented"}}const M={EquipmentEffectOptimizerString:hM,WorldAscensionMilestoneString:nM,WorldAscensionUpgradeString:uM,SlimeBankUpgradeString:lM,EquipmentEffectName:d1,ExpeditionMilestoneString:rM,PetRankMilestoneString:aM,GlobalStatsString:iM,OtherString:sM,EquipmentName:g1,StatsBreakdown:S1,SDUpgradeString:m1,SDShopNameString:M1,SDGemString:v1,PotionName:w1,ExpeditionGlobalInformationString:k1,SDName:A1,ForgeEffectString:R1,ForgeNameString:C1,Material:L1,EquipmentEffect:P1,PotionEffect:D1,PotionTypeString:y1,SkillName:_1,SDPowerupString:I1,SDShopEffectValueString:E1,TownMaterialNameString:V1,MonsterSpeciesName:H1,MonsterPetPassiveEffectString:q1,Stat:W1,Quest:$1,Title:U1,BuildingString:O1,BuildingEffectString:z1,MonsterShortNameString:J1,MonsterPetPassiveEffectString2:N1,AchievementString:j1,GradeMilestone:X1,ThiefSkillsString:Q1,AngelSkillsString:Y1,WarriorSkillsString:Z1,ArcherSkillsString:K1,WizardSkillsString:eM,TamerSkillsString:tM},cM=oe({__name:"Tooltip",setup(e){const t=nt(!1),i=nt(),r=h=>{if(i.value.textContent=="")return;const c=i.value.getBoundingClientRect(),m=window.innerHeight-20-h.clientY;i.value.style.left=`${h.clientX+20}px`,c.height>m?i.value.style.top=`${h.clientY-(c.height-m)}px`:i.value.style.top=`${h.clientY}px`};return(h,c)=>(b(),B("div",null,[g("div",{class:"trigger",onMouseenter:c[0]||(c[0]=m=>t.value=!0),onMousemove:c[1]||(c[1]=m=>r(m)),onMouseleave:c[2]||(c[2]=m=>t.value=!1)},[Ws(h.$slots,"default",{},void 0,!0)],32),Le(g("div",{class:"tooltip",ref_key:"content",ref:i},[Ws(h.$slots,"content",{},void 0,!0)],512),[[$a,t.value&&i.value.textContent!=""]])]))}}),Ql=Ft(cM,[["__scopeId","data-v-e718c7c9"]]),Gs=e=>(ws("data-v-0f3e826a"),e=e(),ks(),e),oM=["tabindex","src"],fM={class:"head"},pM=["src"],dM={key:0,class:"purple"},gM={class:"green"},SM=Gs(()=>g("h5",null,"Information",-1)),mM={key:0},MM={class:"green"},EM={class:"green"},vM=Gs(()=>g("br",null,null,-1)),wM={class:"yellow"},kM=["innerHTML"],AM={key:0,class:"gray"},RM=Gs(()=>g("br",null,null,-1)),CM=Gs(()=>g("h5",null,"Forged Effect",-1)),LM={class:"orange"},PM={class:"orange"},DM=Gs(()=>g("br",null,null,-1)),yM=Gs(()=>g("h5",null,"Proficiency",-1)),bM={class:"green"},TM={class:"green"},GM={class:"wrapper"},BM={class:"head"},xM=["src"],FM={key:0,value:"0"},_M=["selected","value"],IM={class:"green"},VM=Gs(()=>g("h5",null,"Information",-1)),HM={key:0},qM={class:"green"},NM={class:"green"},WM=Gs(()=>g("br",null,null,-1)),$M=Gs(()=>g("h5",null,"Effect",-1)),UM=["innerHTML"],OM=Gs(()=>g("br",null,null,-1)),zM={style:{display:"flex"}},JM=["onUpdate:modelValue"],jM=["value"],XM=["onClick"],QM=["onUpdate:modelValue"],YM=["value","selected"],ZM=["onUpdate:modelValue","min","max","value"],KM=Gs(()=>g("br",null,null,-1)),eE={class:"orange"},tE=["onUpdate:modelValue"],sE=Gs(()=>g("br",null,null,-1)),iE=oe({__name:"EquipmentInfo",props:{id:{}},setup(e){const t=e,i=nt(!1),r=nt(),h=Ve("game"),c=gh(),m=h.data.inventory.equipmentSlots[t.id],w=nt(),k=Vt(()=>{let z=4;return m.forgeEffects.forEach((te,ie)=>{te.IsForged()&&z--}),z});function P(){const z="img/equip";if(m.slotId<500)return`${z}/${E[m.kind]}.png`;if(m.kind==0)switch(m.slotPart){case V.Weapon:return`${z}/EquipSlotWeapon.png`;case V.Armor:return`${z}/EquipSlotArmor.png`;case V.Jewelry:return`${z}/EquipSlotJewelry.png`}else return`${z}/${E[m.kind]}.png`}function D(z){switch(c.type=z,z){case Bt.Equipment:c.data=m.Copy(Bt.Equipment);break;case Bt.OptionEffect:c.data=m.Copy(Bt.OptionEffect);break;case Bt.ForgeEffects:c.data=m.Copy(Bt.ForgeEffects);break}}function N(){switch(c.type){case Bt.Equipment:m.Paste(Bt.Equipment,c.data);break;case Bt.OptionEffect:m.Paste(Bt.OptionEffect,c.data);break;case Bt.ForgeEffects:m.Paste(Bt.ForgeEffects,c.data);break}}return(z,te)=>(b(),B("div",null,[ee(Ql,{style:{width:"700px"}},ql({default:Ee(()=>[g("img",{tabindex:t.id,ref_key:"img",ref:r,class:mt(["icon48",A(m).isDisabled()&&A(m).slotId>500?"disabled":""]),src:P(),onClick:te[0]||(te[0]=ie=>A(m).isDisabled()?null:w.value.showModal()),onMouseoverOnce:te[1]||(te[1]=ie=>i.value=!0),onMouseover:te[2]||(te[2]=ie=>r.value.focus()),onKeydown:[te[3]||(te[3]=Vn(In(ie=>D(A(Bt).Equipment),["ctrl"]),["c"])),te[4]||(te[4]=Vn(In(ie=>N(),["ctrl"]),["v"]))]},null,42,oM)]),_:2},[A(m).kind!=0&&i.value?{name:"content",fn:Ee(()=>[g("div",fM,[g("img",{class:"icon96",src:P()},null,8,pM),A(m).globalInfo.isArtifact?(b(),B("span",dM,"[Artifact]")):ft("",!0),j(" "+T(A(M).EquipmentName(A(m).kind))+" < ",1),g("span",gM,"Lv "+T(A(m).level)+" "+T(A(m).forgeEffects[A(_e).EqLevel].effectValue>0?` + ${A(m).forgeEffects[A(_e).EqLevel].effectValue}`:""),1),j(" > "),(b(!0),B(K,null,he(A(m).optionEffects,(ie,pe)=>(b(),B("span",{class:mt(ie.isAfter?"purple":"yellow")},[pe<A(m).totalOptionNum.Value()?(b(),B(K,{key:0},[j(" [ "+T(A(M).EquipmentEffectName(ie.kind))+" "+T(ie.kind!=0?ie.level:"")+" ] ",1)],64)):ft("",!0)],2))),256))]),SM,g("p",null,"-Type : "+T(A(V)[A(m).globalInfo.part]),1),g("p",null,"-Rarity : "+T(A(Q)[A(m).globalInfo.rarity]),1),A(m).setKind?(b(),B("p",mM,[j(" -Unique : "+T(A(we)[A(m).globalInfo.setKind])+" Set ",1),g("span",MM,"[Effect Bonus "+T(A(f).percent(A(m).EffectMultiplierFromSetItem(A(m).heroKind)-1))+"]",1),j(" Equipping "),g("span",EM,T(A(h).data.inventory.SetItemEquippedNum(A(m).setKind,A(m).heroKind)),1),j(" / 8 ")])):ft("",!0),vM,g("h5",null,[j(" Effect "),g("span",wM,T(A(m).EQAbusePercent(A(m).heroKind)<1?`Efficiency(Equipment Tenacity) : ${A(f).percent(A(m).EQAbusePercent(A(m).heroKind))}`:""),1)]),(b(!0),B(K,null,he(A(m).globalInfo.effects,(ie,pe)=>(b(),B("p",{innerHTML:A(M).EquipmentEffect(ie.kind,A(m).EffectValue(A(m).OriginalEffectValue(pe),A(m).heroKind),!1,A(m).EffectValue(A(m).OriginalEffectIncrementPerLevel(pe),A(m).heroKind),!1)},null,8,kM))),256)),(b(!0),B(K,null,he(A(m).optionEffects,(ie,pe)=>(b(),B("p",null,[pe<A(m).totalOptionNum.Value()?(b(),B(K,{key:0},[j(T(A(M).EquipmentEffect(ie.kind,A(m).EffectValue(ie.effectValue,A(m).heroKind)))+" ",1),ie.kind!=0?(b(),B("span",AM,"("+T(A(M).EquipmentEffect(ie.kind,A(m).EffectValue(ie.MinEffectValue(),A(m).heroKind),!1,0,!0))+" ~ "+T(A(M).EquipmentEffect(ie.kind,A(m).EffectValue(ie.MaxEffectValue(),A(m).heroKind),!1,0,!0))+")",1)):ft("",!0)],64)):ft("",!0)]))),256)),RM,CM,(b(!0),B(K,null,he(A(m).forgeEffects,ie=>(b(),B("p",LM,[ie.effectValue>0?(b(),B(K,{key:0},[j(" - "+T(ie.EffectString()),1)],64)):ft("",!0)]))),256)),(b(!0),B(K,null,he(k.value,ie=>(b(),B("p",PM,"- [Forging Available]"))),256)),DM,yM,(b(!0),B(K,null,he(A(m).globalInfo.levelMaxEffects,(ie,pe)=>(b(),B("p",null,[j(" -"+T(A(R)[pe])+" < ",1),g("span",bM,"Lv "+T(A(m).globalInfo.levels[pe].value),1),j(" >: "),g("span",TM,"["+T(A(M).EquipmentEffectName(ie.kind))+" + "+T(ie.kind==0?A(m).globalInfo.rarity==A(Q).Epic?3:A(m).globalInfo.rarity==A(Q).Rare||A(m).globalInfo.rarity==A(Q).SuperRare?2:1:A(f).convertTo(A(m).EffectValue(ie.EffectValue(0),A(m).heroKind),2,ie.valueKind))+"]",1)]))),256))]),key:"0"}:void 0]),1024),i.value?(b(),B("dialog",{key:0,ref_key:"dialog",ref:w,onMousedown:te[8]||(te[8]=ie=>{ie.target.nodeName==w.value.nodeName&&w.value.close()})},[g("div",GM,[g("div",BM,[g("img",{class:"icon96",src:P()},null,8,xM),g("select",{name:"kind",onChange:te[5]||(te[5]=ie=>A(m).kind=parseInt(ie.target.value))},[A(m).slotPart!=A(V).Weapon?(b(),B("option",FM,"Nothing")):ft("",!0),(b(!0),B(K,null,he(A(h).data.equipment.globalInformations.filter(ie=>ie.part==A(m).slotPart),ie=>(b(),B("option",{selected:ie.kind==A(m).kind,value:ie.kind},T(A(M).EquipmentName(ie.kind)),9,_M))),256))],32),j(" < "),g("span",IM,"Lv "+T(A(m).level)+" "+T(A(m).forgeEffects[A(_e).EqLevel].effectValue>0?` + ${A(m).forgeEffects[A(_e).EqLevel].effectValue}`:""),1),j(" > "),g("div",null,[(b(!0),B(K,null,he(A(m).globalInfo.levels,(ie,pe)=>(b(),B("span",null,[j(T(A(R)[pe])+" ",1),ee(_t,{modelValue:ie.value,"onUpdate:modelValue":Me=>ie.value=Me,size:4},null,8,["modelValue","onUpdate:modelValue"])]))),256))])]),VM,g("p",null,"-Type : "+T(A(V)[A(m).globalInfo.part]),1),g("p",null,"-Rarity : "+T(A(Q)[A(m).globalInfo.rarity]),1),A(m).setKind?(b(),B("p",HM,[j(" -Unique : "+T(A(we)[A(m).globalInfo.setKind])+" Set ",1),g("span",qM,"[Effect Bonus "+T(A(f).percent(A(m).EffectMultiplierFromSetItem(A(m).heroKind)-1))+"]",1),j(" Equipping "),g("span",NM,T(A(h).data.inventory.SetItemEquippedNum(A(m).setKind,A(m).heroKind)),1),j(" / 8 ")])):ft("",!0),WM,$M,(b(!0),B(K,null,he(A(m).globalInfo.effects,(ie,pe)=>(b(),B("p",{innerHTML:A(M).EquipmentEffect(ie.kind,A(m).EffectValue(A(m).OriginalEffectValue(pe),A(m).heroKind),!1,A(m).EffectValue(A(m).OriginalEffectIncrementPerLevel(pe),A(m).heroKind),!1)},null,8,UM))),256)),OM,(b(!0),B(K,null,he(A(m).optionEffects,(ie,pe)=>(b(),B("p",zM,[pe<A(m).totalOptionNum.Value()?(b(),B(K,{key:0},[Le(g("select",{"onUpdate:modelValue":Me=>ie.kind=Me,name:"optionKind"},[(b(!0),B(K,null,he(A(W).EquipmentEffectKind,(Me,Pe)=>(b(),B("option",{value:Pe},T(A(M).EquipmentEffectName(Pe)),9,jM))),256))],8,JM),[[aa,ie.kind]]),ie.kind==0?(b(),B(K,{key:0},[j("  "),g("button",{class:"small",onClick:Me=>A(m).FindMaxEnchantDPS(ie.optionId)},"Find MAX DPS",8,XM)],64)):ft("",!0),ie.kind?(b(),B(K,{key:1},[j("  Lv  "),Le(g("select",{"onUpdate:modelValue":Me=>ie.level=Me,name:"optionLevel"},[(b(!0),B(K,null,he(ie.MaxLevel(),Me=>(b(),B("option",{value:Me,selected:ie.level==Me},T(Me),9,YM))),256))],8,QM),[[aa,ie.level]]),Le(g("input",{"onUpdate:modelValue":Me=>ie.effectValue=Me,type:"range",step:"0.00000001",min:ie.MinEffectValue(),max:ie.MaxEffectValue(),value:ie.effectValue,name:"optionValue"},null,8,ZM),[[tt,ie.effectValue,void 0,{lazy:!0}]]),j(" "+T(A(M).EquipmentEffect(ie.kind,A(m).EffectValue(ie.effectValue,A(m).heroKind),!1,0,!0)),1)],64)):ft("",!0)],64)):ft("",!0)]))),256)),KM,(b(!0),B(K,null,he(A(m).forgeEffects,ie=>(b(),B("p",eE,[Le(g("input",{type:"text","onUpdate:modelValue":pe=>ie.effectValue=pe,name:"forgeValue",size:"8"},null,8,tE),[[tt,ie.effectValue,void 0,{number:!0,lazy:!0}]]),j("- "+T(ie.EffectString()),1)]))),256)),sE,g("button",{onClick:te[6]||(te[6]=ie=>D(A(Bt).OptionEffect)),class:"btn btn-gray"},"Copy All Enchantments"),g("button",{onClick:te[7]||(te[7]=ie=>D(A(Bt).ForgeEffects)),class:"btn btn-gray"},"Copy All Anvil Effects")])],544)):ft("",!0)]))}}),Jr=Ft(iE,[["__scopeId","data-v-0f3e826a"]]),xr=e=>(ws("data-v-155b9ee4"),e=e(),ks(),e),aE=["tabindex","src"],rE={class:"head"},lE=["src"],nE={key:0},uE={class:"green"},hE=xr(()=>g("br",null,null,-1)),cE=xr(()=>g("br",null,null,-1)),oE={style:{"font-size":"12px"}},fE={style:{"font-size":"12px"}},pE=xr(()=>g("h5",null,"Equipped Effect",-1)),dE={class:"wrapper"},gE={class:"head"},SE=["src"],mE=["value"],ME={style:{"font-size":"12px"}},EE=xr(()=>g("h5",null,"Equipped Effect",-1)),vE=oe({__name:"PotionInfo",props:{id:{}},setup(e){const t=e,i=nt(!1),r=nt(),c=Ve("game").data.inventory.potionSlots[t.id],m=nt();function w(){const k="img/equip";return c.kind==0?`${k}/EquipSlotPotion.png`:`${k}/${H[c.kind]}.png`}return(k,P)=>(b(),B("div",null,[ee(Ql,{style:{width:"700px"}},ql({default:Ee(()=>[g("img",{tabindex:t.id,ref_key:"img",ref:r,class:mt(["icon48",A(c).isDisabled()?"disabled":""]),src:w(),onClick:P[0]||(P[0]=D=>A(c).isDisabled()?null:m.value.showModal()),onMouseoverOnce:P[1]||(P[1]=D=>i.value=!0),onMouseover:P[2]||(P[2]=D=>r.value.focus())},null,42,aE)]),_:2},[A(c).kind!=0&&i.value?{name:"content",fn:Ee(()=>[g("div",rE,[g("img",{class:"icon96",src:w()},null,8,lE),j(" "+T(A(M).PotionName(A(c).kind))+" ",1),A(c).type!=A(qe).Trap?(b(),B("span",nE,[j("< "),g("span",uE,"Lv "+T(A(c).level),1),j(" >")])):ft("",!0),hE,cE,g("p",oE,"-Type : "+T(A(M).PotionTypeString(A(c).type)),1),g("p",fE,"-Stack #: "+T(A(c).stack)+" / 30",1)]),pE,g("p",null,T(A(M).PotionEffect(A(c).kind,A(c).effectValue,!1)),1)]),key:"0"}:void 0]),1024),i.value?(b(),B("dialog",{key:0,ref_key:"dialog",ref:m,onMousedown:P[5]||(P[5]=D=>{D.target.nodeName==m.value.nodeName&&m.value.close()})},[g("div",dE,[g("div",gE,[g("img",{class:"icon96",src:w()},null,8,SE),Le(g("select",{"onUpdate:modelValue":P[3]||(P[3]=D=>A(c).kind=D),name:"kind"},[(b(!0),B(K,null,he(A(W).PotionKind,(D,N)=>(b(),B("option",{value:N},T(A(M).PotionName(N)),9,mE))),256))],512),[[aa,A(c).kind,void 0,{lazy:!0,number:!0}]]),g("p",ME,"-Type : "+T(A(M).PotionTypeString(A(c).type)),1),g("p",null,[j("-Stack #: "),Le(g("input",{"onUpdate:modelValue":P[4]||(P[4]=D=>A(c).stack=D),size:"6",name:"stack"},null,512),[[tt,A(c).stack,void 0,{lazy:!0,number:!0}]]),j(" / 30")])]),EE,g("p",null,T(A(M).PotionEffect(A(c).kind,A(c).effectValue,!1)),1)])],544)):ft("",!0)]))}}),wE=Ft(vE,[["__scopeId","data-v-155b9ee4"]]),kE={class:"wrapper"},AE=oe({__name:"AppDialog",setup(e,{expose:t}){const i=nt(),r=nt(!1);function h(c){r.value||(c.target.nodeName==i.value.nodeName&&i.value.close(),c.stopPropagation())}return t({dialog:i,locked:r}),(c,m)=>(b(),B(K,null,[g("span",{onClick:m[0]||(m[0]=w=>i.value.showModal())},[Ws(c.$slots,"trigger",{},void 0,!0)]),g("dialog",{ref_key:"dialog",ref:i,onMousedown:h},[g("div",kE,[Ws(c.$slots,"content",{},()=>[j("Dialog Content")],!0)])],544)],64))}}),qi=Ft(AE,[["__scopeId","data-v-ba5bad76"]]);function RE(e=[0,0,0,0,0,0,0]){const t=globalThis.Game,i=t.data.equipment.currentLoadoutInitialOffset;for(let r=i;r<i+72;r++){const h=t.data.inventory.equipmentSlots[r];if(!h.isDisabled())for(let c=0;c<h.forgeEffects.length;c++)h.forgeEffects[c].SetEffectValue(e[c])}}function lu(e="all"){const t=globalThis.Game,i=t.data.equipment.currentLoadoutInitialOffset;for(let r=i;r<i+72;r++){const h=t.data.inventory.equipmentSlots[r];if(!h.isDisabled()){if(e=="all"||e=="enchant")for(let c=0;c<h.optionEffects.length;c++)h.optionEffects[c].kind=l.Nothing;if(e=="all"||e=="forge")for(let c=0;c<h.forgeEffects.length;c++)h.forgeEffects[c].SetEffectValue(0);(e=="all"||e=="equipment")&&(h.kind=E.Nothing)}}}var hs=(e=>(e[e.HeroKind=0]="HeroKind",e[e.EquipmentKind=1]="EquipmentKind",e[e.Weapon=2]="Weapon",e[e.Armor=3]="Armor",e[e.Jewelry=4]="Jewelry",e[e.PotionKind=5]="PotionKind",e[e.SuperDungeon=6]="SuperDungeon",e[e.EquipmentEffectKind=7]="EquipmentEffectKind",e[e.EquipmentForgeEffectKind=8]="EquipmentForgeEffectKind",e[e.Number=9]="Number",e[e.MonsterSpecies=10]="MonsterSpecies",e[e.MonsterColor=11]="MonsterColor",e[e.ChallengeMonsterKind=12]="ChallengeMonsterKind",e[e.EquipmentEffectOptimizer=13]="EquipmentEffectOptimizer",e))(hs||{});const CE=oe({__name:"AppDownload",props:{target:{},filename:{}},setup(e){const t=e;function i(){const r=`${t.filename}.json`,h=JSON.stringify(t.target);let c=document.createElement("a");c.setAttribute("href","data:text/plain;charset=utf-8,"+encodeURIComponent(h)),c.setAttribute("download",r),c.style.display="none",document.body.appendChild(c),c.click(),document.body.removeChild(c)}return(r,h)=>(b(),B("button",{onClick:i},[Ws(r.$slots,"default",{},void 0,!0)]))}}),LE=Ft(CE,[["__scopeId","data-v-810f9b3e"]]),PE=["value"],DE={key:1,style:{display:"inline-block"}},yE={style:{display:"flex"}},bE=["src","title","onClick"],TE=oe({__name:"AppSelect",props:ju({type:{}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(e){const t=e,i=Ve("game"),r=uh(e,"modelValue");function h(c){let m=[];switch(c){case hs.EquipmentEffectKind:for(let w=0;w<W.EquipmentEffectKind;w++)m.push(M.EquipmentEffectName(w));break;case hs.MonsterSpecies:for(let w=0;w<W.MonsterSpecies;w++)m.push(M.MonsterSpeciesName(w));break;case hs.MonsterColor:for(let w=0;w<W.MonsterColor;w++)m.push(At[w]);break;case hs.ChallengeMonsterKind:return["Florzporb","Arachnetta","Guardian Kor","Nostro","Lady Emelda","Nari Sune","Octobaddie","Bananoon","Glorbliorbus","Distortion Slime"];case hs.EquipmentEffectOptimizer:for(let w=0;w<W.EquipmentEffectOptimizerKind;w++)m.push(M.EquipmentEffectOptimizerString(w));break}return m}return(c,m)=>(b(),B(K,null,[t.type!=A(hs).HeroKind?Le((b(),B("select",{key:0,"onUpdate:modelValue":m[0]||(m[0]=w=>r.value=w),name:"select"},[(b(!0),B(K,null,he(h(t.type),(w,k)=>(b(),B("option",{value:k},T(w),9,PE))),256))],512)),[[aa,r.value]]):ft("",!0),t.type==A(hs).HeroKind?(b(),B("div",DE,[g("div",yE,[(b(),B(K,null,he(6,(w,k)=>g("img",{src:`img/hero/${A(R)[k]}.png`,class:mt({inactive:k!=A(i).data.source.currentHero}),title:A(R)[k],onClick:P=>A(i).data.source.currentHero=k},null,10,bE)),64))])])):ft("",!0)],64))}}),Ai=Ft(TE,[["__scopeId","data-v-780240b5"]]),GE=e=>(ws("data-v-5a67276f"),e=e(),ks(),e),BE=GE(()=>g("label",{for:"EquipmentLoadoutImport",class:"importLabel"},"Import",-1)),xE=oe({__name:"EquipmentLoadoutImport",setup(e){const t=Ve("game"),i=nt();function r(h){if(!h.target.files)return;const c=new FileReader;c.readAsText(h.target.files[0]),c.onloadend=()=>{t.data.inventory.PasteLoadout(JSON.parse(c.result)),h.target.value=null}}return(h,c)=>(b(),B(K,null,[BE,g("input",{type:"file",id:"EquipmentLoadoutImport",accept:".json",onChange:r,ref_key:"test",ref:i},null,544)],64))}}),FE=Ft(xE,[["__scopeId","data-v-5a67276f"]]);var _a;class _E{constructor(t){o(this,"data");Ks(this,_a,void 0);o(this,"list",[]);this.data=globalThis.Game.data,this.kind=t}get kind(){return fe(this,_a)}set kind(t){ei(this,_a,t),this.list=this.GetList()}GetList(){switch(this.kind){case gs.DPS:const t=this.data.battle.Enemy(),i=t.AttackedInfo();return[...this.GetDPS(),...this.GetElement(i.element),...this.GetKnowledge(t.species),...this.GetSkill(this.data.source.currentHero),...this.GetBasicStats(t.data.source.isActiveSdModifiers[950+bt.SwapATKWithDEF]&&t.data.source.isSuperDungeon),l.AllSkillLevel,l.CriticalDamage,l.CriticalDamageMultiplier,l.CriticalDamageAfter,l.ExtraAfterDamage];case gs.SkillProficiency:return[l.SkillProficiency,l.SkillProficiencyMultiplier,...this.GetBlessing()];case gs.TPG:return[l.TamingPoint,l.TamingPointMultiplier];case gs.LPG:return[l.LoyaltyPointGain,l.LoyaltyPointGainMultiplier];default:return[]}}GetMultiplier(){switch(this.kind){case gs.DPS:return{Value:()=>this.data.battle.Enemy().AttackedInfo().dps};case gs.SkillProficiency:return this.data.stats.currentHero.stats[v.SkillProficiencyGain];case gs.TPG:return this.data.stats.currentHero.stats[v.TamingPointGain];case gs.LPG:return this.data.stats.currentHero.loyaltyPoingGain;default:return this.data.stats.currentHero.stats[v.SkillProficiencyGain]}}GetBlessing(){return this.data.source.isBlessing?[l.BlessingEffect,l.BlessingEffectMultiplier]:[]}GetElement(t){switch(t){case F.Physical:return[l.PhysicalDamage,l.PhysicalDamageMultiplier,l.PhysicalDamageAfter];case F.Fire:return[l.FireDamage,l.FireDamageMultiplier,l.FireDamageAfter];case F.Thunder:return[l.ThunderDamage,l.ThunderDamageMultiplier,l.ThunderDamageAfter];case F.Ice:return[l.IceDamage,l.IceDamageMultiplier,l.IceDamageAfter];case F.Light:return[l.LightDamage,l.LightDamageMultiplier,l.LightDamageAfter];case F.Dark:return[l.DarkDamage,l.DarkDamageMultiplier,l.DarkDamageAfter];default:return[]}}GetKnowledge(t){switch(t){case se.Slime:return[l.SlimeKnowledge,l.SlimeKnowledgeAfter];case se.MagicSlime:return[l.MagicSlimeKnowledge,l.MagicSlimeKnowledgeAfter];case se.Spider:return[l.SpiderKnowledge,l.SpiderKnowledgeAfter];case se.Bat:return[l.BatKnowledge,l.BatKnowledgeAfter];case se.Fairy:return[l.FairyKnowledge,l.FairyKnowledgeAfter];case se.Fox:return[l.FoxKnowledge,l.FoxKnowledgeAfter];case se.DevilFish:return[l.DevilFishKnowledge,l.DevilFishKnowledgeAfter];case se.Treant:return[l.TreantKnowledge,l.TreantKnowledgeAfter];case se.FlameTiger:return[l.FlameTigerKnowledge,l.FlameTigerKnowledgeAfter];case se.Unicorn:return[l.UnicornKnowledge,l.UnicornKnowledgeAfter];case se.ChallengeBoss:return[l.ChallengeBossKnowledge,l.ChallengeBossKnowledgeAfter];default:return[]}}GetSkill(t){switch(t){case R.Warrior:return[l.WarriorSkillLevel];case R.Wizard:return[l.WizardSkillLevel];case R.Angel:return[l.AngelSkillLevel];case R.Thief:return[l.ThiefSkillLevel];case R.Archer:return[l.ArcherSkillLevel];case R.Tamer:return[l.TamerSkillLevel];default:return[]}}GetDPS(){return this.data.source.isSuperDungeon?[l.SDDamageMultiplier]:[l.ArmoredFury,l.WardedFury]}GetBasicStats(t){let i=[l.SPDAdder,l.SPDMultiplier,l.SPDAfter];return t?i=[...i,l.DEFAdder,l.MDEFAdder,l.DEFMultiplier,l.MDEFMultiplier,l.DEFPropotion,l.MDEFPropotion,l.DEFAfter,l.MDEFAfter]:i=[...i,l.ATKAdder,l.MATKAdder,l.ATKMultiplier,l.MATKMultiplier,l.ATKPropotion,l.MATKPropotion,l.ATKAfter,l.MATKAfter],i}}_a=new WeakMap;const oa=e=>(ws("data-v-3bec38bc"),e=e(),ks(),e),IE=oa(()=>g("button",null,"Find Best Enchantements",-1)),VE={class:"container"},HE=oa(()=>g("h2",null,"Find Best Enchantements",-1)),qE=oa(()=>g("h3",null,"Enchantements to test",-1)),NE=["title"],WE=["onClick"],$E=oa(()=>g("button",{class:"small"},"Add",-1)),UE=oa(()=>g("br",null,null,-1)),OE=oa(()=>g("hr",null,null,-1)),zE=oe({__name:"EquipmentFindBestEnchantments",setup(e){const t=Ve("game"),i=nt(0),r=new _E(i.value),h=nt(r.list),c=nt(0);as(i,()=>{r.kind=i.value,h.value=r.list});async function m(P){let D=0;return document.dispatchEvent(new CustomEvent("log",{detail:{type:"msg",data:P}})),new Promise(N=>setTimeout(()=>N(null),D))}async function w(){const P=t.data.inventory.initialEquipmentLoadoutOffset;console.log("loop"),document.dispatchEvent(new CustomEvent("log",{detail:{type:"start",data:""}}));let D=r.GetMultiplier(),N=1,z=0;for(let te=P;te<P+72;te++){const ie=t.data.inventory.equipmentSlots[te];ie.kind==0||ie.isDisabled()||z++}for(let te=P;te<P+72;te++){await m(`Testing Item ${N} / ${z} `);const ie=t.data.inventory.equipmentSlots[te];if(ie.kind==0||ie.isDisabled())continue;const pe=ie.GetOptionEffects(!1);for(let Me=0;Me<pe.length;Me++){const Pe=pe[Me];let He=l.Nothing,Xe=0;for(let ct=0;ct<h.value.length;ct++){const ot=h.value[ct];if(zt.RequiredLevelIncrement(ot,1)>t.data.source.enemyLevel||zt.IsAfter(ot)&&!ie.globalInfo.isArtifact)continue;Pe.kind=ot;const Qe=D.Value();Qe>Xe&&(Xe=Qe,He=ot)}Pe.kind=He}N++}document.dispatchEvent(new CustomEvent("log",{detail:{type:"msg",data:"Finished"}})),document.dispatchEvent(new CustomEvent("log",{detail:{type:"unlock"}}))}function k(){h.value.includes(c.value)||c.value==0||h.value.push(c.value)}return(P,D)=>(b(),lt(qi,null,{trigger:Ee(()=>[IE]),content:Ee(()=>[g("div",VE,[HE,ee(Ai,{type:A(hs).EquipmentEffectOptimizer,modelValue:i.value,"onUpdate:modelValue":D[0]||(D[0]=N=>i.value=N)},null,8,["type","modelValue"]),j("  "),qE,(b(!0),B(K,null,he(h.value,(N,z)=>(b(),B("span",{class:"optimizeEffect",title:N.toString()},[j(T(A(M).EquipmentEffectName(N))+" ",1),g("span",{class:"red interactive",onClick:te=>h.value.splice(z,1)},"✖",8,WE)],8,NE))),256)),ee(qi,null,{trigger:Ee(()=>[$E]),content:Ee(()=>[ee(Ai,{type:A(hs).EquipmentEffectKind,modelValue:c.value,"onUpdate:modelValue":D[1]||(D[1]=N=>c.value=N)},null,8,["type","modelValue"]),g("button",{onClick:k},"Add")]),_:1}),UE,OE,g("button",{onClick:w},"Find")])]),_:1}))}}),JE=Ft(zE,[["__scopeId","data-v-3bec38bc"]]),Bs=e=>(ws("data-v-a96132b2"),e=e(),ks(),e),jE={class:"container"},XE=Bs(()=>g("h1",{style:{"text-align":"center"}},"Equipment Breakdown",-1)),QE={style:{display:"flex","column-gap":"10px","flex-wrap":"wrap","justify-content":"space-evenly"}},YE=Bs(()=>g("h3",null,"Equipment List",-1)),ZE=Bs(()=>g("h5",{class:"orange"},"Weapon:",-1)),KE=Bs(()=>g("h5",{class:"orange"},"Armor:",-1)),ev=Bs(()=>g("h5",{class:"orange"},"Jewelry:",-1)),tv=Bs(()=>g("h5",{class:"orange"},"Utility:",-1)),sv=Bs(()=>g("h3",null,"Enchantements List",-1)),iv=Bs(()=>g("hr",null,null,-1)),av=Bs(()=>g("button",null,"Change Loadout Forge",-1)),rv={class:"orange"},lv=["disabled"],nv={class:"orange"},uv=["disabled"],hv={class:"orange"},cv=["disabled"],ov={class:"orange"},fv=["disabled"],pv={class:"orange"},dv=["disabled"],gv={class:"orange"},Sv=["disabled"],mv={class:"orange"},Mv=["disabled"],Ev=Bs(()=>g("hr",null,null,-1)),vv=Bs(()=>g("button",null,"Add Enchantements",-1)),wv=Bs(()=>g("hr",null,null,-1)),kv=oe({__name:"EquipmentBreakdown",setup(e){const t=Ve("game"),i=Vt(()=>t.data.inventory.GetLoadoutBreakdownList()),r=nt([0,0,0,0,0,0,0]),h=Vt(()=>r.value.filter(w=>w!=0).length),c=Vt(()=>t.data.inventory.GetLoadoutEnchantments(!1)),m=nt([{kind:0,value:0}]);return(w,k)=>(b(),B("div",jE,[XE,g("div",QE,[g("div",null,[YE,g("div",null,[ZE,(b(!0),B(K,null,he(i.value.weapons,(P,D)=>(b(),B("p",null,T(P)+" - "+T(D),1))),256))]),g("div",null,[KE,(b(!0),B(K,null,he(i.value.armors,(P,D)=>(b(),B("p",null,T(P)+" - "+T(D),1))),256))]),g("div",null,[ev,(b(!0),B(K,null,he(i.value.jewelry,(P,D)=>(b(),B("p",null,T(P)+" - "+T(D),1))),256))]),g("div",null,[tv,(b(!0),B(K,null,he(i.value.utility,(P,D)=>(b(),B("p",null,T(D),1))),256))])]),g("div",null,[sv,(b(!0),B(K,null,he(i.value.enchants,(P,D)=>(b(),B("p",null,T(P)+" - "+T(D),1))),256)),j(" "+T(Object.values(i.value.enchants).reduce((P,D)=>P+D,0))+" Total ",1)])]),iv,g("button",{onClick:k[0]||(k[0]=P=>A(lu)("all"))},"Clear Loadout"),ee(qi,null,{trigger:Ee(()=>[av]),content:Ee(()=>[g("h2",null,"Apply Forge to Loadout: (Limit: "+T(h.value)+" / 4)",1),g("p",rv,[Le(g("input",{type:"text","onUpdate:modelValue":k[1]||(k[1]=P=>r.value[0]=P),disabled:h.value==4&&r.value[0]==0},null,8,lv),[[tt,r.value[0],void 0,{lazy:!0,number:!0}]]),j("- Required Hero Level of this equipment "+T(A(f).tDigit(r.value[0])),1)]),g("p",nv,[Le(g("input",{type:"text","onUpdate:modelValue":k[2]||(k[2]=P=>r.value[1]=P),disabled:h.value==4&&r.value[1]==0},null,8,uv),[[tt,r.value[1],void 0,{lazy:!0,number:!0}]]),j("- Required Ability Point of this equipment "+T(A(f).tDigit(r.value[1])),1)]),g("p",hv,[Le(g("input",{type:"text","onUpdate:modelValue":k[3]||(k[3]=P=>r.value[2]=P),disabled:h.value==4&&r.value[2]==0},null,8,cv),[[tt,r.value[2],void 0,{lazy:!0,number:!0}]]),j("- Proficiency Gain of this equipment "+T(A(f).percent(r.value[2])),1)]),g("p",ov,[Le(g("input",{type:"text","onUpdate:modelValue":k[4]||(k[4]=P=>r.value[3]=P),disabled:h.value==4&&r.value[3]==0},null,8,fv),[[tt,r.value[3],void 0,{lazy:!0,number:!0}]]),j("- This equipment's effect "+T(A(f).percent(r.value[3])),1)]),g("p",pv,[Le(g("input",{type:"text","onUpdate:modelValue":k[5]||(k[5]=P=>r.value[4]=P),disabled:h.value==4&&r.value[4]==0},null,8,dv),[[tt,r.value[4],void 0,{lazy:!0,number:!0}]]),j("- Decrease this equipment's current negative effects "+T(A(f).percent(r.value[4])),1)]),g("p",gv,[Le(g("input",{type:"text","onUpdate:modelValue":k[6]||(k[6]=P=>r.value[5]=P),disabled:h.value==4&&r.value[5]==0},null,8,Sv),[[tt,r.value[5],void 0,{lazy:!0,number:!0}]]),j("- This equipment's effect increment per level "+T(A(f).percent(r.value[5])),1)]),g("p",mv,[Le(g("input",{type:"text","onUpdate:modelValue":k[7]||(k[7]=P=>r.value[6]=P),disabled:h.value==4&&r.value[6]==0},null,8,Mv),[[tt,r.value[6],void 0,{lazy:!0,number:!0}]]),j("- This equipment's level "+T(A(f).tDigit(r.value[6],0)),1)]),Ev,g("button",{onClick:k[8]||(k[8]=P=>{A(lu)("forge"),A(RE)(r.value)})}," Apply ")]),_:1}),ee(qi,null,{trigger:Ee(()=>[vv]),content:Ee(()=>[g("h2",null,[j(" Add Enchantements to Loadout "),g("span",{class:mt(m.value.reduce((P,D)=>P+D.value,0)<=c.value.length?"green":"red")},T(m.value.reduce((P,D)=>P+D.value,0))+" / "+T(c.value.length),3)]),(b(!0),B(K,null,he(m.value,P=>(b(),B("div",null,[ee(Ai,{type:A(hs).EquipmentEffectKind,modelValue:P.kind,"onUpdate:modelValue":D=>P.kind=D},null,8,["type","modelValue","onUpdate:modelValue"]),ee(_t,{modelValue:P.value,"onUpdate:modelValue":D=>P.value=D},null,8,["modelValue","onUpdate:modelValue"])]))),256)),g("button",{onClick:k[9]||(k[9]=P=>m.value.push({kind:0,value:0}))},"Add"),wv,g("button",{onClick:k[10]||(k[10]=P=>A(t).data.inventory.ApplyLoadoutEnchantments(m.value))},"Apply")]),_:1}),ee(LE,{filename:"loadout",target:A(t).data.inventory.CopyCurrentLoadout()},{default:Ee(()=>[j("Export")]),_:1},8,["target"]),ee(FE),ee(JE)]))}}),Av=Ft(kv,[["__scopeId","data-v-a96132b2"]]),Rv=["onClick"],Cv={class:"container"},Lv=oe({__name:"EnchantFinder",setup(e){const t=Ve("game"),i=nt(0),r=nt(1),h=Vt(()=>{let w=[];if(i.value==0)return w;for(let k=0;k<4840;k++){const P=t.data.inventory.equipmentSlots[k];for(let D=0;D<P.optionEffects.length;D++)if(P.optionEffects[D].kind==i.value){w.push(P);break}}return w}),c=Vt(()=>h.value.map(w=>w.slotId));function m(w){const k=(w-1)*52,P=k+52;for(let D=0;D<c.value.length;D++){const N=c.value[D];if(N>=k&&N<P)return"green"}}return(w,k)=>(b(),B(K,null,[j(" Search Enchant: "),ee(Ai,{type:A(hs).EquipmentEffectKind,modelValue:i.value,"onUpdate:modelValue":k[0]||(k[0]=P=>i.value=P)},null,8,["type","modelValue"]),g("div",null,[(b(),B(K,null,he(9,P=>g("button",{onClick:D=>r.value=P,class:mt(r.value==P?"yellow":m(P))},T(P),11,Rv)),64))]),g("div",Cv,[(b(),B(K,null,he(52,P=>g("div",{class:mt(c.value.includes(52*(r.value-1)+P-1)?"found":"")},T(52*(r.value-1)+P-1),3)),64))]),(b(!0),B(K,null,he(h.value,(P,D)=>(b(),B("p",null,T(D+1)+". "+T(P.SlotString()),1))),256))],64))}}),Pv=Ft(Lv,[["__scopeId","data-v-ca45f371"]]),xh=e=>(ws("data-v-fa287faf"),e=e(),ks(),e),Dv={style:{display:"flex",height:"24px"}},yv=["onClick"],bv=xh(()=>g("button",{class:"blue small",title:"Equipment Breakdown"},"☰",-1)),Tv=xh(()=>g("button",{class:"blue small",title:"Search"},"🔎︎",-1)),Gv={style:{display:"flex",margin:"3px 0","align-items":"center"}},Bv={class:"part"},xv={class:"block"},Fv={class:"part"},_v={class:"block"},Iv={class:"part"},Vv={class:"block"},Hv={class:"part"},qv={class:"block-potion"},Nv=oe({__name:"EquipmentLoadout",setup(e){const t=Ve("game"),i=Vt(()=>520+t.data.source.currentHero*720+t.data.source.equipmentLoadoutIds[t.data.source.currentHero]*72),r=Vt(()=>260+t.data.source.currentHero*6);return(h,c)=>(b(),B("div",null,[g("div",Dv,[(b(),B(K,null,he(7,(m,w)=>g("button",{class:mt(["blue small",{yellow:w==A(t).data.source.equipmentLoadoutIds[A(t).data.source.currentHero]}]),onClick:k=>A(t).data.source.equipmentLoadoutIds[A(t).data.source.currentHero]=w}," Loadout "+T(m),11,yv)),64)),ee(qi,null,{trigger:Ee(()=>[bv]),content:Ee(()=>[ee(Av)]),_:1}),ee(qi,null,{trigger:Ee(()=>[Tv]),content:Ee(()=>[ee(Pv)]),_:1})]),g("div",Gv,[ee(Ai,{type:A(hs).HeroKind},null,8,["type"]),j("  "+T(A(R)[A(t).data.source.currentHero])+" "+T(A(t).data.source.isSuperDungeon?`Grade: ${A(t).data.source.heroGrade[A(t).data.source.currentHero]}`:`Level: ${A(t).data.source.heroLevel[A(t).data.source.currentHero]}`),1)]),g("div",null,[g("div",Bv,[g("div",xv,[(b(),B(K,null,he(24,(m,w)=>ee(Jr,{id:i.value+w,class:"equipment",key:i.value+w},null,8,["id"])),64))])]),g("div",Fv,[g("div",_v,[(b(),B(K,null,he(24,(m,w)=>ee(Jr,{id:i.value+w+24,class:"equipment",key:i.value+w},null,8,["id"])),64))])]),g("div",Iv,[g("div",Vv,[(b(),B(K,null,he(24,(m,w)=>ee(Jr,{id:i.value+w+48,class:"equipment",key:i.value+w},null,8,["id"])),64))])]),g("div",Hv,[g("div",qv,[(b(),B(K,null,he(6,(m,w)=>ee(wE,{id:r.value+w,class:"equipment",key:r.value+w},null,8,["id"])),64))])])])]))}}),Wv=Ft(Nv,[["__scopeId","data-v-fa287faf"]]);function oi(e,t=0,i=0){if(e!=0){if(t){if(i>t)return i/t-1<1e-9?void 0:"red";if(i<t)return t/i-1<1e-9?void 0:"green"}return e>0?"green":e<0?"red":""}}function lr(e,t){const i={};for(const[r,h]of Object.entries(e))i[r]=h;for(const[r,h]of Object.entries(t))i[r]!=null?i[r]-=h:i[r]=-h;return i}function Xi(e,t,i=!0){if((t===0||t==null)&&i)return"(NEW)";if((e===0||e==null)&&i)return"(MISSING)";if(!(e==0||t==0||t==null||e==null)){if(t>e)return t/e-1<1e-6?void 0:`(-${f.percent(t/e-1,3)})`;if(t<e)return e/t-1<1e-6?void 0:`(+${f.percent(e/t-1,2)})`}}function jr(e,t){const i=lr(e,t),r={};for(const[h,c]of Object.entries(i))h=="Base"?r[h]="":r[h]=Xi(e[h],t[h],!0);return r}const li=e=>(ws("data-v-d20ede1e"),e=e(),ks(),e),$v={style:{width:"400px"}},Uv={class:"name"},Ov=li(()=>g("p",{class:"group"},"Additive:",-1)),zv=li(()=>g("br",null,null,-1)),Jv=li(()=>g("p",{class:"group"},"Multiplicative:",-1)),jv=li(()=>g("br",null,null,-1)),Xv={key:0,name:"superdungeon"},Qv={class:"right"},Yv=li(()=>g("br",null,null,-1)),Zv=li(()=>g("p",{style:{color:"yellow","text-decoration":"underline","font-size":"14px","text-decoration-color":"#fff"}},"Super Dungeon:",-1)),Kv={class:"right"},ew=li(()=>g("br",null,null,-1)),tw={key:1},sw=li(()=>g("p",{class:"group"},"After:",-1)),iw=li(()=>g("br",null,null,-1)),aw={style:{"font-size":"14px"}},rw=oe({__name:"MultiplierInformation",props:{multiplier:{},name:{},valueSuffix:{},inline:{type:Boolean},precision:{}},setup(e){const t=Ve("game"),i=nt(!1),r=e;function h(m){const w={main:f.get(t.data,m),snap:f.get(t.snap,m)};return w.main.Calculate(),w.snap.Calculate(),{raw:w,main:w.main.Snapshot(),snap:w.snap.Snapshot(),diff:{value:w.main.value-w.snap.value,additive:w.main.additive-w.snap.additive,additiveKind:lr(w.main.additiveKind,w.snap.additiveKind),multiplicativeKind:lr(w.main.multiplicativeKind,w.snap.multiplicativeKind),multiplicative:w.main.multiplicative-w.snap.multiplicative,after:w.main.after-w.snap.after,afterKind:lr(w.main.afterKind,w.snap.afterKind)},compare:{value:Xi(w.main.value,w.snap.value,!1),after:Xi(w.main.after,w.snap.after,!1),additive:Xi(w.main.additive,w.snap.additive,!1),additiveKind:jr(w.main.additiveKind,w.snap.additiveKind),multiplicativeKind:jr(w.main.multiplicativeKind,w.snap.multiplicativeKind),multiplicative:Xi(w.main.multiplicative,w.snap.multiplicative),afterKind:jr(w.main.afterKind,w.snap.afterKind)}}}const c=nt(h(r.multiplier));return(m,w)=>(b(),lt(Ql,null,ql({default:Ee(()=>[g("p",{onMouseoverOnce:w[0]||(w[0]=k=>i.value=!0),onClick:w[1]||(w[1]=k=>console.log(c.value)),class:mt({underline:!r.inline})},[g("span",{class:mt(["nameWrap",{yellow:c.value.main.isLog}])},T(c.value.raw.main.name),3),g("span",{class:mt([[A(oi)(c.value.diff.value,c.value.main.value,c.value.snap.value)],"right"])},T(c.value.compare.value)+" "+T(A(f).convertTo(c.value.main.Value(),r.precision,c.value.main.numberType))+" "+T(r.valueSuffix),3)],34)]),_:2},[i.value?{name:"content",fn:Ee(()=>[g("div",$v,[g("p",Uv,T(c.value.raw.main.name),1),Ov,(b(!0),B(K,null,he(Object.entries(c.value.diff.additiveKind),([k,P])=>(b(),B("p",null,[c.value.main.additiveKind[k]>0||k=="Base"||c.value.snap.additiveKind[k]>0?(b(),B(K,{key:0},[j(" -"+T(A(M).StatsBreakdown(A(n)[k]))+" ",1),g("span",{class:mt(["right",A(oi)(P)])},T(c.value.compare.additiveKind[k])+" "+T(k!="Base"?"+":"")+" "+T(A(f).convertTo(c.value.main.additiveKind[k],r.precision,c.value.main.numberType)),3)],64)):ft("",!0)]))),256)),g("p",null,[j(" Additive Total:"),g("span",{class:mt(["right",A(oi)(c.value.diff.additive)])},T(c.value.compare.additive)+" "+T(A(f).convertTo(c.value.main.additive,r.precision,c.value.main.numberType)),3)]),zv,Jv,(b(!0),B(K,null,he(Object.entries(c.value.diff.multiplicativeKind),([k,P])=>(b(),B("p",null,[c.value.main.multiplicativeKind[k]!=0||k=="Base"?(b(),B(K,{key:0},[j(" -"+T(A(M).StatsBreakdown(A(n)[k]))+" ",1),g("span",{class:mt(["right",A(oi)(P)])},T(c.value.compare.multiplicativeKind[k])+" "+T(k!="Base"?"*":"")+" "+T(A(f).convertTo(c.value.main.multiplicativeKind[k],r.precision,A(gt).Percent)),3)],64)):ft("",!0)]))),256)),g("p",null,[j(" Multiplicative Total: "),g("span",{class:mt(["right",A(oi)(c.value.diff.multiplicative)])},T(c.value.compare.multiplicative)+" "+T(A(f).convertTo(c.value.main.multiplicative,r.precision,A(gt).Percent)),3)]),jv,c.value.main.isLog?(b(),B("div",Xv,[g("p",null,[j(" Temporary Total: "),g("span",Qv,T(A(f).convertTo(c.value.main.temp,r.precision,c.value.main.numberType)),1)]),Yv,Zv,g("p",null,[j(" Base + Log10([Temporary Total])"),g("span",Kv,T(A(f).convertTo(c.value.main.log,r.precision,c.value.main.numberType)),1)]),ew])):ft("",!0),c.value.main.after!=0?(b(),B("div",tw,[sw,(b(!0),B(K,null,he(Object.entries(c.value.diff.afterKind),([k,P])=>(b(),B("div",null,[c.value.main.afterKind[k]>1?(b(),B(K,{key:0},[j(" -"+T(A(M).StatsBreakdown(A(n)[k]))+" ",1),g("span",{class:mt(["right",A(oi)(P)])},T(c.value.compare.afterKind[k])+" + "+T(A(f).convertTo(c.value.main.afterKind[k]|0,r.precision,c.value.main.numberType)),3)],64)):ft("",!0)]))),256)),g("p",null,[j(" After Total: "),g("span",{class:mt(["right",A(oi)(c.value.diff.after)])},T(c.value.compare.after)+" "+T(A(f).convertTo(c.value.main.after,r.precision,c.value.main.numberType)),3)]),iw])):ft("",!0),g("p",aw,[j(" Total:"),g("span",{name:"value-total",class:mt(["right",A(oi)(c.value.diff.value)])},T(c.value.compare.value)+" "+T(A(f).convertTo(c.value.main.Value(),r.precision,c.value.main.numberType))+" "+T(r.valueSuffix),3)])])]),key:"0"}:void 0]),1024))}}),Se=Ft(rw,[["__scopeId","data-v-d20ede1e"]]),fi=oe({__name:"TabItem",props:{title:{}},setup(e){const t=nt(0),i=nt(!1),r=Ve("TabsProvider");return as(()=>r.selectedIndex,()=>{i.value=t.value===r.selectedIndex}),Ou(()=>{t.value=r.count,r.count++,i.value=t.value===r.selectedIndex}),(h,c)=>Le((b(),B("div",null,[Ws(h.$slots,"default")],512)),[[$a,i.value]])}}),lw=["onClick"],nw=oe({__name:"TabPanel",props:{selectedIndex:{}},emits:["tabChange"],setup(e,{emit:t}){const r=ua({selectedIndex:e.selectedIndex|0,tabs:[],count:0}),h=nt(),c=nt(),m=t;ka("TabsProvider",r),Cr(()=>{h.value=Ul().proxy,c.value=h.value.$slots.default(),r.tabs=h.value.$slots.default().filter(k=>k.type.__name==="TabItem")});function w(k){r.selectedIndex=k,m("tabChange",k)}return(k,P)=>(b(),B(K,null,[g("ul",null,[(b(!0),B(K,null,he(r.tabs,(D,N)=>(b(),B("li",{key:N,onClick:z=>w(N),class:mt(r.selectedIndex===N?"active":"")},T(D.props.title),11,lw))),128))]),g("div",null,[Ws(k.$slots,"default",{},void 0,!0)])],64))}}),uw=Ft(nw,[["__scopeId","data-v-1af58e1d"]]),Di=e=>(ws("data-v-bf2fb16f"),e=e(),ks(),e),hw={class:"panel"},cw=Di(()=>g("h3",null,"Main Stats",-1)),ow={class:"block"},fw={class:"block"},pw=Di(()=>g("h3",null,"Attack Stats",-1)),dw={class:"block"},gw=Di(()=>g("h3",null,"Defense Stats",-1)),Sw={class:"block"},mw={class:"block"},Mw=Di(()=>g("h3",null,"Gain Stats",-1)),Ew={class:"block"},vw={class:"block"},ww=Di(()=>g("h3",null,"Skills",-1)),kw={class:"block"},Aw={class:"block"},Rw=Di(()=>g("h3",null,"Bestiary Stats",-1)),Cw={class:"block"},Lw=Di(()=>g("h3",null,"Region Stats",-1)),Pw={class:"block"},Dw=Di(()=>g("h3",null,"SD Stats",-1)),yw={class:"block"},bw={class:"block"},Tw=oe({__name:"HeroStats",setup(e){const t=Ve("game"),i=Pi();return Cr(()=>{t.data.Update()}),(r,h)=>(b(),B("div",hw,[ee(uw,{"selected-index":A(i).heroStatsTabSelected,onTabChange:h[0]||(h[0]=c=>{A(i).heroStatsTabSelected=c})},{default:Ee(()=>[ee(fi,{title:"Main"},{default:Ee(()=>[A(i).heroStatsTabSelected==0?(b(),B(K,{key:0},[cw,g("div",ow,[(b(!0),B(K,null,he(A(t).data.stats.currentHero.basicStats,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.basicStats[${m}]`},null,8,["multiplier"]))),256)),ee(Se,{multiplier:"stats.currentHero.stats[10]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[9]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.optionEffectChance[0]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.optionEffectChance[1]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.optionEffectChance[2]"},null,8,["multiplier"]),ee(Se,{multiplier:"equipment.effectMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"potion.effectMultiplier"},null,8,["multiplier"])]),g("div",fw,[ee(Se,{multiplier:"stats.currentHero.hpRegenerate","value-suffix":"/ sec"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.mpRegenerate","value-suffix":"/ sec"},null,8,["multiplier"]),ee(Se,{multiplier:`blessingInfo.effectMultipliers[${A(t).data.source.currentHero}]`},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.damageMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.damageCutMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.sdChallengeBossDamageMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.sdChallengeBossDamageCutMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.armoredFury"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.wardedFury"},null,8,["multiplier"])])],64)):ft("",!0)]),_:1}),ee(fi,{title:"Attack"},{default:Ee(()=>[A(i).heroStatsTabSelected==1?(b(),B(K,{key:0},[pw,g("div",dw,[(b(!0),B(K,null,he(A(t).data.stats.currentHero.elementDamages,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.elementDamages[${m}]`},null,8,["multiplier"]))),256)),ee(Se,{multiplier:"stats.currentHero.stats[15]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[16]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[6]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[7]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[8]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.extraAfterDamage"},null,8,["multiplier"])])],64)):ft("",!0)]),_:1}),ee(fi,{title:"Defense"},{default:Ee(()=>[A(i).heroStatsTabSelected==2?(b(),B(K,{key:0},[gw,g("div",Sw,[(b(),B(K,null,he(5,c=>ee(Se,{multiplier:`stats.currentHero.stats[${c-1}]`},null,8,["multiplier"])),64)),ee(Se,{multiplier:"stats.currentHero.stats[5]"},null,8,["multiplier"]),(b(!0),B(K,null,he(A(t).data.stats.currentHero.elementAbsoptions,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.elementAbsoptions[${m}]`},null,8,["multiplier"]))),256))])],64)):ft("",!0),g("div",mw,[(b(!0),B(K,null,he(A(t).data.stats.currentHero.elementInvalids,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.elementInvalids[${m}]`},null,8,["multiplier"]))),256))])]),_:1}),ee(fi,{title:"Gains"},{default:Ee(()=>[A(i).heroStatsTabSelected==3?(b(),B(K,{key:0},[Mw,g("div",Ew,[ee(Se,{multiplier:"stats.currentHero.stats[14]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.globalStats[0]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.globalStats[1]","value-suffix":"/ kill"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.globalStats[2]","value-suffix":"/ kill"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.globalStats[3]","value-suffix":"/ kill"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[11]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[12]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.guildExpGain"},null,8,["multiplier"]),ee(Se,{multiplier:"area.townMaterialDungeonRewardMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"alchemy.alchemyPointGainMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"alchemy.catalyst.essenceProductionMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"superStats.currentHero.fameGain"},null,8,["multiplier"]),ee(Se,{multiplier:"sdg.dungeonCoinGain"},null,8,["multiplier"])]),g("div",vw,[ee(Se,{multiplier:"stats.currentHero.stats[21]"},null,8,["multiplier"]),ee(Se,{multiplier:"town.researchPower[0]","value-suffix":"/ sec"},null,8,["multiplier"]),ee(Se,{multiplier:"town.researchPower[1]","value-suffix":"/ sec"},null,8,["multiplier"]),ee(Se,{multiplier:"town.researchPower[2]","value-suffix":"/ sec"},null,8,["multiplier"]),ee(Se,{multiplier:"rebirth.currentHero[0].rebirthPointGainFactor"},null,8,["multiplier"]),ee(Se,{multiplier:"rebirth.currentHero[1].rebirthPointGainFactor"},null,8,["multiplier"]),ee(Se,{multiplier:"rebirth.currentHero[2].rebirthPointGainFactor"},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.expGainMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.speedMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.rewardMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.passiveEffectMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.petExpGainMultiplier"},null,8,["multiplier"])])],64)):ft("",!0)]),_:1}),ee(fi,{title:"Skills"},{default:Ee(()=>[A(i).heroStatsTabSelected==4?(b(),B(K,{key:0},[ww,g("div",kw,[ee(Se,{multiplier:`skill.skillCastSpeedModifier[${A(t).data.source.currentHero}]`},null,8,["multiplier"]),(b(!0),B(K,null,he(A(t).data.skill.skillLevelBonus,(c,m)=>(b(),lt(Se,{multiplier:`skill.skillLevelBonus[${m}]`},null,8,["multiplier"]))),256)),(b(!0),B(K,null,he(A(t).data.skill.skillRangeMultiplier,(c,m)=>(b(),lt(Se,{multiplier:`skill.skillRangeMultiplier[${m}]`},null,8,["multiplier"]))),256))]),g("div",Aw,[(b(!0),B(K,null,he(A(t).data.skill.skillEffectRangeMultiplier,(c,m)=>(b(),lt(Se,{multiplier:`skill.skillEffectRangeMultiplier[${m}]`},null,8,["multiplier"]))),256))])],64)):ft("",!0)]),_:1}),ee(fi,{title:"Bestiary"},{default:Ee(()=>[A(i).heroStatsTabSelected==5?(b(),B(K,{key:0},[Rw,g("div",Cw,[ee(Se,{multiplier:`monster.doubleCaptureChance[${A(t).data.source.currentHero}]`},null,8,["multiplier"]),ee(Se,{multiplier:`monster.captureTripleChance[${A(t).data.source.currentHero}]`},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.petExpGainPerDefeat"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[13]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.loyaltyPoingGain"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[17]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[18]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[19]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[20]"},null,8,["multiplier"]),ee(Se,{multiplier:"monster.petPassiveEffectMultiplier"},null,8,["multiplier"])])],64)):ft("",!0)]),_:1}),ee(fi,{title:"Regions"},{default:Ee(()=>[A(i).heroStatsTabSelected==6?(b(),B(K,{key:0},[Lw,g("div",Pw,[(b(!0),B(K,null,he(A(t).data.stats.currentHero.monsterDamages,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.monsterDamages[${m}]`},null,8,["multiplier"]))),256))])],64)):ft("",!0)]),_:1}),ee(fi,{title:"SD"},{default:Ee(()=>[A(i).heroStatsTabSelected==7?(b(),B(K,{key:0},[Dw,g("div",yw,[(b(!0),B(K,null,he(A(t).data.stats.currentHero.basicStats,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.basicStats[${m}]`},null,8,["multiplier"]))),256)),ee(Se,{multiplier:"battle.superDungeonCtrl.damageMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.sdChallengeBossDamageMultiplier"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.armoredFury"},null,8,["multiplier"]),ee(Se,{multiplier:"battle.superDungeonCtrl.wardedFury"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.extraAfterDamage"},null,8,["multiplier"])]),g("div",bw,[(b(!0),B(K,null,he(A(t).data.stats.currentHero.elementDamages,(c,m)=>(b(),lt(Se,{multiplier:`stats.currentHero.elementDamages[${m}]`},null,8,["multiplier"]))),256)),ee(Se,{multiplier:"stats.currentHero.stats[6]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[7]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.stats[8]"},null,8,["multiplier"]),ee(Se,{multiplier:"stats.currentHero.monsterDamages[11]"},null,8,["multiplier"])])],64)):ft("",!0)]),_:1})]),_:1},8,["selected-index"])]))}}),Gw=Ft(Tw,[["__scopeId","data-v-bf2fb16f"]]),Bw=oe({__name:"AppDifference",props:{data:{},snap:{}},setup(e){const t=e,i=Vt(()=>t.data-t.snap);return(r,h)=>i.value!=0?(b(),B("span",{key:0,class:mt({green:i.value>0,red:i.value<0})},T(A(Xi)(r.data,r.snap,!1)),3)):ft("",!0)}}),xw={style:{"margin-left":"10px"}},Fw={class:"green"},_w={class:"orange"},Iw=g("hr",null,null,-1),Vw=g("h4",null,"Skill Damage Breakdown",-1),Hw={style:{"font-size":"12px","border-collapse":"collapse"}},qw=g("td",null,"Base:",-1),Nw=g("td",null,"Emelda",-1),Ww=g("td",null,"Monster Resistance",-1),$w=g("td",null,"Critical Damage",-1),Uw=g("td",null,"Damage Modifier",-1),Ow=g("td",null,"Damage Modifier vs Boss",-1),zw={style:{"border-bottom":"1px solid #fff"}},Jw=g("td",null,"Single Hit Damage",-1),jw=g("td",null,"Hit Count",-1),Xw={key:1},Qw=g("td",null,"Slayer Oil Bonus",-1),Yw=g("td",null,"Extra After Bonus",-1),Zw={style:{"border-bottom":"1px solid #fff"}},Kw=g("td",null,"Total Damage",-1),ek=g("td",null,"Cast Time",-1),tk=g("td",null,"DPS",-1),sk=oe({__name:"SkillInformation",setup(e){const t=Ve("game"),i=t.data.battle.Enemy(),r=i.AttackedInfo(),c=t.snap.battle.Enemy().AttackedInfo();return(m,w)=>(b(),B("div",xw,[g("p",null,[j(" Skill: "+T(A(M).SkillName(A(t).data.source.currentHero,0))+" ",1),g("span",Fw,"Lv "+T(A(f).tDigit(A(r).skill.level.value,0))+" + "+T(A(f).tDigit(A(r).skill.levelBonus,0)),1),g("span",_w," < Rank "+T(A(r).skill.rank)+" >",1)]),g("p",null,"- "+T(A(F)[A(r).skill.element])+" Damage: "+T(A(f).tDigit(A(r).skill.DamageOrigin(A(r).hero,!0)))+" * "+T(A(f).tDigit(A(r).skill.HitCount(),0)),1),g("p",null,"- Cast Time: "+T(A(f).tDigit(A(r).skill.CalculateInterval(A(r).hero),3))+" sec",1),Iw,Vw,g("table",Hw,[g("tr",null,[qw,g("td",null,T(A(t).data.source.isSuperDungeon?A(f).tDigit(Math.log10(Math.max(1,A(r).skill.Damage()))):A(f).tDigit(A(r).skill.Damage())),1)]),g("tr",null,[g("td",null,T(A(r).skill.element==A(F).Physical?"ATK":"MATK")+":",1),g("td",null,T(A(t).data.source.isSuperDungeon?"+":"*")+" "+T(A(f).tDigit(A(r).skill.element==A(F).Physical?A(r).hero.atk:A(r).hero.matk)),1)]),g("tr",null,[Nw,g("td",null,"* "+T(A(f).percent(A(t).data.skill.ladyEmeldaEffectMultiplier[A(t).data.source.currentHero].Value())),1)]),g("tr",null,[Ww,g("td",null,"* "+T(A(f).percent(A(i).DamageCutRate(A(r).damage,A(r).element),4))+" vs "+T(A(F)[A(r).element]),1)]),g("tr",null,[g("td",null,"Knowledge "+T(A(se)[A(i).species]),1),g("td",null,"* "+T(A(f).percent(A(i).damageFactor)),1)]),g("tr",null,[g("td",null,"Element "+T(A(F)[A(r).element]),1),g("td",null,"* "+T(A(f).percent(A(i).DamageFactorElement(A(r).element))),1)]),g("tr",null,[$w,g("td",null,"* "+T(A(f).percent(A(r).hero.critDamage)),1)]),A(t).data.source.isSuperDungeon?(b(),B(K,{key:0},[g("tr",null,[Uw,g("td",null,"* "+T(A(f).percent(A(t).data.battle.superDungeonCtrl.damageMultiplier.Value())),1)]),g("tr",null,[Ow,g("td",null,"* "+T(A(f).percent(A(t).data.battle.superDungeonCtrl.sdChallengeBossDamageMultiplier.Value())),1)])],64)):ft("",!0),g("tr",zw,[Jw,g("td",null,"= "+T(A(f).tDigit(A(r).DamagePerHit)),1)]),g("tr",null,[jw,g("td",null,"* "+T(A(f).tDigit(A(r).realHitCount,0)),1)]),A(r).slayerOilDamage>0?(b(),B("tr",Xw,[Qw,g("td",null,"* "+T(A(f).percent(A(r).SlayerOilValue))+" ("+T(A(f).tDigit(A(r).slayerOilDamage))+")",1)])):ft("",!0),g("tr",null,[Yw,g("td",null,"* "+T(A(f).percent(A(r).hero.extraAfterDamage))+" ("+T(A(f).tDigit(A(r).extraAfterDamage))+")",1)]),g("tr",Zw,[Kw,g("td",null,"= "+T(A(f).tDigit(A(r).totalDamage)),1)]),g("tr",null,[ek,g("td",null,"/ "+T(A(f).tDigit(A(r).castTime,3)),1)]),g("tr",null,[tk,g("td",null,[j("= "+T(A(f).tDigit(A(r).dps))+" ",1),ee(Bw,{data:A(r).dps,snap:A(c).dps},null,8,["data","snap"])])])])]))}}),ik={style:{width:"250px","margin-left":"10px"}},ak=g("h3",null,"Enemy",-1),rk={style:{display:"flex"}},lk=g("br",null,null,-1),nk=g("br",null,null,-1),uk=g("br",null,null,-1),hk=g("br",null,null,-1),ck=g("br",null,null,-1),ok=g("br",null,null,-1),fk=g("br",null,null,-1),pk=g("br",null,null,-1),dk=g("br",null,null,-1),gk=oe({__name:"MonsterStats",setup(e){const t=Ve("game"),i=Vt(()=>t.data.battle.Enemy());return(r,h)=>(b(),B("div",ik,[ak,g("div",rk,[ee(Ai,{type:A(hs).MonsterSpecies,modelValue:A(t).data.source.enemySpecies,"onUpdate:modelValue":h[0]||(h[0]=c=>A(t).data.source.enemySpecies=c),modelModifiers:{number:!0}},null,8,["type","modelValue"]),A(t).data.source.enemySpecies!=A(se).Mimic?(b(),B(K,{key:0},[A(t).data.source.enemySpecies!=A(se).ChallengeBoss?(b(),lt(Ai,{key:0,type:A(hs).MonsterColor,modelValue:A(t).data.source.enemyColor,"onUpdate:modelValue":h[1]||(h[1]=c=>A(t).data.source.enemyColor=c),modelModifiers:{number:!0}},null,8,["type","modelValue"])):(b(),lt(Ai,{key:1,type:A(hs).ChallengeMonsterKind,modelValue:A(t).data.source.enemyChallenge,"onUpdate:modelValue":h[2]||(h[2]=c=>A(t).data.source.enemyChallenge=c),modelModifiers:{number:!0}},null,8,["type","modelValue"]))],64)):ft("",!0)]),j(" Level: "),Le(g("input",{"onUpdate:modelValue":h[3]||(h[3]=c=>A(t).data.source.enemyLevel=c),size:"6",name:"monsterLevel"},null,512),[[tt,A(t).data.source.enemyLevel,void 0,{lazy:!0,number:!0}]]),lk,j(" HP: "+T(A(f).tDigit(i.value.hp)),1),nk,j(" DEF: "+T(A(f).tDigit(i.value.def)),1),uk,j(" MDEF: "+T(A(f).tDigit(i.value.mdef)),1),hk,j(" Fire Resistance: "+T(A(f).percent(i.value.fire)),1),ck,j(" Ice Resistance: "+T(A(f).percent(i.value.ice)),1),ok,j(" Thunder Resistance: "+T(A(f).percent(i.value.thunder)),1),fk,j(" Light Resistance: "+T(A(f).percent(i.value.light)),1),pk,j(" Dark Resistance: "+T(A(f).percent(i.value.dark)),1),dk]))}}),Sk=e=>(ws("data-v-6e6a406b"),e=e(),ks(),e),mk={class:"grid"},Mk=Sk(()=>g("hr",null,null,-1)),Ek=oe({__name:"equipment",setup(e){const t=Ve("game");return(i,r)=>(b(),B("div",mk,[g("div",null,[ee(Wv),(b(),lt(Gw,{key:A(t).data.requireUpdate.value?"xxx":"yyy"}))]),g("div",null,[ee(gk),Mk,(b(),lt(sk,{key:A(t).data.requireUpdate.value?"aaa":"bbb"}))])]))}}),vk=Ft(Ek,[["__scopeId","data-v-6e6a406b"]]),wk={meta:{name:"Equipment",root:!0}},xs=e=>(ws("data-v-8dadda66"),e=e(),ks(),e),kk={style:{display:"flex"}},Ak=xs(()=>g("br",null,null,-1)),Rk=["value"],Ck=xs(()=>g("br",null,null,-1)),Lk=xs(()=>g("br",null,null,-1)),Pk={style:{"margin-left":"10px","border-left":"1px solid #fff","padding-left":"10px"}},Dk=xs(()=>g("br",null,null,-1)),yk=xs(()=>g("br",null,null,-1)),bk=xs(()=>g("br",null,null,-1)),Tk=xs(()=>g("hr",null,null,-1)),Gk=xs(()=>g("br",null,null,-1)),Bk=xs(()=>g("br",null,null,-1)),xk={key:0,class:"expedition"},Fk={class:"green"},_k={class:"orange"},Ik={style:{"text-align":"right"}},Vk=["onUpdate:modelValue"],Hk={value:"0"},qk={value:"1"},Nk={value:"2"},Wk={value:"3"},$k={value:"4"},Uk={value:"5"},Ok={value:"6"},zk={class:"yellow"},Jk=xs(()=>g("br",null,null,-1)),jk={class:"yellow"},Xk=xs(()=>g("br",null,null,-1)),Qk={class:"yellow"},Yk={class:"green"},Zk=["onClick"],Kk={style:{width:"50px",display:"inline-block","text-align":"center"}},eA=["onClick"],tA=xs(()=>g("br",null,null,-1)),sA=oe({__name:"expedition",setup(e){const t=Ve("game"),i=Pi(),r=t.data.expedition.expeditions.reduce((k,P)=>k+P.GetExpeditionExp(),0);function h(k){let P=0;for(let D=1;D<10;++D)if(k>=D*86400)P+=86400/D;else{P+=(k-86400*(D-1))/D;break}return k>=777600&&(P+=(k-777600)/10),P}const c=h(t.data.nitro.nitroCap.Value()),m=c*r,w=Vt(()=>r*i.expedition.playtime*3600*t.data.source.nitroSpeed);return(k,P)=>(b(),B(K,null,[g("div",kk,[g("div",null,[ee(Se,{multiplier:"nitro.nitroCap",inline:!0},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.unlockedExpeditionSlotNum",inline:!0},null,8,["multiplier"]),ee(Se,{multiplier:"expedition.rewardModifierPerHour",inline:!0},null,8,["multiplier"]),j(" Expedition Minimum time: "+T(A(f).secondsToDhms(A(t).data.expedition.lowerLimitTime.Value())),1),Ak,j(" Nitro Speed: "),g("input",{size:"5",value:A(f).tDigit(A(t).data.source.nitroSpeed,1),onChange:P[0]||(P[0]=D=>A(t).data.source.nitroSpeed=parseFloat(D.target.value))},null,40,Rk),Ck,j(" Playtime in day (hours): "),Le(g("input",{type:"text",size:"4","onUpdate:modelValue":P[1]||(P[1]=D=>A(i).expedition.playtime=D)},null,512),[[tt,A(i).expedition.playtime,void 0,{lazy:!0,number:!0}]]),Lk]),g("div",Pk,[j(" EXP per second: "+T(A(f).tDigit(A(r))),1),Dk,j(" EXP per playtime: "+T(A(f).tDigit(w.value)),1),yk,j(" EXP per Nitro Sink: "+T(A(f).tDigit(m))+" ( "+T(A(f).secondsToDhms(A(c),!1))+")",1),bk,Tk,j(" Total EXP per day: "+T(A(f).tDigit(w.value+m*5)),1),Gk,j(" Hackmanite "),ee(_t,{modelValue:A(t).data.sdg.sdGemRitualCtrl.sdGemList[6].level,"onUpdate:modelValue":P[2]||(P[2]=D=>A(t).data.sdg.sdGemRitualCtrl.sdGemList[6].level=D)},null,8,["modelValue"]),Bk,j(" Turquoise "),ee(_t,{modelValue:A(t).data.sdg.sdGemRitualCtrl.sdGemList[7].level,"onUpdate:modelValue":P[3]||(P[3]=D=>A(t).data.sdg.sdGemRitualCtrl.sdGemList[7].level=D)},null,8,["modelValue"])])]),(b(!0),B(K,null,he(A(t).data.expedition.expeditions,(D,N)=>(b(),B(K,null,[N<A(t).data.expedition.unlockedExpeditionSlotNum.Value()?(b(),B("div",xk,[g("div",null,[j(" Team "+T(N+1)+" < ",1),g("span",Fk,"Lv "+T(D.TotalLevel()),1),j(" > "),g("span",_k,"Rank "+T(D.TotalRank()),1)]),g("div",Ik,[Le(g("select",{"onUpdate:modelValue":z=>D.kind=z},[g("option",Hk,"Manufacturing Bricks Lv "+T(A(t).data.expedition.globalInfoList[0].level),1),g("option",qk,"Logging Trees Lv "+T(A(t).data.expedition.globalInfoList[1].level),1),g("option",Nk,"Gathering Shards Lv "+T(A(t).data.expedition.globalInfoList[2].level),1),g("option",Wk,"Capturing Monsters Lv "+T(A(t).data.expedition.globalInfoList[3].level),1),g("option",$k,"Training Equipment Lv "+T(A(t).data.expedition.globalInfoList[4].level),1),g("option",Uk,"Field Training Lv "+T(A(t).data.expedition.globalInfoList[5].level),1),g("option",Ok,"Marathon Race Lv "+T(A(t).data.expedition.globalInfoList[6].level),1)],8,Vk),[[aa,D.kind,void 0,{number:!0}]])]),g("div",null,[g("span",zk,"("+T(D.RewardPerSecString(0))+" / sec)",1),j(" "+T(D.globalInfo.RewardString(D,D.pets[0].pet,D.timeHour))+" ",1),Jk,g("span",jk,"("+T(D.RewardPerSecString(1))+" / sec)",1),j(" "+T(D.globalInfo.RewardString(D,D.pets[1].pet,D.timeHour))+" ",1),Xk,g("span",Qk,"("+T(D.RewardPerSecString(2))+" / sec)",1),j(" "+T(D.globalInfo.RewardString(D,D.pets[2].pet,D.timeHour)),1)]),g("div",null,[g("span",Yk,"Speed "+T(A(f).tDigit(D.TimeSpeed())),1),j("     "),g("button",{class:"button-left",onClick:z=>D.timeId--}," ",8,Zk),g("span",Kk,T(D.timeHour>=8760?D.timeHour/8760:D.timeHour)+" "+T(D.timeHour>=8760?"y":"h"),1),g("button",{class:"button-right",onClick:z=>D.timeId++}," ",8,eA),j(" Time to finish: "+T(A(f).secondsToDhms(D.RequiredTimesec())),1),tA,j(" Most effective: "+T(D.MostEffective()),1)])])):ft("",!0)],64))),256))],64))}}),iA=Ft(sA,[["__scopeId","data-v-8dadda66"]]),aA={meta:{name:"Expedition",root:!0}},rA=g("td",null,"Nitro Speed",-1),lA=["value"],nA=g("td",null,"Current Level",-1),uA=g("td",null,"Target Level",-1),hA=g("td",null,"Guild EXP per hour",-1),cA=["value"],oA=g("td",null,"Guild Member's Emblem Disasambled",-1),fA=g("td",null,"Approximate Time Needed",-1),pA=oe({__name:"guild",setup(e){const t=Ve("game"),i=Pi().guild;function r(){let c=i.targetLevel-t.data.source.guildLevel;if(c>0&&i.expPerHour>0){let m=0,w=0,k=1-t.data.potion.talismans[0].passiveEffectValue;for(let D=0;D<c;D++){let N=t.data.source.guildLevel+D,z=Math.floor((500*(N+1)+50*Math.pow(N,2)+500*Math.pow(N/5,3)+2e3*Math.pow(N/10,6)+25e3*Math.pow(N/20,9)+3e5*Math.pow(N/30,12))*Math.pow(10,Math.max(0,N-300)/25))*k;m+=z}let P=i.expPerHour/3600*t.data.source.nitroSpeed;return w=m/P,f.secondsToDhms(w)}else return 0}function h(c){i.expPerHour=f.convertFrom(c.target.value)}return(c,m)=>(b(),B("table",null,[g("tr",null,[rA,g("td",null,[g("input",{type:"text",size:"12",value:A(f).tDigit(A(t).data.source.nitroSpeed,1),onChange:m[0]||(m[0]=w=>A(t).data.source.nitroSpeed=parseFloat(w.target.value))},null,40,lA)])]),g("tr",null,[nA,g("td",null,[Le(g("input",{type:"text",size:"12","onUpdate:modelValue":m[1]||(m[1]=w=>A(t).data.source.guildLevel=w)},null,512),[[tt,A(t).data.source.guildLevel,void 0,{number:!0}]])])]),g("tr",null,[uA,g("td",null,[Le(g("input",{type:"text",size:"12","onUpdate:modelValue":m[2]||(m[2]=w=>A(i).targetLevel=w)},null,512),[[tt,A(i).targetLevel,void 0,{number:!0}]])])]),g("tr",null,[hA,g("td",null,[g("input",{type:"text",size:"12",value:A(f).convertTo(A(i).expPerHour),onChange:m[3]||(m[3]=w=>h(w))},null,40,cA)])]),g("tr",null,[oA,g("td",null,[Le(g("input",{type:"text",size:"12","onUpdate:modelValue":m[4]||(m[4]=w=>A(t).data.potion.talismans[0].disassembledNum=w)},null,512),[[tt,A(t).data.potion.talismans[0].disassembledNum,void 0,{number:!0}]]),j("Reduce Guild EXP requirement to level by "+T(A(f).percent(A(t).data.potion.talismans[0].passiveEffectValue)),1)])]),g("tr",null,[fA,g("td",null,T(r()),1)])]))}}),dA={meta:{name:"Guild",root:!0}},Ua=e=>(ws("data-v-7776ef8e"),e=e(),ks(),e),gA=Ua(()=>g("h3",null,"FAQ",-1)),SA=Ua(()=>g("li",null,[g("p",null,"How to adjust Ruby Converter ratio without importing Save File?")],-1)),mA={style:{"padding-top":"10px","padding-bottom":"10px"}},MA=Ua(()=>g("li",null,"How to use equipment calculator?",-1)),EA=Ua(()=>g("div",{style:{"padding-top":"10px","padding-bottom":"10px"}},[g("ul",null,[g("li",null,"Create Stat Snapshot"),g("li",null,"Click on item and modify it, new values should be shown in Stats Panel (it compares current values to Snapshot)"),g("li",null,"You can use Copy button to copy values to internal clipboard and use CTRL+V while hovering on another item to paste them"),g("li",null,"You can copy entire item by using CTRL+C and CTRL+V")])],-1)),vA=Ua(()=>g("div",{style:{"padding-top":"10px","padding-bottom":"10px"}},[g("ul",null,[g("li",null,"To reduce unnecessary computation it only iterate over enchantments that has potential to increase DPS"),g("li",null,"Only enchantments below or equal to Enemy level are chosen"),g("li",null,"Element enchantments are chosen based on first Skill or Oil equipped"),g("li",null,"Knowledge enchantements are chosen based on Enemy species selected"),g("li",null,"Basic Stats enchantements are choosen based on Swap ATK/MATK with DEF/MDEF modifier"),g("li",null,[j("Blessing enchantements are choosen based on Blessings checkbox under "),g("button",{class:"small"},"☰")])])],-1)),wA=oe({__name:"help",setup(e){const t=Th();return(i,r)=>{const h=xt("router-link"),c=xt("RouterLink");return b(),B(K,null,[gA,j(" Most function require using Import Save File otherwise it would require manually adding hundreds of values "),g("ol",null,[SA,g("div",mA,[j(" Go to "),ee(h,{to:"/data/challenge/superdungeon"},{default:Ee(()=>[j("Challange")]),_:1}),j(" page and enter values required for specific ratio. ")]),MA,EA,g("li",null,[ee(c,{to:"#findMaxDPS",class:mt({selected:A(t).hash=="#findMaxDPS"})},{default:Ee(()=>[j("Why Find MAX DPS button does not include some enchantments?")]),_:1},8,["class"])]),vA])],64)}}}),kA=Ft(wA,[["__scopeId","data-v-7776ef8e"]]),AA={meta:{name:"Help",root:!0}},RA=["selected","value"],CA=g("td",null,"Failure Rate %",-1),LA=g("td",null,"Tickets",-1),PA=g("td",null,"Reset Value",-1),DA=g("td",null,"Portal Orb Cost",-1),yA=g("td",null,"Runs",-1),bA=g("td",null,"Ruby Shard per Dungeon",-1),TA=g("td",null,"Total Ruby Shards",-1),GA=g("td",null,"Ruby Converter",-1),BA=g("td",null,"Total Ruby",-1),xA=g("hr",null,null,-1),FA=oe({__name:"ruby-shard",setup(e){const t=Ve("game"),i=Pi().rubyShard;function r(){let k=0;for(;t.data.source.SDAutoLeaveAndRetryTargetEntryCost>Math.pow(2,k);)k++;return k}function h(){let k=r(),P=0;for(let D=0;D<k;D++)P+=Math.pow(2,D)*5;return P}function c(){let k=0;for(let P=1;P<Math.floor(i.floor/10)+1;P++){let N=(P*10/10+i.modifier)*(1+i.dungeon);k+=N}return k}function m(){const k=r()*5*i.ticket*c();return k-k*i.failure/100}const w=t.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.Value();return(k,P)=>(b(),B(K,null,[j(" Dungeon: "),Le(g("select",{"onUpdate:modelValue":P[0]||(P[0]=D=>A(i).dungeon=D)},[(b(),B(K,null,he(5,(D,N)=>g("option",{selected:A(i).dungeon==N,value:N},T(A(M).SDName(N)),9,RA)),64))],512),[[aa,A(i).dungeon,void 0,{number:!0}]]),j(" Modifier: "),Le(g("input",{type:"text",size:"8","onUpdate:modelValue":P[1]||(P[1]=D=>A(i).modifier=D)},null,512),[[tt,A(i).modifier,void 0,{number:!0}]]),j(" Floors Cleared: "),Le(g("input",{type:"text",size:"8","onUpdate:modelValue":P[2]||(P[2]=D=>A(i).floor=D)},null,512),[[tt,A(i).floor,void 0,{number:!0}]]),g("table",null,[g("tr",null,[CA,g("td",null,[Le(g("input",{type:"text",size:"8","onUpdate:modelValue":P[3]||(P[3]=D=>A(i).failure=D)},null,512),[[tt,A(i).failure,void 0,{number:!0}]]),j(" (Total Ruby Shards = Total Ruby Shards - Total Ruby Shards * failure rate)")])]),g("tr",null,[LA,g("td",null,[Le(g("input",{type:"text",size:"8","onUpdate:modelValue":P[4]||(P[4]=D=>A(i).ticket=D)},null,512),[[tt,A(i).ticket,void 0,{number:!0}]])])]),g("tr",null,[PA,g("td",null,[Le(g("input",{type:"text",size:"8","onUpdate:modelValue":P[5]||(P[5]=D=>A(t).data.source.SDAutoLeaveAndRetryTargetEntryCost=D)},null,512),[[tt,A(t).data.source.SDAutoLeaveAndRetryTargetEntryCost,void 0,{number:!0}]])])]),g("tr",null,[DA,g("td",null,T(A(f).convertTo(h()*A(i).ticket)),1)]),g("tr",null,[yA,g("td",null,T(r()*5*A(i).ticket),1)]),g("tr",null,[bA,g("td",null,T(c()),1)]),g("tr",null,[TA,g("td",null,T(A(f).convertTo(m(),3)),1)]),g("tr",null,[GA,g("td",null,T(A(f).convertTo(A(w))),1)]),g("tr",null,[BA,g("td",null,T(Math.floor(m()/A(w))),1)])]),xA],64))}}),_A={meta:{name:"Ruby Shard",root:!0}},IA=g("tr",null,[g("th",null,"Talisman"),g("th",null,"Level"),g("th",null,"Cost"),g("th",null,"Fragments"),g("th",null,"Per WA"),g("th",null,"frag / cost")],-1),VA=["onUpdate:modelValue"],HA=["onUpdate:modelValue"],qA=g("hr",null,null,-1),NA={class:"green"},WA={class:"green"},$A=oe({__name:"talisman",setup(e){const t=Ve("game"),i=Pi().talisman;function r(w){return w.level==50?0:w.Cost(w.level+1)}function h(){let w="",k=0;for(let P=0;P<t.data.potion.talismans.length;P++){const D=t.data.potion.talismans[P],N=D.talismanDisassembleFragmentNumPerLevel*D.level*i.perWA[P],z=D.level==50?0:D.Cost(D.level+1),te=z?N/z:0;k<te&&(k=te,w=M.PotionName(D.kind))}return w}function c(){let w=0;for(let k=0;k<t.data.potion.talismans.length;k++){const P=t.data.potion.talismans[k],D=P.talismanDisassembleFragmentNumPerLevel*P.level*i.perWA[k];w+=D}return f.tDigit(w)}function m(w,k){const P=w.talismanDisassembleFragmentNumPerLevel*w.level*i.perWA[k]|0,D=w.level==50?0:w.Cost(w.level+1),N=D?P/D:0;return f.tDigit(N,5)}return m(t.data.potion.talismans[5],5),(w,k)=>(b(),B(K,null,[g("table",null,[IA,(b(!0),B(K,null,he(A(t).data.potion.talismans,(P,D)=>(b(),B("tr",null,[g("td",null,T(A(M).PotionName(P.kind)),1),g("td",null,[Le(g("input",{"onUpdate:modelValue":N=>P.level=N,size:"4"},null,8,VA),[[tt,P.level,void 0,{number:!0}]])]),g("td",{style:{"padding-right":"10px"},class:mt(P.level==50?"orange":"")},T(P.level==50?"MAX":A(f).tDigit(r(P))),3),g("td",null,T(P.talismanDisassembleFragmentNumPerLevel*P.level*A(i).perWA[D]),1),g("td",null,[Le(g("input",{"onUpdate:modelValue":N=>A(i).perWA[D]=N,size:"4"},null,8,HA),[[tt,A(i).perWA[D]]])]),g("td",null,T(m(P,D)),1)]))),256))]),qA,g("p",null,[j(" Most efficient talisman to level up: "),g("span",NA,T(h()),1)]),g("p",null,[j(" Total talisman fragments per WA: "),g("span",WA,T(c()),1)])],64))}}),UA={meta:{name:"Talisman",root:!0}},OA={style:{display:"flex"}},zA={class:"block"},JA=["title","src"],jA=["src"],XA={class:"block"},QA=["title","src"],YA=["src"],ZA=oe({__name:"SkillLoadout",setup(e){const t=Ve("game"),i=Vt(()=>t.data.battle.skillSet);return(r,h)=>(b(),B(K,null,[j(" Skill Loadout "),g("div",OA,[g("div",null,[j(" Class Skill "),g("div",zA,[(b(!0),B(K,null,he(i.value.currentSkillSet,c=>(b(),B(K,null,[c?(b(),B("img",{key:0,title:c.NameURL()+" "+c.IsEquipped(A(t).data.source.currentHero),src:`/img/skill/${c.NameURL()}.png`},null,8,JA)):(b(),B("img",{key:1,title:"Skill Slot",src:"/img/skill/Skillslot.png"},null,8,jA))],64))),256))])]),g("div",null,[j(" Global Skill "),g("div",XA,[(b(!0),B(K,null,he(i.value.currentGlobalSkillSet,c=>(b(),B(K,null,[c?(b(),B("img",{key:0,title:c.NameURL()+" "+c.IsEquipped(A(t).data.source.currentHero),src:`/img/skill/${c.NameURL()}.png`},null,8,QA)):(b(),B("img",{key:1,title:"Skill Slot",src:"/img/skill/Skillslot.png"},null,8,YA))],64))),256))])])])],64))}}),KA=Ft(ZA,[["__scopeId","data-v-c7c67373"]]),Yl=e=>(ws("data-v-378034ad"),e=e(),ks(),e),e5=Yl(()=>g("br",null,null,-1)),t5=Yl(()=>g("br",null,null,-1)),s5=Yl(()=>g("hr",null,null,-1)),i5=oe({__name:"test",setup(e){const t=Ve("game");return(i,r)=>(b(),B(K,null,[j(" Current Hero: "+T(A(R)[A(t).data.source.currentHero]),1),e5,j(" Current Skill Loadout: "+T(A(t).data.source.skillLoadoutIds[A(t).data.source.currentHero]),1),t5,s5,ee(KA)],64))}}),a5=Ft(i5,[["__scopeId","data-v-378034ad"]]),r5={meta:{name:"Test",root:!0,debug:!0}},nu=[{path:"/",name:"/",component:up},Ge({path:"/changelog",name:"/changelog",component:hp,children:[Ge({path:"",name:"/changelog/",component:op},fp),Ge({path:"0/1/15",name:"/changelog/0.1.15",component:Ed},vd),Ge({path:"0/1/16",name:"/changelog/0.1.16",component:Ad},Rd),Ge({path:"0/1/18",name:"/changelog/0.1.18",component:Pd},Dd),Ge({path:"0/1/20",name:"/changelog/0.1.20",component:bd},Td),Ge({path:"0/1/21",name:"/changelog/0.1.21",component:Bd},xd),Ge({path:"0/1/23",name:"/changelog/0.1.23",component:qd},Nd),Ge({path:"0/1/25",name:"/changelog/0.1.25",component:Ud},Od),Ge({path:"0/1/26",name:"/changelog/0.1.26",component:jd},Xd),Ge({path:"0/1/27",name:"/changelog/0.1.27",component:Zd},Kd),Ge({path:"0/1/28",name:"/changelog/0.1.28",component:i0},a0),Ge({path:"0/1/29",name:"/changelog/0.1.29",component:o0},f0),Ge({path:"0/1/30",name:"/changelog/0.1.30",component:g0},S0),Ge({path:"0/1/31",name:"/changelog/0.1.31",component:E0},v0),Ge({path:"0/1/32",name:"/changelog/0.1.32",component:A0},R0),Ge({path:"0/1/33",name:"/changelog/0.1.33",component:P0},D0),Ge({path:"0/1/34",name:"/changelog/0.1.34",component:T0},G0),Ge({path:"0/1/35",name:"/changelog/0.1.35",component:I0},V0),Ge({path:"0/1/36",name:"/changelog/0.1.36",component:N0},W0),Ge({path:"0/1/37",name:"/changelog/0.1.37",component:O0},z0),Ge({path:"0/1/38",name:"/changelog/0.1.38",component:X0},Q0)]},Y0),Ge({path:"/data",name:"/data",component:Z0,children:[Ge({path:"",name:"/data/",component:K0},eg),Ge({path:"ability",name:"/data/ability",component:cg},og),Ge({path:"achievement",name:"/data/achievement",component:dg},gg),Ge({path:"ascension",name:"/data/ascension",component:kg},Ag),Ge({path:"bestiary",name:"/data/bestiary",component:Tg},Gg),Ge({path:"challenge",name:"/data/challenge",component:Bg,children:[Ge({path:"",name:"/data/challenge/",component:xg},Fg),Ge({path:"handicap",name:"/data/challenge/handicap",component:Hg},qg),Ge({path:"solo",name:"/data/challenge/solo",component:$g},Ug),Ge({path:"superdungeon",name:"/data/challenge/superdungeon",component:jg},Xg)]},Qg),Ge({path:"expedition",name:"/data/expedition",component:iS},aS),Ge({path:"guild",name:"/data/guild",component:lS},nS),Ge({path:"quest",name:"/data/quest",component:uS,children:[Ge({path:"",name:"/data/quest/",component:hS},cS),Ge({path:"global",name:"/data/quest/global",component:pS},dS),Ge({path:"title",name:"/data/quest/title",component:kS},AS)]},RS),Ge({path:"skill",name:"/data/skill",component:CS,children:[Ge({path:"",name:"/data/skill/",component:LS},PS),Ge({path:"angel",name:"/data/skill/angel",component:GS},BS),Ge({path:"archer",name:"/data/skill/archer",component:VS},HS),Ge({path:"tamer",name:"/data/skill/tamer",component:US},OS),Ge({path:"thief",name:"/data/skill/thief",component:QS},YS),Ge({path:"warrior",name:"/data/skill/warrior",component:sm},im),Ge({path:"wizard",name:"/data/skill/wizard",component:um},hm)]},cm),Ge({path:"super-dungeon",name:"/data/super-dungeon",component:om,children:[Ge({path:"",name:"/data/super-dungeon/",component:fm},pm),Ge({path:"powerup",name:"/data/super-dungeon/powerup",component:km},Am),Ge({path:"ritual",name:"/data/super-dungeon/ritual",component:Lm},Pm),Ge({path:"ruby-shop",name:"/data/super-dungeon/ruby-shop",component:bm},Tm),Ge({path:"upgrade",name:"/data/super-dungeon/upgrade",component:$m},Um)]},Om),Ge({path:"talisman",name:"/data/talisman",component:Xm},Qm),Ge({path:"town",name:"/data/town",component:a1},r1),Ge({path:"upgrade",name:"/data/upgrade",component:n1},u1)]},h1),Ge({path:"/drop-chance",name:"/drop-chance",component:f1},p1),Ge({path:"/equipment",name:"/equipment",component:vk},wk),Ge({path:"/expedition",name:"/expedition",component:iA},aA),Ge({path:"/guild",name:"/guild",component:pA},dA),Ge({path:"/help",name:"/help",component:kA},AA),Ge({path:"/ruby-shard",name:"/ruby-shard",component:FA},_A),Ge({path:"/talisman",name:"/talisman",component:$A},UA),Ge({path:"/test",name:"/test",component:a5},r5)];function l5(e){const{extendRoutes:t}=e;return gd(Object.assign(e,{routes:typeof t=="function"?t(nu):nu}))}const n5=oe({__name:"TheMenu",setup(e){const t=bh().getRoutes().filter(r=>r.meta.root),i=Pi();return(r,h)=>{const c=xt("RouterLink"),m=xt("router-link");return b(),B("nav",null,[(b(!0),B(K,null,he(A(t),w=>{var k;return b(),B(K,null,[(k=w.children)!=null&&k.length&&w.meta.submenu?(b(),lt($n,{key:0},{trigger:Ee(()=>[ee(c,{to:w.path,class:"rightarrow"},{default:Ee(()=>[j(T(w.meta.name),1)]),_:2},1032,["to"])]),content:Ee(()=>[(b(!0),B(K,null,he(w.children.filter(P=>{var D;return!((D=P.meta)!=null&&D.default)}),P=>{var D,N;return b(),B(K,null,[(D=P.children)!=null&&D.length?(b(),lt($n,{key:0,submenu:""},{trigger:Ee(()=>{var z;return[(z=P.meta)!=null&&z.default?ft("",!0):(b(),lt(m,{key:0,class:"submenu rightarrow",to:w.path+"/"+P.path},{default:Ee(()=>{var te;return[j(T((te=P.meta)==null?void 0:te.name),1)]}),_:2},1032,["to"]))]}),content:Ee(()=>[(b(!0),B(K,null,he(P.children,z=>{var te;return b(),B(K,null,[(te=z.meta)!=null&&te.default?ft("",!0):(b(),lt(m,{key:0,class:"submenu",to:w.path+"/"+P.path+"/"+z.path},{default:Ee(()=>{var ie;return[j(T((ie=z.meta)==null?void 0:ie.name),1)]}),_:2},1032,["to"]))],64)}),256))]),_:2},1024)):(b(),B(K,{key:1},[(N=P.meta)!=null&&N.default?ft("",!0):(b(),lt(m,{key:0,class:"submenu",to:w.path+"/"+P.path},{default:Ee(()=>{var z;return[j(T((z=P.meta)==null?void 0:z.name),1)]}),_:2},1032,["to"]))],64))],64)}),256))]),_:2},1024)):(b(),B(K,{key:1},[w.meta.version?(b(),lt(c,{key:0,to:w.path,class:mt({warning:A(i).checkVersion()}),onClick:A(i).updateVersion},{default:Ee(()=>[j(T(w.meta.name),1)]),_:2},1032,["to","class","onClick"])):(b(),lt(c,{key:1,to:w.path},{default:Ee(()=>[j(T(w.meta.name),1)]),_:2},1032,["to"]))],64))],64)}),256))])}}}),u5=Ft(n5,[["__scopeId","data-v-d476670e"]]),h5={style:{width:"700px"}},c5=g("h1",null,"Log",-1),o5=oe({__name:"TheLog",setup(e){const t=nt("Nothing"),i=nt(!1),r=nt(null);return gl(document,"log",h=>{h.detail.type=="start"&&(r.value.dialog.showModal(),r.value.locked=!0),h.detail.type=="unlock"&&(r.value.locked=!1),h.detail.type=="msg"&&(t.value=h.detail.data,i.value=!0)}),(h,c)=>(b(),lt(qi,{ref_key:"dialog",ref:r},{trigger:Ee(()=>[g("button",{class:mt({yellow:i.value}),onClick:c[0]||(c[0]=m=>i.value=!1)},"Log",2)]),content:Ee(()=>[g("div",h5,[c5,g("pre",null,T(t.value),1)])]),_:1},512))}}),As=e=>(ws("data-v-cf4c7fdb"),e=e(),ks(),e),f5={class:"wrapper"},p5={class:"header"},d5={id:"title"},g5={id:"settings"},S5=As(()=>g("label",{for:"saveFileImport",class:"importLabel"},"Import Save File",-1)),m5={class:"sidebar",id:"menu"},M5={id:"content"},E5={id:"footer",class:"footer"},v5={id:"version"},w5=As(()=>g("a",{href:"https://github.com/pr0cessus/IEH2Calculator"},"Github Repository Page",-1)),k5=As(()=>g("a",{href:"https://discordapp.com/users/.processus/"},"DM me on Discord",-1)),A5={style:{padding:"10px"}},R5=As(()=>g("br",null,null,-1)),C5=As(()=>g("br",null,null,-1)),L5=As(()=>g("br",null,null,-1)),P5=As(()=>g("hr",null,null,-1)),D5=As(()=>g("h4",null,"SD Modifiers",-1)),y5=As(()=>g("br",null,null,-1)),b5=As(()=>g("br",null,null,-1)),T5=As(()=>g("br",null,null,-1)),G5=As(()=>g("br",null,null,-1)),B5=As(()=>g("br",null,null,-1)),x5=oe({__name:"App",setup(e){const t=Ve("game"),i=nt();function r(m){if(!m.target.files)return;const w=document.createElement("script");w.src="./SaveFileDencrypt.js",w.onload=function(){console.log("script loaded");const k=new FileReader;k.readAsText(m.target.files[0]),k.onloadend=()=>{const P=new globalThis.SaveFileDencrypt(k.result).data;localStorage.setItem("SaveFileData",JSON.stringify({...Sl().$state,...P})),window.alert("Save File loaded! Reloading page"),location.reload()}},document.head.appendChild(w)}function h(){window.confirm("Clear data?")&&(localStorage.clear(),window.alert("Data cleared, Reload page if you wish to start over"))}function c(){localStorage.setItem("SaveFileSnapshot",JSON.stringify(Sl().$state)),location.reload()}return(m,w)=>{const k=xt("router-view");return b(),B(K,null,[g("div",f5,[g("div",p5,[g("h1",d5,[ee(ip)]),g("div",g5,[ee(o5),g("button",{style:{"font-size":"12px"},onClick:w[0]||(w[0]=P=>i.value.showModal())},"☰"),g("button",{onClick:w[1]||(w[1]=P=>c())},"Create Snapshot"),S5,g("input",{type:"file",id:"saveFileImport",accept:".txt",onChange:r},null,32),g("button",{id:"data-restart",type:"reset",onClick:w[2]||(w[2]=P=>h())},"Hard Reset")])]),g("div",m5,[ee(u5)]),g("div",M5,[ee(k)]),g("div",E5,[j(" Version: "),g("span",v5,T(A(pl).version),1),j(" | Game Version 1.2.1.9.29(α) | "),w5,j(" | Encounter any bug? "),k5])]),g("dialog",{ref_key:"dialog",ref:i,onMousedown:w[12]||(w[12]=P=>{P.target.nodeName==i.value.nodeName&&i.value.close()}),style:{"background-color":"#3a3a3a",color:"#fff"}},[g("div",A5,[Le(g("input",{type:"checkbox","onUpdate:modelValue":w[3]||(w[3]=P=>A(t).data.source.isSuperDungeon=P),class:"checkbox",name:"isSuperDungeon"},null,512),[[us,A(t).data.source.isSuperDungeon]]),j(" Super Dungeon"),R5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[4]||(w[4]=P=>A(t).data.source.superDungeonPowerupIsActive=P),class:"checkbox",name:"superDungeonPowerupIsActive"},null,512),[[us,A(t).data.source.superDungeonPowerupIsActive]]),j(" Active Powerup"),C5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[5]||(w[5]=P=>A(t).data.source.isBlessing=P),class:"checkbox",name:"isBlessing"},null,512),[[us,A(t).data.source.isBlessing]]),j(" Blessings"),L5,P5,D5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[6]||(w[6]=P=>A(t).data.source.isActiveSdModifiers[950+A(bt).SwapATKWithDEF]=P),class:"checkbox",name:"SwapATKWithDEF"},null,512),[[us,A(t).data.source.isActiveSdModifiers[950+A(bt).SwapATKWithDEF]]]),j(" Swap ATK/MATK with DEF/MDEF"),y5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[7]||(w[7]=P=>A(t).data.source.isActiveSdModifiers[950+A(bt).RemoveSDUpgrade1]=P),class:"checkbox",name:"RemoveSDUpgrade1"},null,512),[[us,A(t).data.source.isActiveSdModifiers[950+A(bt).RemoveSDUpgrade1]]]),j(" Remove the effect of SD Damage-type and Fury upgrades in SD Upgrade I"),b5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[8]||(w[8]=P=>A(t).data.source.isActiveSdModifiers[950+A(bt).ReducePowerupEffect]=P),class:"checkbox",name:"ReducePowerupEffect"},null,512),[[us,A(t).data.source.isActiveSdModifiers[950+A(bt).ReducePowerupEffect]]]),j(" Reduce the effect of powerups by "+T(A(t).data.source.sdModifierValues[950+A(bt).ReducePowerupEffect]==0?"50.00%":A(t).data.source.sdModifierValues[950+A(bt).ReducePowerupEffect]==1?"90.00%":"99.00%")+" ",1),T5,j("            "),Le(g("input",{type:"range",min:"0",max:"2","onUpdate:modelValue":w[9]||(w[9]=P=>A(t).data.source.sdModifierValues[950+A(bt).ReducePowerupEffect]=P),name:"ReducePowerupEffectValue"},null,512),[[tt,A(t).data.source.sdModifierValues[950+A(bt).ReducePowerupEffect],void 0,{lazy:!0,number:!0}]]),G5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[10]||(w[10]=P=>A(t).data.source.isActiveSdModifiers[950+A(bt).RemoveSDPowerupPassives]=P),class:"checkbox",name:"RemoveSDPowerupPassives"},null,512),[[us,A(t).data.source.isActiveSdModifiers[950+A(bt).RemoveSDPowerupPassives]]]),j(" Remove the permanent effects of SD Powerups "),B5,Le(g("input",{type:"checkbox","onUpdate:modelValue":w[11]||(w[11]=P=>A(t).data.source.isActiveSdModifiers[950+A(bt).RemoveEquipmentEffectBonuses]=P),class:"checkbox",name:"RemoveEquipmentEffectBonuses"},null,512),[[us,A(t).data.source.isActiveSdModifiers[950+A(bt).RemoveEquipmentEffectBonuses]]]),j(" Remove Equipment Effect Bonus ")])],544),ee(_f)],64)}}}),F5=Ft(x5,[["__scopeId","data-v-cf4c7fdb"]]);class _5{constructor(t,i){o(this,"isProxy",new WeakMap);o(this,"data");o(this,"snap");o(this,"compare");o(this,"debug");this.snap=i,this.data=t,this.compare=new Proxy(this.data,this.Proxy()),this.Synchronization()}Proxy(){const t=(h,c,m=!1)=>{if((c==0||c==null)&&m)return"(NEW)";if((h==0||h==null)&&m)return"(MISSING)";if(c>h)return c/h-1<1e-4?void 0:`(-${f.percent(c/h-1,2)})`;if(c<h)return h/c-1<1e-4?void 0:`(+${f.percent(h/c-1,2)})`};let i=this.snap;const r={isProxy:new WeakMap,$snap:new WeakMap,get(h,c,m){if(this.$snap.has(h)&&(i=this.$snap.get(h)),typeof h[c]=="object"&&h[c]!==null){if(this.isProxy.has(h[c]))return this.isProxy.get(h[c]);{const w=new Proxy(Reflect.get(h,c,m),r);return this.isProxy.set(h[c],w),this.$snap.set(h[c],i[c]),w}}else{if(typeof h[c]=="function")return console.log("target is function",Reflect.apply(h[c],h,[])),()=>Reflect.apply(h[c],h,[]);if(Array.isArray(h))return Reflect.get(h,c,m);const w=h[c],k=i[c],P=w-k;return{value:w,snap:k,diff:{raw:P,digit:P>0?`Difference: +${P}`:`Difference: ${P}`,percent:t(w,k)},class:P>0?"green":P<0?"red":""}}}};return r}Synchronization(){as(this.data.source,(t,i)=>{console.log("watch data.source"),this.data.requireUpdate.value=!0}),as(()=>this.data.source.isSuperDungeon,(t,i)=>{this.snap.source.isSuperDungeon=t,this.snap.SuperDungeonToggle(),this.data.SuperDungeonToggle()}),as(()=>this.data.source.currentHero,(t,i)=>{this.snap.source.currentHero=t}),as(this.data.source.equipmentLoadoutIds,(t,i)=>{this.snap.source.equipmentLoadoutIds=t,this.data.inventory.Update(),this.snap.inventory.Update()}),as(()=>this.data.source.enemyColor,(t,i)=>this.snap.source.enemyColor=t),as(()=>this.data.source.enemySpecies,(t,i)=>this.snap.source.enemySpecies=t),as(()=>this.data.source.enemyLevel,(t,i)=>this.snap.source.enemyLevel=t),as(()=>this.data.source.enemyChallenge,(t,i)=>this.snap.source.enemyChallenge=t)}Worker(){}}var s=(e=>(e[e.Add=0]="Add",e[e.Mul=1]="Mul",e[e.After=2]="After",e))(s||{});class ${constructor(t=new u(n.Base,s.Add,()=>0),i=()=>1e300,r=()=>0){o(this,"modifiers",[]);o(this,"additiveKind");o(this,"multiplicativeKind");o(this,"afterKind");o(this,"additive",0);o(this,"after",0);o(this,"temp",0);o(this,"value",0);o(this,"log",0);o(this,"isLog",!1);o(this,"numberType",gt.Percent);o(this,"multiplicative",1);o(this,"maxValue");o(this,"minValue");o(this,"debug",!1);o(this,"name","");this.maxValue=i,this.minValue=r,this.RegisterMultiplier(t),this.RegisterMultiplier(new u(n.Base,s.Mul,()=>0))}Debug(t,i){this.modifiers.forEach(r=>{r.kind==t&&r.type==i&&console.log("modifier",r)})}Snapshot(){return this.Calculate(),{additive:this.additive,multiplicative:this.multiplicative,after:this.after,multiplicativeKind:this.multiplicativeKind,additiveKind:this.additiveKind,afterKind:this.afterKind,value:this.value,temp:this.temp,log:this.log,numberType:this.numberType,isLog:this.isLog,ValueString:()=>this.ValueString(),Value:()=>this.Value()}}Value(){return this.Calculate(),this.value}ValueString(){switch(this.numberType){case gt.Normal:return f.tDigit(this.Value(),2);case gt.Percent:return f.percent(this.Value(),2);case gt.Meter:return f.meter(this.Value(),2);default:return this.Value()}}TotalValue(){return this.BeforeTotalValue(this.isLog)+this.After()}RegisterMultiplier(t){return this.modifiers.push(t),()=>this.UnregisterMultplier(t)}UnregisterMultplier(t){for(let i=0;i<this.modifiers.length;i++)this.modifiers[i]==t&&this.modifiers.splice(i,1)}After(){return this.after}Calculate(){this.additiveKind={},this.multiplicativeKind={},this.afterKind={};for(let t=0;t<this.modifiers.length;t++){const i=this.modifiers[t];if(i.trigger()!=!1)switch(i.type){case s.Add:this.additiveKind[n[i.kind]]?this.additiveKind[n[i.kind]]+=i.value():this.additiveKind[n[i.kind]]=i.value();break;case s.Mul:this.multiplicativeKind[n[i.kind]]?this.multiplicativeKind[n[i.kind]]+=i.value():this.multiplicativeKind[n[i.kind]]=1+i.value();break;case s.After:this.afterKind[n[i.kind]]?this.afterKind[n[i.kind]]+=i.value():this.afterKind[n[i.kind]]=i.value();break}}this.additive=Object.values(this.additiveKind).reduce((t,i)=>t+i,0),this.multiplicative=Object.values(this.multiplicativeKind).reduce((t,i)=>t*i),this.after=Object.values(this.afterKind).reduce((t,i)=>t+i,0),this.temp=this.BeforeTotalValue(!1),this.log=this.BeforeTotalValue(!0),this.value=Math.max(this.minValue(),Math.min(this.maxValue(),this.TotalValue()))}BeforeTotalValue(t){if(t){let i=this.additive*this.multiplicative;switch(this.numberType){case gt.Normal:return i<1?i:this.modifiers[0].Value+Math.log10(i);case gt.Percent:return this.modifiers[0].Value>=1?i<1?i:this.modifiers[0].Value+Math.log10(i):i<.01?i:this.modifiers[0].Value+Math.log10(i*100)/100;case gt.Meter:return i<100?i:this.modifiers[0].Value+Math.log10(i/100)*100}}return this.additive*this.multiplicative}PrintModifiers(t=0){for(let i=0;i<this.modifiers.length;i++){const r=this.modifiers[i];r.type==t&&console.log(M.StatsBreakdown(r.kind),s[r.type],r.Value)}}}class u{constructor(t,i,r,h=()=>!0){o(this,"kind");o(this,"type");o(this,"value");o(this,"trigger");this.kind=t,this.type=i,this.value=r,this.trigger=h}get Value(){return this.value()}get info(){return`kind: ${n[this.kind]}, type: ${s[this.type]}, trigger: ${this.trigger()}, value: ${this.Value}`}}const I5={maxLevel:50,upgradeMaxLevel:999,catalystMaxLevel:50};class V5{constructor(){o(this,"criticalChanceMultiplier");o(this,"catalystLevelCap");o(this,"catalystCostReduction");o(this,"catalystDoubleCriticalChance");o(this,"catalysts",[]);o(this,"essenceProductions",[]);o(this,"essenceProductionMultiplier");o(this,"essenceProductionDiminishing");o(this,"availableNum");this.catalystLevelCap=new $(new u(n.Base,s.Add,()=>I5.catalystMaxLevel)),this.catalystCostReduction=new $(new u(n.Base,s.Add,()=>0),()=>.5,()=>0),this.catalystDoubleCriticalChance=new $(new u(n.Base,s.Add,()=>0),()=>1,()=>0),this.availableNum=new $(new u(n.Base,s.Add,()=>1)),this.essenceProductionDiminishing=new $(new u(n.Base,s.Add,()=>0),()=>2,()=>1.1),this.essenceProductionDiminishing.RegisterMultiplier(new u(n.Base,s.Add,()=>2)),this.essenceProductionMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.criticalChanceMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.essenceProductionMultiplier.name="Essence Convertion Rate"}}class H5{constructor(){o(this,"catalyst",new V5);o(this,"mysteriousWaterProductionPerSec");o(this,"mysteriousWaterCap");o(this,"maxMysteriousWaterExpandedCapNum");o(this,"mysteriousWaterExpandedCapNum",0);o(this,"doubleAlchemyPointChance");o(this,"alchemyPointGainMultiplier");o(this,"alchemyUpgrades",[]);o(this,"maxPurificationLevel");o(this,"maxWaterPreservationLevel");o(this,"preventUseEssenceToCraft");o(this,"nitroGainOnCraft");this.maxMysteriousWaterExpandedCapNum=new $(new u(n.Base,s.Add,()=>50)),this.mysteriousWaterCap=new $(new u(n.Base,s.Add,()=>this.mysteriousWaterExpandedCapNum)),this.mysteriousWaterProductionPerSec=new $(new u(n.Base,s.Add,()=>.1)),this.doubleAlchemyPointChance=new $,this.alchemyPointGainMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.preventUseEssenceToCraft=new $,this.nitroGainOnCraft=new $,this.maxPurificationLevel=new $(new u(n.Base,s.Add,()=>50)),this.maxWaterPreservationLevel=new $(new u(n.Base,s.Add,()=>5)),this.alchemyPointGainMultiplier.name="Alchemy Point Gain"}Start(){}}var Ia;class q5{constructor(t){Ks(this,Ia,void 0);o(this,"expBonuses",Array(W.AreaKind));o(this,"moveSpeedBonuses",Array(W.AreaKind));o(this,"areaDebuffReduction");o(this,"largeSwarmChanceInsteadOfRegular");o(this,"epicSwarmChanceInsteadOfLarge");o(this,"swarmScoreMultiplier");o(this,"maxAreaPrestigeLevel");o(this,"maxAreaExpLevel");o(this,"maxAreaMoveSpeedLevel");o(this,"townMaterialGainBonus");o(this,"townMaterialDungeonRewardMultiplier");o(this,"townMaterialGainPerDifficultyMultiplier");o(this,"townMaterialGainBonusClass",Array(W.HeroKind));o(this,"chestPortalOrbChance");o(this,"clearCountBonusClass",Array(W.HeroKind));o(this,"dungeonClearCountBonusClass",Array(W.HeroKind));o(this,"memoTotalClearedMissionNum");ei(this,Ia,t),this.chestPortalOrbChance=new $,this.townMaterialGainBonus=new $,this.townMaterialGainPerDifficultyMultiplier=new $,this.maxAreaExpLevel=new $(new u(n.Base,s.Add,()=>100)),this.maxAreaPrestigeLevel=new $(new u(n.Base,s.Add,()=>9)),this.swarmScoreMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.maxAreaMoveSpeedLevel=new $(new u(n.Base,s.Add,()=>100)),this.townMaterialDungeonRewardMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.townMaterialDungeonRewardMultiplier.name="Town Material Gain",this.epicSwarmChanceInsteadOfLarge=new $(new u(n.Base,s.Add,()=>0),()=>1,()=>0),this.largeSwarmChanceInsteadOfRegular=new $(new u(n.Base,s.Add,()=>0),()=>1,()=>0),this.areaDebuffReduction=new $(new u(n.Base,s.Add,()=>0),()=>.9,()=>0);for(let i=0;i<this.expBonuses.length;i++)this.expBonuses[i]=new $,this.moveSpeedBonuses[i]=new $;for(let i=0;i<this.townMaterialGainBonusClass.length;i++)this.townMaterialGainBonusClass[i]=new $;for(let i=0;i<this.clearCountBonusClass.length;i++)this.clearCountBonusClass[i]=new $(new u(n.Base,s.Add,()=>1)),this.dungeonClearCountBonusClass[i]=new $(new u(n.Base,s.Add,()=>1))}SetEffectClearCount(t){for(let i=0;i<this.clearCountBonusClass.length;i++)this.clearCountBonusClass[i].RegisterMultiplier(t)}SetEffectDungeonClearCount(t){for(let i=0;i<this.dungeonClearCountBonusClass.length;i++)this.dungeonClearCountBonusClass[i].RegisterMultiplier(t)}TotalClearedMissionNum(){if(this.memoTotalClearedMissionNum)return this.memoTotalClearedMissionNum;const t=fe(this,Ia).source.isClearedMission.filter(Boolean).length;return this.memoTotalClearedMissionNum=t,t}}Ia=new WeakMap;class Qt{constructor(t){o(this,"ctrl");o(this,"heroKind");this.ctrl=t,this.heroKind=t.heroKind}get level(){return this.ctrl.data.source.superDungeonPowerupLevels[this.kind]}set level(t){this.ctrl.data.source.superDungeonPowerupLevels[this.kind]=t}get sdgCtrl(){return this.ctrl.data.sdg}get isUnlocked(){return this.ctrl.data.source.superDungeonPowerupIsUnlocked[this.kind]}get kind(){return Ae.Heal}get purchasedNum(){return this.ctrl.data.source.superDungeonPowerupPurchasedNums[this.kind]}set purchasedNum(t){this.ctrl.data.source.superDungeonPowerupPurchasedNums[this.kind]=t}get rank(){return this.ctrl.data.source.superDungeonPowerupRanks[this.kind]}set rank(t){this.ctrl.data.source.superDungeonPowerupRanks[this.kind]=Math.min(100,t)}Start(){this.SetEffect()}isActive(){return this.ctrl.data.source.superDungeonPowerupIsActive}SetEffect(){}SetGlobalEffect(){}get baseInitEffectValue(){return 0}get initEffectValue(){return this.baseInitEffectValue*this.sdgCtrl.powerupEffectMultiplier[this.kind].Value()}get baseIncrementEffectValuePerRank(){return 0}get incrementEffectValuePerRank(){return this.baseIncrementEffectValuePerRank*this.sdgCtrl.powerupEffectMultiplier[this.kind].Value()}EffectValue(){const t=this.initEffectValue+this.rank*this.incrementEffectValuePerRank;if(this.sdgCtrl.data.source.isSuperDungeon&&this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.ReducePowerupEffect]){const i=this.sdgCtrl.data.source.sdModifierValues[950+bt.ReducePowerupEffect],r=i==0?.5:i==1?.9:.99;return t*Math.max(0,1-r)}return t}get basePermEffect(){return 0}get permEffect(){return this.basePermEffect*this.sdgCtrl.powerupPermEffectMultiplier.Value()}get basePermEffectMaxValue(){return 1e300}get permEffectMaxValue(){return this.basePermEffectMaxValue*this.sdgCtrl.powerupPermEffectMultiplier.Value()}PermanentEffectValue(){return this.sdgCtrl.data.source.isSuperDungeon&&this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDPowerupPassives]?0:Math.min(this.permEffectMaxValue,Math.pow(this.purchasedNum,2/3)*this.permEffect)}RankCost(t){return 0}NameString(){return M.SDPowerupString(this.kind,this.PermanentEffectValue()).name}TotalRankCost(){let t=0;for(let i=0;i<this.rank;i++)this.rank&&(t+=this.RankCost(i));return t}EffectValueString(){return M.SDPowerupString(this.kind,this.PermanentEffectValue()).passive}}class N5 extends Qt{get kind(){return Ae.ChallengeBossDamageMultiplier}constructor(t){super(t)}Cost(t){return 50+50*t+50*(Math.pow(10,t/10)-1)}RankCost(t){return 4+4*t}get unlockDungeonCoinCost(){return 75e3}SetEffect(){return this.ctrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<W.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .01}}class W5 extends Qt{get kind(){return Ae.CriticalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 500}Cost(t){return 10+10*t+10*(Math.pow(5,t/10)-1)}SetEffect(){this.ctrl.data.stats.HeroStats(this.heroKind,v.CriticalDamage).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(v.CriticalDamage,new u(n.DungeonItemPermanent,s.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .5}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .01}}class $5 extends Qt{get kind(){return Ae.DamageCutMultiplier}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/10)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.damageCutMultiplier.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<W.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .05}get baseIncrementEffectValuePerRank(){return .025}get basePermEffect(){return .01}}class U5 extends Qt{get kind(){return Ae.DamageMultiplier}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/10)-1)}RankCost(t){return 1+t}SetEffect(){this.ctrl.damageMultiplier.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<W.HeroKind;t++)this.ctrl.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .5}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .01}}class O5 extends Qt{get kind(){return Ae.DodgeHeal}constructor(t){super(t)}Cost(t){return 25*Math.pow(2,t)}RankCost(t){return 2+2*t}get unlockDungeonCoinCost(){return 100}SetEffect(){return this.ctrl.dodgeHealPercent.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.MP,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 2}}class z5 extends Qt{get kind(){return Ae.DungeonCoinGain}constructor(t){super(t)}Cost(t){return 50*Math.pow(2,t)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 5e3}SetEffect(){return this.sdgCtrl.dungeonCoinBonus.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.sdgCtrl.dungeonCoinGain.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .001}}class J5 extends Qt{get kind(){return Ae.EquipmentDropChance}constructor(t){super(t)}RankCost(t){return 5+5*t}get unlockDungeonCoinCost(){return 1e5}Cost(t){return 200+200*t+200*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,v.EquipmentDropChance).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(v.ArtifactProficiencyGain,new u(n.DungeonItemPermanent,s.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .001}get baseIncrementEffectValuePerRank(){return 1e-4}get basePermEffect(){return .005}}class j5 extends Qt{get kind(){return Ae.ExtraAfterDamage}constructor(t){super(t)}RankCost(t){return 5+5*t}get unlockDungeonCoinCost(){return 1e5}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.Hero(this.heroKind).extraAfterDamage.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<W.HeroKind;t++)this.ctrl.data.stats.Hero(t).extraAfterDamage.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .25}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .001}}class X5 extends Qt{get kind(){return Ae.FameGain}constructor(t){super(t)}Cost(t){return 100*Math.pow(10,t/5)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 1e4}SetEffect(){return this.ctrl.data.superStats.Hero(this.heroKind).fameGain.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<W.HeroKind;t++)this.ctrl.data.superStats.Hero(t).fameGain.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Mul,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .05}get baseIncrementEffectValuePerRank(){return .005}get basePermEffect(){return .001}}class Q5 extends Qt{get kind(){return Ae.Heal}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(2,t)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.healPercentEveryFloor.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.HP,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 5}}class Y5 extends Qt{get kind(){return Ae.MagicalAbsorption}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){this.ctrl.data.stats.ElementAbsorption(this.heroKind,F.Fire).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,F.Ice).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,F.Thunder).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,F.Light).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementAbsorption(this.heroKind,F.Dark).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.MDEF,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 1}}class Z5 extends Qt{get kind(){return Ae.MagicalCriticalChance}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 200}Cost(t){return 25+25*t+10*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,v.MagCritChance).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(v.MagCritChance,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .02}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 5e-4}}class K5 extends Qt{get kind(){return Ae.MagicalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){this.ctrl.data.stats.ElementDamage(this.heroKind,F.Fire).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,F.Ice).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,F.Thunder).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,F.Light).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive())),this.ctrl.data.stats.ElementDamage(this.heroKind,F.Dark).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.MATK,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .5}get basePermEffect(){return 1}}class eR extends Qt{get kind(){return Ae.MoveSpeed}constructor(t){super(t)}RankCost(t){return 1+t}Cost(t){return 25+25*t+25*(Math.pow(10,t/5)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,v.MoveSpeed).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(v.MoveSpeed,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 50}get baseIncrementEffectValuePerRank(){return 10}get basePermEffect(){return .1}get basePermEffectMaxValue(){return 1e3}}class tR extends Qt{get kind(){return Ae.PhysicalAbsorption}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.ElementAbsorption(this.heroKind,F.Physical).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.DEF,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .01}get baseIncrementEffectValuePerRank(){return 5e-4}get basePermEffect(){return 1}}class sR extends Qt{get kind(){return Ae.PhysicalCriticalChance}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 200}Cost(t){return 25+25*t+10*(Math.pow(2,t)-1)}SetEffect(){return this.ctrl.data.stats.HeroStats(this.heroKind,v.PhysCritChance).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectStats(v.PhysCritChance,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .02}get baseIncrementEffectValuePerRank(){return .001}get basePermEffect(){return 5e-4}}class iR extends Qt{get kind(){return Ae.PhysicalDamage}constructor(t){super(t)}RankCost(t){return 1+t}get unlockDungeonCoinCost(){return 2e3}Cost(t){return 25+25*t+25*(Math.pow(10,t/10)-1)}SetEffect(){return this.ctrl.data.stats.ElementDamage(this.heroKind,F.Physical).RegisterMultiplier(new u(n.DungeonItem,s.After,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.ATK,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .5}get basePermEffect(){return 1}}class aR extends Qt{get kind(){return Ae.RestoreDodgeTimesec}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/5)-1)}RankCost(t){return 1+t}SetEffect(){return this.ctrl.dodgeTimeRestoreSecEveryFloor.RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.sdgCtrl.dodgeTimesec.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Add,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .1}get basePermEffect(){return .1}get basePermEffectMaxValue(){return 20}}class rR extends Qt{get kind(){return Ae.SkillCastSpeed}constructor(t){super(t)}RankCost(t){return 2+2*t}get unlockDungeonCoinCost(){return 500}Cost(t){return 25*Math.pow(2,t)}SetEffect(){return this.ctrl.data.skill.skillCastSpeedModifier[this.heroKind].RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){this.ctrl.data.stats.SetEffectBasicStats(d.SPD,new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return .1}get baseIncrementEffectValuePerRank(){return .01}get basePermEffect(){return 1}}class lR extends Qt{get kind(){return Ae.SkillHitCount}constructor(t){super(t)}RankCost(t){return 3+3*t}get unlockDungeonCoinCost(){return 5e4}Cost(t){return 50*Math.pow(2,t)}SetEffect(){this.ctrl.data.skill.extraSkillHitCount[this.heroKind].RegisterMultiplier(new u(n.DungeonItem,s.Add,()=>this.EffectValue()*this.level,()=>this.isActive()))}SetGlobalEffect(){for(let t=0;t<this.ctrl.data.skill.skillLevelBonus.length;t++)this.ctrl.data.skill.skillLevelBonus[t].RegisterMultiplier(new u(n.DungeonItemPermanent,s.After,()=>this.PermanentEffectValue(),()=>this.isUnlocked))}get baseInitEffectValue(){return 1}get baseIncrementEffectValuePerRank(){return .25}get basePermEffect(){return .5}}class nR extends Qt{get kind(){return Ae.TimeLimit}constructor(t){super(t)}Cost(t){return 10+10*t+10*(Math.pow(10,t/5)-1)}RankCost(t){return 1+t}SetGlobalEffect(){this.sdgCtrl.additionalTimeLimit.RegisterMultiplier(new u(n.DungeonItemPermanent,s.Add,()=>this.PermanentEffectValue))}get baseInitEffectValue(){return 10}get baseIncrementEffectValuePerRank(){return 2}get basePermEffect(){return .5}}class uR{constructor(t){o(this,"data");o(this,"battleCtrl");o(this,"initialDungeonCoin");o(this,"powerupList",[]);o(this,"skillSlotNum");o(this,"eqWeaponSlotNum");o(this,"eqArmorSlotNum");o(this,"eqJewelrySlotNum");o(this,"utilitySlotNum");o(this,"damageMultiplier");o(this,"damageCutMultiplier");o(this,"sdChallengeBossDamageMultiplier");o(this,"sdChallengeBossDamageCutMultiplier");o(this,"armoredFury");o(this,"wardedFury");o(this,"healPercentEveryFloor");o(this,"mpChargePercentEveryFloor");o(this,"dodgeTimesecLeft");o(this,"dodgeHealPercent");o(this,"dodgeTimeRestoreSecEveryFloor");this.battleCtrl=t,this.data=t.data,this.initialDungeonCoin=new $,this.skillSlotNum=new $(new u(n.Base,s.Add,()=>1)),this.eqWeaponSlotNum=new $(new u(n.Base,s.Add,()=>0)),this.eqArmorSlotNum=new $(new u(n.Base,s.Add,()=>0)),this.eqJewelrySlotNum=new $(new u(n.Base,s.Add,()=>0)),this.utilitySlotNum=new $(new u(n.Base,s.Add,()=>0)),this.damageMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.damageCutMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.sdChallengeBossDamageMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.sdChallengeBossDamageCutMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.armoredFury=new $,this.wardedFury=new $,this.armoredFury.name="SD Armored Fury",this.wardedFury.name="SD Warded Fury",this.damageMultiplier.name="SD Damage Multiplier",this.damageCutMultiplier.name="SD Damage Cut Multiplier",this.sdChallengeBossDamageMultiplier.name="SD Challange Boss Damage Multiplier",this.sdChallengeBossDamageCutMultiplier.name="SD Challange Boss Damage Cut Multiplier",this.healPercentEveryFloor=new $(new u(n.Base,s.Add,()=>0),()=>1,()=>0),this.mpChargePercentEveryFloor=new $(new u(n.Base,s.Add,()=>0),()=>1,()=>0),this.dodgeHealPercent=new $(new u(n.Base,s.Add,()=>0),()=>1,null),this.dodgeTimeRestoreSecEveryFloor=new $,this.SetPowerups()}get heroKind(){return this.battleCtrl.heroKind}get sdgCtrl(){return this.battleCtrl.data.sdg}Start(){this.damageMultiplier.RegisterMultiplier(new u(n.ArmoredFury,s.Mul,()=>this.armoredFury.Value()*Math.log2(Math.max(1,this.battleCtrl.data.stats.BasicStats(this.heroKind,d.DEF).After())))),this.damageMultiplier.RegisterMultiplier(new u(n.WardedFury,s.Mul,()=>this.wardedFury.Value()*Math.log2(Math.max(1,this.battleCtrl.data.stats.BasicStats(this.heroKind,d.MDEF).After()))));for(let t=0;t<this.powerupList.length;t++)this.powerupList[t].Start()}SetPowerups(){this.powerupList.push(new Q5(this)),this.powerupList.push(new nR(this)),this.powerupList.push(new U5(this)),this.powerupList.push(new $5(this)),this.powerupList.push(new aR(this)),this.powerupList.push(new O5(this)),this.powerupList.push(new z5(this)),this.powerupList.push(new X5(this)),this.powerupList.push(new rR(this)),this.powerupList.push(new sR(this)),this.powerupList.push(new Z5(this)),this.powerupList.push(new W5(this)),this.powerupList.push(new eR(this)),this.powerupList.push(new iR(this)),this.powerupList.push(new K5(this)),this.powerupList.push(new tR(this)),this.powerupList.push(new Y5(this)),this.powerupList.push(new lR(this)),this.powerupList.push(new j5(this)),this.powerupList.push(new J5(this)),this.powerupList.push(new N5(this))}Powerup(t){for(let i=0;i<this.powerupList.length;i++)if(this.powerupList[i].kind==t)return this.powerupList[i];return null}}class Fh{constructor(t,i){o(this,"data");o(this,"heroKind");o(this,"tempValue");o(this,"isSlayerOil");o(this,"calculatedDamage");o(this,"elementAbsorptionValue");o(this,"tempTotalDamagePerHitCount");o(this,"tempTotalDamage");o(this,"tempExtraAfterDamage");o(this,"totalDamage");o(this,"electricDamage",0);o(this,"slayerOilDamage",0);o(this,"poisonDamagePerSec");o(this,"isPilfered");o(this,"battleCtrl");o(this,"fieldDebuffElement");o(this,"fieldDebuffPhyCrit");o(this,"fieldDebuffMagCrit");o(this,"fieldCurseMoveSpeedMul");o(this,"fieldDebuffDebuffRes");o(this,"isHero",!1);this.data=t,this.heroKind=i.heroKind,this.battleCtrl=i,this.fieldDebuffElement=Array(5).fill(0),this.fieldDebuffPhyCrit=0,this.fieldDebuffMagCrit=0,this.fieldCurseMoveSpeedMul=0,this.fieldDebuffDebuffRes=0}get level(){return this.data.source.enemyLevel}get species(){return this.data.source.enemySpecies}get color(){return this.species==se.Mimic?At.Normal:this.data.source.enemyColor}DebuffFactor(t){return 1}DamageFactorElement(t){switch(t){case F.Physical:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[F.Physical].Value();case F.Fire:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[F.Fire].Value();case F.Ice:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[F.Ice].Value();case F.Thunder:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[F.Thunder].Value();case F.Light:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[F.Light].Value();case F.Dark:return this.battleCtrl.data.stats.heroes[this.heroKind].elementDamages[F.Dark].Value();default:return 1}}get atk(){return 0}get matk(){return 0}get isPet(){return!1}get def(){return 0}get mdef(){return 0}get spd(){return 0}get fire(){return 0}get ice(){return 0}get thunder(){return 0}get light(){return 0}get dark(){return 0}get extraAfterDamage(){return 0}get critDamage(){return 0}get damageFactor(){return 1}DamageCutRate(t,i){let r=1,h=0;switch(i){case F.Physical:h=this.def/(t+this.def);break;case F.Fire:r*=1-Math.min(.9,this.fire),h=this.mdef/(t+this.mdef);break;case F.Ice:r*=1-Math.min(.9,this.ice),h=this.mdef/(t+this.mdef);break;case F.Thunder:r*=1-Math.min(.9,this.thunder),h=this.mdef/(t+this.mdef);break;case F.Light:r*=1-Math.min(.9,this.light),h=this.mdef/(t+this.mdef);break;case F.Dark:r*=1-Math.min(.9,this.dark),h=this.mdef/(t+this.mdef);break}return r*(1-Math.min(.9999,this.DamageCutModifier(h)))}DamageModifier(t){return this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageMultiplier.Value():t}DamageCutModifier(t){return this.isHero&&this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageCutMultiplier.Value():t}CalculateDamage(t,i,r,h){return this.tempValue=t,this.tempValue*=this.DamageCutRate(t,r),this.tempValue<0?0:(this.tempValue*=this.damageFactor,this.tempValue*=this.DamageFactorElement(r),this.tempValue=Math.max(1,this.tempValue),h&&(this.tempValue*=i),this.tempValue)}Attacked(t,i,r,h,c){return this.isSlayerOil=!this.isHero&&this.battleCtrl.CurrentSlayerElement()!=0,this.isSlayerOil&&(c=this.battleCtrl.CurrentSlayerElement()),this.calculatedDamage=this.CalculateDamage(i,t.critDamage,c,h),this.tempTotalDamagePerHitCount=this.DamageModifier(this.calculatedDamage),this.tempTotalDamage=this.tempTotalDamagePerHitCount*r,this.slayerOilDamage=this.isSlayerOil?this.tempTotalDamage*this.battleCtrl.data.stats.ElementSlayerDamage(this.battleCtrl.heroKind,c).Value():0,this.totalDamage=this.tempTotalDamage+this.electricDamage+this.slayerOilDamage,this.tempExtraAfterDamage=this.totalDamage*t.extraAfterDamage,this.totalDamage+=this.tempExtraAfterDamage,this.totalDamage}AttackedInfo(){const t=this.data.battle.hero,i=this.data.skill.Skill(0,this.data.source.currentHero),r=i.DamageOrigin(t,!1),h=!0,c=this.data.source.currentHero==R.Angel?i.HitCount()/5:i.HitCount();let m=i.element;const w=!this.isHero&&this.battleCtrl.CurrentSlayerElement()!=0;w&&(m=this.battleCtrl.CurrentSlayerElement());let k={DamagePerHit:this.DamageModifier(this.CalculateDamage(r,t.critDamage,m,h)),tempTotalDamage:0,slayerOilDamage:0,electricDamage:0,totalBeforeExtraAfter:0,extraAfterDamagePerHit:0,extraAfterDamage:0,totalDamage:0,skill:i,hero:t,damage:r,element:m,SlayerOilValue:this.data.stats.ElementSlayerDamage(this.battleCtrl.heroKind,m).Value(),castTime:i.CalculateInterval(t),dps:0,realHitCount:c};return k.tempTotalDamage=k.DamagePerHit*c,k.slayerOilDamage=w?k.tempTotalDamage*k.SlayerOilValue:0,k.totalBeforeExtraAfter=k.tempTotalDamage+k.electricDamage+k.slayerOilDamage,k.extraAfterDamagePerHit=k.DamagePerHit*t.extraAfterDamage,k.extraAfterDamage=k.totalBeforeExtraAfter*t.extraAfterDamage,k.totalDamage=k.tempTotalDamage+k.electricDamage+k.slayerOilDamage+k.extraAfterDamage,k.dps=k.totalDamage/k.castTime,k}}class _h extends Fh{constructor(i,r){super(i,r);o(this,"difficulty",0)}get isPet(){return!1}get globalInformation(){return this.battleCtrl.data.monster.GlobalInformation(this.species,this.color)}get attackElement(){return this.globalInformation.AttackElement()}get hp(){return this.globalInformation.Hp(this.level,this.difficulty)}get mp(){return this.globalInformation.Mp(this.level,this.difficulty)}get atk(){return this.DebuffFactor(at.AtkDown)*this.globalInformation.Atk(this.level,this.difficulty)}get matk(){return this.DebuffFactor(at.MatkDown)*this.globalInformation.MAtk(this.level,this.difficulty)}get def(){return this.DebuffFactor(at.DefDown)*this.globalInformation.Def(this.level,this.difficulty)}get mdef(){return this.DebuffFactor(at.MdefDown)*this.globalInformation.MDef(this.level,this.difficulty)}get spd(){return this.DebuffFactor(at.SpdDown)*this.DebuffFactor(at.Stop)*this.globalInformation.Spd()}get fire(){return this.globalInformation.Fire()}get ice(){return this.globalInformation.Ice()}get thunder(){return this.globalInformation.Thunder()}get light(){return this.globalInformation.Light()}get dark(){return this.globalInformation.Dark()}get phyCrit(){return this.globalInformation.PhyCrit(this.level)}get magCrit(){return this.globalInformation.MagCrit(this.level)}get critDamage(){return this.globalInformation.CriticalDamage()}get debuffResistance(){return this.globalInformation.DebuffResistance()}get damageFactor(){return this.battleCtrl.data.stats.MonsterDamage(this.battleCtrl.heroKind,this.species).isLog=this.battleCtrl.data.source.isSuperDungeon,this.battleCtrl.data.stats.MonsterDamage(this.battleCtrl.heroKind,this.species).Value()}DamageFactorElement(i){return this.battleCtrl.data.stats.ElementDamage(this.battleCtrl.heroKind,i).isLog=this.battleCtrl.data.source.isSuperDungeon,this.battleCtrl.data.stats.ElementDamage(this.battleCtrl.heroKind,i).Value()}get exp(){return this.globalInformation.Exp(this.level,this.difficulty)}get resource(){return 1}CalculatedExp(i){let r=this.exp,h=this.level-i,c=h>=-60?h>=-40?h>=-20?h>20?h>40?h>60?h>80?h>100?h>150?h>200?h>300?r*.01:r*.1:r*.25:r*.5:r*.75:r*1:r*1.15:r*1.3:r*1.5:r*1.3:r*1.15:r*1;return this.color==At.Metal&&(c*=1+this.battleCtrl.data.quest.TitleEffectValue(this.battleCtrl.heroKind,q.MetalHunter).sub),c}get gainFactor(){return this.battleCtrl.data.guild.Member(this.battleCtrl.heroKind).gainRate}Damage(){return this.globalInformation.Damage(this.level,this.difficulty)}}class hR extends _h{constructor(t,i){super(t,i)}get species(){return se.ChallengeBoss}get globalInformation(){return this.battleCtrl.data.monster.GlobalInformationChallengeBoss(this.challengeMonsterKind)}get challengeMonsterKind(){return this.battleCtrl.data.source.enemyChallenge}get hp(){let t=this.globalInformation.Hp(this.level,this.difficulty),i=this.level;switch(this.challengeMonsterKind){case Dt.Florzporb:return t*Math.max(1,Math.pow(5,Math.max(0,i-300)/100))*Math.max(1,Math.pow(5,Math.max(0,i-400)/100));case Dt.GuardianKor:return t*Math.max(1,Math.pow(10,Math.max(0,i-400)/100))*Math.max(1,Math.pow(5,Math.max(0,i-500)/100));case Dt.Arachnetta:return t*Math.max(1,Math.pow(5,Math.max(0,i-350)/100))*Math.max(1,Math.pow(5,Math.max(0,i-450)/100));case Dt.Nostro:return t*Math.max(1,Math.pow(10,Math.max(0,i-450)/100))*Math.max(1,Math.pow(5,Math.max(0,i-550)/100));case Dt.LadyEmelda:return t*Math.pow(2,Math.max(1,i-300)/100)*Math.max(1,Math.pow(25,Math.max(0,i-600)/100));case Dt.NariSune:return t*Math.max(1,Math.pow(5,Math.max(0,i-350)/100))*Math.max(1,Math.pow(10,Math.max(0,i-650)/100));case Dt.Octobaddie:return t*Math.max(1,Math.pow(1e6,Math.max(0,i-400)/100))*Math.max(1,Math.pow(10,Math.max(0,i-700)/100));default:return t}}DamageModifier(t){return this.battleCtrl.data.source.isSuperDungeon?t*this.battleCtrl.superDungeonCtrl.damageMultiplier.Value()*this.battleCtrl.superDungeonCtrl.sdChallengeBossDamageMultiplier.Value():t}}class cR extends Fh{constructor(i,r,h){super(i,h);o(this,"isAutoMove",!0);o(this,"initUIAction");o(this,"tempSkillId");o(this,"tempSkill");o(this,"isHero",!0);this.battleCtrl=h,this.heroKind=r}get level(){return this.battleCtrl.data.source.heroLevel[this.heroKind]}StatsModifier(i){return this.battleCtrl.isSuperDungeon?Math.log10(Math.max(1,i)):i}Start(){}get hp(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,d.HP).Value()}get mp(){return Math.max(0,this.battleCtrl.data.stats.BasicStats(this.heroKind,d.MP).Value()-this.battleCtrl.data.stats.heroes[this.heroKind].channeledMp.Value())}get atk(){return this.battleCtrl.data.source.isSuperDungeon&&this.battleCtrl.data.source.isActiveSdModifiers[950+bt.SwapATKWithDEF]?this.battleCtrl.data.stats.BasicStats(this.heroKind,d.DEF).Value():this.battleCtrl.data.stats.BasicStats(this.heroKind,d.ATK).Value()}get matk(){return this.battleCtrl.data.source.isSuperDungeon&&this.battleCtrl.data.source.isActiveSdModifiers[950+bt.SwapATKWithDEF]?this.battleCtrl.data.stats.BasicStats(this.heroKind,d.MDEF).Value():this.battleCtrl.data.stats.BasicStats(this.heroKind,d.MATK).Value()}get def(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,d.DEF).Value()}get mdef(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,d.MDEF).Value()}get spd(){return this.battleCtrl.data.stats.BasicStats(this.heroKind,d.SPD).Value()}get fire(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,F.Fire).Value()+this.fieldDebuffElement[1]*this.battleCtrl.areaBattle.areaDebuffFactor}get ice(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,F.Ice).Value()+this.fieldDebuffElement[2]*this.battleCtrl.areaBattle.areaDebuffFactor}get thunder(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,F.Thunder).Value()+this.fieldDebuffElement[3]*this.battleCtrl.areaBattle.areaDebuffFactor}get light(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,F.Light).Value()+this.fieldDebuffElement[4]*this.battleCtrl.areaBattle.areaDebuffFactor}get dark(){return this.battleCtrl.data.stats.ElementResistance(this.heroKind,F.Dark).Value()+this.fieldDebuffElement[5]*this.battleCtrl.areaBattle.areaDebuffFactor}get phyCrit(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,v.PhysCritChance).Value()+this.fieldDebuffPhyCrit*this.battleCtrl.areaBattle.areaDebuffFactor}get magCrit(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,v.MagCritChance).Value()+this.fieldDebuffMagCrit*this.battleCtrl.areaBattle.areaDebuffFactor}get critDamage(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,v.CriticalDamage).Value()}get moveSpeed(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,v.MoveSpeed).Value()*this.fieldCurseMoveSpeedMul}get extraAfterDamage(){return this.battleCtrl.data.stats.Hero(this.heroKind).extraAfterDamage.Value()}get debuffResistance(){return this.battleCtrl.data.stats.HeroStats(this.heroKind,v.DebuffRes).Value()+this.fieldDebuffDebuffRes*this.battleCtrl.areaBattle.areaDebuffFactor}get physicalAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,F.Physical).Value()}get fireAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,F.Fire).Value()}get iceAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,F.Ice).Value()}get thunderAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,F.Thunder).Value()}get lightAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,F.Light).Value()}get darkAbsorption(){return this.battleCtrl.data.stats.ElementAbsorption(this.heroKind,F.Dark).Value()}get physicalInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,F.Physical).Value()}get fireInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,F.Fire).Value()}get iceInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,F.Ice).Value()}get thunderInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,F.Thunder).Value()}get lightInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,F.Light).Value()}get darkInvalidChance(){return this.battleCtrl.data.stats.ElementInvalid(this.heroKind,F.Dark).Value()}get guardianKorInvalidChanceDamageHpPercent(){return Math.min(.25,this.battleCtrl.data.stats.heroes[this.heroKind].guardianKorInvalidDamageHpPercent.Value())}}const Vs={maxSkillKindNum:30,skillFactors:[[[1,.02,1,.025,0,0,1.5,0,80,50,0,50,0,0,0,1,0,1],[2,.05,1,.05,0,0,1.25,0,80,50,0,50,0,0,0,1,0,1],[6.5,.125,0,0,10,1,1.25,1,80,50,0,50,0,0,0,2,0,2],[35,.1,0,0,25,2.5,1,2,80,120,0,120,0,0,0,4,.04,8],[550,1.5,10,.05,100,5,2.75,2,120,80,0,80,.5,1/400,.9,1,0,1],[500,.75,0,0,240,5,3,3,150,150,0,300,0,0,0,1,0,1],[2e3,4.5,0,0,500,7.5,4,4,120,80,0,80,.5,1/400,.9,1,0,1],[600,1,0,0,600,10,2,5,300,300,2,500,0,0,0,2,.02,4],[20,.05,10,.05,0,0,1.5,1,500,50,0,50,0,0,0,1,0,1],[60,.2,30,.25,20,1,1.5,2,80,80,0,80,.9,1e-4,.95,1,0,1]],[[1,.02,1,.025,0,0,1.5,0,100,50,0,50,0,0,0,1,0,1],[4,.1,3,.05,0,0,2,0,120,80,0,80,0,0,0,1,0,1],[6,.1,0,0,30,2,2.5,1,120,120,0,200,0,0,0,1,.01,3],[900,.75,0,0,360,10,3,3,200,150,1,300,0,0,0,1,.01,3],[30,.125,10,.1,0,0,1.5,2,150,80,0,80,.1,1/400,.9,1,0,1],[70,.2,10,.1,20,1,1.5,2,100,50,0,50,.1,.001,.5,1,0,1],[1e3,1,0,0,500,12.5,2.5,4,1e3,250,0,500,.25,1/400,1,1,0,1],[10,.025,25,.5,0,0,1,1,200,50,0,50,.2,.002,.5,1,0,1],[30,.05,10,1,30,2,1,2,200,50,0,50,.5,.002,1,2,0,2],[2e3,1.5,0,0,1250,50,3.5,5,200,100,0,100,.5,.001,1,1,.02,4]],[[2,.005,1,.025,0,0,.75,0,150,50,0,50,0,0,0,1,.02,5],[2,.005,1,.025,0,0,.75,0,150,50,0,50,0,0,0,1,.02,5],[15,.075,0,0,30,1.5,3.5,1,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,2.5,1,1,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,10,1,2,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,10,10,1,2,1e3,0,0,0,0,0,0,1,0,1],[.25,5e-4,0,0,20,20,1,3,1e3,0,0,0,0,0,0,1,0,1],[.25,1e-4,0,0,250,25,1,4,1e3,0,0,0,0,0,0,1,0,1],[250,.2,0,0,240,2,2.5,2,200,200,0,400,.8,.001,.95,1,.02,5],[10,.01,0,0,500,50,1,5,1e3,0,0,0,0,0,0,1,0,1]],[[1,.01,1,.025,0,0,1,0,80,50,0,50,0,0,0,1,0,1],[2,3/400,2,.05,0,0,.75,0,80,50,0,50,.05,1/400,.9,1,.02,3],[35,.125,0,0,25,1.5,1,2,200,50,0,50,0,0,0,2,.01,4],[100,.2,0,0,35,2,1.25,2,80,50,0,50,0,0,0,1,0,1],[150,.25,0,0,250,3.75,2,4,200,50,0,50,0,0,0,2,.02,4],[4,.05,0,0,20,2,2,1,80,120,0,120,.5,.005,.9,1,0,1],[20,.1,5,.1,30,2,1.25,1,500,50,0,50,.2,1/400,.9,1,.02,4],[10,.1,0,0,10,.5,2.5,2,80,50,0,50,0,0,0,1,0,1],[300,.25,0,0,150,3,2,3,150,150,0,300,.25,1/400,.9,1,0,1],[2500,2.5,0,0,400,5,2.75,5,80,50,0,50,.05,5e-5,.2,1,0,1]],[[1,.02,1,.025,0,0,1.5,0,300,80,0,80,0,0,0,1,0,1],[2,.015,2,.05,0,0,1.25,0,300,100,0,100,0,0,0,1,.02,5],[45,.05,0,0,35,2.5,1.5,2,300,100,0,100,0,0,0,5,.02,10],[1250,2.5,0,0,500,10,2,5,500,100,0,100,0,0,0,1,0,1],[6,.05,0,0,20,2,1.75,1,300,100,.5,250,.25,1/400,.9,1,.01,3],[20,.1,5,.1,10,1,1,1,500,150,0,150,.25,1/400,.9,1,0,1],[85,.25,0,0,50,4,2.25,2,300,100,.5,250,.25,1/400,.9,1,.01,3],[80,.15,0,0,200,5,3,3,500,100,0,100,.25,1/400,.9,8,0,8],[40,.1,0,0,400,30,5,4,500,500,0,500,.25,1/400,.9,4,.02,8],[-.35,1e-5,0,0,200,20,1,2,1e3,0,0,0,0,0,0,1,0,1]],[[1,.01,1,1,0,0,1,0,300,50,0,50,0,0,0,1,0,1],[2,.015,2,.05,0,0,1,0,1e3,0,0,0,0,0,0,1,0,1],[40,.2,30,.25,20,2,1.5,2,1e3,0,0,0,0,0,0,1,0,1],[150,1,0,0,200,5,2,3,1e3,0,0,0,0,0,0,1,0,1],[20,.1,0,0,30,2.5,3.5,1,1e3,0,0,0,0,0,0,1,0,1],[.25,.001,0,0,250,25,5,2,1e3,0,0,0,0,0,0,1,0,1],[1,.01,0,0,250,25,1,2,1e3,0,0,0,0,0,0,1,0,1],[1.5,25e-5,0,0,500,50,1,4,1e3,0,0,0,0,0,0,1,0,1],[.1,25e-5,0,0,10,10,1,1,1e3,0,0,0,0,0,0,1,0,1],[200,2,0,0,500,5,5,5,300,50,0,50,0,0,0,1,0,1]]]};class oR{constructor(t){o(this,"data");o(this,"battleCtrl");o(this,"currentHero");o(this,"currentSkillSet",Array(8));o(this,"currentGlobalSkillSet",Array(8));o(this,"currentRealEquippingNum");o(this,"currentRealGlobalEquippingNum");this.battleCtrl=t,this.data=this.battleCtrl.data,this.currentHero=t.heroKind}get isEquippedSkillArray(){return[[this.data.source.isEquippedWarriorSkillForWarrior,this.data.source.isEquippedWizardSkillForWarrior,this.data.source.isEquippedAngelSkillForWarrior,this.data.source.isEquippedThiefSkillForWarrior,this.data.source.isEquippedArcherSkillForWarrior,this.data.source.isEquippedTamerSkillForWarrior],[this.data.source.isEquippedWarriorSkillForWizard,this.data.source.isEquippedWizardSkillForWizard,this.data.source.isEquippedAngelSkillForWizard,this.data.source.isEquippedThiefSkillForWizard,this.data.source.isEquippedArcherSkillForWizard,this.data.source.isEquippedTamerSkillForWizard],[this.data.source.isEquippedWarriorSkillForAngel,this.data.source.isEquippedWizardSkillForAngel,this.data.source.isEquippedAngelSkillForAngel,this.data.source.isEquippedThiefSkillForAngel,this.data.source.isEquippedArcherSkillForAngel,this.data.source.isEquippedTamerSkillForAngel],[this.data.source.isEquippedWarriorSkillForThief,this.data.source.isEquippedWizardSkillForThief,this.data.source.isEquippedAngelSkillForThief,this.data.source.isEquippedThiefSkillForThief,this.data.source.isEquippedArcherSkillForThief,this.data.source.isEquippedTamerSkillForThief],[this.data.source.isEquippedWarriorSkillForArcher,this.data.source.isEquippedWizardSkillForArcher,this.data.source.isEquippedAngelSkillForArcher,this.data.source.isEquippedThiefSkillForArcher,this.data.source.isEquippedArcherSkillForArcher,this.data.source.isEquippedTamerSkillForArcher],[this.data.source.isEquippedWarriorSkillForTamer,this.data.source.isEquippedWizardSkillForTamer,this.data.source.isEquippedAngelSkillForTamer,this.data.source.isEquippedThiefSkillForTamer,this.data.source.isEquippedArcherSkillForTamer,this.data.source.isEquippedTamerSkillForTamer]]}get maxSkillSlotNum(){return this.data.stats.SkillSlotNum(this.currentHero)}get maxGlobalSkillSlotNum(){return this.data.stats.globalSkillSlotNum}get skillSlotNum(){return this.data.source.persistentSkillSlotNum[this.currentHero]>0?Math.max(this.data.source.persistentSkillSlotNum[this.currentHero],this.maxSkillSlotNum.Value()):this.maxSkillSlotNum.Value()}get globalSkillSlotNum(){return this.data.source.persistentGlobalSkillSlotNum>0?Math.max(this.data.source.persistentGlobalSkillSlotNum,this.maxGlobalSkillSlotNum.Value()):this.maxGlobalSkillSlotNum.Value()}Initialize(){this.UpdateCurrentSkillSet()}get currentEquippingNum(){return Math.min(this.currentRealEquippingNum,this.battleCtrl.limitedSkillNum)}get currentGlobalEquippingNum(){return Math.min(this.currentRealGlobalEquippingNum,this.battleCtrl.limitedGlobalSkillNum)}UpdateCurrentSkillSet(){let t=0,i=0;for(let r=0;r<W.HeroKind;r++)for(let h=0;h<10;h++){const c=this.data.skill.Skill(r,h);this.IsEquipped(c)&&(r==this.currentHero?(this.currentSkillSet[t]=c,t++):(this.currentGlobalSkillSet[i]=c,i++))}this.currentRealEquippingNum=t,this.currentRealGlobalEquippingNum=i}InitializeClassSkillOrder(){for(let t=0;t<this.classSkillOrder.length;t++)this.classSkillOrder[t]=t}InitializeGlobalSkillOrder(){for(let t=0;t<this.globalSkillOrder.length;t++)this.globalSkillOrder[t]=t}IsEquipped(t){return t.id>=0&&this.isEquippedSkillArray[this.currentHero][t.heroKind][this.IsEquippedSaveId(t.id)]}Equip(t){this.CanEquip(t)&&(this.isEquippedSkillArray[this.currentHero][t.heroKind][this.IsEquippedSaveId(t.id)]=!0),this.CheckMaxNum(),this.UpdateCurrentSkillSet()}Remove(t){this.CanRemove(t)&&(this.isEquippedSkillArray[this.currentHero][t.heroKind][this.IsEquippedSaveId(t.id)]=!1),this.UpdateCurrentSkillSet()}CanEquip(t){return this.IsEquipped(t)||!t.CanEquip()?!1:t.heroKind==this.currentHero?this.currentRealEquippingNum<this.skillSlotNum:this.currentRealGlobalEquippingNum<this.globalSkillSlotNum}CanRemove(t){return t.heroKind!=this.currentHero||t.id>0}CheckInitialized(){this.currentEquippingNum>0||(this.isEquippedSkillArray[this.currentHero][this.currentHero][this.IsEquippedSaveId(0)]=!0)}CheckMaxNum(){if(this.currentEquippingNum>this.skillSlotNum)for(let t=0;t<Vs.maxSkillKindNum;t++)this.isEquippedSkillArray[this.currentHero][this.currentHero][this.IsEquippedSaveId(t)]=!1;if(this.currentGlobalEquippingNum>this.globalSkillSlotNum){for(let t=0;t<W.HeroKind;t++)if(t!=this.currentHero)for(let i=0;i<Vs.maxSkillKindNum;i++)this.isEquippedSkillArray[this.currentHero][t][this.IsEquippedSaveId(i)]=!1}this.CheckInitialized()}IsEquippedAnySkill(){return this.currentEquippingNum>1||this.currentGlobalEquippingNum>0}IsEquippedSaveId(t){return t+Vs.maxSkillKindNum*this.data.source.skillLoadoutIds[this.currentHero]}get classSkillOrder(){switch(this.currentHero){case R.Warrior:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.classSkillOrdersWarrior0;case 1:return this.data.source.classSkillOrdersWarrior1;case 2:return this.data.source.classSkillOrdersWarrior2;case 3:return this.data.source.classSkillOrdersWarrior3;case 4:return this.data.source.classSkillOrdersWarrior4}break;case R.Wizard:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.classSkillOrdersWizard0;case 1:return this.data.source.classSkillOrdersWizard1;case 2:return this.data.source.classSkillOrdersWizard2;case 3:return this.data.source.classSkillOrdersWizard3;case 4:return this.data.source.classSkillOrdersWizard4}break;case R.Angel:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.classSkillOrdersAngel0;case 1:return this.data.source.classSkillOrdersAngel1;case 2:return this.data.source.classSkillOrdersAngel2;case 3:return this.data.source.classSkillOrdersAngel3;case 4:return this.data.source.classSkillOrdersAngel4}break;case R.Thief:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.classSkillOrdersThief0;case 1:return this.data.source.classSkillOrdersThief1;case 2:return this.data.source.classSkillOrdersThief2;case 3:return this.data.source.classSkillOrdersThief3;case 4:return this.data.source.classSkillOrdersThief4}break;case R.Archer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.classSkillOrdersArcher0;case 1:return this.data.source.classSkillOrdersArcher1;case 2:return this.data.source.classSkillOrdersArcher2;case 3:return this.data.source.classSkillOrdersArcher3;case 4:return this.data.source.classSkillOrdersArcher4}break;case R.Tamer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.classSkillOrdersTamer0;case 1:return this.data.source.classSkillOrdersTamer1;case 2:return this.data.source.classSkillOrdersTamer2;case 3:return this.data.source.classSkillOrdersTamer3;case 4:return this.data.source.classSkillOrdersTamer4}break}return null}set classSkillOrder(t){switch(this.currentHero){case R.Warrior:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.classSkillOrdersWarrior0=t;return;case 1:this.data.source.classSkillOrdersWarrior1=t;return;case 2:this.data.source.classSkillOrdersWarrior2=t;return;case 3:this.data.source.classSkillOrdersWarrior3=t;return;case 4:this.data.source.classSkillOrdersWarrior4=t;return;default:return}case R.Wizard:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.classSkillOrdersWizard0=t;return;case 1:this.data.source.classSkillOrdersWizard1=t;return;case 2:this.data.source.classSkillOrdersWizard2=t;return;case 3:this.data.source.classSkillOrdersWizard3=t;return;case 4:this.data.source.classSkillOrdersWizard4=t;return;default:return}case R.Angel:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.classSkillOrdersAngel0=t;return;case 1:this.data.source.classSkillOrdersAngel1=t;return;case 2:this.data.source.classSkillOrdersAngel2=t;return;case 3:this.data.source.classSkillOrdersAngel3=t;return;case 4:this.data.source.classSkillOrdersAngel4=t;return;default:return}case R.Thief:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.classSkillOrdersThief0=t;return;case 1:this.data.source.classSkillOrdersThief1=t;return;case 2:this.data.source.classSkillOrdersThief2=t;return;case 3:this.data.source.classSkillOrdersThief3=t;return;case 4:this.data.source.classSkillOrdersThief4=t;return;default:return}case R.Archer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.classSkillOrdersArcher0=t;return;case 1:this.data.source.classSkillOrdersArcher1=t;return;case 2:this.data.source.classSkillOrdersArcher2=t;return;case 3:this.data.source.classSkillOrdersArcher3=t;return;case 4:this.data.source.classSkillOrdersArcher4=t;return;default:return}case R.Tamer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.classSkillOrdersTamer0=t;return;case 1:this.data.source.classSkillOrdersTamer1=t;return;case 2:this.data.source.classSkillOrdersTamer2=t;return;case 3:this.data.source.classSkillOrdersTamer3=t;return;case 4:this.data.source.classSkillOrdersTamer4=t;return;default:return}}}get globalSkillOrder(){switch(this.currentHero){case R.Warrior:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.globalSkillOrdersWarrior0;case 1:return this.data.source.globalSkillOrdersWarrior1;case 2:return this.data.source.globalSkillOrdersWarrior2;case 3:return this.data.source.globalSkillOrdersWarrior3;case 4:return this.data.source.globalSkillOrdersWarrior4}break;case R.Wizard:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.globalSkillOrdersWizard0;case 1:return this.data.source.globalSkillOrdersWizard1;case 2:return this.data.source.globalSkillOrdersWizard2;case 3:return this.data.source.globalSkillOrdersWizard3;case 4:return this.data.source.globalSkillOrdersWizard4}break;case R.Angel:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.globalSkillOrdersAngel0;case 1:return this.data.source.globalSkillOrdersAngel1;case 2:return this.data.source.globalSkillOrdersAngel2;case 3:return this.data.source.globalSkillOrdersAngel3;case 4:return this.data.source.globalSkillOrdersAngel4}break;case R.Thief:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.globalSkillOrdersThief0;case 1:return this.data.source.globalSkillOrdersThief1;case 2:return this.data.source.globalSkillOrdersThief2;case 3:return this.data.source.globalSkillOrdersThief3;case 4:return this.data.source.globalSkillOrdersThief4}break;case R.Archer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.globalSkillOrdersArcher0;case 1:return this.data.source.globalSkillOrdersArcher1;case 2:return this.data.source.globalSkillOrdersArcher2;case 3:return this.data.source.globalSkillOrdersArcher3;case 4:return this.data.source.globalSkillOrdersArcher4}break;case R.Tamer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:return this.data.source.globalSkillOrdersTamer0;case 1:return this.data.source.globalSkillOrdersTamer1;case 2:return this.data.source.globalSkillOrdersTamer2;case 3:return this.data.source.globalSkillOrdersTamer3;case 4:return this.data.source.globalSkillOrdersTamer4}break}return null}set globalSkillOrder(t){switch(this.currentHero){case R.Warrior:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.globalSkillOrdersWarrior0=t;return;case 1:this.data.source.globalSkillOrdersWarrior1=t;return;case 2:this.data.source.globalSkillOrdersWarrior2=t;return;case 3:this.data.source.globalSkillOrdersWarrior3=t;return;case 4:this.data.source.globalSkillOrdersWarrior4=t;return;default:return}case R.Wizard:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.globalSkillOrdersWizard0=t;return;case 1:this.data.source.globalSkillOrdersWizard1=t;return;case 2:this.data.source.globalSkillOrdersWizard2=t;return;case 3:this.data.source.globalSkillOrdersWizard3=t;return;case 4:this.data.source.globalSkillOrdersWizard4=t;return;default:return}case R.Angel:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.globalSkillOrdersAngel0=t;return;case 1:this.data.source.globalSkillOrdersAngel1=t;return;case 2:this.data.source.globalSkillOrdersAngel2=t;return;case 3:this.data.source.globalSkillOrdersAngel3=t;return;case 4:this.data.source.globalSkillOrdersAngel4=t;return;default:return}case R.Thief:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.globalSkillOrdersThief0=t;return;case 1:this.data.source.globalSkillOrdersThief1=t;return;case 2:this.data.source.globalSkillOrdersThief2=t;return;case 3:this.data.source.globalSkillOrdersThief3=t;return;case 4:this.data.source.globalSkillOrdersThief4=t;return;default:return}case R.Archer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.globalSkillOrdersArcher0=t;return;case 1:this.data.source.globalSkillOrdersArcher1=t;return;case 2:this.data.source.globalSkillOrdersArcher2=t;return;case 3:this.data.source.globalSkillOrdersArcher3=t;return;case 4:this.data.source.globalSkillOrdersArcher4=t;return;default:return}case R.Tamer:switch(this.data.source.skillLoadoutIds[this.currentHero]){case 0:this.data.source.globalSkillOrdersTamer0=t;return;case 1:this.data.source.globalSkillOrdersTamer1=t;return;case 2:this.data.source.globalSkillOrdersTamer2=t;return;case 3:this.data.source.globalSkillOrdersTamer3=t;return;case 4:this.data.source.globalSkillOrdersTamer4=t;return;default:return}}}}class fR{constructor(t,i){o(this,"data");o(this,"heroKind");o(this,"hero");o(this,"monster");o(this,"challengeMonster");o(this,"areaBattle",{areaDebuffFactor:1});o(this,"skillSet");o(this,"superDungeonCtrl");o(this,"isSuperDungeon",!0);this.data=t,this.heroKind=i,this.superDungeonCtrl=new uR(this),this.monster=new _h(t,this),this.challengeMonster=new hR(t,this),this.hero=new cR(t,this.heroKind,this)}Start(){this.skillSet=new oR(this),this.superDungeonCtrl.Start()}CurrentSlayerElement(){for(let t=0;t<W.Element;++t){let i=t;if(this.data.stats.ElementSlayerDamage(this.heroKind,i).Value()>0)return i}return F.Physical}Enemy(){return this.data.source.enemySpecies==se.ChallengeBoss?this.challengeMonster:this.monster}get limitedSkillNum(){return 8}get limitedGlobalSkillNum(){return 8}}var ns=(e=>(e[e.Hp=0]="Hp",e[e.Atk=1]="Atk",e[e.MAtk=2]="MAtk",e[e.MoveSpeed=3]="MoveSpeed",e[e.SkillProficiency=4]="SkillProficiency",e[e.EquipProficiency=5]="EquipProficiency",e[e.GoldGain=6]="GoldGain",e[e.ExpGain=7]="ExpGain",e))(ns||{});class pR{constructor(t,i,r){o(this,"data");o(this,"heroKind");o(this,"kind");this.data=t,this.heroKind=i,this.kind=r}get effectValue(){switch(this.kind){case ns.Atk:case ns.Hp:case ns.MAtk:case ns.ExpGain:case ns.EquipProficiency:case ns.SkillProficiency:return .5*this.data.blessingInfo.effectMultipliers[this.heroKind].Value();case ns.MoveSpeed:return Math.min(1,.25*this.data.blessingInfo.effectMultipliers[this.heroKind].Value())}}Start(){this.SetEffect()}SetEffect(){switch(this.kind){case ns.Atk:this.data.stats.BasicStats(this.heroKind,d.ATK).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.EquipProficiency:this.data.stats.HeroStats(this.heroKind,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.ExpGain:this.data.stats.HeroStats(this.heroKind,v.ExpGain).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.EquipProficiency:this.data.stats.GoldGain().RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.Hp:this.data.stats.BasicStats(this.heroKind,d.HP).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.MAtk:this.data.stats.BasicStats(this.heroKind,d.MATK).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.MoveSpeed:this.data.stats.HeroStats(this.heroKind,v.MoveSpeed).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break;case ns.SkillProficiency:this.data.stats.HeroStats(this.heroKind,v.SkillProficiencyGain).RegisterMultiplier(new u(n.Blessing,s.Mul,()=>this.effectValue,()=>this.data.source.isBlessing));break}}}class dR{constructor(t){o(this,"data");o(this,"effectMultipliers",Array(W.HeroKind));o(this,"duration");o(this,"heroes",Array(W.HeroKind));this.data=t,this.duration=new $(new u(n.Base,s.Add,()=>180));for(let i=0;i<this.effectMultipliers.length;i++)this.effectMultipliers[i]=new $(new u(n.Base,s.Add,()=>1)),this.effectMultipliers[i].name="Blessing Effect";for(let i=0;i<this.heroes.length;i++){this.heroes[i]=[];for(let r=0;r<8;r++)this.heroes[i].push(new pR(this.data,i,r))}}SetEffectMultiplier(t){for(let i=0;i<this.effectMultipliers.length;i++)this.effectMultipliers[i].RegisterMultiplier(t)}Start(){for(let t=0;t<this.heroes.length;t++)for(let i=0;i<8;i++)this.heroes[t][i].Start()}}var Ih=(e=>(e[e.RaidBossBattle=0]="RaidBossBattle",e[e.SingleBossBattle=1]="SingleBossBattle",e[e.HandicappedBattle=2]="HandicappedBattle",e[e.SuperDungeon=3]="SuperDungeon",e))(Ih||{});class Zl{constructor(t){o(this,"data");o(this,"type",Ih.RaidBossBattle);this.data=t}get kind(){return je.HCArachnetta150}get statRewardMultiplier(){return this.data.challenge.sdStatRewardMultiplier.Value()}Start(){this.SetReward()}NameString(){const t=je[this.kind],i=t.replace(/(?:HC|Solo)(.*?)(\d+)/,"$2");return`${t.replace(/(?:HC|Solo)(.*?)(\d+)/,"$1")} ${i}`}ClassExclusiveRewardStringEquipmentSlot(t){let i=[];for(let r=0;r<W.HeroKind;r++)i.push(`${R[r]}'s Equipment ${V[t]} Slot + 1`);return i}EffectValueString(t){}ClassExclusiveRewardString(){return[]}IsCleared(t){return this.data.source.isClearedChallenge[t+10*this.kind]}IsClearedOnce(){for(let t=0;t<W.HeroKind;t++)if(this.IsCleared(t))return!0;return!1}IsClearedCompleted(){for(let t=0;t<W.HeroKind;t++)if(!this.IsCleared(t))return!1;return!0}get isReceivedRewardOnce(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=this.kind*10]??(t[i]=!1)}set isReceivedRewardOnce(t){this.data.source.isReceivedRewardsChallenge[this.kind*10]=t}get isReceivedRewardWarrior(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=1+this.kind*10]??(t[i]=!1)}set isReceivedRewardWarrior(t){this.data.source.isReceivedRewardsChallenge[1+this.kind*10]=t}get isReceivedRewardWizard(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=2+this.kind*10]??(t[i]=!1)}set isReceivedRewardWizard(t){this.data.source.isReceivedRewardsChallenge[2+this.kind*10]=t}get isReceivedRewardAngel(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=3+this.kind*10]??(t[i]=!1)}set isReceivedRewardAngel(t){this.data.source.isReceivedRewardsChallenge[3+this.kind*10]=t}get isReceivedRewardThief(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=4+this.kind*10]??(t[i]=!1)}set isReceivedRewardThief(t){this.data.source.isReceivedRewardsChallenge[4+this.kind*10]=t}get isReceivedRewardArcher(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=5+this.kind*10]??(t[i]=!1)}set isReceivedRewardArcher(t){this.data.source.isReceivedRewardsChallenge[5+this.kind*10]=t}get isReceivedRewardTamer(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=6+this.kind*10]??(t[i]=!1)}set isReceivedRewardTamer(t){this.data.source.isReceivedRewardsChallenge[6+this.kind*10]=t}get isReceivedRewardComplete(){var t,i;return(t=this.data.source.isReceivedRewardsChallenge)[i=7+this.kind*10]??(t[i]=!1)}set isReceivedRewardComplete(t){this.data.source.isReceivedRewardsChallenge[7+this.kind*10]=t}IsReceivedRewardClass(t){switch(t){case R.Warrior:return this.isReceivedRewardWarrior;case R.Wizard:return this.isReceivedRewardWizard;case R.Angel:return this.isReceivedRewardAngel;case R.Thief:return this.isReceivedRewardThief;case R.Archer:return this.isReceivedRewardArcher;case R.Tamer:return this.isReceivedRewardTamer;default:return!1}}SetReceivedRewardClass(t,i){switch(t){case R.Warrior:this.isReceivedRewardWarrior=i;break;case R.Wizard:this.isReceivedRewardWizard=i;break;case R.Angel:this.isReceivedRewardAngel=i;break;case R.Thief:this.isReceivedRewardThief=i;break;case R.Archer:this.isReceivedRewardArcher=i;break;case R.Tamer:this.isReceivedRewardTamer=i;break}}get rewardMultiplier(){return this.data.challenge.permanentRewardMultiplier.Value()}SetReward(){}SetRewardEquipmentSlot(t){switch(t){case V.Weapon:this.data.inventory.equipWeaponUnlockedNum[0].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardWarrior)),this.data.inventory.equipWeaponUnlockedNum[1].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardWizard)),this.data.inventory.equipWeaponUnlockedNum[2].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardAngel)),this.data.inventory.equipWeaponUnlockedNum[3].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardThief)),this.data.inventory.equipWeaponUnlockedNum[4].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardArcher)),this.data.inventory.equipWeaponUnlockedNum[5].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardTamer));break;case V.Armor:this.data.inventory.equipArmorUnlockedNum[0].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardWarrior)),this.data.inventory.equipArmorUnlockedNum[1].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardWizard)),this.data.inventory.equipArmorUnlockedNum[2].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardAngel)),this.data.inventory.equipArmorUnlockedNum[3].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardThief)),this.data.inventory.equipArmorUnlockedNum[4].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardArcher)),this.data.inventory.equipArmorUnlockedNum[5].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardTamer));break;case V.Jewelry:this.data.inventory.equipJewelryUnlockedNum[0].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardWarrior)),this.data.inventory.equipJewelryUnlockedNum[1].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardWizard)),this.data.inventory.equipJewelryUnlockedNum[2].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardAngel)),this.data.inventory.equipJewelryUnlockedNum[3].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardThief)),this.data.inventory.equipJewelryUnlockedNum[4].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardArcher)),this.data.inventory.equipJewelryUnlockedNum[5].RegisterMultiplier(new u(n.Challenge,s.Add,()=>1,()=>this.isReceivedRewardTamer));break}}}class St extends Zl{}class gR extends St{get kind(){return je.HCArachnetta150}ClassExclusiveRewardString(){return[`HP + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class SR extends St{get kind(){return je.HCArachnetta250}ClassExclusiveRewardString(){return[`HP + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class mR extends St{get kind(){return je.HCArachnetta350}ClassExclusiveRewardString(){return[`HP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class MR extends St{get kind(){return je.HCArachnetta450}ClassExclusiveRewardString(){return[`HP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class ER extends St{get kind(){return je.HCArachnetta550}ClassExclusiveRewardString(){return[`HP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class vR extends St{get kind(){return je.HCFlorzporb100}ClassExclusiveRewardString(){return[`HP + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class wR extends St{get kind(){return je.HCFlorzporb200}ClassExclusiveRewardString(){return[`HP + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class kR extends St{get kind(){return je.HCFlorzporb300}ClassExclusiveRewardString(){return[`HP + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class AR extends St{get kind(){return je.HCFlorzporb400}ClassExclusiveRewardString(){return[`HP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class RR extends St{get kind(){return je.HCFlorzporb500}ClassExclusiveRewardString(){return[`HP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class CR extends St{get kind(){return je.HCGuardianKor200}ClassExclusiveRewardString(){return[`HP + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.3*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.3*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class LR extends St{get kind(){return je.HCGuardianKor300}ClassExclusiveRewardString(){return[`HP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class PR extends St{get kind(){return je.HCGuardianKor400}ClassExclusiveRewardString(){return[`HP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class DR extends St{get kind(){return je.HCGuardianKor500}ClassExclusiveRewardString(){return[`HP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class yR extends St{get kind(){return je.HCGuardianKor600}ClassExclusiveRewardString(){return[`HP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class bR extends St{get kind(){return je.HCLadyEmelda300}ClassExclusiveRewardString(){return[`HP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class TR extends St{get kind(){return je.HCLadyEmelda400}ClassExclusiveRewardString(){return[`HP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class GR extends St{get kind(){return je.HCLadyEmelda500}ClassExclusiveRewardString(){return[`HP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class BR extends St{get kind(){return je.HCLadyEmelda600}ClassExclusiveRewardString(){return[`HP + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class xR extends St{get kind(){return je.HCLadyEmelda700}ClassExclusiveRewardString(){return[`HP + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class FR extends St{get kind(){return je.HCNariSune350}ClassExclusiveRewardString(){return[`HP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class _R extends St{get kind(){return je.HCNariSune450}ClassExclusiveRewardString(){return[`HP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class IR extends St{get kind(){return je.HCNariSune550}ClassExclusiveRewardString(){return[`HP + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class VR extends St{get kind(){return je.HCNariSune650}ClassExclusiveRewardString(){return[`HP + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.9*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.9*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class HR extends St{get kind(){return je.HCNariSune750}ClassExclusiveRewardString(){return[`HP + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class qR extends St{get kind(){return je.HCNostro250}ClassExclusiveRewardString(){return[`HP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class NR extends St{get kind(){return je.HCNostro350}ClassExclusiveRewardString(){return[`HP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.5*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class WR extends St{get kind(){return je.HCNostro450}ClassExclusiveRewardString(){return[`HP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.6*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class $R extends St{get kind(){return je.HCNostro550}ClassExclusiveRewardString(){return[`HP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.7*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.7*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class UR extends St{get kind(){return je.HCNostro650}ClassExclusiveRewardString(){return[`HP + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MP + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`ATK + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MATK + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`DEF + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`MDEF + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectBasicStats(d.MP,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class OR extends St{get kind(){return je.HCOctobaddie400}ClassExclusiveRewardString(){return[`Armored Fury + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`Warded Fury + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`Gold Cap + ${f.percent(.1*this.data.challenge.permanentRewardMultiplier.Value())}`,`Stone Gain + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`Crystal Gain + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`,`Leaf Gain + ${f.percent(1*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectStats(v.WardedFury,new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.resource.goldCap.RegisterMultiplier(new u(n.Challenge,s.Mul,()=>.1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>1*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class zR extends St{get kind(){return je.HCOctobaddie500}ClassExclusiveRewardString(){return[`Armored Fury + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`Warded Fury + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`Gold Cap + ${f.percent(.2*this.data.challenge.permanentRewardMultiplier.Value())}`,`Stone Gain + ${f.percent(5*this.data.challenge.permanentRewardMultiplier.Value())}`,`Crystal Gain + ${f.percent(5*this.data.challenge.permanentRewardMultiplier.Value())}`,`Leaf Gain + ${f.percent(5*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectStats(v.WardedFury,new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.resource.goldCap.RegisterMultiplier(new u(n.Challenge,s.Mul,()=>.2*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>5*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class JR extends St{get kind(){return je.HCOctobaddie600}ClassExclusiveRewardString(){return[`Armored Fury + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`Warded Fury + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`Gold Cap + ${f.percent(.4*this.data.challenge.permanentRewardMultiplier.Value())}`,`Stone Gain + ${f.percent(25*this.data.challenge.permanentRewardMultiplier.Value())}`,`Crystal Gain + ${f.percent(25*this.data.challenge.permanentRewardMultiplier.Value())}`,`Leaf Gain + ${f.percent(25*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectStats(v.WardedFury,new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.resource.goldCap.RegisterMultiplier(new u(n.Challenge,s.Mul,()=>.4*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>25*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>25*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>25*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class jR extends St{get kind(){return je.HCOctobaddie700}ClassExclusiveRewardString(){return[`Armored Fury + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`Warded Fury + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`Gold Cap + ${f.percent(.8*this.data.challenge.permanentRewardMultiplier.Value())}`,`Stone Gain + ${f.percent(125*this.data.challenge.permanentRewardMultiplier.Value())}`,`Crystal Gain + ${f.percent(125*this.data.challenge.permanentRewardMultiplier.Value())}`,`Leaf Gain + ${f.percent(125*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectStats(v.WardedFury,new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.resource.goldCap.RegisterMultiplier(new u(n.Challenge,s.Mul,()=>.8*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>125*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>125*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>125*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class XR extends St{get kind(){return je.HCOctobaddie800}ClassExclusiveRewardString(){return[`Armored Fury + ${f.percent(1.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`Warded Fury + ${f.percent(1.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`Gold Cap + ${f.percent(1.6*this.data.challenge.permanentRewardMultiplier.Value())}`,`Stone Gain + ${f.percent(625*this.data.challenge.permanentRewardMultiplier.Value())}`,`Crystal Gain + ${f.percent(625*this.data.challenge.permanentRewardMultiplier.Value())}`,`Leaf Gain + ${f.percent(625*this.data.challenge.permanentRewardMultiplier.Value())}`]}SetReward(){this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.Challenge,s.Mul,()=>1.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWarrior)),this.data.stats.SetEffectStats(v.WardedFury,new u(n.Challenge,s.Mul,()=>1.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardWizard)),this.data.resource.goldCap.RegisterMultiplier(new u(n.Challenge,s.Mul,()=>1.6*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardAngel)),this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>625*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardThief)),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>625*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardArcher)),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Challenge,s.Mul,()=>625*this.data.challenge.permanentRewardMultiplier.Value(),()=>this.isReceivedRewardTamer))}}class fa extends Zl{}class QR extends fa{get kind(){return je.SoloFlorzporb100}ClassExclusiveRewardString(){return this.ClassExclusiveRewardStringEquipmentSlot(V.Weapon)}SetReward(){this.SetRewardEquipmentSlot(V.Weapon)}}class YR extends fa{get kind(){return je.SoloGuardianKor200}ClassExclusiveRewardString(){return this.ClassExclusiveRewardStringEquipmentSlot(V.Jewelry)}SetReward(){this.SetRewardEquipmentSlot(V.Jewelry)}}class ZR extends fa{get kind(){return je.SoloLadyEmelda300}ClassExclusiveRewardString(){return this.ClassExclusiveRewardStringEquipmentSlot(V.Weapon)}SetReward(){this.SetRewardEquipmentSlot(V.Weapon)}}class KR extends fa{get kind(){return je.SoloNariSune350}ClassExclusiveRewardString(){return this.ClassExclusiveRewardStringEquipmentSlot(V.Jewelry)}SetReward(){this.SetRewardEquipmentSlot(V.Jewelry)}}class eC extends fa{get kind(){return je.SoloNostro250}ClassExclusiveRewardString(){return this.ClassExclusiveRewardStringEquipmentSlot(V.Armor)}SetReward(){this.SetRewardEquipmentSlot(V.Armor)}}class tC extends fa{get kind(){return je.SoloOctobaddie400}ClassExclusiveRewardString(){return this.ClassExclusiveRewardStringEquipmentSlot(V.Armor)}SetReward(){this.SetRewardEquipmentSlot(V.Armor)}}class Oa extends Zl{get sdId(){return 0}BaseRewardValueIncrementPerFloor(t){return 0}RewardValueIncrementPerFloor(t){return this.BaseRewardValueIncrementPerFloor(t)*this.statRewardMultiplier}FloorRewardValue(t){return this.RewardValueIncrementPerFloor(t)*this.SuperDungeonMaxFloorReached(t)*(1+.1*this.GetMaxModifierCleared(t))}GetMaxModifierCleared(t){return this.data.source.maxModifierCleareds[t+10*this.sdId]}SuperDungeonMaxFloorReached(t){return this.data.source.superDungeonMaxFloorsReached[t+10*this.sdId]}FloorRewardString(t){return""}NameString(){return M.SDName(this.sdId)}}class sC extends Oa{get kind(){return je.SDBatTreant}get sdId(){return 2}BaseRewardValueIncrementPerFloor(t){switch(t){case R.Warrior:return .01;case R.Wizard:return .01;case R.Angel:return .01;case R.Thief:return .01;case R.Archer:return .01;case R.Tamer:return .01;default:return}}SetReward(){this.data.stats.SetEffectElementDamage(F.Physical,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Warrior))),this.data.stats.SetEffectStats(v.PhysCritChance,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Wizard))),this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Angel))),this.data.stats.SetEffectStats(v.CriticalDamage,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Thief))),this.data.stats.SetEffectStats(v.PetCriticalDamage,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Archer))),this.data.stats.SetEffectStats(v.PetPhysCritChance,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Tamer)))}FloorRewardString(t){switch(t){case R.Warrior:return`Physical Damage + ${f.percent(this.FloorRewardValue(R.Warrior))}`;case R.Wizard:return`Physical Critical Chance + ${f.percent(this.FloorRewardValue(R.Wizard))}`;case R.Angel:return`Armored Fury + ${f.percent(this.FloorRewardValue(R.Angel))}`;case R.Thief:return`Critical Damage + ${f.percent(this.FloorRewardValue(R.Thief))}`;case R.Archer:return`Pet Base Critical Damage + ${f.percent(this.FloorRewardValue(R.Archer))}`;case R.Tamer:return`Pet Base Physical Critical Chance + ${f.percent(this.FloorRewardValue(R.Tamer))}`;default:return}}}class iC extends Oa{get kind(){return je.SDFairyFlametiger}get sdId(){return 3}BaseRewardValueIncrementPerFloor(t){switch(t){case R.Warrior:return .01;case R.Wizard:return .01;case R.Angel:return .01;case R.Thief:return .01;case R.Archer:return .01;case R.Tamer:return .01;default:return}}SetReward(){this.data.stats.SetEffectMagicalDamage(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Warrior))),this.data.stats.SetEffectStats(v.MagCritChance,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Wizard))),this.data.stats.SetEffectStats(v.WardedFury,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Angel))),this.data.stats.SetEffectStats(v.DebuffRes,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Thief))),this.data.stats.SetEffectElementResistance(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Archer))),this.data.stats.SetEffectStats(v.PetMagCritChance,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Tamer)))}FloorRewardString(t){switch(t){case R.Warrior:return`Magical Damage + ${f.percent(this.FloorRewardValue(R.Warrior))}`;case R.Wizard:return`Magical Critical Chance + ${f.percent(this.FloorRewardValue(R.Wizard))}`;case R.Angel:return`Warded Fury + ${f.percent(this.FloorRewardValue(R.Angel))}`;case R.Thief:return`Debuff Resistance + ${f.percent(this.FloorRewardValue(R.Thief))}`;case R.Archer:return`Element Resistance + ${f.percent(this.FloorRewardValue(R.Archer))}`;case R.Tamer:return`Pet Base Magical Critical Chance + ${f.percent(this.FloorRewardValue(R.Tamer))}`;default:return}}}class aC extends Oa{get kind(){return je.SDSlime}get sdId(){return 0}BaseRewardValueIncrementPerFloor(t){switch(t){case R.Warrior:return 1;case R.Wizard:return 1;case R.Angel:return 1;case R.Thief:return .2;case R.Archer:return .05;case R.Tamer:return .05;default:return}}SetReward(){this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Warrior))),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Wizard))),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Angel))),this.data.resource.goldCap.RegisterMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Thief))),this.data.stats.GoldGain().RegisterMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Archer))),this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Tamer)))}FloorRewardString(t){switch(t){case R.Warrior:return`Stone Gain + ${f.percent(this.FloorRewardValue(R.Warrior))}`;case R.Wizard:return`Crystal Gain + ${f.percent(this.FloorRewardValue(R.Wizard))}`;case R.Angel:return`Leaf Gain + ${f.percent(this.FloorRewardValue(R.Angel))}`;case R.Thief:return`Gold Cap + ${f.percent(this.FloorRewardValue(R.Thief))}`;case R.Archer:return`Gold Gain + ${f.percent(this.FloorRewardValue(R.Archer))}`;case R.Tamer:return`Slime Coin Cap + ${f.percent(this.FloorRewardValue(R.Tamer))}`;default:return}}}class rC extends Oa{get kind(){return je.SDSlimeMslime}get sdId(){return 4}BaseRewardValueIncrementPerFloor(t){switch(t){case R.Warrior:return .005;case R.Wizard:return .005;case R.Angel:return 1/400;case R.Thief:return 1/400;case R.Archer:return 1/400;case R.Tamer:return 1/400;default:return}}SetReward(){this.data.sdg.SetEffectSDDamageMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Warrior))),this.data.sdg.SetEffectSDChallengeBossDamageMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Wizard))),this.data.sdg.SetEffectSDDamageCutMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Angel))),this.data.sdg.SetEffectSDChallengeBossDamageCutMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Thief))),this.data.sdg.SetEffectSDArmoredFuryMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Archer))),this.data.sdg.SetEffectSDWardedFuryMultiplier(new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Tamer)))}FloorRewardString(t){switch(t){case R.Warrior:return`SD Damage Multiplier + ${f.percent(this.FloorRewardValue(R.Warrior))}`;case R.Wizard:return`SD Challenge BOSS Damage Multiplier + ${f.percent(this.FloorRewardValue(R.Wizard))}`;case R.Angel:return`SD Damage Cut Multiplier + ${f.percent(this.FloorRewardValue(R.Angel))}`;case R.Thief:return`SD Challenge Boss Damage Cut Multiplier + ${f.percent(this.FloorRewardValue(R.Thief))}`;case R.Archer:return`SD Armored Fury + ${f.percent(this.FloorRewardValue(R.Archer))}`;case R.Tamer:return`SD Warded Fury + ${f.percent(this.FloorRewardValue(R.Tamer))}`;default:return}}}class lC extends Oa{get kind(){return je.SDSpider}get sdId(){return 1}BaseRewardValueIncrementPerFloor(t){switch(t){case R.Warrior:return .025;case R.Wizard:return .025;case R.Angel:return .025;case R.Thief:return .025;case R.Archer:return .025;case R.Tamer:return .025;default:return}}SetReward(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Warrior))),this.data.stats.SetEffectBasicStats(d.MP,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Wizard))),this.data.stats.SetEffectBasicStats(d.ATK,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Angel))),this.data.stats.SetEffectBasicStats(d.MATK,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Thief))),this.data.stats.SetEffectBasicStats(d.DEF,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Archer))),this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.SuperDungeon,s.Mul,()=>this.FloorRewardValue(R.Tamer)))}FloorRewardString(t){switch(t){case R.Warrior:return`HP + ${f.percent(this.FloorRewardValue(R.Warrior))}`;case R.Wizard:return`MP + ${f.percent(this.FloorRewardValue(R.Wizard))}`;case R.Angel:return`ATK + ${f.percent(this.FloorRewardValue(R.Angel))}`;case R.Thief:return`MATK + ${f.percent(this.FloorRewardValue(R.Thief))}`;case R.Archer:return`DEF + ${f.percent(this.FloorRewardValue(R.Archer))}`;case R.Tamer:return`MDEF + ${f.percent(this.FloorRewardValue(R.Tamer))}`;default:return}}}class nC{constructor(t){o(this,"data");o(this,"raidbossList",[]);o(this,"solobossList",[]);o(this,"handicapList",[]);o(this,"superdungeonList",[]);o(this,"challengeList",[]);o(this,"permanentRewardMultiplier");o(this,"sdStatRewardMultiplier");this.data=t,this.permanentRewardMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.sdStatRewardMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.solobossList.push(new QR(this.data)),this.solobossList.push(new YR(this.data)),this.solobossList.push(new ZR(this.data)),this.solobossList.push(new KR(this.data)),this.solobossList.push(new eC(this.data)),this.solobossList.push(new tC(this.data)),this.handicapList.push(new vR(this.data)),this.handicapList.push(new wR(this.data)),this.handicapList.push(new kR(this.data)),this.handicapList.push(new AR(this.data)),this.handicapList.push(new RR(this.data)),this.handicapList.push(new gR(this.data)),this.handicapList.push(new SR(this.data)),this.handicapList.push(new mR(this.data)),this.handicapList.push(new MR(this.data)),this.handicapList.push(new ER(this.data)),this.handicapList.push(new CR(this.data)),this.handicapList.push(new LR(this.data)),this.handicapList.push(new PR(this.data)),this.handicapList.push(new DR(this.data)),this.handicapList.push(new yR(this.data)),this.handicapList.push(new qR(this.data)),this.handicapList.push(new NR(this.data)),this.handicapList.push(new WR(this.data)),this.handicapList.push(new $R(this.data)),this.handicapList.push(new UR(this.data)),this.handicapList.push(new bR(this.data)),this.handicapList.push(new TR(this.data)),this.handicapList.push(new GR(this.data)),this.handicapList.push(new BR(this.data)),this.handicapList.push(new xR(this.data)),this.handicapList.push(new FR(this.data)),this.handicapList.push(new _R(this.data)),this.handicapList.push(new IR(this.data)),this.handicapList.push(new VR(this.data)),this.handicapList.push(new HR(this.data)),this.handicapList.push(new OR(this.data)),this.handicapList.push(new zR(this.data)),this.handicapList.push(new JR(this.data)),this.handicapList.push(new jR(this.data)),this.handicapList.push(new XR(this.data)),this.superdungeonList.push(new aC(this.data)),this.superdungeonList.push(new lC(this.data)),this.superdungeonList.push(new sC(this.data)),this.superdungeonList.push(new iC(this.data)),this.superdungeonList.push(new rC(this.data))}Start(){this.handicapList.forEach(t=>{t.Start()}),this.superdungeonList.forEach(t=>{t.Start()}),this.solobossList.forEach(t=>{t.Start()})}}class uC{constructor(){o(this,"costReduction");this.costReduction=new $(new u(n.Base,s.Add,()=>1),()=>.9,()=>0)}}var Fi=(e=>(e[e.Nothing=0]="Nothing",e[e.NitroMaxCharger=1]="NitroMaxCharger",e[e.AbilityReset=2]="AbilityReset",e[e.GuildAbilityReset=3]="GuildAbilityReset",e[e.DictionaryUpgradeReset=4]="DictionaryUpgradeReset",e[e.AdvancedAutoDisassemblingEquipment=5]="AdvancedAutoDisassemblingEquipment",e[e.AdvancedAutoDisassemblePotion=6]="AdvancedAutoDisassemblePotion",e[e.SuperQueue=7]="SuperQueue",e[e.SuperQueueForAlchemy=8]="SuperQueueForAlchemy",e[e.ClassSkillSlot1=9]="ClassSkillSlot1",e[e.GlobalSkillSlot1=10]="GlobalSkillSlot1",e[e.EquipmentInventorySlot10=11]="EquipmentInventorySlot10",e[e.EquipmentWeaponSlot1=12]="EquipmentWeaponSlot1",e[e.EquipmentArmorSlot1=13]="EquipmentArmorSlot1",e[e.EquipmentJewelrySlot1=14]="EquipmentJewelrySlot1",e[e.SkillTenacity=15]="SkillTenacity",e[e.EquipmentTenacity=16]="EquipmentTenacity",e[e.AdvancedAutoRebirthTiming=17]="AdvancedAutoRebirthTiming",e[e.AdvancedAutoRebirthFavoriteArea=18]="AdvancedAutoRebirthFavoriteArea",e[e.AdvancedAutoRebirthTravelingBestExpArea=19]="AdvancedAutoRebirthTravelingBestExpArea",e[e.AdvancedAutoAbilityPointAdder=20]="AdvancedAutoAbilityPointAdder",e[e.UpgradeQueue5=21]="UpgradeQueue5",e[e.AlchemyQueue10=22]="AlchemyQueue10",e[e.AutoDisassembleEquipmentSlot5=23]="AutoDisassembleEquipmentSlot5",e[e.Tier1RebirthUpgradeReset=24]="Tier1RebirthUpgradeReset",e[e.Tier2RebirthUpgradeReset=25]="Tier2RebirthUpgradeReset",e[e.Tier3RebirthUpgradeReset=26]="Tier3RebirthUpgradeReset",e[e.RebirthTier4UpgradeReset=27]="RebirthTier4UpgradeReset",e[e.RebirthTier5UpgradeReset=28]="RebirthTier5UpgradeReset",e[e.RebirthTier6UpgradeReset=29]="RebirthTier6UpgradeReset",e[e.ActivePetSlot5=30]="ActivePetSlot5",e[e.AdditionalEpicCoinDailyQuest=31]="AdditionalEpicCoinDailyQuest",e[e.ImprovingMinimumDailyQuestRarity=32]="ImprovingMinimumDailyQuestRarity",e[e.EquipUtilitySlot1=33]="EquipUtilitySlot1",e[e.UtilityInventorySlot5=34]="UtilityInventorySlot5",e[e.Tier1WorldAscensionUpgradeReset=35]="Tier1WorldAscensionUpgradeReset",e[e.FavoriteQuest=36]="FavoriteQuest",e[e.Multitrapper=37]="Multitrapper",e[e.UtilityKeeper=38]="UtilityKeeper",e[e.Convene=39]="Convene",e[e.SwarmChaser=40]="SwarmChaser",e[e.EasyAccessEquipment=41]="EasyAccessEquipment",e[e.AdvancedAutoDisassembleCraftedEquipment=42]="AdvancedAutoDisassembleCraftedEquipment",e[e.AdvancedAutoBuyTraps=43]="AdvancedAutoBuyTraps",e[e.AreaDungeonPrestigeReset=44]="AreaDungeonPrestigeReset",e[e.ExpeditionTeamSlot1=45]="ExpeditionTeamSlot1",e[e.BribesForIEH1=46]="BribesForIEH1",e[e.EquipmentLoadouts=47]="EquipmentLoadouts",e[e.RegularDailyChest=48]="RegularDailyChest",e[e.SmartUseOfProficiencyScrolls=49]="SmartUseOfProficiencyScrolls",e[e.EasyAccessSkill=50]="EasyAccessSkill",e[e.Pause=51]="Pause",e[e.PurpleFoxMastery=52]="PurpleFoxMastery",e[e.EquipmentEnchantFilter=53]="EquipmentEnchantFilter",e[e.EasyAccessQuest=54]="EasyAccessQuest",e[e.SkillLoadouts=55]="SkillLoadouts",e[e.AdvancedAutoProficiencyScroll=56]="AdvancedAutoProficiencyScroll",e[e.OneClickChallenges=57]="OneClickChallenges",e[e.ScrollFilter=58]="ScrollFilter",e[e.PersistentSkillSet=59]="PersistentSkillSet",e[e.AutoAreaProgression=60]="AutoAreaProgression",e[e.NitroCapExpansion=61]="NitroCapExpansion",e[e.AdvancedAutoRebirthLazyQuestingMode=62]="AdvancedAutoRebirthLazyQuestingMode",e[e.Nitro_OfflineBonus=63]="Nitro_OfflineBonus",e[e.AutoMysteriousWaterAdder=64]="AutoMysteriousWaterAdder",e[e.SmartUseOfAnvils=65]="SmartUseOfAnvils",e[e.EasyAccessChallenge=66]="EasyAccessChallenge",e))(Fi||{}),nr=(e=>(e[e.EpicCoin500=0]="EpicCoin500",e[e.EpicCoin1050=1]="EpicCoin1050",e[e.EpicCoin2650=2]="EpicCoin2650",e[e.EpicCoin5500=3]="EpicCoin5500",e[e.EpicCoin12000=4]="EpicCoin12000",e[e.EpicCoin18500=5]="EpicCoin18500",e[e.EpicCoin31000=6]="EpicCoin31000",e[e.EpicCoin70000=7]="EpicCoin70000",e[e.UpdateBundle1=8]="UpdateBundle1",e[e.UpdateBundle2=9]="UpdateBundle2",e[e.UpdateBundle3=10]="UpdateBundle3",e))(nr||{});class hC{constructor(t){o(this,"data");this.data=t}Start(){for(let t=0;t<W.HeroKind;t++)this.data.inventory.equipWeaponUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,s.Add,()=>this.data.source.epicStorePurchasedNum[Fi.EquipmentWeaponSlot1])),this.data.inventory.equipArmorUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,s.Add,()=>this.data.source.epicStorePurchasedNum[Fi.EquipmentArmorSlot1])),this.data.inventory.equipJewelryUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,s.Add,()=>this.data.source.epicStorePurchasedNum[Fi.EquipmentJewelrySlot1])),this.data.inventory.equipPotionUnlockedNum[t].RegisterMultiplier(new u(n.EpicStore,s.Add,()=>this.data.source.epicStorePurchasedNum[Fi.EquipUtilitySlot1]));this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.EpicStore,s.Add,()=>this.data.source.epicStorePurchasedNum[Fi.ExpeditionTeamSlot1])),this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.EpicStore,s.Add,()=>1,()=>this.data.source.inAppPurchasedNum[nr.UpdateBundle2])),this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.EpicStore,s.Add,()=>1,()=>this.data.source.inAppPurchasedNum[nr.UpdateBundle3])),this.data.nitro.nitroCap.RegisterMultiplier(new u(n.EpicStore,s.Mul,()=>.1*this.data.source.epicStorePurchasedNum[Fi.NitroCapExpansion])),this.data.nitro.nitroCap.RegisterMultiplier(new u(n.EpicStore,s.Mul,()=>.5,()=>this.data.source.inAppPurchasedNum[nr.UpdateBundle1]))}}const cC={UpgradeCost(e,t){switch(e){case wt.EquipmentProficiencyGainWarrior:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EquipmentProficiencyGainWizard:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EquipmentProficiencyGainAngel:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EquipmentProficiencyGainThief:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EquipmentProficiencyGainArcher:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EquipmentProficiencyGainTamer:return(2+2*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EquipmentDropChance:return(5+5*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EnchantedEffectChance1:return(10+10*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EnchantedEffectChance2:return(20+20*t)*Math.pow(2,Math.max(0,t-20)/10);case wt.EnchantedEffectChance3:return(30+30*t)*Math.pow(2,Math.max(0,t-20)/10);default:return 1}},EffectValue(e,t){switch(e){case wt.EquipmentProficiencyGainWarrior:return .05*t;case wt.EquipmentProficiencyGainWizard:return .05*t;case wt.EquipmentProficiencyGainAngel:return .05*t;case wt.EquipmentProficiencyGainThief:return .05*t;case wt.EquipmentProficiencyGainArcher:return .05*t;case wt.EquipmentProficiencyGainTamer:return .05*t;case wt.EquipmentDropChance:return .025*t/100;case wt.EnchantedEffectChance1:return .25*t/100;case wt.EnchantedEffectChance2:return .05*t/100;case wt.EnchantedEffectChance3:return .005*t/100;default:return 0}}};class oC{constructor(t,i){o(this,"data");o(this,"equipmentCtrl");o(this,"kind");this.data=t.data,this.equipmentCtrl=t,this.kind=i}get level(){return this.data.source.dictionaryUpgradeLevels[this.kind]}Start(){this.SetEffect()}get effectValue(){return cC.EffectValue(this.kind,this.level)*this.equipmentCtrl.dictionaryUpgradeEffectMultiplier.Value()}SetEffect(){switch(this.kind){case wt.EquipmentProficiencyGainWarrior:this.data.stats.HeroStats(R.Warrior,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EquipmentProficiencyGainWizard:this.data.stats.HeroStats(R.Wizard,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EquipmentProficiencyGainAngel:this.data.stats.HeroStats(R.Angel,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EquipmentProficiencyGainThief:this.data.stats.HeroStats(R.Thief,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EquipmentProficiencyGainArcher:this.data.stats.HeroStats(R.Archer,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EquipmentProficiencyGainTamer:this.data.stats.HeroStats(R.Tamer,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EquipmentDropChance:this.data.stats.SetEffectStats(v.EquipmentDropChance,new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EnchantedEffectChance1:for(let t=0;t<W.HeroKind;++t)this.data.stats.OptionEffectChance(t,0).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EnchantedEffectChance2:for(let t=0;t<W.HeroKind;++t)this.data.stats.OptionEffectChance(t,1).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break;case wt.EnchantedEffectChance3:for(let t=0;t<W.HeroKind;++t)this.data.stats.OptionEffectChance(t,2).RegisterMultiplier(new u(n.Dictionary,s.Add,()=>this.effectValue));break}}}class S{constructor(t,i,r,h=!1){o(this,"isMaxEffect");o(this,"kind");o(this,"initValue");o(this,"baseValue");this.kind=t,this.initValue=i,this.baseValue=r,this.isMaxEffect=h}EffectValue(t,i=1){return this.kind==l.Nothing?Math.floor(this.initValue()):this.isMaxEffect?this.initValue()*Math.max(1,t/10):this.initValue()+i*this.baseValue()*t}get valueKind(){switch(this.kind){case l.ATKAdder:case l.ATKAfter:case l.AllSkillLevel:case l.HPAfter:case l.HPAdder:case l.DEFAdder:case l.DEFAfter:case l.MATKAdder:case l.MATKAfter:case l.MDEFAdder:case l.MDEFAfter:case l.MPAdder:case l.MPAfter:return gt.Normal;case l.MoveSpeedAdder:case l.MoveSpeedAfter:return gt.Meter;default:return gt.Percent}}}class fC{constructor(t,i,r){o(this,"data");o(this,"kind");o(this,"heroKind");o(this,"maxValue");this.data=t,this.kind=i,this.heroKind=r,this.maxValue=()=>this.data.equipment.maxLevels[r].Value()}GetMastery(){this.isMaxed=!0,this.value<10}get isMaxed(){switch(this.heroKind){case R.Warrior:return this.data.source.equipmentIsMaxedWarrior[this.kind];case R.Wizard:return this.data.source.equipmentIsMaxedWizard[this.kind];case R.Angel:return this.data.source.equipmentIsMaxedAngel[this.kind];case R.Thief:return this.data.source.equipmentIsMaxedThief[this.kind];case R.Archer:return this.data.source.equipmentIsMaxedArcher[this.kind];case R.Tamer:return this.data.source.equipmentIsMaxedTamer[this.kind];default:return!1}}set isMaxed(t){switch(this.heroKind){case R.Warrior:this.data.source.equipmentIsMaxedWarrior[this.kind]=t;break;case R.Wizard:this.data.source.equipmentIsMaxedWizard[this.kind]=t;break;case R.Angel:this.data.source.equipmentIsMaxedAngel[this.kind]=t;break;case R.Thief:this.data.source.equipmentIsMaxedThief[this.kind]=t;break;case R.Archer:this.data.source.equipmentIsMaxedArcher[this.kind]=t;break;case R.Tamer:this.data.source.equipmentIsMaxedTamer[this.kind]=t;break}}get value(){switch(this.heroKind){case R.Warrior:return this.data.source.equipmentLevelsWarrior[this.kind];case R.Wizard:return this.data.source.equipmentLevelsWizard[this.kind];case R.Angel:return this.data.source.equipmentLevelsAngel[this.kind];case R.Thief:return this.data.source.equipmentLevelsThief[this.kind];case R.Archer:return this.data.source.equipmentLevelsArcher[this.kind];case R.Tamer:return this.data.source.equipmentLevelsTamer[this.kind];default:return 0}}set value(t){switch(t=Math.min(t,this.maxValue()),this.heroKind){case R.Warrior:this.data.source.equipmentLevelsWarrior[this.kind]=t;break;case R.Wizard:this.data.source.equipmentLevelsWizard[this.kind]=t;break;case R.Angel:this.data.source.equipmentLevelsAngel[this.kind]=t;break;case R.Thief:this.data.source.equipmentLevelsThief[this.kind]=t;break;case R.Archer:this.data.source.equipmentLevelsArcher[this.kind]=t;break;case R.Tamer:this.data.source.equipmentLevelsTamer[this.kind]=t;break}}}class C{constructor(t,i=0,r=!1){o(this,"kind");o(this,"requiredValue");o(this,"isLevel");o(this,"isSuperAbility");arguments.length==1?this.EquipmentRequiredAbility(arguments[0],r):arguments.length==2&&arguments[1]==!0?this.EquipmentRequiredAbility(arguments[0],arguments[1]):(this.kind=t,this.requiredValue=i,this.isSuperAbility=r)}EquipmentRequiredAbility(t,i=!1){this.isLevel=!0,this.requiredValue=t,this.isSuperAbility=i}}class pC{constructor(t,i){o(this,"data");o(this,"kind");o(this,"levels",Array(W.HeroKind));o(this,"effects",[]);o(this,"requiredAbilities",[]);o(this,"levelMaxEffects",Array(W.HeroKind));o(this,"setKind",we.Nothing);o(this,"isArtifact");this.data=t,this.kind=i,this.SetEffectAndRequiredAbility(),this.SetLevelMaxEffect();for(let r=0;r<this.levels.length;r++)this.levels[r]=new fC(this.data,i,r)}get rarity(){return zt.Rarity(this.kind)}get part(){return zt.Part(this.kind)}SetEffectAndRequiredAbility(){switch(this.kind){case E.Nothing:this.requiredAbilities.push(new C(1));break;case E.DullSword:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.ATKAdder,()=>4,()=>1)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Strength,3));break;case E.BrittleStaff:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.MATKAdder,()=>4,()=>1)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Intelligence,3));break;case E.FlimsyWing:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.ATKAdder,()=>2,()=>.5)),this.effects.push(new S(l.MATKAdder,()=>2,()=>.5)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Strength,2)),this.requiredAbilities.push(new C(y.Intelligence,2));break;case E.WornDart:this.effects.push(new S(l.MPAdder,()=>2.5,()=>.5)),this.effects.push(new S(l.ATKAdder,()=>4,()=>1)),this.effects.push(new S(l.StoneGain,()=>.1,()=>.025)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Strength,3));break;case E.SmallBow:this.effects.push(new S(l.MPAdder,()=>2.5,()=>.5)),this.effects.push(new S(l.MATKAdder,()=>4,()=>1)),this.effects.push(new S(l.CrystalGain,()=>.1,()=>.025)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Intelligence,3));break;case E.WoodenRecorder:this.effects.push(new S(l.MPAdder,()=>2.5,()=>.5)),this.effects.push(new S(l.ATKAdder,()=>2,()=>.5)),this.effects.push(new S(l.MATKAdder,()=>2,()=>.5)),this.effects.push(new S(l.LeafGain,()=>.1,()=>.025)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Strength,2)),this.requiredAbilities.push(new C(y.Intelligence,2));break;case E.OldCloak:this.effects.push(new S(l.HPAdder,()=>10,()=>10)),this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.requiredAbilities.push(new C(1)),this.requiredAbilities.push(new C(y.Vitality,3));break;case E.BlueHat:this.effects.push(new S(l.DEFAdder,()=>1,()=>1)),this.requiredAbilities.push(new C(5)),this.requiredAbilities.push(new C(y.Vitality,3)),this.requiredAbilities.push(new C(y.Strength,2));break;case E.OrangeHat:this.effects.push(new S(l.MDEFAdder,()=>1,()=>1)),this.requiredAbilities.push(new C(5)),this.requiredAbilities.push(new C(y.Vitality,3)),this.requiredAbilities.push(new C(y.Intelligence,2));break;case E.TShirt:this.effects.push(new S(l.HPAdder,()=>20,()=>5)),this.effects.push(new S(l.DEFAdder,()=>.5,()=>.5)),this.requiredAbilities.push(new C(5)),this.requiredAbilities.push(new C(y.Vitality,5));break;case E.ClothGlove:this.effects.push(new S(l.DEFAdder,()=>2.5,()=>.5)),this.effects.push(new S(l.PhysicalCritical,()=>.005,()=>25e-5)),this.requiredAbilities.push(new C(10)),this.requiredAbilities.push(new C(y.Luck,5));break;case E.BlueTShirt:this.effects.push(new S(l.MPAdder,()=>30,()=>3)),this.requiredAbilities.push(new C(15)),this.requiredAbilities.push(new C(y.Vitality,5));break;case E.OrangeTShirt:this.effects.push(new S(l.HPAdder,()=>20,()=>20)),this.requiredAbilities.push(new C(15)),this.requiredAbilities.push(new C(y.Agility,5));break;case E.ClothBelt:this.effects.push(new S(l.DEFMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new C(5)),this.requiredAbilities.push(new C(y.Vitality,3));break;case E.ClothShoes:this.effects.push(new S(l.MoveSpeedAdder,()=>5,()=>.25)),this.requiredAbilities.push(new C(5)),this.requiredAbilities.push(new C(y.Agility,5));break;case E.IronRing:this.effects.push(new S(l.HPAdder,()=>20,()=>2)),this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.HPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new C(10)),this.requiredAbilities.push(new C(y.Vitality,5));break;case E.PearlEarring:this.effects.push(new S(l.MPAdder,()=>20,()=>4)),this.effects.push(new S(l.MPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new C(10)),this.requiredAbilities.push(new C(y.Agility,5));break;case E.FireBrooch:this.effects.push(new S(l.FireDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(20)),this.requiredAbilities.push(new C(y.Vitality,5)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.IceBrooch:this.effects.push(new S(l.IceDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(20)),this.requiredAbilities.push(new C(y.Vitality,5)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.ThunderBrooch:this.effects.push(new S(l.ThunderDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(20)),this.requiredAbilities.push(new C(y.Vitality,5)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.LightBrooch:this.effects.push(new S(l.LightDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(20)),this.requiredAbilities.push(new C(y.Vitality,5)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.DarkBrooch:this.effects.push(new S(l.DarkDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(20)),this.requiredAbilities.push(new C(y.Vitality,5)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.WoodenShield:this.effects.push(new S(l.DEFAdder,()=>20,()=>1)),this.requiredAbilities.push(new C(15)),this.requiredAbilities.push(new C(y.Vitality,10)),this.requiredAbilities.push(new C(y.Strength,5));break;case E.LongSword:this.effects.push(new S(l.MPAdder,()=>10,()=>2)),this.effects.push(new S(l.ATKAdder,()=>10,()=>1)),this.effects.push(new S(l.WarriorSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new C(30)),this.requiredAbilities.push(new C(y.Strength,20));break;case E.LongStaff:this.effects.push(new S(l.MPAdder,()=>10,()=>2)),this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.WizardSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new C(30)),this.requiredAbilities.push(new C(y.Intelligence,20));break;case E.WarmWing:this.effects.push(new S(l.MPAdder,()=>10,()=>2)),this.effects.push(new S(l.ATKAdder,()=>5,()=>.5)),this.effects.push(new S(l.MATKAdder,()=>5,()=>.5)),this.effects.push(new S(l.AngelSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new C(30)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.DualDagger:this.effects.push(new S(l.MPAdder,()=>10,()=>2)),this.effects.push(new S(l.ATKAdder,()=>8,()=>.8)),this.effects.push(new S(l.MATKAdder,()=>2,()=>.2)),this.effects.push(new S(l.ThiefSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new C(30)),this.requiredAbilities.push(new C(y.Strength,20));break;case E.ReinforcedBow:this.effects.push(new S(l.MPAdder,()=>10,()=>2)),this.effects.push(new S(l.ATKAdder,()=>2,()=>.2)),this.effects.push(new S(l.MATKAdder,()=>8,()=>.8)),this.effects.push(new S(l.ArcherSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new C(30)),this.requiredAbilities.push(new C(y.Intelligence,20));break;case E.Flute:this.effects.push(new S(l.MPAdder,()=>10,()=>2)),this.effects.push(new S(l.ATKAdder,()=>5,()=>.5)),this.effects.push(new S(l.MATKAdder,()=>5,()=>.5)),this.effects.push(new S(l.TamerSkillLevel,()=>2,()=>.1)),this.requiredAbilities.push(new C(30)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.FireStaff:this.effects.push(new S(l.MPAdder,()=>20,()=>2)),this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.FireDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Intelligence,15)),this.requiredAbilities.push(new C(y.Agility,10));break;case E.IceStaff:this.effects.push(new S(l.MPAdder,()=>20,()=>2)),this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.IceDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Intelligence,15)),this.requiredAbilities.push(new C(y.Agility,10));break;case E.ThunderStaff:this.effects.push(new S(l.MPAdder,()=>20,()=>2)),this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.ThunderDamage,()=>.1,()=>.005)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Intelligence,15)),this.requiredAbilities.push(new C(y.Agility,10));break;case E.LeatherBelt:this.effects.push(new S(l.DEFAdder,()=>10,()=>1)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Vitality,10)),this.requiredAbilities.push(new C(y.Strength,5)),this.requiredAbilities.push(new C(y.Intelligence,5));break;case E.LeatherShoes:this.effects.push(new S(l.SPDAdder,()=>10,()=>.5)),this.effects.push(new S(l.MoveSpeedAdder,()=>10,()=>.5)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Agility,20));break;case E.WarmCloak:this.effects.push(new S(l.HPAdder,()=>100,()=>25)),this.effects.push(new S(l.MPAdder,()=>25,()=>5)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Vitality,10)),this.requiredAbilities.push(new C(y.Agility,10));break;case E.LeatherArmor:this.effects.push(new S(l.DEFAdder,()=>20,()=>2)),this.effects.push(new S(l.MDEFAdder,()=>20,()=>2)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Vitality,15)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.LeatherGlove:this.effects.push(new S(l.MDEFAdder,()=>5,()=>.5)),this.effects.push(new S(l.MagicalCritical,()=>.005,()=>5e-4)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Intelligence,5)),this.requiredAbilities.push(new C(y.Luck,15));break;case E.LeatherShield:this.effects.push(new S(l.DEFAdder,()=>20,()=>1)),this.effects.push(new S(l.PhysicalAbsorption,()=>.01,()=>5e-4)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Vitality,10)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Luck,10));break;case E.FireRing:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.FireResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Intelligence,15));break;case E.IceRing:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.IceResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Intelligence,15));break;case E.ThunderRing:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.ThunderResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Intelligence,15));break;case E.LightRing:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.LightResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Intelligence,15));break;case E.DarkRing:this.effects.push(new S(l.MPAdder,()=>5,()=>1)),this.effects.push(new S(l.DarkResistance,()=>.05,()=>1/400)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Intelligence,15));break;case E.EnhancedFireBrooch:this.effects.push(new S(l.FireDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new C(60)),this.requiredAbilities.push(new C(y.Intelligence,50));break;case E.EnhancedIceBrooch:this.effects.push(new S(l.IceDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new C(60)),this.requiredAbilities.push(new C(y.Intelligence,50));break;case E.EnhancedThunderBrooch:this.effects.push(new S(l.ThunderDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new C(60)),this.requiredAbilities.push(new C(y.Intelligence,50));break;case E.EnhancedLightBrooch:this.effects.push(new S(l.LightDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new C(60)),this.requiredAbilities.push(new C(y.Intelligence,50));break;case E.EnhancedDarkBrooch:this.effects.push(new S(l.DarkDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new C(60)),this.requiredAbilities.push(new C(y.Intelligence,50));break;case E.BattleSword:this.effects.push(new S(l.ATKAdder,()=>20,()=>1)),this.effects.push(new S(l.ATKMultiplier,()=>.01,()=>5e-4)),this.effects.push(new S(l.ATKPropotion,()=>.1,()=>.005)),this.requiredAbilities.push(new C(80)),this.requiredAbilities.push(new C(y.Strength,60));break;case E.BattleStaff:this.effects.push(new S(l.MATKAdder,()=>20,()=>1)),this.effects.push(new S(l.MATKMultiplier,()=>.01,()=>5e-4)),this.effects.push(new S(l.MATKPropotion,()=>.1,()=>.005)),this.requiredAbilities.push(new C(80)),this.requiredAbilities.push(new C(y.Intelligence,60));break;case E.BattleWing:this.effects.push(new S(l.ATKAdder,()=>10,()=>.5)),this.effects.push(new S(l.ATKMultiplier,()=>.005,()=>25e-5)),this.effects.push(new S(l.ATKPropotion,()=>.05,()=>1/400)),this.effects.push(new S(l.MATKAdder,()=>10,()=>.5)),this.effects.push(new S(l.MATKMultiplier,()=>.005,()=>25e-5)),this.effects.push(new S(l.MATKPropotion,()=>.05,()=>1/400)),this.requiredAbilities.push(new C(80)),this.requiredAbilities.push(new C(y.Strength,30)),this.requiredAbilities.push(new C(y.Intelligence,30));break;case E.BattleDagger:this.effects.push(new S(l.ATKAdder,()=>15,()=>1.5)),this.effects.push(new S(l.MATKAdder,()=>5,()=>.5)),this.effects.push(new S(l.PhysicalCritical,()=>.05,()=>5e-4)),this.requiredAbilities.push(new C(80)),this.requiredAbilities.push(new C(y.Strength,40)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.BattleBow:this.effects.push(new S(l.ATKAdder,()=>5,()=>.5)),this.effects.push(new S(l.MATKAdder,()=>15,()=>1.5)),this.effects.push(new S(l.MagicalCritical,()=>.05,()=>5e-4)),this.requiredAbilities.push(new C(80)),this.requiredAbilities.push(new C(y.Intelligence,40)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.BattleRecorder:this.effects.push(new S(l.ATKAdder,()=>10,()=>1)),this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.PhysicalCritical,()=>.025,()=>25e-5)),this.effects.push(new S(l.MagicalCritical,()=>.025,()=>25e-5)),this.requiredAbilities.push(new C(80)),this.requiredAbilities.push(new C(y.Strength,20)),this.requiredAbilities.push(new C(y.Intelligence,20)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.SlimeSword:this.setKind=we.Slime,this.effects.push(new S(l.ATKAdder,()=>15,()=>2)),this.effects.push(new S(l.ATKMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Strength,20));break;case E.SlimeGlove:this.setKind=we.Slime,this.effects.push(new S(l.SPDAdder,()=>20,()=>1)),this.effects.push(new S(l.SkillProficiency,()=>.05,()=>1/400)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Agility,10)),this.requiredAbilities.push(new C(y.Luck,10));break;case E.SlimeRing:this.setKind=we.Slime,this.effects.push(new S(l.StoneGain,()=>.5,()=>.1)),this.effects.push(new S(l.CrystalGain,()=>.5,()=>.1)),this.effects.push(new S(l.LeafGain,()=>.5,()=>.1)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.SlimeBelt:this.setKind=we.Slime,this.effects.push(new S(l.DEFAdder,()=>5,()=>1)),this.effects.push(new S(l.DebuffResistance,()=>.1,()=>.001)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Vitality,10)),this.requiredAbilities.push(new C(y.Luck,10));break;case E.SlimePincenez:this.setKind=we.Slime,this.effects.push(new S(l.EXPGain,()=>.05,()=>1/400)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.SlimeWing:this.setKind=we.Slime,this.effects.push(new S(l.ATKMultiplier,()=>.005,()=>5e-4)),this.effects.push(new S(l.MATKMultiplier,()=>.005,()=>5e-4)),this.effects.push(new S(l.LightDamage,()=>.2,()=>.02)),this.effects.push(new S(l.AngelSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Intelligence,10));break;case E.SlimePoncho:this.setKind=we.Slime,this.effects.push(new S(l.HPAdder,()=>100,()=>20)),this.effects.push(new S(l.HPMultiplier,()=>.05,()=>.001)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Vitality,20));break;case E.SlimeDart:this.setKind=we.Slime,this.effects.push(new S(l.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new S(l.DarkDamage,()=>.2,()=>.005)),this.effects.push(new S(l.StoneGain,()=>1,()=>.2)),this.effects.push(new S(l.SlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Luck,10));break;case E.MagicSlimeStick:this.setKind=we.Magicslime,this.effects.push(new S(l.MATKAdder,()=>15,()=>2)),this.effects.push(new S(l.MATKMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Intelligence,20));break;case E.MagicSlimeHat:this.setKind=we.Magicslime,this.effects.push(new S(l.MDEFAdder,()=>10,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Vitality,20)),this.requiredAbilities.push(new C(y.Intelligence,20));break;case E.MagicSlimeBow:this.setKind=we.Magicslime,this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.FireDamage,()=>.1,()=>.01)),this.effects.push(new S(l.IceDamage,()=>.1,()=>.01)),this.effects.push(new S(l.ThunderDamage,()=>.1,()=>.01)),this.effects.push(new S(l.CrystalGain,()=>1,()=>.2)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.MagicSlimeShoes:this.setKind=we.Magicslime,this.effects.push(new S(l.FireResistance,()=>.1,()=>1/400)),this.effects.push(new S(l.IceResistance,()=>.1,()=>1/400)),this.effects.push(new S(l.ThunderResistance,()=>.1,()=>1/400)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Vitality,15)),this.requiredAbilities.push(new C(y.Intelligence,20)),this.requiredAbilities.push(new C(y.Agility,5));break;case E.MagicSlimeRecorder:this.setKind=we.Magicslime,this.effects.push(new S(l.LeafGain,()=>1,()=>.2)),this.effects.push(new S(l.TamerSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Strength,10)),this.requiredAbilities.push(new C(y.Intelligence,10)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.MagicSlimeEarring:this.setKind=we.Magicslime,this.effects.push(new S(l.GoldGain,()=>.1,()=>.005)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.MagicSlimeBalloon:this.setKind=we.Magicslime,this.effects.push(new S(l.ColorMaterialDropChance,()=>15e-5,()=>1e-6)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.MagicSlimeSkirt:this.setKind=we.Magicslime,this.effects.push(new S(l.MPAdder,()=>200,()=>20)),this.effects.push(new S(l.MPMultiplier,()=>.05,()=>1/400)),this.effects.push(new S(l.MagicSlimeKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.MagicSlimeDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(50)),this.requiredAbilities.push(new C(y.Vitality,20)),this.requiredAbilities.push(new C(y.Agility,20));break;case E.SpiderHat:this.setKind=we.Spider,this.effects.push(new S(l.HPAdder,()=>500,()=>20)),this.effects.push(new S(l.DEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new S(l.DEFPropotion,()=>.1,()=>.01)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,40)),this.requiredAbilities.push(new C(y.Strength,40));break;case E.SpiderSkirt:this.setKind=we.Spider,this.effects.push(new S(l.DarkResistance,()=>.1,()=>1/400)),this.effects.push(new S(l.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,30)),this.requiredAbilities.push(new C(y.Intelligence,40)),this.requiredAbilities.push(new C(y.Agility,10));break;case E.SpiderSuit:this.setKind=we.Spider,this.effects.push(new S(l.HPAdder,()=>500,()=>20)),this.effects.push(new S(l.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new S(l.MDEFPropotion,()=>.1,()=>.01)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,40)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.SpiderDagger:this.setKind=we.Spider,this.effects.push(new S(l.MATKAdder,()=>30,()=>3)),this.effects.push(new S(l.DarkDamage,()=>.2,()=>.01)),this.effects.push(new S(l.ThiefSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Intelligence,80));break;case E.SpiderWing:this.setKind=we.Spider,this.effects.push(new S(l.PhysicalCritical,()=>.025,()=>1/400)),this.effects.push(new S(l.MagicalCritical,()=>.025,()=>1/400)),this.effects.push(new S(l.PhysicalDamage,()=>.2,()=>.01)),this.effects.push(new S(l.LightDamage,()=>.2,()=>.01)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Strength,30)),this.requiredAbilities.push(new C(y.Intelligence,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.SpiderCatchingNet:this.setKind=we.Spider,this.effects.push(new S(l.TamingPoint,()=>.5,()=>.01)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Strength,40)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.SpiderStick:this.setKind=we.Spider,this.effects.push(new S(l.TamingPoint,()=>.25,()=>.005)),this.effects.push(new S(l.ColorMaterialDropChance,()=>1e-4,()=>1e-6)),this.effects.push(new S(l.WizardSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Intelligence,40)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.SpiderFoldingFan:this.setKind=we.Spider,this.effects.push(new S(l.SkillProficiency,()=>.05,()=>1/400)),this.effects.push(new S(l.GoldGain,()=>.1,()=>.01)),this.effects.push(new S(l.SpiderKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.SpiderDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Agility,40)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.BatRing:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.DebuffResistance,()=>.1,()=>.001)),this.effects.push(new S(l.StoneGain,()=>1,()=>.2)),this.effects.push(new S(l.CrystalGain,()=>1,()=>.2)),this.effects.push(new S(l.LeafGain,()=>1,()=>.2)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Agility,60)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.BatShoes:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.MoveSpeedAdder,()=>20,()=>1)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Agility,100));break;case E.BatSword:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.ATKAdder,()=>50,()=>5)),this.effects.push(new S(l.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.WarriorSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Strength,40)),this.requiredAbilities.push(new C(y.Agility,60));break;case E.BatHat:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.FireAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.IceAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.ThunderAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.LightAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,40)),this.requiredAbilities.push(new C(y.Agility,60));break;case E.BatRecorder:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.TamerSkillLevel,()=>10,()=>.25)),this.effects.push(new S(l.TamingPoint,()=>.1,()=>.01)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Agility,100));break;case E.BatBow:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.ATKPropotion,()=>.2,()=>.02)),this.effects.push(new S(l.ArcherSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Agility,100));break;case E.BatMascaradeMask:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.EXPGain,()=>.2,()=>.01)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Agility,60)),this.requiredAbilities.push(new C(y.Luck,40));break;case E.BatCloak:this.setKind=we.Bat,this.effects.push(new S(l.SPDAdder,()=>20,()=>2)),this.effects.push(new S(l.PhysicalAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.MPAdder,()=>200,()=>20)),this.effects.push(new S(l.MPMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.BatKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.BatDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,20)),this.requiredAbilities.push(new C(y.Intelligence,20)),this.requiredAbilities.push(new C(y.Agility,60));break;case E.BronzeShoulder:this.effects.push(new S(l.MDEFAdder,()=>20,()=>1)),this.requiredAbilities.push(new C(15)),this.requiredAbilities.push(new C(y.Vitality,10)),this.requiredAbilities.push(new C(y.Intelligence,5));break;case E.BattleRing:this.effects.push(new S(l.PhysicalDamage,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(20)),this.requiredAbilities.push(new C(y.Vitality,5)),this.requiredAbilities.push(new C(y.Strength,10));break;case E.Halo:this.effects.push(new S(l.HpRegen,()=>5,()=>.25)),this.requiredAbilities.push(new C(25)),this.requiredAbilities.push(new C(y.Vitality,20)),this.requiredAbilities.push(new C(y.Luck,5));break;case E.IronShoulder:this.effects.push(new S(l.MPAdder,()=>25,()=>5)),this.effects.push(new S(l.MDEFAdder,()=>25,()=>1)),this.requiredAbilities.push(new C(35)),this.requiredAbilities.push(new C(y.Vitality,15)),this.requiredAbilities.push(new C(y.Intelligence,15));break;case E.StrengthRing:this.effects.push(new S(l.PhysicalDamage,()=>.15,()=>.005)),this.requiredAbilities.push(new C(60)),this.requiredAbilities.push(new C(y.Strength,50));break;case E.GoldenRing:this.effects.push(new S(l.HPMultiplier,()=>.02,()=>.002)),this.effects.push(new S(l.MPMultiplier,()=>.02,()=>.002)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,20)),this.requiredAbilities.push(new C(y.Intelligence,20));break;case E.GoldenFireRing:this.effects.push(new S(l.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new S(l.FireResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.GoldenIceRing:this.effects.push(new S(l.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new S(l.IceResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.GoldenThunderRing:this.effects.push(new S(l.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new S(l.ThunderResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.GoldenLightRing:this.effects.push(new S(l.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new S(l.LightResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.GoldenDarkRing:this.effects.push(new S(l.MPMultiplier,()=>.02,()=>.002)),this.effects.push(new S(l.DarkResistance,()=>.1,()=>1/400)),this.requiredAbilities.push(new C(100)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,40));break;case E.IronBelt:this.effects.push(new S(l.DEFAdder,()=>20,()=>2)),this.effects.push(new S(l.DEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.DEFPropotion,()=>.1,()=>.01)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,50));break;case E.IronShoes:this.effects.push(new S(l.SPDAdder,()=>20,()=>1)),this.effects.push(new S(l.MoveSpeedAdder,()=>20,()=>.5)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Agility,100));break;case E.CopperArmor:this.effects.push(new S(l.DEFAdder,()=>40,()=>4)),this.effects.push(new S(l.MDEFAdder,()=>40,()=>4)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,60)),this.requiredAbilities.push(new C(y.Strength,20)),this.requiredAbilities.push(new C(y.Intelligence,20));break;case E.IronGlove:this.effects.push(new S(l.MDEFAdder,()=>20,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.MDEFPropotion,()=>.1,()=>.01)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,50));break;case E.TowerShield:this.effects.push(new S(l.DEFAdder,()=>40,()=>2)),this.effects.push(new S(l.DEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.PhysicalAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.FireTowerShield:this.effects.push(new S(l.MDEFAdder,()=>40,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.FireAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.IceTowerShield:this.effects.push(new S(l.MDEFAdder,()=>40,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.IceAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.ThunderTowerShield:this.effects.push(new S(l.MDEFAdder,()=>40,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.ThunderAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.LightTowerShield:this.effects.push(new S(l.MDEFAdder,()=>40,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.LightAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.DarkTowerShield:this.effects.push(new S(l.MDEFAdder,()=>40,()=>2)),this.effects.push(new S(l.MDEFMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.DarkAbsorption,()=>.02,()=>.001)),this.requiredAbilities.push(new C(120)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,30)),this.requiredAbilities.push(new C(y.Luck,20));break;case E.SavageRing:this.effects.push(new S(l.PhysicalDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Strength,150));break;case E.SpellboundFireBrooch:this.effects.push(new S(l.FireDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Intelligence,150));break;case E.SpellboundIceBrooch:this.effects.push(new S(l.IceDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Intelligence,150));break;case E.SpellboundThunderBrooch:this.effects.push(new S(l.ThunderDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Intelligence,150));break;case E.SpellboundLightBrooch:this.effects.push(new S(l.LightDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Intelligence,150));break;case E.SpellboundDarkBrooch:this.effects.push(new S(l.DarkDamage,()=>.2,()=>3/400)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Intelligence,150));break;case E.CopperHelm:this.effects.push(new S(l.HPAdder,()=>250,()=>10)),this.effects.push(new S(l.HPMultiplier,()=>.01,()=>.001)),this.requiredAbilities.push(new C(70)),this.requiredAbilities.push(new C(y.Vitality,50));break;case E.BattleHelm:this.effects.push(new S(l.ATKAdder,()=>10,()=>1)),this.effects.push(new S(l.PhysicalDamage,()=>.025,()=>1/400)),this.requiredAbilities.push(new C(70)),this.requiredAbilities.push(new C(y.Vitality,20)),this.requiredAbilities.push(new C(y.Strength,30));break;case E.WizardHelm:this.effects.push(new S(l.MATKAdder,()=>10,()=>1)),this.effects.push(new S(l.FireDamage,()=>.025,()=>1/400)),this.effects.push(new S(l.IceDamage,()=>.025,()=>1/400)),this.effects.push(new S(l.ThunderDamage,()=>.025,()=>1/400)),this.effects.push(new S(l.LightDamage,()=>.025,()=>1/400)),this.effects.push(new S(l.DarkDamage,()=>.025,()=>1/400)),this.requiredAbilities.push(new C(70)),this.requiredAbilities.push(new C(y.Vitality,20)),this.requiredAbilities.push(new C(y.Intelligence,30));break;case E.LargeSword:this.effects.push(new S(l.ATKAdder,()=>30,()=>3)),this.effects.push(new S(l.ATKPropotion,()=>.25,()=>.01)),this.effects.push(new S(l.WarriorSkillLevel,()=>5,()=>.1)),this.effects.push(new S(l.StoneGain,()=>1,()=>.2)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,100)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.LargeStaff:this.effects.push(new S(l.MATKAdder,()=>30,()=>3)),this.effects.push(new S(l.MATKPropotion,()=>.25,()=>.01)),this.effects.push(new S(l.WizardSkillLevel,()=>5,()=>.1)),this.effects.push(new S(l.CrystalGain,()=>1,()=>.2)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,100)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.LargeWing:this.effects.push(new S(l.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new S(l.LightDamage,()=>.2,()=>.005)),this.effects.push(new S(l.AngelSkillLevel,()=>5,()=>.1)),this.effects.push(new S(l.LeafGain,()=>1,()=>.2)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,50)),this.requiredAbilities.push(new C(y.Intelligence,50)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.LargeDagger:this.effects.push(new S(l.PhysicalDamage,()=>.2,()=>.005)),this.effects.push(new S(l.DarkDamage,()=>.2,()=>.005)),this.effects.push(new S(l.ThiefSkillLevel,()=>5,()=>.1)),this.effects.push(new S(l.StoneGain,()=>1,()=>.2)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,50)),this.requiredAbilities.push(new C(y.Intelligence,50)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.LargeBow:this.effects.push(new S(l.FireDamage,()=>.2,()=>.005)),this.effects.push(new S(l.IceDamage,()=>.2,()=>.005)),this.effects.push(new S(l.ThunderDamage,()=>.2,()=>.005)),this.effects.push(new S(l.ArcherSkillLevel,()=>5,()=>.1)),this.effects.push(new S(l.CrystalGain,()=>1,()=>.2)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Intelligence,100)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.LargeOcarina:this.effects.push(new S(l.TamingPoint,()=>.1,()=>.005)),this.effects.push(new S(l.TamerSkillLevel,()=>5,()=>.1)),this.effects.push(new S(l.LeafGain,()=>1,()=>.2)),this.requiredAbilities.push(new C(150)),this.requiredAbilities.push(new C(y.Vitality,50)),this.requiredAbilities.push(new C(y.Strength,50)),this.requiredAbilities.push(new C(y.Intelligence,50)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.FairyClothes:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.TownMatGain,()=>.05,()=>1/400)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Intelligence,50)),this.requiredAbilities.push(new C(y.Luck,200));break;case E.FairyStaff:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.CrystalGain,()=>2,()=>.2)),this.effects.push(new S(l.MATKMultiplier,()=>.1,()=>.01)),this.effects.push(new S(l.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Intelligence,150)),this.requiredAbilities.push(new C(y.Luck,100));break;case E.FairyBoots:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.MoveSpeedAdder,()=>20,()=>1)),this.effects.push(new S(l.LightResistance,()=>.1,()=>1/400)),this.effects.push(new S(l.LightAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Vitality,100)),this.requiredAbilities.push(new C(y.Intelligence,50)),this.requiredAbilities.push(new C(y.Agility,100));break;case E.FairyGlove:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.SkillProficiency,()=>.15,()=>.005)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Intelligence,150)),this.requiredAbilities.push(new C(y.Luck,100));break;case E.FairyBrooch:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.EXPGain,()=>.3,()=>.015)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Luck,250));break;case E.FairyLamp:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.TownMatAreaClearGain,()=>2,()=>.1)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Intelligence,50)),this.requiredAbilities.push(new C(y.Luck,200));break;case E.FairyWing:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.LeafGain,()=>2,()=>.2)),this.effects.push(new S(l.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.ATKPropotion,()=>.25,()=>.01)),this.effects.push(new S(l.MATKMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.MATKPropotion,()=>.25,()=>.01)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Strength,100)),this.requiredAbilities.push(new C(y.Intelligence,100)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.FairyShuriken:this.setKind=we.Fairy,this.effects.push(new S(l.MPAdder,()=>100,()=>10)),this.effects.push(new S(l.StoneGain,()=>2,()=>.2)),this.effects.push(new S(l.ATKMultiplier,()=>.1,()=>.01)),this.effects.push(new S(l.ATKPropotion,()=>.5,()=>.02)),this.effects.push(new S(l.FairyKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FairyDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(200)),this.requiredAbilities.push(new C(y.Strength,150)),this.requiredAbilities.push(new C(y.Luck,100));break;case E.FoxKanzashi:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.BlessingEffect,()=>.1,()=>1/400)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Vitality,200)),this.requiredAbilities.push(new C(y.Luck,200));break;case E.FoxLoincloth:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.EXPGain,()=>.5,()=>.025)),this.effects.push(new S(l.DEFMultiplier,()=>-.2,()=>.002)),this.effects.push(new S(l.MDEFMultiplier,()=>-.2,()=>.002)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Agility,200)),this.requiredAbilities.push(new C(y.Luck,200));break;case E.FoxMask:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.MPMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.MpRegen,()=>100,()=>10)),this.effects.push(new S(l.PhysicalAbsorption,()=>.02,()=>1e-4)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Vitality,200)),this.requiredAbilities.push(new C(y.Intelligence,150)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.FoxHamayayumi:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.CriticalDamage,()=>.2,()=>.005)),this.effects.push(new S(l.ArcherSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.DebuffResistance,()=>.05,()=>5e-4)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Strength,150)),this.requiredAbilities.push(new C(y.Intelligence,150)),this.requiredAbilities.push(new C(y.Agility,50)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.FoxHat:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.HPAdder,()=>500,()=>20)),this.effects.push(new S(l.HPMultiplier,()=>.05,()=>.001)),this.effects.push(new S(l.HpRegen,()=>10,()=>1)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Vitality,350)),this.requiredAbilities.push(new C(y.Luck,50));break;case E.FoxCoat:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.IceResistance,()=>.15,()=>1/400)),this.effects.push(new S(l.ThunderResistance,()=>.15,()=>1/400)),this.effects.push(new S(l.LightResistance,()=>.15,()=>1/400)),this.effects.push(new S(l.ThunderAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Vitality,200)),this.requiredAbilities.push(new C(y.Intelligence,100)),this.requiredAbilities.push(new C(y.Luck,100));break;case E.FoxBoot:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.2,()=>.002)),this.effects.push(new S(l.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new S(l.ThunderDamage,()=>.25,()=>.005)),this.effects.push(new S(l.LightDamage,()=>.25,()=>.005)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Vitality,200)),this.requiredAbilities.push(new C(y.Intelligence,200));break;case E.FoxEma:this.setKind=we.Fox,this.effects.push(new S(l.GoldGain,()=>.05,()=>.005)),this.effects.push(new S(l.BlessingEffect,()=>.05,()=>1/400)),this.effects.push(new S(l.EquipmentDropChance,()=>15e-5,()=>1e-6)),this.effects.push(new S(l.FoxKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FoxDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(250)),this.requiredAbilities.push(new C(y.Luck,400));break;case E.DevilfishSword:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.ATKMultiplier,()=>-.2,()=>.002)),this.effects.push(new S(l.MATKMultiplier,()=>-.2,()=>.002)),this.effects.push(new S(l.PhysicalCritical,()=>.25,()=>.005)),this.effects.push(new S(l.MagicalCritical,()=>.25,()=>.005)),this.effects.push(new S(l.CriticalDamage,()=>.1,()=>.005)),this.effects.push(new S(l.WarriorSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Strength,200)),this.requiredAbilities.push(new C(y.Intelligence,200)),this.requiredAbilities.push(new C(y.Luck,200));break;case E.DevilfishWing:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.HPMultiplier,()=>.025,()=>.001)),this.effects.push(new S(l.ATKMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.MATKMultiplier,()=>.05,()=>.005)),this.effects.push(new S(l.FireResistance,()=>.15,()=>1/400)),this.effects.push(new S(l.AngelSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Vitality,200)),this.requiredAbilities.push(new C(y.Strength,200)),this.requiredAbilities.push(new C(y.Intelligence,200));break;case E.DevilfishRecorder:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.MATKPropotion,()=>.5,()=>.02)),this.effects.push(new S(l.IceDamage,()=>.25,()=>.005)),this.effects.push(new S(l.DarkDamage,()=>.25,()=>.005)),this.effects.push(new S(l.MPMultiplier,()=>-.2,()=>.002)),this.effects.push(new S(l.TamerSkillLevel,()=>5,()=>.2)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Vitality,200)),this.requiredAbilities.push(new C(y.Intelligence,400));break;case E.DevilfishArmor:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.DEFAdder,()=>50,()=>5)),this.effects.push(new S(l.MDEFAdder,()=>50,()=>5)),this.effects.push(new S(l.HPMultiplier,()=>.025,()=>.001)),this.effects.push(new S(l.FireResistance,()=>.15,()=>1/400)),this.effects.push(new S(l.DarkResistance,()=>.15,()=>1/400)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Vitality,600));break;case E.DevilfishScarf:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.DEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new S(l.DEFPropotion,()=>.1,()=>.01)),this.effects.push(new S(l.MDEFMultiplier,()=>.025,()=>1/400)),this.effects.push(new S(l.MDEFPropotion,()=>.1,()=>.01)),this.effects.push(new S(l.IceDamage,()=>.05,()=>1/400)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Vitality,300)),this.requiredAbilities.push(new C(y.Strength,150)),this.requiredAbilities.push(new C(y.Intelligence,150));break;case E.DevilfishGill:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.IceDamage,()=>.05,()=>1/400)),this.effects.push(new S(l.FireAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.IceAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.DarkAbsorption,()=>.025,()=>5e-4)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Vitality,350)),this.requiredAbilities.push(new C(y.Intelligence,250));break;case E.DevilfishPendant:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.GoldGain,()=>.2,()=>.02)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Luck,600));break;case E.DevilfishRing:this.setKind=we.Devilfish,this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.DebuffResistance,()=>.15,()=>.0015)),this.effects.push(new S(l.StoneGain,()=>3,()=>.5)),this.effects.push(new S(l.CrystalGain,()=>3,()=>.5)),this.effects.push(new S(l.LeafGain,()=>3,()=>.5)),this.effects.push(new S(l.DevilFishKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.DevilFishDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(300)),this.requiredAbilities.push(new C(y.Vitality,400)),this.requiredAbilities.push(new C(y.Luck,200));break;case E.TreantAmulet:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.StoneGain,()=>100,()=>1)),this.effects.push(new S(l.CrystalGain,()=>100,()=>1)),this.effects.push(new S(l.LeafGain,()=>100,()=>1)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,500)),this.requiredAbilities.push(new C(y.Luck,1e3));break;case E.TreantHagoita:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.TamingPoint,()=>.25,()=>.025)),this.effects.push(new S(l.PetEXPGain,()=>.25,()=>.025)),this.effects.push(new S(l.LoyaltyPointGain,()=>.25,()=>.025)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,500)),this.requiredAbilities.push(new C(y.Strength,500)),this.requiredAbilities.push(new C(y.Intelligence,500));break;case E.TreantChoppingBoard:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.HPAdder,()=>200,()=>20)),this.effects.push(new S(l.DEFAdder,()=>100,()=>10)),this.effects.push(new S(l.MDEFAdder,()=>100,()=>10)),this.effects.push(new S(l.DEFMultiplier,()=>.1,()=>.01)),this.effects.push(new S(l.MDEFMultiplier,()=>.1,()=>.01)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,1e3)),this.requiredAbilities.push(new C(y.Strength,250)),this.requiredAbilities.push(new C(y.Intelligence,250));break;case E.TreantDagger:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.PhysicalDamage,()=>1,()=>.01)),this.effects.push(new S(l.FireDamage,()=>1,()=>.01)),this.effects.push(new S(l.IceDamage,()=>1,()=>.01)),this.effects.push(new S(l.ThunderDamage,()=>1,()=>.01)),this.effects.push(new S(l.LightDamage,()=>1,()=>.01)),this.effects.push(new S(l.DarkDamage,()=>1,()=>.01)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Strength,750)),this.requiredAbilities.push(new C(y.Intelligence,750));break;case E.TreantHaniwa:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.HPAdder,()=>1e3,()=>50)),this.effects.push(new S(l.HPMultiplier,()=>.1,()=>.005)),this.effects.push(new S(l.HpRegen,()=>250,()=>25)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,1500));break;case E.TreantKokeshi:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.ColorMaterialDropChance,()=>1e-4,()=>1e-6)),this.effects.push(new S(l.CriticalDamage,()=>1,()=>.01)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,500)),this.requiredAbilities.push(new C(y.Luck,1e3));break;case E.TreantLamp:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.GoldGain,()=>.5,()=>.025)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,500)),this.requiredAbilities.push(new C(y.Strength,250)),this.requiredAbilities.push(new C(y.Intelligence,250)),this.requiredAbilities.push(new C(y.Luck,500));break;case E.TreantLunchbox:this.setKind=we.Treant,this.effects.push(new S(l.SPDAdder,()=>-3600,()=>30)),this.effects.push(new S(l.MoveSpeedAdder,()=>-120,()=>1)),this.effects.push(new S(l.MoveSpeedMultiplier,()=>-.06,()=>5e-4)),this.effects.push(new S(l.CatalystDoubleCriticalChance,()=>.025,()=>5e-4)),this.effects.push(new S(l.TreantKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.TreantDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(350)),this.requiredAbilities.push(new C(y.Vitality,500)),this.requiredAbilities.push(new C(y.Luck,1e3));break;case E.FlametigerPortableHotSpring:this.setKind=we.Flametiger,this.effects.push(new S(l.SkillProficiency,()=>-2,()=>.005)),this.effects.push(new S(l.HPAdder,()=>5e3,()=>500)),this.effects.push(new S(l.MPAdder,()=>2e3,()=>200)),this.effects.push(new S(l.HPMultiplier,()=>.5,()=>.01)),this.effects.push(new S(l.MPMultiplier,()=>.5,()=>.01)),this.effects.push(new S(l.HpRegenMultiplier,()=>.001,()=>5e-5)),this.effects.push(new S(l.MpRegenMultiplier,()=>.001,()=>5e-5)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Vitality,5e5));break;case E.FlametigerVolcanicShield:this.setKind=we.Flametiger,this.effects.push(new S(l.EXPGain,()=>-2,()=>.005)),this.effects.push(new S(l.PhysicalDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.ArmoredFury,()=>.025,()=>.001)),this.effects.push(new S(l.DEFAdder,()=>200,()=>20)),this.effects.push(new S(l.DEFMultiplier,()=>.2,()=>.02)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Vitality,25e4)),this.requiredAbilities.push(new C(y.Strength,25e4));break;case E.FlametigerStripedBriefs:this.setKind=we.Flametiger,this.effects.push(new S(l.DebuffResistance,()=>-4,()=>.01)),this.effects.push(new S(l.PhysicalCriticalMultiplier,()=>.025,()=>5e-4)),this.effects.push(new S(l.MagicalCriticalMultiplier,()=>.025,()=>5e-4)),this.effects.push(new S(l.EXPGainMultiplier,()=>.1,()=>.005)),this.effects.push(new S(l.GoldGainMultiplier,()=>.1,()=>.005)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Luck,5e5));break;case E.TorchOfEverburningFlametiger:this.setKind=we.Flametiger,this.effects.push(new S(l.GoldGain,()=>-2,()=>.005)),this.effects.push(new S(l.WarriorSkillRange,()=>.001,()=>25e-6)),this.effects.push(new S(l.WizardSkillRange,()=>.001,()=>25e-6)),this.effects.push(new S(l.AngelSkillRange,()=>.001,()=>25e-6)),this.effects.push(new S(l.ThiefSkillRange,()=>.001,()=>25e-6)),this.effects.push(new S(l.ArcherSkillRange,()=>.001,()=>25e-6)),this.effects.push(new S(l.TamerSkillRange,()=>.001,()=>25e-6)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Strength,1e5)),this.requiredAbilities.push(new C(y.Intelligence,1e5)),this.requiredAbilities.push(new C(y.Agility,3e5));break;case E.FlametigerCostume:this.setKind=we.Flametiger,this.effects.push(new S(l.EquipmentProficiency,()=>-2,()=>.005)),this.effects.push(new S(l.PetPhysicalCriticalChance,()=>.1,()=>.005)),this.effects.push(new S(l.PetMagicalCriticalChance,()=>.1,()=>.005)),this.effects.push(new S(l.PetCriticalDamage,()=>.3,()=>.005)),this.effects.push(new S(l.TamingPointMultiplier,()=>.1,()=>.005)),this.effects.push(new S(l.PetEXPGainMultiplier,()=>.1,()=>.005)),this.effects.push(new S(l.LoyaltyPointGainMultiplier,()=>.1,()=>.005)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Vitality,1e5)),this.requiredAbilities.push(new C(y.Agility,2e5)),this.requiredAbilities.push(new C(y.Luck,2e5));break;case E.RingOfFlametigersWrath:this.setKind=we.Flametiger,this.effects.push(new S(l.EXPGain,()=>-2,()=>.005)),this.effects.push(new S(l.FireDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.IceDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.ThunderDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.LightDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.DarkDamageMultiplier,()=>.01,()=>.001)),this.effects.push(new S(l.WardedFury,()=>.025,()=>.001)),this.effects.push(new S(l.MDEFAdder,()=>200,()=>20)),this.effects.push(new S(l.MDEFMultiplier,()=>.2,()=>.02)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Vitality,25e4)),this.requiredAbilities.push(new C(y.Intelligence,25e4));break;case E.EndlessBowlOfSpicyFlametigerRamen:this.setKind=we.Flametiger,this.effects.push(new S(l.TamingPoint,()=>-10,()=>.025)),this.effects.push(new S(l.LoyaltyPointGain,()=>-10,()=>.025)),this.effects.push(new S(l.StoneTownResearchPower,()=>.025,()=>.001)),this.effects.push(new S(l.CrystalTownResearchPower,()=>.025,()=>.001)),this.effects.push(new S(l.LeafTownResearchPower,()=>.025,()=>.001)),this.effects.push(new S(l.BlessingEffectMultiplier,()=>.01,()=>25e-5)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Vitality,1e5)),this.requiredAbilities.push(new C(y.Agility,4e5));break;case E.ScreenOfTheSneakyFlametiger:this.setKind=we.Flametiger,this.effects.push(new S(l.AllSkillLevel,()=>-1e3,()=>2.5)),this.effects.push(new S(l.GoldGainMultiplier,()=>.05,()=>1/400)),this.effects.push(new S(l.GuildEXPGain,()=>.005,()=>25e-5)),this.effects.push(new S(l.FlameTigerKnowledge,()=>.2,()=>.005)),this.effects.push(new S(l.FlameTigerDropChance,()=>5e-4,()=>5e-5)),this.requiredAbilities.push(new C(700)),this.requiredAbilities.push(new C(y.Agility,25e4)),this.requiredAbilities.push(new C(y.Luck,25e4));break;case E.ModifiedSword:this.isArtifact=!0,this.effects.push(new S(l.MPAfter,()=>25,()=>5)),this.effects.push(new S(l.ATKAfter,()=>50,()=>10)),this.requiredAbilities.push(new C(10,!0)),this.requiredAbilities.push(new C(y.Strength,5,!0));break;case E.ModifiedStaff:this.isArtifact=!0,this.effects.push(new S(l.HPAfter,()=>50,()=>10)),this.effects.push(new S(l.MATKAfter,()=>50,()=>10)),this.requiredAbilities.push(new C(10,!0)),this.requiredAbilities.push(new C(y.Intelligence,5,!0));break;case E.ModifiedWing:this.isArtifact=!0,this.effects.push(new S(l.HPAfter,()=>50,()=>10)),this.effects.push(new S(l.MPAfter,()=>25,()=>5)),this.effects.push(new S(l.SDDamageCutMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new C(10,!0)),this.requiredAbilities.push(new C(y.Vitality,5,!0));break;case E.ModifiedDart:this.isArtifact=!0,this.effects.push(new S(l.MPAfter,()=>10,()=>2)),this.effects.push(new S(l.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new C(10,!0)),this.requiredAbilities.push(new C(y.Agility,3,!0)),this.requiredAbilities.push(new C(y.Luck,2,!0));break;case E.ModifiedBow:this.isArtifact=!0,this.effects.push(new S(l.HPAfter,()=>25,()=>5)),this.effects.push(new S(l.DEFAfter,()=>25,()=>5)),this.effects.push(new S(l.MDEFAfter,()=>25,()=>5)),this.effects.push(new S(l.SDDamageMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new C(10,!0)),this.requiredAbilities.push(new C(y.Vitality,1,!0)),this.requiredAbilities.push(new C(y.Strength,2,!0)),this.requiredAbilities.push(new C(y.Intelligence,2,!0));break;case E.ModifiedRecorder:this.isArtifact=!0,this.effects.push(new S(l.HPAfter,()=>50,()=>10)),this.effects.push(new S(l.MPAfter,()=>25,()=>5)),this.effects.push(new S(l.FameGain,()=>.05,()=>.01)),this.requiredAbilities.push(new C(10,!0)),this.requiredAbilities.push(new C(y.Luck,5,!0));break;case E.AncientCloak:this.isArtifact=!0,this.effects.push(new S(l.HPAfter,()=>200,()=>40)),this.effects.push(new S(l.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new C(20,!0)),this.requiredAbilities.push(new C(y.Vitality,10,!0)),this.requiredAbilities.push(new C(y.Agility,5,!0)),this.requiredAbilities.push(new C(y.Luck,5,!0));break;case E.AncientBelt:this.isArtifact=!0,this.effects.push(new S(l.DEFAfter,()=>50,()=>10)),this.effects.push(new S(l.MDEFAfter,()=>50,()=>10)),this.effects.push(new S(l.SDDamageCutMultiplier,()=>.2,()=>.1)),this.requiredAbilities.push(new C(20,!0)),this.requiredAbilities.push(new C(y.Vitality,20,!0));break;case E.AncientShoes:this.isArtifact=!0,this.effects.push(new S(l.SPDAfter,()=>25,()=>5)),this.effects.push(new S(l.MoveSpeedAfter,()=>20,()=>4)),this.effects.push(new S(l.FameGain,()=>.02,()=>.004)),this.requiredAbilities.push(new C(30,!0)),this.requiredAbilities.push(new C(y.Agility,20,!0)),this.requiredAbilities.push(new C(y.Luck,10,!0));break;case E.AncientRing:this.isArtifact=!0,this.effects.push(new S(l.ATKAfter,()=>10,()=>2.5)),this.effects.push(new S(l.MATKAfter,()=>10,()=>2.5)),this.effects.push(new S(l.ChallengeBossKnowledgeAfter,()=>.5,()=>.25)),this.requiredAbilities.push(new C(40,!0)),this.requiredAbilities.push(new C(y.Strength,10,!0)),this.requiredAbilities.push(new C(y.Intelligence,10,!0)),this.requiredAbilities.push(new C(y.Agility,10,!0)),this.requiredAbilities.push(new C(y.Luck,10,!0));break;case E.AncientEarring:this.isArtifact=!0,this.effects.push(new S(l.SDDamageMultiplier,()=>.1,()=>.05)),this.effects.push(new S(l.FameGain,()=>.05,()=>.01)),this.requiredAbilities.push(new C(40,!0)),this.requiredAbilities.push(new C(y.Agility,10,!0)),this.requiredAbilities.push(new C(y.Luck,30,!0));break}}SetLevelMaxEffect(){if(this.isArtifact)switch(this.rarity){case Q.Rare:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.ATKAfter,()=>50,()=>0,!0),this.levelMaxEffects[1]=new S(l.MATKAfter,()=>50,()=>0,!0),this.levelMaxEffects[2]=new S(l.MPAfter,()=>50,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.PhysicalCriticalAfter,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new S(l.MagicalCriticalAfter,()=>.01,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.DEFAfter,()=>50,()=>0,!0),this.levelMaxEffects[1]=new S(l.MDEFAfter,()=>50,()=>0,!0),this.levelMaxEffects[2]=new S(l.HPAfter,()=>200,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAfter,()=>50,()=>0,!0),this.levelMaxEffects[5]=new S(l.MoveSpeedAfter,()=>50,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.FireResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.IceResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.ThunderResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.LightResistanceAfter,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new S(l.DarkResistanceAfter,()=>.05,()=>0,!0);return;default:return}case Q.SuperRare:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.ATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new S(l.MATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new S(l.CriticalDamage,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPoint,()=>.5,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.DEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new S(l.MDEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new S(l.GoldGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new S(l.EquipmentProficiency,()=>.1,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.EXPGain,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new S(l.SkillProficiency,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new S(l.RebirthPointGain2,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.TownMatGain,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new S(l.PetEXPGain,()=>.25,()=>0,!0);return;default:return}case Q.Epic:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.StoneTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.CrystalTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.LeafTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDMultiplier,()=>.3,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPointMultiplier,()=>.25,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.ArmoredFury,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.WardedFury,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.GoldGainMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new S(l.GuildEXPGain,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new S(l.PetEXPGainMultiplier,()=>.25,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.EXPGainMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new S(l.SkillProficiencyMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new S(l.RebirthPointGain3,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new S(l.EquipmentProficiencyMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[5]=new S(l.LoyaltyPointGainMultiplier,()=>.25,()=>0,!0);return;default:return}}else switch(this.rarity){case Q.Common:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.ATKAdder,()=>15,()=>0,!0),this.levelMaxEffects[1]=new S(l.MATKAdder,()=>15,()=>0,!0),this.levelMaxEffects[2]=new S(l.AllSkillLevel,()=>1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>20,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPoint,()=>.05,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.HPAdder,()=>100,()=>0,!0),this.levelMaxEffects[1]=new S(l.MPAdder,()=>50,()=>0,!0),this.levelMaxEffects[2]=new S(l.HpRegen,()=>5,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new S(l.MpRegen,()=>20,()=>0,!0),this.levelMaxEffects[5]=new S(l.LoyaltyPointGain,()=>.05,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.StoneGain,()=>1,()=>0,!0),this.levelMaxEffects[1]=new S(l.CrystalGain,()=>1,()=>0,!0),this.levelMaxEffects[2]=new S(l.LeafGain,()=>1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new S(l.TownMatAreaClearGain,()=>1,()=>0,!0),this.levelMaxEffects[5]=new S(l.PetEXPGain,()=>.05,()=>0,!0);return;default:return}case Q.Uncommon:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.ATKMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.MATKMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.SkillProficiency,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>50,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPoint,()=>.1,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.DEFAdder,()=>25,()=>0,!0),this.levelMaxEffects[1]=new S(l.MDEFAdder,()=>25,()=>0,!0),this.levelMaxEffects[2]=new S(l.GoldGain,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>50,()=>0,!0),this.levelMaxEffects[5]=new S(l.EquipmentProficiency,()=>.025,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.HPMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.MPMultiplier,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.EXPGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>1,()=>0,!0),this.levelMaxEffects[4]=new S(l.TownMatGain,()=>.025,()=>0,!0),this.levelMaxEffects[5]=new S(l.PetEXPGain,()=>.1,()=>0,!0);return;default:return}case Q.Rare:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.ATKPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new S(l.MATKPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new S(l.SkillProficiency,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>100,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPoint,()=>.25,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.DEFMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[1]=new S(l.MDEFMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new S(l.HpRegen,()=>10,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>100,()=>0,!0),this.levelMaxEffects[5]=new S(l.EquipmentProficiency,()=>.05,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.HPMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[1]=new S(l.MPMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new S(l.RebirthPointGain1,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.TownMatAreaClearGain,()=>2,()=>0,!0),this.levelMaxEffects[5]=new S(l.LoyaltyPointGain,()=>.2,()=>0,!0);return;default:return}case Q.SuperRare:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.ATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new S(l.MATKMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new S(l.CriticalDamage,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPoint,()=>.5,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.DEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new S(l.MDEFPropotion,()=>.25,()=>0,!0),this.levelMaxEffects[2]=new S(l.GoldGain,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDAdder,()=>200,()=>0,!0),this.levelMaxEffects[5]=new S(l.EquipmentProficiency,()=>.1,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.EXPGain,()=>.25,()=>0,!0),this.levelMaxEffects[1]=new S(l.SkillProficiency,()=>.1,()=>0,!0),this.levelMaxEffects[2]=new S(l.RebirthPointGain2,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>2,()=>0,!0),this.levelMaxEffects[4]=new S(l.TownMatGain,()=>.05,()=>0,!0),this.levelMaxEffects[5]=new S(l.PetEXPGain,()=>.25,()=>0,!0);return;default:return}case Q.Epic:switch(this.part){case V.Weapon:this.levelMaxEffects[0]=new S(l.StoneTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.CrystalTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.LeafTownResearchPower,()=>.05,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new S(l.SPDMultiplier,()=>.3,()=>0,!0),this.levelMaxEffects[5]=new S(l.TamingPointMultiplier,()=>.25,()=>0,!0);return;case V.Armor:this.levelMaxEffects[0]=new S(l.ArmoredFury,()=>.05,()=>0,!0),this.levelMaxEffects[1]=new S(l.WardedFury,()=>.05,()=>0,!0),this.levelMaxEffects[2]=new S(l.GoldGainMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new S(l.GuildEXPGain,()=>.01,()=>0,!0),this.levelMaxEffects[5]=new S(l.PetEXPGainMultiplier,()=>.25,()=>0,!0);return;case V.Jewelry:this.levelMaxEffects[0]=new S(l.EXPGainMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[1]=new S(l.SkillProficiencyMultiplier,()=>.2,()=>0,!0),this.levelMaxEffects[2]=new S(l.RebirthPointGain3,()=>.025,()=>0,!0),this.levelMaxEffects[3]=new S(l.Nothing,()=>3,()=>0,!0),this.levelMaxEffects[4]=new S(l.EquipmentProficiencyMultiplier,()=>.1,()=>0,!0),this.levelMaxEffects[5]=new S(l.LoyaltyPointGainMultiplier,()=>.25,()=>0,!0);return;default:return}}}DisassembleMaterialNum(){return this.isArtifact?1+this.TotalLevel():Math.max(1,Math.floor((this.TotalLevel()+this.requiredAbilities[0].requiredValue/2)/4))}CraftCostMaterialNum(){let t=this.DisassembleMaterialNum()*500*(1-this.data.craft.costReduction.Value())*(1+this.rarity*2);return this.rarity>=Q.Epic&&(t*=1e6),t<this.DisassembleMaterialNum()*this.data.equipment.disassembleMultiplier.Value()*4&&(t=this.DisassembleMaterialNum()*this.data.equipment.disassembleMultiplier.Value()*4),t}TotalLevel(){let t=0;for(let i=0;i<this.levels.length;i++)t+=this.levels[i].value;return t}RequiredProficiency(t,i){let r=Math.pow(3,this.rarity)*(1+1.5*this.rarity)*300*(i*(1+this.rarity)+1);return this.rarity>=Q.Epic&&(r*=1e4*Math.pow(10,i/10)),i<=10?r:r*Math.pow(2,i-10)}ForgeSlotNum(){return this.TotalLevel()<60?0:this.TotalLevel()<80?1:this.TotalLevel()<100?2:this.TotalLevel()<120?3:this.TotalLevel()<140?4:this.TotalLevel()<160?5:6}MasteryNum(){let t=0;for(let i=0;i<this.levels.length;i++)this.levels[i].isMaxed&&t++;return t}}class dC{constructor(t){o(this,"data");o(this,"globalInformations",Array(W.EquipmentKind));o(this,"setItemArray",Array(W.EquipmentSetKind));o(this,"dictionaryUpgradeEffectMultiplier");o(this,"equipments",[]);o(this,"activeEquipments",Array(W.HeroKind));o(this,"dictionaryUpgradeMaxLevel");o(this,"dictionaryPointLeft");o(this,"dictionaryUpgrades",Array(W.DictionaryUpgradeKind));o(this,"artifactChance");o(this,"sdEnchantChance");o(this,"loadoutUnlockedNum");o(this,"effectMultiplier");o(this,"effectMultiplierModifierForArtifact");o(this,"forgeEffectCapAdderEQEffect");o(this,"forgeEffectCapAdderEffectIncrement");o(this,"forgeEffectCapAdderEQLevel");o(this,"maxLevels",Array(W.HeroKind));o(this,"disassembleMultiplier");o(this,"autoDisassembleAvailableNum");o(this,"dictionaryEquipmentArray");this.data=t;for(let i=0;i<this.globalInformations.length;i++)this.globalInformations[i]=new pC(this.data,i);this.autoDisassembleAvailableNum=new $,this.forgeEffectCapAdderEQLevel=new $,this.forgeEffectCapAdderEffectIncrement=new $,this.forgeEffectCapAdderEQEffect=new $,this.loadoutUnlockedNum=new $,this.dictionaryUpgradeEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.dictionaryUpgradeMaxLevel=new $(new u(n.Base,s.Add,()=>50)),this.effectMultiplierModifierForArtifact=new $,this.effectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.effectMultiplier.name="Equipment Effect",this.disassembleMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.artifactChance=new $(new u(n.Base,s.Add,()=>.01)),this.sdEnchantChance=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<this.maxLevels.length;i++)this.maxLevels[i]=new $(new u(n.Base,s.Add,()=>zt.maxLevelForEachHero));for(let i=0;i<W.EquipmentSetKind;i++)this.setItemArray[i]=this.SetItemList(i);for(let i=0;i<this.dictionaryUpgrades.length;++i)this.dictionaryUpgrades[i]=new oC(this,i)}SetItemList(t){let i=[];for(let r=0;r<this.globalInformations.length;r++)this.globalInformations[r].setKind==t&&i.push(this.globalInformations[r].kind);return i}Start(){for(let t=0;t<this.dictionaryUpgrades.length;t++)this.dictionaryUpgrades[t].Start()}EffectMultiplier(){return this.data.source.isSuperDungeon&&this.data.source.isActiveSdModifiers[950+bt.RemoveEquipmentEffectBonuses]?1:this.effectMultiplier.Value()}ArtifactEffectMultiplier(){return 1+(this.EffectMultiplier()-1)*this.effectMultiplierModifierForArtifact.Value()}get currentLoadoutInitialOffset(){return 520+this.data.source.currentHero*720+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72}}const Mt={colorDropChanceBase:.001,dropChanceBase:.01,ColorFactor(e){switch(e){case At.Normal:return 1;case At.Blue:return 1.25;case At.Yellow:return 1.25;case At.Red:return 1.5;case At.Green:return 2.5;case At.Purple:return 3;case At.Boss:return 10;case At.Metal:return 500;default:return 1}},SpeciesFactor(e){switch(e){case se.Slime:return 1;case se.MagicSlime:return 1.15;case se.Spider:return .8;case se.Bat:return 1.35;case se.Fairy:return 1.5;case se.Fox:return 1.75;case se.DevilFish:return 2.35;case se.Treant:return 3;case se.FlameTiger:return 5;case se.Unicorn:return 7;case se.Mimic:return 10;case se.ChallengeBoss:return 5;default:return 1}},PetPassiveEffectMaxValue(e){switch(e){case O.TamingPointGain:return 1e3;case O.DoubleMaterialChance:return 1;case O.DisassembleTownMatGain:return 10;case O.ChestPortalOrbChance:return .005;default:return 1e300}},PetPassiveEffectValue(e,t){switch(e){case O.ResourceGain:return .1*t;case O.PotionEffect:return .005*t;case O.TamingPointGain:return .05*t;case O.GoldCap:return .025*t;case O.GoldGain:return .025*t;case O.ExpGain:return .1*t;case O.DoubleMaterialChance:return 5e-4*t;case O.GoldGainOnDisassemblePotion:return .05*t;case O.DisassembleTownMatGain:return .01*t;case O.TownMatGainFromDungeonReward:return .01*t;case O.OilOfSlimeDropChance:return .001*t;case O.EnchantedClothDropChance:return .001*t;case O.SpiderSilkDropChance:return .001*t;case O.BatWingDropChance:return .001*t;case O.FairyDustDropChance:return .001*t;case O.FoxTailDropChance:return .001*t;case O.FishScalesDropChance:return .001*t;case O.CarvedBranchDropChance:return .001*t;case O.ThickFurDropChance:return .001*t;case O.UnicornHornDropChance:return .001*t;case O.EquipProfGain:return .01*t;case O.MysteriousWaterGain:return .01*t;case O.ChestPortalOrbChance:return 1e-6*t;case O.SkillProfGain:return .01*t;case O.TownMatGain:return .01*t;case O.ResearchPowerStone:return .025*t;case O.ResearchPowerCrystal:return .025*t;case O.ResearchPowerLeaf:return .025*t;case O.CatalystCriticalChance:return .01*t;case O.MysteriousWaterCap:return 2*t;case O.BlessingEffect:return .02*t;case O.LoyaltyPointGain:return .025*t;case O.PetExpGain:return .05*t;case O.ExpeditionExpGain:return .005*t;case O.EssenceConversionRate:return .005*t;case O.SlimeCoinEfficiency:return .005*t;case O.SlimeCoinCap:return .025*t;case O.EquipmentEffect:return .001*t;case O.AlchemyPointGain:return .01*t;default:return 0}},PetPassiveEffectValue2(e){switch(e){case De.GoldGain2:return .001;case De.TamingPointGain2:return .001;case De.RareMatChanceForBlueSlime2:return .02;case De.RareMatChance2:return .001;case De.ChestPortalOrbNumber2:return 200;default:return 0}},petPassiveEffectKinds:[[O.ResourceGain,O.DoubleMaterialChance,O.OilOfSlimeDropChance,O.EquipProfGain,O.TownMatGain,O.GoldGain,O.Nothing,O.Nothing,O.Nothing],[O.PotionEffect,O.GoldGainOnDisassemblePotion,O.EnchantedClothDropChance,O.MysteriousWaterGain,O.ResearchPowerStone,O.ResearchPowerLeaf,O.Nothing,O.Nothing,O.Nothing],[O.TamingPointGain,O.TamingPointGain,O.SpiderSilkDropChance,O.TamingPointGain,O.TamingPointGain,O.TamingPointGain,O.Nothing,O.Nothing,O.Nothing],[O.GoldCap,O.DisassembleTownMatGain,O.BatWingDropChance,O.DisassembleTownMatGain,O.ResearchPowerCrystal,O.ResearchPowerCrystal,O.Nothing,O.Nothing,O.Nothing],[O.ExpGain,O.TownMatGainFromDungeonReward,O.FairyDustDropChance,O.ChestPortalOrbChance,O.TamingPointGain,O.TamingPointGain,O.Nothing,O.Nothing,O.Nothing],[O.GoldGain,O.DisassembleTownMatGain,O.FoxTailDropChance,O.SkillProfGain,O.ResearchPowerLeaf,O.ResearchPowerStone,O.Nothing,O.Nothing,O.Nothing],[O.CatalystCriticalChance,O.MysteriousWaterCap,O.FishScalesDropChance,O.PotionEffect,O.BlessingEffect,O.LoyaltyPointGain,O.Nothing,O.Nothing,O.Nothing],[O.ResourceGain,O.PetExpGain,O.CarvedBranchDropChance,O.SkillProfGain,O.LoyaltyPointGain,O.ExpeditionExpGain,O.Nothing,O.Nothing,O.Nothing],[O.EssenceConversionRate,O.SlimeCoinEfficiency,O.ThickFurDropChance,O.SlimeCoinCap,O.EquipmentEffect,O.AlchemyPointGain,O.Nothing,O.Nothing,O.Nothing],[O.Nothing,O.Nothing,O.UnicornHornDropChance,O.Nothing,O.Nothing,O.Nothing,O.Nothing,O.Nothing,O.Nothing],Array(9).fill(O.Nothing),Array(13).fill(O.Nothing)],petPassiveEffectKinds2:[[De.Nothing2,De.RareMatChanceForBlueSlime2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2],Array(9).fill(De.Nothing2),[De.TamingPointGain2,De.TamingPointGain2,De.Nothing2,De.TamingPointGain2,De.TamingPointGain2,De.TamingPointGain2,De.Nothing2,De.Nothing2,De.Nothing2],[De.Nothing2,De.RareMatChance2,De.Nothing2,De.RareMatChance2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2],[De.Nothing2,De.Nothing2,De.Nothing2,De.ChestPortalOrbNumber2,De.TamingPointGain2,De.TamingPointGain2,De.Nothing2,De.Nothing2,De.Nothing2],[De.Nothing2,De.RareMatChance2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2,De.Nothing2],Array(9).fill(De.Nothing2),Array(9).fill(De.Nothing2),Array(9).fill(De.Nothing2),Array(9).fill(De.Nothing2),Array(9).fill(De.Nothing2),Array(13).fill(De.Nothing2)],monsterAttackElements:[[F.Physical,F.Physical,F.Physical,F.Physical,F.Physical,F.Physical,F.Physical,F.Physical],[F.Ice,F.Ice,F.Thunder,F.Fire,F.Light,F.Dark,F.Fire,F.Physical],[F.Physical,F.Ice,F.Physical,F.Fire,F.Physical,F.Dark,F.Physical,F.Physical],[F.Fire,F.Ice,F.Thunder,F.Fire,F.Light,F.Dark,F.Dark,F.Physical],[F.Thunder,F.Physical,F.Thunder,F.Physical,F.Light,F.Physical,F.Thunder,F.Physical],[F.Physical,F.Ice,F.Physical,F.Fire,F.Physical,F.Dark,F.Physical,F.Physical],[F.Fire,F.Ice,F.Thunder,F.Fire,F.Light,F.Dark,F.Physical,F.Physical],[F.Physical,F.Ice,F.Physical,F.Fire,F.Physical,F.Dark,F.Physical,F.Physical],[F.Physical,F.Ice,F.Physical,F.Fire,F.Physical,F.Dark,F.Physical,F.Physical],[F.Physical],[F.Physical,F.Dark,F.Physical,F.Physical,F.Fire,F.Thunder,F.Physical,F.Physical,F.Physical,F.Physical]],monsterStats:[[[10,0,.5,0,0,0,5,-.5,-.5,-.5,-.5,-.5],[20,0,.75,0,0,0,5,-.5,-.5,-.5,-.5,-.5],[10,0,.5,0,0,0,7.5,-.5,-.5,-.5,-.5,-.5],[20,0,1.25,0,0,0,2.5,-.5,-.5,-.5,-.5,-.5],[30,0,.75,0,5,1,10,-.5,-.5,-.5,-.5,-.5],[50,0,2.5,0,5,1,2.5,-.5,-.5,-.5,-.5,-.5],[200,0,2.5,0,20,5,5,-.2,-.2,-.2,-.2,-.2],[1,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,.5,0,0,5,-.5,-.5,-.5,-.5,-.5],[20,0,0,.75,0,0,5,0,.5,-.5,0,0],[10,0,0,.5,0,0,7.5,-.5,0,.5,0,0],[20,0,0,1.25,0,0,2.5,.5,-.5,0,0,0],[30,0,0,.75,1,5,10,0,0,0,.5,-.5],[50,0,0,2.5,1,5,2.5,0,0,0,-.5,.5],[200,0,0,2.5,5,20,5,0,0,0,0,0],[2,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,1,0,2.5,.5,5,-.2,0,0,-.5,.5],[15,0,0,1,.5,2.5,5,-.2,.6,-.4,-.5,.5],[10,0,.75,0,2.5,.5,7.5,-.6,0,.6,-.5,.5],[15,0,0,1.5,.5,2.5,2.5,.4,-.4,0,-.5,.5],[20,0,1,0,5,1,10,-.2,0,0,-.5,.5],[30,0,0,3,1,5,2.5,-.2,0,0,-1,.9],[150,0,3.75,0,20,20,5,.5,.5,.5,-.5,.5],[3,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,.5,0,2.5,.5,20,-.2,-.2,-.2,-.5,0],[15,0,.5,0,2.5,.5,20,-.2,.5,-.2,-.5,0],[10,0,.4,0,2.5,.5,30,-.2,-.2,.5,-.5,0],[15,0,1,0,2.5,.5,10,.5,-.2,-.2,-.5,0],[20,0,.6,0,5,1,40,-.2,-.2,-.2,-.2,0],[30,0,1.5,0,5,1,10,-.2,-.2,-.2,-.5,.5],[150,0,2,0,20,5,40,0,0,0,-.5,0],[4,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,0,.5,.5,2.5,20,0,0,0,.5,-.5],[15,0,0,.5,.5,2.5,20,0,.5,-.2,.5,-.5],[10,0,0,.4,.5,2.5,30,-.2,0,.5,.5,-.5],[15,0,0,1,.5,2.5,10,.5,-.2,0,.5,-.5],[20,0,0,.6,1,5,40,0,0,0,.9,-.5],[30,0,0,1.5,1,5,10,0,0,0,.5,-.2],[150,0,0,2,5,20,40,.2,.2,.2,.9,-.2],[5,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,1,1,1,5,-.2,.1,.8,.5,-.25],[20,0,1.5,0,1,1,5,-.2,.1,.25,.5,-.25],[10,0,0,1,1,1,7.5,-.2,.1,.8,.5,-.25],[20,0,2.5,0,1,1,2.5,-.2,.1,.5,.5,-.25],[30,0,0,1.5,2,2,10,-.2,.1,.5,.9,-.25],[50,0,5,0,2,2,2.5,-.2,.1,.5,.5,-.25],[200,0,0,5,5,5,5,0,.5,.9,.9,-.1],[6,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[25,0,.5,0,10,10,2.5,.5,.2,-.5,-.25,.8],[50,0,0,.75,10,10,2.5,.5,.5,-.5,-.25,.8],[25,0,.5,0,10,10,3.5,.5,.2,-.5,-.25,.8],[50,0,0,1.25,10,10,1.5,.5,.2,-.5,-.25,.8],[75,0,.75,0,25,25,3.5,.5,.2,-.5,-.25,.8],[125,0,0,2.5,25,25,1.5,.5,.2,-.5,-.25,.9],[500,0,2.5,0,50,50,2.5,.9,.5,-.2,0,.9],[7,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[50,0,.75,0,40,40,2,-.25,.2,.2,-.25,.8],[100,0,1,0,40,40,2,-.25,.2,.2,-.25,.8],[50,0,.75,0,40,40,3,-.25,.2,.2,-.25,.8],[100,0,1.5,0,40,40,1.25,-.25,.2,.2,-.25,.8],[150,0,1,0,100,100,3,-.25,.2,.2,-.25,.8],[250,0,3,0,100,100,1.25,-.25,.2,.2,-.25,.9],[1e3,0,3,0,100,100,2.5,0,.5,.5,0,.9],[8,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[10,0,0,1,0,.5,10,.5,.5,.5,.5,.5],[20,0,0,1.5,0,.5,10,.5,.9,.5,.5,.5],[10,0,0,1,0,.5,15,.5,.5,.9,.5,.5],[20,0,0,2.5,0,.5,5,.9,.5,.5,.5,.5],[30,0,0,1.5,0,1,20,.5,.5,.5,.9,.5],[50,0,0,5,0,1,5,.5,.5,.5,.5,.9],[200,0,5,0,1,2.5,10,.9,.9,.9,.9,.9],[9,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[7.5,0,.5,2.5,0,0,5,-.2,0,0,-.5,.5],[15,0,0,1,0,2.5,5,-.6,.6,0,-.5,.5],[10,0,.75,0,2.5,0,7.5,-.2,0,0,-.5,.5],[15,0,0,1.5,0,2.5,2.5,.4,-.6,0,-.5,.5],[20,0,1,0,5,0,10,-.2,0,0,-.5,.5],[30,0,0,3,0,5,2.5,-.2,0,0,-1,.9],[150,0,3.75,0,20,20,5,0,0,0,0,0],[.3,0,.1,.1,1e300,1e300,10,.9,.9,.9,.9,.9]],[[200,0,1,0,10,10,5,0,0,0,0,0]],[[1e3,0,3.5,0,10,10,2.5,0,0,0,0,0],[850,0,0,7.5,100,10,2.5,.5,.5,.5,-.5,.5],[2e3,0,7.5,7.5,200,200,2,0,0,0,0,0],[1e3,0,3.5,0,50,10,10/3,0,0,0,-.2,.5],[1200,0,0,3.5,50,100,4,.6,.6,.6,.9,.1],[2e3,0,10,10,100,100,2.5,.5,.6,.9,.9,.3],[1e5,0,10,0,200,200,2.5,.9,.9,.9,.9,.9],[2e3,0,5,5,200,200,2,0,0,0,0,0],[2e3,0,5,5,200,200,2,0,0,0,0,0],[2e3,0,5,5,200,200,2,0,0,0,0,0]]],townMatBricks:[Ke.MudBrick,Ke.MudBrick,Ke.LimestoneBrick,Ke.LimestoneBrick,Ke.MarbleBrick,Ke.MarbleBrick,Ke.GraniteBrick,Ke.GraniteBrick,Ke.BasaltBrick,Ke.BasaltBrick],townMatLogs:[Ke.PineLog,Ke.PineLog,Ke.MapleLog,Ke.MapleLog,Ke.AshLog,Ke.AshLog,Ke.MahoganyLog,Ke.MahoganyLog,Ke.RosewoodLog,Ke.RosewoodLog],townMatShards:[Ke.JasperShard,Ke.JasperShard,Ke.OpalShard,Ke.OpalShard,Ke.OnyxShard,Ke.OnyxShard,Ke.JadeShard,Ke.JadeShard,Ke.SapphireShard,Ke.SapphireShard]};class Bi{constructor(t,i){o(this,"data");o(this,"kind");this.data=t,this.kind=i}Start(){this.SetEffect()}get level(){return this.data.source.expeditionLevels[this.kind]}set level(t){this.data.source.expeditionLevels[this.kind]=parseInt(t)}get exp(){return this.data.source.expeditionExps[this.kind]}RequiredExp(t){let i=86400*(1+t+.25*Math.pow(Math.max(0,t-3),2));return t>=200&&(i*=Math.pow(2,(t-200)/50)),t>=300&&(i*=Math.pow(2,(t-300)/50)),t>=400&&(i*=Math.pow(2,(t-400)/50)),t>=500&&(i*=Math.pow(2,(t-500)/50)),i}TotalExp(){let t=0;for(let i=0;i<this.level;i++)t+=this.RequiredExp(i);return t+this.exp}GetExp(t){return t*this.ExpGainPerSecPerPet()}ExpGainPerSecPerPet(){return 1*this.data.expedition.expGainMultiplier.Value()}PetExpGainPerSec(){return 5*(1+.5*this.level)*this.data.expedition.petExpGainMultiplier.Value()*this.data.stats.MaxPetEXPGainAmongHeroes()}SpeedModifierByExpeditionLevel(){return Math.pow(1.1,Math.floor(this.level/10))}SetEffect(){switch(this.kind){case it.Brick:this.data.town.townLevelEffectMultipliers[0].RegisterMultiplier(new u(n.Expedition,s.Add,()=>this.EffectValue()));break;case it.Equipment:this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.Expedition,s.Mul,()=>this.EffectValue()));break;case it.Log:this.data.town.townLevelEffectMultipliers[1].RegisterMultiplier(new u(n.Expedition,s.Add,()=>this.EffectValue()));break;case it.PetExp:this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new u(n.Expedition,s.Mul,()=>this.EffectValue()));break;case it.PetRank:this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.Expedition,s.Mul,()=>this.EffectValue()));break;case it.Shard:this.data.town.townLevelEffectMultipliers[2].RegisterMultiplier(new u(n.Expedition,s.Add,()=>this.EffectValue()));break;case it.WalkDistance:this.data.expedition.walkedDistanceGainMultiplier.RegisterMultiplier(new u(n.Expedition,s.Add,()=>this.EffectValue()));break}}get passiveEffectValueIncrementPerLevel(){switch(this.kind){case it.Brick:return .01*this.data.expedition.passiveEffectMultiplier.Value();case it.Equipment:return .02*this.data.expedition.passiveEffectMultiplier.Value();case it.Log:return .01*this.data.expedition.passiveEffectMultiplier.Value();case it.PetExp:return .2*this.data.expedition.passiveEffectMultiplier.Value()*this.data.expedition.fieldTrainingPassiveEffectMultiplier.Value();case it.PetRank:return .05*this.data.expedition.passiveEffectMultiplier.Value();case it.Shard:return .01*this.data.expedition.passiveEffectMultiplier.Value();case it.WalkDistance:return .05*this.data.expedition.passiveEffectMultiplier.Value();default:return 0}}EffectValue(){return this.passiveEffectValueIncrementPerLevel*this.level}RewardAmount(t,i,r){switch(this.kind){case it.Brick:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*i.rank)*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case it.Equipment:return 1200*(1+.1*this.level)*(1+.05*i.rank)*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case it.Log:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*i.rank)*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case it.PetExp:return 18e3*Math.pow(1.2,this.level)*(1+.1*t.TotalRank())*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*this.data.stats.MaxPetEXPGainAmongHeroes()*this.data.expedition.petExpGainMultiplier.Value()*t.expeditionCtrl.rewardMultiplier.Value();case it.PetRank:return 4*i.MaxTPGAmongHeroes()*Math.pow(1.1,this.level)*(1+.1*i.rank)*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*this.data.expedition.rewardMultiplier.Value();case it.Shard:return 60*Math.pow(1.1,this.level)*this.data.town.MaxTownMaterialGainMultiplier()*(1+.5*i.rank)*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();case it.WalkDistance:return 1800*i.globalInfo.MoveSpeed(0,0,!1,R.Warrior)*Math.pow(1.2,this.level)*(1+.1*t.TotalRank())*Math.max(.55478474,Math.pow(r,this.data.expedition.rewardModifierPerHour.Value()))*t.expeditionCtrl.rewardMultiplier.Value();default:return 0}}NameString(){return M.ExpeditionGlobalInformationString(this).name}EffectValueString(){return M.ExpeditionGlobalInformationString(this).passive}RewardString(t,i,r){switch(this.kind){case it.Brick:return`${f.tDigit(this.RewardAmount(t,i,r))} ${M.TownMaterialNameString(Mt.townMatBricks[i.species])}`;case it.Log:return`${f.tDigit(this.RewardAmount(t,i,r))} ${M.TownMaterialNameString(Mt.townMatLogs[i.species])}`;case it.Shard:return`${f.tDigit(this.RewardAmount(t,i,r))} ${M.TownMaterialNameString(Mt.townMatShards[i.species])}`;case it.Equipment:return`Proficiency Scroll [${f.secondsToDhms(this.RewardAmount(t,i,r),!1)}]`;case it.PetExp:return`${f.tDigit(this.RewardAmount(t,i,r))}  Pet EXP`;case it.PetRank:return`${f.tDigit(this.RewardAmount(t,i,r))} ${At[i.color]} ${se[i.species]}'s  Taming Point`;case it.WalkDistance:return`${f.tDigit(this.RewardAmount(t,i,r))}  meters Walked Distance`;default:return"not implemented"}}}class gC{constructor(t,i){o(this,"expedition");o(this,"slotId");this.expedition=t,this.slotId=i}get id(){return this.expedition.id}get species(){return this.expedition.expeditionCtrl.data.source.expeditionPetSpecies[this.slotId+5*this.id]}get color(){return this.expedition.expeditionCtrl.data.source.expeditionPetColors[this.slotId+5*this.id]}get isSet(){return this.expedition.expeditionCtrl.data.source.expeditionPetIsSet[this.slotId+5*this.id]}get pet(){return this.expedition.expeditionCtrl.data.monster.GlobalInformation(this.species,this.color).pet}}var Va,Ki;class SC{constructor(t,i){o(this,"expeditionCtrl");o(this,"timeHours",[.5,1,2,4,8,16,24,48,72,120,240,480,960,1920,3840,8760,17520,43800,175200,876e3]);o(this,"id");o(this,"pets",Array(3));o(this,"tempDistance");Ks(this,Va,void 0);Ks(this,Ki,void 0);this.expeditionCtrl=t,this.id=i;for(let r=0;r<this.pets.length;r++)this.pets[r]=new gC(this,r)}get kind(){return this.expeditionCtrl.data.source.expeditionKinds[this.id]}set kind(t){this.expeditionCtrl.data.source.expeditionKinds[this.id]=t}get timeId(){return this.expeditionCtrl.data.source.expeditionTimeId[this.id]}set timeId(t){this.expeditionCtrl.data.source.expeditionTimeId[this.id]=t>=this.timeHours.length?0:t<0?this.timeHours.length-1:t}get globalInfo(){return this.expeditionCtrl.GlobalInfo(this.kind)}Start(){}PetNum(){let t=0;for(let i=0;i<this.pets.length;i++)this.pets[i].isSet&&t++;return t}TotalRank(){let t=0;for(let i=0;i<this.pets.length;i++)this.pets[i].isSet&&(t+=this.pets[i].pet.rank);return t}TotalLevel(){let t=0;for(let i=0;i<this.pets.length;i++)this.pets[i].isSet&&(t+=this.pets[i].pet.level);return t}TimeSpeed(){return(1+this.TotalLevel()*.001)*this.TimeSpeedModifier()}TimeSpeedModifier(){return this.expeditionCtrl.speedMultiplier.Value()*this.globalInfo.SpeedModifierByExpeditionLevel()}RewardPerSec(t){return this.globalInfo.RewardAmount(this,this.pets[t].pet,this.timeHours[this.timeId])/this.RequiredTimesec()}RewardPerSecString(t){return f.tDigit(this.RewardPerSec(t))}MostEffective(){let t=0,i=0;if(fe(this,Va)==this.TimeSpeed()&&fe(this,Ki)!=null)return fe(this,Ki);for(let h=0;h<this.timeHours.length;h++){let c=0,m=0;c+=this.globalInfo.RewardAmount(this,this.pets[0].pet,this.timeHours[h]),c+=this.globalInfo.RewardAmount(this,this.pets[1].pet,this.timeHours[h]),c+=this.globalInfo.RewardAmount(this,this.pets[2].pet,this.timeHours[h]);let w=this.timeHours[h]*3600;this.TimeSpeed()>0&&(w*=1/this.TimeSpeed()),w=Math.max(this.minTime,w),m=c/w,m>i&&(i=m,t=h)}const r=this.timeHours[t]>=8760?`${this.timeHours[t]/8760}y`:`${this.timeHours[t]}h`;return ei(this,Va,this.TimeSpeed()),ei(this,Ki,r),r}get timeHour(){return this.timeHours[this.timeId]}set timeHour(t){this.timeId=t}get minTime(){return this.expeditionCtrl.lowerLimitTime.Value()}RequiredTimesec(){let t=this.timeHours[this.timeId]*3600;return this.TimeSpeed()>0&&(t*=1/this.TimeSpeed()),Math.max(this.minTime,t)}GetExpeditionExp(){return this.globalInfo.GetExp(this.PetNum())}}Va=new WeakMap,Ki=new WeakMap;class mC{constructor(t){o(this,"data");o(this,"globalInfoList",[]);o(this,"expeditions",Array(20));o(this,"expGainMultiplier");o(this,"petExpGainMultiplier");o(this,"speedMultiplier");o(this,"rewardMultiplier");o(this,"passiveEffectMultiplier");o(this,"walkedDistanceGainMultiplier");o(this,"unlockedExpeditionSlotNum");o(this,"fieldTrainingPassiveEffectMultiplier");o(this,"lowerLimitTime");o(this,"rewardModifierPerHour");this.data=t,this.lowerLimitTime=new $(new u(n.Base,s.Add,()=>900),()=>900,()=>300),this.rewardModifierPerHour=new $(new u(n.Base,s.Add,()=>.85),()=>.95,()=>.85),this.rewardModifierPerHour.name="Efficiency penalty",this.petExpGainMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.expGainMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.rewardMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.passiveEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.walkedDistanceGainMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.unlockedExpeditionSlotNum=new $(new u(n.Base,s.Add,()=>1)),this.unlockedExpeditionSlotNum.numberType=gt.Normal,this.unlockedExpeditionSlotNum.name="Expedition Slots",this.fieldTrainingPassiveEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.speedMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.globalInfoList.push(new Bi(this.data,it.Brick)),this.globalInfoList.push(new Bi(this.data,it.Log)),this.globalInfoList.push(new Bi(this.data,it.Shard)),this.globalInfoList.push(new Bi(this.data,it.PetRank)),this.globalInfoList.push(new Bi(this.data,it.Equipment)),this.globalInfoList.push(new Bi(this.data,it.PetExp)),this.globalInfoList.push(new Bi(this.data,it.WalkDistance));for(let i=0;i<this.expeditions.length;i++)this.expeditions[i]=new SC(this,i);this.rewardMultiplier.name="Expedition Reward Amount",this.speedMultiplier.name="Expedition Speed",this.expGainMultiplier.name="Expedition EXP Gain",this.passiveEffectMultiplier.name="Expedition Passive Effect",this.petExpGainMultiplier.name="Expedition Pet EXP Gain"}TotalLevel(){return this.data.source.expeditionLevels.reduce((t,i)=>t+i,0)}Start(){this.SetMilestone(),this.globalInfoList.forEach(t=>{t.SetEffect()})}TotalExp(){let t=0;for(let i=0;i<this.globalInfoList.length;i++)t+=this.globalInfoList[i].TotalExp();return t}SetMilestone(){const t=this.TotalLevel();t>=5&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=15&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=30&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=125&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=175&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=200&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=225&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=250&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=275&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9)),t>=300&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.1)),t>=325&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=350&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=375&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>90)),t>=400&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=425&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>.25)),t>=450&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=475&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>900)),t>=500&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.2)),t>=525&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>.5)),t>=550&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.5)),t>=575&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e3)),t>=600&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.5)),t>=625&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>.75)),t>=650&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=675&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e4)),t>=700&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.3)),t>=725&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=750&&this.data.monster.petRankCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>50)),t>=775&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e5)),t>=800&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>100)),t>=825&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>2)),t>=850&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=875&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e6)),t>=900&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.75)),t>=925&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>3.5)),t>=950&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.75)),t>=975&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e7)),t>=1e3&&this.data.resource.goldCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>9)),t>=1050&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=1100&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>5)),t>=1150&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.4)),t>=1200&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e8)),t>=1250&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=1300&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>7.5)),t>=1350&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1)),t>=1400&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1)),t>=1450&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=1500&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.5)),t>=1550&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e9)),t>=1600&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>12)),t>=1650&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1.25)),t>=1700&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1.25)),t>=1750&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=1800&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.6)),t>=1850&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e10)),t>=1900&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>20)),t>=1950&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1.5)),t>=2e3&&this.data.resource.goldCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>90)),t>=2100&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1.5)),t>=2200&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=2300&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.7)),t>=2400&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e11)),t>=2500&&this.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>1)),t>=2600&&this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>40)),t>=2700&&this.data.monster.petRankCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>50)),t>=2800&&this.expGainMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1.75)),t>=2900&&this.speedMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>1.75)),t>=3e3&&this.data.resource.goldCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>900)),t>=3100&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>100)),t>=3200&&this.passiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.25)),t>=3300&&this.rewardMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Mul,()=>.8)),t>=3400&&this.fieldTrainingPassiveEffectMultiplier.RegisterMultiplier(new u(n.ExpeditionMilestone,s.Add,()=>9e12))}GlobalInfo(t){return this.globalInfoList[t]}}var Vh=(e=>(e[e.SuperMining=0]="SuperMining",e[e.SuperSynthesizing=1]="SuperSynthesizing",e[e.SuperGathering=2]="SuperGathering",e[e.SuperTraining=3]="SuperTraining",e[e.SuperTrapping=4]="SuperTrapping",e[e.SuperBanking=5]="SuperBanking",e[e.SuperFinancing=6]="SuperFinancing",e[e.Finding=7]="Finding",e[e.Racing=8]="Racing",e[e.Socializing=9]="Socializing",e[e.Ritualizing=10]="Ritualizing",e[e.Artificing=11]="Artificing",e[e.Haggling=12]="Haggling",e))(Vh||{});const Xr={maxGuildLevel:300,maxGuildLevelCap:500,FameGainPerHeroGrade:e=>e>=153?1010+10*(e-153):5+Math.floor(5*Math.pow(2,e/20)),ExpGainPerHeroLevel:e=>200+e*5,RequiredExp:e=>Math.floor((500*(e+1)+50*Math.pow(e,2)+500*Math.pow(e/5,3)+2e3*Math.pow(e/10,6)+25e3*Math.pow(e/20,9)+3e5*Math.pow(e/30,12))*Math.pow(10,Math.max(0,e-300)/25)),MemberUnlockLevel:e=>{switch(e){case R.Warrior:return 0;case R.Wizard:return 5;case R.Angel:return 10;case R.Thief:return 30;case R.Archer:return 45;case R.Tamer:return 60;default:return 100}},AbilityEffectValue:(e,t)=>{switch(e){case Ot.StoneGain:return Math.pow(2,t)-1;case Ot.CrystalGain:return Math.pow(2,t)-1;case Ot.LeafGain:return Math.pow(2,t)-1;case Ot.GuildExpGain:return t*.1;case Ot.EquipmentInventory:return 3*t;case Ot.EnchantInventory:return t;case Ot.PotionInventory:return 2*t;case Ot.MysteriousWater:return .1*t;case Ot.SkillProficiency:return .1*t;case Ot.GlobalSkillSlot:return t;case Ot.GoldCap:return .1*t;case Ot.GoldGain:return .1*t;case Ot.Trapping:return .1*t;case Ot.UpgradeCost:return .05*t;case Ot.PhysicalAbsorption:return .01*t;case Ot.MagicalAbsoption:return .01*t;case Ot.ExpGain:return .1*t;case Ot.EquipmentProficiency:return .2*t;case Ot.MaterialDrop:return t;case Ot.NitroCap:return 1e3*t;default:return 0}}};class MC{constructor(t){o(this,"data");o(this,"guildLevelCap");o(this,"timecountSec");o(this,"activableNum");o(this,"level");o(this,"exp");o(this,"expRequirementReduction");o(this,"members");o(this,"abilityPointLeft");o(this,"abilities");o(this,"superAbilityList",[]);o(this,"grade");o(this,"fame");o(this,"superAbilityPointLeft");this.data=t,this.expRequirementReduction=new $(new u(n.Base,s.Add,()=>0),()=>.99,()=>0),this.guildLevelCap=new $(new u(n.Base,s.Add,()=>Xr.maxGuildLevel)),this.activableNum=new $(new u(n.Base,s.Add,()=>3))}Start(){this.data.nitro.nitroCap.RegisterMultiplier(new u(n.GuildSuperAbility,s.Mul,()=>.05*this.data.source.guildSuperAbilityLevels[Vh.Racing]))}Member(t){return this.members[t]}Ability(t){this.abilities[t]}Level(){return this.level}MaxLevelReached(){return globalThis.data}RequiredExp(t=0){return t==0?this.RequiredExp(this.Level()):Xr.RequiredExp(t)*(1-this.expRequirementReduction.Value())}RequiredFame(t=0){return t==0?this.RequiredFame(this.grade):Xr.RequiredExp(t)}}const Qr={equipMaxDropNum:30,resourceMaxDropNum:30,materialMaxDropNum:30,chestMaxDropNum:10,equipPartSlotId:24,equipmentInventorySlotNum:520,equipmentLoadoutSlotNumPerHero:720,equipInventorySlotId:4840,equipSlotsPerHero:72,allEquipmentSlotId:5272,enchantSlotId:130,potionSlotId:260,equipPotionSlotId:6,allPotionSlotId:296};class xi{constructor(t,i){o(this,"equipment");o(this,"kind");this.equipment=t,this.kind=i}get effectValue(){switch(this.kind){case _e.ReduceRequiredHeroLevel:return this.equipment.data.source.equipment1stForgeValues[this.equipment.id];case _e.ReduceRequiredAbility:return this.equipment.data.source.equipment2ndForgeValues[this.equipment.id];case _e.IncreaseProficiencyGain:return this.equipment.data.source.equipment3rdForgeValues[this.equipment.id];case _e.IncreaseEffect:return this.equipment.data.source.equipment4thForgeValues[this.equipment.id];case _e.PurifyCurseEffect:return this.equipment.data.source.equipment5thForgeValues[this.equipment.id];case _e.IncreaseEffectIncrement:return this.equipment.data.source.equipment6thForgeValues[this.equipment.id];case _e.EqLevel:return this.equipment.data.source.equipment7thForgeValues[this.equipment.id];default:return 0}}SetEffectValue(t){switch(this.kind){case _e.ReduceRequiredHeroLevel:this.equipment.data.source.equipment1stForgeValues[this.equipment.id]=t;break;case _e.ReduceRequiredAbility:this.equipment.data.source.equipment2ndForgeValues[this.equipment.id]=t;break;case _e.IncreaseProficiencyGain:this.equipment.data.source.equipment3rdForgeValues[this.equipment.id]=t;break;case _e.IncreaseEffect:this.equipment.data.source.equipment4thForgeValues[this.equipment.id]=t;break;case _e.PurifyCurseEffect:this.equipment.data.source.equipment5thForgeValues[this.equipment.id]=t;break;case _e.IncreaseEffectIncrement:this.equipment.data.source.equipment6thForgeValues[this.equipment.id]=t;break;case _e.EqLevel:this.equipment.data.source.equipment7thForgeValues[this.equipment.id]=t;break}}set effectValue(t){this.equipment.ForgedSlotNum()>=4&&t>0&&this.effectValue==0||this.SetEffectValue(t)}IsForged(){return this.effectValue>0}EffectValue(){return Math.min(this.effectValue,this.equipment.ForgeEffectMaxValue(this.kind,this.equipment.globalInfo.isArtifact))}stringKind(){switch(this.kind){case _e.EqLevel:case _e.ReduceRequiredHeroLevel:case _e.ReduceRequiredAbility:return"normal";case _e.IncreaseEffect:case _e.IncreaseEffectIncrement:case _e.IncreaseProficiencyGain:case _e.PurifyCurseEffect:return"percent";default:return"normal"}}EffectString(){return M.ForgeEffectString(this.kind,this.effectValue,this.equipment.ForgeEffectMaxValue(this.kind,this.equipment.globalInfo.isArtifact),this.equipment.globalInfo.isArtifact)}Copy(){return{kind:this.kind,effectValue:this.effectValue}}Paste(t){this.kind=t.kind,this.effectValue=t.effectValue}}class EC{constructor(t,i,r){o(this,"equipment");o(this,"createId");o(this,"optionKindDictionary",[]);o(this,"optionKindAfterDictionary",[]);o(this,"optionLotteryDictionary",[]);o(this,"optionLotteryAfterDictionary",[]);o(this,"optionLottery");o(this,"optionId");this.equipment=t,this.createId=i,this.optionId=r}CanEnchant(){return this.kind==l.Nothing}get kind(){switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionEffectKinds[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionEffectKinds[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionEffectKinds[this.createId];case 3:return this.equipment.data.source.equipment4thOptionEffectKinds[this.createId];case 4:return this.equipment.data.source.equipment5thOptionEffectKinds[this.createId];case 5:return this.equipment.data.source.equipment6thOptionEffectKinds[this.createId];case 6:return this.equipment.data.source.equipment7thOptionEffectKinds[this.createId];default:return 0}}SetKind(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionEffectKinds[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionEffectKinds[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionEffectKinds[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionEffectKinds[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionEffectKinds[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionEffectKinds[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionEffectKinds[this.createId]=t;break}this.level=this.MaxLevel()}set kind(t){this.equipment.IsEffectRegisteredClear(),this.SetKind(t),this.equipment.Start(),this.level=this.MaxLevel()}get effectValue(){if(this.optionId>=this.equipment.totalOptionNum.Value())return 0;switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionEffectValues[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionEffectValues[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionEffectValues[this.createId];case 3:return this.equipment.data.source.equipment4thOptionEffectValues[this.createId];case 4:return this.equipment.data.source.equipment5thOptionEffectValues[this.createId];case 5:return this.equipment.data.source.equipment6thOptionEffectValues[this.createId];case 6:return this.equipment.data.source.equipment7thOptionEffectValues[this.createId];default:return 0}}SetEffectValue(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionEffectValues[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionEffectValues[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionEffectValues[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionEffectValues[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionEffectValues[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionEffectValues[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionEffectValues[this.createId]=t;break}}set effectValue(t){t=Math.min(t,zt.EffectCalculation(this.kind,this.level+1)),this.SetEffectValue(t)}get level(){switch(this.optionId){case 0:return this.equipment.data.source.equipment1stOptionLevels[this.createId];case 1:return this.equipment.data.source.equipment2ndOptionLevels[this.createId];case 2:return this.equipment.data.source.equipment3rdOptionLevels[this.createId];case 3:return this.equipment.data.source.equipment4thOptionLevels[this.createId];case 4:return this.equipment.data.source.equipment5thOptionLevels[this.createId];case 5:return this.equipment.data.source.equipment6thOptionLevels[this.createId];case 6:return this.equipment.data.source.equipment7thOptionLevels[this.createId];default:return 0}}SetLevel(t){switch(this.optionId){case 0:this.equipment.data.source.equipment1stOptionLevels[this.createId]=t;break;case 1:this.equipment.data.source.equipment2ndOptionLevels[this.createId]=t;break;case 2:this.equipment.data.source.equipment3rdOptionLevels[this.createId]=t;break;case 3:this.equipment.data.source.equipment4thOptionLevels[this.createId]=t;break;case 4:this.equipment.data.source.equipment5thOptionLevels[this.createId]=t;break;case 5:this.equipment.data.source.equipment6thOptionLevels[this.createId]=t;break;case 6:this.equipment.data.source.equipment7thOptionLevels[this.createId]=t;break}}set level(t){t=Math.min(t,zt.MaxLevel(this.kind)),this.SetLevel(t),this.effectValue=this.MaxEffectValue()}get isAfter(){return zt.IsAfter(this.kind)}Name(){return M.EquipmentEffectName(this.kind)}MaxLevel(){return zt.MaxLevel(this.kind)}MaxEffectValue(){return zt.EffectCalculation(this.kind,this.level+1)}MinEffectValue(){return zt.EffectCalculation(this.kind,this.level)}RequiredLevelIncrement(){return zt.RequiredLevelIncrement(this.kind,this.level)}get valueKind(){switch(this.kind){case l.ATKAdder:case l.ATKAfter:case l.AllSkillLevel:case l.HPAfter:case l.HPAdder:case l.DEFAdder:case l.DEFAfter:case l.MATKAdder:case l.MATKAfter:case l.MDEFAdder:case l.MDEFAfter:case l.MPAdder:case l.MPAfter:return"normal";default:return"percent"}}Copy(){return{kind:this.kind,effectValue:this.effectValue,level:this.level}}Paste(t){this.kind=t.kind,this.level=t.level,this.effectValue=t.effectValue,this.equipment.Start()}}function vC(e,t,i,r,h=null){switch(this.activateCondition=()=>h==null||h(),i){case l.HPAdder:return e.stats.BasicStats(t,d.HP).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MPAdder:return e.stats.BasicStats(t,d.MP).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ATKAdder:return e.stats.BasicStats(t,d.ATK).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MATKAdder:return e.stats.BasicStats(t,d.MATK).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.DEFAdder:return e.stats.BasicStats(t,d.DEF).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MDEFAdder:return e.stats.BasicStats(t,d.MDEF).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.SPDAdder:return e.stats.BasicStats(t,d.SPD).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.HPMultiplier:return e.stats.BasicStats(t,d.HP).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.MPMultiplier:return e.stats.BasicStats(t,d.MP).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.ATKMultiplier:return e.stats.BasicStats(t,d.ATK).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.MATKMultiplier:return e.stats.BasicStats(t,d.MATK).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.DEFMultiplier:return e.stats.BasicStats(t,d.DEF).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.MDEFMultiplier:return e.stats.BasicStats(t,d.MDEF).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.ATKPropotion:return e.stats.BasicStats(t,d.ATK).RegisterMultiplier(new u(n.Equipment,s.Add,()=>e.stats.Level(t)*this.EffectValue(r(),t),this.activateCondition));case l.MATKPropotion:return e.stats.BasicStats(t,d.MATK).RegisterMultiplier(new u(n.Equipment,s.Add,()=>e.stats.Level(t)*this.EffectValue(r(),t),this.activateCondition));case l.DEFPropotion:return e.stats.BasicStats(t,d.DEF).RegisterMultiplier(new u(n.Equipment,s.Add,()=>e.stats.Level(t)*this.EffectValue(r(),t),this.activateCondition));case l.MDEFPropotion:return e.stats.BasicStats(t,d.MDEF).RegisterMultiplier(new u(n.Equipment,s.Add,()=>e.stats.Level(t)*this.EffectValue(r(),t),this.activateCondition));case l.FireResistance:return e.stats.ElementResistance(t,F.Fire).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.IceResistance:return e.stats.ElementResistance(t,F.Ice).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThunderResistance:return e.stats.ElementResistance(t,F.Thunder).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.LightResistance:return e.stats.ElementResistance(t,F.Light).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.DarkResistance:return e.stats.ElementResistance(t,F.Dark).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalAbsorption:return e.stats.ElementAbsorption(t,F.Physical).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.FireAbsorption:return e.stats.ElementAbsorption(t,F.Fire).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.IceAbsorption:return e.stats.ElementAbsorption(t,F.Ice).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThunderAbsorption:return e.stats.ElementAbsorption(t,F.Thunder).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.LightAbsorption:return e.stats.ElementAbsorption(t,F.Light).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.DarkAbsorption:return e.stats.ElementAbsorption(t,F.Dark).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.DebuffResistance:return e.stats.HeroStats(t,v.DebuffRes).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.EquipmentDropChance:return e.stats.HeroStats(t,v.EquipmentDropChance).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.SlimeDropChance:return e.monster.speciesMaterialDropChance[0].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MagicSlimeDropChance:return e.monster.speciesMaterialDropChance[1].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.SpiderDropChance:return e.monster.speciesMaterialDropChance[2].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.BatDropChance:return e.monster.speciesMaterialDropChance[3].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.FairyDropChance:return e.monster.speciesMaterialDropChance[4].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.FoxDropChance:return e.monster.speciesMaterialDropChance[5].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.DevilFishDropChance:return e.monster.speciesMaterialDropChance[6].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TreantDropChance:return e.monster.speciesMaterialDropChance[7].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.FlameTigerDropChance:return e.monster.speciesMaterialDropChance[8].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.UnicornDropChance:return e.monster.speciesMaterialDropChance[9].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ColorMaterialDropChance:return e.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalCritical:return e.stats.HeroStats(t,v.PhysCritChance).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MagicalCritical:return e.stats.HeroStats(t,v.MagCritChance).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.EXPGain:return e.stats.HeroStats(t,v.ExpGain).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.SkillProficiency:return e.stats.HeroStats(t,v.SkillProficiencyGain).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.EquipmentProficiency:return e.stats.HeroStats(t,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MoveSpeedMultiplier:return e.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.GoldGain:return e.stats.GoldGain().RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.StoneGain:return e.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.CrystalGain:return e.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.LeafGain:return e.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.WarriorSkillLevel:return e.skill.skillLevelBonus[0].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.WizardSkillLevel:return e.skill.skillLevelBonus[1].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.AngelSkillLevel:return e.skill.skillLevelBonus[2].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThiefSkillLevel:return e.skill.skillLevelBonus[3].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ArcherSkillLevel:return e.skill.skillLevelBonus[4].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TamerSkillLevel:return e.skill.skillLevelBonus[5].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.AllSkillLevel:return[e.skill.skillLevelBonus[0].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition)),e.skill.skillLevelBonus[1].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition)),e.skill.skillLevelBonus[2].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition)),e.skill.skillLevelBonus[3].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition)),e.skill.skillLevelBonus[4].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition)),e.skill.skillLevelBonus[5].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition))];case l.SlimeKnowledge:return e.stats.MonsterDamage(t,se.Slime).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.MagicSlimeKnowledge:return e.stats.MonsterDamage(t,se.MagicSlime).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.SpiderKnowledge:return e.stats.MonsterDamage(t,se.Spider).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.BatKnowledge:return e.stats.MonsterDamage(t,se.Bat).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.FairyKnowledge:return e.stats.MonsterDamage(t,se.Fairy).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.FoxKnowledge:return e.stats.MonsterDamage(t,se.Fox).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.DevilFishKnowledge:return e.stats.MonsterDamage(t,se.DevilFish).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.TreantKnowledge:return e.stats.MonsterDamage(t,se.Treant).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.FlameTigerKnowledge:return e.stats.MonsterDamage(t,se.FlameTiger).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.UnicornKnowledge:return e.stats.MonsterDamage(t,se.Unicorn).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalDamage:return e.stats.ElementDamage(t,F.Physical).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.FireDamage:return e.stats.ElementDamage(t,F.Fire).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.IceDamage:return e.stats.ElementDamage(t,F.Ice).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThunderDamage:return e.stats.ElementDamage(t,F.Thunder).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.LightDamage:return e.stats.ElementDamage(t,F.Light).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.DarkDamage:return e.stats.ElementDamage(t,F.Dark).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.HpRegen:return e.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MpRegen:return e.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TamingPoint:return e.stats.HeroStats(t,v.TamingPointGain).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.WarriorSkillRange:return e.skill.skillRangeMultiplier[0].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.WizardSkillRange:return e.skill.skillRangeMultiplier[1].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.AngelSkillRange:return e.skill.skillRangeMultiplier[2].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThiefSkillRange:return e.skill.skillRangeMultiplier[3].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ArcherSkillRange:return e.skill.skillRangeMultiplier[4].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TamerSkillRange:return e.skill.skillRangeMultiplier[5].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TownMatGain:return e.town.townMaterialGainMultiplier[t].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TownMatAreaClearGain:return e.area.townMaterialGainBonusClass[t].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.RebirthPointGain1:return e.rebirth.Rebirth(t,0).rebirthPointGainFactor.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.RebirthPointGain2:return e.rebirth.Rebirth(t,1).rebirthPointGainFactor.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.RebirthPointGain3:return e.rebirth.Rebirth(t,2).rebirthPointGainFactor.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.CriticalDamage:return e.stats.HeroStats(t,v.CriticalDamage).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.BlessingEffect:return e.blessingInfo.effectMultipliers[t].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.MoveSpeedAdder:return e.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.PetEXPGain:return e.stats.Hero(t).petExpGainPerDefeat.RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.LoyaltyPointGain:return e.stats.Hero(t).loyaltyPoingGain.RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.CatalystDoubleCriticalChance:return e.alchemy.catalyst.catalystDoubleCriticalChance.RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.WarriorSkillEffectRange:return e.skill.skillEffectRangeMultiplier[0].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.WizardSkillEffectRange:return e.skill.skillEffectRangeMultiplier[1].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.AngelSkillEffectRange:return e.skill.skillEffectRangeMultiplier[2].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThiefSkillEffectRange:return e.skill.skillEffectRangeMultiplier[3].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.ArcherSkillEffectRange:return e.skill.skillEffectRangeMultiplier[4].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.TamerSkillEffectRange:return e.skill.skillEffectRangeMultiplier[5].RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.HpRegenMultiplier:return e.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r()*e.stats.BasicStats(t,d.HP).Value(),t),this.activateCondition));case l.MpRegenMultiplier:return e.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r()*e.stats.BasicStats(t,d.MP).Value(),t),this.activateCondition));case l.ArmoredFury:return e.stats.HeroStats(t,v.ArmoredFury).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.WardedFury:return e.stats.HeroStats(t,v.WardedFury).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.PetPhysicalCriticalChance:return e.stats.HeroStats(t,v.PetPhysCritChance).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.PetMagicalCriticalChance:return e.stats.HeroStats(t,v.PetMagCritChance).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.PetCriticalDamage:return e.stats.HeroStats(t,v.PetCriticalDamage).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.PetDebuffResistance:return e.stats.HeroStats(t,v.PetDebuffResistance).RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.StoneTownResearchPower:return e.town.researchPower[0].RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.CrystalTownResearchPower:return e.town.researchPower[1].RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.LeafTownResearchPower:return e.town.researchPower[2].RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.GuildEXPGain:return e.stats.heroes[t].guildExpGain.RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.EffectValue(r(),t),this.activateCondition));case l.SPDMultiplier:return e.stats.BasicStats(t,d.SPD).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.CriticalDamageMultiplier:return e.stats.HeroStats(t,v.CriticalDamage).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.SkillProficiencyMultiplier:return e.stats.HeroStats(t,v.SkillProficiencyGain).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.EquipmentProficiencyMultiplier:return e.stats.HeroStats(t,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.EXPGainMultiplier:return e.stats.HeroStats(t,v.ExpGain).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.GoldGainMultiplier:return e.stats.GoldGain().RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalDamageMultiplier:return e.stats.ElementDamage(t,F.Physical).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.FireDamageMultiplier:return e.stats.ElementDamage(t,F.Fire).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.IceDamageMultiplier:return e.stats.ElementDamage(t,F.Ice).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThunderDamageMultiplier:return e.stats.ElementDamage(t,F.Thunder).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.LightDamageMultiplier:return e.stats.ElementDamage(t,F.Light).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.DarkDamageMultiplier:return e.stats.ElementDamage(t,F.Dark).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.TamingPointMultiplier:return e.stats.HeroStats(t,v.TamingPointGain).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.PetEXPGainMultiplier:return e.stats.Hero(t).petExpGainPerDefeat.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.LoyaltyPointGainMultiplier:return e.stats.Hero(t).loyaltyPoingGain.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.BlessingEffectMultiplier:return e.blessingInfo.effectMultipliers[t].RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalCriticalMultiplier:return e.stats.HeroStats(t,v.PhysCritChance).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.MagicalCriticalMultiplier:return e.stats.HeroStats(t,v.MagCritChance).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.ChallengeBossKnowledge:return e.stats.MonsterDamage(t,se.ChallengeBoss).RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.HPAfter:return e.stats.BasicStats(t,d.HP).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.MPAfter:return e.stats.BasicStats(t,d.MP).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.ATKAfter:return e.stats.BasicStats(t,d.ATK).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.MATKAfter:return e.stats.BasicStats(t,d.MATK).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.DEFAfter:return e.stats.BasicStats(t,d.DEF).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.MDEFAfter:return e.stats.BasicStats(t,d.MDEF).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.SPDAfter:return e.stats.BasicStats(t,d.SPD).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.MoveSpeedAfter:return e.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalCriticalAfter:return e.stats.HeroStats(t,v.PhysCritChance).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.MagicalCriticalAfter:return e.stats.HeroStats(t,v.MagCritChance).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.CriticalDamageAfter:return e.stats.HeroStats(t,v.CriticalDamage).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.DebuffResistanceAfter:return e.stats.HeroStats(t,v.DebuffRes).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.PhysicalDamageAfter:return e.stats.ElementDamage(t,F.Physical).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.FireDamageAfter:return e.stats.ElementDamage(t,F.Fire).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.IceDamageAfter:return e.stats.ElementDamage(t,F.Ice).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThunderDamageAfter:return e.stats.ElementDamage(t,F.Thunder).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.LightDamageAfter:return e.stats.ElementDamage(t,F.Light).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.DarkDamageAfter:return e.stats.ElementDamage(t,F.Dark).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.FireResistanceAfter:return e.stats.ElementResistance(t,F.Fire).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.IceResistanceAfter:return e.stats.ElementResistance(t,F.Ice).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.ThunderResistanceAfter:return e.stats.ElementResistance(t,F.Thunder).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.LightResistanceAfter:return e.stats.ElementResistance(t,F.Light).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.DarkResistanceAfter:return e.stats.ElementResistance(t,F.Dark).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.SlimeKnowledgeAfter:return e.stats.MonsterDamage(t,se.Slime).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.MagicSlimeKnowledgeAfter:return e.stats.MonsterDamage(t,se.MagicSlime).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.SpiderKnowledgeAfter:return e.stats.MonsterDamage(t,se.Spider).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.BatKnowledgeAfter:return e.stats.MonsterDamage(t,se.Bat).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.FairyKnowledgeAfter:return e.stats.MonsterDamage(t,se.Fairy).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.FoxKnowledgeAfter:return e.stats.MonsterDamage(t,se.Fox).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.DevilFishKnowledgeAfter:return e.stats.MonsterDamage(t,se.DevilFish).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.TreantKnowledgeAfter:return e.stats.MonsterDamage(t,se.Treant).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.FlameTigerKnowledgeAfter:return e.stats.MonsterDamage(t,se.FlameTiger).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.UnicornKnowledgeAfter:return e.stats.MonsterDamage(t,se.Unicorn).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.ChallengeBossKnowledgeAfter:return e.stats.MonsterDamage(t,se.ChallengeBoss).RegisterMultiplier(new u(n.Equipment,s.After,()=>this.EffectValue(r(),t),this.activateCondition));case l.SDDamageMultiplier:return e.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.SDDamageCutMultiplier:return e.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.FameGain:return e.superStats.Hero(t).fameGain.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.DungeonCoinGain:return e.sdg.dungeonCoinGain.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition));case l.ExtraAfterDamage:return e.stats.Hero(t).extraAfterDamage.RegisterMultiplier(new u(n.Equipment,s.Mul,()=>this.EffectValue(r(),t),this.activateCondition))}}function wC(e,t,i){const r=e.data;let h=[];const c=e.AttackedInfo(),m=PC(e.species),w=LC(c.element),k=kC(e.data.source.isActiveSdModifiers[950+bt.SwapATKWithDEF]&&e.data.source.isSuperDungeon),P=AC(),D=RC(t.heroKind),N=CC();r.source.isBlessing&&(h=[...h,...P]),h=[...h,...m,...w,...k,...D,...N];let z=0,te=0,ie=0,pe="";pe+=`Searching MAX DPS enchant for ${M.EquipmentName(t.kind)} in enchantements slot ${i+1}
`;for(let Me=0;Me<h.length;Me++){const Pe=h[Me];zt.RequiredLevelIncrement(Pe,1)>t.data.source.enemyLevel||zt.IsAfter(Pe)&&!t.globalInfo.isArtifact||(t.optionEffects[i].kind=Pe,z=e.AttackedInfo().dps,te<z&&(te=z,ie=Pe),pe+=`dps: ${f.tDigit(z,5)}: ${M.EquipmentEffectName(Pe)}
`)}t.optionEffects[i].kind=ie,pe+=`----------------------------------------
`,pe+=`Best found:
`,pe+=`dps: ${f.tDigit(te,5)}: ${M.EquipmentEffectName(ie)}
`,document.dispatchEvent(new CustomEvent("log",{detail:{type:"msg",data:pe}}))}function kC(e){let t=[l.SPDAdder,l.SPDMultiplier,l.SPDAfter];return e?t=[...t,l.DEFAdder,l.MDEFAdder,l.DEFMultiplier,l.MDEFMultiplier,l.DEFPropotion,l.MDEFPropotion,l.DEFAfter,l.MDEFAfter]:t=[...t,l.ATKAdder,l.MATKAdder,l.ATKMultiplier,l.MATKMultiplier,l.ATKPropotion,l.MATKPropotion,l.ATKAfter,l.MATKAfter],t}function AC(){return[l.BlessingEffect,l.BlessingEffectMultiplier]}function RC(e){switch(e){case R.Warrior:return[l.WarriorSkillLevel];case R.Wizard:return[l.WizardSkillLevel];case R.Angel:return[l.AngelSkillLevel];case R.Thief:return[l.ThiefSkillLevel];case R.Archer:return[l.ArcherSkillLevel];case R.Tamer:return[l.TamerSkillLevel]}}function CC(){return[l.ArmoredFury,l.AllSkillLevel,l.CriticalDamage,l.WardedFury,l.CriticalDamageMultiplier,l.CriticalDamageAfter,l.ExtraAfterDamage]}function LC(e){switch(e){case F.Physical:return[l.PhysicalDamage,l.PhysicalDamageMultiplier,l.PhysicalDamageAfter];case F.Fire:return[l.FireDamage,l.FireDamageMultiplier,l.FireDamageAfter];case F.Thunder:return[l.ThunderDamage,l.ThunderDamageMultiplier,l.ThunderDamageAfter];case F.Ice:return[l.IceDamage,l.IceDamageMultiplier,l.IceDamageAfter];case F.Light:return[l.LightDamage,l.LightDamageMultiplier,l.LightDamageAfter];case F.Dark:return[l.DarkDamage,l.DarkDamageMultiplier,l.DarkDamageAfter]}}function PC(e){switch(e){case se.Slime:return[l.SlimeKnowledge,l.SlimeKnowledgeAfter];case se.MagicSlime:return[l.MagicSlimeKnowledge,l.MagicSlimeKnowledgeAfter];case se.Spider:return[l.SpiderKnowledge,l.SpiderKnowledgeAfter];case se.Bat:return[l.BatKnowledge,l.BatKnowledgeAfter];case se.Fairy:return[l.FairyKnowledge,l.FairyKnowledgeAfter];case se.Fox:return[l.FoxKnowledge,l.FoxKnowledgeAfter];case se.DevilFish:return[l.DevilFishKnowledge,l.DevilFishKnowledgeAfter];case se.Treant:return[l.TreantKnowledge,l.TreantKnowledgeAfter];case se.FlameTiger:return[l.FlameTigerKnowledge,l.FlameTigerKnowledgeAfter];case se.Unicorn:return[l.UnicornKnowledge,l.UnicornKnowledgeAfter];case se.ChallengeBoss:return[l.ChallengeBossKnowledge,l.ChallengeBossKnowledgeAfter]}}class DC{constructor(t,i){o(this,"data");o(this,"isEffectRegistered",[]);o(this,"isMasteryEffectRegistered");o(this,"isOptionEffectRegistered",Array(W.HeroKind));o(this,"isReachedMax");o(this,"id");o(this,"slotId");o(this,"totalOptionNum");o(this,"optionEffects",Array(zt.maxOptionEffectNum));o(this,"forgeEffects",Array(zt.maxForgeEffectNum));o(this,"requiredLevel");o(this,"requiredGrade");o(this,"requiredLevelWithoutForge");o(this,"requiredGradeWithoutForge");o(this,"requiredAbilityPoint",[]);o(this,"info");o(this,"activateCondition");o(this,"optionNum",4);o(this,"SetEffect",vC);this.data=t,this.id=this.data.source.equipmentId[i],this.slotId=i;for(let r=0;r<this.optionEffects.length;r++)this.optionEffects[r]=new EC(this,this.id,r);this.totalOptionNum=new $(new u(n.Base,s.Add,()=>this.optionNum)),this.totalOptionNum.RegisterMultiplier(new u(n.Equipment,s.Add,()=>this.globalInfo.levelMaxEffects[3].EffectValue(0),()=>this.globalInfo.levels[3].isMaxed)),this.forgeEffects[0]=new xi(this,_e.ReduceRequiredHeroLevel),this.forgeEffects[1]=new xi(this,_e.ReduceRequiredAbility),this.forgeEffects[2]=new xi(this,_e.IncreaseProficiencyGain),this.forgeEffects[3]=new xi(this,_e.IncreaseEffect),this.forgeEffects[4]=new xi(this,_e.PurifyCurseEffect),this.forgeEffects[5]=new xi(this,_e.IncreaseEffectIncrement),this.forgeEffects[6]=new xi(this,_e.EqLevel)}get globalInfo(){return this.data.equipment.globalInformations[this.kind]}get level(){return this.globalInfo.TotalLevel()}get kind(){return this.data.source.equipmentKinds[this.id]}get setKind(){return this.globalInfo.setKind}set kind(t){(zt.Part(t)==this.slotPart||t==E.Nothing)&&(this.data.source.equipmentKinds[this.id]=t),this.data.inventory.UpdateSetItemEquippedNumHero(this.heroKind),this.Start()}SetKind(t){this.data.source.equipmentKinds[this.id]=t}GetOptionEffects(t=!1){if(!this.isDisabled())return t?this.optionEffects.filter(i=>i.optionId<this.totalOptionNum.Value()&&i.kind!=0):this.optionEffects.filter(i=>i.optionId<this.totalOptionNum.Value())}Name(){return M.EquipmentName(this.kind)}get heroKind(){const t=this.slotId;if(t>=520&&t<1240)return R.Warrior;if(t>=1240&&t<1960)return R.Wizard;if(t>=1960&&t<2680)return R.Angel;if(t>=2680&&t<3400)return R.Thief;if(t>=3400&&t<4120)return R.Archer;if(t>=4120&&t<4840)return R.Tamer}get loadout(){return Math.floor((this.slotId-(520+this.heroKind*720))/72)}get loadoutSlot(){return this.slotId-(520+this.heroKind*720+this.loadout*72)}get slotPart(){return this.loadoutSlot<24?V.Weapon:this.loadoutSlot>=24&&this.loadoutSlot<48?V.Armor:V.Jewelry}Start(){this.CalculateRequiredLevel(),this.CalculateRequiredAbilityPoints(),this.SetAgainAllEffect()}IsSkillLevelEnchant(t){return t==l.WarriorSkillLevel||t==l.WizardSkillLevel||t==l.AngelSkillLevel||t==l.ThiefSkillLevel||t==l.ArcherSkillLevel||t==l.TamerSkillLevel||t==l.AllSkillLevel}Forge(t,i,r){this.CanForge(t,r)}CanForge(t,i){return!i&&this.globalInfo.isArtifact||i&&!this.globalInfo.isArtifact?!1:this.forgeEffects[t].IsForged()?this.ForgeEffectMaxValueLeft(t,i)>0:this.AvailableForgeSlotNum()>0}ForgeEffectMaxValueLeft(t,i){return this.ForgeEffectMaxValue(t,i)-this.forgeEffects[t].effectValue}ForgeEffectValueLeft(t,i,r){return this.CanForge(t,r)?Math.max(0,i-this.ForgeEffectMaxValueLeft(t,r)):0}ForgeEffectMaxValue(t,i){let r=zt.MaxEffectValue(t);switch(t){case _e.ReduceRequiredHeroLevel:r=i?this.RequiredLevel(!0,!0):this.RequiredLevel(!0,!1);break;case _e.ReduceRequiredAbility:r=0;for(let h=1;h<this.globalInfo.requiredAbilities.length;h++)i?this.globalInfo.requiredAbilities[h].isSuperAbility&&(r=Math.max(r,this.globalInfo.requiredAbilities[h].requiredValue)):this.globalInfo.requiredAbilities[h].isSuperAbility||(r=Math.max(r,this.globalInfo.requiredAbilities[h].requiredValue));break;case _e.IncreaseEffect:r+=this.data.equipment.forgeEffectCapAdderEQEffect.Value();break;case _e.IncreaseEffectIncrement:r+=this.data.equipment.forgeEffectCapAdderEffectIncrement.Value();break;case _e.EqLevel:r+=this.data.equipment.forgeEffectCapAdderEQLevel.Value();break}return r}ForgedSlotNum(){let t=0;for(let i=0;i<this.forgeEffects.length;i++)this.forgeEffects[i].IsForged()&&t++;return t}AvailableForgeSlotNum(){return this.globalInfo.ForgeSlotNum()-this.ForgedSlotNum()}IsEffectRegisteredClear(){this.isEffectRegistered.forEach(t=>{t()}),this.isEffectRegistered=[]}SetAgainAllEffect(){this.IsEffectRegisteredClear(),this.IsEquipped()&&(this.SetEffectBase(this.heroKind),this.SetMasteryEffect(this.heroKind))}IsEquipped(){if(this.slotId<520||this.slotId>=4840||this.loadout!=this.data.source.equipmentLoadoutIds[this.heroKind]||!this.data.source.isActiveBattle[this.heroKind]||this.kind==0)return!1;if(this.loadoutSlot<24)return this.data.inventory.equipWeaponUnlockedNum[this.heroKind].Value()>this.loadoutSlot;if(this.loadoutSlot>=24&&this.loadoutSlot<48)return this.data.inventory.equipArmorUnlockedNum[this.heroKind].Value()>this.loadoutSlot-24;if(this.loadoutSlot>=48)return this.data.inventory.equipJewelryUnlockedNum[this.heroKind].Value()>this.loadoutSlot-48}isDisabled(){if(this.slotId<520||this.slotId>=4840||!this.data.source.isActiveBattle[this.heroKind])return!0;if(this.data.source.isSuperDungeon&&this.heroKind==this.data.source.currentHero)switch(this.slotPart){case V.Weapon:return this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.Value()<=this.loadoutSlot;case V.Armor:return this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.Value()<=this.loadoutSlot-24;case V.Jewelry:return this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.Value()<=this.loadoutSlot-48;default:return!0}else switch(this.slotPart){case V.Weapon:return this.data.inventory.equipWeaponUnlockedNum[this.heroKind].Value()<=this.loadoutSlot;case V.Armor:return this.data.inventory.equipArmorUnlockedNum[this.heroKind].Value()<=this.loadoutSlot-24;case V.Jewelry:return this.data.inventory.equipJewelryUnlockedNum[this.heroKind].Value()<=this.loadoutSlot-48;default:return!0}}SetMasteryEffect(t){if(this.kind!=E.Nothing)for(let i=0;i<this.globalInfo.levelMaxEffects.length;i++){if(this.globalInfo.levelMaxEffects[i].kind==0)continue;const r=this.SetEffect(this.data,t,this.globalInfo.levelMaxEffects[i].kind,()=>this.globalInfo.levelMaxEffects[i].EffectValue(0),()=>this.globalInfo.levels[i].isMaxed);Array.isArray(r)?this.isEffectRegistered.push(...r):this.isEffectRegistered.push(r)}}SetEffectBase(t){if(this.kind!=E.Nothing){for(let i=0;i<this.globalInfo.effects.length;i++){const r=this.SetEffect(this.data,t,this.globalInfo.effects[i].kind,()=>this.OriginalEffectValue(i),()=>!this.isDisabled());Array.isArray(r)?this.isEffectRegistered.push(...r):this.isEffectRegistered.push(r)}for(let i=0;i<this.optionEffects.length;i++)if(this.optionEffects[i].kind!=0){const r=this.SetEffect(this.data,t,this.optionEffects[i].kind,()=>this.optionEffects[i].effectValue,()=>!this.isDisabled());Array.isArray(r)?this.isEffectRegistered.push(...r):this.isEffectRegistered.push(r)}}}OriginalEffectValue(t){return this.globalInfo.effects[t].EffectValue(this.Level(),1+this.forgeEffects[5].EffectValue())}OriginalEffectIncrementPerLevel(t){return this.globalInfo.effects[t].baseValue()*(1+this.forgeEffects[5].EffectValue())}Level(){return this.globalInfo.TotalLevel()+this.forgeEffects[6].EffectValue()}HasEnchantedEffect(){if(this.optionNum>0)return!0;if(this.totalOptionNum.Value()<1)return!1;for(let t=0;t<this.optionEffects.length;t++)if(this.optionEffects[t].kind!=l.Nothing)return!0;return!1}RequiredLevel(t,i){return i?t?this.requiredGradeWithoutForge:this.requiredGrade:t?this.requiredLevelWithoutForge:this.requiredLevel}get isSetItem(){return this.globalInfo.setKind!=0&&this.globalInfo.setKind!=null}EffectMultiplierFromSetItem(t){if(!this.isSetItem||this.isSetItem==null)return 1;switch(this.data.inventory.SetItemEquippedNum(this.globalInfo.setKind,t)){case 2:return 1.05;case 3:return 1.1;case 4:return 1.15;case 5:return 1.2;case 6:return 1.25;case 7:return 1.35;case 8:return 1.5;default:return 1}}EffectValue(t,i){let r=t*this.EffectMultiplierFromSetItem(i)*(1+this.forgeEffects[3].EffectValue())*this.EQAbusePercent(i);return this.globalInfo.isArtifact?this.data.equipment.effectMultiplierModifierForArtifact.Value()>0&&(r*=this.data.equipment.ArtifactEffectMultiplier()):r*=this.data.equipment.EffectMultiplier(),r<0&&(r*=Math.max(0,1-this.forgeEffects[4].EffectValue())),r}CalculateRequiredLevel(){let t=0;this.globalInfo.isArtifact&&(t=this.globalInfo.requiredAbilities[0].requiredValue);for(let r=0;r<this.optionEffects.length;r++)this.optionEffects[r].isAfter&&(t+=this.optionEffects[r].RequiredLevelIncrement());this.requiredGradeWithoutForge=Math.max(0,t),this.globalInfo.isArtifact&&(t-=this.forgeEffects[0].EffectValue()),this.requiredGrade=Math.max(0,t);let i=0;this.globalInfo.isArtifact||(i=this.globalInfo.requiredAbilities[0].requiredValue);for(let r=0;r<this.optionEffects.length;r++)this.optionEffects[r].isAfter||(i+=this.optionEffects[r].RequiredLevelIncrement());this.requiredLevelWithoutForge=Math.max(0,i),this.globalInfo.isArtifact||(i-=this.forgeEffects[0].EffectValue()),this.requiredLevel=Math.max(0,i)}Copy(t){switch(t){case Bt.OptionEffect:return this.optionEffects.map(i=>i.Copy());case Bt.ForgeEffects:return this.forgeEffects.map(i=>i.Copy());case Bt.Equipment:return{kind:this.kind,optionEffects:this.optionEffects.map(i=>i.Copy()),forgeEffects:this.forgeEffects.map(i=>i.Copy())};default:return null}}Paste(t,i){switch(t){case Bt.Equipment:this.optionEffects.map((r,h)=>r.Paste(i.optionEffects[h])),this.kind=i.kind,this.forgeEffects.map((r,h)=>r.Paste(i.forgeEffects[h])),this.data.inventory.UpdateSetItemEquippedNumHero(this.heroKind);break;case Bt.OptionEffect:this.optionEffects.map((r,h)=>r.Paste(i[h]));break;case Bt.ForgeEffects:this.forgeEffects.map((r,h)=>r.Paste(i[h]));break}}SlotString(){if(this.slotId<520)return`Inventory tab ${Math.floor(this.slotId/52)+1} position ${this.slotId}`;const t=this.slotPart==V.Weapon?this.loadoutSlot:this.slotPart==V.Armor?this.loadoutSlot-24:this.loadoutSlot-48;return`${R[this.heroKind]} Loadout ${this.loadout+1} - ${V[this.slotPart]} position ${t+1}`}FindMaxEnchantDPS(t){wC(this.data.battle.Enemy(),this,t)}RequiredAbilityPoint(t){return(this.requiredAbilityPoint==null||this.requiredAbilityPoint.length<this.globalInfo.requiredAbilities.length)&&(this.requiredAbilityPoint=Array(this.globalInfo.requiredAbilities.length),this.CalculateRequiredAbilityPoint(t)),this.requiredAbilityPoint[t]}CalculateRequiredAbilityPoints(){for(let t=1;t<this.globalInfo.requiredAbilities.length;t++)this.CalculateRequiredAbilityPoint(t)}CalculateRequiredAbilityPoint(t){let i=this.globalInfo.requiredAbilities[t].requiredValue;i>0&&(this.globalInfo.isArtifact?this.globalInfo.requiredAbilities[t].isSuperAbility&&(i-=this.forgeEffects[1].EffectValue()):this.globalInfo.requiredAbilities[t].isSuperAbility||(i-=this.forgeEffects[1].EffectValue())),(this.requiredAbilityPoint==null||this.requiredAbilityPoint.length<this.globalInfo.requiredAbilities.length)&&(this.requiredAbilityPoint=Array(this.globalInfo.requiredAbilities.length)),this.requiredAbilityPoint[t]=Math.max(0,i)}IsExistedRequiredLevel(){if(!this.globalInfo.isArtifact)return!0;for(let t=0;t<this.optionEffects.length;t++)if(!this.optionEffects[t].isAfter&&this.optionEffects[t].RequiredLevelIncrement()>0)return!0;return!1}IsExistedRequiredGrade(){if(this.globalInfo.isArtifact)return!0;for(let t=0;t<this.optionEffects.length;t++)if(this.optionEffects[t].isAfter)return!0;return!1}EQAbusePercent(t){let i=1,r=0,h=0,c=1;for(let k=1;k<this.globalInfo.requiredAbilities.length;k++)r++,this.RequiredAbilityPoint(k)<1?h++:this.globalInfo.requiredAbilities[k].isSuperAbility?h+=Math.min(1,this.data.superStats.Hero(t).SuperAbility(this.globalInfo.requiredAbilities[k].kind).Point()/Math.max(1,this.RequiredAbilityPoint(k))):h+=Math.min(1,this.data.stats.Ability(t,this.globalInfo.requiredAbilities[k].kind).Point()/Math.max(1,this.RequiredAbilityPoint(k)));let m=r>=1?c*(h/r):1,w=1;return this.IsExistedRequiredLevel()&&(this.RequiredLevel(!1,!1)<1?m++:m+=Math.min(1,this.data.stats.LevelForEquipment(t).Value()/this.RequiredLevel(!1,!1)),w++),this.IsExistedRequiredGrade()&&(this.RequiredLevel(!1,!0)<1?m++:m+=Math.min(1,this.data.superStats.Hero(t).GradeForEquipment()/this.RequiredLevel(!1,!0)),w++),i=m/w,Math.min(1,Math.max(.1,i))}}class yC{constructor(t,i){o(this,"data");o(this,"slotId");o(this,"effectRegister",[]);this.data=t,this.slotId=i}get id(){return this.data.source.potionId[this.slotId]}get kind(){return this.data.source.potionKinds[this.id]}set kind(t){this.data.source.potionKinds[this.id]=t,this.Start()}SetKind(t){this.data.source.potionKinds[this.id]=t}get slot(){return this.slotId<260?0:(this.slotId-260-this.heroKind*6)%6}get stack(){return this.data.source.potionStackNums[this.id]}set stack(t){this.data.source.potionStackNums[this.id]=Math.min(30,t)}get level(){return this.data.potion.GlobalInfo(this.kind).level}get type(){return this.data.potion.GlobalInfo(this.kind).type}get heroKind(){if(this.slotId>=260&&this.slotId<266)return R.Warrior;if(this.slotId>=266&&this.slotId<272)return R.Wizard;if(this.slotId>=272&&this.slotId<278)return R.Angel;if(this.slotId>=278&&this.slotId<284)return R.Thief;if(this.slotId>=284&&this.slotId<290)return R.Archer;if(this.slotId>=290&&this.slotId<296)return R.Tamer}get effectValue(){return this.data.potion.GlobalInfo(this.kind).type==qe.Talisman?this.data.potion.GlobalInfo(this.kind).effectValue*this.stack:this.data.potion.GlobalInfo(this.kind).effectValue}UnregisterEffects(){this.effectRegister.forEach(t=>{t&&t()}),this.effectRegister=[]}Start(){if(this.UnregisterEffects(),!(this.slotId<260||this.kind==0)&&this.data.potion.GlobalInfo(this.kind).SetEffect!=null&&!this.isDisabled()){const t=this.data.potion.GlobalInfo(this.kind).SetEffect(this.heroKind,()=>this.stack);Array.isArray(t)?this.effectRegister.push(...t):this.effectRegister.push(t)}}isDisabled(){return this.slotId<260||!this.data.source.isActiveBattle[this.heroKind]?!0:this.data.source.isSuperDungeon&&this.heroKind==this.data.source.currentHero?this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.Value()<=this.slot:this.data.inventory.equipPotionUnlockedNum[this.heroKind].Value()<=this.slot}Copy(){return{kind:this.kind,stack:this.stack}}Paste(t){this.SetKind(t.kind),this.stack=t.stack}}class bC{constructor(t){o(this,"data");o(this,"setItemEquippedNums",Array(W.EquipmentSetKind));o(this,"equipmentSlots",Array(Qr.allEquipmentSlotId));o(this,"potionSlots",Array(Qr.allPotionSlotId));o(this,"equipInventoryUnlockedNum");o(this,"equipWeaponUnlockedNum",Array(W.HeroKind));o(this,"equipArmorUnlockedNum",Array(W.HeroKind));o(this,"equipJewelryUnlockedNum",Array(W.HeroKind));o(this,"enchantUnlockedNum");o(this,"potionUnlockedNum");o(this,"equipPotionUnlockedNum",Array(W.HeroKind));this.data=t;for(let i=0;i<W.EquipmentSetKind;i++)this.setItemEquippedNums[i]=new Array(W.HeroKind).fill(0);this.SetUnlockedNum()}SetUnlockedNum(){this.equipInventoryUnlockedNum=new $(new u(n.Base,s.Add,()=>26)),this.equipInventoryUnlockedNum.maxValue=()=>Qr.equipmentInventorySlotNum,this.enchantUnlockedNum=new $(new u(n.Base,s.Add,()=>6)),this.potionUnlockedNum=new $(new u(n.Base,s.Add,()=>6));for(let t=0;t<W.HeroKind;t++)this.equipWeaponUnlockedNum[t]=new $(new u(n.Base,s.Add,()=>1)),this.equipArmorUnlockedNum[t]=new $(new u(n.Base,s.Add,()=>1)),this.equipJewelryUnlockedNum[t]=new $(new u(n.Base,s.Add,()=>1)),this.equipPotionUnlockedNum[t]=new $(new u(n.Base,s.Add,()=>1))}Start(){for(let t=0;t<this.equipmentSlots.length;t++)this.equipmentSlots[t]=new DC(this.data,t),this.equipmentSlots[t].Start();for(let t=0;t<this.potionSlots.length;t++)this.potionSlots[t]=new yC(this.data,t),this.potionSlots[t].Start();for(let t=0;t<W.HeroKind;t++)this.UpdateSetItemEquippedNumHero(t)}Update(){this.equipmentSlots.forEach((t,i)=>t.IsEquipped()?t.Start():t.IsEffectRegisteredClear());for(let t=260;t<this.potionSlots.length;t++)this.potionSlots[t].Start();for(let t=0;t<W.HeroKind;t++)this.UpdateSetItemEquippedNumHero(t);this.data.requireUpdate.value=!0}getHeroBySlotId(t){if(t>=520&&t<1240)return R.Warrior;if(t>=1240&&t<1960)return R.Wizard;if(t>=1960&&t<2680)return R.Angel;if(t>=2680&&t<3400)return R.Thief;if(t>=3400&&t<4120)return R.Archer;if(t>=4120&&t<4840)return R.Tamer}getPartBySlotId(t){const i=this.getHeroBySlotId(t),r=t-this.getOffset(i);return r<24?V.Weapon:r>=24&&r<48?V.Armor:V.Jewelry}getSetPart(t=R.Warrior,i=V.Weapon){let r=this.getOffset(t)+this.getPartOffset(i);return this.equipmentSlots.slice(r,r+24)}getPotionOffset(t){switch(t){case R.Warrior:return 260;case R.Wizard:return 266;case R.Angel:return 272;case R.Thief:return 278;case R.Archer:return 284;case R.Tamer:return 290;default:return 260}}getPotion(t){const i=this.getPotionOffset(t);return this.potionSlots.slice(i,i+6)}getLoadout(t){return{Weapon:this.getSetPart(t,V.Weapon),Armor:this.getSetPart(t,V.Armor),Jewelry:this.getSetPart(t,V.Jewelry),Utility:this.getPotion(t)}}getPartOffset(t){switch(t){case V.Weapon:return 0;case V.Armor:return 24;case V.Jewelry:return 48;default:return 0}}SetItemEquippedNum(t,i){return this.setItemEquippedNums[t][i]}UpdateSetItemEquippedNum(t,i){let r=0,h=this.getOffset(i),c=h+72;for(let m=0;m<this.data.equipment.setItemArray[t].length;m++){const w=this.data.equipment.setItemArray[t][m];for(let k=h;k<c;k++)if(this.equipmentSlots[k].globalInfo.kind==w&&this.equipmentSlots[k].IsEquipped()&&!this.equipmentSlots[k].isDisabled()){r++;break}}this.setItemEquippedNums[t][i]=r}UpdateSetItemEquippedNumHero(t){for(let i=0;i<W.EquipmentSetKind;i++)this.UpdateSetItemEquippedNum(i,t)}getOffset(t){switch(t){case R.Warrior:return 520+this.data.source.equipmentLoadoutIds[t]*72;case R.Wizard:return 1240+this.data.source.equipmentLoadoutIds[t]*72;case R.Angel:return 1960+this.data.source.equipmentLoadoutIds[t]*72;case R.Thief:return 2680+this.data.source.equipmentLoadoutIds[t]*72;case R.Archer:return 3400+this.data.source.equipmentLoadoutIds[t]*72;case R.Tamer:return 4120+this.data.source.equipmentLoadoutIds[t]*72;default:return 0}}CopyCurrentLoadout(){let t=[];const i=520+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72+this.data.source.currentHero*720,r=260+this.data.source.currentHero*6;for(let h=i;h<i+72;h++)t.push(this.data.inventory.equipmentSlots[h].Copy(Bt.Equipment));for(let h=r;h<r+6;h++)t.push(this.data.inventory.potionSlots[h].Copy());return t}PasteLoadout(t){let i=0;const r=520+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72+this.data.source.currentHero*720,h=260+this.data.source.currentHero*6;for(let c=r;c<r+72;c++){const m=this.equipmentSlots[c];m.SetKind(t[i].kind),m.optionEffects.forEach((w,k)=>{w.SetKind(t[i].optionEffects[k].kind),w.SetEffectValue(t[i].optionEffects[k].effectValue),w.SetLevel(t[i].optionEffects[k].level)}),m.forgeEffects.forEach((w,k)=>w.SetEffectValue(t[i].forgeEffects[k].effectValue)),i++}for(let c=h;c<h+6;c++)this.potionSlots[c].Paste(t[i]),i++;this.Update()}get initialEquipmentLoadoutOffset(){return 520+this.data.source.currentHero*720+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72}GetLoadoutBreakdownList(){const t=520+this.data.source.currentHero*720+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72,i=260+this.data.source.currentHero*6;let r={weapons:{},armors:{},jewelry:{},utility:{},enchants:{}};for(let h=t;h<t+72;h++){const c=this.equipmentSlots[h];if(c.kind==0||c.isDisabled())continue;let m=c.Name();switch(c.GetOptionEffects(!0).forEach(k=>r.enchants[k.Name()]=r.enchants[k.Name()]?r.enchants[k.Name()]+1:1),c.slotPart){case V.Weapon:r.weapons[m]=r.weapons[m]?r.weapons[m]+1:1;break;case V.Armor:r.armors[m]=r.armors[m]?r.armors[m]+1:1;break;case V.Jewelry:r.jewelry[m]=r.jewelry[m]?r.jewelry[m]+1:1;break}}for(let h=i;h<i+6;h++){const c=this.potionSlots[h];if(c.kind==0||c.isDisabled())continue;const m=M.PotionName(c.kind);r.utility[m]=r.utility[m]?r.utility[m]+1:1}return r}GetLoadoutEnchantments(t=!0){const i=520+this.data.source.currentHero*720+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72;let r=[];for(let h=i;h<i+72;h++){const c=this.equipmentSlots[h];if(c.kind==0||c.isDisabled())continue;const m=c.GetOptionEffects(t);m.length&&r.push(...m)}return r}ApplyLoadoutEnchantments(t){const i=t.reduce((c,m)=>c+m.value,0);let r=0;if(i>this.GetLoadoutEnchantments(!1).length)return;const h=520+this.data.source.currentHero*720+this.data.source.equipmentLoadoutIds[this.data.source.currentHero]*72;for(let c=h;c<h+72;c++){const m=this.equipmentSlots[c];if(m.kind==0||m.isDisabled())continue;const w=m.GetOptionEffects();for(let k=0;k<w.length;k++){const P=w[k];if(t[r].value==0&&r++,r==t.length||t[r].value==0){this.Update();return}P.SetKind(t[r].kind),t[r].value--}}}}class TC{constructor(t){o(this,"data");this.data=t}Start(){this.clearNum>5&&this.data.stats.SetEffectStats(v.ExpGain,new u(n.MissionMilestone,s.Mul,()=>.2)),this.clearNum>10&&this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.MissionMilestone,s.Mul,()=>.1)),this.clearNum>15&&this.data.town.SetEffectTownMatGain(new u(n.MissionMilestone,s.Add,()=>.5)),this.clearNum>20&&this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>10)),this.clearNum>25&&this.data.stats.SetEffectStats(v.ExpGain,new u(n.MissionMilestone,s.Mul,()=>.3)),this.clearNum>30&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.5)),this.clearNum>35&&this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.MissionMilestone,s.Mul,()=>.2)),this.clearNum>40&&this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.5)),this.clearNum>45&&this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>10)),this.clearNum>50&&this.data.town.SetEffectTownMatGain(new u(n.MissionMilestone,s.Add,()=>.5)),this.clearNum>60&&this.data.stats.SetEffectResourceGain(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>70&&this.data.stats.GoldGain().RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.5)),this.clearNum>80&&this.data.stats.SetEffectStats(v.ExpGain,new u(n.MissionMilestone,s.Mul,()=>.5)),this.clearNum>90&&this.data.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.5)),this.clearNum>120&&this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>140&&this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>160&&this.data.expedition.rewardMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.25)),this.clearNum>180&&this.data.stats.SetEffectResourceGain(new u(n.MissionMilestone,s.Mul,()=>10)),this.clearNum>275&&this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>300&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>325&&this.data.stats.GoldGain().RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>350&&this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.25)),this.clearNum>400&&this.data.blessingInfo.SetEffectMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>475&&this.data.stats.SetEffectResourceGain(new u(n.MissionMilestone,s.Mul,()=>500)),this.clearNum>550&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,s.Add,()=>10)),this.clearNum>650&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>5)),this.clearNum>750&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>100)),this.clearNum>900&&this.data.monster.petRankCap.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>50)),this.clearNum>1300&&this.data.stats.GoldGain().RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>2.5)),this.clearNum>1350&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,s.Add,()=>10)),this.clearNum>1450&&this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>.25)),this.clearNum>1550&&this.data.resource.goldCap.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>7.5)),this.clearNum>1600&&this.data.alchemy.catalyst.essenceProductionDiminishing.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>-.3)),this.clearNum>1650&&this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>1700&&this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Mul,()=>1)),this.clearNum>1800&&this.data.resource.slimeCoinInterest.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>.025)),this.clearNum>1900&&this.data.area.swarmScoreMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>.2)),this.clearNum>2100&&this.data.monster.loyaltyCap.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>100)),this.clearNum>2300&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,s.Add,()=>10)),this.clearNum>2600&&this.data.alchemy.catalyst.essenceProductionDiminishing.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>-.2)),this.clearNum>2700&&this.data.resource.slimeCoinInterest.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>.05)),this.clearNum>2900&&this.data.area.swarmScoreMultiplier.RegisterMultiplier(new u(n.MissionMilestone,s.Add,()=>.3)),this.clearNum>3100&&this.data.town.SetEffectLevelBonusForAllBuilding(new u(n.MissionMilestone,s.Add,()=>20))}get clearNum(){return this.data.area.TotalClearedMissionNum()}}class GC{constructor(t,i,r,h){o(this,"data");o(this,"globalInfo");o(this,"species");o(this,"color");o(this,"challengeMonsterKind",0);o(this,"unlockActiveEffectImprovement");o(this,"saveId");this.globalInfo=i,this.data=t,this.species=r,this.color=h,this.species==se.ChallengeBoss&&(this.challengeMonsterKind=h),this.saveId=this.color+10*this.species+this.challengeMonsterKind}get level(){return this.data.source.monsterPetLevels[this.saveId]}set level(t){this.data.source.monsterPetLevels[this.saveId]=t}get rank(){return this.data.source.monsterPetRanks[this.saveId]}set rank(t){this.data.source.monsterPetRanks[this.saveId]=t}get loyalty(){return this.data.source.monsterPetLoyalty[this.saveId]}set loyalty(t){this.data.source.monsterPetLoyalty[this.saveId]=t}MonsterPet(t,i){this.globalInfo=t,this.species=se.ChallengeBoss,this.challengeMonsterKind=i}Start(){this.SetEffect()}IsUnlocked(){return this.rank>0}Level(){return this.level}MaxLevel(){return this.rank*10}MaxRank(){return this.data.monster.petRankCap.Value()}get activeEffectKind(){return 0}get passiveEffectKind(){return Mt.petPassiveEffectKinds[this.species][this.color]}get passiveEffectKind2(){return Mt.petPassiveEffectKinds2[this.species][this.color]}SetEffect(){switch(this.passiveEffectKind){case O.ResourceGain:this.data.stats.SetEffectResourceGain(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.PotionEffect:this.data.potion.effectMultiplier.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.TamingPointGain:this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.Pet,s.Add,()=>this.effectValue));break;case O.GoldCap:this.data.resource.goldCap.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.GoldGain:this.data.stats.GoldGain().RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.ExpGain:this.data.stats.SetEffectStats(v.ExpGain,new u(n.Pet,s.Add,()=>this.effectValue));break;case O.DoubleMaterialChance:break;case O.GoldGainOnDisassemblePotion:this.data.potion.disassembleGoldGainMultiplier.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.DisassembleTownMatGain:this.data.equipment.disassembleMultiplier.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.TownMatGainFromDungeonReward:this.data.area.townMaterialDungeonRewardMultiplier.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.OilOfSlimeDropChance:this.data.monster.speciesMaterialDropChance[0].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.EnchantedClothDropChance:this.data.monster.speciesMaterialDropChance[1].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.SpiderSilkDropChance:this.data.monster.speciesMaterialDropChance[2].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.BatWingDropChance:this.data.monster.speciesMaterialDropChance[3].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.FairyDustDropChance:this.data.monster.speciesMaterialDropChance[4].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.FoxTailDropChance:this.data.monster.speciesMaterialDropChance[5].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.FishScalesDropChance:this.data.monster.speciesMaterialDropChance[6].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.CarvedBranchDropChance:this.data.monster.speciesMaterialDropChance[7].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.ThickFurDropChance:this.data.monster.speciesMaterialDropChance[8].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.UnicornHornDropChance:this.data.monster.speciesMaterialDropChance[9].RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.EquipProfGain:this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.Pet,s.Add,()=>this.effectValue));break;case O.MysteriousWaterGain:this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.ChestPortalOrbChance:this.data.area.chestPortalOrbChance.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.SkillProfGain:this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.TownMatGain:this.data.town.SetEffectTownMatGain(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.ResearchPowerStone:this.data.town.researchPower[0].RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.ResearchPowerCrystal:this.data.town.researchPower[1].RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.ResearchPowerLeaf:this.data.town.researchPower[2].RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.CatalystCriticalChance:this.data.alchemy.catalyst.criticalChanceMultiplier.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.MysteriousWaterCap:this.data.alchemy.maxMysteriousWaterExpandedCapNum.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.BlessingEffect:this.data.blessingInfo.SetEffectMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.LoyaltyPointGain:for(let t=0;t<W.HeroKind;t++)this.data.stats.heroes[t].loyaltyPoingGain.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.PetExpGain:for(let t=0;t<W.HeroKind;t++)this.data.stats.heroes[t].petExpGainPerDefeat.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.ExpeditionExpGain:this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.EssenceConversionRate:this.data.alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new u(n.Pet,s.Add,()=>this.effectValue));break;case O.SlimeCoinEfficiency:this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.SlimeCoinCap:this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.EquipmentEffect:this.data.equipment.effectMultiplier.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break;case O.AlchemyPointGain:this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue));break}switch(this.passiveEffectKind2){case De.GoldGain2:this.data.stats.GoldGain().RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue2));break;case De.TamingPointGain2:this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.Pet,s.Mul,()=>this.effectValue2));break;case De.RareMatChanceForBlueSlime2:this.data.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue2));break;case De.RareMatChance2:this.data.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.Pet,s.Mul,()=>this.effectValue2));break;case De.ChestPortalOrbNumber2:break}}get tempeffectValue(){return Mt.PetPassiveEffectValue(this.passiveEffectKind,this.rank)*(1+this.loyalty/100)*this.data.monster.petPassiveEffectMultiplier.Value()}get effectValue2(){return Math.max(this.tempeffectValue-this.maxEffectValue,0)*Mt.PetPassiveEffectValue2(this.passiveEffectKind2)}get effectValue(){return Math.min(this.maxEffectValue,Mt.PetPassiveEffectValue(this.passiveEffectKind,this.rank)*(1+this.loyalty/100)*this.data.monster.petPassiveEffectMultiplier.Value())}get effectIncrementValue(){return(Mt.PetPassiveEffectValue(this.passiveEffectKind,this.rank+1)-Mt.PetPassiveEffectValue(this.passiveEffectKind,this.rank))*(1+this.loyalty/100)*this.data.monster.petPassiveEffectMultiplier.Value()}get maxEffectValue(){return Mt.PetPassiveEffectMaxValue(this.passiveEffectKind)}MaxTPGAmongHeroes(){return this.BaseTamingPointGainPerCapture()*this.data.stats.MaxTPGAmongHeroes()}BaseTamingPointGainPerCapture(){return this.TPGByLevel()+this.TPGByDefeat()+this.TPGByCapture()}TPGByLevel(){return 1+.02*this.level}TPGByDefeat(){return Math.log2(1+this.globalInfo.DefeatedNum()/1e4)}TPGByCapture(){return Math.log2(1+this.globalInfo.CapturedNum()/1e4)}PassiveEffectString(){return Mt.petPassiveEffectKinds2[this.species][this.color]?`${M.MonsterPetPassiveEffectString(this)} (${M.MonsterPetPassiveEffectString2(this)})`:M.MonsterPetPassiveEffectString(this)}}class Yr{constructor(t,i,r){o(this,"data");o(this,"pet");o(this,"isLogStats",Array(W.HeroKind));o(this,"species");o(this,"color");o(this,"challengeMonsterKind");this.data=t,this.species=i,this.color=r,i==se.ChallengeBoss&&(this.challengeMonsterKind=r),this.pet=new GC(this.data,this,i,r)}Start(){this.pet.Start()}AttackElement(){return Mt.monsterAttackElements[this.species][this.colorId]}Hp(t,i){if(this.color==At.Metal)return Mt.monsterStats[this.species][this.colorId][0]*t;let r=Mt.monsterStats[this.species][this.colorId][0],h,c=r*(1+(t-1)/2+1*Math.pow(t/5,2)+2.5*Math.pow(t/10,3)+5*Math.pow(t/20,4)+25*Math.pow(t/40,5)+100*Math.pow(t/80,8)+1e3*Math.pow(t/120,10)+5e4*Math.pow(t/200,15)+25e4*Math.pow(t/300,20));return t<100&&(c*=.5+.5*t/100),t>=400&&(c*=Math.pow(3,(t-400)/100),t>=500&&(c*=Math.pow(5,(t-500)/100)),t>=600&&(c*=Math.pow(10,(t-600)/100)),this.species==se.ChallengeBoss&&(c*=Math.pow(5,(t-400)/100))),h=c*Math.pow(10,i/10),h}Mp(t,i){return 10}MAtk(t,i){if(this.color==At.Metal)return Mt.monsterStats[this.species][this.colorId][3]*t;let h=Mt.monsterStats[this.species][this.colorId][3]*(1+t*.75+20*Math.pow(t/100,3)+100*Math.pow(t/250,5));return t>=400&&(h*=Math.pow(3,(t-400)/100)),t>=500&&(h*=Math.pow(5,(t-500)/100)),t>=1e3&&(h*=Math.pow(10,(t-1e3)/100)),h*Math.pow(2,i/10)}Atk(t,i){if(this.color==At.Metal)return Mt.monsterStats[this.species][this.colorId][2]*t;let r=Mt.monsterStats[this.species][this.colorId][2],h;return h=r*(1+t*.75+20*Math.pow(t/100,3)+100*Math.pow(t/250,5)),t>=400&&(h*=Math.pow(3,(t-400)/100)),t>=500&&(h*=Math.pow(5,(t-500)/100)),t>=1e3&&(h*=Math.pow(10,(t-1e3)/100)),h*Math.pow(2,i/10)}Def(t,i){if(this.color==At.Metal)return Mt.monsterStats[this.species][this.colorId][4];let h=Mt.monsterStats[this.species][this.colorId][4]*(t+10*Math.pow(t/100,3)+50*Math.pow(t/250,5));return t>=400&&(h*=Math.pow(2,(t-400)/100)),t>=1e3&&(h*=Math.pow(10,(t-1e3)/100)),h*Math.pow(2,i/10)}MDef(t,i){if(this.color==At.Metal)return Mt.monsterStats[this.species][this.colorId][5];let h=Mt.monsterStats[this.species][this.colorId][5]*(t+10*Math.pow(t/100,3)+50*Math.pow(t/250,5));return t>=400&&(h*=Math.pow(2,(t-400)/100)),t>=1e3&&(h*=Math.pow(10,(t-1e3)/100)),h*Math.pow(2,i/10)}Spd(){return Mt.monsterStats[this.species][this.colorId][6]}Fire(){return Mt.monsterStats[this.species][this.colorId][7]}Ice(){return Mt.monsterStats[this.species][this.colorId][8]}Thunder(){return Mt.monsterStats[this.species][this.colorId][9]}Light(){return Mt.monsterStats[this.species][this.colorId][10]}Dark(){return Mt.monsterStats[this.species][this.colorId][11]}PhyCrit(t){return .01*Math.log2(1+t)}MagCrit(t){return .01*Math.log2(1+t)}CriticalDamage(){return 2}DebuffResistance(){if(this.species==se.ChallengeBoss)switch(this.challengeMonsterKind){case Dt.Florzporb:return 0;case Dt.Arachnetta:return .05;case Dt.GuardianKor:return .1;case Dt.Nostro:return .2;case Dt.LadyEmelda:return .5;case Dt.NariSune:return .9;case Dt.Octobaddie:return .9999;case Dt.Bananoon:return .99999;case Dt.Glorbliorbus:return 1;case Dt.DistortionSlime:return 1}return 0}Exp(t,i){let r=(25+3*(2*t+2*Math.pow(t/10,2)+5*Math.pow(t/50,3)+10*Math.pow(t/100,4)))*Math.pow(2,i/10)*Mt.ColorFactor(this.color)*Mt.SpeciesFactor(this.species);return t>=400&&(r*=Math.pow(2,(t-400)/100)),t>=500&&(r*=Math.pow(2,(t-500)/100)),t>=600&&(r*=Math.pow(2,(t-600)/100)),t>=700&&(r*=Math.pow(2,(t-700)/100)),t>=800&&(r*=Math.pow(2,(t-800)/100)),t>=900&&(r*=Math.pow(2,(t-900)/100)),r}Damage(t,i){return this.AttackElement()==F.Physical?this.Atk(t,i):this.MAtk(t,i)}get colorId(){return this.species==se.ChallengeBoss?this.challengeMonsterKind:this.color}MoveSpeed(t=0,i=0,r=!1,h=R.Warrior){return 1}DefeatedNumHero(t=!1,i){let r=this.color+10*i,h=i+10*this.challengeMonsterKind;switch(this.species){case se.Slime:return t?this.data.source.monsterMutantDefeatedNumsSlime[r]:this.data.source.monsterDefeatedNumsSlime[r];case se.MagicSlime:return t?this.data.source.monsterMutantDefeatedNumsMagicSlime[r]:this.data.source.monsterDefeatedNumsMagicSlime[r];case se.Spider:return t?this.data.source.monsterMutantDefeatedNumsSpider[r]:this.data.source.monsterDefeatedNumsSpider[r];case se.Bat:return t?this.data.source.monsterMutantDefeatedNumsBat[r]:this.data.source.monsterDefeatedNumsBat[r];case se.Fairy:return t?this.data.source.monsterMutantDefeatedNumsFairy[r]:this.data.source.monsterDefeatedNumsFairy[r];case se.Fox:return t?this.data.source.monsterMutantDefeatedNumsFox[r]:this.data.source.monsterDefeatedNumsFox[r];case se.DevilFish:return t?this.data.source.monsterMutantDefeatedNumsDevilFish[r]:this.data.source.monsterDefeatedNumsDevilFish[r];case se.Treant:return t?this.data.source.monsterMutantDefeatedNumsTreant[r]:this.data.source.monsterDefeatedNumsTreant[r];case se.FlameTiger:return t?this.data.source.monsterMutantDefeatedNumsFlameTiger[r]:this.data.source.monsterDefeatedNumsFlameTiger[r];case se.Unicorn:return t?this.data.source.monsterMutantDefeatedNumsUnicorn[r]:this.data.source.monsterDefeatedNumsUnicorn[r];case se.Mimic:return t?this.data.source.monsterMutantDefeatedNumsMimic[r]:this.data.source.monsterDefeatedNumsMimic[r];case se.ChallengeBoss:return t?this.data.source.monsterMutantDefeatedNumsChallenge[h]:this.data.source.monsterDefeatedNumsChallenge[h];default:return 0}}DefeatedNum(t=!1){let i=0;for(let r=0;r<W.HeroKind;++r)t?i+=this.DefeatedNumHero(!0,r):i+=this.DefeatedNumHero(!1,r);return i}CapturedNum(t=!1){let i=0;for(let r=0;r<W.HeroKind;++r)t?i+=this.CapturedNumHero(!0,r):i+=this.CapturedNumHero(!1,r);return i}CapturedNumHero(t=!1,i){let r=this.color+10*i,h=i+10*this.challengeMonsterKind;switch(this.species){case se.Slime:return t?this.data.source.monsterMutantCapturedNumsSlime[r]:this.data.source.monsterCapturedNumsSlime[r];case se.MagicSlime:return t?this.data.source.monsterMutantCapturedNumsMagicSlime[r]:this.data.source.monsterCapturedNumsMagicSlime[r];case se.Spider:return t?this.data.source.monsterMutantCapturedNumsSpider[r]:this.data.source.monsterCapturedNumsSpider[r];case se.Bat:return t?this.data.source.monsterMutantCapturedNumsBat[r]:this.data.source.monsterCapturedNumsBat[r];case se.Fairy:return t?this.data.source.monsterMutantCapturedNumsFairy[r]:this.data.source.monsterCapturedNumsFairy[r];case se.Fox:return t?this.data.source.monsterMutantCapturedNumsFox[r]:this.data.source.monsterCapturedNumsFox[r];case se.DevilFish:return t?this.data.source.monsterMutantCapturedNumsDevilFish[r]:this.data.source.monsterCapturedNumsDevilFish[r];case se.Treant:return t?this.data.source.monsterMutantCapturedNumsTreant[r]:this.data.source.monsterCapturedNumsTreant[r];case se.FlameTiger:return t?this.data.source.monsterMutantCapturedNumsFlameTiger[r]:this.data.source.monsterCapturedNumsFlameTiger[r];case se.Unicorn:return t?this.data.source.monsterMutantCapturedNumsUnicorn[r]:this.data.source.monsterCapturedNumsUnicorn[r];case se.Mimic:return t?this.data.source.monsterMutantCapturedNumsMimic[r]:this.data.source.monsterCapturedNumsMimic[r];case se.ChallengeBoss:return t?this.data.source.monsterMutantCapturedNumsChallenge[h]:this.data.source.monsterCapturedNumsChallenge[h];default:return 0}}MonsterName(){return this.species==se.ChallengeBoss?Dt[this.challengeMonsterKind]:`${M.MonsterSpeciesName(this.species)} ${At[this.color]}`}}class BC{constructor(t){o(this,"data");o(this,"petActiveCap");o(this,"loyaltyCap");o(this,"petRankCap");o(this,"globalInformations",Array(W.MonsterSpecies));o(this,"monsterDefeatNumMultiplier");o(this,"globalInfoList",[]);o(this,"speciesMaterialDropChance",Array(W.MonsterSpecies));o(this,"colorMaterialDropChance");o(this,"trapNotConsumedChance",new $);o(this,"monsterCapturableLevel",Array(W.HeroKind));o(this,"doubleCaptureChance",Array(W.HeroKind));o(this,"captureTripleChance",Array(W.HeroKind));o(this,"petStatsMultiplier");o(this,"petPassiveEffectMultiplier");o(this,"isPetActive",Array(W.PetActiveEffectKind));o(this,"tempIsPetActive",Array(W.PetActiveEffectKind));o(this,"petRankMilestoneList",[]);o(this,"isLog",Array(W.HeroKind));o(this,"memoTotalPetRank");this.data=t,this.petRankCap=new $(new u(n.Base,s.Add,()=>50)),this.loyaltyCap=new $(new u(n.Base,s.Add,()=>100)),this.petActiveCap=new $(new u(n.Base,s.Add,()=>5)),this.monsterDefeatNumMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.petStatsMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.petPassiveEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.petPassiveEffectMultiplier.name="Pet Passive Effect",this.colorMaterialDropChance=new $(new u(n.Base,s.Add,()=>Mt.colorDropChanceBase));for(let i=0;i<10;i++){this.globalInformations[i]=Array(W.MonsterColor);for(let r=0;r<this.globalInformations[i].length;r++)this.globalInformations[i][r]=new Yr(this.data,i,r),this.globalInfoList.push(this.globalInformations[i][r])}this.globalInformations[10]=[],this.globalInformations[10][0]=new Yr(this.data,se.Mimic,At.Normal),this.globalInfoList.push(this.globalInformations[10][0]),this.globalInformations[11]=Array(W.ChallengeMonsterKind);for(let i=0;i<this.globalInformations[11].length;i++)this.globalInformations[11][i]=new Yr(this.data,se.ChallengeBoss,i),this.globalInfoList.push(this.globalInformations[11][i]);for(let i=0;i<this.speciesMaterialDropChance.length;i++)this.speciesMaterialDropChance[i]=new $(new u(n.Base,s.Add,()=>Mt.dropChanceBase));for(let i=0;i<this.captureTripleChance.length;i++)this.doubleCaptureChance[i]=new $,this.doubleCaptureChance[i].name="Double Capture Chance",this.captureTripleChance[i]=new $,this.captureTripleChance[i].name="Triple Capture Chance"}Start(){this.globalInfoList.forEach(t=>{t.Start()}),this.SetPetRankMilestone()}TotalPetRank(){if(this.memoTotalPetRank)return this.memoTotalPetRank;let t=0;for(let i=0;i<W.MonsterSpecies;i++)t+=this.TotalPetRankSpecies(i);return this.memoTotalPetRank=t,t}SetEffectSpeciesMaterialDropChance(t){for(let i=0;i<this.speciesMaterialDropChance.length;i++)this.speciesMaterialDropChance[i].RegisterMultiplier(t)}SetEffectDoubleCaptureChance(t){for(let i=0;i<this.doubleCaptureChance.length;i++)this.doubleCaptureChance[i].RegisterMultiplier(t)}SetEffectTripleCaptureChance(t){for(let i=0;i<this.captureTripleChance.length;i++)this.captureTripleChance[i].RegisterMultiplier(t)}TotalPetRankSpecies(t){let i=0;for(let r=0;r<this.globalInformations[t].length;r++)i+=this.globalInformations[t][r].pet.rank;return i}CapturedNum(){return this.globalInfoList.reduce((t,i)=>t+i.CapturedNum(),0)}Monster(t,i){return this.GlobalInformation(t,i)}GlobalInformation(t,i){return this.globalInformations[t][i]}GlobalInformationChallengeBoss(t){return this.globalInformations[11][t]}isUnlocked(t){return()=>this.TotalPetRank()>t}SetPetRankMilestone(){this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(10))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(20))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(30))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>.15,this.isUnlocked(40))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(50))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(60))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(70))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>.25,this.isUnlocked(80))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(90))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(100))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(140))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(160))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(200))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>.25,this.isUnlocked(240))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>.75,this.isUnlocked(260))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.15,this.isUnlocked(300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(320))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(340))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(360))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(400))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(440))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(480))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.2,this.isUnlocked(500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>1,this.isUnlocked(520))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.15,this.isUnlocked(540))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(560))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(580))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>.75,this.isUnlocked(700))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.2,this.isUnlocked(740))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(800))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(825))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(900))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>1,this.isUnlocked(950))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(975))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.25,this.isUnlocked(1e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>1.25,this.isUnlocked(1025))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.2,this.isUnlocked(1050))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(1075))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(1100))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(1200))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>1.25,this.isUnlocked(1250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.25,this.isUnlocked(1300))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(1350))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(1400))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(1450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.3,this.isUnlocked(1500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(1550))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(1600))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(1700))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(1750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.3,this.isUnlocked(1800))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(1850))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(1900))),this.colorMaterialDropChance.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>.1,this.isUnlocked(1950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.35,this.isUnlocked(2e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>1.75,this.isUnlocked(2050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1,this.isUnlocked(2100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>1.75,this.isUnlocked(2250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.35,this.isUnlocked(2300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.15,this.isUnlocked(2350))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.2,this.isUnlocked(2450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.4,this.isUnlocked(2500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>2,this.isUnlocked(2550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1,this.isUnlocked(2600))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.15,this.isUnlocked(2650))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>2,this.isUnlocked(2750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.4,this.isUnlocked(2800))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(2850))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.45,this.isUnlocked(3e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>2.25,this.isUnlocked(3050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1,this.isUnlocked(3100))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.15,this.isUnlocked(3150))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(3200))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>2.25,this.isUnlocked(3250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.45,this.isUnlocked(3300))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.2,this.isUnlocked(3400))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.5,this.isUnlocked(3500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>2.5,this.isUnlocked(3550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1,this.isUnlocked(3600))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.15,this.isUnlocked(3650))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>2.5,this.isUnlocked(3750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.5,this.isUnlocked(3800))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(3850))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.55,this.isUnlocked(4e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>2.75,this.isUnlocked(4050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(4100))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.2,this.isUnlocked(4150))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>2.75,this.isUnlocked(4250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.65,this.isUnlocked(4300))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.2,this.isUnlocked(4400))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(4450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.6,this.isUnlocked(4500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>3,this.isUnlocked(4550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(4600))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.2,this.isUnlocked(4650))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>3,this.isUnlocked(4750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>.9,this.isUnlocked(4800))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.1,this.isUnlocked(4850))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(4900))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>.7,this.isUnlocked(5e3))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(5100))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>5,this.isUnlocked(5150))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>3.5,this.isUnlocked(5250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(5300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.2,this.isUnlocked(5350))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(5400))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(5450))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>10,this.isUnlocked(5550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>1.5,this.isUnlocked(5600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>4,this.isUnlocked(5750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>5,this.isUnlocked(5800))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>2,this.isUnlocked(6e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>20,this.isUnlocked(6050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>2,this.isUnlocked(6100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>4.5,this.isUnlocked(6250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>15,this.isUnlocked(6300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.25,this.isUnlocked(6350))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.15,this.isUnlocked(6400))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(6450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>3,this.isUnlocked(6500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>30,this.isUnlocked(6550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>2,this.isUnlocked(6600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>5.5,this.isUnlocked(6750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>30,this.isUnlocked(6800))),this.SetEffectSpeciesMaterialDropChance(new u(n.PetRankMilestone,s.Mul,()=>.4,this.isUnlocked(6950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>5,this.isUnlocked(7e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>50,this.isUnlocked(7050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>2,this.isUnlocked(7100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>7,this.isUnlocked(7250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>50,this.isUnlocked(7300))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.3,this.isUnlocked(7350))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(7450))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>10,this.isUnlocked(7500))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>100,this.isUnlocked(7550))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>3,this.isUnlocked(7600))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>9,this.isUnlocked(7750))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>100,this.isUnlocked(7800))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.2,this.isUnlocked(8e3))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>300,this.isUnlocked(8050))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>10,this.isUnlocked(8100))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>15,this.isUnlocked(8200))),this.SetEffectDoubleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.35,this.isUnlocked(8350))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(8450))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>12,this.isUnlocked(8600))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>150,this.isUnlocked(8650))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.25,this.isUnlocked(8750))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>500,this.isUnlocked(8850))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>25,this.isUnlocked(8950))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>20,this.isUnlocked(9100))),this.data.stats.SetEffectPetEXPGain(new u(n.PetRankMilestone,s.Mul,()=>20,this.isUnlocked(9250))),this.data.stats.SetEffectLoyalityPointGain(new u(n.PetRankMilestone,s.Mul,()=>250,this.isUnlocked(9300))),this.SetEffectTripleCaptureChance(new u(n.PetRankMilestone,s.Add,()=>.3,this.isUnlocked(9450))),this.petActiveCap.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>1,this.isUnlocked(9650))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.PetRankMilestone,s.Mul,()=>1e3,this.isUnlocked(9750))),this.petStatsMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Mul,()=>50,this.isUnlocked(9900))),this.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.PetRankMilestone,s.Add,()=>25,this.isUnlocked(9950)))}}class xC{constructor(){o(this,"nitroCap");o(this,"maxNitroSpeed");this.nitroCap=new $(new u(n.Base,s.Add,()=>5e3)),this.nitroCap.name="Nitro Cap",this.maxNitroSpeed=new $(new u(n.Base,s.Add,()=>2)),this.nitroCap.numberType=gt.Normal}}var We=(e=>(e[e.Common=0]="Common",e[e.Uncommon=1]="Uncommon",e[e.Rare=2]="Rare",e[e.SuperRare=3]="SuperRare",e[e.Epic=4]="Epic",e))(We||{});class Rt{constructor(t){o(this,"data");o(this,"kind",0);o(this,"type");this.data=t,this.SetInfo()}get talismanRarity(){return We.Common}get level(){return this.data.source.potionLevels[this.kind]}set level(t){this.data.source.potionLevels[this.kind]=Math.min(this.type==qe.Talisman?50:100,t)}EffectValue(t){return 0}IsActiveEffect(t,i){return!(!this.data.source.isActiveBattle[t]||i()==0||this.kind==0)}get effectValue(){return this.EffectValue(this.level)*this.data.potion.effectMultiplier.Value()}PassiveEffectValue(t){return this.EffectValue(t)*.01}ModifiedPassiveEffectValue(t){return this.PassiveEffectValue(t)*this.data.potion.talismanPassiveEffectMultiplier.Value()}get passiveEffectMaxValue(){return 0}get passiveEffectValue(){return this.passiveEffectMaxValue<=0?this.ModifiedPassiveEffectValue(this.disassembledNum):Math.min(this.passiveEffectMaxValue,this.ModifiedPassiveEffectValue(this.disassembledNum))}get cooltime(){return 0}SetInfo(){}get disassembledNum(){return this.data.source.potionDisassembledNums[this.kind]}set disassembledNum(t){this.data.source.potionDisassembledNums[this.kind]=t}get talismanDisassembleFragmentNumPerLevel(){return Math.pow(5,this.talismanRarity)}SetEffect(t,i){}NameString(){return M.PotionName(this.kind)}EffectValueString(){return M.PotionEffect(this.kind,this.passiveEffectValue,!0)}}class Ze extends Rt{constructor(){super(...arguments);o(this,"type",qe.Talisman)}get talismanKind(){return H.AncientAngelsBadge}get effectValue(){return this.EffectValue(this.level)}SetInfo(){this.kind=this.talismanKind,this.SetPassiveEffect()}SetPassiveEffect(){}Cost(i){switch(this.talismanRarity){case We.Common:return 9*i+Math.pow(i,2);case We.Uncommon:return 99*i+Math.pow(i,3);case We.Rare:return 999*i+Math.pow(i,4);case We.SuperRare:return 9999*i+Math.pow(i,5);case We.Epic:return 99999*i+Math.pow(i,10);default:return 1e13}}}class FC extends Ze{get talismanKind(){return H.AncientAngelsBadge}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class _C extends Ze{get talismanKind(){return H.AncientArchersBadge}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.battles[t].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.WardedFury).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class IC extends Ze{get talismanKind(){return H.AncientBatBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Bat).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Bat).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class VC extends Ze{get talismanKind(){return H.AncientDevilfishBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.DevilFish).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.DevilFish).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class HC extends Ze{get talismanKind(){return H.AncientFairyBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Fairy).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Fairy).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class qC extends Ze{get talismanKind(){return H.AncientFlametigerBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.FlameTiger).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.FlameTiger).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class NC extends Ze{get talismanKind(){return H.AncientFoxBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Fox).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Fox).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class WC extends Ze{get talismanKind(){return H.AncientMagicslimeBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.MagicSlime).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.MagicSlime).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class $C extends Ze{get talismanKind(){return H.AncientSlimeBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Slime).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Slime).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class UC extends Ze{get talismanKind(){return H.AncientSpiderBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Spider).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Spider).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class OC extends Ze{get talismanKind(){return H.AncientTamersBadge}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 10}EffectValue(t){return .05*t}PassiveEffectValue(t){return .001*t}SetPassiveEffect(){this.data.sdg.dungeonCoinGain.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.TamingPointGain).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class zC extends Ze{get talismanKind(){return H.AncientThiefsBadge}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.battles[t].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.ArmoredFury).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class JC extends Ze{get talismanKind(){return H.AncientTreantBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Treant).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Treant).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class jC extends Ze{get talismanKind(){return H.AncientUnicornBadge}get talismanRarity(){return We.Uncommon}EffectValue(t){return .1*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.Unicorn).RegisterMultiplier(new u(n.Talisman,s.After,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.Unicorn).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class XC extends Ze{get talismanKind(){return H.AncientWarriorsBadge}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.ElementDamage(t,F.Physical).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class QC extends Ze{get talismanKind(){return H.AncientWizardsBadge}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 1e3}EffectValue(t){return .05*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){this.data.stats.ElementDamage(t,F.Fire).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Ice).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Thunder).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Light).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Dark).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class YC extends Ze{get talismanKind(){return H.AngelsBadge}get talismanRarity(){return We.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[2].RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>-this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.SkillProficiencyGain).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class ZC extends Ze{get talismanKind(){return H.ArachnettaDoll}get talismanRarity(){return We.Rare}EffectValue(t){return .01*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.resource.goldCap.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.skill.baseAttackPoisonChance[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class KC extends Ze{get talismanKind(){return H.ArchersBadge}get talismanRarity(){return We.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[4].RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>-this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.CriticalDamage).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class eL extends Ze{get talismanKind(){return H.AscendedFromIEH1}get talismanRarity(){return We.Epic}EffectValue(t){return .1*t}SetEffect(t,i){return this.data.stats.HeroStats(t,v.ExpGain).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class tL extends Rt{SetInfo(){this.kind=H.BasicElixirOfBrains,this.type=qe.MagicalDamage}SetEffect(t,i){return[this.data.stats.ElementDamage(t,F.Fire).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Ice).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Thunder).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Light).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i))),this.data.stats.ElementDamage(t,F.Dark).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))]}EffectValue(t){return .2+.02*t}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class sL extends Rt{SetInfo(){this.kind=H.BasicElixirOfBrawn,this.type=qe.PhysicalDamage}SetEffect(t,i){return this.data.stats.ElementDamage(t,F.Physical).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .2+.02*t}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class iL extends Rt{SetInfo(){this.kind=H.BasicElixirOfConcentration,this.type=qe.MaxMP}SetEffect(t,i){return this.data.stats.BasicStats(t,d.MP).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return 20+10*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class aL extends Rt{SetInfo(){this.kind=H.BasicElixirOfFortitude,this.type=qe.MaxHP}SetEffect(t,i){return this.data.stats.BasicStats(t,d.HP).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return 50+25*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class rL extends Rt{SetInfo(){this.kind=H.BasicElixirOfUnderstanding,this.type=qe.SkillProfGain}SetEffect(t,i){return this.data.stats.HeroStats(t,v.SkillProficiencyGain).RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .1+.005*t}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class lL extends Ze{get talismanKind(){return H.BatBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.ATK,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.ATK).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class nL extends Ze{get talismanKind(){return H.BerserkersStone}get talismanRarity(){return We.SuperRare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .2*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,.001*t)}SetPassiveEffect(){this.data.equipment.effectMultiplier.RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MonsterDamage(t,se.ChallengeBoss).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class uL extends Rt{SetInfo(){this.kind=H.BlazingAuraDraught,this.type=qe.Aura}SetEffect(t,i){return this.data.stats.DebuffChance(t,at.Knockback).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class hL extends Rt{SetInfo(){this.kind=H.BurningDefensePotion,this.type=qe.ElementResistance}SetEffect(t,i){return this.data.stats.ElementResistance(t,F.Fire).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class cL extends Ze{get talismanKind(){return H.CertificateOfCompetence}get talismanRarity(){return We.SuperRare}EffectValue(t){return .005*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.skill.skillCastSpeedModifier[t].RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class oL extends Rt{SetInfo(){this.kind=H.ChilledHealthPotion,this.type=qe.Health}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.5+.05*t)*this.data.potion.GlobalInfo(H.MinorHealthPotion).effectValue}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class fL extends Rt{SetInfo(){this.kind=H.ChilledRegenerationPoultice,this.type=qe.HealthRegen}SetEffect(t,i){return this.data.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.5+.05*t)*this.data.potion.GlobalInfo(H.MinorRegenerationPoultice).effectValue}AlchemyPointGain(t){return 6*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class pL extends Rt{SetInfo(){this.kind=H.CoolHeadOintment,this.type=qe.ExpGain}SetEffect(t,i){return this.data.stats.HeroStats(t,v.ExpGain).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .2+t*.02}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class dL extends Rt{SetInfo(){this.kind=H.DarkRope,this.type=qe.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class gL extends Ze{get talismanKind(){return H.DevilfishBadge}get talismanRarity(){return We.Common}EffectValue(t){return 5e-4*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class SL extends Rt{SetInfo(){this.kind=H.ElectricDefensePotion,this.type=qe.ElementResistance}SetEffect(t,i){return this.data.stats.ElementResistance(t,F.Thunder).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class mL extends Ze{constructor(){super(...arguments);o(this,"passiveEffectNumberType",gt.Normal)}get talismanKind(){return H.EnchantedAlembic}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 5}EffectValue(i){return .001*i}PassiveEffectValue(i){return Math.min(this.passiveEffectMaxValue,.001*i)}SetPassiveEffect(){this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(i,r){return this.data.potion.effectMultiplier.RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*r(),()=>this.IsActiveEffect(i,r)))}}class ML extends Ze{get talismanKind(){return H.FairyBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.MATK,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.MATK).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class EL extends Rt{SetInfo(){this.kind=H.FierySlayersOil,this.type=qe.SlayerOil}SetEffect(t,i){return this.data.stats.ElementSlayerDamage(t,F.Fire).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class vL extends Rt{SetInfo(){this.kind=H.FireRope,this.type=qe.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class wL extends Ze{get talismanKind(){return H.FlametigerBadge}get talismanRarity(){return We.Common}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class kL extends Ze{get talismanKind(){return H.FlorzporbDoll}get talismanRarity(){return We.Rare}EffectValue(t){return .1*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.GoldGain().RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.skill.baseAttackSlimeBall[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class AL extends Ze{get talismanKind(){return H.FoxBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .5*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.MP,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.MP).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class RL extends Rt{SetInfo(){this.kind=H.FrostyDefensePotion,this.type=qe.ElementResistance}SetEffect(t,i){return this.data.stats.ElementResistance(t,F.Ice).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .2+t*.01}AlchemyPointGain(t){return 5*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class CL extends Rt{SetInfo(){this.kind=H.FrostySlayersOil,this.type=qe.SlayerOil}SetEffect(t,i){return this.data.stats.ElementSlayerDamage(t,F.Ice).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class LL extends Ze{get talismanKind(){return H.GuardianKorDoll}get talismanRarity(){return We.Rare}EffectValue(t){return .001*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.heroes[t].guardianKorInvalidDamageHpPercent.RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class PL extends Ze{get talismanKind(){return H.GuildMembersEmblem}get talismanRarity(){return We.SuperRare}get passiveEffectMaxValue(){return .99}EffectValue(t){return .05*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.guild.expRequirementReduction.RegisterMultiplier(new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.heroes[t].guildExpGain.RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class DL extends Rt{SetInfo(){this.kind=H.IceRope,this.type=qe.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class yL extends Rt{SetInfo(){this.kind=H.IcyAuraDraught,this.type=qe.Aura}SetEffect(t,i){return this.data.stats.DebuffChance(t,at.SpdDown).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class bL extends Ze{get talismanKind(){return H.LadyEmeldaDoll}get talismanRarity(){return We.Rare}EffectValue(t){return .025*t}PassiveEffectValue(t){return 1e-4*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.ElementAbsorption(t,F.Fire).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,F.Ice).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,F.Thunder).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,F.Light).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue)),this.data.stats.ElementAbsorption(t,F.Dark).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.skill.ladyEmeldaEffectMultiplier[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class TL extends Rt{SetInfo(){this.kind=H.LightRope,this.type=qe.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class GL extends Ze{get talismanKind(){return H.MagicslimeBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.MDEF,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.MDEF).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class BL extends Ze{get talismanKind(){return H.MasonsTrowel}get talismanRarity(){return We.SuperRare}get passiveEffectMaxValue(){return 2}EffectValue(t){return .1*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,.001*t)}SetPassiveEffect(){this.data.town.townLevelEffectMultiplier.RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.town.townMaterialGainMultiplier[t].RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class xL extends Rt{SetInfo(){this.kind=H.MaterialMultiplierMist,this.type=qe.MaterialGain}SetEffect(t,i){return this.data.stats.MaterialLootGain(t).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return 1+.1*t}get effectValue(){return Math.floor(this.EffectValue(this.level)*this.data.potion.effectMultiplier.Value())}AlchemyPointGain(t){return 4*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class FL extends Rt{SetInfo(){this.kind=H.MinorHealthPotion,this.type=qe.Health}EffectValue(t){return 15+5*t}AlchemyPointGain(t){return 1*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class _L extends Rt{SetInfo(){this.kind=H.MinorManaRegenerationPoultice,this.type=qe.ManaRegen}SetEffect(t,i){return this.data.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return 5+t}AlchemyPointGain(t){return 3*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class IL extends Rt{SetInfo(){this.kind=H.MinorRegenerationPoultice,this.type=qe.HealthRegen}SetEffect(t,i){return this.data.stats.HpRegenerate(t).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return 1+.2*t}AlchemyPointGain(t){return 2*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class VL extends Rt{SetInfo(){this.kind=H.MinorResourcePoultice,this.type=qe.ResourceGain}SetEffect(t,i){return[this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i))),this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i))),this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))]}EffectValue(t){return .25+.05*t}AlchemyPointGain(t){return 1*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class HL extends Ze{get talismanKind(){return H.NariSuneDoll}get talismanRarity(){return We.Rare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .005*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,5e-4*t)}SetPassiveEffect(){this.data.area.largeSwarmChanceInsteadOfRegular.RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.skill.skillRangeMultiplier[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class qL extends Ze{get talismanKind(){return H.NostroDoll}get talismanRarity(){return We.Rare}EffectValue(t){return .01*t}PassiveEffectValue(t){return 1e-4*t}SetPassiveEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.ElementAbsorption(t,F.Physical).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.MpRegenerate(t).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i()*this.data.stats.BasicStats(t,d.MP).Value(),()=>this.IsActiveEffect(t,i)))}}class NL extends Ze{get talismanKind(){return H.OctobaddieDoll}get talismanRarity(){return We.Rare}EffectValue(t){return 1/400*t}PassiveEffectValue(t){return .01*t}SetPassiveEffect(){this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.skill.skillEffectRangeMultiplier[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class WL extends Rt{SetInfo(){this.kind=H.ShockingSlayersOil,this.type=qe.SlayerOil}SetEffect(t,i){return this.data.stats.ElementSlayerDamage(t,F.Thunder).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .1+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class $L extends Rt{SetInfo(){this.kind=H.SlickerShoeSolution,this.type=qe.Move}SetEffect(t,i){return this.data.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}get isEffectedByLowerTier(){return!0}EffectValue(t){return(1.25+.005*t)*this.data.potion.GlobalInfo(H.SlickShoeSolution).effectValue}AlchemyPointGain(t){return 8*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class UL extends Rt{SetInfo(){this.kind=H.SlickShoeSolution,this.type=qe.Move}SetEffect(t,i){return this.data.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .1+.001*t}AlchemyPointGain(t){return 3*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class OL extends Rt{SetInfo(){this.kind=H.SlightlyStickySalve,this.type=qe.GoldGain}SetEffect(t,i){return this.data.stats.GoldGain().RegisterMultiplier(new u(n.Potion,s.Mul,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .25+t*.01}AlchemyPointGain(t){return 10*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class zL extends Ze{get talismanKind(){return H.SlimeBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return 1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.HP,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.HP).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class JL extends Ze{get talismanKind(){return H.SpiderBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.DEF,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.DEF).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class jL extends Ze{get talismanKind(){return H.TamersBadge}get talismanRarity(){return We.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .05*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[5].RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>-this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.ExpGain).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class XL extends Ze{get talismanKind(){return H.ThiefsBadge}get talismanRarity(){return We.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .001*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[3].RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>-this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.EquipmentDropChance).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class QL extends Rt{SetInfo(){this.kind=H.ThrowingNet,this.type=qe.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class YL extends Rt{SetInfo(){this.kind=H.ThunderRope,this.type=qe.Trap}EffectValue(t){return .2}get effectValue(){return this.EffectValue(0)*this.data.potion.trapEffectMultiplier.Value()}}class ZL extends Ze{get talismanKind(){return H.TrackersMap}get talismanRarity(){return We.SuperRare}get passiveEffectMaxValue(){return 1}EffectValue(t){return .5*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.area.epicSwarmChanceInsteadOfLarge.RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.area.clearCountBonusClass[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class KL extends Ze{get talismanKind(){return H.TrappersTag}get talismanRarity(){return We.SuperRare}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.monster.captureTripleChance[t].RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class eP extends Ze{get talismanKind(){return H.TreantBadge}get talismanRarity(){return We.Common}EffectValue(t){return .005*t}PassiveEffectValue(t){return .025*t}SetPassiveEffect(){this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.ExpGain).RegisterMultiplier(new u(n.Talisman,s.Add,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class tP extends Ze{get talismanKind(){return H.UnicornBadge}get talismanRarity(){return We.Common}EffectValue(t){return .001*t}PassiveEffectValue(t){return .1*t}SetPassiveEffect(){this.data.stats.SetEffectBasicStats(d.SPD,new u(n.TalismanPassive,s.Add,()=>this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.BasicStats(t,d.SPD).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class sP extends Ze{get talismanKind(){return H.WarriorsBadge}get talismanRarity(){return We.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[0].RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>-this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.PhysCritChance).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}class iP extends Rt{SetInfo(){this.kind=H.WhirlingAuraDraught,this.type=qe.Aura}SetEffect(t,i){return this.data.stats.DebuffChance(t,at.Electric).RegisterMultiplier(new u(n.Potion,s.Add,()=>this.effectValue,()=>this.IsActiveEffect(t,i)))}EffectValue(t){return .25+t*.005}AlchemyPointGain(t){return 7*this.data.alchemy.alchemyPointGainMultiplier.Value()}}class aP extends Ze{get talismanKind(){return H.WizardsBadge}get talismanRarity(){return We.Uncommon}get passiveEffectMaxValue(){return .9999}EffectValue(t){return .01*t}PassiveEffectValue(t){return Math.min(this.passiveEffectMaxValue,1e-4*t)}SetPassiveEffect(){this.data.skill.skillRankCostFactors[1].RegisterMultiplier(new u(n.TalismanPassive,s.Mul,()=>-this.passiveEffectValue))}SetEffect(t,i){return this.data.stats.HeroStats(t,v.MagCritChance).RegisterMultiplier(new u(n.Talisman,s.Mul,()=>this.effectValue*i(),()=>this.IsActiveEffect(t,i)))}}var me;class rP{constructor(t){Ks(this,me,void 0);o(this,"potions");o(this,"traps");o(this,"talismans");o(this,"globalInformations");o(this,"maxStackNum");o(this,"preventConsumeChance");o(this,"effectMultiplier");o(this,"talismanPassiveEffectMultiplier");o(this,"trapEffectMultiplier");o(this,"trapCooltimeReduction",Array(6));o(this,"disassembleGoldGainMultiplier");o(this,"potionMaxLevel");o(this,"availableQueue");ei(this,me,t),this.maxStackNum=new $(new u(n.Base,s.Add,()=>10)),this.preventConsumeChance=new $(new u(n.Base,s.Add,()=>0)),this.effectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.effectMultiplier.name="Potion Effect",this.talismanPassiveEffectMultiplier=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<this.trapCooltimeReduction.length;i++)this.trapCooltimeReduction[i]=new $(new u(n.Base,s.Add,()=>0),()=>10,()=>1),this.trapCooltimeReduction[i].RegisterMultiplier(new u(n.Base,s.Add,()=>10));this.trapEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.disassembleGoldGainMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.potionMaxLevel=new $(new u(n.Base,s.Add,()=>100)),this.availableQueue=new $}GlobalInfo(t){for(let i=0;i<this.globalInformations.length;i++)if(this.globalInformations[i].kind==t)return this.globalInformations[i];return this.globalInformations[0]}TotalPotionLevel(){return this.potions.reduce((t,i)=>t+i.level,0)}TalismanGlobalInfo(t){for(let i=0;i<this.talismans.length;i++)if(this.talismans[i].kind==t)return this.talismans[i]}Start(){this.potions=[new FL(fe(this,me)),new IL(fe(this,me)),new VL(fe(this,me)),new UL(fe(this,me)),new _L(fe(this,me)),new xL(fe(this,me)),new sL(fe(this,me)),new tL(fe(this,me)),new aL(fe(this,me)),new iL(fe(this,me)),new rL(fe(this,me)),new oL(fe(this,me)),new fL(fe(this,me)),new RL(fe(this,me)),new yL(fe(this,me)),new OL(fe(this,me)),new $L(fe(this,me)),new pL(fe(this,me)),new CL(fe(this,me)),new hL(fe(this,me)),new uL(fe(this,me)),new EL(fe(this,me)),new SL(fe(this,me)),new iP(fe(this,me)),new WL(fe(this,me))],this.traps=[new QL(fe(this,me)),new DL(fe(this,me)),new YL(fe(this,me)),new vL(fe(this,me)),new TL(fe(this,me)),new dL(fe(this,me))],this.talismans=[new PL(fe(this,me)),new cL(fe(this,me)),new BL(fe(this,me)),new mL(fe(this,me)),new ZL(fe(this,me)),new nL(fe(this,me)),new KL(fe(this,me)),new kL(fe(this,me)),new ZC(fe(this,me)),new LL(fe(this,me)),new zL(fe(this,me)),new GL(fe(this,me)),new JL(fe(this,me)),new lL(fe(this,me)),new ML(fe(this,me)),new AL(fe(this,me)),new gL(fe(this,me)),new eP(fe(this,me)),new wL(fe(this,me)),new tP(fe(this,me)),new eL(fe(this,me)),new sP(fe(this,me)),new aP(fe(this,me)),new YC(fe(this,me)),new XL(fe(this,me)),new KC(fe(this,me)),new jL(fe(this,me)),new qL(fe(this,me)),new bL(fe(this,me)),new HL(fe(this,me)),new NL(fe(this,me)),new XC(fe(this,me)),new QC(fe(this,me)),new FC(fe(this,me)),new zC(fe(this,me)),new _C(fe(this,me)),new OC(fe(this,me)),new $C(fe(this,me)),new WC(fe(this,me)),new UC(fe(this,me)),new IC(fe(this,me)),new HC(fe(this,me)),new NC(fe(this,me)),new VC(fe(this,me)),new JC(fe(this,me)),new qC(fe(this,me)),new jC(fe(this,me))],this.globalInformations=[...this.potions,...this.traps,...this.talismans]}}me=new WeakMap;const ts={resourceUpgradeTier:20,baseStats:[[20,5,2,.5,0,0,0,.01,0,2,.001,200],[10,10,.5,2,0,0,0,0,.01,2,.001,150],[15,7.5,1.5,1.5,0,0,0,.005,.005,2,.001,250],[10,5,1,1,0,0,0,.05,.05,2,.0015,250],[10,10,1.5,1.5,0,0,0,.005,.005,2,.001,200],[20,10,1,1,0,0,0,.005,.005,2,.001,150]],cooperationEfficiency:[0,.2,.4,.55,.7,.8,.9],stats:[[20,5,1,.25,.5,.5,1,1e-4,0,0,1e-5,1],[10,10,.25,1,.15,.15,.5,0,1e-4,0,1e-5,.75],[15,7.5,.5,.5,.35,.35,1.5,5e-5,5e-5,0,1e-5,1.25],[10,5,.35,.35,.05,.05,2.5,2e-4,2e-4,0,1e-5,1.25],[10,10,.5,.5,.35,.35,1,1e-4,1e-4,0,1e-5,1],[20,10,.25,.25,.25,.25,1.5,5e-5,5e-5,0,1e-5,.75]],TitleEffectValue(e,t){function i(r,h){return{main:r,sub:h}}switch(e){case q.SkillMaster:return i(t,t*.1);case q.MonsterDistinguisher:return i(Math.min(1,t)*10*Math.pow(2,t),10*t);case q.EquipmentSlotWeapon:return i(t,0);case q.EquipmentSlotArmor:return i(t,0);case q.EquipmentSlotJewelry:return i(t,0);case q.PotionSlot:return i(t,0);case q.EquipmentProficiency:return i(t*.2,0);case q.PhysicalDamage:return i(t*.025,0);case q.FireDamage:return i(t*.025,0);case q.IceDamage:return i(t*.025,0);case q.ThunderDamage:return i(t*.025,0);case q.LightDamage:return i(t*.025,0);case q.DarkDamage:return i(t*.025,0);case q.Alchemist:return i(t*.025,0);case q.MetalHunter:return i(t,.25*t);case q.Survival:return i(.1*Math.min(1,t)+.1*t,0);case q.FireResistance:return i(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case q.IceResistance:return i(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case q.ThunderResistance:return i(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case q.LightResistance:return i(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case q.DarkResistance:return i(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case q.Cooperation:return i(Math.min(ts.cooperationEfficiency[Math.min(t,6)],1),0);case q.DebuffResistance:return i(Math.ceil(Math.pow(t,1.5))*.025,t*.01);case q.MoveSpeed:return i(t*.05,0);case q.BreakingTheLimit:return i(t,0);case q.Quester:return i(t,0);case q.ExplorerOfSD:return i(Math.min(1,t)*.1*Math.pow(2,t-1),.1*t);default:return i(0,0)}}};class Oe{constructor(t,i){o(this,"data");o(this,"questCtrl");o(this,"kind");o(this,"type");o(this,"heroKind");o(this,"kindGlobal");o(this,"kindTitle");o(this,"kindGeneral");o(this,"kindDaily");o(this,"globalQuestType");o(this,"rewardExpMultiplier");o(this,"rebirthPointGainMultiplier");o(this,"rewardTitleKind");o(this,"rewardTitleLevel");switch(this.data=t,this.kind=i.kind,this.questCtrl=t.quest,i.kind){case ye.Global:this.globalQuestType=i.globalQuestType,this.kindGlobal=i.kindGlobal;break;case ye.Title:this.kindTitle=i.kindTitle,this.heroKind=i.heroKind,this.rewardTitleKind=this.getTitleKind(),this.rewardTitleLevel=this.getTitleLevel();break}}getTitleKind(){switch(this.kindTitle){case L.EquipmentSlotWeapon1:case L.EquipmentSlotWeapon2:case L.EquipmentSlotWeapon3:case L.EquipmentSlotWeapon4:case L.EquipmentSlotWeapon5:case L.EquipmentSlotWeapon6:return q.EquipmentSlotWeapon;case L.EquipmentSlotArmor1:case L.EquipmentSlotArmor2:case L.EquipmentSlotArmor3:case L.EquipmentSlotArmor4:case L.EquipmentSlotArmor5:case L.EquipmentSlotArmor6:return q.EquipmentSlotArmor;case L.EquipmentSlotJewelry1:case L.EquipmentSlotJewelry2:case L.EquipmentSlotJewelry3:case L.EquipmentSlotJewelry4:case L.EquipmentSlotJewelry5:case L.EquipmentSlotJewelry6:return q.EquipmentSlotJewelry;case L.Alchemist1:case L.Alchemist2:case L.Alchemist3:case L.Alchemist4:case L.Alchemist5:return q.Alchemist;case L.DarkAttack1:case L.DarkAttack2:case L.DarkAttack3:case L.DarkAttack4:return q.DarkDamage;case L.LightAttack1:case L.LightAttack2:case L.LightAttack3:case L.LightAttack4:return q.LightDamage;case L.EquipmentProf1:case L.EquipmentProf2:case L.EquipmentProf3:case L.EquipmentProf4:case L.EquipmentProf5:return q.EquipmentProficiency;case L.DarkResistance1:case L.DarkResistance2:case L.DarkResistance3:case L.DarkResistance4:case L.DarkResistance5:return q.DarkResistance;case L.FireResistance1:case L.FireResistance2:case L.FireResistance3:case L.FireResistance4:case L.FireResistance5:return q.FireResistance;case L.ThunderResistance1:case L.ThunderResistance2:case L.ThunderResistance3:case L.ThunderResistance4:case L.ThunderResistance5:return q.ThunderResistance;case L.IceResistance1:case L.IceResistance2:case L.IceResistance3:case L.IceResistance4:case L.IceResistance5:return q.IceResistance;case L.LightResistance1:case L.LightResistance2:case L.LightResistance3:case L.LightResistance4:case L.LightResistance5:return q.LightResistance;case L.FireAttack1:case L.FireAttack2:case L.FireAttack3:case L.FireAttack4:return q.FireDamage;case L.IceAttack1:case L.IceAttack2:case L.IceAttack3:case L.IceAttack4:return q.IceDamage;case L.SkillMaster1:case L.SkillMaster2:case L.SkillMaster3:case L.SkillMaster4:return q.SkillMaster;case L.ThunderAttack1:case L.ThunderAttack2:case L.ThunderAttack3:case L.ThunderAttack4:return q.ThunderDamage;case L.PhysicalAttack1:case L.PhysicalAttack2:case L.PhysicalAttack3:case L.PhysicalAttack4:return q.PhysicalDamage;case L.PotionSlot1:case L.PotionSlot2:case L.PotionSlot3:return q.PotionSlot;case L.Cooperation1:case L.Cooperation2:case L.Cooperation3:return q.Cooperation;case L.Survival1:case L.Survival2:case L.Survival3:case L.Survival4:return q.Survival;case L.ExplorerOfSD1:case L.ExplorerOfSD2:case L.ExplorerOfSD3:case L.ExplorerOfSD4:case L.ExplorerOfSD5:case L.ExplorerOfSD6:case L.ExplorerOfSD7:case L.ExplorerOfSD8:case L.ExplorerOfSD9:case L.ExplorerOfSD10:case L.ExplorerOfSD11:case L.ExplorerOfSD12:case L.ExplorerOfSD13:case L.ExplorerOfSD14:case L.ExplorerOfSD15:return q.ExplorerOfSD;case L.MetalHunter1:case L.MetalHunter2:case L.MetalHunter3:case L.MetalHunter4:case L.MetalHunter5:case L.MetalHunter6:case L.MetalHunter7:case L.MetalHunter8:case L.MetalHunter9:return q.MetalHunter;case L.Porter1:case L.Porter2:case L.Porter3:case L.Porter4:case L.Porter5:case L.Porter6:return q.MoveSpeed;case L.Quester1:case L.Quester2:case L.Quester3:case L.Quester4:case L.Quester5:case L.Quester6:case L.Quester7:case L.Quester8:case L.Quester9:case L.Quester10:return q.Quester;case L.MonsterDistinguisher1:case L.MonsterDistinguisher2:case L.MonsterDistinguisher3:case L.MonsterDistinguisher4:case L.MonsterDistinguisher5:case L.MonsterDistinguisher6:case L.MonsterDistinguisher7:case L.MonsterDistinguisher8:return q.MonsterDistinguisher;default:return 0}}getTitleLevel(){switch(this.kindTitle){case L.EquipmentSlotWeapon1:case L.EquipmentSlotArmor1:case L.EquipmentSlotJewelry1:case L.Alchemist1:case L.ExplorerOfSD1:case L.EquipmentProf1:case L.DarkAttack1:case L.FireAttack1:case L.IceAttack1:case L.ThunderAttack1:case L.LightAttack1:case L.LightResistance1:case L.DarkResistance1:case L.FireResistance1:case L.ThunderResistance1:case L.IceResistance1:case L.PhysicalAttack1:case L.PotionSlot1:case L.SkillMaster1:case L.Survival1:case L.Cooperation1:case L.MetalHunter1:case L.Porter1:case L.Quester1:case L.MonsterDistinguisher1:return 1;case L.EquipmentSlotWeapon2:case L.EquipmentSlotArmor2:case L.EquipmentSlotJewelry2:case L.Alchemist2:case L.ExplorerOfSD2:case L.EquipmentProf2:case L.DarkAttack2:case L.FireAttack2:case L.IceAttack2:case L.ThunderAttack2:case L.LightAttack2:case L.LightResistance2:case L.DarkResistance2:case L.FireResistance2:case L.ThunderResistance2:case L.IceResistance2:case L.PhysicalAttack2:case L.PotionSlot2:case L.SkillMaster2:case L.Survival2:case L.Cooperation2:case L.MetalHunter2:case L.Porter2:case L.Quester2:case L.MonsterDistinguisher2:return 2;case L.EquipmentSlotWeapon3:case L.EquipmentSlotArmor3:case L.EquipmentSlotJewelry3:case L.Alchemist3:case L.ExplorerOfSD3:case L.EquipmentProf3:case L.DarkAttack3:case L.FireAttack3:case L.IceAttack3:case L.ThunderAttack3:case L.LightAttack3:case L.LightResistance3:case L.DarkResistance3:case L.FireResistance3:case L.ThunderResistance3:case L.IceResistance3:case L.PhysicalAttack3:case L.PotionSlot3:case L.SkillMaster3:case L.Survival3:case L.Cooperation3:case L.MetalHunter3:case L.Porter3:case L.Quester3:case L.MonsterDistinguisher3:return 3;case L.EquipmentSlotWeapon4:case L.EquipmentSlotArmor4:case L.EquipmentSlotJewelry4:case L.Alchemist4:case L.ExplorerOfSD4:case L.EquipmentProf4:case L.DarkAttack4:case L.FireAttack4:case L.IceAttack4:case L.ThunderAttack4:case L.LightAttack4:case L.LightResistance4:case L.DarkResistance4:case L.FireResistance4:case L.ThunderResistance4:case L.IceResistance4:case L.PhysicalAttack4:case L.SkillMaster4:case L.Survival4:case L.MetalHunter4:case L.Porter4:case L.Quester4:case L.MonsterDistinguisher4:return 4;case L.EquipmentSlotWeapon5:case L.EquipmentSlotArmor5:case L.EquipmentSlotJewelry5:case L.Alchemist5:case L.ExplorerOfSD5:case L.EquipmentProf5:case L.ThunderResistance5:case L.LightResistance5:case L.DarkResistance5:case L.FireResistance5:case L.IceResistance5:case L.MetalHunter5:case L.Porter5:case L.Quester5:case L.MonsterDistinguisher5:return 5;case L.EquipmentSlotWeapon6:case L.EquipmentSlotArmor6:case L.EquipmentSlotJewelry6:case L.ExplorerOfSD6:case L.MetalHunter6:case L.Porter6:case L.Quester6:case L.MonsterDistinguisher6:return 6;case L.ExplorerOfSD7:case L.MetalHunter7:case L.Quester7:case L.MonsterDistinguisher7:return 7;case L.ExplorerOfSD8:case L.MetalHunter8:case L.Quester8:case L.MonsterDistinguisher8:return 8;case L.ExplorerOfSD9:case L.MetalHunter9:case L.Quester9:return 9;case L.ExplorerOfSD10:case L.Quester10:return 10;case L.ExplorerOfSD11:return 11;case L.ExplorerOfSD12:return 12;case L.ExplorerOfSD13:return 13;case L.ExplorerOfSD14:return 14;case L.ExplorerOfSD15:return 15;default:return 0}}Start(){this.StartQuest(),this.SetRewardEffect()}SetRewardEffect(){switch(this.kindGlobal){case X.Nitro2:this.SetRewardNitro(1e3);break;case X.Nitro3:this.SetRewardNitro(2e3);break;case X.Nitro4:this.SetRewardNitro(3e3);break;case X.Nitro5:this.SetRewardNitro(4e3);break;case X.Nitro6:this.SetRewardNitro(5e3);break;case X.Nitro7:this.SetRewardNitro(6e3);break;case X.Nitro8:this.SetRewardNitro(7e3);break;case X.Capture1:this.SetRewardCapture(.1);break;case X.Capture2:this.SetRewardCapture(.2);break;case X.Capture3:this.SetRewardCapture(.3);break;case X.Capture4:this.SetRewardCapture(.4);break;case X.Capture5:this.SetRewardCapture(.5);break;case X.Alchemy1:this.SetReward(this.data.alchemy.catalyst.criticalChanceMultiplier,s.Mul,.25);break;case X.Alchemy2:this.SetReward(this.data.alchemy.maxMysteriousWaterExpandedCapNum,s.Add,100);break;case X.Alchemy3:this.SetReward(this.data.potion.potionMaxLevel,s.Add,25);break;case X.Alchemy4:this.SetReward(this.data.alchemy.catalyst.catalystLevelCap,s.Add,25);break;case X.Alchemy5:this.SetReward(this.data.alchemy.catalyst.catalystCostReduction,s.Add,.25);break;case X.Alchemy6:this.SetReward(this.data.alchemy.catalyst.criticalChanceMultiplier,s.Mul,.25),this.SetReward(this.data.alchemy.maxMysteriousWaterExpandedCapNum,s.Add,250);break;case X.Alchemy7:this.SetReward(this.data.potion.potionMaxLevel,s.Add,25),this.SetReward(this.data.alchemy.catalyst.catalystLevelCap,s.Add,25);break;case X.Alchemy8:this.SetReward(this.data.alchemy.alchemyPointGainMultiplier,s.Add,1),this.SetReward(this.data.alchemy.catalyst.catalystCostReduction,s.Add,.25);break;case X.Upgrade9:break;case X.Upgrade10:break;case X.Upgrade11:break;case X.Upgrade12:break;case X.Upgrade13:break;case X.Nitro9:this.SetRewardNitro(8e3);break;case X.Nitro10:this.SetRewardNitro(9e3);break;case X.Nitro11:this.SetRewardNitro(1e4);break;case X.Nitro12:this.SetRewardNitro(2e4);break;case X.Nitro13:this.SetRewardNitro(3e4);break;case X.Nitro14:this.SetRewardNitro(4e4);break;case X.Nitro15:this.SetRewardNitro(5e4);break;case X.Nitro16:this.SetRewardNitro(6e4);break;case X.Nitro17:this.SetRewardNitro(7e4);break;case X.Nitro18:this.SetRewardNitro(8e4);break;case X.Nitro19:this.SetRewardNitro(9e4);break;case X.Capture6:this.SetRewardCapture(.75);break;case X.Capture7:this.SetRewardCapture(1);break;case X.Capture8:this.SetRewardCapture(2);break;case X.Capture9:this.SetRewardCapture(3);break;case X.Capture10:this.SetRewardCapture(5);break;case X.Capture11:this.SetRewardCapture(10);break;case X.Capture12:this.SetRewardCapture(50);break;case X.Capture13:this.SetRewardCapture(100);break;case X.Capture14:this.SetRewardCapture(150);break;case X.Capture15:this.SetRewardCapture(250);break;case X.Capture16:this.SetRewardCapture(500);break;case X.Capture17:this.SetRewardCapture(750);break;case X.Capture18:this.SetRewardCapture(1e3);break;case X.SD2:for(let t=0;t<W.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,s.Mul,.1);break;case X.SD3:for(let t=0;t<W.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,s.Mul,.2);break;case X.SD5:for(let t=0;t<W.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,s.Mul,.3);break;case X.SD6:for(let t=0;t<W.HeroKind;t++)this.SetReward(this.data.superStats.Hero(t).fameGain,s.Mul,.4);break;case X.SD8:for(let t=0;t<W.HeroKind;t++)this.SetReward(this.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier,s.Mul,.5);break;case X.Expedition:this.data.expedition.unlockedExpeditionSlotNum.RegisterMultiplier(new u(n.Quest,s.Add,()=>1,()=>this.isCleared));break}}StartQuest(){}IsUnlocked(){return!0}get totalClearedNumGeneral(){return this.kind!=ye.General?0:this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]}set totalClearedNumGeneral(t){this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]=t}get totalClearedNumGeneralThisAscension(){return this.kind!=ye.General?0:this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]}set totalClearedNumGeneralThisAscension(t){this.data.source.totalGeneralQuestClearedNums[this.kindGeneral]=t}get maxReachedClearedNumGeneral(){return this.kind!=ye.General?0:this.data.source.maxReachedGeneralQuestClearedNums[this.kindGeneral]}set maxReachedClearedNumGeneral(t){this.data.source.maxReachedGeneralQuestClearedNums[this.kindGeneral]=t}get isPersistentUnlocked(){return this.kind==ye.General&&this.data.source.isPersistentUnlockedQuestGeneral[this.kindGeneral]}set isPersistentUnlocked(t){this.data.source.isPersistentUnlockedQuestGeneral[this.kindGeneral]=t}get isClearedOnce(){return this.kind!=ye.General||this.data.source.isClearedQuestGeneralOnce[this.kindGeneral]}set isClearedOnce(t){this.data.source.isClearedQuestGeneralOnce[this.kindGeneral]=t}get isCleared(){switch(this.kind){case ye.Global:return this.data.source.isClearedQuestsGlobal[this.kindGlobal];case ye.Title:switch(this.heroKind){case R.Warrior:return this.data.source.isClearedQuestsTitleWarrior[this.kindTitle];case R.Wizard:return this.data.source.isClearedQuestsTitleWizard[this.kindTitle];case R.Angel:return this.data.source.isClearedQuestsTitleAngel[this.kindTitle];case R.Thief:return this.data.source.isClearedQuestsTitleThief[this.kindTitle];case R.Archer:return this.data.source.isClearedQuestsTitleArcher[this.kindTitle];case R.Tamer:return this.data.source.isClearedQuestsTitleTamer[this.kindTitle]}default:return!1}}set isCleared(t){switch(this.kind){case ye.Global:this.data.source.isClearedQuestsGlobal[this.kindGlobal]=t;break;case ye.Title:switch(this.heroKind){case R.Warrior:this.data.source.isClearedQuestsTitleWarrior[this.kindTitle]=t;break;case R.Wizard:this.data.source.isClearedQuestsTitleWizard[this.kindTitle]=t;break;case R.Angel:this.data.source.isClearedQuestsTitleAngel[this.kindTitle]=t;break;case R.Thief:this.data.source.isClearedQuestsTitleThief[this.kindTitle]=t;break;case R.Archer:this.data.source.isClearedQuestsTitleArcher[this.kindTitle]=t;break;case R.Tamer:this.data.source.isClearedQuestsTitleTamer[this.kindTitle]=t;break}}}NameString(){return M.Quest(this)}SetRewardCapture(t){this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.Quest,s.Mul,()=>t,()=>this.isCleared))}SetRewardNitro(t){this.data.nitro.nitroCap.RegisterMultiplier(new u(n.Quest,s.Add,()=>t,()=>this.isCleared))}SetReward(t,i,r){t.RegisterMultiplier(new u(n.Quest,i,()=>r,()=>this.isCleared))}}var ze=(e=>(e[e.Tutorial=0]="Tutorial",e[e.Upgrade=1]="Upgrade",e[e.Nitro=2]="Nitro",e[e.Capture=3]="Capture",e[e.Alchemy=4]="Alchemy",e))(ze||{});class lP{constructor(t){o(this,"data");o(this,"globalQuestList",[]);o(this,"globalQuestListTutorial",[]);o(this,"globalQuestListUpgrade",[]);o(this,"globalQuestListNitro",[]);o(this,"globalQuestListCapture",[]);o(this,"globalQuestListAlchemy",[]);o(this,"dailyQuestList",[]);o(this,"titleQuestList",Array(W.HeroKind));o(this,"generalQuestList",Array(W.HeroKind));o(this,"globalQuests",[]);o(this,"dailyQuests");o(this,"titleQuests",Array(W.HeroKind).fill([]));o(this,"generalQuests");o(this,"portalOrbBonusFromDailyQuest");o(this,"sdRefreshTicketFromDailyQuest");o(this,"acceptableNum",Array(W.HeroKind));o(this,"quest");o(this,"generalQuestClearGain",Array(W.HeroKind));this.data=t;for(let i=0;i<this.acceptableNum.length;i++)this.acceptableNum[i]=new $(new u(n.Base,s.Add,()=>3));this.portalOrbBonusFromDailyQuest=new $,this.sdRefreshTicketFromDailyQuest=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<this.generalQuestClearGain.length;i++)this.generalQuestClearGain[i]=new $(new u(n.Base,s.Add,()=>1));this.globalQuestListTutorial.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Tutorial,kindGlobal:X.Expedition})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro1})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro2})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro3})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro4})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro5})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro6})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro7})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro8})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro9})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro10})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro11})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro12})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro13})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro14})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro15})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro16})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro17})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro18})),this.globalQuestListNitro.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Nitro,kindGlobal:X.Nitro19})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture1})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture2})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture3})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture4})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture5})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture6})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture7})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture8})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture9})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture10})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture11})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture12})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture13})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture14})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture15})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture16})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture17})),this.globalQuestListCapture.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Capture,kindGlobal:X.Capture18})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy1})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy2})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy3})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy4})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy5})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy6})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy7})),this.globalQuestListAlchemy.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Alchemy,kindGlobal:X.Alchemy8})),this.globalQuestList.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Tutorial,kindGlobal:X.SD2})),this.globalQuestList.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Tutorial,kindGlobal:X.SD3})),this.globalQuestList.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Tutorial,kindGlobal:X.SD5})),this.globalQuestList.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Tutorial,kindGlobal:X.SD6})),this.globalQuestList.push(new Oe(this.data,{kind:ye.Global,globalQuestType:ze.Tutorial,kindGlobal:X.SD8})),this.globalQuests=[...this.globalQuestListNitro,...this.globalQuestListCapture,...this.globalQuestListAlchemy,...this.globalQuestList,...this.globalQuestListTutorial];for(let i=0;i<this.titleQuestList.length;i++){this.titleQuestList[i]=[];for(let r=0;r<W.QuestKindTitle;r++){const h=L[r];this.titleQuestList[i].push(new Oe(this.data,{kind:ye.Title,kindTitle:L[h],heroKind:i}))}this.titleQuests=[...this.titleQuestList]}}Start(){this.SetTitleEffectAll();for(let t=0;t<this.globalQuests.length;t++)this.globalQuests[t].Start();for(let t=0;t<W.HeroKind;t++)for(let i=0;i<this.titleQuests[t].length;i++)this.titleQuests[t][i].Start()}TitleLevel(t,i){let r=0;for(let h=0;h<this.titleQuests[t].length;h++)this.titleQuests[t][h].rewardTitleKind==i&&this.titleQuests[t][h].isCleared&&this.titleQuests[t][h].rewardTitleLevel>r&&(r=this.titleQuests[t][h].rewardTitleLevel);return r}TitleEffectValue(t,i){return ts.TitleEffectValue(i,this.TitleLevel(t,i))}SetTitleEffectAll(){for(let t=0;t<W.TitleKind;t++)this.SetTitleEffect(t)}SetTitleEffect(t){switch(t){case q.SkillMaster:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.SkillSlotNum(i).RegisterMultiplier(r);const h=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).sub);this.data.stats.HeroStats(i,v.SkillProficiencyGain).RegisterMultiplier(h)}break;case q.MonsterDistinguisher:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.MonsterDistinguishMaxLevel(i).RegisterMultiplier(r);const h=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).sub);this.data.stats.MonsterCaptureMaxLevelIncrement(i).RegisterMultiplier(h)}break;case q.EquipmentSlotWeapon:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.inventory.equipWeaponUnlockedNum[i].RegisterMultiplier(r)}break;case q.EquipmentSlotArmor:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.inventory.equipArmorUnlockedNum[i].RegisterMultiplier(r)}break;case q.EquipmentSlotJewelry:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.inventory.equipJewelryUnlockedNum[i].RegisterMultiplier(r)}break;case q.PotionSlot:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.inventory.equipPotionUnlockedNum[i].RegisterMultiplier(r)}break;case q.EquipmentProficiency:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.EquipmentProficiencyGain).RegisterMultiplier(r)}break;case q.PhysicalDamage:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.ElementDamage(i,F.Physical).RegisterMultiplier(r)}break;case q.FireDamage:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.ElementDamage(i,F.Fire).RegisterMultiplier(r)}break;case q.IceDamage:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.ElementDamage(i,F.Ice).RegisterMultiplier(r)}break;case q.ThunderDamage:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.ElementDamage(i,F.Thunder).RegisterMultiplier(r)}break;case q.LightDamage:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.ElementDamage(i,F.Light).RegisterMultiplier(r)}break;case q.DarkDamage:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.ElementDamage(i,F.Dark).RegisterMultiplier(r)}break;case q.Alchemist:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(r)}break;case q.Survival:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>.5,()=>!1);this.data.stats.HeroStats(i,v.PhysCritChance).RegisterMultiplier(r),this.data.stats.HeroStats(i,v.MagCritChance).RegisterMultiplier(r)}break;case q.FireResistance:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.FireRes).RegisterMultiplier(r);const h=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).sub);this.data.stats.ElementInvalid(i,F.Fire).RegisterMultiplier(h)}break;case q.IceResistance:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.IceRes).RegisterMultiplier(r);const h=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).sub);this.data.stats.ElementInvalid(i,F.Ice).RegisterMultiplier(h)}break;case q.ThunderResistance:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.ThunderRes).RegisterMultiplier(r);const h=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).sub);this.data.stats.ElementInvalid(i,F.Thunder).RegisterMultiplier(h)}break;case q.LightResistance:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.LightRes).RegisterMultiplier(r);const h=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).sub);this.data.stats.ElementInvalid(i,F.Light).RegisterMultiplier(h)}break;case q.DarkResistance:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.DarkRes).RegisterMultiplier(r);const h=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).sub);this.data.stats.ElementInvalid(i,F.Dark).RegisterMultiplier(h)}break;case q.Cooperation:break;case q.DebuffResistance:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.DebuffRes).RegisterMultiplier(r)}break;case q.MoveSpeed:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.stats.HeroStats(i,v.MoveSpeed).RegisterMultiplier(r)}break;case q.Quester:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Add,()=>this.TitleEffectValue(i,t).main);this.generalQuestClearGain[i].RegisterMultiplier(r)}break;case q.ExplorerOfSD:for(let i=0;i<W.HeroKind;i++){const r=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).main);this.data.battles[i].superDungeonCtrl.damageMultiplier.RegisterMultiplier(r);const h=new u(n.Title,s.Mul,()=>this.TitleEffectValue(i,t).sub);this.data.superStats.Hero(i).fameGain.RegisterMultiplier(h)}break}}}const vl={tierHeroLevel:[100,200,300,500,750,1e3],Upgrade:(e,t)=>{switch(e){case Z.ExpGain:return[50,50,!0,100,.25*t];case Z.EQRequirement:return[75,75,!0,100,5*t];case Z.QuestAcceptableNum:return[250,Math.pow(10,.2),!1,20,t];case Z.BasicAtk:return[200,200,!0,50,.05*t];case Z.BasicMAtk:return[200,200,!0,50,.05*t];case Z.BasicHp:return[200,200,!0,50,.25*t];case Z.BasicDef:return[200,200,!0,50,.05*t];case Z.BasicMDef:return[200,200,!0,50,.05*t];case Z.BasicMp:return[200,200,!0,50,.1*t];case Z.StoneGain:return[100,100,!0,100,t];case Z.CrystalGain:return[100,100,!0,100,t];case Z.LeafGain:return[100,100,!0,100,t];case Z.StoneGoldCap:return[100,100,!0,100,.05*t];case Z.CrystalGoldCap:return[100,100,!0,100,.05*t];case Z.LeafGoldCap:return[100,100,!0,100,.05*t];case Z.SkillProfGain:return[100,100,!0,100,.25*t];case Z.SkillRankCostReduction:return[100,100,!0,100,Math.pow(.75,t)];case Z.ClassSkillSlot:return[1e4,100,!1,1,t];case Z.ShareSkillPassive:return[2500,2,!1,10,t*.1];case Z.T1ExpGainBoost:return[250,250,!0,100,.1*t];case Z.T1RebirthPointGainBoost:return[500,500,!0,10,.1*t];case Z.T1BasicAtkBoost:return[200,200,!0,50,.1*t];case Z.T1BasicMAtkBoost:return[200,200,!0,50,.1*t];case Z.T1BasicHpBoost:return[200,200,!0,50,.1*t];case Z.T1BasicDefBoost:return[200,200,!0,50,.1*t];case Z.T1BasicMDefBoost:return[200,200,!0,50,.1*t];case Z.T1BasicMpBoost:return[200,200,!0,50,.1*t];case Z.T1StoneGainBoost:return[100,100,!0,100,.2*t];case Z.T1CrystalGainBoost:return[100,100,!0,100,.2*t];case Z.T1LeafGainBoost:return[100,100,!0,100,.2*t];case Z.T1StoneGoldCapBoost:return[100,100,!0,100,.05*t];case Z.T1CrystalGoldCapBoost:return[100,100,!0,100,.05*t];case Z.T1LeafGoldCapBoost:return[100,100,!0,100,.05*t];case Z.EQProfGain:return[100,100,!0,100,.25*t];case Z.EQLevelCap:return[5e3,10,!1,2,5*t];case Z.EQWeaponSlot:return[250,5,!1,5,t];case Z.EQArmorSlot:return[250,5,!1,5,t];case Z.EQJewelrySlot:return[250,5,!1,5,t];case Z.T2ExpGainBoost:return[250,250,!0,100,.1*t];case Z.T2SkillProfGainBoost:return[250,250,!0,100,.1*t];case Z.T2RebirthPointGainBoost:return[500,500,!0,10,.1*t];case Z.T2BasicAtkBoost:return[200,200,!0,50,.1*t];case Z.T2BasicMAtkBoost:return[200,200,!0,50,.1*t];case Z.T2BasicHpBoost:return[200,200,!0,50,.1*t];case Z.T2BasicDefBoost:return[200,200,!0,50,.1*t];case Z.T2BasicMDefBoost:return[200,200,!0,50,.1*t];case Z.T2BasicMpBoost:return[200,200,!0,50,.1*t];case Z.T2StoneGainBoost:return[100,100,!0,100,.2*t];case Z.T2CrystalGainBoost:return[100,100,!0,100,.2*t];case Z.T2LeafGainBoost:return[100,100,!0,100,.2*t];case Z.T2StoneGoldCapBoost:return[100,100,!0,100,.05*t];case Z.T2CrystalGoldCapBoost:return[100,100,!0,100,.05*t];case Z.T2LeafGoldCapBoost:return[100,100,!0,100,.05*t];default:return[1e4,100,!1,1,0]}}};class Ue{constructor(t,i){o(this,"data");o(this,"rebirth");o(this,"kind");o(this,"effectMultiFactor");o(this,"isGlobalEffect");this.rebirth=t,this.data=t.data,this.kind=i,this.effectMultiFactor=new $(new u(n.Base,s.Add,()=>1))}get level(){switch(this.rebirth.heroKind){case R.Warrior:return this.data.source.rebirthUpgradeLevelsWarrior[this.kind];case R.Wizard:return this.data.source.rebirthUpgradeLevelsWizard[this.kind];case R.Angel:return this.data.source.rebirthUpgradeLevelsAngel[this.kind];case R.Thief:return this.data.source.rebirthUpgradeLevelsTamer[this.kind];case R.Archer:return this.data.source.rebirthUpgradeLevelsArcher[this.kind];case R.Tamer:return this.data.source.rebirthUpgradeLevelsTamer[this.kind];default:return 0}}get rebirthCtrl(){return this.data.rebirth}get heroKind(){return this.rebirth.heroKind}Start(){this.SetEffect()}get effectValue(){return vl.Upgrade(this.kind,this.level)[4]*this.effectMultiFactor.Value()}SetEffect(){switch(this.kind){case Z.ExpGain:this.data.stats.HeroStats(this.heroKind,v.ExpGain).RegisterMultiplier(new u(n.Rebirth,s.Mul,()=>this.effectValue));break;case Z.EQRequirement:this.data.stats.LevelForEquipment(this.heroKind).RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.QuestAcceptableNum:break;case Z.BasicAtk:this.data.stats.SetEffectBasicStatsPerLevel(d.ATK,new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.BasicMAtk:this.data.stats.SetEffectBasicStatsPerLevel(d.MATK,new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.BasicHp:this.data.stats.SetEffectBasicStatsPerLevel(d.HP,new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.BasicDef:this.data.stats.SetEffectBasicStatsPerLevel(d.DEF,new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.BasicMDef:this.data.stats.SetEffectBasicStatsPerLevel(d.MDEF,new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.BasicMp:this.data.stats.SetEffectBasicStatsPerLevel(d.MP,new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.StoneGain:this.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.Rebirth,s.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.CrystalGain:this.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.Rebirth,s.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.LeafGain:this.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.Rebirth,s.Mul,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.StoneGoldCap:this.isGlobalEffect=!0;break;case Z.CrystalGoldCap:this.isGlobalEffect=!0;break;case Z.LeafGoldCap:this.isGlobalEffect=!0;break;case Z.SkillProfGain:this.data.stats.HeroStats(this.heroKind,v.SkillProficiencyGain).RegisterMultiplier(new u(n.Rebirth,s.Mul,()=>this.effectValue));break;case Z.SkillRankCostReduction:this.data.skill.skillRankCostFactors[this.heroKind].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.ClassSkillSlot:this.data.stats.SkillSlotNum(this.heroKind).RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.ShareSkillPassive:this.data.skill.skillPassiveShareFactors[this.heroKind].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T1ExpGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.ExpGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T1RebirthPointGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).rebirthPointGainFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T1BasicAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.BasicAtk).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1BasicMAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.BasicMAtk).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1BasicHpBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.BasicHp).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1BasicDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.BasicDef).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1BasicMDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.BasicMDef).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1BasicMpBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.BasicMp).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1StoneGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.StoneGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1CrystalGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.CrystalGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1LeafGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.LeafGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1StoneGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.StoneGoldCap).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1CrystalGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.CrystalGoldCap).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T1LeafGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,0).Upgrade(Z.LeafGoldCap).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.EQProfGain:this.data.stats.HeroStats(this.heroKind,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Rebirth,s.Mul,()=>this.effectValue));break;case Z.EQLevelCap:this.data.equipment.maxLevels[this.heroKind].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.EQWeaponSlot:this.data.inventory.equipWeaponUnlockedNum[this.heroKind].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.EQArmorSlot:this.data.inventory.equipArmorUnlockedNum[this.heroKind].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.EQJewelrySlot:this.data.inventory.equipJewelryUnlockedNum[this.heroKind].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T2ExpGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1ExpGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T2SkillProfGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.SkillProfGain).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T2RebirthPointGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).rebirthPointGainFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue));break;case Z.T2BasicAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1BasicAtkBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2BasicMAtkBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1BasicMAtkBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2BasicHpBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1BasicHpBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2BasicDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1BasicDefBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2BasicMDefBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1BasicMDefBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2BasicMpBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1BasicMpBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2StoneGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1StoneGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2CrystalGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1CrystalGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2LeafGainBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1LeafGainBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2StoneGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1StoneGoldCapBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2CrystalGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1CrystalGoldCapBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break;case Z.T2LeafGoldCapBoost:this.rebirthCtrl.Rebirth(this.heroKind,1).Upgrade(Z.T1LeafGoldCapBoost).effectMultiFactor.RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.effectValue)),this.isGlobalEffect=!0;break}}}class Zr{constructor(t,i,r){o(this,"data");o(this,"rebirthCtrl");o(this,"additionalAbilityPoint");o(this,"bonusEffectFactorOneDownTier");o(this,"rebirthPointGainFactor");o(this,"rebirthPointKinds",[]);o(this,"heroKind");o(this,"tier");o(this,"rebirthPoint");o(this,"initRebirthPoint");o(this,"rebirthUpgrades");this.data=t,this.rebirthCtrl=this.data.rebirth,this.tier=i,this.heroKind=r,this.Awake()}Awake(){switch(this.additionalAbilityPoint=new $,this.additionalAbilityPoint.minValue=()=>0,this.bonusEffectFactorOneDownTier=new $,this.initRebirthPoint=new $,this.rebirthPointGainFactor=new $(new u(n.Base,s.Add,()=>1)),this.rebirthPointGainFactor.name=`Tier ${this.tier+1} Rebirth Point Gain`,this.tier){case 0:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ue(this,Z.ExpGain),this.rebirthUpgrades[1]=new Ue(this,Z.EQRequirement),this.rebirthUpgrades[2]=new Ue(this,Z.QuestAcceptableNum),this.heroKind){case R.Warrior:this.rebirthUpgrades[3]=new Ue(this,Z.BasicAtk),this.rebirthUpgrades[4]=new Ue(this,Z.StoneGain);return;case R.Wizard:this.rebirthUpgrades[3]=new Ue(this,Z.BasicMAtk),this.rebirthUpgrades[4]=new Ue(this,Z.CrystalGain);return;case R.Angel:this.rebirthUpgrades[3]=new Ue(this,Z.BasicHp),this.rebirthUpgrades[4]=new Ue(this,Z.LeafGain);return;case R.Thief:this.rebirthUpgrades[3]=new Ue(this,Z.BasicDef),this.rebirthUpgrades[4]=new Ue(this,Z.StoneGoldCap);return;case R.Archer:this.rebirthUpgrades[3]=new Ue(this,Z.BasicMDef),this.rebirthUpgrades[4]=new Ue(this,Z.CrystalGoldCap);return;case R.Tamer:this.rebirthUpgrades[3]=new Ue(this,Z.BasicMp),this.rebirthUpgrades[4]=new Ue(this,Z.LeafGoldCap);return;default:return}case 1:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ue(this,Z.SkillProfGain),this.rebirthUpgrades[1]=new Ue(this,Z.SkillRankCostReduction),this.rebirthUpgrades[2]=new Ue(this,Z.ClassSkillSlot),this.rebirthUpgrades[3]=new Ue(this,Z.ShareSkillPassive),this.rebirthUpgrades[4]=new Ue(this,Z.T1ExpGainBoost),this.rebirthUpgrades[5]=new Ue(this,Z.T1RebirthPointGainBoost),this.heroKind){case R.Warrior:this.rebirthUpgrades[6]=new Ue(this,Z.T1BasicAtkBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T1StoneGainBoost);return;case R.Wizard:this.rebirthUpgrades[6]=new Ue(this,Z.T1BasicMAtkBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T1CrystalGainBoost);return;case R.Angel:this.rebirthUpgrades[6]=new Ue(this,Z.T1BasicHpBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T1LeafGainBoost);return;case R.Thief:this.rebirthUpgrades[6]=new Ue(this,Z.T1BasicDefBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T1StoneGoldCapBoost);return;case R.Archer:this.rebirthUpgrades[6]=new Ue(this,Z.T1BasicMDefBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T1CrystalGoldCapBoost);return;case R.Tamer:this.rebirthUpgrades[6]=new Ue(this,Z.T1BasicMpBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T1LeafGoldCapBoost);return;default:return}case 2:switch(this.rebirthUpgrades=[],this.rebirthUpgrades[0]=new Ue(this,Z.EQProfGain),this.rebirthUpgrades[1]=new Ue(this,Z.EQLevelCap),this.rebirthUpgrades[2]=new Ue(this,Z.EQWeaponSlot),this.rebirthUpgrades[3]=new Ue(this,Z.EQArmorSlot),this.rebirthUpgrades[4]=new Ue(this,Z.EQJewelrySlot),this.rebirthUpgrades[5]=new Ue(this,Z.T2ExpGainBoost),this.rebirthUpgrades[6]=new Ue(this,Z.T2SkillProfGainBoost),this.rebirthUpgrades[7]=new Ue(this,Z.T2RebirthPointGainBoost),this.heroKind){case R.Warrior:this.rebirthUpgrades[8]=new Ue(this,Z.T2BasicAtkBoost),this.rebirthUpgrades[9]=new Ue(this,Z.T2StoneGainBoost);return;case R.Wizard:this.rebirthUpgrades[8]=new Ue(this,Z.T2BasicMAtkBoost),this.rebirthUpgrades[9]=new Ue(this,Z.T2CrystalGainBoost);return;case R.Angel:this.rebirthUpgrades[8]=new Ue(this,Z.T2BasicHpBoost),this.rebirthUpgrades[9]=new Ue(this,Z.T2LeafGainBoost);return;case R.Thief:this.rebirthUpgrades[8]=new Ue(this,Z.T2BasicDefBoost),this.rebirthUpgrades[9]=new Ue(this,Z.T2StoneGoldCapBoost);return;case R.Archer:this.rebirthUpgrades[8]=new Ue(this,Z.T2BasicMDefBoost),this.rebirthUpgrades[9]=new Ue(this,Z.T2CrystalGoldCapBoost);return;case R.Tamer:this.rebirthUpgrades[8]=new Ue(this,Z.T2BasicMpBoost),this.rebirthUpgrades[9]=new Ue(this,Z.T2LeafGoldCapBoost);return;default:return}}}Start(){for(let t=0;t<this.rebirthUpgrades.length;t++)this.rebirthUpgrades[t].Start()}Upgrade(t){for(let i=0;i<this.rebirthUpgrades.length;i++)if(this.rebirthUpgrades[i].kind==t)return this.rebirthUpgrades[i];return null}GetBonus(){}}var Ei;class nP{constructor(t){Ks(this,Ei,void 0);o(this,"rebirth",Array(W.HeroKind));o(this,"requiredHeroLevelReduction");o(this,"tier1AbilityPointBonusLevelCap");o(this,"tier2AbilityPointBonusLevelCap");ei(this,Ei,t),this.requiredHeroLevelReduction=new $(new u(n.Base,s.Add,()=>0),()=>100,()=>0),this.tier1AbilityPointBonusLevelCap=new $(new u(n.Base,s.Add,()=>vl.tierHeroLevel[1])),this.tier2AbilityPointBonusLevelCap=new $(new u(n.Base,s.Add,()=>vl.tierHeroLevel[2]));for(let i=0;i<W.HeroKind;i++)this.rebirth[i]=[],this.rebirth[i][0]=new Zr(fe(this,Ei),0,i),this.rebirth[i][1]=new Zr(fe(this,Ei),1,i),this.rebirth[i][2]=new Zr(fe(this,Ei),2,i)}Start(){for(let t=0;t<this.rebirth.length;t++)for(let i=0;i<this.rebirth[t].length;i++)this.rebirth[t][i].Start()}Rebirth(t,i){return this.rebirth[t][i]}SetPointMultiplier(t){for(let i=0;i<this.rebirth.length;++i)this.rebirth[i][0].rebirthPointGainFactor.RegisterMultiplier(t),this.rebirth[i][1].rebirthPointGainFactor.RegisterMultiplier(t),this.rebirth[i][2].rebirthPointGainFactor.RegisterMultiplier(t)}get currentHero(){return this.rebirth[fe(this,Ei).source.currentHero]}}Ei=new WeakMap;class uP{constructor(){o(this,"goldCap");o(this,"slimeCoinCap");o(this,"slimeCoinEfficiency");o(this,"slimeCoinInterest");o(this,"resources",Array(W.ResourceKind));this.goldCap=new $(new u(n.Base,s.Add,()=>1e3)),this.slimeCoinCap=new $,this.slimeCoinEfficiency=new $,this.slimeCoinInterest=new $(new u(n.Base,s.Add,()=>0),()=>.5,()=>0);for(let t=0;t<this.resources.length;t++)this.resources[t]=1}HeroResourceKind(t){switch(t){case R.Warrior:return Y.Stone;case R.Wizard:return Y.Crystal;case R.Angel:return Y.Leaf;case R.Thief:return Y.Stone;case R.Archer:return Y.Crystal;case R.Tamer:return Y.Leaf;default:return Y.Stone}}HeroResource(t){this.resources[this.HeroResourceKind(t)]}Resource(t){return this.resources[t]}}class hP{constructor(){o(this,"shopItemList",[]);o(this,"shop_MaterialList",[]);o(this,"shop_TrapList",[]);o(this,"shop_BlessingList",[]);o(this,"shop_TownMaterialList",[]);o(this,"materialStockNum");o(this,"trapStockNum");o(this,"blessingStockNum");o(this,"sellPriceRate");o(this,"restockTimesec");o(this,"restockNumMaterial");o(this,"restockNumTrap");o(this,"restockNumBlessing");o(this,"convertTownMaterialAmount");this.materialStockNum=new $(new u(n.Base,s.Add,()=>1)),this.trapStockNum=new $(new u(n.Base,s.Add,()=>20)),this.blessingStockNum=new $(new u(n.Base,s.Add,()=>1)),this.sellPriceRate=new $(new u(n.Base,s.Add,()=>.1)),this.restockTimesec=new $(new u(n.Base,s.Add,()=>600)),this.restockNumMaterial=new $(new u(n.Base,s.Add,()=>1)),this.restockNumTrap=new $(new u(n.Base,s.Add,()=>1)),this.restockNumBlessing=new $(new u(n.Base,s.Add,()=>1)),this.convertTownMaterialAmount=new $(new u(n.Base,s.Add,()=>1))}Start(){}}var Zt=(e=>(e[e.Attack=0]="Attack",e[e.Buff=1]="Buff",e[e.Heal=2]="Heal",e[e.Order=3]="Order",e))(Zt||{});class pa{constructor(t){o(this,"data");o(this,"skills",Array(W.SkillKindWarrior));o(this,"stances",[]);o(this,"heroKind");this.data=t}get currentStanceId(){return 0}Start(){for(let t=0;t<this.skills.length;t++)this.skills[t].type==Zt.Attack&&this.skills[t].damageMultiplier.RegisterMultiplier(new u(n.Skill,s.Mul,()=>this.DamageMultiplierEffectValue))}MaxReachedTotalLevel(){let t=0;for(let i=0;i<this.skills.length;i++)t+=this.skills[i].level.maxReachedLevel;return t}DamageMultiplierEffectValue(){return Math.pow(2,Math.floor(this.MaxReachedTotalLevel()/250))}DamageMultiplierEffectValueString(){return f.percent(this.DamageMultiplierEffectValue())}}class cP{constructor(t,i,r){o(this,"data");o(this,"heroKind");o(this,"id");this.data=t,this.heroKind=i,this.id=r}get value(){switch(this.heroKind){case R.Warrior:return this.data.source.warriorSkillTriggeredNum[this.id];case R.Wizard:return this.data.source.wizardSkillTriggeredNum[this.id];case R.Angel:return this.data.source.angelSkillTriggeredNum[this.id];case R.Thief:return this.data.source.thiefSkillTriggeredNum[this.id];case R.Archer:return this.data.source.archerSkillTriggeredNum[this.id];case R.Tamer:return this.data.source.tamerSkillTriggeredNum[this.id];default:return 0}}set value(t){switch(this.heroKind){case R.Warrior:this.data.source.warriorSkillTriggeredNum[this.id]=t;break;case R.Wizard:this.data.source.wizardSkillTriggeredNum[this.id]=t;break;case R.Angel:this.data.source.angelSkillTriggeredNum[this.id]=t;break;case R.Thief:this.data.source.thiefSkillTriggeredNum[this.id]=t;break;case R.Archer:this.data.source.archerSkillTriggeredNum[this.id]=t;break;case R.Tamer:this.data.source.tamerSkillTriggeredNum[this.id]=t;break}}}class oP{constructor(t,i,r){o(this,"data");o(this,"heroKind");o(this,"id");this.data=t,this.heroKind=i,this.id=r}get value(){switch(this.heroKind){case R.Warrior:return this.data.source.warriorSkillLevel[this.id];case R.Wizard:return this.data.source.wizardSkillLevel[this.id];case R.Angel:return this.data.source.angelSkillLevel[this.id];case R.Thief:return this.data.source.thiefSkillLevel[this.id];case R.Archer:return this.data.source.archerSkillLevel[this.id];case R.Tamer:return this.data.source.tamerSkillLevel[this.id];default:return 0}}set value(t){switch(this.value<t&&(this.maxReachedLevel=t),this.heroKind){case R.Warrior:this.data.source.warriorSkillLevel[this.id]=t;break;case R.Wizard:this.data.source.wizardSkillLevel[this.id]=t;break;case R.Angel:this.data.source.angelSkillLevel[this.id]=t;break;case R.Thief:this.data.source.thiefSkillLevel[this.id]=t;break;case R.Archer:this.data.source.archerSkillLevel[this.id]=t;break;case R.Tamer:this.data.source.tamerSkillLevel[this.id]=t;break}}get maxReachedLevel(){switch(this.heroKind){case R.Warrior:return this.data.source.warriorMaxReachedSkillLevel[this.id];case R.Wizard:return this.data.source.wizardMaxReachedSkillLevel[this.id];case R.Angel:return this.data.source.angelMaxReachedSkillLevel[this.id];case R.Thief:return this.data.source.thiefMaxReachedSkillLevel[this.id];case R.Archer:return this.data.source.archerMaxReachedSkillLevel[this.id];case R.Tamer:return this.data.source.tamerMaxReachedSkillLevel[this.id];default:return 0}}set maxReachedLevel(t){switch(this.heroKind){case R.Warrior:this.data.source.warriorMaxReachedSkillLevel[this.id]=t;break;case R.Wizard:this.data.source.wizardMaxReachedSkillLevel[this.id]=t;break;case R.Angel:this.data.source.angelMaxReachedSkillLevel[this.id]=t;break;case R.Thief:this.data.source.thiefMaxReachedSkillLevel[this.id]=t;break;case R.Archer:this.data.source.archerMaxReachedSkillLevel[this.id]=t;break;case R.Tamer:this.data.source.tamerMaxReachedSkillLevel[this.id]=t;break}}}class xe{constructor(t,i,r){o(this,"data");o(this,"heroKind");o(this,"id");o(this,"passiveEffectLists",[]);o(this,"throwSpeed",2e3);o(this,"attackLists",Array(W.HeroKind));o(this,"damageMultiplier");o(this,"casttimeReductionPercent");o(this,"mp",Array(W.HeroKind));o(this,"tempDamage",Array(W.HeroKind));o(this,"extraHitCount");o(this,"interval",Array(W.HeroKind));o(this,"exceededIntervalModifier",Array(W.HeroKind));o(this,"attackArray",Array(W.HeroKind));o(this,"hitCount",Array(W.HeroKind));o(this,"tempElement");o(this,"level");o(this,"unlockFullCast");o(this,"triggeredNum");this.data=t,this.heroKind=i,this.id=r,this.damageMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.casttimeReductionPercent=new $(new u(n.Base,s.Add,()=>0,()=>.9)),this.extraHitCount=new $,this.triggeredNum=new cP(this.data,i,r),this.level=new oP(t,i,r),this.unlockFullCast={RegisterCondition:h=>{}}}NameString(){return M.SkillName(this.heroKind,this.id)}NameURL(){switch(this.heroKind){case R.Warrior:return Es[this.id];case R.Wizard:return bs[this.id];case R.Angel:return Ls[this.id];case R.Thief:return ys[this.id];case R.Archer:return Ps[this.id];case R.Tamer:return Ds[this.id];default:return"Not Implemented"}}get lv(){return this.data.skill.unlockSkillPassivePersist?this.level.maxReachedLevel:this.level.value}get type(){return Zt.Attack}get rank(){switch(this.heroKind){case R.Warrior:return this.data.source.warriorSkillRank[this.id];case R.Wizard:return this.data.source.wizardSkillRank[this.id];case R.Angel:return this.data.source.angelSkillRank[this.id];case R.Thief:return this.data.source.thiefSkillRank[this.id];case R.Archer:return this.data.source.archerSkillRank[this.id];case R.Tamer:return this.data.source.tamerSkillRank[this.id];default:return 0}}get classSkill(){return this.data.skill.classSkills[this.heroKind]}get element(){return F.Physical}get initDamage(){return Vs.skillFactors[this.heroKind][this.id][0]}get incrementDamage(){return Vs.skillFactors[this.heroKind][this.id][1]}get initMpGain(){return Vs.skillFactors[this.heroKind][this.id][2]}get incrementMpGain(){return Vs.skillFactors[this.heroKind][this.id][3]}get initInterval(){return Vs.skillFactors[this.heroKind][this.id][6]}get initHitCount(){return Vs.skillFactors[this.heroKind][this.id][15]}get incrementHitCount(){return Vs.skillFactors[this.heroKind][this.id][16]}get maxHitCount(){return Vs.skillFactors[this.heroKind][this.id][17]}get isLog(){return this.data.skill.isLog[this.heroKind]}IsEquipped(t){let i=this.data.battles[t].skillSet;return i.IsEquipped(this)?this.heroKind==t?i.currentSkillSet.indexOf(this)<i.currentEquippingNum:i.currentGlobalSkillSet.indexOf(this)<i.currentGlobalEquippingNum:!1}CanEquip(){return!0}IsActiveBuff(t){return this.IsEquipped(t)}get levelBonus(){return this.data.skill.skillLevelBonus[this.heroKind].Value()}Level(){return this.Rank()<=0?0:this.level.value+this.levelBonus}Rank(){return this.rank}IncrementDamagePerLevel(){return this.incrementDamage*this.Rank()*this.damageMultiplier.Value()}Damage(){return this.initDamage*this.damageMultiplier.Value()+this.IncrementDamagePerLevel()*this.Level()}IncrementMpGainPerLevel(){return this.incrementMpGain*this.Rank()}GainMp(){const t=this.initMpGain+this.IncrementMpGainPerLevel()*this.Level();return this.isLog?Math.log10(Math.max(1,t))*this.HitCount()*(1/Math.pow(.1,.8)):t}HitCount(){return Math.min(this.maxHitCount,this.initHitCount+this.incrementHitCount*this.level.value)+this.data.skill.extraSkillHitCount[this.heroKind].Value()}DamageOrigin(t,i=!1){return this.tempDamage[t.heroKind]=this.isLog?this.element!=F.Physical?Math.log10(Math.max(1,this.Damage()))+t.matk:Math.log10(Math.max(1,this.Damage()))+t.atk:this.element!=F.Physical?this.Damage()*t.matk:this.Damage()*t.atk,this.tempDamage[t.heroKind]*=this.data.skill.ladyEmeldaEffectMultiplier[t.heroKind].Value(),i?this.tempDamage[t.heroKind]*this.data.stats.ElementDamage(t.heroKind,this.element).Value():this.tempDamage[t.heroKind]}BuffPercent(){return this.initDamage+this.IncrementBuffPercentPerLevel()*this.Level()}IncrementBuffPercentPerLevel(){return this.incrementDamage*this.Rank()}Interval(){return .5*this.initInterval*(1-this.casttimeReductionPercent.Value())}CalculateIntervalInternal(t){let i=this.IntervalModifier(t);this.exceededIntervalModifier[t.heroKind]=i>=.2?0:1+(.2/i-1)*this.data.skill.excessSpeedForHitCount.Value(),this.interval[t.heroKind]=this.Interval()*Math.max(.2,i),this.CalculateHitCount(t.heroKind)}CalculateInterval(t){return this.CalculateIntervalInternal(t),this.interval[t.heroKind]}CalculateHitCount(t){let i=this.initHitCount+this.extraHitCount.Value()+this.data.skill.extraSkillHitCount[t].Value();this.exceededIntervalModifier[t]>1&&(i=Math.floor(i*this.exceededIntervalModifier[t])),this.hitCount[t]=i}IntervalModifier(t){return Math.max(.5,1-1e-4*this.Level())/this.data.skill.skillCastSpeedModifier[t.heroKind].Value()}}var Js=(e=>(e[e.BasicStats=0]="BasicStats",e[e.HeroStats=1]="HeroStats",e[e.GlobalStats=2]="GlobalStats",e[e.Others=3]="Others",e))(Js||{}),p=(e=>(e[e.SDDamageMultiplier=0]="SDDamageMultiplier",e[e.SDDamageCutMultiplier=1]="SDDamageCutMultiplier",e[e.SDChallengeBossDamageMultiplier=2]="SDChallengeBossDamageMultiplier",e[e.SDChallengeBossDamageCutMultiplier=3]="SDChallengeBossDamageCutMultiplier",e[e.SDArmoredFury=4]="SDArmoredFury",e[e.SDWardedFury=5]="SDWardedFury",e[e.GuildExp=6]="GuildExp",e[e.ThisSkillDamage=7]="ThisSkillDamage",e[e.ThisSkillHitCount=8]="ThisSkillHitCount",e[e.ThisSkillCastTime=9]="ThisSkillCastTime",e[e.PhysicalDamage=10]="PhysicalDamage",e[e.FireDamage=11]="FireDamage",e[e.IceDamage=12]="IceDamage",e[e.ThunderDamage=13]="ThunderDamage",e[e.LightDamage=14]="LightDamage",e[e.DarkDamage=15]="DarkDamage",e[e.BlessingEffect=16]="BlessingEffect",e[e.TownMaterialGain=17]="TownMaterialGain",e[e.EquipmentProficiency=18]="EquipmentProficiency",e[e.ArtifactProficiency=19]="ArtifactProficiency",e[e.EssenceConversionRate=20]="EssenceConversionRate",e[e.AlchemyPoint=21]="AlchemyPoint",e[e.StoneResearchPower=22]="StoneResearchPower",e[e.CrystalResearchPower=23]="CrystalResearchPower",e[e.LeafResearchPower=24]="LeafResearchPower",e[e.GoldCap=25]="GoldCap",e[e.SlimeCoinCap=26]="SlimeCoinCap",e[e.ArtifactGainChance=27]="ArtifactGainChance",e[e.SDEnchantGainChance=28]="SDEnchantGainChance",e[e.PetStat=29]="PetStat",e[e.LoyaltyPointGain=30]="LoyaltyPointGain",e[e.PetExpGain=31]="PetExpGain",e[e.DoubleCaptureChance=32]="DoubleCaptureChance",e[e.TripleCaptureChance=33]="TripleCaptureChance",e[e.ExpeditionExpGain=34]="ExpeditionExpGain",e[e.ExpeditionSpeed=35]="ExpeditionSpeed",e[e.ExpeditionRewardAmount=36]="ExpeditionRewardAmount",e[e.ExpeditionPetExpGain=37]="ExpeditionPetExpGain",e[e.ExpeditionPassiveEffect=38]="ExpeditionPassiveEffect",e[e.PetPassiveEffect=39]="PetPassiveEffect",e))(p||{}),J=(e=>(e[e.PhysicalDamage=0]="PhysicalDamage",e[e.FireDamage=1]="FireDamage",e[e.IceDamage=2]="IceDamage",e[e.ThunderDamage=3]="ThunderDamage",e[e.LightDamage=4]="LightDamage",e[e.DarkDamage=5]="DarkDamage",e[e.ArmoredFury=6]="ArmoredFury",e[e.WardedFury=7]="WardedFury",e[e.PhysicalCritAdd=8]="PhysicalCritAdd",e[e.MagicalCritAdd=9]="MagicalCritAdd",e[e.PhysicalCritMul=10]="PhysicalCritMul",e[e.MagicalCritMul=11]="MagicalCritMul",e[e.CriticalDamage=12]="CriticalDamage",e[e.EquipmentProf=13]="EquipmentProf",e[e.ArtifactProf=14]="ArtifactProf",e[e.TamingPoint=15]="TamingPoint",e[e.LoyaltyPoint=16]="LoyaltyPoint",e[e.EquipmentDropChanceAfter=17]="EquipmentDropChanceAfter",e[e.SDDamageMul=18]="SDDamageMul",e[e.SDArmoredFury=19]="SDArmoredFury",e[e.SDWardedFury=20]="SDWardedFury",e))(J||{});class a{constructor(){o(this,"data");o(this,"skill");o(this,"level");o(this,"requiredLevel");o(this,"effectKind");o(this,"basicStatsKind");o(this,"statsKind");o(this,"globalStatsKind");o(this,"multiplierType");o(this,"description",()=>"not implemented");o(this,"value")}static BasicStats(t,i,r,h,c){const m=new a;let w=!0,k="";return m.data=t.data,m.effectKind=Js.BasicStats,m.skill=t,m.level=t.level,m.requiredLevel=i,m.basicStatsKind=r,m.multiplierType=h,m.value=c,h==s.Add&&(w=!1),k=`${d[r]} + ${h==s.Add||h==s.After?f.tDigit(m.value):f.percent(m.value)}`,w&&(k=m.MultiplierTypeString(h,k)),m.description=()=>k,m.SetEffect(),m}static Stats(t,i,r,h,c){const m=new a;let w="";return m.data=t.data,m.effectKind=Js.HeroStats,m.skill=t,m.level=t.level,m.requiredLevel=i,m.statsKind=r,m.multiplierType=h,m.value=c,w=`${M.Stat(r)} + ${f.percent(m.value)}`,w=m.MultiplierTypeString(h,w),m.description=()=>w,m.SetEffect(),m}static GlobalStats(t,i,r,h,c){const m=new a;let w="";return m.data=t.data,m.effectKind=Js.GlobalStats,m.skill=t,m.level=t.level,m.requiredLevel=i,m.globalStatsKind=r,m.multiplierType=h,m.value=c,w=`${M.GlobalStatsString(r)} + ${f.percent(m.value)}`,w=m.MultiplierTypeString(h,w),m.description=()=>w,m.SetEffect(),m}static Register(t,i,r,h=null){const c=new a;return c.data=t.data,c.effectKind=Js.Others,c.skill=t,c.level=t.level,c.requiredLevel=i,c.description=r,h!=null&&h(()=>c.IsActivated()),c}static SkillPassive(t,i,r,h,c){const m=new a;return m.data=t.data,m.effectKind=Js.Others,m.skill=t,m.level=t.level,m.requiredLevel=i,m.value=h,m.onInstanceRegister(r,c),m}onInstanceRegister(t,i){let r=!0,h="",c=this.value,m=this.skill,w=()=>m.heroKind==this.data.source.currentHero?c:c*this.data.skill.skillPassiveShareFactors[m.heroKind].Value();switch(t){case p.PetStat:h=M.PetRankMilestoneString(3,f.percent(c)),this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.LoyaltyPointGain:h=M.PetRankMilestoneString(1,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.stats.heroes[k].loyaltyPoingGain.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.PetExpGain:h=M.PetRankMilestoneString(2,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.stats.heroes[k].petExpGainPerDefeat.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.DoubleCaptureChance:h=M.PetRankMilestoneString(5,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.monster.doubleCaptureChance[k].RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.TripleCaptureChance:h=M.PetRankMilestoneString(5,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.monster.captureTripleChance[k].RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.ExpeditionExpGain:h=M.ExpeditionMilestoneString(16,f.percent(c)),this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.ExpeditionSpeed:h=M.ExpeditionMilestoneString(19,f.percent(c)),this.data.expedition.speedMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.ExpeditionRewardAmount:h=M.ExpeditionMilestoneString(17,f.percent(c)),this.data.expedition.rewardMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.ExpeditionPetExpGain:h=`Expedition Pet EXP Gain  + ${f.percent(c)}`,this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.ExpeditionPassiveEffect:h=M.ExpeditionMilestoneString(18,f.percent(c)),this.data.expedition.passiveEffectMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.ArtifactGainChance:h=M.OtherString(25)+" + "+f.percent(c),this.data.equipment.artifactChance.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.SDEnchantGainChance:h=M.OtherString(26)+" + "+f.percent(c),this.data.equipment.sdEnchantChance.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.PetStat:h=M.PetRankMilestoneString(3,f.percent(c)),this.data.monster.petStatsMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.PetPassiveEffect:h="Pet Passive Effect + "+f.percent(c),this.data.monster.petPassiveEffectMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.SDDamageMultiplier:h=M.GradeMilestone(5,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.battles[k].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.SDDamageCutMultiplier:h=M.GradeMilestone(6,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.battles[k].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.SDChallengeBossDamageMultiplier:h=M.GradeMilestone(7,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.battles[k].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.SDChallengeBossDamageCutMultiplier:h=M.GradeMilestone(8,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.battles[k].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.SDArmoredFury:h=M.GradeMilestone(9,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.battles[k].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.SDWardedFury:h=M.GradeMilestone(10,f.percent(c));for(let k=0;k<W.HeroKind;k++)this.data.battles[k].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.GuildExp:h="Guild Exp + "+f.percent(c),this.data.stats.SetEffectGuildExp(new u(n.SkillPassive,i,w,()=>this.IsActivated()));break;case p.ThisSkillDamage:h=M.ThiefSkillsString(3)+` + ${f.percent(c)}`,m.damageMultiplier.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>c,()=>this.IsActivated())),r=!1;break;case p.ThisSkillHitCount:h=M.AngelSkillsString(21,c),m.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>c,()=>this.IsActivated())),r=!1;break;case p.ThisSkillCastTime:h=M.AngelSkillsString(22,c),m.casttimeReductionPercent.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>c,()=>this.IsActivated())),r=!1;break;case p.PhysicalDamage:h=`Physical Damage + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.ElementDamage(k,F.Physical).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.FireDamage:h=`Fire Damage + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.ElementDamage(k,F.Fire).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.IceDamage:h=`Ice Damage + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.ElementDamage(k,F.Ice).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.ThunderDamage:h=`Thunder Damage + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.ElementDamage(k,F.Thunder).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.LightDamage:h=`Light Damage + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.ElementDamage(k,F.Light).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.DarkDamage:h=`Dark Damage + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.ElementDamage(k,F.Dark).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.BlessingEffect:h=`Blessing Effect + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.blessingInfo.effectMultipliers[k].RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.TownMaterialGain:h=`Town Material Gain + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.town.townMaterialGainMultiplier[k].RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.EquipmentProficiency:h=M.Stat(v.EquipmentProficiencyGain)+` + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.HeroStats(k,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.ArtifactProficiency:h=M.Stat(v.ArtifactProficiencyGain)+` + ${f.percent(c)}`;for(let k=0;k<W.HeroKind;k++)this.data.stats.HeroStats(k,v.ArtifactProficiencyGain).RegisterMultiplier(new u(n.SkillPassive,i,()=>this.EffectValue(k),()=>this.IsActivated()));break;case p.EssenceConversionRate:h=`Essence Conversion Rate + ${f.percent(c)}`,this.data.alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break;case p.AlchemyPoint:h=`Alchemy Point Gain + ${f.percent(c)}`,this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break;case p.StoneResearchPower:h=M.EquipmentEffectName(l.StoneTownResearchPower)+` + ${f.percent(c)}`,this.data.town.researchPower[0].RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break;case p.CrystalResearchPower:h=M.EquipmentEffectName(l.CrystalTownResearchPower)+` + ${f.percent(c)}`,this.data.town.researchPower[1].RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break;case p.LeafResearchPower:h=M.EquipmentEffectName(l.LeafTownResearchPower)+` + ${f.percent(c)}`,this.data.town.researchPower[2].RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break;case p.GoldCap:h=`Gold Cap + ${f.percent(c)}`,this.data.resource.goldCap.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break;case p.SlimeCoinCap:h=`Slime Coin Cap + ${f.percent(c)}`,this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.SkillPassive,i,w,()=>this.IsActivated())),r=!1;break}r&&(h=this.MultiplierTypeString(i,h)),this.description=()=>h}static SkillBuff(t,i,r,h){const c=new a;return c.data=t.data,c.effectKind=Js.Others,c.skill=t,c.level=t.level,c.requiredLevel=i,c.value=h,c.onInstanceRegister2(r),c}onInstanceRegister2(t){let i="",r=this.skill,h=this.value;for(let c=0;c<W.HeroKind;c++){let m=c,w=()=>r.IsActiveBuff(m)&&this.IsActivated();switch(t){case J.PhysicalDamage:i=M.ArcherSkillsString(1,h),this.data.stats.ElementDamage(m,F.Physical).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.FireDamage:i=M.ArcherSkillsString(8,h),this.data.stats.ElementDamage(m,F.Fire).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.IceDamage:i=M.ArcherSkillsString(6,h),this.data.stats.ElementDamage(m,F.Ice).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.ThunderDamage:i=M.ArcherSkillsString(5,h),this.data.stats.ElementDamage(m,F.Thunder).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.LightDamage:i=M.ArcherSkillsString(9,h),this.data.stats.ElementDamage(m,F.Light).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.DarkDamage:i=M.ArcherSkillsString(10,h),this.data.stats.ElementDamage(m,F.Dark).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.ArmoredFury:i=M.OtherString(19,M.Stat(v.ArmoredFury)+" + "+f.percent(h)),this.data.stats.HeroStats(m,v.ArmoredFury).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.WardedFury:i=M.OtherString(19,M.Stat(v.WardedFury)+" + "+f.percent(h)),this.data.stats.HeroStats(m,v.WardedFury).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.PhysicalCritAdd:i=M.ThiefSkillsString(1,h),this.data.stats.HeroStats(m,v.PhysCritChance).RegisterMultiplier(new u(n.Buff,s.Add,()=>h,w));break;case J.MagicalCritAdd:i=M.ThiefSkillsString(4,h),this.data.stats.HeroStats(m,v.MagCritChance).RegisterMultiplier(new u(n.Buff,s.Add,()=>h,w));break;case J.PhysicalCritMul:i=M.ThiefSkillsString(12,h),this.data.stats.HeroStats(m,v.PhysCritChance).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.MagicalCritMul:i=M.ThiefSkillsString(13,h),this.data.stats.HeroStats(m,v.MagCritChance).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.CriticalDamage:i=M.OtherString(19,M.Stat(v.CriticalDamage)+" + "+f.percent(h)),this.data.stats.HeroStats(m,v.CriticalDamage).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.EquipmentProf:i=M.OtherString(19,M.Stat(v.EquipmentProficiencyGain)+" + "+f.percent(h)),this.data.stats.HeroStats(m,v.EquipmentProficiencyGain).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.ArtifactProf:i=M.OtherString(19,M.Stat(v.ArtifactProficiencyGain)+" + "+f.percent(h)),this.data.stats.HeroStats(m,v.ArtifactProficiencyGain).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.TamingPoint:i=M.OtherString(19,M.Stat(v.TamingPointGain)+" + "+f.percent(h)),this.data.stats.HeroStats(m,v.TamingPointGain).RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.LoyaltyPoint:i=M.OtherString(19,"Loyalty Point Gain + "+f.percent(h)),this.data.stats.heroes[c].loyaltyPoingGain.RegisterMultiplier(new u(n.Buff,s.Mul,()=>h,w));break;case J.EquipmentDropChanceAfter:i=M.OtherString(19,M.Stat(v.EquipmentDropChance)+" (After) + "+f.percent(h)),this.data.stats.HeroStats(m,v.EquipmentDropChance).RegisterMultiplier(new u(n.Buff,s.After,()=>h,w));break;case J.SDDamageMul:i=M.OtherString(19,M.GradeMilestone(5,f.percent(h))),this.data.battles[c].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.SkillPassive,s.Mul,()=>this.EffectValue(m),()=>this.IsActivated()));break;case J.SDArmoredFury:i=M.OtherString(19,M.GradeMilestone(9,f.percent(h))),this.data.battles[c].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.SkillPassive,s.Mul,()=>this.EffectValue(m),()=>this.IsActivated()));break;case J.SDWardedFury:i=M.OtherString(19,M.GradeMilestone(10,f.percent(h))),this.data.battles[c].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.SkillPassive,s.Mul,()=>this.EffectValue(m),()=>this.IsActivated()));break}}this.description=()=>i}MultiplierTypeString(t,i){switch(t){case s.Add:return i+" (Add)";case s.Mul:return i+" (Mul)";case s.After:return i+" (After)"}}IsActivated(){return this.IsEnoughLevel()}IsEnoughLevel(){return this.data.skill.unlockSkillPassivePersist?this.level.maxReachedLevel>=this.requiredLevel:this.level.value>=this.requiredLevel}SetEffect(){switch(this.effectKind){case Js.BasicStats:for(let i=0;i<W.HeroKind;i++){let r=new u(n.SkillPassive,this.multiplierType,()=>this.EffectValue(i),()=>this.IsActivated());this.data.stats.BasicStats(i,this.basicStatsKind).RegisterMultiplier(r)}break;case Js.HeroStats:for(let i=0;i<W.HeroKind;i++){let r=new u(n.SkillPassive,this.multiplierType,()=>this.EffectValue(i),()=>this.IsActivated());this.data.stats.HeroStats(i,this.statsKind).RegisterMultiplier(r)}break;case Js.GlobalStats:let t=new u(n.SkillPassive,this.multiplierType,()=>this.skill.heroKind==this.data.source.currentHero?this.value:this.value*this.data.skill.skillPassiveShareFactors[this.skill.heroKind].Value(),()=>this.IsActivated());this.data.stats.globalStats[this.globalStatsKind].RegisterMultiplier(t);break}}EffectValue(t){let i=this.value;return t!=this.skill.heroKind&&(i*=this.data.skill.skillPassiveShareFactors[this.skill.heroKind].Value()),i}}var Fs=(e=>(e[e.Nothing=0]="Nothing",e[e.HpUp=1]="HpUp",e[e.AtkUp=2]="AtkUp",e[e.MatkUp=3]="MatkUp",e[e.DefMDefUp=4]="DefMDefUp",e[e.SpdUp=5]="SpdUp",e[e.MoveSpeedUp=6]="MoveSpeedUp",e[e.GoldUp=7]="GoldUp",e[e.SkillLevelUp=8]="SkillLevelUp",e))(Fs||{});class fP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,20,d.HP,s.Add,300)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,40,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.Register(this,50,()=>M.AngelSkillsString(5,10))),this.passiveEffectLists.push(a.BasicStats(this,60,d.HP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MP,s.Add,250)),this.passiveEffectLists.push(a.BasicStats(this,80,d.HP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MP,s.Add,250)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(5,15))),this.passiveEffectLists.push(a.GlobalStats(this,125,ke.GoldGain,s.Add,.5)),this.passiveEffectLists.push(a.Register(this,150,()=>M.AngelSkillsString(5,20))),this.passiveEffectLists.push(a.BasicStats(this,175,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,200,()=>M.AngelSkillsString(5,25))),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,250,d.HP,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,275,()=>M.AngelSkillsString(15,50))),this.passiveEffectLists.push(a.Register(this,300,()=>M.AngelSkillsString(15,250))),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Register(this,350,()=>M.AngelSkillsString(15,500))),this.passiveEffectLists.push(a.SkillPassive(this,375,p.GuildExp,.1,s.Mul)),this.passiveEffectLists.push(a.Register(this,400,()=>M.AngelSkillsString(15,1e3))),this.passiveEffectLists.push(a.SkillPassive(this,425,p.BlessingEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,450,()=>M.AngelSkillsString(15,2e3))),this.passiveEffectLists.push(a.SkillPassive(this,475,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,500,()=>M.AngelSkillsString(15,5e3))),this.passiveEffectLists.push(a.SkillPassive(this,525,p.BlessingEffect,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,550,()=>M.AngelSkillsString(15,1e4))),this.passiveEffectLists.push(a.SkillPassive(this,575,p.GuildExp,.3,s.Mul)),this.passiveEffectLists.push(a.Register(this,600,()=>M.AngelSkillsString(15,5e4))),this.passiveEffectLists.push(a.SkillPassive(this,625,p.BlessingEffect,.6,s.Mul)),this.passiveEffectLists.push(a.Register(this,650,()=>M.AngelSkillsString(15,1e5))),this.passiveEffectLists.push(a.SkillPassive(this,675,p.GuildExp,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,700,()=>M.AngelSkillsString(15,5e5))),this.passiveEffectLists.push(a.SkillPassive(this,725,p.BlessingEffect,.8,s.Mul)),this.passiveEffectLists.push(a.Register(this,750,()=>M.AngelSkillsString(15,1e6))),this.passiveEffectLists.push(a.SkillPassive(this,775,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,800,()=>M.AngelSkillsString(15,2e6))),this.passiveEffectLists.push(a.SkillPassive(this,825,p.BlessingEffect,2,s.Mul)),this.passiveEffectLists.push(a.Register(this,850,()=>M.AngelSkillsString(15,3e6))),this.passiveEffectLists.push(a.SkillPassive(this,875,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,900,()=>M.AngelSkillsString(15,4e6))),this.passiveEffectLists.push(a.SkillPassive(this,925,p.BlessingEffect,6,s.Mul)),this.passiveEffectLists.push(a.Register(this,950,()=>M.AngelSkillsString(15,5e6))),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}BuffEffectValue(){let t=0;return this.level.value>=275&&(t+=50),this.level.value>=300&&(t+=250),this.level.value>=350&&(t+=500),this.level.value>=400&&(t+=1e3),this.level.value>=450&&(t+=2e3),this.level.value>=500&&(t+=5e3),this.level.value>=550&&(t+=1e4),this.level.value>=600&&(t+=5e4),this.level.value>=650&&(t+=1e5),this.level.value>=700&&(t+=5e5),this.level.value>=750&&(t+=1e6),this.level.value>=800&&(t+=2e6),this.level.value>=850&&(t+=3e6),this.level.value>=900&&(t+=4e6),this.level.value>=950&&(t+=5e6),t}get type(){return Zt.Buff}get buff(){return Fs.HpUp}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.HP).RegisterMultiplier(i);let r=new u(n.Buff,s.Add,()=>this.RegenValue(),()=>this.IsActiveBuff(t));this.data.stats.HpRegenerate(t).RegisterMultiplier(r);let h=new u(n.Buff,s.After,()=>this.BuffEffectValue(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.HP).RegisterMultiplier(h)}RegenValue(){return this.level.value<50?0:this.level.value<100?10:this.level.value<150?25:this.level.value<200?45:70}}class pP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,10,v.MoveSpeed,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,15,d.SPD,s.Add,75)),this.passiveEffectLists.push(a.BasicStats(this,20,d.SPD,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,25,d.SPD,s.Add,125)),this.passiveEffectLists.push(a.Stats(this,30,v.MoveSpeed,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,40,d.SPD,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,50,d.SPD,s.Add,200)),this.passiveEffectLists.push(a.Stats(this,75,v.MoveSpeed,s.Mul,.15)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(7,.1))),this.passiveEffectLists.push(a.BasicStats(this,125,d.SPD,s.Add,300)),this.passiveEffectLists.push(a.Register(this,150,()=>M.AngelSkillsString(7,.15))),this.passiveEffectLists.push(a.BasicStats(this,175,d.SPD,s.Add,350)),this.passiveEffectLists.push(a.Register(this,200,()=>M.AngelSkillsString(7,.25))),this.passiveEffectLists.push(a.BasicStats(this,225,d.SPD,s.Add,400)),this.passiveEffectLists.push(a.BasicStats(this,250,d.SPD,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,275,d.SPD,s.Mul,.1)),this.passiveEffectLists.push(a.Register(this,300,()=>M.AngelSkillsString(7,.4))),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.SPD,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,375,v.MoveSpeed,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,400,()=>M.AngelSkillsString(7,.6))),this.passiveEffectLists.push(a.SkillPassive(this,425,p.EquipmentProficiency,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,450,d.SPD,s.Mul,.3)),this.passiveEffectLists.push(a.Stats(this,475,v.MoveSpeed,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,500,()=>M.AngelSkillsString(7,.85))),this.passiveEffectLists.push(a.SkillPassive(this,525,p.EquipmentProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,550,d.SPD,s.Mul,.4)),this.passiveEffectLists.push(a.Stats(this,575,v.MoveSpeed,s.Mul,.35)),this.passiveEffectLists.push(a.Register(this,600,()=>M.AngelSkillsString(7,1.15))),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ArtifactProficiency,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,650,d.SPD,s.Mul,.5)),this.passiveEffectLists.push(a.Stats(this,675,v.MoveSpeed,s.Mul,.5)),this.passiveEffectLists.push(a.Register(this,700,()=>M.AngelSkillsString(7,1.5))),this.passiveEffectLists.push(a.SkillPassive(this,725,p.EquipmentProficiency,.3,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,750,d.SPD,s.Mul,.6)),this.passiveEffectLists.push(a.Stats(this,775,v.MoveSpeed,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,800,()=>M.AngelSkillsString(7,1.9))),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ArtifactProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,850,d.SPD,s.Mul,.7)),this.passiveEffectLists.push(a.Stats(this,875,v.MoveSpeed,s.Mul,1.5)),this.passiveEffectLists.push(a.Register(this,900,()=>M.AngelSkillsString(7,2.35))),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ArtifactProficiency,.3,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,950,d.SPD,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}MoveSpeedValue(){return this.level.value>=900?9.25:this.level.value>=800?6.9:this.level.value>=700?5:this.level.value>=600?3.5:this.level.value>=500?2.35:this.level.value>=400?1.5:this.level.value>=300?.9:this.level.value>=200?.5:this.level.value>=150?.25:this.level.value>=100?.1:0}get type(){return Zt.Buff}get buff(){return Fs.SpdUp}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.SPD).RegisterMultiplier(i);let r=new u(n.Buff,s.Mul,()=>this.MoveSpeedValue(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(r)}}class dP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,30,d.DEF,s.Add,15)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MDEF,s.Add,15)),this.passiveEffectLists.push(a.Register(this,50,()=>M.AngelSkillsString(1))),this.passiveEffectLists.push(a.BasicStats(this,60,d.MP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,70,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,80,d.HP,s.Add,300)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(2))),this.passiveEffectLists.push(a.BasicStats(this,125,d.HP,s.Mul,.025)),this.passiveEffectLists.push(a.Register(this,150,()=>M.AngelSkillsString(3))),this.passiveEffectLists.push(a.BasicStats(this,175,d.HP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,225,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,250,()=>M.AngelSkillsString(4))),this.passiveEffectLists.push(a.Register(this,275,()=>M.AngelSkillsString(14,5))),this.passiveEffectLists.push(a.Register(this,300,()=>M.AngelSkillsString(14,15))),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Register(this,350,()=>M.AngelSkillsString(14,30))),this.passiveEffectLists.push(a.BasicStats(this,375,d.HP,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,400,()=>M.AngelSkillsString(14,50))),this.passiveEffectLists.push(a.BasicStats(this,425,d.MP,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,450,()=>M.AngelSkillsString(14,100))),this.passiveEffectLists.push(a.BasicStats(this,475,d.HP,s.Mul,2)),this.passiveEffectLists.push(a.Register(this,500,()=>M.AngelSkillsString(14,300))),this.passiveEffectLists.push(a.BasicStats(this,525,d.MP,s.Mul,2)),this.passiveEffectLists.push(a.Register(this,550,()=>M.AngelSkillsString(14,500))),this.passiveEffectLists.push(a.BasicStats(this,575,d.HP,s.Mul,3)),this.passiveEffectLists.push(a.Register(this,600,()=>M.AngelSkillsString(14,2e3))),this.passiveEffectLists.push(a.BasicStats(this,625,d.MP,s.Mul,3)),this.passiveEffectLists.push(a.Register(this,650,()=>M.AngelSkillsString(14,3e3))),this.passiveEffectLists.push(a.BasicStats(this,675,d.HP,s.Mul,4)),this.passiveEffectLists.push(a.Register(this,700,()=>M.AngelSkillsString(14,4e3))),this.passiveEffectLists.push(a.BasicStats(this,725,d.MP,s.Mul,4)),this.passiveEffectLists.push(a.Register(this,750,()=>M.AngelSkillsString(14,5e3))),this.passiveEffectLists.push(a.BasicStats(this,775,d.HP,s.Mul,10)),this.passiveEffectLists.push(a.Register(this,800,()=>M.AngelSkillsString(14,7500))),this.passiveEffectLists.push(a.BasicStats(this,825,d.MP,s.Mul,5)),this.passiveEffectLists.push(a.Register(this,850,()=>M.AngelSkillsString(14,1e4))),this.passiveEffectLists.push(a.BasicStats(this,875,d.HP,s.Mul,15)),this.passiveEffectLists.push(a.Register(this,900,()=>M.AngelSkillsString(14,2e4))),this.passiveEffectLists.push(a.BasicStats(this,925,d.MP,s.Mul,10)),this.passiveEffectLists.push(a.Register(this,950,()=>M.AngelSkillsString(14,3e4))),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}SetBuff(t){let i=new u(n.Buff,s.After,()=>this.BuffEffectValue(),()=>this.IsActiveBuff(t));this.data.stats.HpRegenerate(t).RegisterMultiplier(i)}BuffEffectValue(){let t=0;return this.level.value>=275&&(t+=5),this.level.value>=300&&(t+=15),this.level.value>=350&&(t+=30),this.level.value>=400&&(t+=50),this.level.value>=450&&(t+=100),this.level.value>=500&&(t+=300),this.level.value>=550&&(t+=500),this.level.value>=600&&(t+=2e3),this.level.value>=650&&(t+=3e3),this.level.value>=700&&(t+=4e3),this.level.value>=750&&(t+=5e3),this.level.value>=800&&(t+=7500),this.level.value>=850&&(t+=1e4),this.level.value>=900&&(t+=2e4),this.level.value>=950&&(t+=3e4),t}get type(){return Zt.Heal}}class gP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillPassive(this,5,p.TownMaterialGain,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,10,p.TownMaterialGain,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,15,p.TownMaterialGain,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.TownMaterialGain,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,25,p.TownMaterialGain,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,30,p.TownMaterialGain,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,35,p.TownMaterialGain,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.TownMaterialGain,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,45,p.TownMaterialGain,.3,s.Add)),this.passiveEffectLists.push(a.Register(this,50,()=>M.AngelSkillsString(13,.1))),this.passiveEffectLists.push(a.GlobalStats(this,60,ke.GoldGain,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.TownMaterialGain,.4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.TownMaterialGain,.4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.TownMaterialGain,.4,s.Add)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(13,.15))),this.passiveEffectLists.push(a.SkillPassive(this,110,p.TownMaterialGain,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,120,p.TownMaterialGain,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.TownMaterialGain,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.TownMaterialGain,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,150,()=>M.AngelSkillsString(13,.2))),this.passiveEffectLists.push(a.SkillPassive(this,160,p.TownMaterialGain,.5,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,180,ke.GoldGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.TownMaterialGain,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.TownMaterialGain,1.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,250,()=>M.AngelSkillsString(13,.25))),this.passiveEffectLists.push(a.GlobalStats(this,275,ke.GoldGain,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.TownMaterialGain,2,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.GlobalStats(this,350,ke.GoldGain,s.Mul,2)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Buff}get buff(){return Fs.SkillLevelUp}SetBuff(t){let i=new u(n.Buff,s.Add,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.skill.skillLevelBonusFromHolyArch[t].RegisterMultiplier(i);let r=new u(n.Buff,s.Add,()=>this.DebuffResValue(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.DebuffRes).RegisterMultiplier(r)}DebuffResValue(){return this.level.value>=250?.7:this.level.value>=150?.45:this.level.value>=100?.25:this.level.value>=50?.1:0}get levelBonus(){return this.data.skill.skillLevelBonus[this.heroKind].Value()}BuffPercent(){return 20+this.IncrementBuffPercentPerLevel()*this.Level()}IncrementBuffPercentPerLevel(){return .1+.05*this.Rank()}}class SP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.Stats(this,20,v.MagCritChance,s.Add,.01)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MATK,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MATK,s.Mul,.025)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.LightDamage,.05,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MP,s.Add,500)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.LightDamage,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.Stats(this,100,v.MagCritChance,s.Add,.1)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.LightDamage,.15,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MATK,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,275,()=>M.AngelSkillsString(17,100))),this.passiveEffectLists.push(a.BasicStats(this,300,d.MATK,s.After,50)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.SDChallengeBossDamageMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,375,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,400,()=>M.AngelSkillsString(18,1))),this.passiveEffectLists.push(a.SkillPassive(this,425,p.LightDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Register(this,450,()=>M.AngelSkillsString(17,500))),this.passiveEffectLists.push(a.BasicStats(this,475,d.MATK,s.Mul,2)),this.passiveEffectLists.push(a.BasicStats(this,500,d.MATK,s.After,200)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.LightDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.SDChallengeBossDamageMultiplier,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,575,d.MATK,s.Mul,3)),this.passiveEffectLists.push(a.Register(this,600,()=>M.AngelSkillsString(18,2))),this.passiveEffectLists.push(a.SkillPassive(this,625,p.LightDamage,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,650,()=>M.AngelSkillsString(17,5e3))),this.passiveEffectLists.push(a.BasicStats(this,675,d.MATK,s.Mul,4)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MATK,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.LightDamage,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.SDChallengeBossDamageMultiplier,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.LightDamage,.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,800,()=>M.AngelSkillsString(18,4))),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDChallengeBossDamageMultiplier,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,850,()=>M.AngelSkillsString(17,5e4))),this.passiveEffectLists.push(a.BasicStats(this,875,d.MATK,s.Mul,10)),this.passiveEffectLists.push(a.BasicStats(this,900,d.MATK,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDChallengeBossDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.LightDamage,1,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}BuffEffectValueMAtkAfter(){let t=0;return this.level.value>=275&&(t+=100),this.level.value>=450&&(t+=500),this.level.value>=650&&(t+=5e3),this.level.value>=850&&(t+=5e4),t}BuffEffectValueSDDamageMul(){let t=0;return this.level.value>=400&&t++,this.level.value>=600&&(t+=2),this.level.value>=800&&(t+=4),t}get type(){return Zt.Buff}get buff(){return Fs.MatkUp}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.MATK).RegisterMultiplier(i);let r=new u(n.Buff,s.After,()=>this.BuffEffectValueMAtkAfter(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.MATK).RegisterMultiplier(r);let h=new u(n.Buff,s.Mul,()=>this.BuffEffectValueSDDamageMul(),()=>this.IsActiveBuff(t));this.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(h)}}class mP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.Stats(this,20,v.PhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,50,d.ATK,s.Mul,.025)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.PhysicalDamage,.05,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,70,d.HP,s.Add,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.PhysicalDamage,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,90,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.Stats(this,100,v.PhysCritChance,s.Add,.1)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,140,d.ATK,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.PhysicalDamage,.15,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,200,d.ATK,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Mul,.6)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,275,()=>M.AngelSkillsString(16,100))),this.passiveEffectLists.push(a.BasicStats(this,300,d.ATK,s.After,50)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.SDChallengeBossDamageMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,375,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,400,()=>M.AngelSkillsString(18,1))),this.passiveEffectLists.push(a.SkillPassive(this,425,p.PhysicalDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Register(this,450,()=>M.AngelSkillsString(16,500))),this.passiveEffectLists.push(a.BasicStats(this,475,d.ATK,s.Mul,2)),this.passiveEffectLists.push(a.BasicStats(this,500,d.ATK,s.After,250)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.PhysicalDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.SDChallengeBossDamageMultiplier,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,575,d.ATK,s.Mul,3)),this.passiveEffectLists.push(a.Register(this,600,()=>M.AngelSkillsString(18,2))),this.passiveEffectLists.push(a.SkillPassive(this,625,p.PhysicalDamage,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,650,()=>M.AngelSkillsString(16,5e3))),this.passiveEffectLists.push(a.BasicStats(this,675,d.ATK,s.Mul,4)),this.passiveEffectLists.push(a.BasicStats(this,700,d.ATK,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.PhysicalDamage,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.SDChallengeBossDamageMultiplier,.3,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,775,d.ATK,s.Mul,5)),this.passiveEffectLists.push(a.Register(this,800,()=>M.AngelSkillsString(18,4))),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDChallengeBossDamageMultiplier,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,850,()=>M.AngelSkillsString(16,5e4))),this.passiveEffectLists.push(a.BasicStats(this,875,d.ATK,s.Mul,10)),this.passiveEffectLists.push(a.BasicStats(this,900,d.ATK,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDChallengeBossDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PhysicalDamage,1,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}BuffEffectValueAtkAfter(){let t=0;return this.level.value>=275&&(t+=100),this.level.value>=450&&(t+=500),this.level.value>=650&&(t+=5e3),this.level.value>=850&&(t+=5e4),t}BuffEffectValueSDDamageMul(){let t=0;return this.level.value>=400&&t++,this.level.value>=600&&(t+=2),this.level.value>=800&&(t+=4),t}get type(){return Zt.Buff}get buff(){return Fs.AtkUp}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.ATK).RegisterMultiplier(i);let r=new u(n.Buff,s.After,()=>this.BuffEffectValueAtkAfter(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.ATK).RegisterMultiplier(r);let h=new u(n.Buff,s.Mul,()=>this.BuffEffectValueSDDamageMul(),()=>this.IsActiveBuff(t));this.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(h)}}class MP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,20,d.DEF,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MDEF,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,40,d.HP,s.Add,2e3)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MP,s.Add,1e3)),this.passiveEffectLists.push(a.BasicStats(this,60,d.DEF,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MDEF,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,80,d.DEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MDEF,s.Mul,.1)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(6,.025))),this.passiveEffectLists.push(a.BasicStats(this,120,d.HP,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,140,d.DEF,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MDEF,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,180,d.HP,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MP,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,225,d.HP,s.Mul,.5)),this.passiveEffectLists.push(a.Register(this,250,()=>M.AngelSkillsString(6,.075))),this.passiveEffectLists.push(a.Register(this,275,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.Register(this,300,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Register(this,350,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDDamageCutMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,400,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.Stats(this,425,v.ArmoredFury,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,450,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.Stats(this,475,v.WardedFury,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,500,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.Stats(this,525,v.ArmoredFury,s.Mul,.5)),this.passiveEffectLists.push(a.Register(this,550,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.Stats(this,625,v.WardedFury,s.Mul,.5)),this.passiveEffectLists.push(a.Register(this,600,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDDamageCutMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,650,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.SkillPassive(this,675,p.SDArmoredFury,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,700,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDWardedFury,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,750,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.SkillPassive(this,775,p.SDArmoredFury,.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,800,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDWardedFury,.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,850,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.SkillPassive(this,875,p.SDDamageCutMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.Register(this,900,()=>M.AngelSkillsString(6,.1))),this.passiveEffectLists.push(a.GlobalStats(this,925,ke.GoldGain,s.Mul,5)),this.passiveEffectLists.push(a.Register(this,950,()=>M.AngelSkillsString(19,.1))),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}PhysicalNullifiedValue(){let t=0;return this.level.value>=100&&(t+=.025),this.level.value>=200&&(t+=.075),this.level.value>=300&&(t+=.1),this.level.value>=400&&(t+=.1),this.level.value>=500&&(t+=.1),this.level.value>=600&&(t+=.1),this.level.value>=700&&(t+=.1),this.level.value>=800&&(t+=.1),this.level.value>=900&&(t+=.1),t}MagicalNullifiedValue(){let t=0;return this.level.value>=275&&(t+=.1),this.level.value>=350&&(t+=.1),this.level.value>=450&&(t+=.1),this.level.value>=550&&(t+=.1),this.level.value>=650&&(t+=.1),this.level.value>=750&&(t+=.1),this.level.value>=850&&(t+=.1),this.level.value>=950&&(t+=.1),t}get type(){return Zt.Buff}get buff(){return Fs.DefMDefUp}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.BasicStats(t,d.DEF).RegisterMultiplier(i),this.data.stats.BasicStats(t,d.MDEF).RegisterMultiplier(i);let r=new u(n.Buff,s.Add,()=>this.PhysicalNullifiedValue(),()=>this.IsActiveBuff(t));this.data.stats.ElementInvalid(t,F.Physical).RegisterMultiplier(r);let h=new u(n.Buff,s.Add,()=>this.MagicalNullifiedValue(),()=>this.IsActiveBuff(t));this.data.stats.ElementInvalid(t,F.Fire).RegisterMultiplier(h),this.data.stats.ElementInvalid(t,F.Ice).RegisterMultiplier(h),this.data.stats.ElementInvalid(t,F.Thunder).RegisterMultiplier(h),this.data.stats.ElementInvalid(t,F.Light).RegisterMultiplier(h),this.data.stats.ElementInvalid(t,F.Dark).RegisterMultiplier(h)}}class EP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.GlobalStats(this,20,ke.LeafGain,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,30,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.GlobalStats(this,40,ke.LeafGain,s.Mul,.4)),this.passiveEffectLists.push(a.Register(this,50,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.GlobalStats(this,60,ke.LeafGain,s.Mul,.6)),this.passiveEffectLists.push(a.Stats(this,70,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.GlobalStats(this,80,ke.LeafGain,s.Mul,.8)),this.passiveEffectLists.push(a.Stats(this,90,v.SkillProficiencyGain,s.Add,.8)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.GlobalStats(this,110,ke.LeafGain,s.Mul,2)),this.passiveEffectLists.push(a.Stats(this,120,v.SkillProficiencyGain,s.Add,1)),this.passiveEffectLists.push(a.GlobalStats(this,130,ke.LeafGain,s.Mul,4)),this.passiveEffectLists.push(a.Stats(this,140,v.SkillProficiencyGain,s.Add,2)),this.passiveEffectLists.push(a.Register(this,150,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.GlobalStats(this,160,ke.LeafGain,s.Mul,8)),this.passiveEffectLists.push(a.Stats(this,170,v.SkillProficiencyGain,s.Add,3)),this.passiveEffectLists.push(a.GlobalStats(this,180,ke.LeafGain,s.Mul,16)),this.passiveEffectLists.push(a.Stats(this,190,v.SkillProficiencyGain,s.Add,4)),this.passiveEffectLists.push(a.Register(this,200,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.GlobalStats(this,210,ke.LeafGain,s.Mul,32)),this.passiveEffectLists.push(a.Stats(this,220,v.SkillProficiencyGain,s.Add,5)),this.passiveEffectLists.push(a.GlobalStats(this,230,ke.LeafGain,s.Mul,64)),this.passiveEffectLists.push(a.Stats(this,240,v.SkillProficiencyGain,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,275,ke.LeafGain,s.Mul,1e3)),this.passiveEffectLists.push(a.BasicStats(this,300,d.HP,s.After,500)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.GlobalStats(this,350,ke.LeafGain,s.Mul,1e6)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,400,d.HP,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,450,v.SkillProficiencyGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,500,d.HP,s.After,2e3)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,550,ke.LeafGain,s.Mul,1e12)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,600,d.HP,s.After,3e3)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDDamageMultiplier,.75,s.Mul)),this.passiveEffectLists.push(a.Stats(this,650,v.SkillProficiencyGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,700,d.HP,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,750,ke.LeafGain,s.Mul,1e20)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,800,d.HP,s.After,12500)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDDamageMultiplier,2.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,850,v.SkillProficiencyGain,s.Mul,10)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.SDDamageCutMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDDamageMultiplier,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,975,ke.LeafGain,s.Mul,1e30))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?at.Poison:at.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class vP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,30,d.HP,s.Add,100)),this.passiveEffectLists.push(a.Stats(this,40,v.MagCritChance,s.Add,.025)),this.passiveEffectLists.push(a.Register(this,50,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.Stats(this,60,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.Stats(this,70,v.MagCritChance,s.Add,.025)),this.passiveEffectLists.push(a.BasicStats(this,80,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.Register(this,100,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.Stats(this,110,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.Stats(this,120,v.MagCritChance,s.Add,.025)),this.passiveEffectLists.push(a.Stats(this,130,v.CriticalDamage,s.Add,.25)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MP,s.Add,150)),this.passiveEffectLists.push(a.Register(this,150,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.Stats(this,160,v.ExpGain,s.Add,.75)),this.passiveEffectLists.push(a.Stats(this,170,v.PhysCritChance,s.Add,.075)),this.passiveEffectLists.push(a.BasicStats(this,180,d.HP,s.Add,300)),this.passiveEffectLists.push(a.Stats(this,190,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.Register(this,200,()=>M.AngelSkillsString(0),h=>this.extraHitCount.RegisterMultiplier(new u(n.SkillPassive,s.Add,()=>1,h)))),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,250,v.ExpGain,s.Add,1.25)),this.passiveEffectLists.push(a.BasicStats(this,275,d.SPD,s.After,10)),this.passiveEffectLists.push(a.BasicStats(this,300,d.SPD,s.After,25)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.SPD,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,400,d.SPD,s.After,70)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MP,s.After,300)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.CriticalDamage,s.After,.3)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,550,d.SPD,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.Stats(this,600,v.CriticalDamage,s.After,.5)),this.passiveEffectLists.push(a.Stats(this,625,v.ExpGain,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,650,d.SPD,s.After,1e3)),this.passiveEffectLists.push(a.Stats(this,675,v.MagCritChance,s.After,.1)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MP,s.After,1e3)),this.passiveEffectLists.push(a.Stats(this,725,v.ExpGain,s.Mul,2)),this.passiveEffectLists.push(a.BasicStats(this,750,d.SPD,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.Stats(this,800,v.CriticalDamage,s.After,1)),this.passiveEffectLists.push(a.BasicStats(this,825,d.SPD,s.After,1e4)),this.passiveEffectLists.push(a.Stats(this,850,v.MagCritChance,s.After,.4)),this.passiveEffectLists.push(a.Stats(this,875,v.PhysCritChance,s.After,.5)),this.passiveEffectLists.push(a.BasicStats(this,900,d.SPD,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,950,d.MP,s.After,5e4))}get element(){return F.Light}}class wP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,15,d.MP,s.Add,150)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Register(this,25,()=>M.AngelSkillsString(9)+f.meter(50))),this.passiveEffectLists.push(a.SkillPassive(this,30,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,60,()=>M.AngelSkillsString(9)+f.meter(50))),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.Stats(this,90,v.CriticalDamage,s.Add,.5)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,160,()=>M.AngelSkillsString(9)+f.meter(100))),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.125)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,325,J.LightDamage,1)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.LightDamage,2)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.LightDamage,3)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,525,J.LightDamage,4)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,575,J.LightDamage,5)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.LightDamage,10)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.LightDamage,15)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.LightDamage,20)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.LightDamage,50)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.LightDamage,100)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,875,J.LightDamage,200)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.LightDamage,300)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Light}get debuff(){return at.Knockback}}class kP extends pa{constructor(i){super(i);o(this,"heroKind",R.Angel);this.skills[0]=new EP(this.data,R.Angel,0),this.skills[1]=new vP(this.data,R.Angel,1),this.skills[2]=new dP(this.data,R.Angel,2),this.skills[3]=new fP(this.data,R.Angel,3),this.skills[4]=new mP(this.data,R.Angel,4),this.skills[5]=new SP(this.data,R.Angel,5),this.skills[6]=new MP(this.data,R.Angel,6),this.skills[7]=new pP(this.data,R.Angel,7),this.skills[8]=new wP(this.data,R.Angel,8),this.skills[9]=new gP(this.data,R.Angel,9)}}class AP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,50)),this.passiveEffectLists.push(a.GlobalStats(this,20,ke.StoneGain,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,30,v.SkillProficiencyGain,s.Add,.2)),this.passiveEffectLists.push(a.GlobalStats(this,40,ke.StoneGain,s.Mul,.4)),this.passiveEffectLists.push(a.Stats(this,50,v.SkillProficiencyGain,s.Add,.4)),this.passiveEffectLists.push(a.GlobalStats(this,60,ke.StoneGain,s.Mul,.6)),this.passiveEffectLists.push(a.Stats(this,70,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.GlobalStats(this,80,ke.StoneGain,s.Mul,.8)),this.passiveEffectLists.push(a.Stats(this,90,v.SkillProficiencyGain,s.Add,.8)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,110,ke.StoneGain,s.Mul,2)),this.passiveEffectLists.push(a.Stats(this,120,v.SkillProficiencyGain,s.Add,1)),this.passiveEffectLists.push(a.GlobalStats(this,130,ke.StoneGain,s.Mul,4)),this.passiveEffectLists.push(a.Stats(this,140,v.SkillProficiencyGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,160,ke.StoneGain,s.Mul,8)),this.passiveEffectLists.push(a.Stats(this,170,v.SkillProficiencyGain,s.Add,3)),this.passiveEffectLists.push(a.GlobalStats(this,180,ke.StoneGain,s.Mul,16)),this.passiveEffectLists.push(a.Stats(this,190,v.SkillProficiencyGain,s.Add,4)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,210,ke.StoneGain,s.Mul,32)),this.passiveEffectLists.push(a.Stats(this,220,v.SkillProficiencyGain,s.Add,5)),this.passiveEffectLists.push(a.GlobalStats(this,230,ke.StoneGain,s.Mul,64)),this.passiveEffectLists.push(a.Stats(this,240,v.SkillProficiencyGain,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,275,ke.StoneGain,s.Mul,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.GlobalStats(this,350,ke.StoneGain,s.Mul,1e6)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.PhysicalDamage,1)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.PhysicalDamage,2)),this.passiveEffectLists.push(a.Stats(this,450,v.SkillProficiencyGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.PhysicalDamage,3)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,525,J.PhysicalDamage,4)),this.passiveEffectLists.push(a.GlobalStats(this,550,ke.StoneGain,s.Mul,1e12)),this.passiveEffectLists.push(a.SkillBuff(this,575,J.PhysicalDamage,5)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.PhysicalDamage,10)),this.passiveEffectLists.push(a.Stats(this,650,v.SkillProficiencyGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.PhysicalDamage,15)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.PhysicalDamage,20)),this.passiveEffectLists.push(a.GlobalStats(this,750,ke.StoneGain,s.Mul,1e20)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.PhysicalDamage,50)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.PhysicalDamage,100)),this.passiveEffectLists.push(a.Stats(this,850,v.SkillProficiencyGain,s.Mul,10)),this.passiveEffectLists.push(a.SkillBuff(this,875,J.PhysicalDamage,200)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.PhysicalDamage,300)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.5,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,975,ke.StoneGain,s.Mul,1e30)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?at.Poison:at.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?this.data.skill.baseAttackPoisonChance[this.heroKind].Value():0}Range(){return this.Range()}}class RP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,3)),this.passiveEffectLists.push(a.BasicStats(this,20,d.HP,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,40,d.HP,s.Add,150)),this.passiveEffectLists.push(a.Stats(this,50,v.PhysCritChance,s.Add,.01)),this.passiveEffectLists.push(a.BasicStats(this,60,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.Stats(this,70,v.PhysCritChance,s.Add,.02)),this.passiveEffectLists.push(a.BasicStats(this,80,d.ATK,s.Add,15)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MP,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,100,v.PhysCritChance,s.Add,.03)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,140,d.ATK,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.025)),this.passiveEffectLists.push(a.Stats(this,180,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,200,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.ATK,s.After,5)),this.passiveEffectLists.push(a.BasicStats(this,300,d.ATK,s.After,15)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.ATK,s.After,30)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,400,d.ATK,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MP,s.After,200)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDDamageMultiplier,.75,s.Mul)),this.passiveEffectLists.push(a.Stats(this,500,v.PhysCritChance,s.After,.05)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,550,d.ATK,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,600,v.PhysCritChance,s.After,.15)),this.passiveEffectLists.push(a.BasicStats(this,650,d.ATK,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDDamageMultiplier,2.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MP,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDDamageMultiplier,5,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,750,d.ATK,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,800,v.PhysCritChance,s.After,.3)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDDamageMultiplier,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,900,d.ATK,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDDamageMultiplier,20,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class CP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,15,v.PhysCritChance,s.Add,.025)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,25,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,30,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Add,15)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.PhysicalDamage,.05,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,70,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.SkillPassive(this,75,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,80,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.PhysicalDamage,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,140,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,180,d.SPD,s.Add,100)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.PhysicalDamage,.15,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,250,d.SPD,s.Add,300)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,425,v.MoveSpeed,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,475,d.SPD,s.After,2e3)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.PhysicalDamage,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThisSkillHitCount,2,s.Add)),this.passiveEffectLists.push(a.Stats(this,575,v.PhysCritChance,s.After,.2)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillHitCount,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.PhysicalDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillHitCount,3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.PhysicalDamage,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillHitCount,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.PhysicalDamage,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillHitCount,5,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class LP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,40,d.SPD,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,50,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,60,d.SPD,s.Add,30)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,100,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,140,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.075)),this.passiveEffectLists.push(a.BasicStats(this,250,d.SPD,s.Add,100)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.GuildExp,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,300,d.DEF,s.After,15)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.ATK,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,400,d.SPD,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.HP,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.PhysCritChance,s.After,.05)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,550,d.DEF,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDChallengeBossDamageMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,650,d.ATK,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,700,d.HP,s.After,1e4)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDChallengeBossDamageMultiplier,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,750,d.DEF,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.SDChallengeBossDamageMultiplier,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.GuildExp,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,825,v.CriticalDamage,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDChallengeBossDamageMultiplier,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.PhysicalDamage,.5,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,900,d.DEF,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SDChallengeBossDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class PP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.Register(this,50,()=>M.WarriorSkillsString(1))),this.passiveEffectLists.push(a.BasicStats(this,60,d.ATK,s.Add,40)),this.passiveEffectLists.push(a.Stats(this,80,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.PhysicalDamage,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,140,d.ATK,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.Stats(this,180,v.ExpGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.ATK,s.After,50)),this.passiveEffectLists.push(a.BasicStats(this,300,d.SPD,s.After,75)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.ATK,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.Stats(this,400,v.PhysCritChance,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,450,J.CriticalDamage,1)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Register(this,500,()=>M.WarriorSkillsString(1))),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDChallengeBossDamageMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,550,v.PhysCritChance,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.PhysicalDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,600,v.ArmoredFury,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,650,v.CriticalDamage,s.Mul,.25)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.CriticalDamage,2)),this.passiveEffectLists.push(a.BasicStats(this,700,d.ATK,s.After,2500)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,750,d.SPD,s.After,5e3)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.CriticalDamage,4)),this.passiveEffectLists.push(a.Stats(this,800,v.PhysCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.CriticalDamage,8)),this.passiveEffectLists.push(a.Stats(this,850,v.ArmoredFury,s.Mul,.8)),this.passiveEffectLists.push(a.SkillBuff(this,875,J.CriticalDamage,16)),this.passiveEffectLists.push(a.Stats(this,900,v.CriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,950,d.ATK,s.After,3e4)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get debuff(){return at.AtkDown}ConsumeMp(){return this.level.value>=500?0:this.level.value>=50?this.ConsumeMp()*.5:this.ConsumeMp()}}class DP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,20,v.MoveSpeed,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.PhysicalDamage,.05,s.Add)),this.passiveEffectLists.push(a.Register(this,50,()=>M.WarriorSkillsString(2)+f.meter(100))),this.passiveEffectLists.push(a.SkillPassive(this,60,p.PhysicalDamage,.1,s.Add)),this.passiveEffectLists.push(a.Stats(this,70,v.MoveSpeed,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,90,d.ATK,s.Add,75)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,125,d.MP,s.Add,750)),this.passiveEffectLists.push(a.Register(this,150,()=>M.WarriorSkillsString(2)+f.meter(150))),this.passiveEffectLists.push(a.BasicStats(this,175,d.ATK,s.Mul,.75)),this.passiveEffectLists.push(a.Register(this,200,()=>M.WarriorSkillsString(4))),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.PhysicalDamage,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,300,d.ATK,s.Mul,4)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Stats(this,350,v.ArmoredFury,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.Stats(this,400,v.CriticalDamage,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,450,d.SPD,s.After,500)),this.passiveEffectLists.push(a.Register(this,500,()=>M.WarriorSkillsString(2)+f.meter(150))),this.passiveEffectLists.push(a.Stats(this,550,v.ArmoredFury,s.Mul,.3)),this.passiveEffectLists.push(a.Stats(this,600,v.CriticalDamage,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.SDDamageMultiplier,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.SDDamageMultiplier,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.SDDamageMultiplier,8,s.Mul)),this.passiveEffectLists.push(a.Register(this,800,()=>M.WarriorSkillsString(2)+f.meter(150))),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDDamageMultiplier,16,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.SDDamageMultiplier,32,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,950,d.SPD,s.After,1e4)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}EffectRange(){return this.level.value>=800?this.EffectRange()+550*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=500?this.EffectRange()+400*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=150?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=50?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}ConsumeMp(){return this.level.value>=200?0:this.ConsumeMp()}}class yP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,100)),this.passiveEffectLists.push(a.Stats(this,20,v.PhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.Register(this,30,()=>M.WarriorSkillsString(2)+f.meter(70))),this.passiveEffectLists.push(a.BasicStats(this,40,d.HP,s.Add,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,60,v.PhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.Stats(this,70,v.CriticalDamage,s.Add,.1)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.PhysicalDamage,.5,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.Register(this,100,()=>M.WarriorSkillsString(5)+f.meter(30))),this.passiveEffectLists.push(a.Stats(this,110,v.CriticalDamage,s.Add,.2)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.Register(this,150,()=>M.WarriorSkillsString(2)+f.meter(100))),this.passiveEffectLists.push(a.SkillPassive(this,160,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,190,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ThisSkillDamage,256,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ThisSkillDamage,512,s.Add)),this.passiveEffectLists.push(a.Stats(this,300,v.PhysCritChance,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,1024,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.SDDamageMul,1)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.Stats(this,425,v.ArmoredFury,s.Mul,.35)),this.passiveEffectLists.push(a.SkillBuff(this,450,J.SDDamageMul,2)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,2048,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SDDamageMultiplier,15,s.Mul)),this.passiveEffectLists.push(a.Stats(this,525,v.CriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThisSkillDamage,4096,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,600,J.SDDamageMul,4)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillDamage,8192,s.Add)),this.passiveEffectLists.push(a.Stats(this,650,v.CriticalDamage,s.Mul,2)),this.passiveEffectLists.push(a.Stats(this,675,v.ArmoredFury,s.Mul,.75)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillDamage,16384,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillDamage,32768,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,750,J.SDDamageMul,8)),this.passiveEffectLists.push(a.Stats(this,775,v.ArmoredFury,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,65536,s.Add)),this.passiveEffectLists.push(a.Stats(this,825,v.PhysCritChance,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillDamage,131072,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,262144,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillDamage,524288,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,950,J.SDDamageMul,16))}get debuff(){return at.MatkDown}Range(){return this.level.value>=100?this.Range()+30*this.data.skill.skillRangeMultiplier[this.heroKind].Value():this.Range()}EffectRange(){return this.level.value>=150?this.EffectRange()+170*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=30?this.EffectRange()+70*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}}class bP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,300)),this.passiveEffectLists.push(a.BasicStats(this,15,d.HP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Add,200)),this.passiveEffectLists.push(a.SkillPassive(this,25,p.PhysicalDamage,.5,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,35,d.ATK,s.Add,400)),this.passiveEffectLists.push(a.Stats(this,40,v.PhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,45,d.SPD,s.Add,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,60,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,80,v.PhysCritChance,s.Add,.1)),this.passiveEffectLists.push(a.BasicStats(this,90,d.HP,s.Add,2e3)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,125,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,175,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.SDArmoredFury,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDArmoredFury,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDArmoredFury,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDArmoredFury,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDArmoredFury,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.SDArmoredFury,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class TP extends xe{constructor(i,r,h){super(i,r,h);o(this,"dushMeter");this.passiveEffectLists.push(a.BasicStats(this,5,d.DEF,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MDEF,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,30,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.Register(this,50,()=>M.WarriorSkillsString(8))),this.passiveEffectLists.push(a.BasicStats(this,60,d.HP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MP,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,80,d.DEF,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MDEF,s.Add,100)),this.passiveEffectLists.push(a.Register(this,100,()=>M.WarriorSkillsString(8))),this.passiveEffectLists.push(a.BasicStats(this,120,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,160,d.DEF,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MDEF,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,200,d.HP,s.Add,1500)),this.passiveEffectLists.push(a.BasicStats(this,225,d.HP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.HP,s.Mul,.4)),this.passiveEffectLists.push(a.BasicStats(this,300,d.MP,s.Mul,.4)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),c=>this.unlockFullCast.RegisterCondition(c))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,400,d.DEF,s.Mul,1.5)),this.passiveEffectLists.push(a.Stats(this,425,v.ArmoredFury,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MDEF,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Register(this,500,()=>M.WarriorSkillsString(8))),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDDamageCutMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,550,v.ArmoredFury,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,575,d.HP,s.After,2500)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,625,v.ArmoredFury,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.SDDamageCutMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,700,d.DEF,s.After,2e3)),this.passiveEffectLists.push(a.Register(this,725,()=>M.WarriorSkillsString(8))),this.passiveEffectLists.push(a.BasicStats(this,750,d.MDEF,s.After,2e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,800,v.ArmoredFury,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,825,d.HP,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDDamageCutMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}DamageBonusPermeter(){let i=0;return this.level.value>=50&&(i+=.5),this.level.value>=100&&(i+=.5),this.level.value>=500&&(i+=.5),this.level.value>=725&&(i+=.5),i}Damage(){return this.Damage()*(1+this.DamageBonusPermeter()*this.dushMeter)}}class GP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.HP,s.Add,250)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,15,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.Stats(this,20,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,25,d.MDEF,s.Add,40)),this.passiveEffectLists.push(a.BasicStats(this,30,d.DEF,s.Add,40)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,50,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,70,d.HP,s.Add,2500)),this.passiveEffectLists.push(a.GlobalStats(this,80,ke.GoldGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MDEF,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,100,d.DEF,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MDEF,s.Mul,.3)),this.passiveEffectLists.push(a.BasicStats(this,140,d.DEF,s.Mul,.3)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MDEF,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,180,d.DEF,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,200,d.HP,s.Mul,.3)),this.passiveEffectLists.push(a.BasicStats(this,225,d.HP,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,250,d.HP,s.Mul,1)),this.passiveEffectLists.push(a.Stats(this,275,v.ExpGain,s.Mul,1)),this.passiveEffectLists.push(a.GlobalStats(this,300,ke.GoldGain,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.DEF,s.After,200)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDDamageCutMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,400,d.MDEF,s.After,250)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.ArmoredFury,1)),this.passiveEffectLists.push(a.BasicStats(this,450,d.DEF,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,475,d.HP,s.After,500)),this.passiveEffectLists.push(a.BasicStats(this,500,d.MDEF,s.Mul,1)),this.passiveEffectLists.push(a.SkillBuff(this,525,J.ArmoredFury,2)),this.passiveEffectLists.push(a.Stats(this,550,v.ExpGain,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,600,ke.GoldGain,s.Mul,2)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.ArmoredFury,3)),this.passiveEffectLists.push(a.BasicStats(this,650,d.DEF,s.After,500)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MDEF,s.After,1e3)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.ArmoredFury,4)),this.passiveEffectLists.push(a.BasicStats(this,750,d.DEF,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,800,d.MDEF,s.Mul,2)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.ArmoredFury,5)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDDamageCutMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.ArmoredFury,10)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get debuff(){return at.Knockback}}class BP extends pa{constructor(i){super(i);o(this,"heroKind",R.Warrior);this.skills[0]=new AP(this.data,R.Warrior,0),this.skills[1]=new RP(this.data,R.Warrior,1),this.skills[2]=new LP(this.data,R.Warrior,2),this.skills[3]=new CP(this.data,R.Warrior,3),this.skills[4]=new PP(this.data,R.Warrior,4),this.skills[5]=new DP(this.data,R.Warrior,5),this.skills[6]=new yP(this.data,R.Warrior,6),this.skills[7]=new bP(this.data,R.Warrior,7),this.skills[8]=new TP(this.data,R.Warrior,8),this.skills[9]=new GP(this.data,R.Warrior,9)}}class xP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.DEF,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MDEF,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Add,150)),this.passiveEffectLists.push(a.Register(this,50,()=>M.WizardSkillsString(0)+f.meter(30))),this.passiveEffectLists.push(a.BasicStats(this,60,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.Register(this,140,()=>M.WizardSkillsString(0)+f.meter(50))),this.passiveEffectLists.push(a.Stats(this,160,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.Stats(this,250,v.ExpGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.GuildExp,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,300,d.MDEF,s.After,15)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MATK,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,400,d.SPD,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.HP,s.After,300)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.MagCritChance,s.After,.05)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,550,d.MDEF,s.After,300)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,650,d.MATK,s.Mul,4)),this.passiveEffectLists.push(a.Stats(this,675,v.CriticalDamage,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,700,d.HP,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,750,d.MDEF,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.GuildExp,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDChallengeBossDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,900,d.MDEF,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SDChallengeBossDamageMultiplier,.75,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Fire}}class FP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,3)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,30,d.HP,s.Add,100)),this.passiveEffectLists.push(a.Stats(this,40,v.MagCritChance,s.Add,.01)),this.passiveEffectLists.push(a.BasicStats(this,50,d.DEF,s.Add,15)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MDEF,s.Add,15)),this.passiveEffectLists.push(a.Stats(this,70,v.MagCritChance,s.Add,.02)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,90,d.HP,s.Add,200)),this.passiveEffectLists.push(a.Stats(this,100,v.MagCritChance,s.Add,.03)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.Stats(this,180,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.After,5)),this.passiveEffectLists.push(a.BasicStats(this,300,d.MATK,s.After,25)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MATK,s.After,50)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.FireDamage,1)),this.passiveEffectLists.push(a.BasicStats(this,400,d.MATK,s.After,100)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.FireDamage,2)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MP,s.After,200)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.FireDamage,3)),this.passiveEffectLists.push(a.Stats(this,500,v.MagCritChance,s.After,.05)),this.passiveEffectLists.push(a.SkillBuff(this,525,J.FireDamage,4)),this.passiveEffectLists.push(a.BasicStats(this,550,d.MATK,s.After,300)),this.passiveEffectLists.push(a.SkillBuff(this,575,J.FireDamage,5)),this.passiveEffectLists.push(a.Stats(this,600,v.MagCritChance,s.After,.15)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.FireDamage,10)),this.passiveEffectLists.push(a.BasicStats(this,650,d.MATK,s.After,500)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.FireDamage,15)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MP,s.After,1e3)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.FireDamage,20)),this.passiveEffectLists.push(a.BasicStats(this,750,d.MATK,s.After,5e3)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.FireDamage,50)),this.passiveEffectLists.push(a.Stats(this,800,v.MagCritChance,s.After,.3)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.FireDamage,100)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,875,J.FireDamage,200)),this.passiveEffectLists.push(a.BasicStats(this,900,d.MATK,s.After,15e3)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.FireDamage,300)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SDDamageMultiplier,.75,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Fire}}class _P extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MP,s.Add,25)),this.passiveEffectLists.push(a.GlobalStats(this,20,ke.CrystalGain,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,30,v.SkillProficiencyGain,s.Add,.2)),this.passiveEffectLists.push(a.GlobalStats(this,40,ke.CrystalGain,s.Mul,.4)),this.passiveEffectLists.push(a.Stats(this,50,v.SkillProficiencyGain,s.Add,.4)),this.passiveEffectLists.push(a.GlobalStats(this,60,ke.CrystalGain,s.Mul,.6)),this.passiveEffectLists.push(a.Stats(this,70,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.GlobalStats(this,80,ke.CrystalGain,s.Mul,.8)),this.passiveEffectLists.push(a.Stats(this,90,v.SkillProficiencyGain,s.Add,.8)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,110,ke.CrystalGain,s.Mul,2)),this.passiveEffectLists.push(a.Stats(this,120,v.SkillProficiencyGain,s.Add,1)),this.passiveEffectLists.push(a.GlobalStats(this,130,ke.CrystalGain,s.Mul,4)),this.passiveEffectLists.push(a.Stats(this,140,v.SkillProficiencyGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,160,ke.CrystalGain,s.Mul,8)),this.passiveEffectLists.push(a.Stats(this,170,v.SkillProficiencyGain,s.Add,3)),this.passiveEffectLists.push(a.GlobalStats(this,180,ke.CrystalGain,s.Mul,16)),this.passiveEffectLists.push(a.Stats(this,190,v.SkillProficiencyGain,s.Add,4)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,210,ke.CrystalGain,s.Mul,32)),this.passiveEffectLists.push(a.Stats(this,220,v.SkillProficiencyGain,s.Add,5)),this.passiveEffectLists.push(a.GlobalStats(this,230,ke.CrystalGain,s.Mul,64)),this.passiveEffectLists.push(a.Stats(this,240,v.SkillProficiencyGain,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.GlobalStats(this,275,ke.CrystalGain,s.Mul,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.GlobalStats(this,350,ke.CrystalGain,s.Mul,1e6)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,425,d.MATK,s.After,100)),this.passiveEffectLists.push(a.Stats(this,450,v.SkillProficiencyGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,550,ke.CrystalGain,s.Mul,1e12)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.SDDamageMultiplier,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,650,v.SkillProficiencyGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDDamageMultiplier,2.5,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,750,ke.CrystalGain,s.Mul,1e20)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDDamageMultiplier,5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,850,v.SkillProficiencyGain,s.Mul,10)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.SDDamageMultiplier,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SDDamageMultiplier,20,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,975,ke.CrystalGain,s.Mul,1e30)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Fire}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?at.Poison:at.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class IP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.SkillPassive(this,15,p.FireDamage,.05,s.Add)),this.passiveEffectLists.push(a.Stats(this,20,v.MagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,25,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.SkillPassive(this,30,p.FireDamage,.05,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MATK,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MP,s.Add,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.FireDamage,.15,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Mul,.75)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.FireDamage,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,1.5)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.After,250)),this.passiveEffectLists.push(a.BasicStats(this,300,d.MATK,s.Mul,4)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Stats(this,350,v.WardedFury,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.FireDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.CriticalDamage,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.SPD,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.FireDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,550,v.WardedFury,s.Mul,.3)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.FireDamage,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,600,v.CriticalDamage,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.FireDamage,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,950,d.SPD,s.After,5e4)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Fire}}class VP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.HP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,10,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,15,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,20,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,25,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,60,d.HP,s.Add,300)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,100,d.DEF,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MDEF,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,140,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,160,d.HP,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,200,d.HP,s.Mul,.3)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.3)),this.passiveEffectLists.push(a.BasicStats(this,250,d.HP,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.After,50)),this.passiveEffectLists.push(a.BasicStats(this,300,d.SPD,s.After,75)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MATK,s.Mul,3)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.IceDamage,1)),this.passiveEffectLists.push(a.Stats(this,400,v.MagCritChance,s.Mul,.1)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.IceDamage,2)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MATK,s.After,150)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.IceDamage,3)),this.passiveEffectLists.push(a.Register(this,500,()=>M.WarriorSkillsString(7))),this.passiveEffectLists.push(a.SkillBuff(this,525,J.IceDamage,4)),this.passiveEffectLists.push(a.Stats(this,550,v.MagCritChance,s.Mul,.2)),this.passiveEffectLists.push(a.SkillBuff(this,575,J.IceDamage,5)),this.passiveEffectLists.push(a.Stats(this,600,v.WardedFury,s.Mul,.2)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.IceDamage,10)),this.passiveEffectLists.push(a.Stats(this,650,v.CriticalDamage,s.Mul,.25)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.IceDamage,15)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MATK,s.After,750)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.IceDamage,20)),this.passiveEffectLists.push(a.BasicStats(this,750,d.SPD,s.After,1e3)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.IceDamage,50)),this.passiveEffectLists.push(a.Stats(this,800,v.MagCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.IceDamage,100)),this.passiveEffectLists.push(a.Stats(this,850,v.WardedFury,s.Mul,.8)),this.passiveEffectLists.push(a.SkillBuff(this,875,J.IceDamage,200)),this.passiveEffectLists.push(a.Stats(this,900,v.CriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.IceDamage,300)),this.passiveEffectLists.push(a.BasicStats(this,950,d.MATK,s.After,5e3)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Ice}get debuff(){return at.SpdDown}}class HP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,15,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.Register(this,25,()=>M.WizardSkillsString(2)+f.meter(70))),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,50,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,60,d.HP,s.Add,500)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.IceDamage,.05,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.Register(this,100,()=>M.WizardSkillsString(2)+f.meter(150))),this.passiveEffectLists.push(a.BasicStats(this,120,d.MDEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,140,d.DEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Mul,.075)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.IceDamage,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.3)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MP,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.After,60)),this.passiveEffectLists.push(a.BasicStats(this,300,d.MP,s.After,100)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.GuildExp,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Register(this,400,()=>M.WizardSkillsString(2)+f.meter(150))),this.passiveEffectLists.push(a.SkillPassive(this,425,p.SDDamageCutMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,450,v.MagCritChance,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.ExpGain,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDDamageCutMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,550,ke.GoldGain,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.IceDamage,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,600,d.MDEF,s.After,1e3)),this.passiveEffectLists.push(a.Stats(this,625,v.CriticalDamage,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.GuildExp,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.IceDamage,.15,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.ExpGain,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.IceDamage,.25,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,750,ke.GoldGain,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,800,d.MATK,s.After,12500)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.IceDamage,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDDamageCutMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,875,v.CriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.SDWardedFury,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDChallengeBossDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Ice}get debuff(){return at.Stop}}class qP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,15,d.HP,s.Add,150)),this.passiveEffectLists.push(a.Register(this,20,()=>M.WizardSkillsString(2)+f.meter(50))),this.passiveEffectLists.push(a.Stats(this,30,v.MagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.IceDamage,.15,s.Add)),this.passiveEffectLists.push(a.Register(this,50,()=>M.WizardSkillsString(2)+f.meter(100))),this.passiveEffectLists.push(a.Stats(this,60,v.MagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,90,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.Register(this,100,()=>M.WizardSkillsString(2)+f.meter(100))),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,140,d.HP,s.Add,2e3)),this.passiveEffectLists.push(a.Stats(this,160,v.MagCritChance,s.Add,.1)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.Register(this,200,()=>M.WizardSkillsString(3))),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Add,3e3)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,3)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.Mul,5)),this.passiveEffectLists.push(a.Stats(this,300,v.MagCritChance,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MATK,s.After,750)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,400,v.WardedFury,s.Mul,.35)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.Stats(this,450,v.CriticalDamage,s.Mul,.45)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SDDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,550,d.MATK,s.After,1500)),this.passiveEffectLists.push(a.Stats(this,575,v.MagCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillCastTime,.25,s.Add))}ConsumeMp(){return this.level.value>=200?this.ConsumeMp()*.5:this.ConsumeMp()}EffectRange(){return this.level.value>=100?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=50?this.EffectRange()+150*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=20?this.EffectRange()+50*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}get element(){return F.Ice}get debuff(){return at.SpdDown}}class NP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.SPD,s.Add,10)),this.passiveEffectLists.push(a.Stats(this,30,v.MagCritChance,s.Add,.025)),this.passiveEffectLists.push(a.BasicStats(this,40,d.DEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MDEF,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,60,d.SPD,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,80,d.SPD,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.Register(this,100,()=>M.WizardSkillsString(4))),this.passiveEffectLists.push(a.BasicStats(this,120,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,160,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.HP,s.Mul,.4)),this.passiveEffectLists.push(a.Register(this,300,()=>M.WizardSkillsString(4))),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MP,s.Mul,.4)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.ThunderDamage,1)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.ThunderDamage,2)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MDEF,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.ThunderDamage,3)),this.passiveEffectLists.push(a.Register(this,500,()=>M.WizardSkillsString(4))),this.passiveEffectLists.push(a.SkillBuff(this,525,J.ThunderDamage,4)),this.passiveEffectLists.push(a.BasicStats(this,550,d.HP,s.After,300)),this.passiveEffectLists.push(a.SkillBuff(this,575,J.ThunderDamage,5)),this.passiveEffectLists.push(a.BasicStats(this,600,d.MP,s.After,400)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.ThunderDamage,10)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.SDDamageCutMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.ThunderDamage,15)),this.passiveEffectLists.push(a.Register(this,700,()=>M.WizardSkillsString(4))),this.passiveEffectLists.push(a.SkillBuff(this,725,J.ThunderDamage,20)),this.passiveEffectLists.push(a.BasicStats(this,750,d.MDEF,s.After,1e3)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.ThunderDamage,50)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.SDDamageCutMultiplier,.2,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.ThunderDamage,100)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,875,J.ThunderDamage,200)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.ThunderDamage,300)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Thunder}get debuff(){return at.Electric}}class WP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,20)),this.passiveEffectLists.push(a.Stats(this,15,v.MoveSpeed,s.Mul,.05)),this.passiveEffectLists.push(a.Stats(this,25,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,30,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,40,v.MoveSpeed,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.GlobalStats(this,60,ke.GoldGain,s.Add,.5)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThunderDamage,.05,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThunderDamage,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillCastTime,.5,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Mul,.075)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MATK,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,225,d.SPD,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,250,d.SPD,s.Add,250)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.After,50)),this.passiveEffectLists.push(a.BasicStats(this,300,d.SPD,s.After,100)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MATK,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThunderDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.MagCritChance,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,425,d.SPD,s.After,300)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MATK,s.After,300)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThunderDamage,.15,s.Mul)),this.passiveEffectLists.push(a.Register(this,500,()=>M.WizardSkillsString(4))),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDChallengeBossDamageMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,550,v.MagCritChance,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThunderDamage,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,600,v.WardedFury,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDChallengeBossDamageMultiplier,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,650,v.CriticalDamage,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.SDChallengeBossDamageMultiplier,.3,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MATK,s.After,2e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDChallengeBossDamageMultiplier,.4,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,750,d.SPD,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThunderDamage,.75,s.Mul)),this.passiveEffectLists.push(a.Stats(this,800,v.MagCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.Stats(this,850,v.WardedFury,s.Mul,.8)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,900,v.CriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,950,d.MATK,s.After,2e4)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}GainMp(){return this.level.value>=500?this.GainMp()*2:this.GainMp()}get element(){return F.Thunder}get debuff(){return at.Electric}}class $P extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,15,d.MATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,20,d.SPD,s.Add,250)),this.passiveEffectLists.push(a.SkillPassive(this,25,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,30,v.MagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,120,p.ThisSkillDamage,3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.SDWardedFury,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDWardedFury,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDWardedFury,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDWardedFury,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDWardedFury,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.SDWardedFury,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Thunder}get debuff(){return at.Electric}}class UP extends pa{constructor(i){super(i);o(this,"heroKind",R.Wizard);this.skills[0]=new _P(this.data,R.Wizard,0),this.skills[1]=new FP(this.data,R.Wizard,1),this.skills[2]=new xP(this.data,R.Wizard,2),this.skills[3]=new IP(this.data,R.Wizard,3),this.skills[4]=new VP(this.data,R.Wizard,4),this.skills[5]=new HP(this.data,R.Wizard,5),this.skills[6]=new qP(this.data,R.Wizard,6),this.skills[7]=new NP(this.data,R.Wizard,7),this.skills[8]=new WP(this.data,R.Wizard,8),this.skills[9]=new $P(this.data,R.Wizard,9)}}class OP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillPassive(this,5,p.GoldCap,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,200)),this.passiveEffectLists.push(a.Stats(this,15,v.MagCritChance,s.Add,.025)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.GoldCap,.15,s.Mul)),this.passiveEffectLists.push(a.Stats(this,25,v.MagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,35,p.GoldCap,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,45,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.GoldCap,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,60,v.EquipmentDropChance,s.Add,5e-4)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.GoldCap,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,90,v.MagCritChance,s.Add,.15)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,110,d.MATK,s.Mul,1.5)),this.passiveEffectLists.push(a.Stats(this,120,v.EquipmentDropChance,s.Add,5e-4)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.GoldCap,.35,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.SlimeCoinCap,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Mul,2.5)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,180,v.EquipmentDropChance,s.Add,.001)),this.passiveEffectLists.push(a.SkillPassive(this,190,p.GoldCap,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.GoldCap,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.SlimeCoinCap,.2,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,275,J.SDWardedFury,.2)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.GoldCap,.75,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.SDWardedFury,.3)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.SlimeCoinCap,.3,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.SDWardedFury,.5)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.GoldCap,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SlimeCoinCap,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,550,J.SDWardedFury,1)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.SlimeCoinCap,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.GoldCap,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.SDWardedFury,2)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.SlimeCoinCap,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.GoldCap,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,800,J.SDWardedFury,4)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SlimeCoinCap,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.GoldCap,3,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,900,J.SDWardedFury,8)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SlimeCoinCap,2,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Dark}get debuff(){return at.Death}ThisSkillCriticalChance(){return Math.min(1,.25+1/400*this.Level())}}class zP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,50)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.StoneResearchPower,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,30,v.SkillProficiencyGain,s.Add,.2)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.StoneResearchPower,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,50,v.SkillProficiencyGain,s.Add,.4)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.StoneResearchPower,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,70,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.StoneResearchPower,.4,s.Mul)),this.passiveEffectLists.push(a.Stats(this,90,v.SkillProficiencyGain,s.Add,.8)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,110,p.StoneResearchPower,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,120,v.SkillProficiencyGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.StoneResearchPower,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,140,v.SkillProficiencyGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.StoneResearchPower,1.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,170,v.SkillProficiencyGain,s.Add,3)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.StoneResearchPower,2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,190,v.SkillProficiencyGain,s.Add,4)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,210,p.StoneResearchPower,2.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,220,v.SkillProficiencyGain,s.Add,5)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.StoneResearchPower,5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,240,v.SkillProficiencyGain,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.StoneResearchPower,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.StoneResearchPower,20,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,450,v.SkillProficiencyGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDDamageMultiplier,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.StoneResearchPower,40,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.SDDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDDamageMultiplier,2.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,650,v.SkillProficiencyGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.SDDamageMultiplier,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.StoneResearchPower,80,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDDamageMultiplier,10,s.Mul)),this.passiveEffectLists.push(a.Stats(this,850,v.SkillProficiencyGain,s.Mul,10)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDDamageMultiplier,20,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,975,p.StoneResearchPower,160,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?at.Poison:at.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class JP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,20,v.MagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MATK,s.Add,75)),this.passiveEffectLists.push(a.Register(this,50,()=>M.ThiefSkillsString(6)+f.meter(100))),this.passiveEffectLists.push(a.BasicStats(this,60,d.MATK,s.Add,125)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,80,d.HP,s.Add,1500)),this.passiveEffectLists.push(a.BasicStats(this,90,d.SPD,s.Add,200)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MP,s.Add,500)),this.passiveEffectLists.push(a.Register(this,140,()=>M.ThiefSkillsString(6)+f.meter(150))),this.passiveEffectLists.push(a.BasicStats(this,160,d.MATK,s.Mul,.75)),this.passiveEffectLists.push(a.BasicStats(this,180,d.DEF,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MDEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MATK,s.Mul,3)),this.passiveEffectLists.push(a.Register(this,300,()=>M.ThiefSkillsString(6)+f.meter(150))),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Stats(this,350,v.CriticalDamage,s.Mul,.1)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.DarkDamage,1)),this.passiveEffectLists.push(a.Stats(this,400,v.WardedFury,s.Mul,.2)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.DarkDamage,2)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MP,s.After,200)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.DarkDamage,3)),this.passiveEffectLists.push(a.BasicStats(this,500,d.SPD,s.After,500)),this.passiveEffectLists.push(a.SkillBuff(this,525,J.DarkDamage,4)),this.passiveEffectLists.push(a.Stats(this,550,v.CriticalDamage,s.Mul,.4)),this.passiveEffectLists.push(a.SkillBuff(this,575,J.DarkDamage,5)),this.passiveEffectLists.push(a.Stats(this,600,v.WardedFury,s.Mul,.3)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.DarkDamage,10)),this.passiveEffectLists.push(a.BasicStats(this,650,d.MATK,s.After,500)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.DarkDamage,15)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MP,s.After,1e3)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.DarkDamage,20)),this.passiveEffectLists.push(a.BasicStats(this,750,d.MATK,s.After,5e3)),this.passiveEffectLists.push(a.SkillBuff(this,775,J.DarkDamage,50)),this.passiveEffectLists.push(a.Stats(this,800,v.MagCritChance,s.After,.3)),this.passiveEffectLists.push(a.SkillBuff(this,825,J.DarkDamage,100)),this.passiveEffectLists.push(a.Register(this,850,()=>M.ThiefSkillsString(6)+f.meter(150))),this.passiveEffectLists.push(a.SkillBuff(this,875,J.DarkDamage,200)),this.passiveEffectLists.push(a.BasicStats(this,900,d.MATK,s.After,15e3)),this.passiveEffectLists.push(a.SkillBuff(this,925,J.DarkDamage,300)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Dark}get debuff(){return at.Knockback}EffectRange(){return this.level.value>=850?this.EffectRange()+550*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=300?this.EffectRange()+400*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=140?this.EffectRange()+250*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.level.value>=50?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}}class jP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,50,d.ATK,s.Add,40)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.EquipmentProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,70,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,.075)),this.passiveEffectLists.push(a.BasicStats(this,140,d.ATK,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.EquipmentProficiency,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.ATK,s.Mul,1.5)),this.passiveEffectLists.push(a.BasicStats(this,300,d.ATK,s.Mul,2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.ATK,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.EquipmentProficiency,.6,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,450,d.ATK,s.After,125)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,500,d.ATK,s.After,200)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,550,d.ATK,s.After,300)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,600,d.ATK,s.After,400)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.EquipmentProficiency,.8,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,650,d.ATK,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ArtifactProficiency,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,700,d.ATK,s.After,750)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,750,d.ATK,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ArtifactProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,850,d.ATK,s.After,1e4)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ArtifactProficiency,.3,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,900,d.ATK,s.After,2e4)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ArtifactProficiency,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class XP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,30)),this.passiveEffectLists.push(a.Stats(this,15,v.PhysCritChance,s.Add,.025)),this.passiveEffectLists.push(a.Register(this,25,()=>M.ThiefSkillsString(1,.05))),this.passiveEffectLists.push(a.BasicStats(this,30,d.SPD,s.Add,60)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.EssenceConversionRate,.1,s.Mul)),this.passiveEffectLists.push(a.Register(this,50,()=>M.ThiefSkillsString(1,.05))),this.passiveEffectLists.push(a.SkillPassive(this,60,p.EssenceConversionRate,.1,s.Mul)),this.passiveEffectLists.push(a.Register(this,70,()=>M.ThiefSkillsString(1,.05))),this.passiveEffectLists.push(a.SkillPassive(this,80,p.EssenceConversionRate,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,90,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.Register(this,100,()=>M.ThiefSkillsString(6)+f.meter(100))),this.passiveEffectLists.push(a.Stats(this,120,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.Register(this,140,()=>M.ThiefSkillsString(1,.1))),this.passiveEffectLists.push(a.SkillPassive(this,160,p.EssenceConversionRate,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,180,v.PhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.EssenceConversionRate,.4,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,225,d.SPD,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,250,d.SPD,s.Add,300)),this.passiveEffectLists.push(a.Stats(this,275,v.PhysCritChance,s.Mul,.05)),this.passiveEffectLists.push(a.Stats(this,300,v.MagCritChance,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Register(this,350,()=>M.ThiefSkillsString(12,.25))),this.passiveEffectLists.push(a.SkillPassive(this,375,p.EssenceConversionRate,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.PhysCritChance,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,425,d.SPD,s.After,100)),this.passiveEffectLists.push(a.Register(this,450,()=>M.ThiefSkillsString(13,.25))),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.MagCritChance,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.EssenceConversionRate,1,s.Mul)),this.passiveEffectLists.push(a.Register(this,550,()=>M.ThiefSkillsString(12,.75))),this.passiveEffectLists.push(a.BasicStats(this,575,d.SPD,s.After,500)),this.passiveEffectLists.push(a.Stats(this,600,v.PhysCritChance,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.Register(this,650,()=>M.ThiefSkillsString(13,.75))),this.passiveEffectLists.push(a.BasicStats(this,675,d.SPD,s.After,2e3)),this.passiveEffectLists.push(a.Stats(this,700,v.MagCritChance,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.EssenceConversionRate,1.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,750,()=>M.ThiefSkillsString(12,1.5))),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,800,v.PhysCritChance,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.Register(this,850,()=>M.ThiefSkillsString(13,1.5))),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.Stats(this,900,v.MagCritChance,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.EssenceConversionRate,2.5,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}PhysicalCriticalMulValue(){let t=0;return this.level.value>=350&&(t+=.25),this.level.value>=550&&(t+=.75),this.level.value>=750&&(t+=1.5),t}MagicalCriticalMulValue(){let t=0;return this.level.value>=450&&(t+=.25),this.level.value>=650&&(t+=.75),this.level.value>=850&&(t+=1.5),t}SetBuff(t){let i=new u(n.Buff,s.Add,()=>this.PhysicalCriticalValue(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.PhysCritChance).RegisterMultiplier(i);let r=new u(n.Buff,s.Mul,()=>this.PhysicalCriticalMulValue(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.PhysCritChance).RegisterMultiplier(r);let h=new u(n.Buff,s.Mul,()=>this.MagicalCriticalMulValue(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.MagCritChance).RegisterMultiplier(h)}EffectRange(){return this.level.value>=100?this.EffectRange()+100*this.data.skill.skillEffectRangeMultiplier[this.heroKind].Value():this.EffectRange()}ThisSkillCriticalChance(){return Math.min(1,.25+1/400*this.Level())}PhysicalCriticalValue(){let t=0;return this.level.value>=25&&(t+=.05),this.level.value>=50&&(t+=.05),this.level.value>=70&&(t+=.05),this.level.value>=140&&(t+=.1),t}}class QP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.HP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,10,d.MDEF,s.Add,20)),this.passiveEffectLists.push(a.Stats(this,15,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.BasicStats(this,20,d.HP,s.Add,100)),this.passiveEffectLists.push(a.Stats(this,25,v.EquipmentDropChance,s.Add,5e-4)),this.passiveEffectLists.push(a.BasicStats(this,30,d.DEF,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MDEF,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,50,d.DEF,s.Add,30)),this.passiveEffectLists.push(a.Register(this,60,()=>M.ThiefSkillsString(5)+" + 5%")),this.passiveEffectLists.push(a.BasicStats(this,70,d.HP,s.Add,300)),this.passiveEffectLists.push(a.GlobalStats(this,80,ke.GoldGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MP,s.Add,250)),this.passiveEffectLists.push(a.Register(this,100,()=>M.ThiefSkillsString(5)+" + 5%")),this.passiveEffectLists.push(a.Stats(this,125,v.EquipmentDropChance,s.Add,5e-4)),this.passiveEffectLists.push(a.Register(this,150,()=>M.ThiefSkillsString(5)+" + 10%")),this.passiveEffectLists.push(a.BasicStats(this,175,d.HP,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,200,v.EquipmentDropChance,s.Add,.001)),this.passiveEffectLists.push(a.BasicStats(this,225,d.HP,s.Mul,.3)),this.passiveEffectLists.push(a.Register(this,250,()=>M.ThiefSkillsString(5)+" + 25%")),this.passiveEffectLists.push(a.Stats(this,275,v.EquipmentDropChance,s.After,.005)),this.passiveEffectLists.push(a.SkillBuff(this,300,J.EquipmentDropChanceAfter,.005)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Stats(this,350,v.ExpGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ArtifactGainChance,.1,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,400,J.EquipmentDropChanceAfter,.01)),this.passiveEffectLists.push(a.Stats(this,425,v.ExpGain,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ArtifactGainChance,.15,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.EquipmentDropChanceAfter,.015)),this.passiveEffectLists.push(a.GlobalStats(this,500,ke.GoldGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ArtifactGainChance,.2,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,550,J.EquipmentDropChanceAfter,.03)),this.passiveEffectLists.push(a.Stats(this,575,v.ExpGain,s.Mul,2)),this.passiveEffectLists.push(a.GlobalStats(this,600,ke.GoldGain,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ArtifactGainChance,.25,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,650,J.EquipmentDropChanceAfter,.04)),this.passiveEffectLists.push(a.Stats(this,675,v.ExpGain,s.Mul,2.5)),this.passiveEffectLists.push(a.GlobalStats(this,700,ke.GoldGain,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ArtifactGainChance,.3,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,750,J.EquipmentDropChanceAfter,.05)),this.passiveEffectLists.push(a.Stats(this,775,v.ExpGain,s.Mul,3)),this.passiveEffectLists.push(a.GlobalStats(this,800,ke.GoldGain,s.Mul,2.5)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ArtifactGainChance,.5,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,850,J.EquipmentDropChanceAfter,.1)),this.passiveEffectLists.push(a.Stats(this,875,v.ExpGain,s.Mul,4)),this.passiveEffectLists.push(a.GlobalStats(this,900,ke.GoldGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ArtifactGainChance,1,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,950,J.EquipmentDropChanceAfter,.15)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Dark}PilferChance(){let t=.05;return this.lv>=60&&(t+=.05),this.lv>=100&&(t+=.05),this.lv>=150&&(t+=.1),this.lv>=250&&(t+=.25),t}}class YP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,20,d.SPD,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,40,d.SPD,s.Add,30)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MATK,s.Add,15)),this.passiveEffectLists.push(a.SkillBuff(this,70,J.EquipmentProf,.1)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,100,J.EquipmentProf,.2)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,160,J.EquipmentProf,.3)),this.passiveEffectLists.push(a.BasicStats(this,180,d.SPD,s.Add,50)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.SkillBuff(this,250,J.EquipmentProf,.4)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,300,J.EquipmentProf,.5)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,400,J.EquipmentProf,1)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,475,J.EquipmentProf,1)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,550,J.ArtifactProf,.1)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,256,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,600,J.EquipmentProf,1.5)),this.passiveEffectLists.push(a.SkillBuff(this,625,J.ArtifactProf,.2)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillDamage,512,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillDamage,1024,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,725,J.ArtifactProf,.3)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,2048,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,800,J.ArtifactProf,.4)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillDamage,4096,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,8192,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,900,J.ArtifactProf,.5)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,16384,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,950,J.ArtifactProf,1)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Dark}get debuff(){return at.Poison}}class ZP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MP,s.Add,25)),this.passiveEffectLists.push(a.BasicStats(this,10,d.SPD,s.Add,20)),this.passiveEffectLists.push(a.SkillPassive(this,15,p.DarkDamage,.05,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,30,v.MagCritChance,s.Add,.025)),this.passiveEffectLists.push(a.Stats(this,40,v.MoveSpeed,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MP,s.Add,150)),this.passiveEffectLists.push(a.Register(this,70,()=>M.ThiefSkillsString(4,.05))),this.passiveEffectLists.push(a.SkillPassive(this,80,p.DarkDamage,.15,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,120,()=>M.ThiefSkillsString(4,.05))),this.passiveEffectLists.push(a.SkillPassive(this,140,p.DarkDamage,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,180,()=>M.ThiefSkillsString(4,.05))),this.passiveEffectLists.push(a.Stats(this,200,v.MoveSpeed,s.Mul,.1)),this.passiveEffectLists.push(a.Register(this,225,()=>M.ThiefSkillsString(4,.1))),this.passiveEffectLists.push(a.BasicStats(this,250,d.SPD,s.Add,250)),this.passiveEffectLists.push(a.Stats(this,275,v.MoveSpeed,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.GuildExp,.1,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MP,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.DarkDamage,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.DEF,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.DarkDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.GuildExp,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.Stats(this,550,v.MoveSpeed,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.DarkDamage,.25,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,600,d.HP,s.After,4e3)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.Stats(this,700,v.MoveSpeed,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,750,d.DEF,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.DarkDamage,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,256,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}SetBuff(t){let i=new u(n.Buff,s.Add,()=>this.CriticalValue(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.MagCritChance).RegisterMultiplier(i)}CriticalValue(){let t=0;return this.level.value>=70&&(t+=.05),this.level.value>=120&&(t+=.05),this.level.value>=180&&(t+=.05),this.level.value>=225&&(t+=.1),t}get element(){return F.Dark}get debuff(){return at.MdefDown}}class KP extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,100)),this.passiveEffectLists.push(a.Stats(this,15,v.PhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Register(this,25,()=>M.ThiefSkillsString(2))),this.passiveEffectLists.push(a.BasicStats(this,30,d.SPD,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,40,d.SPD,s.Add,250)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,70,d.HP,s.Add,1e3)),this.passiveEffectLists.push(a.Stats(this,80,v.CriticalDamage,s.Add,.2)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,110,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,120,d.SPD,s.Add,500)),this.passiveEffectLists.push(a.Stats(this,130,v.CriticalDamage,s.Add,.3)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,150,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,170,d.SPD,s.Add,1e3)),this.passiveEffectLists.push(a.Stats(this,180,v.CriticalDamage,s.Add,.5)),this.passiveEffectLists.push(a.Stats(this,190,v.PhysCritChance,s.Add,.15)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,300,d.ATK,s.Mul,3)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Stats(this,425,v.CriticalDamage,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.CriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,575,v.CriticalDamage,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class eD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,3)),this.passiveEffectLists.push(a.SkillPassive(this,10,p.EquipmentProficiency,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,20,d.HP,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,25)),this.passiveEffectLists.push(a.Stats(this,40,v.PhysCritChance,s.Add,.005)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.EquipmentProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,70,v.PhysCritChance,s.Add,.01)),this.passiveEffectLists.push(a.Stats(this,80,v.ExpGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,90,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,110,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,120,v.PhysCritChance,s.Add,.01)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,140,d.ATK,s.Mul,.025)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.EquipmentProficiency,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,180,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.BasicStats(this,200,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,275,d.DEF,s.After,5)),this.passiveEffectLists.push(a.BasicStats(this,300,d.DEF,s.After,15)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.DEF,s.After,30)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.EquipmentProficiency,.4,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,400,d.DEF,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MP,s.After,200)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.PhysCritChance,s.After,.05)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ArtifactProficiency,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,550,d.DEF,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.Stats(this,600,v.PhysCritChance,s.After,.15)),this.passiveEffectLists.push(a.BasicStats(this,650,d.DEF,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MP,s.After,1e3)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ArtifactProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,750,d.DEF,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,800,v.PhysCritChance,s.After,.3)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.ArtifactProficiency,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,900,d.DEF,s.After,25e3)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ArtifactProficiency,.4,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get debuff(){return at.DefDown}}class tD extends pa{constructor(i){super(i);o(this,"heroKind",R.Thief);this.skills[0]=new zP(this.data,R.Thief,0),this.skills[1]=new eD(this.data,R.Thief,1),this.skills[2]=new jP(this.data,R.Thief,2),this.skills[3]=new XP(this.data,R.Thief,3),this.skills[4]=new KP(this.data,R.Thief,4),this.skills[5]=new YP(this.data,R.Thief,5),this.skills[6]=new ZP(this.data,R.Thief,6),this.skills[7]=new QP(this.data,R.Thief,7),this.skills[8]=new JP(this.data,R.Thief,8),this.skills[9]=new OP(this.data,R.Thief,9)}}class sD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MP,s.Add,25)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.CrystalResearchPower,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,30,v.SkillProficiencyGain,s.Add,.2)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.CrystalResearchPower,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,50,v.SkillProficiencyGain,s.Add,.4)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.CrystalResearchPower,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,70,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.CrystalResearchPower,.4,s.Mul)),this.passiveEffectLists.push(a.Stats(this,90,v.SkillProficiencyGain,s.Add,.8)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,110,p.CrystalResearchPower,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,120,v.SkillProficiencyGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.CrystalResearchPower,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,140,v.SkillProficiencyGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.CrystalResearchPower,1.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,170,v.SkillProficiencyGain,s.Add,3)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.CrystalResearchPower,2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,190,v.SkillProficiencyGain,s.Add,4)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,210,p.CrystalResearchPower,2.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,220,v.SkillProficiencyGain,s.Add,5)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.CrystalResearchPower,5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,240,v.SkillProficiencyGain,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.GoldCap,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.CrystalResearchPower,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.CrystalResearchPower,20,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.GoldCap,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,450,v.SkillProficiencyGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.GoldCap,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.CrystalResearchPower,40,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.GoldCap,.4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.GoldCap,.5,s.Add)),this.passiveEffectLists.push(a.Stats(this,650,v.SkillProficiencyGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.GoldCap,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.CrystalResearchPower,80,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.GoldCap,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.GoldCap,3,s.Add)),this.passiveEffectLists.push(a.Stats(this,850,v.SkillProficiencyGain,s.Mul,10)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.GoldCap,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,975,p.CrystalResearchPower,160,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?at.Poison:at.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class iD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.SkillBuff(this,10,J.PhysicalDamage,.2)),this.passiveEffectLists.push(a.BasicStats(this,15,d.ATK,s.Add,10)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Add,15)),this.passiveEffectLists.push(a.BasicStats(this,25,d.ATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Add,25)),this.passiveEffectLists.push(a.SkillPassive(this,35,p.PhysicalDamage,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Add,30)),this.passiveEffectLists.push(a.SkillPassive(this,45,p.PhysicalDamage,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,60,d.ATK,s.Add,40)),this.passiveEffectLists.push(a.SkillBuff(this,70,J.PhysicalDamage,.3)),this.passiveEffectLists.push(a.BasicStats(this,80,d.ATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,90,d.ATK,s.Add,100)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,110,v.ExpGain,s.Add,5)),this.passiveEffectLists.push(a.SkillPassive(this,120,p.PhysicalDamage,.5,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Add,200)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,180,J.PhysicalDamage,.5)),this.passiveEffectLists.push(a.SkillPassive(this,190,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.PhysicalDamage,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.PhysicalDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SDDamageMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.PhysicalDamage,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,575,d.ATK,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDDamageMultiplier,2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,650,v.PhysCritChance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.PhysicalDamage,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,725,v.PhysCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.SDDamageMultiplier,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.PhysicalDamage,1.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SDDamageMultiplier,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,900,d.ATK,s.Mul,10)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,256,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class aD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillBuff(this,10,J.FireDamage,.2)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.Stats(this,30,v.FireRes,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MATK,s.Add,40)),this.passiveEffectLists.push(a.Stats(this,50,v.MagCritChance,s.Add,.03)),this.passiveEffectLists.push(a.SkillBuff(this,60,J.FireDamage,.3)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.FireDamage,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.FireDamage,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,110,v.FireRes,s.Add,.15)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.FireDamage,.5,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,160,J.FireDamage,.5)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.FireDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,300,v.FireRes,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.TownMaterialGain,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.FireRes,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.FireDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.TownMaterialGain,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,525,v.FireRes,s.Mul,.6)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.FireDamage,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.TownMaterialGain,1.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,625,v.FireRes,s.Mul,.8)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.FireDamage,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.FireRes,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.TownMaterialGain,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.FireDamage,1.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Stats(this,850,v.FireRes,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,3,s.Add)),this.passiveEffectLists.push(a.Stats(this,925,v.FireRes,s.Mul,8)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Fire}get debuff(){return at.FireResDown}}class rD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillBuff(this,10,J.IceDamage,.2)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,50)),this.passiveEffectLists.push(a.Stats(this,30,v.MagCritChance,s.Add,.02)),this.passiveEffectLists.push(a.Stats(this,40,v.IceRes,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,50,d.MDEF,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,60,d.DEF,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,70,d.HP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MDEF,s.Add,40)),this.passiveEffectLists.push(a.BasicStats(this,90,d.DEF,s.Add,40)),this.passiveEffectLists.push(a.SkillBuff(this,100,J.IceDamage,.3)),this.passiveEffectLists.push(a.SkillPassive(this,110,p.IceDamage,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,120,v.IceRes,s.Add,.15)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,140,d.HP,s.Add,500)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.IceDamage,.3,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MDEF,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.IceDamage,.5,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,200,d.DEF,s.Mul,.15)),this.passiveEffectLists.push(a.SkillBuff(this,225,J.IceDamage,.5)),this.passiveEffectLists.push(a.BasicStats(this,250,d.HP,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.IceDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,300,v.IceRes,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.GuildExp,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.IceRes,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.GuildExp,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.IceDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,525,v.IceRes,s.Mul,.6)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.IceDamage,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,575,d.HP,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,625,v.IceRes,s.Mul,.8)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.IceDamage,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.IceRes,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.GuildExp,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.IceDamage,1.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,850,v.IceRes,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,900,d.HP,s.Mul,10)),this.passiveEffectLists.push(a.Stats(this,925,v.IceRes,s.Mul,8)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Ice}get debuff(){return at.IceResDown}}class lD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillBuff(this,5,J.DarkDamage,.2)),this.passiveEffectLists.push(a.SkillPassive(this,10,p.DarkDamage,.2,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,15,d.MATK,s.Add,100)),this.passiveEffectLists.push(a.Stats(this,20,v.DarkRes,s.Add,.05)),this.passiveEffectLists.push(a.SkillBuff(this,25,J.DarkDamage,.3)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,500)),this.passiveEffectLists.push(a.SkillPassive(this,35,p.DarkDamage,.3,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,60,v.DarkRes,s.Add,.15)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.DarkDamage,.5,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,120,J.DarkDamage,.5)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MP,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.BlessingEffect,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.DarkDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,300,v.DarkRes,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDChallengeBossDamageCutMultiplier,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.DarkRes,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.DarkDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SDChallengeBossDamageCutMultiplier,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,525,v.DarkRes,s.Mul,.6)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.DarkDamage,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.SDChallengeBossDamageCutMultiplier,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,625,v.DarkRes,s.Mul,.8)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.DarkDamage,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.DarkRes,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDChallengeBossDamageCutMultiplier,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.DarkDamage,1.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDChallengeBossDamageCutMultiplier,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,850,v.DarkRes,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Stats(this,925,v.DarkRes,s.Mul,8)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Dark}get debuff(){return at.DarkResDown}}class nD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.HP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,10,d.DEF,s.Add,30)),this.passiveEffectLists.push(a.BasicStats(this,15,d.MDEF,s.Add,30)),this.passiveEffectLists.push(a.Stats(this,20,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.Stats(this,25,v.ExpGain,s.Add,2)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,40,d.HP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,50,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,70,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.GlobalStats(this,80,ke.GoldGain,s.Add,.5)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,100,d.MDEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,120,d.DEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,140,d.HP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,160,d.MP,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,180,d.HP,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,200,v.ExpGain,s.Add,5)),this.passiveEffectLists.push(a.BasicStats(this,225,d.SPD,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,250,d.HP,s.Mul,.5)),this.passiveEffectLists.push(a.Stats(this,275,v.ExpGain,s.Mul,1)),this.passiveEffectLists.push(a.BasicStats(this,300,d.HP,s.Mul,1.5)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Stats(this,350,v.ExpGain,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.SDEnchantGainChance,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.ExpGain,s.Mul,3)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.WardedFury,1)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.SDEnchantGainChance,.15,s.Mul)),this.passiveEffectLists.push(a.GlobalStats(this,475,ke.GoldGain,s.Mul,.5)),this.passiveEffectLists.push(a.SkillBuff(this,500,J.WardedFury,2)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.SDEnchantGainChance,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,550,d.HP,s.Mul,5)),this.passiveEffectLists.push(a.Stats(this,575,v.ExpGain,s.Mul,2)),this.passiveEffectLists.push(a.GlobalStats(this,600,ke.GoldGain,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.SDEnchantGainChance,.25,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,650,J.WardedFury,3)),this.passiveEffectLists.push(a.Stats(this,675,v.ExpGain,s.Mul,2.5)),this.passiveEffectLists.push(a.GlobalStats(this,700,ke.GoldGain,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.SDEnchantGainChance,.3,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,750,J.WardedFury,4)),this.passiveEffectLists.push(a.Stats(this,775,v.ExpGain,s.Mul,3)),this.passiveEffectLists.push(a.GlobalStats(this,800,ke.GoldGain,s.Mul,2.5)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SDEnchantGainChance,.5,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,850,J.WardedFury,5)),this.passiveEffectLists.push(a.Stats(this,875,v.ExpGain,s.Mul,4)),this.passiveEffectLists.push(a.GlobalStats(this,900,ke.GoldGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SDEnchantGainChance,1,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,950,J.WardedFury,10)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Buff}get buff(){return Fs.MoveSpeedUp}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.MoveSpeed).RegisterMultiplier(i)}}class uD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillPassive(this,5,p.AlchemyPoint,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,10,p.AlchemyPoint,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,15,d.ATK,s.Mul,.15)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.AlchemyPoint,.15,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,25,d.ATK,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,30,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,35,p.AlchemyPoint,.15,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Mul,.75)),this.passiveEffectLists.push(a.SkillPassive(this,45,p.AlchemyPoint,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,50,d.ATK,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.AlchemyPoint,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,70,d.ATK,s.Mul,1.25)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.AlchemyPoint,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.AlchemyPoint,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,100,()=>M.ArcherSkillsString(2))),this.passiveEffectLists.push(a.BasicStats(this,110,d.ATK,s.Mul,3)),this.passiveEffectLists.push(a.SkillPassive(this,120,p.AlchemyPoint,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.AlchemyPoint,.35,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.EssenceConversionRate,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.AlchemyPoint,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,190,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,210,p.AlchemyPoint,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,220,p.EssenceConversionRate,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.AlchemyPoint,.6,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,240,p.AlchemyPoint,.8,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.AlchemyPoint,1,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,275,J.SDArmoredFury,.2)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.AlchemyPoint,2,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,375,J.SDArmoredFury,.3)),this.passiveEffectLists.push(a.BasicStats(this,400,d.ATK,s.Mul,10)),this.passiveEffectLists.push(a.SkillBuff(this,425,J.SDArmoredFury,.5)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.AlchemyPoint,3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.GoldCap,3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.SlimeCoinCap,.4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.AlchemyPoint,4,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,550,J.SDArmoredFury,1)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.SlimeCoinCap,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.GoldCap,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.EssenceConversionRate,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.AlchemyPoint,5,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,675,J.SDArmoredFury,2)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.SlimeCoinCap,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.GoldCap,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.AlchemyPoint,7.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,800,J.SDArmoredFury,4)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SlimeCoinCap,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.AlchemyPoint,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.GoldCap,10,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,900,J.SDArmoredFury,8)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SlimeCoinCap,20,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class hD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.ATK,s.Add,5)),this.passiveEffectLists.push(a.Stats(this,20,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.BasicStats(this,30,d.HP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Add,25)),this.passiveEffectLists.push(a.SkillPassive(this,50,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,60,v.PhysCritChance,s.Add,.01)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,80,v.PhysCritChance,s.Add,.02)),this.passiveEffectLists.push(a.Stats(this,90,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,110,v.PhysCritChance,s.Add,.03)),this.passiveEffectLists.push(a.SkillPassive(this,120,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.Stats(this,130,v.ExpGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,190,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,210,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,220,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,240,d.ATK,s.Mul,.3)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,275,d.MDEF,s.After,5)),this.passiveEffectLists.push(a.BasicStats(this,300,d.MDEF,s.After,15)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.BasicStats(this,350,d.MDEF,s.After,30)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.EquipmentProficiency,.25,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,400,d.MDEF,s.After,50)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,450,d.MP,s.After,200)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,500,v.MagCritChance,s.After,.05)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ThisSkillDamage,256,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,550,d.MDEF,s.After,500)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.EquipmentProficiency,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,600,v.MagCritChance,s.After,.15)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ThisSkillDamage,512,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,650,d.MDEF,s.After,1e3)),this.passiveEffectLists.push(a.BasicStats(this,675,d.ATK,s.Mul,5)),this.passiveEffectLists.push(a.BasicStats(this,700,d.MP,s.After,1e3)),this.passiveEffectLists.push(a.Stats(this,725,v.ExpGain,s.Mul,5)),this.passiveEffectLists.push(a.BasicStats(this,750,d.MDEF,s.After,5e3)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillDamage,1024,s.Add)),this.passiveEffectLists.push(a.Stats(this,800,v.MagCritChance,s.After,.3)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.SlimeCoinCap,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.SlimeCoinCap,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.SlimeCoinCap,6,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,900,d.MDEF,s.After,25e3)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.SlimeCoinCap,8,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.SlimeCoinCap,10,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}}class cD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.SkillBuff(this,10,J.LightDamage,.2)),this.passiveEffectLists.push(a.SkillPassive(this,15,p.LightDamage,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,20,v.LightRes,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,25,d.MATK,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MP,s.Add,200)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.LightDamage,.3,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,50,J.LightDamage,.3)),this.passiveEffectLists.push(a.BasicStats(this,60,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,90,d.HP,s.Add,1500)),this.passiveEffectLists.push(a.Stats(this,100,v.LightRes,s.Add,.15)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MP,s.Add,1e3)),this.passiveEffectLists.push(a.SkillBuff(this,140,J.LightDamage,.5)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.LightDamage,.5,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MATK,s.Mul,.75)),this.passiveEffectLists.push(a.BasicStats(this,200,d.DEF,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,225,d.MDEF,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,250,d.MATK,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.LightDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,300,v.LightRes,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.AlchemyPoint,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.LightRes,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.LightDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ArtifactProficiency,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,525,v.LightRes,s.Mul,.6)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.LightDamage,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ArtifactProficiency,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,625,v.LightRes,s.Mul,.8)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.LightDamage,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.LightRes,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.TownMaterialGain,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.LightDamage,1.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Stats(this,850,v.LightRes,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.Stats(this,925,v.LightRes,s.Mul,8)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Light}get debuff(){return at.LightResDown}}class oD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Add,5)),this.passiveEffectLists.push(a.SkillBuff(this,20,J.ThunderDamage,.2)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Add,10)),this.passiveEffectLists.push(a.Stats(this,40,v.ThunderRes,s.Add,.05)),this.passiveEffectLists.push(a.Stats(this,50,v.MagCritChance,s.Add,.01)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MATK,s.Add,15)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MATK,s.Add,20)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MATK,s.Add,30)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.ThisSkillDamage,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,110,d.MP,s.Mul,.025)),this.passiveEffectLists.push(a.SkillPassive(this,120,p.ThisSkillDamage,2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ThunderDamage,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillDamage,4,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,150,J.ThunderDamage,.3)),this.passiveEffectLists.push(a.Stats(this,160,v.ThunderRes,s.Add,.15)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ThunderDamage,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ThisSkillDamage,8,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,190,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ThunderDamage,.5,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,250,J.ThunderDamage,.5)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ThunderDamage,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,300,v.ThunderRes,s.Mul,.2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ThisSkillDamage,16,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,400,v.ThunderRes,s.Mul,.4)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ThunderDamage,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ThisSkillDamage,32,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.Stats(this,525,v.ThunderRes,s.Mul,.6)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ThunderDamage,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,575,d.MP,s.Mul,2)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,625,v.ThunderRes,s.Mul,.8)),this.passiveEffectLists.push(a.Stats(this,650,v.MagCritChance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ThunderDamage,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.ThunderRes,s.Mul,2)),this.passiveEffectLists.push(a.Stats(this,725,v.MagCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThunderDamage,1.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillDamage,64,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Stats(this,850,v.ThunderRes,s.Mul,4)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ThisSkillDamage,128,s.Add)),this.passiveEffectLists.push(a.BasicStats(this,900,d.MP,s.Mul,10)),this.passiveEffectLists.push(a.Stats(this,925,v.ThunderRes,s.Mul,8)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillDamage,256,s.Add)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Thunder}get debuff(){return at.ThunderResDown}}class fD extends pa{constructor(i){super(i);o(this,"heroKind",R.Archer);this.skills[0]=new sD(this.data,R.Archer,0),this.skills[1]=new hD(this.data,R.Archer,1),this.skills[2]=new iD(this.data,R.Archer,2),this.skills[3]=new uD(this.data,R.Archer,3),this.skills[4]=new oD(this.data,R.Archer,4),this.skills[5]=new rD(this.data,R.Archer,5),this.skills[6]=new aD(this.data,R.Archer,6),this.skills[7]=new cD(this.data,R.Archer,7),this.skills[8]=new lD(this.data,R.Archer,8),this.skills[9]=new nD(this.data,R.Archer,9)}}class pD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.MP,s.Add,250)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.Stats(this,50,v.MoveSpeed,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,60,d.MATK,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,70,d.ATK,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MATK,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,90,d.ATK,s.Mul,.2)),this.passiveEffectLists.push(a.SkillPassive(this,100,p.ExpeditionExpGain,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,110,v.MoveSpeed,s.Mul,.025)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.ExpeditionExpGain,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,150,()=>M.TamerSkillsString(15,.05))),this.passiveEffectLists.push(a.BasicStats(this,160,d.ATK,s.Mul,.35)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.ExpeditionExpGain,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MATK,s.Mul,.35)),this.passiveEffectLists.push(a.Stats(this,190,v.MoveSpeed,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,200,()=>M.TamerSkillsString(15,.05))),this.passiveEffectLists.push(a.BasicStats(this,210,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,220,p.ExpeditionExpGain,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.ExpeditionExpGain,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,240,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ExpeditionExpGain,.3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ExpeditionExpGain,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ExpeditionExpGain,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ExpeditionPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ExpeditionExpGain,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ExpeditionExpGain,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ExpeditionExpGain,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ExpeditionPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ExpeditionExpGain,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.PetPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ExpeditionExpGain,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ExpeditionExpGain,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ExpeditionExpGain,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ExpeditionExpGain,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ExpeditionExpGain,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ExpeditionPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ExpeditionExpGain,2.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.PetPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ExpeditionExpGain,3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ExpeditionPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ExpeditionExpGain,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.PetPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ExpeditionExpGain,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ExpeditionPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ExpeditionExpGain,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PetPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Buff}get buff(){return Fs.Nothing}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.heroes[t].summonPetATKMATKMultiplier.RegisterMultiplier(i);let r=new u(n.Buff,s.Add,()=>this.CritChance(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.PetPhysCritChance).RegisterMultiplier(r),this.data.stats.HeroStats(t,v.PetMagCritChance).RegisterMultiplier(r)}CritChance(){return this.lv>=200?.1:this.lv>=150?.05:0}}class dD extends xe{constructor(i,r,h){super(i,r,h);o(this,"tempMul");this.passiveEffectLists.push(a.BasicStats(this,10,d.MP,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Mul,.01)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Mul,.01)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Add,200)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,60,d.ATK,s.Mul,.02)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MATK,s.Mul,.02)),this.passiveEffectLists.push(a.BasicStats(this,80,d.ATK,s.Mul,.03)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MATK,s.Mul,.03)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,110,d.ATK,s.Mul,.04)),this.passiveEffectLists.push(a.BasicStats(this,120,d.MATK,s.Mul,.04)),this.passiveEffectLists.push(a.BasicStats(this,130,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,150,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,160,d.MP,s.Add,500)),this.passiveEffectLists.push(a.Stats(this,180,v.PetCriticalDamage,s.Add,.5)),this.passiveEffectLists.push(a.Register(this,200,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.Register(this,250,()=>M.TamerSkillsString(2)+"300%")),this.passiveEffectLists.push(a.Stats(this,275,v.PetCriticalDamage,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),c=>this.unlockFullCast.RegisterCondition(c))),this.passiveEffectLists.push(a.Stats(this,350,v.PetCriticalDamage,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ExpeditionPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,425,()=>M.TamerSkillsString(2)+"500%")),this.passiveEffectLists.push(a.Stats(this,450,v.PetCriticalDamage,s.Add,2.5)),this.passiveEffectLists.push(a.Stats(this,475,v.PetCriticalDamage,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ExpeditionPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.Stats(this,525,v.PetCriticalDamage,s.Mul,1.5)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.PetPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.Stats(this,575,v.PetCriticalDamage,s.Mul,2)),this.passiveEffectLists.push(a.Stats(this,600,v.PetCriticalDamage,s.Mul,2.5)),this.passiveEffectLists.push(a.Stats(this,625,v.PetCriticalDamage,s.Mul,3.5)),this.passiveEffectLists.push(a.Stats(this,650,v.PetCriticalDamage,s.Mul,5)),this.passiveEffectLists.push(a.Stats(this,675,v.PetCriticalDamage,s.Mul,7.5)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ExpeditionPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,725,v.PetCriticalDamage,s.Mul,10)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.PetPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,775,v.PetCriticalDamage,s.Mul,20)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ExpeditionPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.Stats(this,825,v.PetCriticalDamage,s.Mul,30)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.PetPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.Stats(this,875,v.PetCriticalDamage,s.Mul,40)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ExpeditionPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,925,v.PetCriticalDamage,s.Mul,100)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PetPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Order}EffectValue(){this.tempMul=this.lv<425?this.lv<250?this.lv<200?this.lv<150?this.lv<100?this.lv<50?1:2:4:8:16:48:240;let i=this.Damage()*this.tempMul;return this.isLog&&i>=1&&(i=1+Math.log10(i*100)/100),i}}class gD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MP,s.Add,100)),this.passiveEffectLists.push(a.BasicStats(this,30,d.HP,s.Add,300)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MP,s.Add,150)),this.passiveEffectLists.push(a.SkillBuff(this,50,J.LoyaltyPoint,.5)),this.passiveEffectLists.push(a.Stats(this,60,v.ExpGain,s.Add,2)),this.passiveEffectLists.push(a.Stats(this,70,v.TamingPointGain,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MP,s.Mul,.05)),this.passiveEffectLists.push(a.Stats(this,90,v.TamingPointGain,s.Mul,.2)),this.passiveEffectLists.push(a.Stats(this,100,v.TamingPointGain,s.Mul,.3)),this.passiveEffectLists.push(a.Stats(this,120,v.ExpGain,s.Add,5)),this.passiveEffectLists.push(a.SkillBuff(this,140,J.LoyaltyPoint,.5)),this.passiveEffectLists.push(a.GlobalStats(this,160,ke.GoldGain,s.Add,.5)),this.passiveEffectLists.push(a.Stats(this,180,v.TamingPointGain,s.Mul,.4)),this.passiveEffectLists.push(a.Stats(this,200,v.TamingPointGain,s.Mul,1)),this.passiveEffectLists.push(a.Stats(this,225,v.ExpGain,s.Add,20)),this.passiveEffectLists.push(a.SkillBuff(this,250,J.LoyaltyPoint,1)),this.passiveEffectLists.push(a.Stats(this,275,v.TamingPointGain,s.Mul,2)),this.passiveEffectLists.push(a.SkillBuff(this,300,J.LoyaltyPoint,2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.Stats(this,350,v.TamingPointGain,s.Mul,3)),this.passiveEffectLists.push(a.Stats(this,375,v.TamingPointGain,s.Mul,3)),this.passiveEffectLists.push(a.SkillBuff(this,400,J.LoyaltyPoint,4)),this.passiveEffectLists.push(a.Stats(this,425,v.TamingPointGain,s.Mul,4)),this.passiveEffectLists.push(a.Stats(this,450,v.TamingPointGain,s.Mul,4)),this.passiveEffectLists.push(a.Stats(this,475,v.TamingPointGain,s.Mul,5)),this.passiveEffectLists.push(a.SkillBuff(this,500,J.LoyaltyPoint,8)),this.passiveEffectLists.push(a.Stats(this,525,v.TamingPointGain,s.Mul,5)),this.passiveEffectLists.push(a.Stats(this,550,v.TamingPointGain,s.Mul,6)),this.passiveEffectLists.push(a.Stats(this,575,v.TamingPointGain,s.Mul,7)),this.passiveEffectLists.push(a.SkillBuff(this,600,J.LoyaltyPoint,16)),this.passiveEffectLists.push(a.Stats(this,625,v.TamingPointGain,s.Mul,8)),this.passiveEffectLists.push(a.Stats(this,650,v.TamingPointGain,s.Mul,9)),this.passiveEffectLists.push(a.Stats(this,675,v.TamingPointGain,s.Mul,10)),this.passiveEffectLists.push(a.SkillBuff(this,700,J.LoyaltyPoint,32)),this.passiveEffectLists.push(a.Stats(this,725,v.TamingPointGain,s.Mul,20)),this.passiveEffectLists.push(a.Stats(this,750,v.TamingPointGain,s.Mul,40)),this.passiveEffectLists.push(a.Stats(this,775,v.TamingPointGain,s.Mul,80)),this.passiveEffectLists.push(a.SkillBuff(this,800,J.LoyaltyPoint,64)),this.passiveEffectLists.push(a.Stats(this,825,v.TamingPointGain,s.Mul,100)),this.passiveEffectLists.push(a.Stats(this,850,v.TamingPointGain,s.Mul,200)),this.passiveEffectLists.push(a.Stats(this,875,v.TamingPointGain,s.Mul,300)),this.passiveEffectLists.push(a.SkillBuff(this,900,J.LoyaltyPoint,128)),this.passiveEffectLists.push(a.Stats(this,925,v.TamingPointGain,s.Mul,400)),this.passiveEffectLists.push(a.Stats(this,950,v.TamingPointGain,s.Mul,1e3))}get type(){return Zt.Buff}get buff(){return Fs.Nothing}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.heroes[t].petExpGainPerDefeat.RegisterMultiplier(i)}}class SD extends xe{constructor(i,r,h){super(i,r,h);o(this,"tempMul");this.passiveEffectLists.push(a.BasicStats(this,10,d.DEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,20,d.MDEF,s.Add,50)),this.passiveEffectLists.push(a.BasicStats(this,30,d.DEF,s.Add,150)),this.passiveEffectLists.push(a.BasicStats(this,40,d.MDEF,s.Add,150)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,60,d.DEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MDEF,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,80,d.DEF,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MDEF,s.Mul,.15)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.SkillPassive(this,110,p.ExpeditionRewardAmount,.05,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,120,d.DEF,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,130,d.MDEF,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ExpeditionRewardAmount,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,150,d.HP,s.Mul,.45)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.ExpeditionRewardAmount,.15,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,170,d.HP,s.Add,2e3)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.ExpeditionRewardAmount,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,190,d.HP,s.Mul,1)),this.passiveEffectLists.push(a.Register(this,200,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.SkillPassive(this,225,p.ExpeditionRewardAmount,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,250,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ExpeditionRewardAmount,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),c=>this.unlockFullCast.RegisterCondition(c))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ExpeditionRewardAmount,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ExpeditionPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ExpeditionRewardAmount,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ExpeditionRewardAmount,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ExpeditionRewardAmount,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ExpeditionPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ExpeditionRewardAmount,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.PetPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ExpeditionRewardAmount,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ExpeditionRewardAmount,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ExpeditionRewardAmount,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ExpeditionRewardAmount,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ExpeditionRewardAmount,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ExpeditionPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ExpeditionRewardAmount,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.PetPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ExpeditionRewardAmount,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ExpeditionPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ExpeditionRewardAmount,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.PetPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ExpeditionRewardAmount,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ExpeditionPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ExpeditionRewardAmount,2.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PetPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}EffectValue(){this.tempMul=this.lv<250?this.lv<200?this.lv<100?this.lv<50?1:2:4:8:16;let i=this.Damage()*this.tempMul;return this.isLog&&i>=1&&(i=1+Math.log10(i*100)/100),i}get type(){return Zt.Order}}class mD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.Register(this,10,()=>M.TamerSkillsString(17,.05))),this.passiveEffectLists.push(a.BasicStats(this,20,d.SPD,s.Add,100)),this.passiveEffectLists.push(a.Register(this,30,()=>M.TamerSkillsString(17,.05))),this.passiveEffectLists.push(a.BasicStats(this,40,d.SPD,s.Add,200)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(17,.05))),this.passiveEffectLists.push(a.BasicStats(this,60,d.SPD,s.Add,300)),this.passiveEffectLists.push(a.BasicStats(this,70,d.ATK,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,80,d.MATK,s.Mul,.15)),this.passiveEffectLists.push(a.Register(this,90,()=>M.TamerSkillsString(17,.1))),this.passiveEffectLists.push(a.Stats(this,100,v.PetPhysCritChance,s.Add,.05)),this.passiveEffectLists.push(a.Stats(this,110,v.PetMagCritChance,s.Add,.05)),this.passiveEffectLists.push(a.BasicStats(this,120,d.SPD,s.Add,400)),this.passiveEffectLists.push(a.BasicStats(this,130,d.ATK,s.Mul,.6)),this.passiveEffectLists.push(a.BasicStats(this,140,d.MATK,s.Mul,.6)),this.passiveEffectLists.push(a.Stats(this,150,v.PetPhysCritChance,s.Add,.1)),this.passiveEffectLists.push(a.Stats(this,160,v.PetMagCritChance,s.Add,.1)),this.passiveEffectLists.push(a.BasicStats(this,180,d.SPD,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MATK,s.Mul,1.25)),this.passiveEffectLists.push(a.BasicStats(this,225,d.ATK,s.Mul,1.25)),this.passiveEffectLists.push(a.Register(this,250,()=>M.TamerSkillsString(17,.25))),this.passiveEffectLists.push(a.Stats(this,275,v.PetPhysCritChance,s.Add,.25)),this.passiveEffectLists.push(a.Stats(this,300,v.PetMagCritChance,s.Add,.25)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ExpeditionSpeed,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ExpeditionSpeed,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ExpeditionSpeed,.15,s.Mul)),this.passiveEffectLists.push(a.Stats(this,425,v.PetPhysCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.Stats(this,450,v.PetMagCritChance,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ExpeditionSpeed,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ExpeditionSpeed,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ExpeditionSpeed,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.ExpeditionSpeed,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,575,v.PetPhysCritChance,s.Mul,.75)),this.passiveEffectLists.push(a.Stats(this,600,v.PetMagCritChance,s.Mul,.75)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ExpeditionSpeed,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ExpeditionSpeed,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,675,v.PetPhysCritChance,s.Mul,1.25)),this.passiveEffectLists.push(a.Stats(this,700,v.PetMagCritChance,s.Mul,1.25)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ExpeditionSpeed,.75,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.ExpeditionSpeed,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ExpeditionSpeed,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ExpeditionPassiveEffect,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ExpeditionSpeed,3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.PetPassiveEffect,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ExpeditionSpeed,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ExpeditionPassiveEffect,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ExpeditionSpeed,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PetPassiveEffect,1,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Buff}get buff(){return Fs.Nothing}SetBuff(t){let i=new u(n.Buff,s.Mul,()=>this.BuffPercent(),()=>this.IsActiveBuff(t));this.data.stats.heroes[t].summonPetSPDMoveSpeedMultiplier.RegisterMultiplier(i);let r=new u(n.Buff,s.Add,()=>this.CritChance(),()=>this.IsActiveBuff(t));this.data.stats.HeroStats(t,v.PetPhysCritChance).RegisterMultiplier(r),this.data.stats.HeroStats(t,v.PetMagCritChance).RegisterMultiplier(r)}CritChance(){return this.lv>=250?.5:this.lv>=90?.25:this.lv>=50?.15:this.lv>=30?.1:this.lv>=10?.05:0}}class MD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,5,d.HP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,500)),this.passiveEffectLists.push(a.SkillPassive(this,15,p.ExpeditionPetExpGain,.1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,25,p.ExpeditionPetExpGain,.2,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.ExpeditionPetExpGain,.3,s.Mul)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(11)+"20%")),this.passiveEffectLists.push(a.SkillPassive(this,60,p.ExpeditionPetExpGain,.4,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MP,s.Add,500)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.ExpeditionPetExpGain,.5,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MP,s.Add,500)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(11)+"20%")),this.passiveEffectLists.push(a.BasicStats(this,120,d.MP,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,140,()=>M.TamerSkillsString(11)+"20%")),this.passiveEffectLists.push(a.SkillPassive(this,160,p.ExpeditionPetExpGain,1,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,180,d.MP,s.Mul,.35)),this.passiveEffectLists.push(a.Register(this,200,()=>M.TamerSkillsString(11)+"20%")),this.passiveEffectLists.push(a.BasicStats(this,225,d.MP,s.Mul,1.1)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.ExpeditionPetExpGain,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.ExpeditionPetExpGain,2.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.ExpeditionPetExpGain,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ExpeditionPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ExpeditionPetExpGain,7.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.ExpeditionPetExpGain,10.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.ExpeditionPetExpGain,12.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ExpeditionPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.ExpeditionPetExpGain,20,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.PetPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ExpeditionPetExpGain,30,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ExpeditionPetExpGain,40,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.ExpeditionPetExpGain,100,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.ExpeditionPetExpGain,200,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.ExpeditionPetExpGain,300,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ExpeditionPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ExpeditionPetExpGain,400,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.PetPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ExpeditionPetExpGain,500,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ExpeditionPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.ExpeditionPetExpGain,1e3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.PetPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.ExpeditionPetExpGain,2e3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ExpeditionPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.ExpeditionPetExpGain,5e3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PetPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Buff}get buff(){return Fs.Nothing}SetBuff(t){}IncrementBuffPercentPerLevel(){return this.incrementDamage}BuffPercent(){return Math.min(1,this.BuffPercent())}Chance(){return this.lv>=200?1:this.lv>=140?.8:this.lv>=100?.6:this.lv>=50?.4:.2}}class ED extends xe{constructor(i,r,h){super(i,r,h);o(this,"tempMul");o(this,"isTry");this.passiveEffectLists.push(a.BasicStats(this,10,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,20,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,30,d.MATK,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,40,d.ATK,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,60,d.ATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,70,d.MATK,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,80,d.ATK,s.Mul,.15)),this.passiveEffectLists.push(a.BasicStats(this,90,d.MATK,s.Mul,.15)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,110,d.MATK,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,120,d.ATK,s.Mul,.2)),this.passiveEffectLists.push(a.BasicStats(this,130,d.MATK,s.Mul,.25)),this.passiveEffectLists.push(a.BasicStats(this,140,d.ATK,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,150,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.SkillPassive(this,160,p.LoyaltyPointGain,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,180,v.MoveSpeed,s.Mul,.05)),this.passiveEffectLists.push(a.Register(this,200,()=>M.TamerSkillsString(2)+"200%")),this.passiveEffectLists.push(a.BasicStats(this,225,d.MATK,s.Mul,.5)),this.passiveEffectLists.push(a.BasicStats(this,250,d.ATK,s.Mul,.5)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.LoyaltyPointGain,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),c=>this.unlockFullCast.RegisterCondition(c))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.LoyaltyPointGain,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.ExpeditionPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,400,p.PetPassiveEffect,.025,s.Mul)),this.passiveEffectLists.push(a.Register(this,425,()=>M.TamerSkillsString(2)+"300%")),this.passiveEffectLists.push(a.SkillPassive(this,450,p.LoyaltyPointGain,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.LoyaltyPointGain,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ExpeditionPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.LoyaltyPointGain,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.PetPassiveEffect,.05,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.LoyaltyPointGain,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.LoyaltyPointGain,2.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.LoyaltyPointGain,3,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,650,p.LoyaltyPointGain,3.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.LoyaltyPointGain,5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ExpeditionPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.LoyaltyPointGain,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.PetPassiveEffect,.1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.LoyaltyPointGain,20,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ExpeditionPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.LoyaltyPointGain,40,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,850,p.PetPassiveEffect,.15,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.LoyaltyPointGain,80,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ExpeditionPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.LoyaltyPointGain,500,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.PetPassiveEffect,.2,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Order}EffectValue(){this.tempMul=this.lv<425?this.lv<200?this.lv<150?this.lv<100?this.lv<50?1:2:4:8:16:32;let i=this.Damage()*this.tempMul;return this.isLog&&i>=1&&(i=1+Math.log10(i*100)/100),i}}class vD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,100)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.LeafResearchPower,.1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,30,v.SkillProficiencyGain,s.Add,.2)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.LeafResearchPower,.2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,50,v.SkillProficiencyGain,s.Add,.4)),this.passiveEffectLists.push(a.SkillPassive(this,60,p.LeafResearchPower,.3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,70,v.SkillProficiencyGain,s.Add,.6)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.LeafResearchPower,.4,s.Mul)),this.passiveEffectLists.push(a.Stats(this,90,v.SkillProficiencyGain,s.Add,.8)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(0,1))),this.passiveEffectLists.push(a.SkillPassive(this,110,p.LeafResearchPower,.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,120,v.SkillProficiencyGain,s.Add,1)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.LeafResearchPower,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,140,v.SkillProficiencyGain,s.Add,2)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.PetStat,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,160,p.LeafResearchPower,1.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,170,v.SkillProficiencyGain,s.Add,3)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.LeafResearchPower,2,s.Mul)),this.passiveEffectLists.push(a.Stats(this,190,v.SkillProficiencyGain,s.Add,4)),this.passiveEffectLists.push(a.Register(this,200,()=>M.TamerSkillsString(0,1))),this.passiveEffectLists.push(a.SkillPassive(this,210,p.LeafResearchPower,2.5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,220,v.SkillProficiencyGain,s.Add,5)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.LeafResearchPower,5,s.Mul)),this.passiveEffectLists.push(a.Stats(this,240,v.SkillProficiencyGain,s.Add,10)),this.passiveEffectLists.push(a.SkillPassive(this,250,p.PetStat,2,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.LeafResearchPower,10,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,300,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.LeafResearchPower,20,s.Mul)),this.passiveEffectLists.push(a.Register(this,375,()=>M.TamerSkillsString(0,1))),this.passiveEffectLists.push(a.SkillPassive(this,400,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.SDDamageMultiplier,.25,s.Mul)),this.passiveEffectLists.push(a.Stats(this,450,v.SkillProficiencyGain,s.Mul,1)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.SDDamageMultiplier,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.PetStat,4,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,550,p.LeafResearchPower,40,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.PetStat,8,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.PetStat,16,s.Mul)),this.passiveEffectLists.push(a.Stats(this,650,v.SkillProficiencyGain,s.Mul,5)),this.passiveEffectLists.push(a.Register(this,675,()=>M.TamerSkillsString(0,1))),this.passiveEffectLists.push(a.SkillPassive(this,700,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,750,p.LeafResearchPower,80,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.PetStat,32,s.Mul)),this.passiveEffectLists.push(a.Stats(this,850,v.SkillProficiencyGain,s.Mul,10)),this.passiveEffectLists.push(a.Register(this,875,()=>M.TamerSkillsString(0,2))),this.passiveEffectLists.push(a.SkillPassive(this,900,p.ThisSkillHitCount,1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.PetStat,64,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,950,p.ThisSkillCastTime,.25,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,975,p.LeafResearchPower,160,s.Mul)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get element(){return F.Light}SummonPetNum(){return this.lv>=875?7:this.lv>=675?5:this.lv>=375?4:this.lv>=200?3:this.lv>=100?2:1}SetBuff(t){return this.data.stats.heroes[t].summonPetSlot.RegisterMultiplier(new u(n.Skill,s.Add,()=>this.SummonPetNum(),()=>this.IsEquipped(t)))}EffectValue(){let t=this.initDamage+this.incrementDamage*this.Rank()*this.Level();return this.isLog&&t>=1&&(t=1+Math.log10(t*100)/100),t}get debuff(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()>0?at.Poison:at.Nothing}DebuffChance(){return this.data.skill.baseAttackPoisonChance[this.heroKind].Value()}}class wD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.BasicStats(this,10,d.HP,s.Add,200)),this.passiveEffectLists.push(a.BasicStats(this,20,d.HP,s.Add,500)),this.passiveEffectLists.push(a.BasicStats(this,30,d.HP,s.Mul,.05)),this.passiveEffectLists.push(a.BasicStats(this,40,d.HP,s.Add,1e3)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(6))),this.passiveEffectLists.push(a.BasicStats(this,60,d.MP,s.Add,250)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.PetExpGain,.25,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,80,d.HP,s.Mul,.1)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.PetExpGain,.25,s.Mul)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(7))),this.passiveEffectLists.push(a.BasicStats(this,120,d.HP,s.Mul,.15)),this.passiveEffectLists.push(a.Register(this,140,()=>M.TamerSkillsString(8))),this.passiveEffectLists.push(a.BasicStats(this,160,d.HP,s.Add,1500)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.PetExpGain,.5,s.Mul)),this.passiveEffectLists.push(a.BasicStats(this,200,d.MP,s.Mul,.1)),this.passiveEffectLists.push(a.BasicStats(this,225,d.HP,s.Mul,.25)),this.passiveEffectLists.push(a.Register(this,250,()=>M.TamerSkillsString(9))),this.passiveEffectLists.push(a.SkillBuff(this,275,J.LoyaltyPoint,.5)),this.passiveEffectLists.push(a.Stats(this,300,v.PetDebuffResistance,s.Add,.25)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillBuff(this,350,J.LoyaltyPoint,1)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.PetExpGain,1,s.Mul)),this.passiveEffectLists.push(a.Stats(this,400,v.PetDebuffResistance,s.Add,.25)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.PetExpGain,2,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,450,J.LoyaltyPoint,3.5)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.PetExpGain,4,s.Mul)),this.passiveEffectLists.push(a.Stats(this,500,v.PetDebuffResistance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.PetExpGain,8,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,550,J.LoyaltyPoint,5)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.PetExpGain,16,s.Mul)),this.passiveEffectLists.push(a.Stats(this,600,v.PetDebuffResistance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.PetExpGain,32,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,650,J.LoyaltyPoint,10)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.PetExpGain,64,s.Mul)),this.passiveEffectLists.push(a.Stats(this,700,v.PetDebuffResistance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.PetExpGain,128,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,750,J.LoyaltyPoint,25)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.PetExpGain,500,s.Mul)),this.passiveEffectLists.push(a.Stats(this,800,v.PetDebuffResistance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.PetExpGain,1e3,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,850,J.LoyaltyPoint,55)),this.passiveEffectLists.push(a.SkillPassive(this,875,p.PetExpGain,5e3,s.Mul)),this.passiveEffectLists.push(a.Stats(this,900,v.PetDebuffResistance,s.Mul,.25)),this.passiveEffectLists.push(a.SkillPassive(this,925,p.PetExpGain,1e4,s.Mul)),this.passiveEffectLists.push(a.SkillBuff(this,950,J.LoyaltyPoint,100)),this.passiveEffectLists.push(a.Register(this,1e3,()=>M.WarriorSkillsString(7)))}get type(){return Zt.Heal}}class kD extends xe{constructor(t,i,r){super(t,i,r),this.passiveEffectLists.push(a.SkillPassive(this,5,p.GuildExp,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,10,p.DoubleCaptureChance,.05,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,15,p.GuildExp,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,20,p.DoubleCaptureChance,.05,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,25,J.TamingPoint,.25)),this.passiveEffectLists.push(a.SkillPassive(this,30,p.GuildExp,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,35,p.DoubleCaptureChance,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,40,p.GuildExp,.4,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,45,p.DoubleCaptureChance,.1,s.Add)),this.passiveEffectLists.push(a.Register(this,50,()=>M.TamerSkillsString(24))),this.passiveEffectLists.push(a.SkillBuff(this,60,J.TamingPoint,.25)),this.passiveEffectLists.push(a.SkillPassive(this,70,p.ThisSkillCastTime,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,80,p.DoubleCaptureChance,.15,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,90,p.GuildExp,.5,s.Add)),this.passiveEffectLists.push(a.Register(this,100,()=>M.TamerSkillsString(25))),this.passiveEffectLists.push(a.SkillPassive(this,110,p.DoubleCaptureChance,.15,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,120,J.TamingPoint,.5)),this.passiveEffectLists.push(a.SkillPassive(this,130,p.DoubleCaptureChance,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,140,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,150,p.GuildExp,.6,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,160,J.TamingPoint,.5)),this.passiveEffectLists.push(a.SkillPassive(this,170,p.DoubleCaptureChance,.2,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,180,p.GuildExp,.7,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,190,p.DoubleCaptureChance,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,200,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,210,J.TamingPoint,.5)),this.passiveEffectLists.push(a.SkillPassive(this,220,p.GuildExp,.8,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,230,p.GuildExp,.9,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,240,p.GuildExp,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,250,J.TamingPoint,1)),this.passiveEffectLists.push(a.SkillPassive(this,275,p.TripleCaptureChance,.1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,300,J.TamingPoint,2)),this.passiveEffectLists.push(a.Register(this,325,()=>M.WarriorSkillsString(10),h=>this.unlockFullCast.RegisterCondition(h))),this.passiveEffectLists.push(a.SkillPassive(this,350,p.GuildExp,.25,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,375,p.TripleCaptureChance,.2,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,400,J.TamingPoint,2.5)),this.passiveEffectLists.push(a.SkillPassive(this,425,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,450,p.DoubleCaptureChance,.7,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,475,p.TripleCaptureChance,.3,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,500,p.GuildExp,.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,525,p.DoubleCaptureChance,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,550,J.TamingPoint,5)),this.passiveEffectLists.push(a.SkillPassive(this,575,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,600,p.GuildExp,1,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,625,p.TripleCaptureChance,.4,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,650,J.TamingPoint,7.5)),this.passiveEffectLists.push(a.SkillPassive(this,675,p.DoubleCaptureChance,1.5,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,700,p.GuildExp,1.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,725,p.TripleCaptureChance,.5,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,750,J.TamingPoint,15)),this.passiveEffectLists.push(a.SkillPassive(this,775,p.ThisSkillCastTime,.1,s.Add)),this.passiveEffectLists.push(a.SkillPassive(this,800,p.GuildExp,2.5,s.Mul)),this.passiveEffectLists.push(a.SkillPassive(this,825,p.TripleCaptureChance,1,s.Add)),this.passiveEffectLists.push(a.SkillBuff(this,850,J.TamingPoint,50))}get type(){return Zt.Attack}get element(){return F.Light}TamingChance(){return Math.min(1,.005+5e-5*this.Level())}}class AD extends pa{constructor(i){super(i);o(this,"heroKind",R.Tamer);this.skills[0]=new vD(this.data,R.Tamer,0),this.skills[1]=new dD(this.data,R.Tamer,1),this.skills[2]=new ED(this.data,R.Tamer,2),this.skills[3]=new SD(this.data,R.Tamer,3),this.skills[4]=new wD(this.data,R.Tamer,4),this.skills[5]=new MD(this.data,R.Tamer,5),this.skills[6]=new pD(this.data,R.Tamer,6),this.skills[7]=new mD(this.data,R.Tamer,7),this.skills[8]=new gD(this.data,R.Tamer,8),this.skills[9]=new kD(this.data,R.Tamer,9)}}class RD{constructor(t){o(this,"data");o(this,"ladyEmeldaEffectMultiplier",Array(W.HeroKind));o(this,"skillLevelBonus",Array(W.HeroKind));o(this,"skillLevelBonusValue",Array(W.HeroKind));o(this,"skillLevelBonusFromHolyArch",Array(W.HeroKind));o(this,"skillRankCostFactors",Array(W.HeroKind));o(this,"skillPassiveShareFactors",Array(W.HeroKind));o(this,"skillCooltimeReduction",Array(W.HeroKind));o(this,"skillCastSpeedModifier",Array(W.HeroKind));o(this,"excessSpeedForHitCount");o(this,"skillRangeMultiplier",Array(W.HeroKind));o(this,"skillEffectRangeMultiplier",Array(W.HeroKind));o(this,"extraSkillHitCount",Array(W.HeroKind));o(this,"loadoutUnlockedNum");o(this,"globalSkillProfGainRate");o(this,"baseAttackPoisonChance",Array(W.HeroKind));o(this,"baseAttackSlimeBall",Array(W.HeroKind));o(this,"classSkills",Array(W.HeroKind));o(this,"isLog",Array(W.HeroKind));o(this,"unlockSkillPassivePersist",!1);this.data=t,this.excessSpeedForHitCount=new $;for(let i=0;i<this.skillRankCostFactors.length;i++)this.skillRankCostFactors[i]=new $(new u(n.Base,s.Add,()=>0),()=>1,()=>1e-100);for(let i=0;i<this.ladyEmeldaEffectMultiplier.length;i++)this.ladyEmeldaEffectMultiplier[i]=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<this.skillCooltimeReduction.length;i++)this.skillCooltimeReduction[i]=new $(new u(n.Base,s.Add,()=>0),()=>.5,()=>0);for(let i=0;i<this.skillCastSpeedModifier.length;i++)this.skillCastSpeedModifier[i]=new $(new u(n.Base,s.Add,()=>1),()=>1e4,()=>1),this.skillCastSpeedModifier[i].name="Skill Cast Speed";for(let i=0;i<this.skillRangeMultiplier.length;i++)this.skillRangeMultiplier[i]=new $(new u(n.Base,s.Add,()=>1)),this.skillRangeMultiplier[i].name=`${R[i]}'s Class Skills Range`,this.skillEffectRangeMultiplier[i]=new $(new u(n.Base,s.Add,()=>1)),this.skillEffectRangeMultiplier[i].name=`${R[i]}'s Class Skills Area of Effect`,this.extraSkillHitCount[i]=new $(new u(n.Base,s.Add,()=>0),()=>500,()=>0);for(let i=0;i<this.skillLevelBonus.length;i++)this.skillLevelBonus[i]=new $(new u(n.Base,s.Add,()=>0),()=>1e9,()=>0),this.skillLevelBonusFromHolyArch[i]=new $,this.skillLevelBonus[i].numberType=gt.Normal,this.skillLevelBonus[i].name=`${R[i]}'s Skill Level Bonus`;for(let i=0;i<this.skillPassiveShareFactors.length;i++)this.skillPassiveShareFactors[i]=new $;for(let i=0;i<this.baseAttackPoisonChance.length;i++)this.baseAttackPoisonChance[i]=new $;for(let i=0;i<this.baseAttackSlimeBall.length;i++)this.baseAttackSlimeBall[i]=new $;this.globalSkillProfGainRate=new $}Start(){this.classSkills[0]=new BP(this.data),this.classSkills[1]=new UP(this.data),this.classSkills[2]=new kP(this.data),this.classSkills[3]=new tD(this.data),this.classSkills[4]=new fD(this.data),this.classSkills[5]=new AD(this.data)}Skill(t,i){return this.classSkills[t].skills[i]}TotalTriggeredNum(){let t=0;for(let i=0;i<this.classSkills.length;i++)for(let r=0;r<this.classSkills[i].skills.length;r++)t+=this.classSkills[i].skills[r].triggeredNum.value;return t}}class CD{constructor(t,i,r){o(this,"data");o(this,"heroKind");o(this,"kind");this.data=t,this.heroKind=i,this.kind=r}get value(){switch(this.kind){case y.Vitality:return this.data.source.abilityPointsVitality[this.heroKind];case y.Strength:return this.data.source.abilityPointsStrength[this.heroKind];case y.Intelligence:return this.data.source.abilityPointsIntelligence[this.heroKind];case y.Agility:return this.data.source.abilityPointsAgility[this.heroKind];case y.Luck:return this.data.source.abilityPointsLuck[this.heroKind];default:return 0}}set value(t){switch(this.kind){case y.Vitality:this.data.source.abilityPointsVitality[this.heroKind]=t;break;case y.Strength:this.data.source.abilityPointsStrength[this.heroKind]=t;break;case y.Intelligence:this.data.source.abilityPointsIntelligence[this.heroKind]=t;break;case y.Agility:this.data.source.abilityPointsAgility[this.heroKind]=t;break;case y.Luck:this.data.source.abilityPointsLuck[this.heroKind]=t;break}}}class LD{constructor(t,i,r,h){o(this,"data");o(this,"heroKind");o(this,"kind");o(this,"point");o(this,"pointMultiplicativeMultiplier");this.data=t,this.heroKind=i,this.kind=r,this.pointMultiplicativeMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.point=new CD(this.data,i,r)}Point(){return Math.max(0,this.point.value*this.pointMultiplicativeMultiplier.Value())}}class PD{constructor(t,i){o(this,"data");o(this,"basicStats",Array(W.BasicStatsKind));o(this,"basicStatsPerLevel",Array(W.BasicStatsKind));o(this,"stats",Array(W.Stats));o(this,"optionEffectChance",Array(3));o(this,"hpRegenerate");o(this,"mpRegenerate");o(this,"skillSlotNum");o(this,"levelForEquipment");o(this,"monsterDamages",Array(W.MonsterSpecies));o(this,"elementDamages",Array(W.Element));o(this,"elementAbsoptions",Array(W.Element));o(this,"elementInvalids",Array(W.Element));o(this,"guardianKorInvalidDamageHpPercent",new $);o(this,"monsterDistinguishMaxLevel");o(this,"monsterCaptureMaxLevelIncrement");o(this,"guildExpGain");o(this,"movedDistance");o(this,"movedDistanceReset");o(this,"materialLootGain");o(this,"elementSlayerDamages",Array(W.Element));o(this,"debuffChances",Array(W.Debuff));o(this,"channeledMp");o(this,"summonPetSlot");o(this,"loyaltyPoingGain");o(this,"petExpGainPerDefeat");o(this,"summonPetATKMATKMultiplier");o(this,"summonPetSPDMoveSpeedMultiplier");o(this,"extraAfterDamage");o(this,"heroKind");o(this,"level");o(this,"exp");o(this,"abilities",Array(W.AbilityKind));o(this,"abilityPointLeft");this.data=t,this.heroKind=i,this.level=this.data.source.heroLevel[this.heroKind],this.abilityPointLeft=this.AbilityPointLeft(this.heroKind);for(let r=0;r<this.abilities.length;r++)this.abilities[r]=new LD(this.data,i,r,this.abilityPointLeft);this.SetStats()}AbilityPointLeft(t){return this.data.source.abilityPoints[t]}Start(){this.data.skill.skillCastSpeedModifier[this.heroKind].RegisterMultiplier(new u(n.SPD,s.Mul,()=>this.SkillCastSpeedFromSPD()))}SkillCastSpeedFromSPD(){let t=this.basicStats[6].Value();return t>1e7?t=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(9e5,.7)+Math.pow(9e6,.65)+Math.pow(t-1e7,.6):t>1e6?t=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(9e5,.7)+Math.pow(t-1e6,.65):t>1e5?t=1e3+Math.pow(9e3,.9)+Math.pow(9e4,.8)+Math.pow(t-1e5,.7):t>1e4?t=1e3+Math.pow(9e3,.9)+Math.pow(t-1e4,.8):t>1e3&&(t=1e3+Math.pow(t-1e3,.9)),f.getBaseLog(1.4+Math.max(0,t/5)/5e3,1.4)-1}Ability(t){return this.abilities[t]}AbilityStats(t){let i=ts.stats[this.heroKind][t];switch(t){case d.HP:i*=this.Ability(y.Vitality).Point();break;case d.MP:i*=(this.Ability(y.Agility).Point()+this.Ability(y.Intelligence).Point())/2;break;case d.ATK:i*=this.Ability(y.Strength).Point();break;case d.MATK:i*=this.Ability(y.Intelligence).Point();break;case d.DEF:i*=(this.Ability(y.Vitality).Point()+this.Ability(y.Strength).Point())/2;break;case d.MDEF:i*=(this.Ability(y.Vitality).Point()+this.Ability(y.Intelligence).Point())/2;break;case d.SPD:i*=this.Ability(y.Agility).Point();break}return i}Level(){return this.level}SetStats(){for(let t=0;t<this.basicStats.length;t++)this.basicStats[t]=new $(new u(n.Base,s.Add,()=>ts.baseStats[this.heroKind][t])),this.basicStats[t].RegisterMultiplier(new u(n.Ability,s.Add,()=>this.AbilityStats(t))),this.basicStats[t].numberType=gt.Normal,this.basicStats[t].name=d[t],this.basicStatsPerLevel[t]=new $,this.basicStats[t].RegisterMultiplier(new u(n.Rebirth,s.Add,()=>this.basicStatsPerLevel[t].Value()*this.Level()));for(let t=0;t<this.stats.length;t++)this.stats[t]=new $,this.stats[t].name=M.Stat(t);this.stats[0].maxValue=()=>.9,this.stats[1].maxValue=()=>.9,this.stats[2].maxValue=()=>.9,this.stats[3].maxValue=()=>.9,this.stats[4].maxValue=()=>.9,this.stats[0].minValue=()=>-1e100,this.stats[1].minValue=()=>-1e100,this.stats[2].minValue=()=>-1e100,this.stats[3].minValue=()=>-1e100,this.stats[4].minValue=()=>-1e100,this.stats[6].RegisterMultiplier(new u(n.Base,s.Add,()=>ts.baseStats[this.heroKind][7])),this.stats[6].RegisterMultiplier(new u(n.Ability,s.Add,()=>ts.stats[this.heroKind][7]*this.abilities[4].Point())),this.stats[7].RegisterMultiplier(new u(n.Base,s.Add,()=>ts.baseStats[this.heroKind][8])),this.stats[7].RegisterMultiplier(new u(n.Ability,s.Add,()=>ts.stats[this.heroKind][8]*this.abilities[4].Point())),this.stats[8].modifiers[0]=new u(n.Base,s.Add,()=>ts.baseStats[this.heroKind][9]),this.stats[9].maxValue=()=>1,this.stats[9].RegisterMultiplier(new u(n.Base,s.Add,()=>ts.baseStats[this.heroKind][10])),this.stats[9].RegisterMultiplier(new u(n.Ability,s.Add,()=>ts.stats[this.heroKind][10]*Math.pow(this.abilities[4].Point(),2/3))),this.stats[10].RegisterMultiplier(new u(n.Base,s.Add,()=>ts.baseStats[this.heroKind][11])),this.stats[10].RegisterMultiplier(new u(n.Ability,s.Add,()=>ts.stats[this.heroKind][11]*Math.pow(this.abilities[3].Point(),2/3))),this.stats[10].minValue=()=>50,this.stats[10].numberType=gt.Meter,this.stats[11].RegisterMultiplier(new u(n.Base,s.Add,()=>1)),this.stats[12].RegisterMultiplier(new u(n.Base,s.Add,()=>1)),this.stats[13].RegisterMultiplier(new u(n.Base,s.Add,()=>1)),this.stats[14].RegisterMultiplier(new u(n.Base,s.Add,()=>1)),this.stats[17].RegisterMultiplier(new u(n.Base,s.Add,()=>.025)),this.stats[18].RegisterMultiplier(new u(n.Base,s.Add,()=>.025)),this.stats[19].RegisterMultiplier(new u(n.Base,s.Add,()=>2)),this.stats[21].RegisterMultiplier(new u(n.Base,s.Add,()=>1));for(let t=0;t<this.optionEffectChance.length;t++)this.optionEffectChance[t]=new $(new u(n.Base,s.Add,()=>.01*Math.pow(.1,t))),this.optionEffectChance[t].maxValue=()=>1,this.optionEffectChance[t].RegisterMultiplier(new u(n.Ability,s.Add,()=>2e-4*Math.pow(.1,t*this.abilities[4].Point())));this.optionEffectChance[0].name="Equipment 1st Enchantment Slot Chance",this.optionEffectChance[1].name="Equipment 1st Enchantment Slot Chance",this.optionEffectChance[2].name="Equipment 1st Enchantment Slot Chance",this.hpRegenerate=new $(new u(n.Base,s.Add,()=>0),()=>this.basicStats[0].Value(),()=>0),this.mpRegenerate=new $(new u(n.Base,s.Add,()=>0),()=>this.basicStats[1].Value(),()=>0),this.hpRegenerate.name="HP Regeneration",this.mpRegenerate.name="MP Regeneration",this.hpRegenerate.numberType=gt.Normal,this.mpRegenerate.numberType=gt.Normal,this.skillSlotNum=new $(new u(n.Base,s.Add,()=>1)),this.levelForEquipment=new $(new u(n.Base,s.Add,()=>this.Level()));for(let t=0;t<this.monsterDamages.length;t++)this.monsterDamages[t]=new $(new u(n.Base,s.Add,()=>1)),this.monsterDamages[t].name=`Damage to ${M.MonsterSpeciesName(t)}`;for(let t=0;t<this.elementDamages.length;t++)this.elementDamages[t]=new $(new u(n.Base,s.Add,()=>1)),this.elementDamages[t].name=`${F[t]} Damage`,t==0?this.elementDamages[t].RegisterMultiplier(new u(n.ArmoredFury,s.Mul,()=>this.stats[15].Value()*Math.log2(Math.max(1,this.basicStats[4].Value())))):this.elementDamages[t].RegisterMultiplier(new u(n.WardedFury,s.Mul,()=>this.stats[16].Value()*Math.log2(Math.max(1,this.basicStats[5].Value()))));for(let t=0;t<this.elementAbsoptions.length;t++)this.elementAbsoptions[t]=new $(new u(n.Base,s.Add,()=>0),()=>.9,()=>0),this.elementAbsoptions[t].name=`${F[t]} Absorption`;for(let t=0;t<this.elementInvalids.length;t++)this.elementInvalids[t]=new $(new u(n.Base,s.Add,()=>0)),this.elementInvalids[t].name=`${F[t]} Nullify Chance`;this.guardianKorInvalidDamageHpPercent=new $,this.monsterDistinguishMaxLevel=new $,this.monsterCaptureMaxLevelIncrement=new $,this.materialLootGain=new $(new u(n.Base,s.Add,()=>1)),this.guildExpGain=new $(new u(n.Base,s.Add,()=>1)),this.guildExpGain.name="Guild EXP Gain";for(let t=0;t<this.debuffChances.length;t++)this.debuffChances[t]=new $;for(let t=0;t<this.elementSlayerDamages.length;t++)this.elementSlayerDamages[t]=new $;this.channeledMp=new $,this.loyaltyPoingGain=new $(new u(n.Base,s.Add,()=>1)),this.loyaltyPoingGain.name="Loyalty Point Gain",this.petExpGainPerDefeat=new $(new u(n.Base,s.Add,()=>1)),this.petExpGainPerDefeat.name="Pet EXP Gain",this.summonPetATKMATKMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.summonPetSPDMoveSpeedMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.extraAfterDamage=new $(new u(n.Base,s.Add,()=>0),()=>1e5,()=>0),this.extraAfterDamage.name="Extra After Damage"}}class DD{constructor(t){o(this,"data");o(this,"heroLevelIncrementLimit");o(this,"globalStats",Array(W.GlobalStats));o(this,"globalSkillSlotNum");o(this,"heroes",Array(W.HeroKind));o(this,"memoMaxTPGAmongHeroes");o(this,"memoMaxPetEXPGainAmongHeroes");this.data=t;for(let i=0;i<this.heroes.length;i++)this.heroes[i]=new PD(this.data,i);for(let i=0;i<this.globalStats.length;i++)this.globalStats[i]=new $;this.globalStats[0].RegisterMultiplier(new u(n.Base,s.Add,()=>1)),this.globalStats[0].name="Gold Gain",this.globalStats[1].name="Stone Gain",this.globalStats[2].name="Crystal Gain",this.globalStats[3].name="Leaf Gain",this.globalStats[1].numberType=gt.Normal,this.globalStats[2].numberType=gt.Normal,this.globalStats[3].numberType=gt.Normal,this.heroLevelIncrementLimit=new $(new u(n.Base,s.Add,()=>30))}Start(){for(let t=0;t<this.heroes.length;t++)this.heroes[t].Start()}get currentHero(){return this.heroes[this.data.source.currentHero]}GoldGain(){return this.globalStats[0]}ResourceGain(t){switch(t){case Y.Stone:return this.globalStats[1];case Y.Crystal:return this.globalStats[2];case Y.Leaf:return this.globalStats[3];default:return this.globalStats[1]}}Hero(t){return this.heroes[t]}BasicStats(t,i){return this.heroes[t].basicStats[i]}SetEffectBasicStats(t,i){for(let r=0;r<this.heroes.length;r++)this.BasicStats(r,t).RegisterMultiplier(i)}SetEffectStats(t,i){for(let r=0;r<this.heroes.length;r++)this.HeroStats(r,t).RegisterMultiplier(i)}BasicStatsPerLevel(t,i){return this.heroes[t].basicStatsPerLevel[i]}SetEffectBasicStatsPerLevel(t,i){for(let r=0;r<this.heroes.length;r++)this.BasicStatsPerLevel(r,t).RegisterMultiplier(i)}HeroStats(t,i){return this.heroes[t].stats[i]}ModifiedExpGain(t,i){return this.HeroStats(t,v.ExpGain).Value()/(1+this.data.area.expBonuses[this.data.battle[t].areaBattle.CurrentArea().kind].Value())*(1+this.data.area.expBonuses[i].Value())}SetEffectResourceGain(t){for(let i=0;i<W.ResourceKind;i++)this.ResourceGain(i).RegisterMultiplier(t)}SetEffectGuildExp(t){for(let i=0;i<this.heroes.length;i++)this.heroes[i].guildExpGain.RegisterMultiplier(t)}SetEffectLoyalityPointGain(t){for(let i=0;i<this.heroes.length;i++)this.heroes[i].loyaltyPoingGain.RegisterMultiplier(t)}SetEffectPetEXPGain(t){for(let i=0;i<this.heroes.length;i++)this.heroes[i].petExpGainPerDefeat.RegisterMultiplier(t)}OptionEffectChance(t,i){return this.heroes[t].optionEffectChance[i]}ElementResistance(t,i){switch(i){case F.Physical:return;case F.Fire:return this.heroes[t].stats[0];case F.Ice:return this.heroes[t].stats[1];case F.Thunder:return this.heroes[t].stats[2];case F.Light:return this.heroes[t].stats[3];case F.Dark:return this.heroes[t].stats[4];default:return}}SetEffectElementResistance(t){for(let i=0;i<W.HeroKind;i++)this.ElementResistance(i,F.Fire).RegisterMultiplier(t),this.ElementResistance(i,F.Ice).RegisterMultiplier(t),this.ElementResistance(i,F.Thunder).RegisterMultiplier(t),this.ElementResistance(i,F.Light).RegisterMultiplier(t),this.ElementResistance(i,F.Dark).RegisterMultiplier(t)}HpRegenerate(t){return this.heroes[t].hpRegenerate}MpRegenerate(t){return this.heroes[t].mpRegenerate}SkillSlotNum(t){return this.heroes[t].skillSlotNum}LevelForEquipment(t){return this.heroes[t].levelForEquipment}MonsterDamage(t,i){return this.heroes[t].monsterDamages[i]}ElementDamage(t,i){return this.heroes[t].elementDamages[i]}SetEffectElementDamage(t,i){for(let r=0;r<this.heroes.length;r++)this.ElementDamage(r,t).RegisterMultiplier(i)}SetEffectMagicalDamage(t){this.SetEffectElementDamage(F.Fire,t),this.SetEffectElementDamage(F.Ice,t),this.SetEffectElementDamage(F.Thunder,t),this.SetEffectElementDamage(F.Light,t),this.SetEffectElementDamage(F.Dark,t)}ElementAbsorption(t,i){return this.heroes[t].elementAbsoptions[i]}ElementInvalid(t,i){return this.heroes[t].elementInvalids[i]}MonsterDistinguishMaxLevel(t){return this.heroes[t].monsterDistinguishMaxLevel}MonsterCaptureMaxLevelIncrement(t){return this.heroes[t].monsterCaptureMaxLevelIncrement}MaterialLootGain(t){return this.heroes[t].materialLootGain}DebuffChance(t,i){return this.heroes[t].debuffChances[i]}ElementSlayerDamage(t,i){return this.heroes[t].elementSlayerDamages[i]}Ability(t,i){return this.heroes[t].abilities[i]}Level(t){return this.heroes[t].Level()}MaxPetEXPGainAmongHeroes(){if(this.memoMaxPetEXPGainAmongHeroes)return this.memoMaxPetEXPGainAmongHeroes;let t=0;for(let i=0;i<W.HeroKind;++i){let r=this.Hero(i).petExpGainPerDefeat.Value();r>t&&this.data.source.isActiveBattle[i]&&(t=r)}return this.memoMaxPetEXPGainAmongHeroes=t,t}MaxTPGAmongHeroes(){if(this.memoMaxTPGAmongHeroes)return this.memoMaxTPGAmongHeroes;let t=0;for(let i=0;i<W.HeroKind;i++){let r=this.Hero(i).stats[v.TamingPointGain].Value();r>t&&this.data.source.isActiveBattle[i]&&(t=r)}return this.memoMaxTPGAmongHeroes=t,t}TotalMovedDistance(){return 0}}class fs{constructor(t){o(this,"data");this.data=t}Start(){return this.SetEffect()}get level(){return this.data.source.sdGemLevels[this.kind]}set level(t){this.data.source.sdGemLevels[this.kind]=Math.min(t,this.maxLevel)}get kind(){return kt.Sunstone}get maxLevel(){return 10}RequiredExp(t){return 1e300}SetEffect(){}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 0}EffectValue(){return this.initEffectValue+this.effectIncrementPerLevel*this.level}NameString(){return M.SDGemString(this.kind).name}EffectValueString(){return M.SDGemString(this.kind,this.EffectValue()).description}}class yD extends fs{get kind(){return kt.Almandine}get maxLevel(){return 20}RequiredExp(t){return 864e6*Math.pow(10,t/10)}SetEffect(){return this.data.nitro.maxNitroSpeed.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .1}}class bD extends fs{get kind(){return kt.Amber}get maxLevel(){return 100}RequiredExp(t){return(864e4+864e4*t)*Math.pow(10,t/50)}SetEffect(){return this.data.area.SetEffectDungeonClearCount(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class TD extends fs{get kind(){return kt.BlueTourmaline}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEQLevel.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class GD extends fs{get kind(){return kt.Carnelian}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEffectIncrement.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class BD extends fs{get kind(){return kt.Diamond}get maxLevel(){return 100}RequiredExp(t){return t>=63?864e8*(1+.1*(t-63)):(1728e4+1728e4*t)*Math.pow(2,t/10)}SetEffect(){return this.data.potion.talismanPassiveEffectMultiplier.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class xD extends fs{get kind(){return kt.Emerald}get maxLevel(){return 1e3}RequiredExp(t){return 864e5+864e5*t}SetEffect(){return this.data.sdg.powerupPermEffectMultiplier.RegisterMultiplier(new u(n.SDGemRitual,s.Mul,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .01}}class FD extends fs{get kind(){return kt.Hackmanite}get maxLevel(){return 300}RequiredExp(t){return t>=157?864e8*(1+.025*(t-157)):(10800+10800*t)*Math.pow(2,t/10)}SetEffect(){return this.data.expedition.lowerLimitTime.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>-this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 2}}class _D extends fs{get kind(){return kt.Heliodor}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){return this.data.town.researchEffectMultipliers[1].RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class ID extends fs{get kind(){return kt.Kunzite}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.equipment.forgeEffectCapAdderEQEffect.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .1}}class VD extends fs{get kind(){return kt.Morganite}get maxLevel(){return 500}RequiredExp(t){return t>=181?864e8*(1+.01*(t-181)):(1800+1800*t)*Math.pow(2,t/10)}SetEffect(){return this.data.stats.heroLevelIncrementLimit.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class HD extends fs{get kind(){return kt.Obsidian}get maxLevel(){return 1e3}RequiredExp(t){return t>=599?864e8*(1+.01*(t-599)):(36e3+36e3*t)*Math.pow(2,t/50)}SetEffect(){return this.data.monster.monsterDefeatNumMultiplier.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return 1}}class qD extends fs{get kind(){return kt.Peridot}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){return this.data.town.researchEffectMultipliers[2].RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class ND extends fs{get kind(){return kt.Sunstone}get maxLevel(){return 1e3}RequiredExp(t){return t>=914?864e8*(1+.05*(t-914)):(300+300*t)*Math.pow(2,t/50)}SetEffect(){return this.data.stats.SetEffectGuildExp(new u(n.SDGemRitual,s.Mul,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class WD extends fs{get kind(){return kt.Tanzanite}get maxLevel(){return 1e3}RequiredExp(t){return t>=171?864e8*(1+.005*(t-171)):(3600+3600*t)*Math.pow(2,t/10)}SetEffect(){this.data.town.researchEffectMultipliers[0].RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .005}}class $D extends fs{get kind(){return kt.Turquoise}get maxLevel(){return 100}RequiredExp(t){return(36e5+36e5*t)*Math.pow(3,t/20)}SetEffect(){return this.data.expedition.rewardModifierPerHour.RegisterMultiplier(new u(n.SDGemRitual,s.Add,()=>this.EffectValue()))}get initEffectValue(){return 0}get effectIncrementPerLevel(){return .001}}class UD{constructor(t){o(this,"data");o(this,"sdGemList",[]);o(this,"progressSpeedModifier");this.data=t,this.progressSpeedModifier=new $(new u(n.Base,s.Add,()=>1)),this.sdGemList.push(new ND(this.data)),this.sdGemList.push(new VD(this.data)),this.sdGemList.push(new WD(this.data)),this.sdGemList.push(new _D(this.data)),this.sdGemList.push(new qD(this.data)),this.sdGemList.push(new HD(this.data)),this.sdGemList.push(new FD(this.data)),this.sdGemList.push(new $D(this.data)),this.sdGemList.push(new ID(this.data)),this.sdGemList.push(new GD(this.data)),this.sdGemList.push(new TD(this.data)),this.sdGemList.push(new bD(this.data)),this.sdGemList.push(new BD(this.data)),this.sdGemList.push(new yD(this.data)),this.sdGemList.push(new xD(this.data))}Start(){for(let t=0;t<this.sdGemList.length;t++)this.sdGemList[t].Start()}Gem(t){for(let i=0;i<this.sdGemList.length;i++)if(this.sdGemList[i].kind==t)return this.sdGemList[i];return null}}class Fe{constructor(t){o(this,"sdgCtrl");o(this,"effectValue");this.sdgCtrl=t}get sdUpgradeCtrl(){return this.sdgCtrl.upgradeCtrl}get kind(){return re.MorePowerups}get level(){return this.sdgCtrl.data.source.superDungeonUpgradeLevels[this.kind]}set level(t){this.sdgCtrl.data.source.superDungeonUpgradeLevels[this.kind]=Math.min(t,this.maxLevel)}Start(){this.SetEffect()}SetEffect(){}get maxLevel(){return 1}Cost(t){return 1e300}TotalCost(){let t=0;for(let i=0;i<this.level;i++)t+=this.Cost(i);return t}ModifiedCost(t){return this.Cost(t)*this.sdUpgradeCtrl.costReduction.Value()}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 0}EffectValue(t=this.level){return this.initEffectValue+t*this.incrementEffectValuePerLevel}IsActive(){return!0}NameString(){return M.SDUpgradeString(this.kind).name}EffectValueString(){const t=M.SDUpgradeString(this.kind,this.EffectValue());return t.description+" "+t.value}}class OD extends Fe{get kind(){return re.AlchemyPointGainMul}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class zD extends Fe{get kind(){return re.ArmoredFuryMultiplier}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.ArmoredFury,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class JD extends Fe{get kind(){return re.ATKMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.ATK,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class jD extends Fe{get kind(){return re.AutoBuyPowerups}get isAutomation(){return!0}Cost(t){return 30*Math.pow(5,t)}get maxLevel(){return 5}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class XD extends Fe{get kind(){return re.AutoDodge}get isAutomation(){return!0}Cost(t){return 50}SetEffect(){}get maxLevel(){return 1}}class QD extends Fe{get kind(){return re.AutoLeaveAndRetry}get isAutomation(){return!0}Cost(t){return 20}SetEffect(){}get maxLevel(){return 1}}class YD extends Fe{get kind(){return re.AutoProgress}get isAutomation(){return!0}Cost(t){return 10}get maxLevel(){return 1}}class ZD extends Fe{get kind(){return re.AutoUseRefreshTicket}get isAutomation(){return!0}Cost(t){return 100}get maxLevel(){return 1}}class KD extends Fe{get kind(){return re.BoostStartGoodRNG}Cost(t){return 1e5}get maxLevel(){return 1}}class ey extends Fe{get kind(){return re.CriticalDamageMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.CriticalDamage,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ty extends Fe{get kind(){return re.CrystalGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(Y.Crystal).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class sy extends Fe{get kind(){return re.CrystalResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[1].RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class iy extends Fe{constructor(){super(...arguments);o(this,"ó")}get kind(){return re.DamageToChallengeBossMultiplier}Cost(i){return(1e4+1e4*i)*Math.pow(2,i/5)}SetEffect(){for(let i=0;i<W.HeroKind;i++)this.sdgCtrl.data.stats.MonsterDamage(i,se.ChallengeBoss).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ay extends Fe{get kind(){return re.DamageToRegularMonstersMultiplier}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.stats.MonsterDamage(t,se.Slime).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.MagicSlime).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.Spider).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.Bat).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.Fairy).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.Fox).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.DevilFish).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.Treant).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.FlameTiger).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.MonsterDamage(t,se.Unicorn).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ry extends Fe{get kind(){return re.DebuffResistanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.DebuffRes,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ly extends Fe{get kind(){return re.DEFMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.DEF,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ny extends Fe{get kind(){return re.ElementResistanceMultiplier}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){this.sdgCtrl.data.stats.SetEffectStats(v.FireRes,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(v.IceRes,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(v.ThunderRes,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(v.LightRes,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectStats(v.DarkRes,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class uy extends Fe{get kind(){return re.EquipmentProficiencyGainMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/15)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class hy extends Fe{get kind(){return re.FameGain}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/10)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.superStats.Hero(t).fameGain.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class cy extends Fe{get kind(){return re.FlexibleDodge}get isAutomation(){return!0}Cost(t){return 5}SetEffect(){}get maxLevel(){return 1}}class oy extends Fe{get kind(){return re.GoldCap}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.resource.goldCap.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class fy extends Fe{get kind(){return re.GoldGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.GoldGain().RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class py extends Fe{get kind(){return re.GuildEXPGainMul}Cost(t){return(1e4+1e4*t)*Math.pow(2,t/5)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectGuildExp(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .001}}class dy extends Fe{get kind(){return re.HeroExpGainMul}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.ExpGain,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}}class gy extends Fe{get kind(){return re.HPMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.HP,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Sy extends Fe{get kind(){return re.LeafGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(Y.Leaf).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class my extends Fe{get kind(){return re.LeafResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[2].RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class My extends Fe{get kind(){return re.LeaveAndRetry}get isAutomation(){return!0}Cost(t){return 1}get maxLevel(){return 1}}class Ey extends Fe{get kind(){return re.LoyaltyPointGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectLoyalityPointGain(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class vy extends Fe{get kind(){return re.MagicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.MagCritChance,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class wy extends Fe{get kind(){return re.MagicalDamageMultiplier}Cost(t){return(1500+1500*t)*Math.pow(2,t/10)}SetEffect(){this.sdgCtrl.data.stats.SetEffectElementDamage(F.Fire,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(F.Ice,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(F.Thunder,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(F.Light,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue())),this.sdgCtrl.data.stats.SetEffectElementDamage(F.Dark,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class ky extends Fe{get kind(){return re.MATKMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.MATK,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Ay extends Fe{get kind(){return re.MDEFMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.MDEF,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Ry extends Fe{get kind(){return re.MorePowerups}Cost(t){return 100*Math.pow(1e3,t)}SetEffect(){return this.sdgCtrl.powerupShowNum.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue()))}get maxLevel(){return 3}get initEffectValue(){return 2}get incrementEffectValuePerLevel(){return 1}}class Cy extends Fe{get kind(){return re.MPMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.MP,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Ly extends Fe{get kind(){return re.PetCriticalDamageMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.PetCriticalDamage,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Py extends Fe{get kind(){return re.PetDebuffResistanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.PetDebuffResistance,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Dy extends Fe{get kind(){return re.PetEXPGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectPetEXPGain(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class yy extends Fe{get kind(){return re.PetMagicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.PetMagCritChance,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class by extends Fe{get kind(){return re.PetPhysicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.PetPhysCritChance,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Ty extends Fe{get kind(){return re.PhysicalCriticalChanceMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.PhysCritChance,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Gy extends Fe{get kind(){return re.PhysicalDamageMultiplier}Cost(t){return(1500+1500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectElementDamage(F.Physical,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class By extends Fe{get kind(){return re.PowerupFilterSlot}get isAutomation(){return!0}Cost(t){return 10*Math.pow(3,t)}SetEffect(){return this.sdgCtrl.powerupFilterSlot.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue()))}get maxLevel(){return 5}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class xy extends Fe{get kind(){return re.SDArmoredFury}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDUpgrade1]}}class Fy extends Fe{get kind(){return re.SDChallengeBossDamageCutMultiplier}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDUpgrade1]}}class _y extends Fe{get kind(){return re.SDChallengeBossDamageMultiplier}Cost(t){return(50+50*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDUpgrade1]}}class Iy extends Fe{get kind(){return re.SDDamageCutMultiplier}Cost(t){return(20+20*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDUpgrade1]}}class Vy extends Fe{get kind(){return re.SDDamageMultiplier}Cost(t){return(10+10*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDUpgrade1]}}class Hy extends Fe{get kind(){return re.SDDungeonCoinBoostStart}Cost(t){return(500+500*t)*Math.pow(2,t/5)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.initialDungeonCoin.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 5}}class qy extends Fe{get kind(){return re.SDMPGainEveryFloor}Cost(t){return(200+200*t)*Math.pow(2,t/5)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.mpChargePercentEveryFloor.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue()))}get maxLevel(){return 100}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}}class Ny extends Fe{get kind(){return re.SDPowerupBoostStart}Cost(t){return 5e4}SetEffect(){}get maxLevel(){return 1}}class Wy extends Fe{get kind(){return re.SDUpgreadeSuperQueue}get isAutomation(){return!0}Cost(t){return 40*Math.pow(5,t)}SetEffect(){return this.sdUpgradeCtrl.availableSuperQueue.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue()))}get maxLevel(){return 3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return 1}}class $y extends Fe{get kind(){return re.SDWardedFury}Cost(t){return(100+100*t)*Math.pow(2,t/20)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.sdgCtrl.data.battles[t].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.SDUpgrade,s.Add,()=>this.EffectValue(),()=>this.IsActive()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .01}IsActive(){return!this.sdgCtrl.data.source.isActiveSdModifiers[950+bt.RemoveSDUpgrade1]}}class Uy extends Fe{get kind(){return re.SkillProficiencyGainMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/15)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Oy extends Fe{get kind(){return re.SlimeCoinCap}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .05}}class zy extends Fe{get kind(){return re.SPDMultiplier}Cost(t){return(500+500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectBasicStats(d.SPD,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Jy extends Fe{get kind(){return re.StoneGainMul}Cost(t){return(1e3+1e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.ResourceGain(Y.Stone).RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .25}}class jy extends Fe{get kind(){return re.StoneResearchPowerMul}Cost(t){return(2500+2500*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.town.researchPower[0].RegisterMultiplier(new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .1}}class Xy extends Fe{get kind(){return re.TamingPointGainMul}Cost(t){return(5e3+5e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.TamingPointGain,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Qy extends Fe{get kind(){return re.WardedFuryMultiplier}Cost(t){return(2e3+2e3*t)*Math.pow(2,t/10)}SetEffect(){return this.sdgCtrl.data.stats.SetEffectStats(v.WardedFury,new u(n.SDUpgrade,s.Mul,()=>this.EffectValue()))}get maxLevel(){return 1e3}get initEffectValue(){return 0}get incrementEffectValuePerLevel(){return .025}}class Yy{constructor(t){o(this,"sdgCtrl");o(this,"automationList",[]);o(this,"upgrade1ist",[]);o(this,"upgrade2ist",[]);o(this,"upgrade3ist",[]);o(this,"upgrade4ist",[]);o(this,"upgradeList",[]);o(this,"upgradeListArray",[]);o(this,"costReduction");o(this,"availableSuperQueue");this.sdgCtrl=t,this.availableSuperQueue=new $,this.SetUpgrade(),this.costReduction=new $(new u(n.Base,s.Add,()=>0),()=>.99,null)}SetUpgrade(){this.automationList.push(new My(this.sdgCtrl)),this.automationList.push(new YD(this.sdgCtrl)),this.automationList.push(new QD(this.sdgCtrl)),this.automationList.push(new jD(this.sdgCtrl)),this.automationList.push(new ZD(this.sdgCtrl)),this.automationList.push(new By(this.sdgCtrl)),this.automationList.push(new cy(this.sdgCtrl)),this.automationList.push(new XD(this.sdgCtrl)),this.automationList.push(new Wy(this.sdgCtrl)),this.upgrade1ist.push(new Vy(this.sdgCtrl)),this.upgrade1ist.push(new Iy(this.sdgCtrl)),this.upgrade1ist.push(new _y(this.sdgCtrl)),this.upgrade1ist.push(new Fy(this.sdgCtrl)),this.upgrade1ist.push(new xy(this.sdgCtrl)),this.upgrade1ist.push(new $y(this.sdgCtrl)),this.upgrade1ist.push(new Ry(this.sdgCtrl)),this.upgrade1ist.push(new qy(this.sdgCtrl)),this.upgrade1ist.push(new Hy(this.sdgCtrl)),this.upgrade1ist.push(new Ny(this.sdgCtrl)),this.upgrade1ist.push(new KD(this.sdgCtrl)),this.upgrade1ist.push(new hy(this.sdgCtrl)),this.upgrade2ist.push(new dy(this.sdgCtrl)),this.upgrade2ist.push(new oy(this.sdgCtrl)),this.upgrade2ist.push(new fy(this.sdgCtrl)),this.upgrade2ist.push(new Jy(this.sdgCtrl)),this.upgrade2ist.push(new ty(this.sdgCtrl)),this.upgrade2ist.push(new Sy(this.sdgCtrl)),this.upgrade2ist.push(new Oy(this.sdgCtrl)),this.upgrade3ist.push(new gy(this.sdgCtrl)),this.upgrade3ist.push(new Cy(this.sdgCtrl)),this.upgrade3ist.push(new JD(this.sdgCtrl)),this.upgrade3ist.push(new ky(this.sdgCtrl)),this.upgrade3ist.push(new ly(this.sdgCtrl)),this.upgrade3ist.push(new Ay(this.sdgCtrl)),this.upgrade3ist.push(new zy(this.sdgCtrl)),this.upgrade3ist.push(new Ty(this.sdgCtrl)),this.upgrade3ist.push(new vy(this.sdgCtrl)),this.upgrade3ist.push(new ey(this.sdgCtrl)),this.upgrade3ist.push(new Gy(this.sdgCtrl)),this.upgrade3ist.push(new wy(this.sdgCtrl)),this.upgrade3ist.push(new zD(this.sdgCtrl)),this.upgrade3ist.push(new Qy(this.sdgCtrl)),this.upgrade3ist.push(new ny(this.sdgCtrl)),this.upgrade3ist.push(new ry(this.sdgCtrl)),this.upgrade3ist.push(new by(this.sdgCtrl)),this.upgrade3ist.push(new yy(this.sdgCtrl)),this.upgrade3ist.push(new Ly(this.sdgCtrl)),this.upgrade3ist.push(new Py(this.sdgCtrl)),this.upgrade4ist.push(new ay(this.sdgCtrl)),this.upgrade4ist.push(new iy(this.sdgCtrl)),this.upgrade4ist.push(new Uy(this.sdgCtrl)),this.upgrade4ist.push(new uy(this.sdgCtrl)),this.upgrade4ist.push(new py(this.sdgCtrl)),this.upgrade4ist.push(new Xy(this.sdgCtrl)),this.upgrade4ist.push(new Dy(this.sdgCtrl)),this.upgrade4ist.push(new Ey(this.sdgCtrl)),this.upgrade4ist.push(new OD(this.sdgCtrl)),this.upgrade4ist.push(new jy(this.sdgCtrl)),this.upgrade4ist.push(new sy(this.sdgCtrl)),this.upgrade4ist.push(new my(this.sdgCtrl)),this.upgradeList=[...this.automationList,...this.upgrade1ist,...this.upgrade2ist,...this.upgrade3ist,...this.upgrade4ist],this.upgradeListArray[0]=this.automationList,this.upgradeListArray[1]=this.upgrade1ist,this.upgradeListArray[2]=this.upgrade2ist,this.upgradeListArray[3]=this.upgrade3ist,this.upgradeListArray[4]=this.upgrade4ist}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start()}Upgrade(t){for(let i=0;i<this.upgradeList.length;i++)if(this.upgradeList[i].kind==t)return this.upgradeList[i];return this.upgradeList[0]}}class Zy{constructor(t,i){o(this,"data");o(this,"id");this.data=t,this.id=i}get sdgCtrl(){return this.data.sdg}get purchasedNum(){return this.data.source.superDungeonShopPurchasedNums[this.id]}set purchasedNum(t){this.data.source.superDungeonShopPurchasedNums[this.id]=Math.min(this.maxLevel,t)}get effectValue(){return this.EffectValue(this.purchasedNum)}get maxLevel(){return 1}Start(){this.SetEffect()}SetEffect(){}RubyCost(t){return 1}EffectValue(t){return t}NameString(){return M.SDShopNameString(this.id)}EffectValueString(){return M.SDShopEffectValueString(this.id,this.EffectValue(this.purchasedNum),this.EffectValue(1),this.data.equipment.ArtifactEffectMultiplier())}}class ni extends Zy{constructor(t,i){super(t,i)}EffectValue(t){return t}get effectValue(){return this.EffectValue(this.purchasedNum)}get maxLevel(){return 1}}var Ha;class Ky extends ni{constructor(i,r){super(i,r);Ks(this,Ha,void 0);ei(this,Ha,i)}RubyCost(i){return 5+i*5}get maxLevel(){return 1e3}EffectValue(i){return .001*i}SetEffect(){return fe(this,Ha).equipment.effectMultiplierModifierForArtifact.RegisterMultiplier(new u(n.SDShop,s.Add,()=>this.effectValue))}}Ha=new WeakMap;var qa;class eb extends ni{constructor(i,r){super(i,r);Ks(this,qa,void 0);ei(this,qa,i)}RubyCost(i){return 5}get maxLevel(){return 1e3}EffectValue(i){return .1*i}SetEffect(){return fe(this,qa).resource.goldCap.RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue))}}qa=new WeakMap;class tb extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 5}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.GoldGain().RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue))}}class sb extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .01*t}SetEffect(){return this.data.stats.SetEffectGuildExp(new u(n.SDShop,s.Mul,()=>this.effectValue))}}class ib extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.SetEffectLoyalityPointGain(new u(n.SDShop,s.Mul,()=>this.effectValue))}}class ab extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .2*t}SetEffect(){this.data.town.researchPower[0].RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue)),this.data.town.researchPower[1].RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue)),this.data.town.researchPower[2].RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue))}}class rb extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .05*t}SetEffect(){return this.data.challenge.sdStatRewardMultiplier.RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue))}}class lb extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 5}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.SDShop,s.Mul,()=>this.effectValue))}}class nb extends ni{constructor(t,i){super(t,i)}RubyCost(t){return 10}get maxLevel(){return 1e3}EffectValue(t){return .1*t}SetEffect(){return this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.SDShop,s.Mul,()=>this.effectValue))}}class ub{constructor(t){o(this,"data");o(this,"itemList",[]);o(this,"itemStatBonusList",[]);o(this,"rubyConverterPieceOfRubyCost");o(this,"pieceOfRubyConverterPieceOfRubyGain");this.data=t,this.rubyConverterPieceOfRubyCost=new $(new u(n.Base,s.Add,()=>5e4)),this.pieceOfRubyConverterPieceOfRubyGain=new $(new u(n.Base,s.Add,()=>5e3))}Start(){this.SetItem();for(let t=0;t<this.itemList.length;t++)this.itemList[t].Start()}SetItem(){this.itemStatBonusList.push(new Ky(this.data,27)),this.itemStatBonusList.push(new rb(this.data,57)),this.itemStatBonusList.push(new eb(this.data,58)),this.itemStatBonusList.push(new tb(this.data,59)),this.itemStatBonusList.push(new lb(this.data,60)),this.itemStatBonusList.push(new sb(this.data,61)),this.itemStatBonusList.push(new nb(this.data,62)),this.itemStatBonusList.push(new ib(this.data,63)),this.itemStatBonusList.push(new ab(this.data,64)),this.itemList=[...this.itemStatBonusList]}Item(t){for(let i=0;i<this.itemList.length;i++)if(this.itemList[i].id==t)return this.itemList[i];return null}}class hb{constructor(t){o(this,"data");this.data=t}Total(){return this.data.source.maxModifierCleareds.reduce((t,i)=>t+i,0)}Start(){this.SetModifierMilestones()}isCleared(t){return this.Total()>=t}SetModifierMilestones(){this.data.sdg.upgradeCtrl.availableSuperQueue.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(10))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(30))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(60))),this.data.sdg.powerupFilterLoadoutSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(100))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(110))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(130))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(150))),this.data.sdg.lootGainOnDie.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>.25,()=>this.isCleared(170))),this.data.sdg.PowerupEffectMultiplier(Ae.DamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(180))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(240))),this.data.sdg.powerupMaxRank.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>25,()=>this.isCleared(300))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(320))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(360))),this.data.sdg.PowerupEffectMultiplier(Ae.PhysicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(400))),this.data.sdg.PowerupEffectMultiplier(Ae.MagicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(420))),this.data.sdg.modifierLoadoutSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(440))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(480))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(500))),this.data.sdg.PowerupEffectMultiplier(Ae.CriticalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(550))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(600))),this.data.sdg.PowerupEffectMultiplier(Ae.PhysicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(625))),this.data.sdg.PowerupEffectMultiplier(Ae.MagicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(650))),this.data.sdg.PowerupEffectMultiplier(Ae.DamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(675))),this.data.sdg.PowerupEffectMultiplier(Ae.ChallengeBossDamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(700))),this.data.sdg.powerupMaxRank.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>25,()=>this.isCleared(725))),this.data.sdg.PowerupEffectMultiplier(Ae.DamageCutMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(825))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(875))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(900))),this.data.sdg.PowerupEffectMultiplier(Ae.DungeonCoinGain).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(925))),this.data.sdg.upgradeCtrl.availableSuperQueue.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(950))),this.data.sdg.PowerupEffectMultiplier(Ae.ChallengeBossDamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(975))),this.data.quest.sdRefreshTicketFromDailyQuest.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(1e3))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(1025))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(1050))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(1075))),this.data.sdg.PowerupEffectMultiplier(Ae.FameGain).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(1100))),this.data.sdg.PowerupEffectMultiplier(Ae.PhysicalAbsorption).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(1125))),this.data.sdg.PowerupEffectMultiplier(Ae.MagicalAbsorption).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(1150))),this.data.sdg.PowerupEffectMultiplier(Ae.SkillCastSpeed).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(1175))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(1225))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(1275))),this.data.sdg.PowerupEffectMultiplier(Ae.SkillHitCount).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(1300))),this.data.sdg.PowerupEffectMultiplier(Ae.ExtraAfterDamage).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(1325))),this.data.sdg.PowerupEffectMultiplier(Ae.PhysicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1350))),this.data.sdg.PowerupEffectMultiplier(Ae.MagicalDamage).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1375))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(1425))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(1475))),this.data.sdg.PowerupEffectMultiplier(Ae.PhysicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1550))),this.data.sdg.PowerupEffectMultiplier(Ae.MagicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1575))),this.data.sdg.powerupFilterSlot.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(1600))),this.data.sdg.shopCtrl.pieceOfRubyConverterPieceOfRubyGain.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>500,()=>this.isCleared(1625))),this.data.sdg.PowerupEffectMultiplier(Ae.DungeonCoinGain).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1650))),this.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>-1e3,()=>this.isCleared(1675))),this.data.sdg.PowerupEffectMultiplier(Ae.FameGain).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1750))),this.data.sdg.PowerupEffectMultiplier(Ae.DamageCutMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.3,()=>this.isCleared(1850))),this.data.sdg.PowerupEffectMultiplier(Ae.DamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.5,()=>this.isCleared(1900))),this.data.sdg.PowerupEffectMultiplier(Ae.EquipmentDropChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.2,()=>this.isCleared(2100))),this.data.sdg.PowerupEffectMultiplier(Ae.ChallengeBossDamageMultiplier).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.5,()=>this.isCleared(2200))),this.data.sdg.PowerupEffectMultiplier(Ae.PhysicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.5,()=>this.isCleared(2250))),this.data.sdg.PowerupEffectMultiplier(Ae.MagicalCriticalChance).RegisterMultiplier(new u(n.SDModifierMilestone,s.Mul,()=>.5,()=>this.isCleared(2300))),this.data.quest.sdRefreshTicketFromDailyQuest.RegisterMultiplier(new u(n.SDModifierMilestone,s.Add,()=>1,()=>this.isCleared(3e3)))}}class cb{constructor(t){o(this,"data");o(this,"dungeonCoinGain");o(this,"dungeonCoinBonus");o(this,"powerupShowNum");o(this,"dodgeTimesec");o(this,"additionalTimeLimit");o(this,"lootGainOnDie");o(this,"modifierMilestoneCtrl");o(this,"modifierLoadoutSlot");o(this,"shopCtrl");o(this,"sdGemRitualCtrl");o(this,"powerupMaxRank");o(this,"powerupFilterSlot");o(this,"powerupFilterLoadoutSlot");o(this,"powerupEffectMultiplier",Array(W.SuperDungeonPowerupKind));o(this,"powerupPermEffectMultiplier");o(this,"autoBuyPowerupsTimesEveryFloor");o(this,"upgradeCtrl");this.data=t,this.dungeonCoinGain=new $(new u(n.Base,s.Add,()=>1)),this.dungeonCoinGain.name="Dungeon Coin Gain",this.dungeonCoinBonus=new $,this.dodgeTimesec=new $(new u(n.Base,s.Add,()=>10)),this.powerupShowNum=new $(new u(n.Base,s.Add,()=>1),()=>5,()=>2),this.autoBuyPowerupsTimesEveryFloor=new $,this.additionalTimeLimit=new $,this.lootGainOnDie=new $,this.powerupMaxRank=new $(new u(n.Base,s.Add,()=>50)),this.powerupFilterSlot=new $,this.powerupFilterLoadoutSlot=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<this.powerupEffectMultiplier.length;i++)this.powerupEffectMultiplier[i]=new $(new u(n.Base,s.Add,()=>1));this.powerupPermEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.upgradeCtrl=new Yy(this),this.shopCtrl=new ub(this.data),this.sdGemRitualCtrl=new UD(this.data),this.modifierMilestoneCtrl=new hb(this.data),this.modifierLoadoutSlot=new $(new u(n.Base,s.Add,()=>1))}SetPowerupGlobalEffect(){for(let t=0;t<W.SuperDungeonPowerupKind;t++)this.data.battle.superDungeonCtrl.powerupList[t].SetGlobalEffect()}Start(){this.shopCtrl.Start(),this.upgradeCtrl.Start(),this.sdGemRitualCtrl.Start(),this.SetPowerupGlobalEffect(),this.modifierMilestoneCtrl.Start()}PowerupEffectMultiplier(t){return this.powerupEffectMultiplier[t]}SetEffectSDDamageMultiplier(t){for(let i=0;i<W.HeroKind;i++)this.data.battles[i].superDungeonCtrl.damageMultiplier.RegisterMultiplier(t)}SetEffectSDDamageCutMultiplier(t){for(let i=0;i<W.HeroKind;i++)this.data.battles[i].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(t)}SetEffectSDChallengeBossDamageMultiplier(t){for(let i=0;i<W.HeroKind;i++)this.data.battles[i].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(t)}SetEffectSDChallengeBossDamageCutMultiplier(t){for(let i=0;i<W.HeroKind;i++)this.data.battles[i].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(t)}SetEffectSDArmoredFuryMultiplier(t){for(let i=0;i<W.HeroKind;i++)this.data.battles[i].superDungeonCtrl.armoredFury.RegisterMultiplier(t)}SetEffectSDWardedFuryMultiplier(t){for(let i=0;i<W.HeroKind;i++)this.data.battles[i].superDungeonCtrl.wardedFury.RegisterMultiplier(t)}}class ob{constructor(t,i,r){o(this,"data");o(this,"heroKind");o(this,"kind");this.data=t,this.heroKind=i,this.kind=r}get value(){switch(this.kind){case y.Vitality:return this.data.source.superAbilityPointsVitality[this.heroKind];case y.Strength:return this.data.source.superAbilityPointsStrength[this.heroKind];case y.Intelligence:return this.data.source.superAbilityPointsIntelligence[this.heroKind];case y.Agility:return this.data.source.superAbilityPointsAgility[this.heroKind];case y.Luck:return this.data.source.superAbilityPointsLuck[this.heroKind];default:return 0}}Point(){return this.value}}class fb{constructor(t,i){o(this,"data");o(this,"heroKind");o(this,"superAbilities",Array(W.AbilityKind));o(this,"fameGain");o(this,"timecountSec");this.data=t,this.heroKind=i,this.fameGain=new $(new u(n.Base,s.Add,()=>1)),this.fameGain.name="Fame Gain";for(let r=0;r<this.superAbilities.length;r++)this.superAbilities[r]=new ob(this.data,i,r)}get grade(){return this.data.source.heroGrade[this.heroKind]}Start(){this.SetStats(),this.SetGradeMilestone()}SuperAbility(t){return this.superAbilities[t]}SetStats(){for(let t=0;t<W.BasicStatsKind;t++)this.SetBasicStats(t);this.data.stats.HeroStats(this.heroKind,v.PhysCritChance).RegisterMultiplier(new u(n.SuperAbility,s.Mul,()=>.01*this.SuperAbility(y.Luck).Point())),this.data.stats.HeroStats(this.heroKind,v.PhysCritChance).RegisterMultiplier(new u(n.SuperAbility,s.After,()=>ts.stats[this.heroKind][7]*this.SuperAbility(y.Luck).Point())),this.data.stats.HeroStats(this.heroKind,v.MagCritChance).RegisterMultiplier(new u(n.SuperAbility,s.Mul,()=>.01*this.SuperAbility(y.Luck).Point())),this.data.stats.HeroStats(this.heroKind,v.MagCritChance).RegisterMultiplier(new u(n.SuperAbility,s.After,()=>ts.stats[this.heroKind][8]*this.SuperAbility(y.Luck).Point())),this.data.stats.HeroStats(this.heroKind,v.CriticalDamage).RegisterMultiplier(new u(n.SuperAbility,s.Mul,()=>.01*(this.SuperAbility(y.Agility).Point()+this.SuperAbility(y.Luck).Point())/2)),this.data.stats.HeroStats(this.heroKind,v.CriticalDamage).RegisterMultiplier(new u(n.SuperAbility,s.After,()=>1e-4*(this.SuperAbility(y.Agility).Point()+this.SuperAbility(y.Luck).Point())/2)),this.data.stats.HeroStats(this.heroKind,v.MoveSpeed).RegisterMultiplier(new u(n.SuperAbility,s.Mul,()=>.01*this.SuperAbility(y.Agility).Point())),this.data.stats.HeroStats(this.heroKind,v.MoveSpeed).RegisterMultiplier(new u(n.SuperAbility,s.After,()=>ts.stats[this.heroKind][11]*Math.pow(this.SuperAbility(y.Agility).Point(),2/3)))}SetBasicStats(t){let i=new u(n.SuperAbility,s.Mul,()=>this.BasicStatsIncrementMul(t));this.data.stats.BasicStats(this.heroKind,t).RegisterMultiplier(i);let r=new u(n.SuperAbility,s.After,()=>this.BasicStatsIncrementAfter(t));this.data.stats.BasicStats(this.heroKind,t).RegisterMultiplier(r)}BasicStatsIncrementBase(t){switch(t){case d.HP:return this.SuperAbility(y.Vitality).Point();case d.MP:return this.SuperAbility(y.Agility).Point()+this.SuperAbility(y.Intelligence).Point();case d.ATK:return this.SuperAbility(y.Strength).Point();case d.MATK:return this.SuperAbility(y.Intelligence).Point();case d.DEF:return(this.SuperAbility(y.Vitality).Point()+this.SuperAbility(y.Strength).Point())/2;case d.MDEF:return(this.SuperAbility(y.Vitality).Point()+this.SuperAbility(y.Intelligence).Point())/2;case d.SPD:return this.SuperAbility(y.Agility).Point();default:return 0}}BasicStatsIncrementMul(t){return this.BasicStatsIncrementBase(t)*.01}BasicStatsIncrementAfter(t){return this.BasicStatsIncrementBase(t)*ts.stats[this.heroKind][t]}SetGradeMilestone(){this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=10)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=20)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.2,()=>this.grade>=30)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=40)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.2,()=>this.grade>=50)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=60)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.2,()=>this.grade>=70)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=80)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.3,()=>this.grade>=90)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=100)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.3,()=>this.grade>=110)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=120)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.3,()=>this.grade>=130)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=140)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.4,()=>this.grade>=150)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.4,()=>this.grade>=160)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.4,()=>this.grade>=170)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.1,()=>this.grade>=180)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.1,()=>this.grade>=190)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.1,()=>this.grade>=200)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=210)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.5,()=>this.grade>=220)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.5,()=>this.grade>=230)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.5,()=>this.grade>=240)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.2,()=>this.grade>=250)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.2,()=>this.grade>=260)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.2,()=>this.grade>=270)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=280)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.6,()=>this.grade>=290)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.6,()=>this.grade>=300)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.6,()=>this.grade>=310)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.3,()=>this.grade>=320)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.3,()=>this.grade>=330)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.3,()=>this.grade>=340)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=350)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.7,()=>this.grade>=360)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.7,()=>this.grade>=370)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.7,()=>this.grade>=380)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.4,()=>this.grade>=390)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.4,()=>this.grade>=400)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.4,()=>this.grade>=410)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=420)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.8,()=>this.grade>=430)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.8,()=>this.grade>=440)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.8,()=>this.grade>=450)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.5,()=>this.grade>=460)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.5,()=>this.grade>=470)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.5,()=>this.grade>=480)),this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=490)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.9,()=>this.grade>=500)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.9,()=>this.grade>=510)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.9,()=>this.grade>=520)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.6,()=>this.grade>=530)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.6,()=>this.grade>=540)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.6,()=>this.grade>=550)),this.data.battles[this.heroKind].superDungeonCtrl.skillSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=560)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1,()=>this.grade>=570)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1,()=>this.grade>=580)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1,()=>this.grade>=590)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.7,()=>this.grade>=600)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.7,()=>this.grade>=610)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.7,()=>this.grade>=620)),this.data.battles[this.heroKind].superDungeonCtrl.eqWeaponSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=630)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1.25,()=>this.grade>=640)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1.25,()=>this.grade>=650)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1.25,()=>this.grade>=660)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.8,()=>this.grade>=670)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.8,()=>this.grade>=680)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.8,()=>this.grade>=690)),this.data.battles[this.heroKind].superDungeonCtrl.eqArmorSlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=700)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1.5,()=>this.grade>=710)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1.5,()=>this.grade>=720)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1.5,()=>this.grade>=730)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.9,()=>this.grade>=740)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.9,()=>this.grade>=750)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>.9,()=>this.grade>=760)),this.data.battles[this.heroKind].superDungeonCtrl.eqJewelrySlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=770)),this.data.battles[this.heroKind].superDungeonCtrl.damageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>2,()=>this.grade>=780)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>2,()=>this.grade>=790)),this.data.battles[this.heroKind].superDungeonCtrl.damageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>2,()=>this.grade>=800)),this.data.battles[this.heroKind].superDungeonCtrl.sdChallengeBossDamageCutMultiplier.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1,()=>this.grade>=810)),this.data.battles[this.heroKind].superDungeonCtrl.armoredFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1,()=>this.grade>=820)),this.data.battles[this.heroKind].superDungeonCtrl.wardedFury.RegisterMultiplier(new u(n.GradeMilestone,s.Mul,()=>1,()=>this.grade>=830)),this.data.battles[this.heroKind].superDungeonCtrl.utilitySlotNum.RegisterMultiplier(new u(n.GradeMilestone,s.Add,()=>1,()=>this.grade>=840))}GradeForEquipment(){return this.grade}}class pb{constructor(t){o(this,"data");o(this,"heroes",Array(W.HeroKind));this.data=t;for(let i=0;i<this.heroes.length;i++)this.heroes[i]=new fb(this.data,i)}Start(){for(let t=0;t<this.heroes.length;t++)this.heroes[t].Start()}Hero(t){return this.heroes[t]}get currentHero(){return this.heroes[this.data.source.currentHero]}}class Kr{constructor(t,i){o(this,"data");o(this,"building");o(this,"kind");o(this,"townCtrl");this.data=t.data,this.townCtrl=t.townCtrl,this.building=t,this.kind=i}get level(){switch(this.kind){case Y.Stone:return this.data.source.buildingResearchLevelsStone[this.building.kind];case Y.Crystal:return this.data.source.buildingResearchLevelsCrystal[this.building.kind];case Y.Leaf:return this.data.source.buildingResearchLevelsLeaf[this.building.kind];default:return 0}}set level(t){switch(this.kind){case Y.Stone:this.data.source.buildingResearchLevelsStone[this.building.kind]=Math.min(this.building.Level(),t);break;case Y.Crystal:this.data.source.buildingResearchLevelsCrystal[this.building.kind]=Math.min(this.building.Level(),t);break;case Y.Leaf:this.data.source.buildingResearchLevelsLeaf[this.building.kind]=Math.min(this.building.Level(),t);break}}get researchMul(){return this.townCtrl.researchEffectMultipliers[this.kind].Value()}}class _s{constructor(t){o(this,"data");o(this,"townCtrl");o(this,"kind");o(this,"rank");o(this,"level");o(this,"levelBonus");o(this,"research",[]);this.data=t,this.level=this.data.source.buildingLevels,this.townCtrl=this.data.town,this.levelBonus=new $,this.research[0]=new Kr(this,Y.Stone),this.research[1]=new Kr(this,Y.Crystal),this.research[2]=new Kr(this,Y.Leaf),this.SetEffect(),this.SetResearch()}NameString(){return M.BuildingString(this.kind)}Rank(){return this.rank.value}ResearchLevel(t){return this.research[t].level}ResearchMul(t){return this.research[t].researchMul}Level(){return this.level[this.kind]+this.levelBonus.Value()}MaxLevel(t){return 20*t}EffectValue(){return 0}EffectValueString(){let t=this.EffectValue();return(this.kind==ht.Blacksmith||this.kind==ht.AdventuringParty||this.kind==ht.Dojo)&&t++,M.BuildingEffectString(this.kind,t)}SetCost(){}SetEffect(){}SetResearch(){}ResearchEffectString(t){return"Not Implemented"}}class db extends _s{constructor(t){super(t),this.kind=ht.AdventuringParty}EffectValue(){return this.Level()*.005*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value()}SetEffect(){this.data.expedition.speedMultiplier.RegisterMultiplier(new u(n.Town,s.Add,()=>this.EffectValue()))}SetResearch(){this.data.expedition.rewardMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Stone)*.01*this.ResearchMul(0))),this.data.expedition.expGainMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(1))),this.data.expedition.petExpGainMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Leaf)*.1*this.ResearchMul(2)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Expedition Reward Amount + ${f.percent(this.ResearchLevel(Y.Stone)*.01*this.ResearchMul(0))}`;case Y.Crystal:return`Expedition EXP Gain + ${f.percent(this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(1))}`;case Y.Leaf:return`Expedition Pet EXP Gain + ${f.percent(this.ResearchLevel(Y.Leaf)*.1*this.ResearchMul(2))}`}}LevelEffectString(){}}class gb extends _s{constructor(t){super(t),this.kind=ht.AlchemistsHut}EffectValue(){return this.Level()*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value()}SetEffect(){}SetResearch(){this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Stone)*.01*this.ResearchMul(0))),this.data.alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Crystal)*.01*this.ResearchMul(1))),this.data.alchemy.maxMysteriousWaterExpandedCapNum.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Leaf)*5*this.ResearchMul(2)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Mysterious Water Gain + ${f.tDigit(this.ResearchLevel(Y.Stone)*.01*this.ResearchMul(0))} / sec`;case Y.Crystal:return`Essence Conversion Rate + ${f.percent(this.ResearchLevel(Y.Crystal)*.01*this.ResearchMul(1))}`;case Y.Leaf:return`Max Mysterious Water Cap + ${f.tDigit(this.ResearchLevel(Y.Leaf)*5*this.ResearchMul(2),0)}`}}LevelEffectString(){}}class Sb extends _s{constructor(t){super(t),this.kind=ht.ArcaneResearcher}EffectValue(){return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value()}SetEffect(){}SetResearch(){this.townCtrl.researchPower[0].RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Stone)*.05*this.ResearchMul(0))),this.townCtrl.researchPower[1].RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(1))),this.townCtrl.researchPower[2].RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Leaf)*.05*this.ResearchMul(2)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Stone Research Power + ${f.percent(this.ResearchLevel(Y.Stone)*.05*this.ResearchMul(0))}`;case Y.Crystal:return`Crystal Research Power + ${f.percent(this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(1))}`;case Y.Leaf:return`Leaf Research Power + ${f.percent(this.ResearchLevel(Y.Leaf)*.05*this.ResearchMul(2))}`}}LevelEffectString(){}}class mb extends _s{constructor(t){super(t),this.kind=ht.Blacksmith}EffectValue(){return this.Level()*.005*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value()}SetEffect(){this.data.equipment.effectMultiplier.RegisterMultiplier(new u(n.Town,s.Add,()=>this.EffectValue()))}SetResearch(){this.data.equipment.autoDisassembleAvailableNum.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(this.ResearchLevel(Y.Stone)*2*this.ResearchMul(0),250))),this.data.equipment.disassembleMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(1),10))),this.data.craft.costReduction.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(.9,this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(2))));for(let t=0;t<W.HeroKind;t++)this.data.stats.OptionEffectChance(t,0).RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Stone)*2*this.ResearchMul(Y.Stone)-250)*.004,0))),this.data.stats.OptionEffectChance(t,1).RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(Y.Crystal)-10)*.1,0)));this.data.stats.SetEffectStats(v.EquipmentDropChance,new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(2)-.9)*1,0)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Auto-Disassemble EQ Slot ${f.tDigit(Math.min(this.ResearchLevel(Y.Stone)*2*this.ResearchMul(0),250),0)} (Equipment 1st Enchanted Slot Chance + ${f.percent(Math.max((this.ResearchLevel(Y.Stone)*2*this.ResearchMul(Y.Stone)-250)*.004,0))})`;case Y.Crystal:return`Material Gain on Disassembling EQ ${f.percent(Math.min(this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(1),10))} (Equipment 2nd Enchanted Slot Chance + ${f.percent(Math.max((this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(Y.Crystal)-10)*.1,0))})`;case Y.Leaf:return`Reduce the cost of crafting by ${f.percent(Math.min(.9,this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(2)))} (Equipment Drop Chance + ${f.percent(Math.max((this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(2)-.9)*1,0))})`}}LevelEffectString(){}}class Mb extends _s{constructor(t){super(t),this.kind=ht.Cartographer}EffectValue(){return this.Level()*.2*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value()}SetEffect(){}SetResearch(){this.data.area.areaDebuffReduction.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(.9,this.ResearchLevel(Y.Crystal)*(3/400)*this.ResearchMul(Y.Crystal)))),this.data.area.townMaterialGainBonus.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Leaf)*this.ResearchMul(Y.Leaf))),this.data.stats.SetEffectStats(v.DebuffRes,new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Crystal)*(3/400)*this.ResearchMul(Y.Crystal)-.9)*1,0)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Dungeon's Time Limit + ${f.tDigit(this.ResearchLevel(Y.Stone)*5*this.ResearchMul(Y.Stone),0)} sec`;case Y.Crystal:return`Reduce Field Debuff effect by ${f.percent(Math.min(.9,this.ResearchLevel(Y.Crystal)*(3/400)*this.ResearchMul(Y.Crystal)))} (Debuff Resistance + ${f.percent(Math.max((this.ResearchLevel(Y.Crystal)*(3/400)*this.ResearchMul(Y.Crystal)-.9)*1,0))})`;case Y.Leaf:return`Town Material Gain from clearing areas ${f.tDigit(this.ResearchLevel(Y.Leaf)*this.ResearchMul(Y.Leaf),0)}`}}LevelEffectString(){}}class Eb extends _s{constructor(t){super(t),this.kind=ht.Dojo}EffectValue(){return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value()}SetEffect(){this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.Town,s.Mul,()=>this.EffectValue()))}SetResearch(){this.data.stats.SetEffectStats(v.ArmoredFury,new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Stone)*.01*this.ResearchMul(0))),this.data.stats.SetEffectStats(v.WardedFury,new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Crystal)*.01*this.ResearchMul(1))),this.data.stats.SetEffectStats(v.CriticalDamage,new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Leaf)*.01*this.ResearchMul(2)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Multiply Armored Fury by ${f.percent(this.ResearchLevel(Y.Stone)*.01*this.ResearchMul(0)+1)}`;case Y.Crystal:return`Multiply Warded Fury by ${f.percent(this.ResearchLevel(Y.Crystal)*.01*this.ResearchMul(1)+1)}`;case Y.Leaf:return`Multiply Critical Damage by ${f.percent(this.ResearchLevel(Y.Leaf)*.01*this.ResearchMul(2)+1)}`}}}class vb extends _s{constructor(t){super(t),this.kind=ht.MysticArena}EffectValue(){return this.Level()*.025*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value()}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.data.stats.MonsterDamage(t,se.ChallengeBoss).RegisterMultiplier(new u(n.Town,s.Mul,()=>this.EffectValue()))}SetResearch(){this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(100,this.ResearchLevel(Y.Stone)*this.ResearchMul(0)))),this.data.challenge.permanentRewardMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Crystal)*.025*this.ResearchMul(1))),this.data.alchemy.alchemyPointGainMultiplier.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Leaf)*.025*this.ResearchMul(2))),this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Stone)*this.ResearchMul(0)-100)*.01,0)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Equipment Inventory Slot + ${f.tDigit(Math.min(100,this.ResearchLevel(Y.Stone)*this.ResearchMul(0)),0)}`;case Y.Crystal:return`Multiply Handicapped Challenge's Passive Stats Reward by ${f.percent(this.ResearchLevel(Y.Crystal)*.025*this.ResearchMul(1)+1)} (Equipment Proficiency Gain + ${f.percent(Math.max((this.ResearchLevel(Y.Stone)*this.ResearchMul(0)-100)*.01,0))})`;case Y.Leaf:return`Alchemy Point Gain + ${f.percent(this.ResearchLevel(Y.Leaf)*.025*this.ResearchMul(2))}`}}LevelEffectString(){}}class wb extends _s{constructor(t){super(t),this.kind=ht.SlimeBank}EffectValue(){return this.Level()*.01*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value()}SetEffect(){}SetResearch(){this.data.resource.slimeCoinInterest.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(.2,this.ResearchLevel(Y.Stone)*.001*this.ResearchMul(0)))),this.data.shop.restockNumMaterial.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Crystal)*this.ResearchMul(1))),this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Leaf)*.02*this.ResearchMul(2))),this.data.stats.GoldGain().RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Stone)*.001*this.ResearchMul(0)-.2)*5,0)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Grants interest on currently held Slime Coin every 10 minutes : ${f.percent(Math.min(.2,this.ResearchLevel(Y.Stone)*.001*this.ResearchMul(0)))} (Gold Gain Multiplier + ${f.percent(Math.max((this.ResearchLevel(Y.Stone)*.001*this.ResearchMul(0)-.2)*5,0))})`;case Y.Crystal:return`Restock amount of materials in Shop + ${f.tDigit(this.ResearchLevel(Y.Crystal)*this.ResearchMul(1),0)}`;case Y.Leaf:return`Multiply Slime Coin Cap by ${f.percent(this.ResearchLevel(Y.Leaf)*.02*this.ResearchMul(2)+1)}`}}LevelEffectString(){}}class kb extends _s{constructor(t){super(t),this.kind=ht.StatueOfHeroes}EffectValue(){return this.Level()*.2*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value()}SetEffect(){}SetResearch(){this.data.stats.SetEffectResourceGain(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Stone)*.1*this.ResearchMul(Y.Stone))),this.data.resource.goldCap.RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(Y.Crystal))),this.townCtrl.levelCostReduction.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(.9,this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(Y.Leaf))));for(let t=0;t<this.data.monster.speciesMaterialDropChance.length;t++)this.data.monster.speciesMaterialDropChance[t].RegisterMultiplier(new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(Y.Leaf)-.9)*1,0)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Resource Gain + ${f.percent(this.ResearchLevel(Y.Stone)*.1*this.ResearchMul(Y.Stone))}`;case Y.Crystal:return`Gold Cap + ${f.percent(this.ResearchLevel(Y.Crystal)*.05*this.ResearchMul(Y.Crystal))}`;case Y.Leaf:return`Reduce the cost of all building levels by ${f.percent(Math.min(.9,this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(Y.Leaf)))} (Common Material Drop Chance + ${f.percent(Math.max((this.ResearchLevel(Y.Leaf)*(3/400)*this.ResearchMul(Y.Leaf)-.9)*1,0))})`}}LevelEffectString(){}}class Ab extends _s{constructor(t){super(t),this.kind=ht.Tavern}EffectValue(){return this.Level()*.05*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[0].Value()}SetEffect(){}SetResearch(){}}class Rb extends _s{constructor(t){super(t),this.kind=ht.Temple}EffectValue(){return this.Level()*.01*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[1].Value()}SetEffect(){this.data.rebirth.SetPointMultiplier(new u(n.Town,s.Add,()=>this.EffectValue()))}SetResearch(){this.data.blessingInfo.SetEffectMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Stone)*.025*this.ResearchMul(0))),this.data.blessingInfo.duration.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Crystal)*5*this.ResearchMul(1))),this.data.rebirth.requiredHeroLevelReduction.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>Math.min(100,this.ResearchLevel(Y.Leaf)*this.ResearchMul(2)))),this.data.stats.SetEffectStats(v.ExpGain,new u(n.TownResearch,s.Mul,()=>Math.max((this.ResearchLevel(Y.Leaf)*this.ResearchMul(2)-100)*.01,0)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Blessing Effect + ${f.percent(this.ResearchLevel(Y.Stone)*.025*this.ResearchMul(0))}`;case Y.Crystal:return`Blessing's duration + ${f.tDigit(this.ResearchLevel(Y.Crystal)*5*this.ResearchMul(1),0)} sec`;case Y.Leaf:return`Rebirth's level requirements - ${f.tDigit(Math.min(100,this.ResearchLevel(Y.Leaf)*this.ResearchMul(2)),0)} (EXP Gain Multiplier + ${f.percent(Math.max((this.ResearchLevel(Y.Leaf)*this.ResearchMul(2)-100)*.01,0))})`}}LevelEffectString(){}}class Cb extends _s{constructor(t){super(t),this.kind=ht.Trapper}EffectValue(){return this.Level()*this.townCtrl.townLevelEffectMultiplier.Value()*this.townCtrl.townLevelEffectMultipliers[2].Value()}SetEffect(){}SetResearch(){this.data.monster.colorMaterialDropChance.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Stone)*2e-5*this.ResearchMul(0))),this.data.shop.restockNumTrap.RegisterMultiplier(new u(n.TownResearch,s.Add,()=>this.ResearchLevel(Y.Crystal)*this.ResearchMul(1))),this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.TownResearch,s.Mul,()=>this.ResearchLevel(Y.Leaf)*.02*this.ResearchMul(2)))}ResearchEffectString(t){switch(t){case Y.Stone:return`Rare Material Drop Chance + ${f.percent(this.ResearchLevel(Y.Stone)*2e-5*this.ResearchMul(0),4)}`;case Y.Crystal:return`Restock amount of traps in Shop + ${f.tDigit(this.ResearchLevel(Y.Crystal)*this.ResearchMul(1),0)}`;case Y.Leaf:return`Multiply Taming Point Gain by ${f.percent(this.ResearchLevel(Y.Leaf)*.02*this.ResearchMul(2)+1)}`}}LevelEffectString(){}}class Lb{constructor(t){o(this,"data");o(this,"maxRank");o(this,"townMaterials",[]);o(this,"townMaterialGainMultiplier",Array(W.HeroKind));o(this,"townLevelEffectMultiplier");o(this,"townLevelEffectMultipliers",Array(W.ResourceKind));o(this,"levelCostReduction");o(this,"buildings",[]);o(this,"researchPower",Array(W.ResourceKind));o(this,"maxResearchNum");o(this,"researchEffectMultipliers",Array(W.ResourceKind));this.data=t;for(let i=0;i<this.townMaterialGainMultiplier.length;i++)this.townMaterialGainMultiplier[i]=new $;this.maxResearchNum=new $(new u(n.Base,s.Add,()=>1)),this.townLevelEffectMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.maxRank=new $,this.levelCostReduction=new $(new u(n.Base,s.Add,()=>0),()=>.9,()=>0);for(let i=0;i<this.researchPower.length;i++)this.researchPower[i]=new $(new u(n.Base,s.Add,()=>Math.log10(10+this.data.resource.Resource(i))),()=>1e20,()=>1),this.researchPower[i].numberType=gt.Normal,this.researchEffectMultipliers[i]=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<W.ResourceKind;i++)this.townLevelEffectMultipliers[i]=new $(new u(n.Base,s.Add,()=>1));this.researchPower[0].name="Stone Reasearch Power",this.researchPower[1].name="Crystal Reasearch Power",this.researchPower[2].name="Leaf Reasearch Power"}Start(){this.buildings[0]=new kb(this.data),this.buildings[3]=new mb(this.data),this.buildings[1]=new Mb(this.data),this.buildings[9]=new Ab(this.data),this.buildings[4]=new Rb(this.data),this.buildings[10]=new Eb(this.data),this.buildings[5]=new Cb(this.data),this.buildings[7]=new vb(this.data),this.buildings[6]=new wb(this.data),this.buildings[8]=new Sb(this.data),this.buildings[2]=new gb(this.data),this.buildings[11]=new db(this.data)}SetEffectTownMatGain(t){for(let i=0;i<this.townMaterialGainMultiplier.length;i++)this.townMaterialGainMultiplier[i].RegisterMultiplier(t)}TotalBuildingLevel(){let t=0;for(let i=0;i<this.buildings.length;i++)t+=this.buildings[i].Level();return t}SetEffectLevelBonusForAllBuilding(t){for(let i=0;i<this.buildings.length;i++)this.buildings[i].levelBonus.RegisterMultiplier(t)}MaxTownMaterialGainMultiplier(){let t=0;for(let i=0;i<this.townMaterialGainMultiplier.length;++i)this.townMaterialGainMultiplier[i].Value()>t&&this.data.source.isActiveBattle[i]&&(t=this.townMaterialGainMultiplier[i].Value());return t}}var qt=(e=>(e[e.Resource=0]="Resource",e[e.BasicStats=1]="BasicStats",e[e.GoldGain=2]="GoldGain",e[e.ExpGain=3]="ExpGain",e[e.GoldCap=4]="GoldCap",e[e.SlimeBank=5]="SlimeBank",e[e.EquipmentInventory=6]="EquipmentInventory",e))(qt||{});class Pb{constructor(t,i,r){o(this,"data");o(this,"kind");o(this,"idFunc");o(this,"maxValue");this.data=t,this.kind=i,this.idFunc=r}get id(){return this.idFunc()}get value(){switch(this.kind){case qt.Resource:return this.data.source.upgradeLevelsResource[this.id];case qt.BasicStats:return this.data.source.upgradeLevelsBasicStats[this.id];case qt.GoldGain:return this.data.source.upgradeLevelsGoldGain;case qt.ExpGain:return this.data.source.upgradeLevelsExpGain;case qt.GoldCap:return this.data.source.upgradeLevelsGoldCap[this.id];case qt.SlimeBank:return this.data.source.upgradeLevelsSlimebank[this.id];case qt.EquipmentInventory:return this.data.source.upgradeLevelsEquipmentInventory;default:return 0}}set value(t){switch(this.kind){case qt.Resource:this.data.source.upgradeLevelsResource[this.id]=t;break;case qt.BasicStats:this.data.source.upgradeLevelsBasicStats[this.id]=t;break;case qt.GoldGain:this.data.source.upgradeLevelsGoldGain=t;break;case qt.ExpGain:this.data.source.upgradeLevelsExpGain=t;break;case qt.GoldCap:this.data.source.upgradeLevelsGoldCap[this.id]=t;break;case qt.SlimeBank:this.data.source.upgradeLevelsSlimebank[this.id]=t;break;case qt.EquipmentInventory:this.data.source.upgradeLevelsEquipmentInventory=t;break;default:this.data.source.upgradeLevelsResource[this.id]=t;break}}}class $i{constructor(t){o(this,"data");o(this,"id");o(this,"level");this.data=t,this.level=new Pb(this.data,this.kind,()=>this.id)}get kind(){return qt.BasicStats}get resource(){return Y.Leaf}get slimebankKind(){return et.CritDamage}Start(){}CostModifier(){const t=this.kind!=qt.SlimeBank?1:0;return(1-t*this.data.upgrade.costReduction.Value())*(1-t*this.data.upgrade.costReductionFromGuildAbility.Value())*(1-t*this.data.upgrade.costReductionFromGuildSuperAbility.Value())*(1-t*this.data.upgrade.costReductionFromMissionMilestone.Value())*(1-this.data.upgrade.costReductionFromWA.Value())}Cost(t){return t}EffectValue(t=!1){return 1}ResourceKind(){}IsUnlocked(){return!0}Name(){return""}EffectString(){return`${f.tDigit(this.EffectValue())}`}SetUnlockCondition(){}Description(){return""}}class Db extends $i{constructor(i,r){super(i);o(this,"baseCostIncrementPerLevel");this.id=r,this.baseCostIncrementPerLevel=Math.pow(1.1+.125*r,.5)}get kind(){return qt.Resource}Cost(i){return this.InitCost()*Math.pow(this.CostIncrementPerLevel(),i)}InitCost(){return 10*Math.pow(5,this.id)}CostIncrementPerLevel(){return 1+(this.baseCostIncrementPerLevel-1)*(1-this.data.upgrade.resourceCostIncrementPerLevelReduction.Value())}Name(){return`Resource Gain ${this.id+1}`}}class yb extends $i{constructor(i,r){super(i);o(this,"statsKind");this.statsKind=r,this.id=r}get resource(){return this.data.resource.Resource(this.ResourceKind())}get kind(){return qt.BasicStats}Cost(i){return 100*Math.pow(1e3,i/4)}EffectValue(){let i=this.level.value;switch(this.statsKind){case d.HP:return i*25*this.data.upgrade.statsMultiplier.Value();case d.MP:return i*10*this.data.upgrade.statsMultiplier.Value();case d.ATK:return i*this.data.upgrade.statsMultiplier.Value();case d.MATK:return i*this.data.upgrade.statsMultiplier.Value();case d.DEF:return i*this.data.upgrade.statsMultiplier.Value();case d.MDEF:return i*this.data.upgrade.statsMultiplier.Value();default:return i*this.data.upgrade.statsMultiplier.Value()}}Start(){this.data.stats.SetEffectBasicStats(this.statsKind,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}Name(){return`Stats [${d[this.id]}]`}EffectString(){return`${d[this.id]} + ${f.tDigit(this.EffectValue())}`}}class bb extends $i{constructor(i,r){super(i);o(this,"resourceKind");this.resourceKind=r,this.id=r}get kind(){return qt.GoldCap}Start(){this.data.resource.goldCap.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}Cost(i){return 1e3*Math.pow(2,i/10)}EffectValue(){return this.level.value*250*this.data.upgrade.goldcapMultiplier.Value()*this.data.upgrade.goldcapMultipliers[this.id].Value()}Name(){return`Gold Cap [${Y[this.id]}]`}EffectString(){return`Gold Cap + ${f.tDigit(this.EffectValue())}`}}class Tb extends $i{get kind(){return qt.GoldGain}Cost(t){return 200*Math.pow(1.5,t)}EffectValue(){return this.level.value*this.data.upgrade.statsMultiplier.Value()}Name(){return"Stats [Gold Gain]"}}class Gb extends $i{get kind(){return qt.ExpGain}EffectValue(){return this.level.value*20*this.data.upgrade.statsMultiplier.Value()}Name(){return"Stats [EXP Gain]"}}class Jt extends $i{constructor(t){super(t),this.id=this.slimebankKind}get kind(){return qt.SlimeBank}Description(){return M.SlimeBankUpgradeString(this).description}EffectString(){return M.SlimeBankUpgradeString(this).effect}Name(){return M.SlimeBankUpgradeString(this).name}}class Bb extends Jt{Start(){this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.SlimeCoinCap}InitCost(){return this.level.value>=5e14?1e27*this.CostModifier():this.level.value>=1e14?1e26*this.CostModifier():this.level.value>=5e13?1e25*this.CostModifier():this.level.value>=1e13?1e24*this.CostModifier():this.level.value>=5e12?1e23*this.CostModifier():this.level.value>=1e12?1e22*this.CostModifier():this.level.value>=5e11?1e21*this.CostModifier():this.level.value>=1e11?1e20*this.CostModifier():this.level.value>=5e10?1e19*this.CostModifier():this.level.value>=1e10?1e18*this.CostModifier():this.level.value>=5e9?1e17*this.CostModifier():this.level.value>=1e9?1e16*this.CostModifier():this.level.value>=5e8?1e15*this.CostModifier():this.level.value>=1e8?1e14*this.CostModifier():this.level.value>=5e7?1e13*this.CostModifier():this.level.value>=1e7?1e12*this.CostModifier():1e4*this.CostModifier()}BaseCost(){return this.level.value>=1e7?0:1e4*this.CostModifier()}EffectValue(){let t=this.level.value;return 1e4+1e4*t+10*Math.pow(t,2)}}class xb extends Jt{Start(){this.data.resource.slimeCoinCap.RegisterMultiplier(new u(n.Upgrade,s.Mul,()=>this.EffectValue()))}get slimebankKind(){return et.SlimeCoinCap2}Cost(t){return 1e10*Math.pow(2,t)}EffectValue(){let t=this.level.value;return .1*Math.pow(t,2)}}class Fb extends Jt{Start(){this.data.resource.slimeCoinEfficiency.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.SlimeCoinEfficiency}Cost(t){return 7500*Math.pow(2,t)}EffectValue(){return 5e-4+this.level.value*25e-5}}class _b extends Jt{Start(){this.data.upgrade.costReduction.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.UpgradeCostReduction}Cost(t){return 100*Math.pow(1.35,t)}EffectValue(){return this.level.value*(1/400)}}class Ib extends Jt{Start(){this.data.upgrade.resourceMultiplier.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.ResourceBooster}Cost(t){return 500*Math.pow(1.2,t)}EffectValue(){return this.level.value*.25}}class Vb extends Jt{Start(){this.data.upgrade.statsMultiplier.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.StatsBooster}Cost(t){return 1e3*Math.pow(1.5,t)}EffectValue(){return this.level.value*.2}}class Hb extends Jt{Start(){this.data.upgrade.goldcapMultiplier.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.GoldCapBooster}Cost(t){return 2e3*Math.pow(1.5,t)}EffectValue(){return this.level.value*.2}}class qb extends Jt{Start(){this.data.stats.GoldGain().RegisterMultiplier(new u(n.Upgrade,s.Mul,()=>this.EffectValue()))}get slimebankKind(){return et.GoldGain}Cost(t){return 100*Math.pow(1.1,t)}EffectValue(){return this.level.value*.01}}class Nb extends Jt{Start(){this.data.alchemy.mysteriousWaterProductionPerSec.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.MysteriousWaterGain}Cost(t){return 2e3*Math.pow(1.25,t)}EffectValue(){return this.level.value*.002}}class Wb extends Jt{Start(){this.data.stats.SetEffectBasicStats(d.SPD,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.SPD}Cost(t){return 1e3*Math.pow(1.1,t)}EffectValue(){return 5*this.level.value}Name(){return"SPD"}}class $b extends Jt{Start(){this.data.stats.SetEffectStats(v.FireRes,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.FireRes}Cost(t){return 500*Math.pow(1.25,t)}EffectValue(){return this.level.value*(1/400)}Name(){return M.Stat(v.FireRes)}}class Ub extends Jt{Start(){this.data.stats.SetEffectStats(v.IceRes,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.IceRes}Cost(t){return 500*Math.pow(1.25,t)}EffectValue(){return this.level.value*(1/400)}Name(){return M.Stat(v.IceRes)}}class Ob extends Jt{Start(){this.data.stats.SetEffectStats(v.ThunderRes,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.ThunderRes}Cost(t){return 500*Math.pow(1.25,t)}EffectValue(){return this.level.value*(1/400)}Name(){return M.Stat(v.ThunderRes)}}class zb extends Jt{Start(){this.data.stats.SetEffectStats(v.LightRes,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.LightRes}Cost(t){return 500*Math.pow(1.25,t)}EffectValue(){return this.level.value*(1/400)}Name(){return M.Stat(v.LightRes)}}class Jb extends Jt{Start(){this.data.stats.SetEffectStats(v.DarkRes,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.DarkRes}Cost(t){return 500*Math.pow(1.25,t)}EffectValue(){return this.level.value*(1/400)}Name(){return M.Stat(v.DarkRes)}}class jb extends Jt{Start(){this.data.stats.SetEffectStats(v.DebuffRes,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.DebuffRes}Cost(t){return 4e3*Math.pow(1.25,t)}EffectValue(){return this.level.value*(1/400)}Name(){return M.Stat(v.DebuffRes)}}class Xb extends Jt{Start(){this.level.maxValue=()=>118,this.data.shop.restockTimesec.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>-this.EffectValue()))}get slimebankKind(){return et.ShopTimer}Cost(t){return 1e4*Math.pow(1.2,t)}EffectValue(){let t=this.level.value;return Math.min(590,t*5)}}class Qb extends Jt{Start(){for(let t=0;t<this.data.monster.speciesMaterialDropChance.length;t++)this.data.monster.speciesMaterialDropChance[t].RegisterMultiplier(new u(n.Upgrade,s.Mul,()=>this.EffectValue()))}get slimebankKind(){return et.MaterialFinder}Cost(t){return 5e3*Math.pow(1.5,t)}EffectValue(){return this.level.value*.05}}class Yb extends Jt{Start(){this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.EquipmentProf}Cost(t){return 1e4*Math.pow(1.2,t)}EffectValue(){return this.level.value*.05}Name(){return M.Stat(v.EquipmentProficiencyGain)}}class Zb extends Jt{Start(){this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.Upgrade,s.Mul,()=>this.EffectValue()))}get slimebankKind(){return et.SkillProf}Cost(t){return 1e4*Math.pow(1.2,t)}EffectValue(){return this.level.value*.05}Name(){return M.Stat(v.SkillProficiencyGain)}}class Kb extends Jt{Start(){for(let t=0;t<this.data.town.researchPower.length;t++)this.data.town.researchPower[t].RegisterMultiplier(new u(n.Upgrade,s.Mul,()=>this.EffectValue()))}get slimebankKind(){return et.ResearchPower}Cost(t){return 5e3*Math.pow(1.25,t)}EffectValue(){return this.level.value*.1}}class eT extends $i{get kind(){return qt.EquipmentInventory}Start(){this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.Upgrade,s.Add,()=>this.EffectValue()))}Cost(t){return 5e3*Math.pow(10,t/5)}EffectValue(){return this.level.value}Name(){return"Equipment Inventory Slot"}EffectString(){return`Increase Equipment Inventory Slot by ${f.tDigit(this.EffectValue(),0)}`}}class tT extends Jt{Start(){this.data.stats.SetEffectStats(v.CriticalDamage,new u(n.Upgrade,s.Add,()=>this.EffectValue()))}get slimebankKind(){return et.CritDamage}Cost(t){return 5e4*Math.pow(1.1,t)}EffectValue(){return .025*this.level.value}}class sT{constructor(t){o(this,"data");o(this,"upgrades");o(this,"resourceUpgrades",[]);o(this,"basicStatsUpgrades",[]);o(this,"goldGainUpgrade");o(this,"expGainUpgrade");o(this,"equipmentInventoryUpgrade");o(this,"goldCapUpgrades",[]);o(this,"generalUpgradeList",[]);o(this,"sb1ist",[]);o(this,"sb2ist",[]);o(this,"sb3ist",[]);o(this,"slimebankUpgradeList",[]);o(this,"upgradeList",[]);o(this,"costReduction");o(this,"costReductionFromGuildAbility");o(this,"costReductionFromGuildSuperAbility");o(this,"costReductionFromWA");o(this,"costReductionFromMissionMilestone");o(this,"resourceMultiplier");o(this,"statsMultiplier");o(this,"goldcapMultiplier");o(this,"goldcapMultipliers",Array(W.ResourceKind));o(this,"resourceCostIncrementPerLevelReduction");o(this,"resourceGainTierFactor");o(this,"availableQueue");o(this,"tempCheapestCost");o(this,"tempCheapestid");o(this,"tempCost");this.data=t,this.costReduction=new $(new u(n.Base,s.Add,()=>0),()=>.99,()=>0),this.costReductionFromGuildAbility=new $(new u(n.Base,s.Add,()=>0),()=>.99,()=>0),this.costReductionFromGuildSuperAbility=new $(new u(n.Base,s.Add,()=>0),()=>.99,()=>0),this.costReductionFromWA=new $(new u(n.Base,s.Add,()=>0),()=>.99,()=>0),this.costReductionFromMissionMilestone=new $(new u(n.Base,s.Add,()=>0),()=>.99,()=>0),this.resourceMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.statsMultiplier=new $(new u(n.Base,s.Add,()=>1)),this.goldcapMultiplier=new $(new u(n.Base,s.Add,()=>1));for(let i=0;i<this.goldcapMultipliers.length;i++)this.goldcapMultipliers[i]=new $(new u(n.Base,s.Add,()=>1));this.resourceCostIncrementPerLevelReduction=new $(new u(n.Base,s.Add,()=>0),()=>.9,()=>0),this.resourceGainTierFactor=new $(new u(n.Base,s.Add,()=>0),()=>5,()=>0);for(let i=0;i<ts.resourceUpgradeTier;i++)this.resourceUpgrades.push(new Db(this.data,i));for(let i=0;i<6;i++)this.basicStatsUpgrades.push(new yb(this.data,i));this.goldGainUpgrade=new Tb(this.data),this.expGainUpgrade=new Gb(this.data);for(let i=0;i<3;i++)this.goldCapUpgrades[i]=new bb(this.data,i);this.equipmentInventoryUpgrade=new eT(this.data),this.generalUpgradeList=[...this.resourceUpgrades,...this.basicStatsUpgrades,this.goldGainUpgrade,this.expGainUpgrade,...this.goldCapUpgrades,this.equipmentInventoryUpgrade],this.sb1ist.push(new Bb(this.data)),this.sb1ist.push(new xb(this.data)),this.sb1ist.push(new Fb(this.data)),this.sb1ist.push(new _b(this.data)),this.sb1ist.push(new Ib(this.data)),this.sb1ist.push(new Vb(this.data)),this.sb1ist.push(new Hb(this.data)),this.sb2ist.push(new qb(this.data)),this.sb2ist.push(new Nb(this.data)),this.sb2ist.push(new Wb(this.data)),this.sb2ist.push(new $b(this.data)),this.sb2ist.push(new Ub(this.data)),this.sb2ist.push(new Ob(this.data)),this.sb2ist.push(new zb(this.data)),this.sb2ist.push(new Jb(this.data)),this.sb3ist.push(new jb(this.data)),this.sb3ist.push(new Zb(this.data)),this.sb3ist.push(new Yb(this.data)),this.sb3ist.push(new Qb(this.data)),this.sb3ist.push(new Xb(this.data)),this.sb3ist.push(new tT(this.data)),this.sb3ist.push(new Kb(this.data)),this.slimebankUpgradeList=[...this.sb1ist,...this.sb2ist,...this.sb3ist],this.upgrades=[...this.generalUpgradeList,...this.slimebankUpgradeList],this.upgradeList=this.upgrades,this.availableQueue=new $}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start()}Upgrade(t,i){return this.upgrades[t][i]}SlimeBankUpgrade(t){for(let i=0;i<this.slimebankUpgradeList.length;i++)if(this.slimebankUpgradeList[i].slimebankKind==t)return this.slimebankUpgradeList[i];return this.slimebankUpgradeList[0]}TotalLevel(t){return t}}class iT{constructor(t){o(this,"data");o(this,"WorldAscensionPopoint");o(this,"upgradeList",[]);o(this,"milestoneList",[]);o(this,"pointGainBonus");o(this,"isTrying");o(this,"missionClearNum");o(this,"currentHero");o(this,"isActiveHeroes");this.data=t,this.pointGainBonus=new $,this.SetUpgrade(),this.SetMilestone()}Start(){for(let t=0;t<this.upgradeList.length;t++)this.upgradeList[t].Start();for(let t=0;t<this.milestoneList.length;t++)this.milestoneList[t].Start();this.SetMission()}get tier(){return 0}SetUpgrade(){}SetMilestone(){}SetMission(){}TotalMilestoneLevel(){let t=0;for(let i=0;i<this.milestoneList.length;i++)t+=this.milestoneList[i].CurrentLevel();return t}}class yi{constructor(t){o(this,"data");o(this,"wa");o(this,"currentLevel");o(this,"calculatedCurrentValue");o(this,"maxLevel",10);this.wa=t,this.data=t.data}Start(){return this.SetEffect()}get kind(){return 0}GoalValue(t){return 1e300}get maxLevelReached(){return this.data.source.ascensionMilestoneLevelReached[this.kind]}set maxLevelReached(t){this.data.source.ascensionMilestoneLevelReached[this.kind]=t}Name(){return M.WorldAscensionMilestoneString(this).name}EffectString(){return M.WorldAscensionMilestoneString(this,this.currentPassiveEffectValue).effect}PassiveEffectValue(t){return 0}SetEffect(){}get currentPassiveEffectValue(){return this.PassiveEffectValue(this.maxLevelReached)}CurrentLevel(){return this.currentLevel}get maxLevelReachedAfterWA(){return Math.max(this.maxLevelReached,this.CurrentLevel())}}class aT extends yi{constructor(t){super(t)}get kind(){return rs.TownBuldingLevel}get currentValue(){return this.data.town.TotalBuildingLevel()}PassiveEffectValue(t){return .1*t*Math.pow(2,(t-1)/9)}SetEffect(){return this.data.town.townLevelEffectMultiplier.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.currentPassiveEffectValue))}}class rT extends yi{constructor(t){super(t)}get kind(){return rs.MissionClearNum}get currentValue(){return this.data.area.TotalClearedMissionNum()}PassiveEffectValue(t){return t*.5}SetEffect(){return this.data.area.townMaterialGainPerDifficultyMultiplier.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.currentPassiveEffectValue))}}class lT extends yi{constructor(t){super(t)}get kind(){return rs.UpgradeLevel}get currentValue(){return this.data.upgrade.TotalLevel(qt.Resource)}PassiveEffectValue(t){return Math.max(0,Math.pow(2,t)-1)}SetEffect(){return this.data.stats.SetEffectResourceGain(new u(n.Ascension,s.Mul,()=>this.currentPassiveEffectValue))}}class nT extends yi{constructor(t){super(t)}get kind(){return rs.MoveDistance}get currentValue(){return this.data.stats.TotalMovedDistance()/100}GoalValue(t){return 5e8*Math.pow(3,t-1)/100}PassiveEffectValue(t){return .01*Math.pow(t,2)}SetEffect(){return this.data.stats.SetEffectStats(v.MoveSpeed,new u(n.Ascension,s.Mul,()=>this.currentPassiveEffectValue))}}class uT extends yi{constructor(t){super(t)}get kind(){return rs.DictionaryPoint}get currentValue(){return 0}PassiveEffectValue(t){return .1*t*Math.pow(2,(t-1)/9)}SetEffect(){return this.data.equipment.dictionaryUpgradeEffectMultiplier.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.currentPassiveEffectValue))}}class hT extends yi{constructor(t){super(t)}get kind(){return rs.DisassembleEquipment}get currentValue(){return 0}GoalValue(t){return 5e4*Math.pow(3,t-1)}PassiveEffectValue(t){return .2*t*Math.pow(2,(t-1)/9)}SetEffect(){return this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.Ascension,s.Mul,()=>this.currentPassiveEffectValue))}}class cT extends yi{constructor(t){super(t)}get kind(){return rs.RebirthPointGainTier1}get currentValue(){return 0}PassiveEffectValue(t){return .1*t*Math.pow(2,(t-1)/9)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.data.rebirth.Rebirth(t,0).rebirthPointGainFactor.RegisterMultiplier(new u(n.Ascension,s.Mul,()=>this.currentPassiveEffectValue))}}class oT extends yi{constructor(t){super(t)}get kind(){return rs.RebirthPointGainTier2}get currentValue(){return 0}PassiveEffectValue(t){return .1*t*Math.pow(2,(t-1)/9)}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.data.rebirth.Rebirth(t,1).rebirthPointGainFactor.RegisterMultiplier(new u(n.Ascension,s.Mul,()=>this.currentPassiveEffectValue))}}class Ys{constructor(t){o(this,"data");o(this,"wa");o(this,"effectMultiplier");this.wa=t,this.data=t.data,this.effectMultiplier=new $(new u(n.Base,s.Add,()=>1))}Start(){return this.SetEffect()}get kind(){return 0}get level(){return this.data.source.worldAscensionUpgradeLevels[this.kind]}set level(t){this.data.source.worldAscensionUpgradeLevels[this.kind]=t}get maxLevel(){return 1}Cost(t){return 1+t}EffectValue(t){return 0}get effectValue(){return this.EffectValue(this.level)*this.effectMultiplier.Value()}SetEffect(){}Name(){return M.WorldAscensionUpgradeString(this).name}EffectString(){return M.WorldAscensionUpgradeString(this,this.effectValue).effect}}class fT extends Ys{constructor(t){super(t)}get kind(){return jt.GuildExpGain}get maxLevel(){return 100}EffectValue(t){return .25*t}Cost(t){return t>=50?Math.floor((1+t)*(1+(t-50)/25)):1+t}SetEffect(){return this.data.stats.SetEffectGuildExp(new u(n.Ascension,s.Mul,()=>this.effectValue))}}class pT extends Ys{constructor(t){super(t)}get kind(){return jt.AreaClearCount}get maxLevel(){return 100}EffectValue(t){return t}Cost(t){return t>=50?Math.floor((2+2*t)*(1+(t-50)/50)):2+2*t}SetEffect(){return this.data.area.SetEffectClearCount(new u(n.Ascension,s.Add,()=>this.effectValue))}}class dT extends Ys{constructor(t){super(t)}get kind(){return jt.ActiveHero}get maxLevel(){return 1}EffectValue(t){return t}Cost(t){return 10}SetEffect(){return this.data.guild.activableNum.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class gT extends Ys{constructor(t){super(t)}get kind(){return jt.SkillProfGain}get maxLevel(){return 100}EffectValue(t){return .25*t}Cost(t){return 2}SetEffect(){return this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.Ascension,s.Mul,()=>this.effectValue))}}class ST extends Ys{constructor(t){super(t)}get kind(){return jt.PreRebirthTier1}get maxLevel(){return 100}EffectValue(t){return t*1e3}Cost(t){return 1}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.data.rebirth.Rebirth(t,0).initRebirthPoint.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class mT extends Ys{constructor(t){super(t)}get kind(){return jt.PreRebirthTier2}get maxLevel(){return 100}EffectValue(t){return t*1e3}Cost(t){return 2}SetEffect(){for(let t=0;t<W.HeroKind;t++)this.data.rebirth.Rebirth(t,1).initRebirthPoint.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class MT extends Ys{constructor(t){super(t)}get kind(){return jt.RebirthTier1BonusCap}get maxLevel(){return 10}EffectValue(t){return 25*t}Cost(t){return 1+t}SetEffect(){return this.data.rebirth.tier1AbilityPointBonusLevelCap.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class ET extends Ys{constructor(t){super(t)}get kind(){return jt.RebirthTier2BonusCap}get maxLevel(){return 10}EffectValue(t){return 20*t}Cost(t){return 2+2*t}SetEffect(){return this.data.rebirth.tier2AbilityPointBonusLevelCap.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class vT extends Ys{constructor(t){super(t)}get kind(){return jt.PointGainBonus}get maxLevel(){return 10}EffectValue(t){return t}Cost(t){return 25*Math.pow(2,t)}SetEffect(){return this.wa.pointGainBonus.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class wT extends Ys{constructor(t){super(t)}get kind(){return jt.NitroSpeed}get maxLevel(){return 10}EffectValue(t){return .1*t}Cost(t){return 100*Math.pow(2,t)}SetEffect(){return this.data.nitro.maxNitroSpeed.RegisterMultiplier(new u(n.Ascension,s.Add,()=>this.effectValue))}}class kT extends iT{get tier(){return 0}SetUpgrade(){this.upgradeList.push(new fT(this)),this.upgradeList.push(new pT(this)),this.upgradeList.push(new dT(this)),this.upgradeList.push(new gT(this)),this.upgradeList.push(new ST(this)),this.upgradeList.push(new mT(this)),this.upgradeList.push(new MT(this)),this.upgradeList.push(new ET(this)),this.upgradeList.push(new vT(this)),this.upgradeList.push(new wT(this))}SetMilestone(){this.milestoneList.push(new aT(this)),this.milestoneList.push(new rT(this)),this.milestoneList.push(new lT(this)),this.milestoneList.push(new nT(this)),this.milestoneList.push(new uT(this)),this.milestoneList.push(new hT(this)),this.milestoneList.push(new cT(this)),this.milestoneList.push(new oT(this))}}class AT{constructor(t){o(this,"data");o(this,"worldAscensions",[]);this.data=t,this.worldAscensions.push(new kT(t))}Start(){for(let t=0;t<this.worldAscensions.length;t++)this.worldAscensions[t].Start()}}var G=(e=>(e[e.ClearTutorial=0]="ClearTutorial",e[e.UnlockWizard=1]="UnlockWizard",e[e.UnlockAngel=2]="UnlockAngel",e[e.UnlockThief=3]="UnlockThief",e[e.UnlockArcher=4]="UnlockArcher",e[e.UnlockTamer=5]="UnlockTamer",e[e.Nitro1e3=6]="Nitro1e3",e[e.Nitro1e4=7]="Nitro1e4",e[e.Nitro1e5=8]="Nitro1e5",e[e.Nitro1e6=9]="Nitro1e6",e[e.Nitro1e7=10]="Nitro1e7",e[e.Nitro1e8=11]="Nitro1e8",e[e.Capture1e2=12]="Capture1e2",e[e.Capture1e3=13]="Capture1e3",e[e.Capture1e4=14]="Capture1e4",e[e.Capture1e5=15]="Capture1e5",e[e.Capture1e6=16]="Capture1e6",e[e.Chest1=17]="Chest1",e[e.Chest10=18]="Chest10",e[e.Chest1e2=19]="Chest1e2",e[e.Chest1e3=20]="Chest1e3",e[e.Chest1e4=21]="Chest1e4",e[e.Chest1e5=22]="Chest1e5",e[e.Chest1e6=23]="Chest1e6",e[e.Mimic1=24]="Mimic1",e[e.Mimic1e1=25]="Mimic1e1",e[e.Mimic1e2=26]="Mimic1e2",e[e.Mimic1e3=27]="Mimic1e3",e[e.Mimic1e4=28]="Mimic1e4",e[e.Mimic1e5=29]="Mimic1e5",e[e.Mimic1e6=30]="Mimic1e6",e[e.Walk40075km=31]="Walk40075km",e[e.Walk40075km2=32]="Walk40075km2",e[e.Walk40075km3=33]="Walk40075km3",e[e.Walk40075km5=34]="Walk40075km5",e[e.Walk384400km=35]="Walk384400km",e[e.Walk384400km2=36]="Walk384400km2",e[e.Walk149600000km=37]="Walk149600000km",e[e.EpicCoin1e3=38]="EpicCoin1e3",e[e.EpicCoin1e4=39]="EpicCoin1e4",e[e.EpicCoin1e5=40]="EpicCoin1e5",e[e.EpicCoin1e6=41]="EpicCoin1e6",e[e.UnlockMagicslime=42]="UnlockMagicslime",e[e.UnlockSpider=43]="UnlockSpider",e[e.UnlockBat=44]="UnlockBat",e[e.UnlockFairy=45]="UnlockFairy",e[e.UnlockFox=46]="UnlockFox",e[e.UnlockDevilfish=47]="UnlockDevilfish",e[e.UnlockTreant=48]="UnlockTreant",e[e.UnlockFlametiger=49]="UnlockFlametiger",e[e.UnlockUnicorn=50]="UnlockUnicorn",e[e.EquipUniqueSlime=51]="EquipUniqueSlime",e[e.EquipUniqueMagicslime=52]="EquipUniqueMagicslime",e[e.EquipUniqueSpider=53]="EquipUniqueSpider",e[e.EquipUniqueBat=54]="EquipUniqueBat",e[e.EquipUniqueFairy=55]="EquipUniqueFairy",e[e.EquipUniqueFox=56]="EquipUniqueFox",e[e.EquipUniqueDevilfish=57]="EquipUniqueDevilfish",e[e.EquipUniqueTreant=58]="EquipUniqueTreant",e[e.EquipUniqueFlametiger=59]="EquipUniqueFlametiger",e[e.EquipUniqueUnicorn=60]="EquipUniqueUnicorn",e[e.Gold1e6=61]="Gold1e6",e[e.Gold1e9=62]="Gold1e9",e[e.Gold1e10=63]="Gold1e10",e[e.Gold1e11=64]="Gold1e11",e[e.Gold1e12=65]="Gold1e12",e[e.Gold1e13=66]="Gold1e13",e[e.Gold1e14=67]="Gold1e14",e[e.Gold1e15=68]="Gold1e15",e[e.Gold1e16=69]="Gold1e16",e[e.Gold1e17=70]="Gold1e17",e[e.Gold1e18=71]="Gold1e18",e[e.Gold1e19=72]="Gold1e19",e[e.Gold1e20=73]="Gold1e20",e[e.Gold1e22=74]="Gold1e22",e[e.Gold1e24=75]="Gold1e24",e[e.Gold1e26=76]="Gold1e26",e[e.Gold1e28=77]="Gold1e28",e[e.Gold1e30=78]="Gold1e30",e[e.Stone1e10=79]="Stone1e10",e[e.Stone1e20=80]="Stone1e20",e[e.Stone1e30=81]="Stone1e30",e[e.Stone1e40=82]="Stone1e40",e[e.Stone1e50=83]="Stone1e50",e[e.Stone1e60=84]="Stone1e60",e[e.Stone1e70=85]="Stone1e70",e[e.Stone1e80=86]="Stone1e80",e[e.Stone1e90=87]="Stone1e90",e[e.Stone1e100=88]="Stone1e100",e[e.Stone1e110=89]="Stone1e110",e[e.Stone1e120=90]="Stone1e120",e[e.Stone1e130=91]="Stone1e130",e[e.Stone1e140=92]="Stone1e140",e[e.Stone1e150=93]="Stone1e150",e[e.Stone1e160=94]="Stone1e160",e[e.Stone1e170=95]="Stone1e170",e[e.Stone1e180=96]="Stone1e180",e[e.Stone1e190=97]="Stone1e190",e[e.Stone1e200=98]="Stone1e200",e[e.Crystal1e10=99]="Crystal1e10",e[e.Crystal1e20=100]="Crystal1e20",e[e.Crystal1e30=101]="Crystal1e30",e[e.Crystal1e40=102]="Crystal1e40",e[e.Crystal1e50=103]="Crystal1e50",e[e.Crystal1e60=104]="Crystal1e60",e[e.Crystal1e70=105]="Crystal1e70",e[e.Crystal1e80=106]="Crystal1e80",e[e.Crystal1e90=107]="Crystal1e90",e[e.Crystal1e100=108]="Crystal1e100",e[e.Crystal1e110=109]="Crystal1e110",e[e.Crystal1e120=110]="Crystal1e120",e[e.Crystal1e130=111]="Crystal1e130",e[e.Crystal1e140=112]="Crystal1e140",e[e.Crystal1e150=113]="Crystal1e150",e[e.Crystal1e160=114]="Crystal1e160",e[e.Crystal1e170=115]="Crystal1e170",e[e.Crystal1e180=116]="Crystal1e180",e[e.Crystal1e190=117]="Crystal1e190",e[e.Crystal1e200=118]="Crystal1e200",e[e.Leaf1e10=119]="Leaf1e10",e[e.Leaf1e20=120]="Leaf1e20",e[e.Leaf1e30=121]="Leaf1e30",e[e.Leaf1e40=122]="Leaf1e40",e[e.Leaf1e50=123]="Leaf1e50",e[e.Leaf1e60=124]="Leaf1e60",e[e.Leaf1e70=125]="Leaf1e70",e[e.Leaf1e80=126]="Leaf1e80",e[e.Leaf1e90=127]="Leaf1e90",e[e.Leaf1e100=128]="Leaf1e100",e[e.Leaf1e110=129]="Leaf1e110",e[e.Leaf1e120=130]="Leaf1e120",e[e.Leaf1e130=131]="Leaf1e130",e[e.Leaf1e140=132]="Leaf1e140",e[e.Leaf1e150=133]="Leaf1e150",e[e.Leaf1e160=134]="Leaf1e160",e[e.Leaf1e170=135]="Leaf1e170",e[e.Leaf1e180=136]="Leaf1e180",e[e.Leaf1e190=137]="Leaf1e190",e[e.Leaf1e200=138]="Leaf1e200",e[e.GLv20=139]="GLv20",e[e.GLv40=140]="GLv40",e[e.GLv60=141]="GLv60",e[e.GLv80=142]="GLv80",e[e.GLv100=143]="GLv100",e[e.GLv120=144]="GLv120",e[e.GLv140=145]="GLv140",e[e.GLv160=146]="GLv160",e[e.GLv180=147]="GLv180",e[e.GLv200=148]="GLv200",e[e.GLv220=149]="GLv220",e[e.GLv240=150]="GLv240",e[e.GLv260=151]="GLv260",e[e.GLv280=152]="GLv280",e[e.GLv300=153]="GLv300",e[e.Swarm1=154]="Swarm1",e[e.Swarm1e1=155]="Swarm1e1",e[e.Swarm5e1=156]="Swarm5e1",e[e.Swarm1e2=157]="Swarm1e2",e[e.Swarm5e2=158]="Swarm5e2",e[e.Swarm1e3=159]="Swarm1e3",e[e.Swarm5e3=160]="Swarm5e3",e[e.Swarm1e4=161]="Swarm1e4",e[e.Swarm1e5=162]="Swarm1e5",e[e.Swarm1e6=163]="Swarm1e6",e[e.Swarm1e7=164]="Swarm1e7",e[e.Florzporb=165]="Florzporb",e[e.Arachnetta=166]="Arachnetta",e[e.GurdianKor=167]="GurdianKor",e[e.Nostro=168]="Nostro",e[e.LadyEmelda=169]="LadyEmelda",e[e.NariSune=170]="NariSune",e[e.Octobaddie=171]="Octobaddie",e[e.Bananoon=172]="Bananoon",e[e.Glorbliorbus=173]="Glorbliorbus",e[e.Gankyu=174]="Gankyu",e[e.PotionLv50=175]="PotionLv50",e[e.PotionLv250=176]="PotionLv250",e[e.PotionLv600=177]="PotionLv600",e[e.PotionLv1250=178]="PotionLv1250",e[e.PotionLv2500=179]="PotionLv2500",e[e.PotionLv3000=180]="PotionLv3000",e[e.AlchemyPoint1e5=181]="AlchemyPoint1e5",e[e.AlchemyPoint1e6=182]="AlchemyPoint1e6",e[e.AlchemyPoint1e7=183]="AlchemyPoint1e7",e[e.AlchemyPoint1e8=184]="AlchemyPoint1e8",e[e.AlchemyPoint1e9=185]="AlchemyPoint1e9",e[e.AlchemyPoint1e10=186]="AlchemyPoint1e10",e[e.EquipGain1e3=187]="EquipGain1e3",e[e.EquipGain1e4=188]="EquipGain1e4",e[e.EquipGain1e5=189]="EquipGain1e5",e[e.EquipGain1e6=190]="EquipGain1e6",e[e.EquipGain1e7=191]="EquipGain1e7",e[e.Weapon8Warrior=192]="Weapon8Warrior",e[e.Weapon8Wizard=193]="Weapon8Wizard",e[e.Weapon8Angel=194]="Weapon8Angel",e[e.Weapon8Thief=195]="Weapon8Thief",e[e.Weapon8Archer=196]="Weapon8Archer",e[e.Weapon8Tamer=197]="Weapon8Tamer",e[e.Weapon16Warrior=198]="Weapon16Warrior",e[e.Weapon16Wizard=199]="Weapon16Wizard",e[e.Weapon16Angel=200]="Weapon16Angel",e[e.Weapon16Thief=201]="Weapon16Thief",e[e.Weapon16Archer=202]="Weapon16Archer",e[e.Weapon16Tamer=203]="Weapon16Tamer",e[e.Weapon24Warrior=204]="Weapon24Warrior",e[e.Weapon24Wizard=205]="Weapon24Wizard",e[e.Weapon24Angel=206]="Weapon24Angel",e[e.Weapon24Thief=207]="Weapon24Thief",e[e.Weapon24Archer=208]="Weapon24Archer",e[e.Weapon24Tamer=209]="Weapon24Tamer",e[e.Armor8Warrior=210]="Armor8Warrior",e[e.Armor8Wizard=211]="Armor8Wizard",e[e.Armor8Angel=212]="Armor8Angel",e[e.Armor8Thief=213]="Armor8Thief",e[e.Armor8Archer=214]="Armor8Archer",e[e.Armor8Tamer=215]="Armor8Tamer",e[e.Armor16Warrior=216]="Armor16Warrior",e[e.Armor16Wizard=217]="Armor16Wizard",e[e.Armor16Angel=218]="Armor16Angel",e[e.Armor16Thief=219]="Armor16Thief",e[e.Armor16Archer=220]="Armor16Archer",e[e.Armor16Tamer=221]="Armor16Tamer",e[e.Armor24Warrior=222]="Armor24Warrior",e[e.Armor24Wizard=223]="Armor24Wizard",e[e.Armor24Angel=224]="Armor24Angel",e[e.Armor24Thief=225]="Armor24Thief",e[e.Armor24Archer=226]="Armor24Archer",e[e.Armor24Tamer=227]="Armor24Tamer",e[e.Jewelry8Warrior=228]="Jewelry8Warrior",e[e.Jewelry8Wizard=229]="Jewelry8Wizard",e[e.Jewelry8Angel=230]="Jewelry8Angel",e[e.Jewelry8Thief=231]="Jewelry8Thief",e[e.Jewelry8Archer=232]="Jewelry8Archer",e[e.Jewelry8Tamer=233]="Jewelry8Tamer",e[e.Jewelry16Warrior=234]="Jewelry16Warrior",e[e.Jewelry16Wizard=235]="Jewelry16Wizard",e[e.Jewelry16Angel=236]="Jewelry16Angel",e[e.Jewelry16Thief=237]="Jewelry16Thief",e[e.Jewelry16Archer=238]="Jewelry16Archer",e[e.Jewelry16Tamer=239]="Jewelry16Tamer",e[e.Jewelry24Warrior=240]="Jewelry24Warrior",e[e.Jewelry24Wizard=241]="Jewelry24Wizard",e[e.Jewelry24Angel=242]="Jewelry24Angel",e[e.Jewelry24Thief=243]="Jewelry24Thief",e[e.Jewelry24Archer=244]="Jewelry24Archer",e[e.Jewelry24Tamer=245]="Jewelry24Tamer",e[e.Utility2Warrior=246]="Utility2Warrior",e[e.Utility2Wizard=247]="Utility2Wizard",e[e.Utility2Angel=248]="Utility2Angel",e[e.Utility2Thief=249]="Utility2Thief",e[e.Utility2Archer=250]="Utility2Archer",e[e.Utility2Tamer=251]="Utility2Tamer",e[e.Utility4Warrior=252]="Utility4Warrior",e[e.Utility4Wizard=253]="Utility4Wizard",e[e.Utility4Angel=254]="Utility4Angel",e[e.Utility4Thief=255]="Utility4Thief",e[e.Utility4Archer=256]="Utility4Archer",e[e.Utility4Tamer=257]="Utility4Tamer",e[e.Utility6Warrior=258]="Utility6Warrior",e[e.Utility6Wizard=259]="Utility6Wizard",e[e.Utility6Angel=260]="Utility6Angel",e[e.Utility6Thief=261]="Utility6Thief",e[e.Utility6Archer=262]="Utility6Archer",e[e.Utility6Tamer=263]="Utility6Tamer",e[e.ClassSkill8Warrior=264]="ClassSkill8Warrior",e[e.ClassSkill8Wizard=265]="ClassSkill8Wizard",e[e.ClassSkill8Angel=266]="ClassSkill8Angel",e[e.ClassSkill8Thief=267]="ClassSkill8Thief",e[e.ClassSkill8Archer=268]="ClassSkill8Archer",e[e.ClassSkill8Tamer=269]="ClassSkill8Tamer",e[e.GlobalSkill8=270]="GlobalSkill8",e[e.Rebirth1Warrior=271]="Rebirth1Warrior",e[e.Rebirth1Wizard=272]="Rebirth1Wizard",e[e.Rebirth1Angel=273]="Rebirth1Angel",e[e.Rebirth1Thief=274]="Rebirth1Thief",e[e.Rebirth1Archer=275]="Rebirth1Archer",e[e.Rebirth1Tamer=276]="Rebirth1Tamer",e[e.Rebirth2Warrior=277]="Rebirth2Warrior",e[e.Rebirth2Wizard=278]="Rebirth2Wizard",e[e.Rebirth2Angel=279]="Rebirth2Angel",e[e.Rebirth2Thief=280]="Rebirth2Thief",e[e.Rebirth2Archer=281]="Rebirth2Archer",e[e.Rebirth2Tamer=282]="Rebirth2Tamer",e[e.Rebirth3Warrior=283]="Rebirth3Warrior",e[e.Rebirth3Wizard=284]="Rebirth3Wizard",e[e.Rebirth3Angel=285]="Rebirth3Angel",e[e.Rebirth3Thief=286]="Rebirth3Thief",e[e.Rebirth3Archer=287]="Rebirth3Archer",e[e.Rebirth3Tamer=288]="Rebirth3Tamer",e[e.Rebirth4Warrior=289]="Rebirth4Warrior",e[e.Rebirth4Wizard=290]="Rebirth4Wizard",e[e.Rebirth4Angel=291]="Rebirth4Angel",e[e.Rebirth4Thief=292]="Rebirth4Thief",e[e.Rebirth4Archer=293]="Rebirth4Archer",e[e.Rebirth4Tamer=294]="Rebirth4Tamer",e[e.Rebirth5Warrior=295]="Rebirth5Warrior",e[e.Rebirth5Wizard=296]="Rebirth5Wizard",e[e.Rebirth5Angel=297]="Rebirth5Angel",e[e.Rebirth5Thief=298]="Rebirth5Thief",e[e.Rebirth5Archer=299]="Rebirth5Archer",e[e.Rebirth5Tamer=300]="Rebirth5Tamer",e[e.Rebirth6Warrior=301]="Rebirth6Warrior",e[e.Rebirth6Wizard=302]="Rebirth6Wizard",e[e.Rebirth6Angel=303]="Rebirth6Angel",e[e.Rebirth6Thief=304]="Rebirth6Thief",e[e.Rebirth6Archer=305]="Rebirth6Archer",e[e.Rebirth6Tamer=306]="Rebirth6Tamer",e[e.Ascension1=307]="Ascension1",e[e.Ascension2=308]="Ascension2",e[e.Ascension3=309]="Ascension3",e[e.Playtime1day=310]="Playtime1day",e[e.Playtime2day=311]="Playtime2day",e[e.Playtime3day=312]="Playtime3day",e[e.Playtime4day=313]="Playtime4day",e[e.Playtime5day=314]="Playtime5day",e[e.Playtime1week=315]="Playtime1week",e[e.Playtime2week=316]="Playtime2week",e[e.Playtime3week=317]="Playtime3week",e[e.Playtime1month=318]="Playtime1month",e[e.Playtime2month=319]="Playtime2month",e[e.Playtime3month=320]="Playtime3month",e[e.Playtime4month=321]="Playtime4month",e[e.Playtime5month=322]="Playtime5month",e[e.Playtime6month=323]="Playtime6month",e[e.Playtime7month=324]="Playtime7month",e[e.Playtime8month=325]="Playtime8month",e[e.Playtime9month=326]="Playtime9month",e[e.Playtime10month=327]="Playtime10month",e[e.Playtime11month=328]="Playtime11month",e[e.Playtime1year=329]="Playtime1year",e[e.Playtime2year=330]="Playtime2year",e[e.Playtime3year=331]="Playtime3year",e[e.Playtime4year=332]="Playtime4year",e[e.Playtime5year=333]="Playtime5year",e[e.Playtime10year=334]="Playtime10year",e[e.Nitro1e9=335]="Nitro1e9",e[e.Capture1e7=336]="Capture1e7",e[e.Capture1e8=337]="Capture1e8",e[e.Capture1e9=338]="Capture1e9",e[e.Capture1e10=339]="Capture1e10",e[e.Chest1e7=340]="Chest1e7",e[e.Chest1e8=341]="Chest1e8",e[e.Chest1e9=342]="Chest1e9",e[e.Chest1e10=343]="Chest1e10",e[e.Mimic1e7=344]="Mimic1e7",e[e.Mimic1e8=345]="Mimic1e8",e[e.Mimic1e9=346]="Mimic1e9",e[e.Mimic1e10=347]="Mimic1e10",e[e.Nitro1e10=348]="Nitro1e10",e[e.Nitro1e11=349]="Nitro1e11",e[e.Nitro1e12=350]="Nitro1e12",e[e.Capture1e11=351]="Capture1e11",e[e.Capture1e12=352]="Capture1e12",e[e.WalkToSirius=353]="WalkToSirius",e[e.WalkToEdgeOfUniverse=354]="WalkToEdgeOfUniverse",e[e.Gold1e33=355]="Gold1e33",e[e.Gold1e36=356]="Gold1e36",e[e.Gold1e39=357]="Gold1e39",e[e.Gold1e42=358]="Gold1e42",e[e.Gold1e45=359]="Gold1e45",e[e.Gold1e48=360]="Gold1e48",e[e.Gold1e51=361]="Gold1e51",e[e.Stone1e210=362]="Stone1e210",e[e.Stone1e220=363]="Stone1e220",e[e.Stone1e230=364]="Stone1e230",e[e.Stone1e240=365]="Stone1e240",e[e.Stone1e250=366]="Stone1e250",e[e.Crystal1e210=367]="Crystal1e210",e[e.Crystal1e220=368]="Crystal1e220",e[e.Crystal1e230=369]="Crystal1e230",e[e.Crystal1e240=370]="Crystal1e240",e[e.Crystal1e250=371]="Crystal1e250",e[e.Leaf1e210=372]="Leaf1e210",e[e.Leaf1e220=373]="Leaf1e220",e[e.Leaf1e230=374]="Leaf1e230",e[e.Leaf1e240=375]="Leaf1e240",e[e.Leaf1e250=376]="Leaf1e250",e[e.GLv320=377]="GLv320",e[e.GLv340=378]="GLv340",e[e.GLv360=379]="GLv360",e[e.GLv380=380]="GLv380",e[e.GLv400=381]="GLv400",e[e.GLv420=382]="GLv420",e[e.GLv440=383]="GLv440",e[e.GLv460=384]="GLv460",e[e.GLv480=385]="GLv480",e[e.GLv500=386]="GLv500",e[e.AlchemyPoint1e11=387]="AlchemyPoint1e11",e[e.AlchemyPoint1e12=388]="AlchemyPoint1e12",e[e.AlchemyPoint1e13=389]="AlchemyPoint1e13",e[e.AlchemyPoint1e14=390]="AlchemyPoint1e14",e[e.AlchemyPoint1e15=391]="AlchemyPoint1e15",e[e.EquipGain1e8=392]="EquipGain1e8",e[e.EquipGain1e9=393]="EquipGain1e9",e[e.EquipGain1e10=394]="EquipGain1e10",e[e.Playtime15year=395]="Playtime15year",e[e.Playtime20year=396]="Playtime20year",e[e.Playtime25year=397]="Playtime25year",e[e.Playtime30year=398]="Playtime30year",e[e.AlchemyPoint1e16=399]="AlchemyPoint1e16",e[e.AlchemyPoint1e17=400]="AlchemyPoint1e17",e[e.Gold1e54=401]="Gold1e54",e[e.Gold1e57=402]="Gold1e57",e[e.Skill1e4=403]="Skill1e4",e[e.Skill1e5=404]="Skill1e5",e[e.Skill1e6=405]="Skill1e6",e[e.Skill1e7=406]="Skill1e7",e[e.Skill1e8=407]="Skill1e8",e[e.Skill1e9=408]="Skill1e9",e[e.Skill1e10=409]="Skill1e10",e[e.Skill1e11=410]="Skill1e11",e))(G||{}),x=(e=>(e[e.EpicCoin=0]="EpicCoin",e[e.PortalOrb=1]="PortalOrb",e[e.Nitro=2]="Nitro",e[e.GoldCap=3]="GoldCap",e[e.ResourceGain=4]="ResourceGain",e[e.ExpGain=5]="ExpGain",e[e.EQInventorySlot=6]="EQInventorySlot",e[e.UtilityInventorySlot=7]="UtilityInventorySlot",e[e.TamingPoint=8]="TamingPoint",e[e.EquipmentDrop=9]="EquipmentDrop",e[e.EquipmentProficiency=10]="EquipmentProficiency",e[e.ArtifactProficiency=11]="ArtifactProficiency",e[e.SkillProficiency=12]="SkillProficiency",e[e.SPD=13]="SPD",e[e.Essence=14]="Essence",e))(x||{});class _{constructor(t,i,r,h,c,m,w=!1){o(this,"data");o(this,"kind");o(this,"rewardKind");o(this,"rewardAmount");o(this,"name");o(this,"condition");o(this,"value");o(this,"targetValue");o(this,"isExponential");this.data=t,this.kind=i,this.name=c,this.condition=m,this.rewardKind=r,this.rewardAmount=h,this.isExponential=w}static Generic(t,i,r,h,c,m,w,k=!1){return new _(t,i,r,h,c,()=>m()>=w,k)}get isCleared(){var t,i;return(t=this.data.source.isGotAchievements)[i=this.kind]??(t[i]=!1)}set isCleared(t){this.data.source.isGotAchievements[this.kind]=t}get isGotReward(){var t,i;return(t=this.data.source.isGotAchievementRewards)[i=this.kind]??(t[i]=!1)}set isGotReward(t){this.data.source.isGotAchievementRewards[this.kind]=t}get playtime(){return this.data.source.achievementPlaytimes[this.kind]}set playtime(t){this.data.source.achievementPlaytimes[this.kind]=t}Start(){switch(this.rewardKind){case x.GoldCap:this.data.resource.goldCap.RegisterMultiplier(new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.ResourceGain:this.data.stats.SetEffectResourceGain(new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.ExpGain:this.data.stats.SetEffectStats(v.ExpGain,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.EQInventorySlot:this.data.inventory.equipInventoryUnlockedNum.RegisterMultiplier(new u(n.Achievement,s.Add,()=>this.rewardAmount,()=>this.isGotReward));break;case x.UtilityInventorySlot:this.data.inventory.potionUnlockedNum.RegisterMultiplier(new u(n.Achievement,s.Add,()=>this.rewardAmount,()=>this.isGotReward));break;case x.TamingPoint:this.data.stats.SetEffectStats(v.TamingPointGain,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.EquipmentDrop:this.data.stats.SetEffectStats(v.EquipmentDropChance,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.EquipmentProficiency:this.data.stats.SetEffectStats(v.EquipmentProficiencyGain,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.ArtifactProficiency:this.data.stats.SetEffectStats(v.ArtifactProficiencyGain,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.SkillProficiency:this.data.stats.SetEffectStats(v.SkillProficiencyGain,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.SPD:this.data.stats.SetEffectBasicStats(d.SPD,new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break;case x.Essence:this.data.alchemy.catalyst.essenceProductionMultiplier.RegisterMultiplier(new u(n.Achievement,s.Mul,()=>this.rewardAmount,()=>this.isGotReward));break}}Achieve(){this.isCleared=!0,this.playtime=this.data.source.allTime}CheckAchieve(){this.isCleared||!this.condition()||this.Achieve()}CanClaimRewad(){return this.isCleared&&!this.isGotReward}ClaimReward(){if(this.CanClaimRewad())switch(this.isGotReward=!0,this.rewardKind){case x.EpicCoin:break;case x.PortalOrb:break;case x.Nitro:break}}NameString(){return this.name()}RewardString(){switch(this.rewardKind){case x.GoldCap:return`Gold Cap + ${f.percent(this.rewardAmount)}`;case x.ResourceGain:return`Resource Gain + ${f.percent(this.rewardAmount)}`;case x.ExpGain:return`Exp Gain + ${f.percent(this.rewardAmount)}`;case x.TamingPoint:return`Taming Point Gain + ${f.percent(this.rewardAmount)}`;case x.EquipmentDrop:return`Equipment Drop Chance + ${f.percent(this.rewardAmount)}`;case x.EquipmentProficiency:return`Equipment Proficiency Gain + ${f.percent(this.rewardAmount)}`;case x.ArtifactProficiency:return`Artifact Proficiency Gain + ${f.percent(this.rewardAmount)}`;case x.SkillProficiency:return`Skill Proficiency Gain + ${f.percent(this.rewardAmount)}`;case x.SPD:return`SPD + ${f.percent(this.rewardAmount)}`;case x.Essence:return`Essence Conversion Rate + ${f.percent(this.rewardAmount)}`;default:return"Not Implemented"}}}class RT{constructor(t){o(this,"data");o(this,"achievementList",[]);o(this,"achievementListGeneral",[]);o(this,"achievementListArea",[]);o(this,"achievementListCurrency",[]);o(this,"achievementListGuild",[]);o(this,"achievementListChallenge",[]);o(this,"achievementListAlchemy",[]);o(this,"achievementListEquip",[]);o(this,"achievementListSkill",[]);o(this,"achievementListRebirth",[]);o(this,"achievementListPlaytime",[]);o(this,"achievementListNumber",[]);this.data=t}SetAchievement(){this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e3,x.GoldCap,.01,()=>M.AchievementString(6,1e3),()=>this.data.source.nitroConsumed,1e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e4,x.GoldCap,.02,()=>M.AchievementString(6,1e4),()=>this.data.source.nitroConsumed,1e4)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e5,x.GoldCap,.03,()=>M.AchievementString(6,1e5),()=>this.data.source.nitroConsumed,1e5)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e6,x.GoldCap,.04,()=>M.AchievementString(6,1e6),()=>this.data.source.nitroConsumed,1e6)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e7,x.GoldCap,.05,()=>M.AchievementString(6,1e7),()=>this.data.source.nitroConsumed,1e7)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e8,x.GoldCap,.06,()=>M.AchievementString(6,1e8),()=>this.data.source.nitroConsumed,1e8)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e9,x.GoldCap,.07,()=>M.AchievementString(6,1e9),()=>this.data.source.nitroConsumed,1e9)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e10,x.GoldCap,.08,()=>M.AchievementString(6,1e10),()=>this.data.source.nitroConsumed,1e10)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e11,x.GoldCap,.09,()=>M.AchievementString(6,1e11),()=>this.data.source.nitroConsumed,1e11)),this.achievementListGeneral.push(_.Generic(this.data,G.Nitro1e12,x.GoldCap,.1,()=>M.AchievementString(6,1e12),()=>this.data.source.nitroConsumed,1e12)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e2,x.TamingPoint,.02,()=>M.AchievementString(7,100),()=>this.data.monster.CapturedNum(),100)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e3,x.TamingPoint,.04,()=>M.AchievementString(7,1e3),()=>this.data.monster.CapturedNum(),1e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e4,x.TamingPoint,.06,()=>M.AchievementString(7,1e4),()=>this.data.monster.CapturedNum(),1e4)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e5,x.TamingPoint,.08,()=>M.AchievementString(7,1e5),()=>this.data.monster.CapturedNum(),1e5)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e6,x.TamingPoint,.1,()=>M.AchievementString(7,1e6),()=>this.data.monster.CapturedNum(),1e6)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e7,x.TamingPoint,.12,()=>M.AchievementString(7,1e7),()=>this.data.monster.CapturedNum(),1e7)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e8,x.TamingPoint,.14,()=>M.AchievementString(7,1e8),()=>this.data.monster.CapturedNum(),1e8)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e9,x.TamingPoint,.16,()=>M.AchievementString(7,1e9),()=>this.data.monster.CapturedNum(),1e9)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e10,x.TamingPoint,.18,()=>M.AchievementString(7,1e10),()=>this.data.monster.CapturedNum(),1e10)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e11,x.TamingPoint,.2,()=>M.AchievementString(7,1e11),()=>this.data.monster.CapturedNum(),1e11)),this.achievementListGeneral.push(_.Generic(this.data,G.Capture1e12,x.TamingPoint,.22,()=>M.AchievementString(7,1e12),()=>this.data.monster.CapturedNum(),1e12)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1,x.ExpGain,.01,()=>M.AchievementString(9,1),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e1,x.ExpGain,.02,()=>M.AchievementString(9,10),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),10)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e2,x.ExpGain,.04,()=>M.AchievementString(9,100),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),100)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e3,x.ExpGain,.08,()=>M.AchievementString(9,1e3),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e4,x.ExpGain,.16,()=>M.AchievementString(9,1e4),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e4)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e5,x.ExpGain,.32,()=>M.AchievementString(9,1e5),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e5)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e6,x.ExpGain,.64,()=>M.AchievementString(9,1e6),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e6)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e7,x.ExpGain,1.28,()=>M.AchievementString(9,1e7),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e7)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e8,x.ExpGain,2.56,()=>M.AchievementString(9,1e8),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e8)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e9,x.ExpGain,5.12,()=>M.AchievementString(9,1e9),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e9)),this.achievementListGeneral.push(_.Generic(this.data,G.Mimic1e10,x.ExpGain,10.24,()=>M.AchievementString(9,1e10),()=>this.data.monster.GlobalInformation(se.Mimic,At.Normal).DefeatedNum(),1e10)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1,x.ResourceGain,1,()=>M.AchievementString(10,1),()=>this.data.source.swarmClearedNum,1)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e1,x.ResourceGain,2,()=>M.AchievementString(10,10),()=>this.data.source.swarmClearedNum,10)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm5e1,x.ResourceGain,3,()=>M.AchievementString(10,50),()=>this.data.source.swarmClearedNum,50)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e2,x.ResourceGain,4,()=>M.AchievementString(10,100),()=>this.data.source.swarmClearedNum,100)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm5e2,x.ResourceGain,5,()=>M.AchievementString(10,500),()=>this.data.source.swarmClearedNum,500)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e3,x.ResourceGain,6,()=>M.AchievementString(10,1e3),()=>this.data.source.swarmClearedNum,1e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm5e3,x.ResourceGain,7,()=>M.AchievementString(10,5e3),()=>this.data.source.swarmClearedNum,5e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e4,x.ResourceGain,8,()=>M.AchievementString(10,1e4),()=>this.data.source.swarmClearedNum,1e4)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e5,x.ResourceGain,9,()=>M.AchievementString(10,1e5),()=>this.data.source.swarmClearedNum,1e5)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e6,x.ResourceGain,10,()=>M.AchievementString(10,1e6),()=>this.data.source.swarmClearedNum,1e6)),this.achievementListGeneral.push(_.Generic(this.data,G.Swarm1e7,x.ResourceGain,20,()=>M.AchievementString(10,1e7),()=>this.data.source.swarmClearedNum,1e7)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk40075km,x.SPD,.01,()=>M.AchievementString(11,0,"40,075,000"),()=>this.data.stats.TotalMovedDistance()/100,40075e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk40075km2,x.SPD,.02,()=>M.AchievementString(12,0,"80,150,000"),()=>this.data.stats.TotalMovedDistance()/100,8015e4)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk40075km3,x.SPD,.03,()=>M.AchievementString(13,0,"120,225,000"),()=>this.data.stats.TotalMovedDistance()/100,120225e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk40075km5,x.SPD,.04,()=>M.AchievementString(14,0,"200,375,000"),()=>this.data.stats.TotalMovedDistance()/100,200375e3)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk384400km,x.SPD,.05,()=>M.AchievementString(15,0,"384,400,000"),()=>this.data.stats.TotalMovedDistance()/100,3844e5)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk384400km2,x.SPD,.07,()=>M.AchievementString(16,0,"786,800,000"),()=>this.data.stats.TotalMovedDistance()/100,7688e5)),this.achievementListGeneral.push(_.Generic(this.data,G.Walk149600000km,x.SPD,.1,()=>M.AchievementString(17,0,"149,600,000,000"),()=>this.data.stats.TotalMovedDistance()/100,1496e8)),this.achievementListGeneral.push(_.Generic(this.data,G.WalkToSirius,x.SPD,.15,()=>M.AchievementString(42),()=>this.data.stats.TotalMovedDistance()/100,81362282064194900)),this.achievementListGeneral.push(_.Generic(this.data,G.WalkToEdgeOfUniverse,x.SPD,.2,()=>M.AchievementString(43),()=>this.data.stats.TotalMovedDistance()/100,13055808052161504e10)),this.achievementListGeneral.push(_.Generic(this.data,G.EpicCoin1e3,x.GoldCap,.2,()=>M.AchievementString(18,1e3),()=>this.data.source.epicCoinConsumed,1e3)),this.achievementListGeneral.push(_.Generic(this.data,G.EpicCoin1e4,x.GoldCap,.4,()=>M.AchievementString(18,1e4),()=>this.data.source.epicCoinConsumed,1e4)),this.achievementListGeneral.push(_.Generic(this.data,G.EpicCoin1e5,x.GoldCap,.6,()=>M.AchievementString(18,1e5),()=>this.data.source.epicCoinConsumed,1e5)),this.achievementListGeneral.push(_.Generic(this.data,G.EpicCoin1e6,x.GoldCap,.8,()=>M.AchievementString(18,1e6),()=>this.data.source.epicCoinConsumed,1e6)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e6,x.GoldCap,.01,()=>M.AchievementString(21,0,f.tDigit(1e6)),()=>this.data.source.totalGold,1e6,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e9,x.GoldCap,.015,()=>M.AchievementString(21,0,f.tDigit(1e9)),()=>this.data.source.totalGold,1e9,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e10,x.GoldCap,.02,()=>M.AchievementString(21,0,f.tDigit(1e10)),()=>this.data.source.totalGold,1e10,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e11,x.GoldCap,.025,()=>M.AchievementString(21,0,f.tDigit(1e11)),()=>this.data.source.totalGold,1e11,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e12,x.GoldCap,.03,()=>M.AchievementString(21,0,f.tDigit(1e12)),()=>this.data.source.totalGold,1e12,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e13,x.GoldCap,.035,()=>M.AchievementString(21,0,f.tDigit(1e13)),()=>this.data.source.totalGold,1e13,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e14,x.GoldCap,.04,()=>M.AchievementString(21,0,f.tDigit(1e14)),()=>this.data.source.totalGold,1e14,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e15,x.GoldCap,.045,()=>M.AchievementString(21,0,f.tDigit(1e15)),()=>this.data.source.totalGold,1e15,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e16,x.GoldCap,.05,()=>M.AchievementString(21,0,f.tDigit(1e16)),()=>this.data.source.totalGold,1e16,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e17,x.GoldCap,.055,()=>M.AchievementString(21,0,f.tDigit(1e17)),()=>this.data.source.totalGold,1e17,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e18,x.GoldCap,.06,()=>M.AchievementString(21,0,f.tDigit(1e18)),()=>this.data.source.totalGold,1e18,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e19,x.GoldCap,.065,()=>M.AchievementString(21,0,f.tDigit(1e19)),()=>this.data.source.totalGold,1e19,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e20,x.GoldCap,.07,()=>M.AchievementString(21,0,f.tDigit(1e20)),()=>this.data.source.totalGold,1e20,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e22,x.GoldCap,.075,()=>M.AchievementString(21,0,f.tDigit(1e22)),()=>this.data.source.totalGold,1e22,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e24,x.GoldCap,.08,()=>M.AchievementString(21,0,f.tDigit(1e24)),()=>this.data.source.totalGold,1e24,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e26,x.GoldCap,.085,()=>M.AchievementString(21,0,f.tDigit(1e26)),()=>this.data.source.totalGold,1e26,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e28,x.GoldCap,.09,()=>M.AchievementString(21,0,f.tDigit(1e28)),()=>this.data.source.totalGold,1e28,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e30,x.GoldCap,.095,()=>M.AchievementString(21,0,f.tDigit(1e30)),()=>this.data.source.totalGold,1e30,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e33,x.GoldCap,.1,()=>M.AchievementString(21,0,f.tDigit(1e33)),()=>this.data.source.totalGold,1e33,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e36,x.GoldCap,.105,()=>M.AchievementString(21,0,f.tDigit(1e36)),()=>this.data.source.totalGold,1e36,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e39,x.GoldCap,.11,()=>M.AchievementString(21,0,f.tDigit(1e39)),()=>this.data.source.totalGold,1e39,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e42,x.GoldCap,.115,()=>M.AchievementString(21,0,f.tDigit(1e42)),()=>this.data.source.totalGold,1e42,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e45,x.GoldCap,.12,()=>M.AchievementString(21,0,f.tDigit(1e45)),()=>this.data.source.totalGold,1e45,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e48,x.GoldCap,.125,()=>M.AchievementString(21,0,f.tDigit(1e48)),()=>this.data.source.totalGold,1e48,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e51,x.GoldCap,.13,()=>M.AchievementString(21,0,f.tDigit(1e51)),()=>this.data.source.totalGold,1e51,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e54,x.GoldCap,.135,()=>M.AchievementString(21,0,f.tDigit(1e54)),()=>this.data.source.totalGold,1e54,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Gold1e57,x.GoldCap,.14,()=>M.AchievementString(21,0,f.tDigit(1e57)),()=>this.data.source.totalGold,1e57,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e10,x.ResourceGain,1,()=>M.AchievementString(22,0,"1e10"),()=>this.data.source.totalStone,1e10,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e20,x.ResourceGain,2,()=>M.AchievementString(22,0,"1e20"),()=>this.data.source.totalStone,1e20,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e30,x.ResourceGain,3,()=>M.AchievementString(22,0,"1e30"),()=>this.data.source.totalStone,1e30,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e40,x.ResourceGain,4,()=>M.AchievementString(22,0,"1e40"),()=>this.data.source.totalStone,1e40,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e50,x.ResourceGain,5,()=>M.AchievementString(22,0,"1e50"),()=>this.data.source.totalStone,1e50,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e60,x.ResourceGain,6,()=>M.AchievementString(22,0,"1e60"),()=>this.data.source.totalStone,1e60,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e70,x.ResourceGain,7,()=>M.AchievementString(22,0,"1e70"),()=>this.data.source.totalStone,1e70,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e80,x.ResourceGain,8,()=>M.AchievementString(22,0,"1e80"),()=>this.data.source.totalStone,1e80,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e90,x.ResourceGain,9,()=>M.AchievementString(22,0,"1e90"),()=>this.data.source.totalStone,1e90,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e100,x.ResourceGain,10,()=>M.AchievementString(22,0,"1e100"),()=>this.data.source.totalStone,1e100,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e110,x.ResourceGain,11,()=>M.AchievementString(22,0,"1e110"),()=>this.data.source.totalStone,1e110,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e120,x.ResourceGain,12,()=>M.AchievementString(22,0,"1e120"),()=>this.data.source.totalStone,1e120,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e130,x.ResourceGain,13,()=>M.AchievementString(22,0,"1e130"),()=>this.data.source.totalStone,1e130,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e140,x.ResourceGain,14,()=>M.AchievementString(22,0,"1e140"),()=>this.data.source.totalStone,1e140,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e150,x.ResourceGain,15,()=>M.AchievementString(22,0,"1e150"),()=>this.data.source.totalStone,1e150,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e160,x.ResourceGain,16,()=>M.AchievementString(22,0,"1e160"),()=>this.data.source.totalStone,1e160,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e170,x.ResourceGain,17,()=>M.AchievementString(22,0,"1e170"),()=>this.data.source.totalStone,1e170,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e180,x.ResourceGain,18,()=>M.AchievementString(22,0,"1e180"),()=>this.data.source.totalStone,1e180,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e190,x.ResourceGain,19,()=>M.AchievementString(22,0,"1e190"),()=>this.data.source.totalStone,1e190,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e200,x.ResourceGain,20,()=>M.AchievementString(22,0,"1e200"),()=>this.data.source.totalStone,1e200,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e210,x.ResourceGain,21,()=>M.AchievementString(22,0,"1e210"),()=>this.data.source.totalStone,1e210,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e220,x.ResourceGain,22,()=>M.AchievementString(22,0,"1e220"),()=>this.data.source.totalStone,1e220,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e230,x.ResourceGain,23,()=>M.AchievementString(22,0,"1e230"),()=>this.data.source.totalStone,1e230,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e240,x.ResourceGain,24,()=>M.AchievementString(22,0,"1e240"),()=>this.data.source.totalStone,1e240,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Stone1e250,x.ResourceGain,25,()=>M.AchievementString(22,0,"1e250"),()=>this.data.source.totalStone,1e250,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e10,x.ResourceGain,1,()=>M.AchievementString(23,0,"1e10"),()=>this.data.source.totalCrystal,1e10,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e20,x.ResourceGain,2,()=>M.AchievementString(23,0,"1e20"),()=>this.data.source.totalCrystal,1e20,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e30,x.ResourceGain,3,()=>M.AchievementString(23,0,"1e30"),()=>this.data.source.totalCrystal,1e30,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e40,x.ResourceGain,4,()=>M.AchievementString(23,0,"1e40"),()=>this.data.source.totalCrystal,1e40,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e50,x.ResourceGain,5,()=>M.AchievementString(23,0,"1e50"),()=>this.data.source.totalCrystal,1e50,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e60,x.ResourceGain,6,()=>M.AchievementString(23,0,"1e60"),()=>this.data.source.totalCrystal,1e60,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e70,x.ResourceGain,7,()=>M.AchievementString(23,0,"1e70"),()=>this.data.source.totalCrystal,1e70,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e80,x.ResourceGain,8,()=>M.AchievementString(23,0,"1e80"),()=>this.data.source.totalCrystal,1e80,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e90,x.ResourceGain,9,()=>M.AchievementString(23,0,"1e90"),()=>this.data.source.totalCrystal,1e90,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e100,x.ResourceGain,10,()=>M.AchievementString(23,0,"1e100"),()=>this.data.source.totalCrystal,1e100,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e110,x.ResourceGain,11,()=>M.AchievementString(23,0,"1e110"),()=>this.data.source.totalCrystal,1e110,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e120,x.ResourceGain,12,()=>M.AchievementString(23,0,"1e120"),()=>this.data.source.totalCrystal,1e120,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e130,x.ResourceGain,13,()=>M.AchievementString(23,0,"1e130"),()=>this.data.source.totalCrystal,1e130,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e140,x.ResourceGain,14,()=>M.AchievementString(23,0,"1e140"),()=>this.data.source.totalCrystal,1e140,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e150,x.ResourceGain,15,()=>M.AchievementString(23,0,"1e150"),()=>this.data.source.totalCrystal,1e150,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e160,x.ResourceGain,16,()=>M.AchievementString(23,0,"1e160"),()=>this.data.source.totalCrystal,1e160,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e170,x.ResourceGain,17,()=>M.AchievementString(23,0,"1e170"),()=>this.data.source.totalCrystal,1e170,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e180,x.ResourceGain,18,()=>M.AchievementString(23,0,"1e180"),()=>this.data.source.totalCrystal,1e180,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e190,x.ResourceGain,19,()=>M.AchievementString(23,0,"1e190"),()=>this.data.source.totalCrystal,1e190,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e200,x.ResourceGain,20,()=>M.AchievementString(23,0,"1e200"),()=>this.data.source.totalCrystal,1e200,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e210,x.ResourceGain,21,()=>M.AchievementString(23,0,"1e210"),()=>this.data.source.totalCrystal,1e210,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e220,x.ResourceGain,22,()=>M.AchievementString(23,0,"1e220"),()=>this.data.source.totalCrystal,1e220,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e230,x.ResourceGain,23,()=>M.AchievementString(23,0,"1e230"),()=>this.data.source.totalCrystal,1e230,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e240,x.ResourceGain,24,()=>M.AchievementString(23,0,"1e240"),()=>this.data.source.totalCrystal,1e240,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Crystal1e250,x.ResourceGain,25,()=>M.AchievementString(23,0,"1e250"),()=>this.data.source.totalCrystal,1e250,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e10,x.ResourceGain,1,()=>M.AchievementString(24,0,"1e10"),()=>this.data.source.totalLeaf,1e10,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e20,x.ResourceGain,2,()=>M.AchievementString(24,0,"1e20"),()=>this.data.source.totalLeaf,1e20,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e30,x.ResourceGain,3,()=>M.AchievementString(24,0,"1e30"),()=>this.data.source.totalLeaf,1e30,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e40,x.ResourceGain,4,()=>M.AchievementString(24,0,"1e40"),()=>this.data.source.totalLeaf,1e40,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e50,x.ResourceGain,5,()=>M.AchievementString(24,0,"1e50"),()=>this.data.source.totalLeaf,1e50,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e60,x.ResourceGain,6,()=>M.AchievementString(24,0,"1e60"),()=>this.data.source.totalLeaf,1e60,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e70,x.ResourceGain,7,()=>M.AchievementString(24,0,"1e70"),()=>this.data.source.totalLeaf,1e70,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e80,x.ResourceGain,8,()=>M.AchievementString(24,0,"1e80"),()=>this.data.source.totalLeaf,1e80,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e90,x.ResourceGain,9,()=>M.AchievementString(24,0,"1e90"),()=>this.data.source.totalLeaf,1e90,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e100,x.ResourceGain,10,()=>M.AchievementString(24,0,"1e100"),()=>this.data.source.totalLeaf,1e100,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e110,x.ResourceGain,11,()=>M.AchievementString(24,0,"1e110"),()=>this.data.source.totalLeaf,1e110,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e120,x.ResourceGain,12,()=>M.AchievementString(24,0,"1e120"),()=>this.data.source.totalLeaf,1e120,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e130,x.ResourceGain,13,()=>M.AchievementString(24,0,"1e130"),()=>this.data.source.totalLeaf,1e130,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e140,x.ResourceGain,14,()=>M.AchievementString(24,0,"1e140"),()=>this.data.source.totalLeaf,1e140,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e150,x.ResourceGain,15,()=>M.AchievementString(24,0,"1e150"),()=>this.data.source.totalLeaf,1e150,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e160,x.ResourceGain,16,()=>M.AchievementString(24,0,"1e160"),()=>this.data.source.totalLeaf,1e160,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e170,x.ResourceGain,17,()=>M.AchievementString(24,0,"1e170"),()=>this.data.source.totalLeaf,1e170,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e180,x.ResourceGain,18,()=>M.AchievementString(24,0,"1e180"),()=>this.data.source.totalLeaf,1e180,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e190,x.ResourceGain,19,()=>M.AchievementString(24,0,"1e190"),()=>this.data.source.totalLeaf,1e190,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e200,x.ResourceGain,20,()=>M.AchievementString(24,0,"1e200"),()=>this.data.source.totalLeaf,1e200,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e210,x.ResourceGain,21,()=>M.AchievementString(24,0,"1e210"),()=>this.data.source.totalLeaf,1e210,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e220,x.ResourceGain,22,()=>M.AchievementString(24,0,"1e220"),()=>this.data.source.totalLeaf,1e220,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e230,x.ResourceGain,23,()=>M.AchievementString(24,0,"1e230"),()=>this.data.source.totalLeaf,1e230,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e240,x.ResourceGain,24,()=>M.AchievementString(24,0,"1e240"),()=>this.data.source.totalLeaf,1e240,!0)),this.achievementListCurrency.push(_.Generic(this.data,G.Leaf1e250,x.ResourceGain,25,()=>M.AchievementString(24,0,"1e250"),()=>this.data.source.totalLeaf,1e250,!0)),this.achievementListAlchemy.push(_.Generic(this.data,G.PotionLv50,x.Essence,.01,()=>M.AchievementString(27,50),()=>this.data.potion.TotalPotionLevel(),50)),this.achievementListAlchemy.push(_.Generic(this.data,G.PotionLv250,x.Essence,.02,()=>M.AchievementString(27,250),()=>this.data.potion.TotalPotionLevel(),250)),this.achievementListAlchemy.push(_.Generic(this.data,G.PotionLv600,x.Essence,.03,()=>M.AchievementString(27,600),()=>this.data.potion.TotalPotionLevel(),600)),this.achievementListAlchemy.push(_.Generic(this.data,G.PotionLv1250,x.Essence,.04,()=>M.AchievementString(27,1250),()=>this.data.potion.TotalPotionLevel(),1250)),this.achievementListAlchemy.push(_.Generic(this.data,G.PotionLv2500,x.Essence,.05,()=>M.AchievementString(27,2500),()=>this.data.potion.TotalPotionLevel(),2500)),this.achievementListAlchemy.push(_.Generic(this.data,G.PotionLv3000,x.Essence,.06,()=>M.AchievementString(27,3e3),()=>this.data.potion.TotalPotionLevel(),3e3)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e11,x.GoldCap,.05,()=>M.AchievementString(28,0,"100B"),()=>this.data.source.totalAlchemyPointGained,1e11)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e12,x.GoldCap,.1,()=>M.AchievementString(28,0,"1e12"),()=>this.data.source.totalAlchemyPointGained,1e12)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e13,x.GoldCap,.15,()=>M.AchievementString(28,0,"1e13"),()=>this.data.source.totalAlchemyPointGained,1e13)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e14,x.GoldCap,.2,()=>M.AchievementString(28,0,"1e14"),()=>this.data.source.totalAlchemyPointGained,1e14)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e15,x.GoldCap,.25,()=>M.AchievementString(28,0,"1e15"),()=>this.data.source.totalAlchemyPointGained,1e15)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e16,x.GoldCap,.3,()=>M.AchievementString(28,0,"1e16"),()=>this.data.source.totalAlchemyPointGained,1e16)),this.achievementListAlchemy.push(_.Generic(this.data,G.AlchemyPoint1e17,x.GoldCap,.35,()=>M.AchievementString(28,0,"1e17"),()=>this.data.source.totalAlchemyPointGained,1e17)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e3,x.EquipmentDrop,.01,()=>M.AchievementString(29,1e3),()=>this.data.source.totalEquipmentGained,1e3)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e4,x.EquipmentDrop,.02,()=>M.AchievementString(29,1e4),()=>this.data.source.totalEquipmentGained,1e4)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e5,x.EquipmentDrop,.03,()=>M.AchievementString(29,1e5),()=>this.data.source.totalEquipmentGained,1e5)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e6,x.EquipmentDrop,.04,()=>M.AchievementString(29,1e6),()=>this.data.source.totalEquipmentGained,1e6)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e7,x.EquipmentDrop,.05,()=>M.AchievementString(29,1e7),()=>this.data.source.totalEquipmentGained,1e7)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e8,x.EquipmentDrop,.06,()=>M.AchievementString(29,1e8),()=>this.data.source.totalEquipmentGained,1e8)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e9,x.EquipmentDrop,.07,()=>M.AchievementString(29,1e9),()=>this.data.source.totalEquipmentGained,1e9)),this.achievementListEquip.push(_.Generic(this.data,G.EquipGain1e10,x.EquipmentDrop,.08,()=>M.AchievementString(29,1e10),()=>this.data.source.totalEquipmentGained,1e10)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon16Warrior,x.EquipmentProficiency,.1,()=>M.AchievementString(30,16,R[R.Warrior]),()=>this.data.inventory.equipWeaponUnlockedNum[0].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon16Wizard,x.EquipmentProficiency,.1,()=>M.AchievementString(30,16,R[R.Wizard]),()=>this.data.inventory.equipWeaponUnlockedNum[1].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon16Angel,x.EquipmentProficiency,.1,()=>M.AchievementString(30,16,R[R.Angel]),()=>this.data.inventory.equipWeaponUnlockedNum[2].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon16Thief,x.EquipmentProficiency,.1,()=>M.AchievementString(30,16,R[R.Thief]),()=>this.data.inventory.equipWeaponUnlockedNum[3].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon16Archer,x.EquipmentProficiency,.1,()=>M.AchievementString(30,16,R[R.Archer]),()=>this.data.inventory.equipWeaponUnlockedNum[4].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon16Tamer,x.EquipmentProficiency,.1,()=>M.AchievementString(30,16,R[R.Tamer]),()=>this.data.inventory.equipWeaponUnlockedNum[5].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon24Warrior,x.ArtifactProficiency,.1,()=>M.AchievementString(30,24,R[R.Warrior]),()=>this.data.inventory.equipWeaponUnlockedNum[0].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon24Wizard,x.ArtifactProficiency,.1,()=>M.AchievementString(30,24,R[R.Wizard]),()=>this.data.inventory.equipWeaponUnlockedNum[1].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon24Angel,x.ArtifactProficiency,.1,()=>M.AchievementString(30,24,R[R.Angel]),()=>this.data.inventory.equipWeaponUnlockedNum[2].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon24Thief,x.ArtifactProficiency,.1,()=>M.AchievementString(30,24,R[R.Thief]),()=>this.data.inventory.equipWeaponUnlockedNum[3].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon24Archer,x.ArtifactProficiency,.1,()=>M.AchievementString(30,24,R[R.Archer]),()=>this.data.inventory.equipWeaponUnlockedNum[4].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Weapon24Tamer,x.ArtifactProficiency,.1,()=>M.AchievementString(30,24,R[R.Tamer]),()=>this.data.inventory.equipWeaponUnlockedNum[5].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Armor16Warrior,x.EquipmentProficiency,.1,()=>M.AchievementString(31,16,R[R.Warrior]),()=>this.data.inventory.equipArmorUnlockedNum[0].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Armor16Wizard,x.EquipmentProficiency,.1,()=>M.AchievementString(31,16,R[R.Wizard]),()=>this.data.inventory.equipArmorUnlockedNum[1].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Armor16Angel,x.EquipmentProficiency,.1,()=>M.AchievementString(31,16,R[R.Angel]),()=>this.data.inventory.equipArmorUnlockedNum[2].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Armor16Thief,x.EquipmentProficiency,.1,()=>M.AchievementString(31,16,R[R.Thief]),()=>this.data.inventory.equipArmorUnlockedNum[3].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Armor16Archer,x.EquipmentProficiency,.1,()=>M.AchievementString(31,16,R[R.Archer]),()=>this.data.inventory.equipArmorUnlockedNum[4].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Armor16Tamer,x.EquipmentProficiency,.1,()=>M.AchievementString(31,16,R[R.Tamer]),()=>this.data.inventory.equipArmorUnlockedNum[5].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Armor24Warrior,x.ArtifactProficiency,.1,()=>M.AchievementString(31,24,R[R.Warrior]),()=>this.data.inventory.equipArmorUnlockedNum[0].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Armor24Wizard,x.ArtifactProficiency,.1,()=>M.AchievementString(31,24,R[R.Wizard]),()=>this.data.inventory.equipArmorUnlockedNum[1].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Armor24Angel,x.ArtifactProficiency,.1,()=>M.AchievementString(31,24,R[R.Angel]),()=>this.data.inventory.equipArmorUnlockedNum[2].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Armor24Thief,x.ArtifactProficiency,.1,()=>M.AchievementString(31,24,R[R.Thief]),()=>this.data.inventory.equipArmorUnlockedNum[3].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Armor24Archer,x.ArtifactProficiency,.1,()=>M.AchievementString(31,24,R[R.Archer]),()=>this.data.inventory.equipArmorUnlockedNum[4].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Armor24Tamer,x.ArtifactProficiency,.1,()=>M.AchievementString(31,24,R[R.Tamer]),()=>this.data.inventory.equipArmorUnlockedNum[5].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry16Warrior,x.EquipmentProficiency,.1,()=>M.AchievementString(32,16,R[R.Warrior]),()=>this.data.inventory.equipJewelryUnlockedNum[0].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry16Wizard,x.EquipmentProficiency,.1,()=>M.AchievementString(32,16,R[R.Wizard]),()=>this.data.inventory.equipJewelryUnlockedNum[1].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry16Angel,x.EquipmentProficiency,.1,()=>M.AchievementString(32,16,R[R.Angel]),()=>this.data.inventory.equipJewelryUnlockedNum[2].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry16Thief,x.EquipmentProficiency,.1,()=>M.AchievementString(32,16,R[R.Thief]),()=>this.data.inventory.equipJewelryUnlockedNum[3].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry16Archer,x.EquipmentProficiency,.1,()=>M.AchievementString(32,16,R[R.Archer]),()=>this.data.inventory.equipJewelryUnlockedNum[4].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry16Tamer,x.EquipmentProficiency,.1,()=>M.AchievementString(32,16,R[R.Tamer]),()=>this.data.inventory.equipJewelryUnlockedNum[5].Value(),16)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry24Warrior,x.ArtifactProficiency,.1,()=>M.AchievementString(32,24,R[R.Warrior]),()=>this.data.inventory.equipJewelryUnlockedNum[0].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry24Wizard,x.ArtifactProficiency,.1,()=>M.AchievementString(32,24,R[R.Wizard]),()=>this.data.inventory.equipJewelryUnlockedNum[1].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry24Angel,x.ArtifactProficiency,.1,()=>M.AchievementString(32,24,R[R.Angel]),()=>this.data.inventory.equipJewelryUnlockedNum[2].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry24Thief,x.ArtifactProficiency,.1,()=>M.AchievementString(32,24,R[R.Thief]),()=>this.data.inventory.equipJewelryUnlockedNum[3].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry24Archer,x.ArtifactProficiency,.1,()=>M.AchievementString(32,24,R[R.Archer]),()=>this.data.inventory.equipJewelryUnlockedNum[4].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Jewelry24Tamer,x.ArtifactProficiency,.1,()=>M.AchievementString(32,24,R[R.Tamer]),()=>this.data.inventory.equipJewelryUnlockedNum[5].Value(),24)),this.achievementListEquip.push(_.Generic(this.data,G.Utility6Warrior,x.EquipmentProficiency,.1,()=>M.AchievementString(33,6,R[R.Warrior]),()=>this.data.inventory.equipPotionUnlockedNum[0].Value(),6)),this.achievementListEquip.push(_.Generic(this.data,G.Utility6Wizard,x.EquipmentProficiency,.1,()=>M.AchievementString(33,6,R[R.Wizard]),()=>this.data.inventory.equipPotionUnlockedNum[1].Value(),6)),this.achievementListEquip.push(_.Generic(this.data,G.Utility6Angel,x.EquipmentProficiency,.1,()=>M.AchievementString(33,6,R[R.Angel]),()=>this.data.inventory.equipPotionUnlockedNum[2].Value(),6)),this.achievementListEquip.push(_.Generic(this.data,G.Utility6Thief,x.EquipmentProficiency,.1,()=>M.AchievementString(33,6,R[R.Thief]),()=>this.data.inventory.equipPotionUnlockedNum[3].Value(),6)),this.achievementListEquip.push(_.Generic(this.data,G.Utility6Archer,x.EquipmentProficiency,.1,()=>M.AchievementString(33,6,R[R.Archer]),()=>this.data.inventory.equipPotionUnlockedNum[4].Value(),6)),this.achievementListEquip.push(_.Generic(this.data,G.Utility6Tamer,x.EquipmentProficiency,.1,()=>M.AchievementString(33,6,R[R.Tamer]),()=>this.data.inventory.equipPotionUnlockedNum[5].Value(),6)),this.achievementListSkill.push(_.Generic(this.data,G.ClassSkill8Warrior,x.SkillProficiency,.2,()=>M.AchievementString(34,8,R[R.Warrior]),()=>this.data.stats.SkillSlotNum(R.Warrior).Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.ClassSkill8Wizard,x.SkillProficiency,.2,()=>M.AchievementString(34,8,R[R.Wizard]),()=>this.data.stats.SkillSlotNum(R.Wizard).Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.ClassSkill8Angel,x.SkillProficiency,.2,()=>M.AchievementString(34,8,R[R.Angel]),()=>this.data.stats.SkillSlotNum(R.Angel).Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.ClassSkill8Thief,x.SkillProficiency,.2,()=>M.AchievementString(34,8,R[R.Thief]),()=>this.data.stats.SkillSlotNum(R.Thief).Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.ClassSkill8Archer,x.SkillProficiency,.2,()=>M.AchievementString(34,8,R[R.Archer]),()=>this.data.stats.SkillSlotNum(R.Archer).Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.ClassSkill8Tamer,x.SkillProficiency,.2,()=>M.AchievementString(34,8,R[R.Tamer]),()=>this.data.stats.SkillSlotNum(R.Tamer).Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.GlobalSkill8,x.SkillProficiency,.5,()=>M.AchievementString(35),()=>this.data.stats.globalSkillSlotNum.Value(),8)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e4,x.SkillProficiency,.05,()=>M.AchievementString(44,1e4),()=>this.data.skill.TotalTriggeredNum(),1e4)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e5,x.SkillProficiency,.1,()=>M.AchievementString(44,1e5),()=>this.data.skill.TotalTriggeredNum(),1e5)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e6,x.SkillProficiency,.15,()=>M.AchievementString(44,1e6),()=>this.data.skill.TotalTriggeredNum(),1e6)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e7,x.SkillProficiency,.2,()=>M.AchievementString(44,1e7),()=>this.data.skill.TotalTriggeredNum(),1e7)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e8,x.SkillProficiency,.25,()=>M.AchievementString(44,1e8),()=>this.data.skill.TotalTriggeredNum(),1e8)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e9,x.SkillProficiency,.3,()=>M.AchievementString(44,1e9),()=>this.data.skill.TotalTriggeredNum(),1e9)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e10,x.SkillProficiency,.35,()=>M.AchievementString(44,1e10),()=>this.data.skill.TotalTriggeredNum(),1e10)),this.achievementListSkill.push(_.Generic(this.data,G.Skill1e11,x.SkillProficiency,.4,()=>M.AchievementString(44,1e11),()=>this.data.skill.TotalTriggeredNum(),1e11)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime1day,x.ExpGain,.01,()=>M.AchievementString(38,1),()=>this.data.source.allTime,86400)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime2day,x.ExpGain,.02,()=>M.AchievementString(38,2),()=>this.data.source.allTime,172800)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime3day,x.ExpGain,.03,()=>M.AchievementString(38,3),()=>this.data.source.allTime,259200)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime4day,x.ExpGain,.04,()=>M.AchievementString(38,4),()=>this.data.source.allTime,345600)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime5day,x.ExpGain,.05,()=>M.AchievementString(38,5),()=>this.data.source.allTime,432e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime1week,x.ExpGain,.06,()=>M.AchievementString(39,1),()=>this.data.source.allTime,604800)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime2week,x.ExpGain,.07,()=>M.AchievementString(39,2),()=>this.data.source.allTime,1209600)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime3week,x.ExpGain,.08,()=>M.AchievementString(39,3),()=>this.data.source.allTime,1814400)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime1month,x.ExpGain,.1,()=>M.AchievementString(40,1),()=>this.data.source.allTime,2592e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime2month,x.ExpGain,.15,()=>M.AchievementString(40,2),()=>this.data.source.allTime,5184e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime3month,x.ExpGain,.2,()=>M.AchievementString(40,3),()=>this.data.source.allTime,7776e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime4month,x.ExpGain,.25,()=>M.AchievementString(40,4),()=>this.data.source.allTime,10368e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime5month,x.ExpGain,.3,()=>M.AchievementString(40,5),()=>this.data.source.allTime,1296e4)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime6month,x.ExpGain,.35,()=>M.AchievementString(40,6),()=>this.data.source.allTime,15552e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime7month,x.ExpGain,.4,()=>M.AchievementString(40,7),()=>this.data.source.allTime,18144e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime8month,x.ExpGain,.45,()=>M.AchievementString(40,8),()=>this.data.source.allTime,20736e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime9month,x.ExpGain,.5,()=>M.AchievementString(40,9),()=>this.data.source.allTime,23328e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime10month,x.ExpGain,.55,()=>M.AchievementString(40,10),()=>this.data.source.allTime,2592e4)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime11month,x.ExpGain,.6,()=>M.AchievementString(40,11),()=>this.data.source.allTime,28512e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime1year,x.ExpGain,1,()=>M.AchievementString(41,1),()=>this.data.source.allTime,31536e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime2year,x.ExpGain,1.5,()=>M.AchievementString(41,2),()=>this.data.source.allTime,63072e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime3year,x.ExpGain,2,()=>M.AchievementString(41,3),()=>this.data.source.allTime,94608e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime4year,x.ExpGain,2.5,()=>M.AchievementString(41,4),()=>this.data.source.allTime,126144e3)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime5year,x.ExpGain,3,()=>M.AchievementString(41,5),()=>this.data.source.allTime,15768e4)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime10year,x.ExpGain,5,()=>M.AchievementString(41,10),()=>this.data.source.allTime,31536e4)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime15year,x.ExpGain,7.5,()=>M.AchievementString(41,15),()=>this.data.source.allTime,47304e4)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime20year,x.ExpGain,10,()=>M.AchievementString(41,20),()=>this.data.source.allTime,63072e4)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime25year,x.ExpGain,12.5,()=>M.AchievementString(41,25),()=>this.data.source.allTime,7884e5)),this.achievementListPlaytime.push(_.Generic(this.data,G.Playtime30year,x.ExpGain,15,()=>M.AchievementString(41,30),()=>this.data.source.allTime,94608e4)),this.achievementList=[...this.achievementListAlchemy,...this.achievementListArea,...this.achievementListChallenge,...this.achievementListCurrency,...this.achievementListEquip,...this.achievementListGeneral,...this.achievementListGuild,...this.achievementListNumber,...this.achievementListPlaytime,...this.achievementListRebirth,...this.achievementListSkill]}Start(){this.SetAchievement();for(let t=0;t<this.achievementList.length;t++)this.achievementList[t].Start();this.data.stats.GoldGain().RegisterMultiplier(new u(n.Achievement,s.Mul,()=>this.GoldGainBonus()))}GoldGainBonus(){return this.TotalClearNum()*.01}Achievement(t){for(let i=0;i<this.achievementList.length;i++)if(this.achievementList[i].kind==t)return this.achievementList[i];return this.achievementList[0]}IsAchievedAnyHeroRebirth(t){switch(t){case 0:return this.Achievement(G.Rebirth1Warrior).isCleared||this.Achievement(G.Rebirth1Wizard).isCleared||this.Achievement(G.Rebirth1Angel).isCleared||this.Achievement(G.Rebirth1Thief).isCleared||this.Achievement(G.Rebirth1Archer).isCleared||this.Achievement(G.Rebirth1Tamer).isCleared;case 1:return this.Achievement(G.Rebirth2Warrior).isCleared||this.Achievement(G.Rebirth2Wizard).isCleared||this.Achievement(G.Rebirth2Angel).isCleared||this.Achievement(G.Rebirth2Thief).isCleared||this.Achievement(G.Rebirth2Archer).isCleared||this.Achievement(G.Rebirth2Tamer).isCleared;case 2:return this.Achievement(G.Rebirth3Warrior).isCleared||this.Achievement(G.Rebirth3Wizard).isCleared||this.Achievement(G.Rebirth3Angel).isCleared||this.Achievement(G.Rebirth3Thief).isCleared||this.Achievement(G.Rebirth3Archer).isCleared||this.Achievement(G.Rebirth3Tamer).isCleared;case 3:return this.Achievement(G.Rebirth4Warrior).isCleared||this.Achievement(G.Rebirth4Wizard).isCleared||this.Achievement(G.Rebirth4Angel).isCleared||this.Achievement(G.Rebirth4Thief).isCleared||this.Achievement(G.Rebirth4Archer).isCleared||this.Achievement(G.Rebirth4Tamer).isCleared;case 4:return this.Achievement(G.Rebirth5Warrior).isCleared||this.Achievement(G.Rebirth5Wizard).isCleared||this.Achievement(G.Rebirth5Angel).isCleared||this.Achievement(G.Rebirth5Thief).isCleared||this.Achievement(G.Rebirth5Archer).isCleared||this.Achievement(G.Rebirth5Tamer).isCleared;case 5:return this.Achievement(G.Rebirth6Warrior).isCleared||this.Achievement(G.Rebirth6Wizard).isCleared||this.Achievement(G.Rebirth6Angel).isCleared||this.Achievement(G.Rebirth6Thief).isCleared||this.Achievement(G.Rebirth6Archer).isCleared||this.Achievement(G.Rebirth6Tamer).isCleared;default:return!1}}TotalClearNum(){let t=0;for(let i=0;i<this.achievementList.length;i++)this.achievementList[i].isCleared&&t++;return t}CheckAchieve(){for(let t=0;t<this.achievementList.length;t++)this.achievementList[t].CheckAchieve()}CanClaimReward(){for(let t=0;t<this.achievementList.length;t++)if(this.achievementList[t].CanClaimRewad())return!0;return!1}ClaimReward(){for(let t=0;t<this.achievementList.length;t++)this.achievementList[t].ClaimReward()}}class Hh{constructor(t){o(this,"source");o(this,"ascension");o(this,"achievement");o(this,"skill");o(this,"potion");o(this,"alchemy");o(this,"epicStore");o(this,"expedition");o(this,"town");o(this,"stats");o(this,"area");o(this,"battles",Array(W.HeroKind));o(this,"superStats");o(this,"guild");o(this,"monster");o(this,"resource");o(this,"equipment");o(this,"craft");o(this,"quest");o(this,"inventory");o(this,"challenge");o(this,"shop");o(this,"rebirth");o(this,"blessingInfo");o(this,"mission");o(this,"sdg");o(this,"nitro");o(this,"upgrade");o(this,"requireUpdate",nt(!1));this.source=t,this.guild=new MC(this),this.potion=new rP(this),this.challenge=new nC(this),this.rebirth=new nP(this),this.alchemy=new H5,this.shop=new hP,this.craft=new uC,this.blessingInfo=new dR(this),this.town=new Lb(this),this.resource=new uP,this.area=new q5(this),this.ascension=new AT(this),this.mission=new TC(this),this.stats=new DD(this),this.expedition=new mC(this),this.equipment=new dC(this),this.inventory=new bC(this),this.monster=new BC(this),this.sdg=new cb(this),this.nitro=new xC,this.superStats=new pb(this),this.quest=new lP(this),this.epicStore=new hC(this),this.upgrade=new sT(this),this.achievement=new RT(this),this.skill=new RD(this);for(let i=0;i<this.battles.length;i++)this.battles[i]=new fR(this,i);this.Start(),this.Initialize()}get battle(){return this.battles[this.source.currentHero]}Start(){this.challenge.Start(),this.expedition.Start(),this.potion.Start(),this.town.Start(),this.ascension.Start(),this.mission.Start(),this.guild.Start(),this.monster.Start(),this.sdg.Start(),this.superStats.Start(),this.quest.Start(),this.rebirth.Start(),this.upgrade.Start(),this.epicStore.Start(),this.blessingInfo.Start(),this.equipment.Start(),this.inventory.Start(),this.stats.Start(),this.achievement.Start(),this.skill.Start();for(let t=0;t<this.battles.length;t++)this.battles[t].Start();this.SuperDungeonToggle()}Initialize(){for(let t=0;t<this.battles.length;t++)this.battles[t].skillSet.Initialize()}SuperDungeonToggle(){for(let t=0;t<W.HeroKind;t++){const i=this.source.isSuperDungeon;this.skill.isLog[t]=i,this.skill.skillLevelBonus[t].isLog=i,this.skill.skillRangeMultiplier[t].isLog=i,this.skill.skillEffectRangeMultiplier[t].isLog=i,this.stats.heroes[t].stats[5].isLog=i,this.stats.heroes[t].stats[6].isLog=i,this.stats.heroes[t].stats[7].isLog=i,this.stats.heroes[t].stats[8].isLog=i,this.stats.heroes[t].stats[9].isLog=i,this.stats.heroes[t].stats[10].isLog=i,this.stats.heroes[t].hpRegenerate.isLog=i,this.stats.heroes[t].mpRegenerate.isLog=i;for(let r=0;r<W.BasicStatsKind;r++)this.stats.heroes[t].basicStats[r].isLog=i;for(let r=0;r<W.Element;r++)this.stats.heroes[t].elementDamages[r].isLog=i;for(let r=0;r<W.Element-1;r++)this.stats.heroes[t].stats[r].isLog=i;for(let r=0;r<W.Element;r++)this.stats.heroes[t].elementAbsoptions[r].isLog=i;for(let r=0;r<W.Element;r++)this.stats.heroes[t].elementInvalids[r].isLog=i;for(let r=0;r<W.MonsterSpecies;r++)this.stats.heroes[t].monsterDamages[r].isLog=i}}Update(){this.requireUpdate.value=!1}}const uu="SaveFileSnapshot",CT=new Eh,LT=Tr(uu,{state:()=>Jl(uu,CT,localStorage,{mergeDefaults:!0})}),PT=l5({history:Up()}),za=ff(F5),DT=Sf();za.use(PT);za.use(DT);const qh=new Hh(Sl()),Nh=new Hh(LT()),Wh=new _5(qh,Nh);globalThis.Game=Wh;globalThis.globalStore=Pi();globalThis.SaveFileData=qh;globalThis.SaveFileSnapshot=Nh;za.config.performance=!0;za.provide("game",Wh);za.mount("#app");
