import{d as S,o as v,c as _,a as c,h as s,O as R,u as e,b as t,F as h,f as T,v as d,t as r,i as C,L as V,U as f}from"./index-AWyZn4a2.js";import{u as k}from"./global-s3q1fPJx.js";const x=["selected","value"],U=t("td",null,"Failure Rate %",-1),D=t("td",null,"Tickets",-1),M=t("td",null,"Reset Value",-1),z=t("td",null,"Portal Orb Cost",-1),A=t("td",null,"Runs",-1),L=t("td",null,"Ruby Shard per Dungeon",-1),w=t("td",null,"Total Ruby Shards",-1),E=t("td",null,"Ruby Converter",-1),F=t("td",null,"Total Ruby",-1),N=t("hr",null,null,-1),G=S({__name:"ruby-shard",setup(B){const i=C("game"),o=k().rubyShard;function p(){let u=0;for(;i.data.source.SDAutoLeaveAndRetryTargetEntryCost>Math.pow(2,u);)u++;return u}function g(){let u=p(),l=0;for(let n=0;n<u;n++)l+=Math.pow(2,n)*5;return l}function m(){let u=0;for(let l=1;l<Math.floor(o.floor/10)+1;l++){let a=(l*10/10+o.modifier)*(1+o.dungeon);u+=a}return u}function y(){const u=p()*5*o.ticket*m();return u-u*o.failure/100}const b=i.data.sdg.shopCtrl.rubyConverterPieceOfRubyCost.Value();return(u,l)=>(v(),_(h,null,[c(" Dungeon: "),s(t("select",{"onUpdate:modelValue":l[0]||(l[0]=n=>e(o).dungeon=n)},[(v(),_(h,null,T(5,(n,a)=>t("option",{selected:e(o).dungeon==a,value:a},r(e(V).SDName(a)),9,x)),64))],512),[[R,e(o).dungeon,void 0,{number:!0}]]),c(" Modifier: "),s(t("input",{type:"text",size:"8","onUpdate:modelValue":l[1]||(l[1]=n=>e(o).modifier=n)},null,512),[[d,e(o).modifier,void 0,{number:!0}]]),c(" Floors Cleared: "),s(t("input",{type:"text",size:"8","onUpdate:modelValue":l[2]||(l[2]=n=>e(o).floor=n)},null,512),[[d,e(o).floor,void 0,{number:!0}]]),t("table",null,[t("tr",null,[U,t("td",null,[s(t("input",{type:"text",size:"8","onUpdate:modelValue":l[3]||(l[3]=n=>e(o).failure=n)},null,512),[[d,e(o).failure,void 0,{number:!0}]]),c(" (Total Ruby Shards = Total Ruby Shards - Total Ruby Shards * failure rate)")])]),t("tr",null,[D,t("td",null,[s(t("input",{type:"text",size:"8","onUpdate:modelValue":l[4]||(l[4]=n=>e(o).ticket=n)},null,512),[[d,e(o).ticket,void 0,{number:!0}]])])]),t("tr",null,[M,t("td",null,[s(t("input",{type:"text",size:"8","onUpdate:modelValue":l[5]||(l[5]=n=>e(i).data.source.SDAutoLeaveAndRetryTargetEntryCost=n)},null,512),[[d,e(i).data.source.SDAutoLeaveAndRetryTargetEntryCost,void 0,{number:!0}]])])]),t("tr",null,[z,t("td",null,r(e(f).convertTo(g()*e(o).ticket)),1)]),t("tr",null,[A,t("td",null,r(p()*5*e(o).ticket),1)]),t("tr",null,[L,t("td",null,r(m()),1)]),t("tr",null,[w,t("td",null,r(e(f).convertTo(y(),3)),1)]),t("tr",null,[E,t("td",null,r(e(f).convertTo(e(b))),1)]),t("tr",null,[F,t("td",null,r(Math.floor(y()/e(b))),1)])]),N],64))}});export{G as default};
